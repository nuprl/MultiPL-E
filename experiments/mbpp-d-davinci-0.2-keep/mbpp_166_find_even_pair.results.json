{
  "name": "mbpp_166_find_even_pair",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_166_find_even_pair.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i + 1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach (i; 0 .. A.length)\n\t{\n\t\tforeach (j; i + 1 .. A.length)\n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i + 1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong even_pair = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\teven_pair++;\n\t\t\t}\n\t\t}\n\t}\n\treturn even_pair;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprssiyvjg.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x42816d]\n??:? void tmprssiyvjg.__unittest_L23_C1() [0x427e22]\n??:? void tmprssiyvjg.__modtest() [0x427eec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1cb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b05e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301f1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306a0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x43017d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b035]\n??:? runModuleUnitTests [0x42bfa1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428630]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0..A.length)\n\t{\n\t\tforeach(j; i+1..A.length)\n\t\t{\n\t\t\tif(A[i] ^ A[j] % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "/tmp/tmpbjw1a4pj.d(15): Error: `A[j] % 2 == 0` must be parenthesized when next to operator `^`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbjw1a4pj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i + 1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i, a; A)\n\t{\n\t\tforeach(j, b; A[i+1..$])\n\t\t{\n\t\t\tif((a ^ b) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i + 1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tfor (size_t i = 0; i < A.length; i++)\n\t{\n\t\tfor (size_t j = i + 1; j < A.length; j++)\n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666122760,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i + 1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i, a; A)\n\t{\n\t\tforeach(j, b; A[i+1 .. $])\n\t\t{\n\t\t\tif((a ^ b) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666122760,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i, a; A)\n\t{\n\t\tforeach(j, b; A[i+1..$])\n\t\t{\n\t\t\tif((a ^ b) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i + 1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i + 1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i + 1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i, a; A)\n\t{\n\t\tforeach(j, b; A[i+1..$])\n\t\t{\n\t\t\tif((a ^ b) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i, a; A)\n\t{\n\t\tforeach(j, b; A[i+1 .. $])\n\t\t{\n\t\t\tif((a ^ b) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666122760,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i + 1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i + 1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i, a; A)\n\t{\n\t\tforeach(j, b; A[i+1..$])\n\t\t{\n\t\t\tif((a ^ b) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong result = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tresult++;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666122760,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0..A.length)\n\t{\n\t\tforeach(j; i+1..A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666122760,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i + 1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i + 1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tauto even_pair = 0L;\n\tforeach(i, a; A)\n\t{\n\t\tforeach(j, b; A)\n\t\t{\n\t\t\tif(i != j && (a ^ b) % 2 == 0)\n\t\t\t{\n\t\t\t\teven_pair++;\n\t\t\t}\n\t\t}\n\t}\n\treturn even_pair;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666122760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpma0m8b_e.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428165]\n??:? void tmpma0m8b_e.__unittest_L23_C1() [0x427e1a]\n??:? void tmpma0m8b_e.__modtest() [0x427ee4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c14f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42afe2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430175]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430624]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430101]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afb9]\n??:? runModuleUnitTests [0x42bf25]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i, a; A)\n\t{\n\t\tforeach(j, b; A)\n\t\t{\n\t\t\tif(i != j && (a ^ b) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666122760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpa9ahugat.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428165]\n??:? void tmpa9ahugat.__unittest_L23_C1() [0x427e1a]\n??:? void tmpa9ahugat.__modtest() [0x427ee4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c14f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42afe2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430175]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430624]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430101]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afb9]\n??:? runModuleUnitTests [0x42bf25]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285b4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope void delegate()) [0x42853b]\n??:? _d_run_main [0x4284a6]\n??:? main [0x427ef7]\n??:? __libc_start_main [0xa681f554]\n1/1 unittests FAILED\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i + 1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i + 1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0..A.length)\n\t{\n\t\tforeach(j; i+1..A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666122760,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i + 1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i, a; A)\n\t{\n\t\tforeach(j, b; A)\n\t\t{\n\t\t\tif(i != j && (a ^ b) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666122760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzr7a7x_o.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x428165]\n??:? void tmpzr7a7x_o.__unittest_L21_C1() [0x427e1a]\n??:? void tmpzr7a7x_o.__modtest() [0x427ee4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c14f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42afe2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430175]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430624]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430101]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afb9]\n??:? runModuleUnitTests [0x42bf25]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i + 1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i + 1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i + 1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i, a; A)\n\t{\n\t\tforeach(j, b; A[i+1 .. $])\n\t\t{\n\t\t\tif((a ^ b) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666122760,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach (i; 0 .. A.length)\n\t{\n\t\tforeach (j; i + 1 .. A.length)\n\t\t{\n\t\t\tif (A[i] ^ A[j] % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666122760,
      "stdout": "",
      "stderr": "/tmp/tmpm0im31k1.d(15): Error: `A[j] % 2 == 0` must be parenthesized when next to operator `^`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm0im31k1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i;0..A.length)\n\t{\n\t\tforeach(j;i+1..A.length)\n\t\t{\n\t\t\tif((A[i]^A[j])%2==0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666122760,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i + 1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0..A.length)\n\t{\n\t\tforeach(j; i+1..A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666122760,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i + 1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i]^A[j])%2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666122760,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong result = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tresult++;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666122760,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0..A.length)\n\t{\n\t\tforeach(j; i+1..A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666122760,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666122760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpule5itmd.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x42816d]\n??:? void tmpule5itmd.__unittest_L23_C1() [0x427e22]\n??:? void tmpule5itmd.__modtest() [0x427eec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1cb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b05e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301f1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306a0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x43017d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b035]\n??:? runModuleUnitTests [0x42bfa1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428630]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i]^A[j])%2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666122760,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i + 1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i + 1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i + 1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i + 1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i + 1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i]^A[j])%2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666122760,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tfor (int i = 0; i < A.length; i++)\n\t{\n\t\tfor (int j = i + 1; j < A.length; j++)\n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666122760,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i + 1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i, a; A)\n\t{\n\t\tforeach(j, b; A)\n\t\t{\n\t\t\tif(i == j) continue;\n\t\t\tif((a ^ b) % 2 == 0) count++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666122760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpa8mff3yp.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x428165]\n??:? void tmpa8mff3yp.__unittest_L21_C1() [0x427e1a]\n??:? void tmpa8mff3yp.__modtest() [0x427ee4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c14f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42afe2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430175]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430624]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430101]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afb9]\n??:? runModuleUnitTests [0x42bf25]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i, a; A)\n\t{\n\t\tforeach(j, b; A)\n\t\t{\n\t\t\tif(i != j)\n\t\t\t{\n\t\t\t\tif((a ^ b) % 2 == 0)\n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666122760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpena8wg1y.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x42816d]\n??:? void tmpena8wg1y.__unittest_L26_C1() [0x427e22]\n??:? void tmpena8wg1y.__modtest() [0x427eec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c157]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42afea]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43017d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43062c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430109]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afc1]\n??:? runModuleUnitTests [0x42bf2d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285bc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(a; A)\n\t{\n\t\tforeach(b; A)\n\t\t{\n\t\t\tif((a ^ b) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666122760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcvb_kxc9.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x42814d]\n??:? void tmpcvb_kxc9.__unittest_L21_C1() [0x427e06]\n??:? void tmpcvb_kxc9.__modtest() [0x427ed0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c137]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42afca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43015d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43060c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4300e9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afa1]\n??:? runModuleUnitTests [0x42bf0d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42859c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i + 1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i, a; A)\n\t{\n\t\tforeach(j, b; A[i+1..$])\n\t\t{\n\t\t\tif((a ^ b) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong even_pair = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\teven_pair++;\n\t\t\t}\n\t\t}\n\t}\n\treturn even_pair;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666122760,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i + 1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0..A.length)\n\t{\n\t\tforeach(j; i+1..A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666122760,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i + 1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i + 1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i + 1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0..A.length)\n\t{\n\t\tforeach(j; i+1..A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666122760,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i + 1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i + 1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i + 1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i, a; A)\n\t{\n\t\tforeach(j, b; A[i+1..$])\n\t\t{\n\t\t\tif((a ^ b) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666122760,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i;0..A.length)\n\t{\n\t\tforeach(j;i+1..A.length)\n\t\t{\n\t\t\tif((A[i]^A[j])%2==0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666122760,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i, a; A)\n\t{\n\t\tforeach(j, b; A[i+1 .. $])\n\t\t{\n\t\t\tif((a ^ b) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666122760,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666122760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpule5itmd.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x42816d]\n??:? void tmpule5itmd.__unittest_L23_C1() [0x427e22]\n??:? void tmpule5itmd.__modtest() [0x427eec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1cb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b05e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301f1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306a0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x43017d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b035]\n??:? runModuleUnitTests [0x42bfa1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428630]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif(A[i] ^ A[j] % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666122760,
      "stdout": "",
      "stderr": "/tmp/tmp2jww1sqd.d(15): Error: `A[j] % 2 == 0` must be parenthesized when next to operator `^`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2jww1sqd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong even_pairs = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i + 1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\teven_pairs++;\n\t\t\t}\n\t\t}\n\t}\n\treturn even_pairs;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666122760,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i + 1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i + 1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i, a; A)\n\t{\n\t\tforeach(j, b; A[i+1..$])\n\t\t{\n\t\t\tif((a ^ b) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666122760,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666122760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpule5itmd.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x42816d]\n??:? void tmpule5itmd.__unittest_L23_C1() [0x427e22]\n??:? void tmpule5itmd.__modtest() [0x427eec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1cb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b05e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301f1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306a0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x43017d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b035]\n??:? runModuleUnitTests [0x42bfa1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428630]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i + 1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i, a; A)\n\t{\n\t\tforeach(j, b; A[i+1..$])\n\t\t{\n\t\t\tif((a ^ b) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tfor (size_t i = 0; i < A.length; i++)\n\t{\n\t\tfor (size_t j = i + 1; j < A.length; j++)\n\t\t{\n\t\t\tif ((A[i] ^ A[j]) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666122760,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i + 1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i + 1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i + 1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i + 1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i + 1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1665517407,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong even_pairs = 0;\n\tforeach(i; 0 .. A.length)\n\t{\n\t\tforeach(j; i+1 .. A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\teven_pairs++;\n\t\t\t}\n\t\t}\n\t}\n\treturn even_pairs;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666122760,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that counts the number of pairs of integers in a list that xor to an even number.\n\t\n*/\nlong find_even_pair(long[] A) \n{\n\tlong count = 0;\n\tforeach(i; 0..A.length)\n\t{\n\t\tforeach(j; i+1..A.length)\n\t\t{\n\t\t\tif((A[i] ^ A[j]) % 2 == 0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = find_even_pair;\n\n    assert(candidate([5L, 4L, 7L, 2L, 1L]) == 4L);\n    assert(candidate([7L, 2L, 8L, 1L, 0L, 5L, 11L]) == 9L);\n    assert(candidate([1L, 2L, 3L]) == 1L);\n}\nvoid main(){}",
      "timestamp": 1666122760,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
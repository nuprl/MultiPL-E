{
  "name": "mbpp_633_pair_xor_Sum",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_633_pair_xor_Sum.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0h70730b.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmp0h70730b.__unittest_L16_C1() [0x427dea]\n??:? void tmp0h70730b.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0h70730b.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmp0h70730b.__unittest_L16_C1() [0x427dea]\n??:? void tmp0h70730b.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += arr[i] ^ arr[j]; \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += arr[i] ^ arr[j]; \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += arr[i] ^ arr[j]; \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long res = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            res += arr[i] ^ arr[j]; \n    return res; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0h70730b.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmp0h70730b.__unittest_L16_C1() [0x427dea]\n??:? void tmp0h70730b.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += arr[i] ^ arr[j]; \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long res = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            res += (arr[i] ^ arr[j]); \n    return res; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += arr[i] ^ arr[j]; \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long res = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            res += (arr[i] ^ arr[j]); \n    return res; \n} \n/*\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n*/\nlong pair_xor_Sum2(long[] arr, long n) \n{ \n    long res = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            res += (arr[i] ^ arr[j]); \n    return res; \n} \n/*\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n*/\nlong pair_xor_Sum3(long[] arr, long n) \n{ \n    long res = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            res += (arr[i] ^ arr[j]); \n    return res * 2; \n} \n/*\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n*/\nlong pair_xor_Sum4(long[] arr, long n) \n{ \n    long res = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            res += (arr[i] ^ arr[j]); \n    return res * 2; \n} \n/*\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n*/\nlong pair_xor_Sum5(long[] arr, long n) \n{ \n    long res = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            res += (arr[i]\nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123087,
      "stdout": "",
      "stderr": "/tmp/tmp9j9wauk6.d(57): Error: found `unittest` when expecting `)`\n/tmp/tmp9j9wauk6.d(59): Error: found `{` when expecting `;` following statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9j9wauk6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0h70730b.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmp0h70730b.__unittest_L16_C1() [0x427dea]\n??:? void tmp0h70730b.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n  \n    // Traverse through all numbers \n    for (long i = 0; i < n; i++) { \n  \n        // XOR current element with every other element \n        for (long j = i + 1; j < n; j++) \n            ans += arr[i] ^ arr[j]; \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123088,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n  \n    // Traverse through all numbers \n    for (long i = 0; i < n; i++) \n    { \n        // XOR with every other element \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    } \n  \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123088,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n  \n    // Traverse through all numbers \n    for (long i = 0; i < n; i++) \n    { \n        // XOR with every other element \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    } \n  \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123088,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += arr[i] ^ arr[j]; \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0h70730b.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmp0h70730b.__unittest_L16_C1() [0x427dea]\n??:? void tmp0h70730b.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += arr[i] ^ arr[j]; \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += arr[i] ^ arr[j]; \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0h70730b.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmp0h70730b.__unittest_L16_C1() [0x427dea]\n??:? void tmp0h70730b.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += arr[i] ^ arr[j]; \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += arr[i] ^ arr[j]; \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += arr[i] ^ arr[j]; \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123088,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long res = 0; \n    for (long i = 0; i < n; i++) \n    { \n        for (long j = i + 1; j < n; j++) \n        { \n            res += (arr[i] ^ arr[j]); \n        } \n    } \n    return res; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123088,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) { \n        for (long j = 0; j < n; j++) { \n            ans += (arr[i] ^ arr[j]); \n        } \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123088,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpdjlq4wz4.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmpdjlq4wz4.__unittest_L18_C1() [0x427dea]\n??:? void tmpdjlq4wz4.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0h70730b.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmp0h70730b.__unittest_L16_C1() [0x427dea]\n??:? void tmp0h70730b.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0h70730b.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmp0h70730b.__unittest_L16_C1() [0x427dea]\n??:? void tmp0h70730b.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0h70730b.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmp0h70730b.__unittest_L16_C1() [0x427dea]\n??:? void tmp0h70730b.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n\tlong ans = 0; \n\tfor (long i = 0; i < n; i++) \n\t\tfor (long j = 0; j < n; j++) \n\t\t\tans += (arr[i] ^ arr[j]); \n\treturn ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123088,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpsxjfgl4g.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmpsxjfgl4g.__unittest_L16_C1() [0x427dea]\n??:? void tmpsxjfgl4g.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n  \n    // Iterate through all numbers \n    for (long i = 0; i < n; i++) \n    { \n        // XOR with every other element \n        for (long j = i + 1; j < n; j++) \n            ans += arr[i] ^ arr[j]; \n    } \n  \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123088,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += arr[i] ^ arr[j]; \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0h70730b.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmp0h70730b.__unittest_L16_C1() [0x427dea]\n??:? void tmp0h70730b.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += arr[i] ^ arr[j]; \n  \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123088,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0h70730b.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmp0h70730b.__unittest_L16_C1() [0x427dea]\n??:? void tmp0h70730b.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123088,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n  \n    // loop over all bits \n    for (long i = 0; i < 64; i++) \n    { \n        // count number of elements with i'th bit set \n        long k = 0; \n        for (long j = 0; j < n; j++) \n            if ((arr[j] & (1 << i)) != 0) \n                k++; \n  \n        // There are k set bits and n-k unset bits. \n        // The XOR of all pairs with unset I'th bit is 0. \n        // The XOR of all pairs with set I'th bit is 2^i * k * (n-k). \n        ans += (1 << i) * k * (n - k) * 2; \n    } \n  \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123088,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpwgf9o5lg.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x42812d]\n??:? void tmpwgf9o5lg.__unittest_L29_C1() [0x427e02]\n??:? void tmpwgf9o5lg.__modtest() [0x427eac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c18b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b01e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301b1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430660]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x43013d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aff5]\n??:? runModuleUnitTests [0x42bf61]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285f0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n  \n    // Traverse through all numbers \n    for (long i = 0; i < n; i++) \n    { \n        // XOR with every other element \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    } \n  \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123088,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long res = 0; // Initialize result \n  \n    // Traverse over all bits \n    for (long i = 31; i >= 0; i--) \n    { \n        // Find count of elements with i'th bit set \n        long setBits = 0; \n        for (long j = 0; j < n; j++) \n            if ((arr[j] & (1 << i)) != 0) \n                setBits++; \n  \n        // If count is even, then there are \n        // even number of elements with i'th \n        // bit set. So the i'th bit contributes \n        // nothing to sum. \n        if (setBits % 2 == 0) \n            continue; \n  \n        // Else count is odd. So i'th bit \n        // contributes 2^i to sum. \n        res += (1 << i); \n    } \n  \n    return res; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123088,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpb_2ih6sf.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x428125]\n??:? void tmpb_2ih6sf.__unittest_L35_C1() [0x427dfa]\n??:? void tmpb_2ih6sf.__modtest() [0x427ea4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c183]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b016]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301a9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430658]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430135]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afed]\n??:? runModuleUnitTests [0x42bf59]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285e8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0h70730b.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmp0h70730b.__unittest_L16_C1() [0x427dea]\n??:? void tmp0h70730b.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long res = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            res += (arr[i] ^ arr[j]); \n    return res; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long res = 0; \n    for (long i = 0; i < n; i++) \n    { \n        for (long j = i + 1; j < n; j++) \n        { \n            res += (arr[i] ^ arr[j]); \n        } \n    } \n    return res; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123088,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123088,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long res = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            res += arr[i] ^ arr[j]; \n    return res; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n  \n    // Traverse through all numbers \n    for (long i = 0; i < n; i++) \n    { \n        // XOR with every other element \n        for (long j = i + 1; j < n; j++) \n            ans += arr[i] ^ arr[j]; \n    } \n  \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123088,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0h70730b.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmp0h70730b.__unittest_L16_C1() [0x427dea]\n??:? void tmp0h70730b.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n  \n    // Iterate over all pairs \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n  \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123088,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0h70730b.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmp0h70730b.__unittest_L16_C1() [0x427dea]\n??:? void tmp0h70730b.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += arr[i] ^ arr[j]; \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += arr[i] ^ arr[j]; \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n  \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123088,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n    { \n        for (long j = i + 1; j < n; j++) \n        { \n            ans += (arr[i] ^ arr[j]); \n        } \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123088,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) { \n        for (long j = i + 1; j < n; j++) { \n            ans += (arr[i] ^ arr[j]); \n        } \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123088,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0h70730b.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmp0h70730b.__unittest_L16_C1() [0x427dea]\n??:? void tmp0h70730b.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < 64; i++) \n    { \n        long k = 0; \n        for (long j = 0; j < n; j++) \n            if ((arr[j] & (1 << i)) != 0) \n                k++; \n        ans += (k * (n - k) * 2); \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123088,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmps3qyz1y4.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x42811d]\n??:? void tmps3qyz1y4.__unittest_L21_C1() [0x427df2]\n??:? void tmps3qyz1y4.__modtest() [0x427e9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c17b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b00e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301a1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430650]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x43012d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afe5]\n??:? runModuleUnitTests [0x42bf51]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285e0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long res = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            res += (arr[i] ^ arr[j]); \n    return res; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += arr[i] ^ arr[j]; \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n  \n    // Iterate over all the elements \n    for (long i = 0; i < n; i++) \n    { \n        // Iterate over all the elements after the \n        // current element \n        for (long j = i + 1; j < n; j++) \n        { \n            // XOR of arr[i] and arr[j] \n            ans += arr[i] ^ arr[j]; \n        } \n    } \n  \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123088,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{\n\tlong res = 0;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tfor (long j = i + 1; j < n; j++) \n\t\t{\n\t\t\tres += (arr[i] ^ arr[j]);\n\t\t}\n\t}\n\treturn res;\n}\nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123088,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < 64; i++) \n    { \n        long k = 0; \n        for (long j = 0; j < n; j++) \n            if ((arr[j] & (1 << i)) != 0) \n                k++; \n        ans += (k * (n - k) * 2); \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123088,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmps3qyz1y4.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x42811d]\n??:? void tmps3qyz1y4.__unittest_L21_C1() [0x427df2]\n??:? void tmps3qyz1y4.__modtest() [0x427e9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c17b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b00e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301a1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430650]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x43012d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afe5]\n??:? runModuleUnitTests [0x42bf51]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285e0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0h70730b.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmp0h70730b.__unittest_L16_C1() [0x427dea]\n??:? void tmp0h70730b.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0h70730b.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmp0h70730b.__unittest_L16_C1() [0x427dea]\n??:? void tmp0h70730b.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123088,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long res = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            res += (arr[i] ^ arr[j]); \n    return res; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123088,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0rguea5o.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmp0rguea5o.__unittest_L16_C1() [0x427dea]\n??:? void tmp0rguea5o.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0h70730b.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmp0h70730b.__unittest_L16_C1() [0x427dea]\n??:? void tmp0h70730b.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0h70730b.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmp0h70730b.__unittest_L16_C1() [0x427dea]\n??:? void tmp0h70730b.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long res = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            res += (arr[i] ^ arr[j]); \n    return res; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123088,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0rguea5o.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmp0rguea5o.__unittest_L16_C1() [0x427dea]\n??:? void tmp0rguea5o.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += arr[i] ^ arr[j]; \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123088,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0h70730b.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmp0h70730b.__unittest_L16_C1() [0x427dea]\n??:? void tmp0h70730b.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long res = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            res += arr[i] ^ arr[j]; \n    return res; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123088,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp73iruat0.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmp73iruat0.__unittest_L16_C1() [0x427dea]\n??:? void tmp73iruat0.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += arr[i] ^ arr[j]; \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n  \n    // Find the sum of xor of all pairs \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n  \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123088,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n  \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123088,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp085dvc_d.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmp085dvc_d.__unittest_L17_C1() [0x427dea]\n??:? void tmp085dvc_d.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0h70730b.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmp0h70730b.__unittest_L16_C1() [0x427dea]\n??:? void tmp0h70730b.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n  \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123088,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0h70730b.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmp0h70730b.__unittest_L16_C1() [0x427dea]\n??:? void tmp0h70730b.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long res = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            res += (arr[i] ^ arr[j]); \n    return res; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0h70730b.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmp0h70730b.__unittest_L16_C1() [0x427dea]\n??:? void tmp0h70730b.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += arr[i] ^ arr[j]; \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += arr[i] ^ arr[j]; \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123088,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0h70730b.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmp0h70730b.__unittest_L16_C1() [0x427dea]\n??:? void tmp0h70730b.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long res = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            res += (arr[i] ^ arr[j]); \n    return res; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n  \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123088,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long res = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            res += arr[i] ^ arr[j]; \n    return res; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0h70730b.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmp0h70730b.__unittest_L16_C1() [0x427dea]\n??:? void tmp0h70730b.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += arr[i] ^ arr[j]; \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += arr[i] ^ arr[j]; \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long res = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            res += arr[i] ^ arr[j]; \n    return res; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n  \n    // Find the count of numbers having i'th bit set \n    for (long i = 0; i < 64; i++) \n    { \n        long k = 0; \n        for (long j = 0; j < n; j++) \n            if ((arr[j] & (1 << i)) != 0) \n                k++; \n  \n        // Add \"k * (n - k) * 2\" to the answer \n        ans += (k * (n - k) * 2); \n    } \n  \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123088,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4qqfrt15.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x42811d]\n??:? void tmp4qqfrt15.__unittest_L26_C1() [0x427df2]\n??:? void tmp4qqfrt15.__modtest() [0x427e9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c17b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b00e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301a1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430650]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x43012d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afe5]\n??:? runModuleUnitTests [0x42bf51]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285e0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += arr[i] ^ arr[j]; \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += arr[i] ^ arr[j]; \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0h70730b.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmp0h70730b.__unittest_L16_C1() [0x427dea]\n??:? void tmp0h70730b.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long res = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            res += (arr[i] ^ arr[j]); \n    return res; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < 64; i++) \n    { \n        long k = 0; \n        for (long j = 0; j < n; j++) \n            if ((arr[j] & (1L << i)) != 0) \n                k++; \n        ans += (k * (n - k) * 2); \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123088,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7mqornb_.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x42811d]\n??:? void tmp7mqornb_.__unittest_L21_C1() [0x427df2]\n??:? void tmp7mqornb_.__modtest() [0x427e9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c17b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b00e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301a1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430650]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x43012d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afe5]\n??:? runModuleUnitTests [0x42bf51]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285e0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += arr[i] ^ arr[j]; \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += (arr[i] ^ arr[j]); \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123088,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += arr[i] ^ arr[j]; \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0h70730b.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmp0h70730b.__unittest_L16_C1() [0x427dea]\n??:? void tmp0h70730b.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long res = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            res += (arr[i] ^ arr[j]); \n    return res; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123088,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0rguea5o.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmp0rguea5o.__unittest_L16_C1() [0x427dea]\n??:? void tmp0rguea5o.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; // Initialize result \n  \n    // Traverse through all numbers \n    for (long i = 0; i < n; i++) { \n  \n        // Traverse through all other numbers \n        // and do XOR \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    } \n  \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123088,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n\tlong sum = 0; \n\tfor (long i = 0; i < n; i++) \n\t\tfor (long j = i + 1; j < n; j++) \n\t\t\tsum += (arr[i] ^ arr[j]); \n\treturn sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123088,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long res = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            res += (arr[i] ^ arr[j]); \n    return res; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123088,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0rguea5o.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmp0rguea5o.__unittest_L16_C1() [0x427dea]\n??:? void tmp0rguea5o.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0h70730b.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmp0h70730b.__unittest_L16_C1() [0x427dea]\n??:? void tmp0h70730b.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n\tlong ans = 0; \n\tfor (long i = 0; i < n; i++) \n\t\tfor (long j = 0; j < n; j++) \n\t\t\tans += (arr[i] ^ arr[j]); \n\treturn ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123088,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpsxjfgl4g.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmpsxjfgl4g.__unittest_L16_C1() [0x427dea]\n??:? void tmpsxjfgl4g.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long res = 0; \n    for (long i = 0; i < n; i++) \n    { \n        for (long j = i + 1; j < n; j++) \n        { \n            res += (arr[i] ^ arr[j]); \n        } \n    } \n    return res; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123088,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0h70730b.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmp0h70730b.__unittest_L16_C1() [0x427dea]\n??:? void tmp0h70730b.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += arr[i] ^ arr[j]; \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long res = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            res += arr[i] ^ arr[j]; \n    return res; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0h70730b.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmp0h70730b.__unittest_L16_C1() [0x427dea]\n??:? void tmp0h70730b.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0h70730b.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x428115]\n??:? void tmp0h70730b.__unittest_L16_C1() [0x427dea]\n??:? void tmp0h70730b.__modtest() [0x427e94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c173]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b006]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430199]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430648]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430125]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42afdd]\n??:? runModuleUnitTests [0x42bf49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4285d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n  \n    // Find the maximum element in arr[] \n    long max_ele = arr[0]; \n    for (long i = 1; i < n; i++) \n        max_ele = max(max_ele, arr[i]); \n  \n    // Maximum possible XOR value \n    long max_xor = (1 << (int)(log2(max_ele) + 1)) - 1; \n  \n    // The answer is Sum of XOR values of all \n    // subsets.  Sum of XOR values of all \n    // subsets is 2^n - 1 where n is number \n    // of elements in given array. \n    ans = (1 << (int)(n)) - 1; \n  \n    // Remove all those subsets whose \n    // XOR value is less than or equal to \n    // max_xor from the answer. \n    for (long i = 0; i < n; i++) \n    { \n        // Find sum of XOR values of all \n        // subsets that contain arr[i] \n        long subsets = (1 << (int)(n - i - 1)) - 1; \n  \n        // Remove all those subsets whose \n        // XOR value is less than or equal \n        // to arr[i] from subsets \n        subsets = subsets - (subsets / (arr[i] + 1)); \n  \n        // Remove all those subsets whose \n        // XOR value is greater than max_xor \n        // from subsets \n        subsets = subsets - ((subsets * arr[i]) / (max_xor + 1)); \n  \n        // Add subsets to the answer \n        ans = ans - subsets; \n    } \n  \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123088,
      "stdout": "",
      "stderr": "/tmp/tmpb3wcfwyt.d(18): Error: C style cast illegal, use `cast(int)(log2(max_ele) + 1)`\n/tmp/tmpb3wcfwyt.d(24): Error: C style cast illegal, use `cast(int)n`\n/tmp/tmpb3wcfwyt.d(33): Error: C style cast illegal, use `cast(int)(n - i - 1)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb3wcfwyt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n  \n    // traverse over all bits \n    for (long i = 0; i < 64; i++) \n    { \n        // count number of elements with i'th bit set \n        long k = 0; \n        for (long j = 0; j < n; j++) \n            if ((arr[j] & (1 << i)) == 0) \n                k++; \n  \n        // There are k set bits, so there are 2^k - 1 \n        // combinations. Every combination except null \n        // combination contributes to the answer. \n        // Total contribution of every combination is \n        // arr[i] * (2^k - 1). \n        ans += (arr[i] * (1 << k) - 1); \n    } \n  \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123088,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpqsap7i7x.d(26): Range violation\n----------------\n??:? _d_arrayboundsp [0x4281fe]\n??:? long tmpqsap7i7x.pair_xor_Sum(long[], long) [0x427d85]\n??:? void tmpqsap7i7x.__unittest_L31_C1() [0x427e0f]\n??:? void tmpqsap7i7x.__modtest() [0x427ed0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b03e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301d1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430680]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x43015d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b015]\n??:? runModuleUnitTests [0x42bf81]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int func",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += arr[i] ^ arr[j]; \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += arr[i] ^ arr[j]; \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n  \n    // Traverse through all numbers \n    for (long i = 0; i < n; i++) { \n  \n        // XOR current element with every other element \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    } \n  \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123088,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            sum += arr[i] ^ arr[j]; \n    return sum; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123088,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += arr[i] ^ arr[j]; \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \n/*\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \n/*\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \n/*\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \n/*\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = 0; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n   \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1666123088,
      "stdout": "",
      "stderr": "/tmp/tmpflmefl75.d(63): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpflmefl75.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long res = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            res += (arr[i] ^ arr[j]); \n    return res; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += arr[i] ^ arr[j]; \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of xor of all pairs of numbers in the given list.\n\t\n*/\nlong pair_xor_Sum(long[] arr, long n) \n{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            ans += (arr[i] ^ arr[j]); \n    return ans; \n} \nunittest\n{\n    alias candidate = pair_xor_Sum;\n\n    assert(candidate([5L, 9L, 7L, 6L], 4L) == 47L);\n    assert(candidate([7L, 3L, 5L], 3L) == 12L);\n    assert(candidate([7L, 3L], 2L) == 4L);\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
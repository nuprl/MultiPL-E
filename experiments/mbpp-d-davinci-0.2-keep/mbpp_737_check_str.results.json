{
  "name": "mbpp_737_check_str",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_737_check_str.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou].*\", string, \"i\").match;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpj4u9hlsl.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj4u9hlsl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpv_a19mjh.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv_a19mjh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp3nz3g6tb.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3nz3g6tb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\tauto regex = regex(\"^[aeiou]\");\n\treturn regex_search(string, regex);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpxjuvv92x.d(10): Error: undefined identifier `regex`\n/tmp/tmpxjuvv92x.d(11): Error: undefined identifier `regex_search`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxjuvv92x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp63w3hnyc.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63w3hnyc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"(^[aeiouAEIOU]).*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp9zmu9gtj.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9zmu9gtj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou]\", string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpojexo2nk.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpojexo2nk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou]\", string).matchFirst;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpqlv1jxys.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqlv1jxys.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpv_a19mjh.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv_a19mjh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{ \n    return regex(string, \"^[aeiouAEIOU].*\").match; \n} \nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp50_lsj_6.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp50_lsj_6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou]\", string, \"i\").length > 0;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpj7z59d93.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj7z59d93.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp3nz3g6tb.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3nz3g6tb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpv_a19mjh.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv_a19mjh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpv_a19mjh.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv_a19mjh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp63w3hnyc.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63w3hnyc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp63w3hnyc.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63w3hnyc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp63w3hnyc.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63w3hnyc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp3nz3g6tb.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3nz3g6tb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").matchFirst(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp3jz6_hg5.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3jz6_hg5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\tauto regex = regex(r\"^[aeiouAEIOU]\");\n\treturn regex.matchFirst(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp38madzo5.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp38madzo5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{ \n    return regex(string, \"^[aeiouAEIOU]\").match; \n} \nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "/tmp/tmpv2_20tq7.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv2_20tq7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\");\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "/tmp/tmpdkpdehgi.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdkpdehgi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp63w3hnyc.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63w3hnyc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou]\", string, \"i\");\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "/tmp/tmpirqkyd_8.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpirqkyd_8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou].*\", string, \"i\");\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "/tmp/tmpq89snnbb.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq89snnbb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp3nz3g6tb.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3nz3g6tb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"(^[aeiouAEIOU])\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "/tmp/tmpqr0czva1.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqr0czva1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp3nz3g6tb.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3nz3g6tb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpv_a19mjh.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv_a19mjh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp63w3hnyc.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63w3hnyc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp63w3hnyc.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63w3hnyc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{ \n    return regex(string, \"^[aeiouAEIOU]\").match(string); \n} \nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "/tmp/tmp0kihe8h2.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0kihe8h2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp63w3hnyc.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63w3hnyc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp63w3hnyc.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63w3hnyc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"(^[aeiouAEIOU]).*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp9zmu9gtj.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9zmu9gtj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp63w3hnyc.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63w3hnyc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\", string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "/tmp/tmp_rom6ahw.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_rom6ahw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp63w3hnyc.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63w3hnyc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpv_a19mjh.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv_a19mjh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp3nz3g6tb.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3nz3g6tb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\tif (regex(string, \"^[aeiouAEIOU].*\") == true)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "/tmp/tmp8feyeh6c.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8feyeh6c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpv_a19mjh.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv_a19mjh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp3nz3g6tb.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3nz3g6tb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp63w3hnyc.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63w3hnyc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "/tmp/tmpfaurnuz2.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfaurnuz2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").length > 0;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "/tmp/tmpwf2wisw5.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwf2wisw5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU].*\").match;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "/tmp/tmpxqy_yer9.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxqy_yer9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp63w3hnyc.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63w3hnyc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"(^[aeiouAEIOU]).*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp9zmu9gtj.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9zmu9gtj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpv_a19mjh.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv_a19mjh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpv_a19mjh.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv_a19mjh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp63w3hnyc.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63w3hnyc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp3nz3g6tb.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3nz3g6tb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "/tmp/tmpfaurnuz2.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfaurnuz2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpv_a19mjh.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv_a19mjh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp3nz3g6tb.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3nz3g6tb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp63w3hnyc.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63w3hnyc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou]\", string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpojexo2nk.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpojexo2nk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp63w3hnyc.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63w3hnyc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp63w3hnyc.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63w3hnyc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"(^[aeiouAEIOU])\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "/tmp/tmpqr0czva1.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqr0czva1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou].*\", string, \"i\").match;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpj4u9hlsl.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj4u9hlsl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp63w3hnyc.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63w3hnyc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou]\", string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpojexo2nk.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpojexo2nk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpv_a19mjh.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv_a19mjh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpv_a19mjh.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv_a19mjh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpv_a19mjh.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv_a19mjh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp3nz3g6tb.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3nz3g6tb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp63w3hnyc.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63w3hnyc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpv_a19mjh.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv_a19mjh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou]\", string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpojexo2nk.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpojexo2nk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou]\", string, \"i\").matchFirst();\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "/tmp/tmpax12lvfj.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpax12lvfj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "/tmp/tmpfaurnuz2.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfaurnuz2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp3nz3g6tb.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3nz3g6tb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\tauto regex = regex(r\"^[aeiouAEIOU]\");\n\treturn regex.matchFirst(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp38madzo5.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp38madzo5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp63w3hnyc.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63w3hnyc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpv_a19mjh.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv_a19mjh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp63w3hnyc.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63w3hnyc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp63w3hnyc.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63w3hnyc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpv_a19mjh.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv_a19mjh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou]\", string, \"i\").matchFirst();\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "/tmp/tmpax12lvfj.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpax12lvfj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpv_a19mjh.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv_a19mjh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp63w3hnyc.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63w3hnyc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpv_a19mjh.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv_a19mjh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou]\", string, \"i\").length > 0;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpj7z59d93.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj7z59d93.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\", string).match;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "/tmp/tmp4g_ss8s6.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4g_ss8s6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp63w3hnyc.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63w3hnyc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp63w3hnyc.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63w3hnyc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpv_a19mjh.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv_a19mjh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou]\", string, \"i\").length > 0;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpj7z59d93.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj7z59d93.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpv_a19mjh.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv_a19mjh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{ \n    return regex(string, \"^[aeiouAEIOU]\").match(string); \n} \nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "/tmp/tmp0kihe8h2.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0kihe8h2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpv_a19mjh.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv_a19mjh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpv_a19mjh.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv_a19mjh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp3nz3g6tb.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3nz3g6tb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou]\", string, \"i\").length > 0;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpj7z59d93.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj7z59d93.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp63w3hnyc.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63w3hnyc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "/tmp/tmpkoa9rftx.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkoa9rftx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp63w3hnyc.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63w3hnyc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "/tmp/tmpfaurnuz2.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfaurnuz2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"(^[aeiouAEIOU])\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "/tmp/tmpqr0czva1.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqr0czva1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp63w3hnyc.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63w3hnyc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou]\", string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpojexo2nk.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpojexo2nk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou]\", string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpojexo2nk.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpojexo2nk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp63w3hnyc.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63w3hnyc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou]\", string, \"i\").matchFirst();\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "/tmp/tmpax12lvfj.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpax12lvfj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU].*\").match;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "/tmp/tmpxqy_yer9.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxqy_yer9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp3nz3g6tb.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3nz3g6tb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpv_a19mjh.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv_a19mjh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp3nz3g6tb.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3nz3g6tb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\", string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "/tmp/tmplca8e681.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplca8e681.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp63w3hnyc.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63w3hnyc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpv_a19mjh.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv_a19mjh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\tstring pattern = \"^[aeiouAEIOU]\";\n\treturn regex(pattern, string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "/tmp/tmp2kdh5q8f.d(10): Error: `string` is used as a type\n/tmp/tmp2kdh5q8f.d(11): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2kdh5q8f.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn std.regex.matchFirst(string, q{^[aeiouAEIOU]});\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "/tmp/tmp0th47m11.d(10): Error: undefined identifier `regex` in package `std`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0th47m11.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp63w3hnyc.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63w3hnyc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "/tmp/tmpkoa9rftx.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkoa9rftx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp63w3hnyc.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63w3hnyc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp3nz3g6tb.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3nz3g6tb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"(^[aeiouAEIOU])\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "/tmp/tmpqr0czva1.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqr0czva1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp3nz3g6tb.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3nz3g6tb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpv_a19mjh.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv_a19mjh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpv_a19mjh.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv_a19mjh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp63w3hnyc.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63w3hnyc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{ \n\tregex reg(\"^[aeiouAEIOU]\");\n\treturn regex_match(string, reg);\n} \nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "/tmp/tmpdine8dg_.d(10): Error: found `reg` when expecting `;` following statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdine8dg_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp3nz3g6tb.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3nz3g6tb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou].*\", string, \"i\").match;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpj4u9hlsl.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj4u9hlsl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{ \n    string pattern = \"^[aeiouAEIOU]\"; \n    return regexMatch(pattern, string); \n} \nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "/tmp/tmppasvvyvi.d(10): Error: `string` is used as a type\n/tmp/tmppasvvyvi.d(11): Error: undefined identifier `regexMatch`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppasvvyvi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp63w3hnyc.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63w3hnyc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp63w3hnyc.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63w3hnyc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp63w3hnyc.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63w3hnyc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpv_a19mjh.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv_a19mjh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpv_a19mjh.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv_a19mjh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\", string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "/tmp/tmp_rom6ahw.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_rom6ahw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou]\", string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpojexo2nk.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpojexo2nk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp63w3hnyc.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63w3hnyc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou]\", string, \"i\").matchFirst();\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "/tmp/tmpax12lvfj.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpax12lvfj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou].*\", string, \"i\").match;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpj4u9hlsl.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj4u9hlsl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpv_a19mjh.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv_a19mjh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{ \n    return regex(string, \"^[aeiouAEIOU].*\").match(string); \n} \nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "/tmp/tmpkkdbsgy_.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkkdbsgy_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "/tmp/tmpfaurnuz2.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfaurnuz2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp63w3hnyc.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63w3hnyc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp63w3hnyc.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63w3hnyc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpv_a19mjh.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv_a19mjh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp63w3hnyc.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63w3hnyc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou].*\", string, \"i\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "/tmp/tmpalnw5cw0.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpalnw5cw0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"(^[aeiouAEIOU])\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "/tmp/tmpqr0czva1.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqr0czva1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp3nz3g6tb.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3nz3g6tb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp63w3hnyc.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63w3hnyc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp63w3hnyc.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63w3hnyc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp63w3hnyc.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63w3hnyc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpv_a19mjh.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv_a19mjh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn std.regex.matchFirst(string, \"^[aeiou]\");\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "/tmp/tmpvo397epy.d(10): Error: undefined identifier `regex` in package `std`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvo397epy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp63w3hnyc.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63w3hnyc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou]\", string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpojexo2nk.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpojexo2nk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou].*\", string, \"i\").match;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpj4u9hlsl.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj4u9hlsl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp63w3hnyc.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63w3hnyc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou].*\", string, \"i\").match;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpj4u9hlsl.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj4u9hlsl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\tstring pattern = \"^[aeiouAEIOU]\";\n\treturn regex(pattern).matchFirst(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "/tmp/tmpuuay2wp4.d(10): Error: `string` is used as a type\n/tmp/tmpuuay2wp4.d(11): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuuay2wp4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp63w3hnyc.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63w3hnyc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou]\", string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpojexo2nk.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpojexo2nk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpv_a19mjh.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv_a19mjh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "/tmp/tmpfaurnuz2.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfaurnuz2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou].*\", string, \"i\").match;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpj4u9hlsl.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj4u9hlsl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp63w3hnyc.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63w3hnyc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou]\", string, \"i\").length > 0;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpj7z59d93.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj7z59d93.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\tstring pattern = \"^[aeiouAEIOU]\";\n\treturn regex(pattern).match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "/tmp/tmps6o5fy0b.d(10): Error: `string` is used as a type\n/tmp/tmps6o5fy0b.d(11): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps6o5fy0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpv_a19mjh.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv_a19mjh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU].*\").match;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "/tmp/tmpxqy_yer9.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxqy_yer9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{ \n    return regex(string, \"^[aeiouAEIOU]\").match(string); \n} \nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "/tmp/tmp0kihe8h2.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0kihe8h2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpv_a19mjh.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv_a19mjh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpv_a19mjh.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv_a19mjh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp63w3hnyc.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63w3hnyc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU]\").match;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "/tmp/tmpfaurnuz2.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfaurnuz2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou]\", string, \"i\").matchFirst !null;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "/tmp/tmp16hsh7cw.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp16hsh7cw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp63w3hnyc.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63w3hnyc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpv_a19mjh.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv_a19mjh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp63w3hnyc.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63w3hnyc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiou]\").match;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "/tmp/tmptq5bil27.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptq5bil27.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp63w3hnyc.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63w3hnyc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "/tmp/tmpkoa9rftx.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkoa9rftx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpv_a19mjh.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv_a19mjh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\tstring pattern = \"^[aeiouAEIOU]\";\n\treturn regexMatch(pattern, string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "/tmp/tmpn2fv_j08.d(10): Error: `string` is used as a type\n/tmp/tmpn2fv_j08.d(11): Error: undefined identifier `regexMatch`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn2fv_j08.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpv_a19mjh.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv_a19mjh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp63w3hnyc.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63w3hnyc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU].*\").match;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "/tmp/tmpxqy_yer9.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxqy_yer9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\tstring pattern = \"^[aeiouAEIOU]\";\n\treturn regex(pattern).match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "/tmp/tmps6o5fy0b.d(10): Error: `string` is used as a type\n/tmp/tmps6o5fy0b.d(11): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps6o5fy0b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"(^[aeiouAEIOU]).*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp9zmu9gtj.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9zmu9gtj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou]\", string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpojexo2nk.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpojexo2nk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou]\", string, \"i\").length > 0;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpj7z59d93.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj7z59d93.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpv_a19mjh.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv_a19mjh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpv_a19mjh.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv_a19mjh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp63w3hnyc.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63w3hnyc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp63w3hnyc.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63w3hnyc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou]\", string, \"i\").length > 0;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpj7z59d93.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj7z59d93.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(string, \"^[aeiouAEIOU].*\").match;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "/tmp/tmpxqy_yer9.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxqy_yer9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou]\", string, \"i\").length > 0;\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpj7z59d93.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj7z59d93.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp63w3hnyc.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp63w3hnyc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiou]\", string).matchFirst();\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "/tmp/tmp35ah5eij.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp35ah5eij.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}\nunittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpv_a19mjh.d(10): Error: undefined identifier `regex`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv_a19mjh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
{
  "name": "mbpp_644_reverse_Array_Upto_K",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to reverse an array upto a given position.\n\t\n*/\nlong[] reverse_Array_Upto_K(long[] input, long k) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_644_reverse_Array_Upto_K.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = reverse_Array_Upto_K;\n\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L], 4L) == [4L, 3L, 2L, 1L, 5L, 6L]);\n    assert(candidate([4L, 5L, 6L, 7L], 2L) == [5L, 4L, 6L, 7L]);\n    assert(candidate([9L, 8L, 7L, 6L, 5L], 3L) == [7L, 8L, 9L, 6L, 5L]);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\ttemp2[i - k] = input[i];\n\t}\n\t\n\ttemp = temp.reverse;\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\tresult[i] = temp2[i - k];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[i + k];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\tresult[i + k] = temp2[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\tlong i = 0;\n\tlong j = 0;\n\tlong l = 0;\n\tlong m = 0;\n\t\n\twhile(i < k)\n\t{\n\t\ttemp[i] = input[i];\n\t\ti++;\n\t}\n\t\n\twhile(j < input.length - k)\n\t{\n\t\ttemp2[j] = input[k + j];\n\t\tj++;\n\t}\n\t\n\twhile(l < k)\n\t{\n\t\toutput[l] = temp[k - l - 1];\n\t\tl++;\n\t}\n\t\n\twhile(m < input.length - k)\n\t{\n\t\toutput[k + m] = temp2[m];\n\t\tm++;\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong i = 0;\n\twhile (i < k) \n\t{\n\t\tresult[i] = input[k - i - 1];\n\t\ti++;\n\t}\n\twhile (i < input.length) \n\t{\n\t\tresult[i] = input[i];\n\t\ti++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--)\n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++)\n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[i + k];\n\t}\n\t\n\ttemp = temp.reverse;\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\tresult[i + k] = temp2[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--) \n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++) \n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = k; i < input.length; i++)\n\t{\n\t\ttemp2[i - k] = input[i];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor (long i = k; i < input.length; i++)\n\t{\n\t\tresult[i] = temp2[i - k];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tauto result = input.dup;\n\tfor (long i = 0; i < k; i++) \n\t{\n\t\tresult[i] = input[k - i - 1];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\ttemp2[i - k] = input[i];\n\t}\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = temp[k - i - 1];\n\t}\n\t\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\toutput[i] = temp2[i - k];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = k; i < input.length; i++)\n\t{\n\t\ttemp2[i - k] = input[i];\n\t}\n\t\n\ttemp = temp.reverse;\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor (long i = k; i < input.length; i++)\n\t{\n\t\tresult[i] = temp2[i - k];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = k; i < input.length; i++)\n\t{\n\t\ttemp2[i - k] = input[i];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor (long i = k; i < input.length; i++)\n\t{\n\t\tresult[i] = temp2[i - k];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\ttemp2[i - k] = input[i];\n\t}\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[k - i - 1];\n\t}\n\t\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\tresult[i] = temp2[i - k];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong i = 0;\n\twhile (i < k)\n\t{\n\t\toutput[i] = input[k - i - 1];\n\t\ti++;\n\t}\n\twhile (i < input.length)\n\t{\n\t\toutput[i] = input[i];\n\t\ti++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = k; i < input.length; i++)\n\t{\n\t\ttemp2[i - k] = input[i];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor (long i = k; i < input.length; i++)\n\t{\n\t\tresult[i] = temp2[i - k];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i > 0; i--)\n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++)\n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[i + k];\n\t}\n\t\n\ttemp = temp.reverse;\n\t\n\tfor (long i = 0; i < temp.length; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor (long i = 0; i < temp2.length; i++)\n\t{\n\t\tresult[i + k] = temp2[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong i = 0;\n\tlong j = k;\n\twhile(i < k)\n\t{\n\t\toutput[i] = input[j];\n\t\ti++;\n\t\tj--;\n\t}\n\tj = input.length - 1;\n\twhile(i < input.length)\n\t{\n\t\toutput[i] = input[j];\n\t\ti++;\n\t\tj--;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong i = 0;\n\tlong j = 0;\n\twhile (i < k)\n\t{\n\t\toutput[i] = input[k - i - 1];\n\t\ti++;\n\t}\n\twhile (i < input.length)\n\t{\n\t\toutput[i] = input[i];\n\t\ti++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp1 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp1[i] = input[i + k];\n\t}\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = temp[k - i - 1];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\toutput[i + k] = temp1[i];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor(long i = k; i >= 0; i--)\n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\tfor(long i = k+1; i < input.length; i++)\n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--)\n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++)\n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--)\n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k+1; i < input.length; i++)\n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--)\n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++)\n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor (long i = input.length - 1; i >= 0; i--) \n\t{\n\t\tif (j < k) \n\t\t{\n\t\t\toutput[j] = input[i];\n\t\t\tj++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\toutput[j] = input[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[k + i];\n\t}\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[k - i - 1];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\tresult[k + i] = temp2[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[i + k];\n\t}\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[k - i - 1];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\tresult[i + k] = temp2[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\tint j = 0;\n\tfor(int i = 0; i < input.length; i++)\n\t{\n\t\tif(i < k)\n\t\t{\n\t\t\ttemp[i] = input[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp2[j] = input[i];\n\t\t\tj++;\n\t\t}\n\t}\n\ttemp = temp.reverse();\n\tj = 0;\n\tfor(int i = 0; i < input.length; i++)\n\t{\n\t\tif(i < k)\n\t\t{\n\t\t\tresult[i] = temp[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[i] = temp2[j];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] output = input.dup;\n\tfor (long i = 0; i < k; i++) \n\t{\n\t\toutput[i] = input[k - i - 1];\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output;\n\toutput = new long[$];\n\t\n\tforeach(i, x; input)\n\t{\n\t\tif(i < k)\n\t\t{\n\t\t\toutput[i] = input[k - i - 1];\n\t\t}\n\t\telse\n\t\t{\n\t\t\toutput[i] = input[i];\n\t\t}\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length-k];\n\t\n\tfor(long i=0; i<k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i=0; i<input.length-k; i++)\n\t{\n\t\ttemp2[i] = input[k+i];\n\t}\n\t\n\tfor(long i=0; i<k; i++)\n\t{\n\t\toutput[i] = temp[k-i-1];\n\t}\n\t\n\tfor(long i=0; i<input.length-k; i++)\n\t{\n\t\toutput[k+i] = temp2[i];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length-k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\ttemp2[i-k] = input[i];\n\t}\n\t\n\ttemp = temp.reverse;\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\tresult[i] = temp2[i-k];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] reversed = input[0..k].reverse;\n\tlong[] rest = input[k..$];\n\tresult = reversed ~ rest;\n\treturn result;\n}",
    "{\n\tlong[] output;\n\toutput = new long[input.length];\n\t\n\tfor (long i = 0; i < k; i++) \n\t{\n\t\toutput[i] = input[k - i - 1];\n\t}\n\t\n\tfor (long i = k; i < input.length; i++) \n\t{\n\t\toutput[i] = input[i];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--)\n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++)\n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\t\n\tforeach(i, item; input)\n\t{\n\t\tif(i < k)\n\t\t{\n\t\t\ttemp[i] = item;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[i] = item;\n\t\t}\n\t}\n\t\n\tforeach(i, item; temp)\n\t{\n\t\tresult[i] = item;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++) \n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = k; i < input.length; i++) \n\t{\n\t\ttemp2[i - k] = input[i];\n\t}\n\t\n\ttemp = temp.reverse;\n\t\n\tfor (long i = 0; i < k; i++) \n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor (long i = k; i < input.length; i++) \n\t{\n\t\tresult[i] = temp2[i - k];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] output;\n\toutput = new long[input.length];\n\tlong i = 0;\n\tlong j = 0;\n\twhile (i < k)\n\t{\n\t\toutput[i] = input[k - i - 1];\n\t\ti++;\n\t}\n\twhile (i < input.length)\n\t{\n\t\toutput[i] = input[i];\n\t\ti++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--) \n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++) \n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--) \n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++) \n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] result;\n\tresult = new long[input.length];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = input[k - i - 1];\n\t}\n\t\n\tfor (long i = k; i < input.length; i++)\n\t{\n\t\tresult[i] = input[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[i + k];\n\t}\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[k - i - 1];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\tresult[i + k] = temp2[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--)\n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++)\n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--)\n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++)\n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[k + i];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\tresult[k + i] = temp2[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[i + k];\n\t}\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp2[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\tresult[i + k] = temp[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[i + k];\n\t}\n\t\n\ttemp = temp.reverse;\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = temp[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\toutput[i + k] = temp2[i];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\ttemp2[i - k] = input[i];\n\t}\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[k - i - 1];\n\t}\n\t\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\tresult[i] = temp2[i - k];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\t// Copy the first k elements into temp\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\t// Reverse the first k elements\n\ttemp = temp.reverse();\n\t\n\t// Copy the remaining elements into temp2\n\tfor (long i = k; i < input.length; i++)\n\t{\n\t\ttemp2[i - k] = input[i];\n\t}\n\t\n\t// Copy the reversed first k elements into result\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\t// Copy the remaining elements into result\n\tfor (long i = k; i < input.length; i++)\n\t{\n\t\tresult[i] = temp2[i - k];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[i + k];\n\t}\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[k - i - 1];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\tresult[i + k] = temp2[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong j = 0;\n\tfor (long i = k-1; i >= 0; i--) \n\t{\n\t\ttemp[j] = input[i];\n\t\tj++;\n\t}\n\tj = 0;\n\tfor (long i = k; i < input.length; i++) \n\t{\n\t\tresult[i] = input[i];\n\t}\n\tfor (long i = 0; i < k; i++) \n\t{\n\t\tresult[i] = temp[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor(long i = k; i >= 0; i--)\n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\tfor(long i = k+1; i < input.length; i++)\n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong i = 0;\n\twhile (i < k) {\n\t\tresult[i] = input[k - i - 1];\n\t\ti++;\n\t}\n\twhile (i < input.length) {\n\t\tresult[i] = input[i];\n\t\ti++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor(long i = k; i > 0; i--)\n\t{\n\t\toutput[j] = input[i-1];\n\t\tj++;\n\t}\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\toutput[i] = input[i];\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor(long i = k; i >= 0; i--)\n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\tfor(long i = k+1; i < input.length; i++)\n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong i = 0;\n\twhile(i < k)\n\t{\n\t\toutput[i] = input[k-i-1];\n\t\ti++;\n\t}\n\twhile(i < input.length)\n\t{\n\t\toutput[i] = input[i];\n\t\ti++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[k + i];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\tresult[k + i] = temp2[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[k + i];\n\t}\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[k - i - 1];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\tresult[k + i] = temp2[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\tlong i = 0;\n\tlong j = 0;\n\tlong l = 0;\n\tlong m = 0;\n\twhile(i < k)\n\t{\n\t\ttemp[i] = input[i];\n\t\ti++;\n\t}\n\twhile(j < input.length - k)\n\t{\n\t\ttemp2[j] = input[k + j];\n\t\tj++;\n\t}\n\twhile(l < k)\n\t{\n\t\tresult[l] = temp[k - l - 1];\n\t\tl++;\n\t}\n\twhile(m < input.length - k)\n\t{\n\t\tresult[k + m] = temp2[m];\n\t\tm++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[i + k];\n\t}\n\t\n\ttemp = temp.reverse;\n\t\n\tfor (long i = 0; i < temp.length; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor (long i = 0; i < temp2.length; i++)\n\t{\n\t\tresult[i + k] = temp2[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--)\n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++)\n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = k; i < input.length; i++)\n\t{\n\t\ttemp2[i - k] = input[i];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor (long i = k; i < input.length; i++)\n\t{\n\t\tresult[i] = temp2[i - k];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--) \n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = input.length - 1; i > k; i--) \n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong j = 0;\n\tfor (long i = 0; i < k; i++) \n\t{\n\t\ttemp[i] = input[i];\n\t}\n\ttemp = temp.reverse();\n\tfor (long i = 0; i < k; i++) \n\t{\n\t\tresult[i] = temp[i];\n\t}\n\tfor (long i = k; i < input.length; i++) \n\t{\n\t\tresult[i] = input[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] input_reversed = input.reverse;\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = input_reversed[i];\n\t}\n\tfor (long i = k; i < input.length; i++)\n\t{\n\t\tresult[i] = input[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--) \n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++) \n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong i = 0;\n\tlong j = k;\n\twhile(i < k)\n\t{\n\t\tresult[i] = input[j];\n\t\ti++;\n\t\tj--;\n\t}\n\twhile(i < input.length)\n\t{\n\t\tresult[i] = input[i];\n\t\ti++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[i + k];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\tresult[i + k] = temp2[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--)\n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k+1; i < input.length; i++)\n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\t//Copy the first k elements into the temp array\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\t//Reverse the temp array\n\ttemp = temp.reverse();\n\t\n\t//Copy the last n - k elements into the temp2 array\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\ttemp2[i - k] = input[i];\n\t}\n\t\n\t//Copy the temp array into the result array\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\t//Copy the temp2 array into the result array\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\tresult[i] = temp2[i - k];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[k - i - 1];\n\t}\n\t\n\tfor (long i = k; i < input.length; i++)\n\t{\n\t\tresult[i] = input[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (int i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (int i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[i + k];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor (int i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor (int i = 0; i < input.length - k; i++)\n\t{\n\t\tresult[i + k] = temp2[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--)\n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++)\n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[i + k];\n\t}\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = temp[k - i - 1];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\toutput[i + k] = temp2[i];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = k; i < input.length; i++)\n\t{\n\t\ttemp2[i - k] = input[i];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor (long i = 0; i < temp.length; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor (long i = temp.length; i < result.length; i++)\n\t{\n\t\tresult[i] = temp2[i - temp.length];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--)\n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++)\n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = temp[k-i-1];\n\t}\n\t\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\toutput[i] = input[i];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong i = 0;\n\tlong j = k;\n\twhile (i < k) \n\t{\n\t\toutput[i] = input[j];\n\t\ti++;\n\t\tj--;\n\t}\n\twhile (i < input.length) \n\t{\n\t\toutput[i] = input[i];\n\t\ti++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\tlong i = 0;\n\tlong j = 0;\n\tlong l = 0;\n\tfor (i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\tfor (j = k; j < input.length; j++)\n\t{\n\t\ttemp2[l] = input[j];\n\t\tl++;\n\t}\n\ttemp = temp.reverse;\n\toutput = temp ~ temp2;\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor(long i = k; i >= 0; i--)\n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\tfor(long i = k+1; i < input.length; i++)\n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\ttemp2[i - k] = input[i];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\tresult[i] = temp2[i - k];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] reversed = new long[k];\n\tlong[] rest = new long[input.length - k];\n\tforeach(i, e; input)\n\t{\n\t\tif(i < k)\n\t\t{\n\t\t\treversed[i] = e;\n\t\t}\n\t\telse\n\t\t{\n\t\t\trest[i - k] = e;\n\t\t}\n\t}\n\treversed = reversed.reverse;\n\tforeach(i, e; reversed)\n\t{\n\t\tresult[i] = e;\n\t}\n\tforeach(i, e; rest)\n\t{\n\t\tresult[i + k] = e;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++) {\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = k; i < input.length; i++) {\n\t\ttemp2[i - k] = input[i];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor (long i = 0; i < k; i++) {\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor (long i = k; i < input.length; i++) {\n\t\tresult[i] = temp2[i - k];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (int i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (int i = k; i < input.length; i++)\n\t{\n\t\ttemp2[i - k] = input[i];\n\t}\n\t\n\tfor (int i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[k - i - 1];\n\t}\n\t\n\tfor (int i = k; i < input.length; i++)\n\t{\n\t\tresult[i] = temp2[i - k];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[k + i];\n\t}\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = temp[k - 1 - i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\toutput[k + i] = temp2[i];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[k + i];\n\t}\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[k - i - 1];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\tresult[k + i] = temp2[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tfor (long i = 0; i < k; i++) \n\t{\n\t\ttemp[i] = input[i];\n\t}\n\tfor (long i = 0; i < k; i++) \n\t{\n\t\tresult[i] = temp[k - i - 1];\n\t}\n\tfor (long i = k; i < input.length; i++) \n\t{\n\t\tresult[i] = input[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++) {\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++) {\n\t\ttemp2[i] = input[i + k];\n\t}\n\t\n\tfor (long i = 0; i < k; i++) {\n\t\tresult[i] = temp[k - i - 1];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++) {\n\t\tresult[i + k] = temp2[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = input.length - 1; i > k; i--) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[i + k];\n\t}\n\t\n\ttemp = temp.reverse;\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = temp[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\toutput[i + k] = temp2[i];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--)\n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k+1; i < input.length; i++)\n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor (long i = input.length - 1; i >= 0; i--) \n\t{\n\t\tif (i > k) \n\t\t{\n\t\t\toutput[j] = input[i];\n\t\t\tj++;\n\t\t}\n\t}\n\tfor (long i = 0; i <= k; i++) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--) \n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++) \n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong i = 0;\n\tlong j = 0;\n\tlong l = 0;\n\twhile (i < k)\n\t{\n\t\ttemp[i] = input[i];\n\t\ti = i + 1;\n\t}\n\ttemp = temp.reverse();\n\twhile (j < k)\n\t{\n\t\tresult[j] = temp[j];\n\t\tj = j + 1;\n\t}\n\twhile (l < input.length - k)\n\t{\n\t\tresult[j] = input[k];\n\t\tk = k + 1;\n\t\tj = j + 1;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[i + k];\n\t}\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = temp[k - i - 1];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\toutput[i + k] = temp2[i];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong i = 0;\n\tlong j = k;\n\twhile(i < k)\n\t{\n\t\toutput[i] = input[j];\n\t\ti++;\n\t\tj--;\n\t}\n\twhile(i < input.length)\n\t{\n\t\toutput[i] = input[i];\n\t\ti++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[k - i - 1];\n\t}\n\t\n\tfor (long i = k; i < input.length; i++)\n\t{\n\t\tresult[i] = input[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[k + i];\n\t}\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = temp[k - i - 1];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\toutput[k + i] = temp2[i];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\t\n\tfor (long i = 0; i < k; i++) \n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = 0; i < k; i++) \n\t{\n\t\tresult[i] = temp[k - i - 1];\n\t}\n\t\n\tfor (long i = k; i < input.length; i++) \n\t{\n\t\tresult[i] = input[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] reversed = new long[k];\n\tlong[] rest = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\treversed[i] = input[k - i - 1];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\trest[i] = input[k + i];\n\t}\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = reversed[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\tresult[k + i] = rest[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i > 0; i--) \n\t{\n\t\toutput[j] = input[i - 1];\n\t\tj++;\n\t}\n\tfor (long i = k; i < input.length; i++) \n\t{\n\t\toutput[i] = input[i];\n\t}\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[i + k];\n\t}\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[k - i - 1];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\tresult[i + k] = temp2[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length-k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\ttemp2[i-k] = input[i];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\tresult[i] = temp2[i-k];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = k; i < input.length; i++)\n\t{\n\t\ttemp2[i - k] = input[i];\n\t}\n\t\n\ttemp = temp.reverse;\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor (long i = k; i < input.length; i++)\n\t{\n\t\tresult[i] = temp2[i - k];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong i = 0;\n\twhile (i < k)\n\t{\n\t\tresult[i] = input[k - i - 1];\n\t\ti++;\n\t}\n\twhile (i < input.length)\n\t{\n\t\tresult[i] = input[i];\n\t\ti++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length-k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length-k; i++)\n\t{\n\t\ttemp2[i] = input[i+k];\n\t}\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[k-i-1];\n\t}\n\t\n\tfor (long i = 0; i < input.length-k; i++)\n\t{\n\t\tresult[i+k] = temp2[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong i = 0;\n\twhile(i < k)\n\t{\n\t\tresult[i] = input[k-i-1];\n\t\ti++;\n\t}\n\twhile(i < input.length)\n\t{\n\t\tresult[i] = input[i];\n\t\ti++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length-k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\ttemp2[i-k] = input[i];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = temp[i];\n\t}\n\t\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\toutput[i] = temp2[i-k];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tfor (long i = 0; i < k; i++) \n\t{\n\t\tresult[i] = input[k - i - 1];\n\t}\n\tfor (long i = k; i < input.length; i++) \n\t{\n\t\tresult[i] = input[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (int i = 0; i < k; i++) \n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (int i = 0; i < input.length - k; i++) \n\t{\n\t\ttemp2[i] = input[i + k];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor (int i = 0; i < k; i++) \n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor (int i = 0; i < input.length - k; i++) \n\t{\n\t\tresult[i + k] = temp2[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[k-i-1];\n\t}\n\t\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\tresult[i] = input[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i > 0; i--) \n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++) \n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong i = 0;\n\tlong j = k;\n\twhile(i < k)\n\t{\n\t\toutput[i] = input[j];\n\t\ti++;\n\t\tj--;\n\t}\n\twhile(i < input.length)\n\t{\n\t\toutput[i] = input[i];\n\t\ti++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[i + k];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\tresult[i + k] = temp2[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\ttemp2[i - k] = input[i];\n\t}\n\t\n\ttemp = temp.reverse;\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\tresult[i] = temp2[i - k];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length-k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\ttemp2[i-k] = input[i];\n\t}\n\t\n\tfor(long i = 0; i < temp.length; i++)\n\t{\n\t\tresult[i] = temp[temp.length-i-1];\n\t}\n\t\n\tfor(long i = 0; i < temp2.length; i++)\n\t{\n\t\tresult[i+k] = temp2[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--) \n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++) \n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tfor (long i = 0; i < k; i++) \n\t{\n\t\tresult[i] = input[k - i - 1];\n\t}\n\tfor (long i = k; i < input.length; i++) \n\t{\n\t\tresult[i] = input[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = input[k - i - 1];\n\t}\n\tfor (long i = k; i < input.length; i++)\n\t{\n\t\tresult[i] = input[i];\n\t}\n\treturn result;\n}",
    "{\n    long[] result = new long[input.length];\n    long[] temp = new long[k];\n    for (long i = 0; i < k; i++) \n    {\n        temp[i] = input[i];\n    }\n    for (long i = 0; i < k; i++) \n    {\n        result[i] = temp[k - i - 1];\n    }\n    for (long i = k; i < input.length; i++) \n    {\n        result[i] = input[i];\n    }\n    return result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[k + i];\n\t}\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[k - i - 1];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\tresult[k + i] = temp2[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong i = 0;\n\tlong j = k;\n\twhile(i < k)\n\t{\n\t\tresult[i] = input[j];\n\t\ti++;\n\t\tj--;\n\t}\n\tj = input.length - 1;\n\twhile(i < input.length)\n\t{\n\t\tresult[i] = input[j];\n\t\ti++;\n\t\tj--;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = input[k - i - 1];\n\t}\n\tfor (long i = k; i < input.length; i++)\n\t{\n\t\toutput[i] = input[i];\n\t}\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--) \n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++) \n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\treturn result;\n}\n/*\n\tWrite a python function to check if a given array is monotonic or not.\n\tAn array is monotonic if it is either monotone increasing or monotone decreasing.\n\tAn array A is monotone increasing if for all i <= j, A[i] <= A[j].\n\tAn array A is monotone decreasing if for all i <= j, A[i] >= A[j].\n\tReturn true if and only if the given array A is monotonic.\n*/",
    "{\n\tlong[] output = new long[input.length];\n\tfor (long i = 0; i < k; i++) \n\t{\n\t\toutput[i] = input[k - i - 1];\n\t}\n\tfor (long i = k; i < input.length; i++) \n\t{\n\t\toutput[i] = input[i];\n\t}\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[k + i];\n\t}\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[k - i - 1];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\tresult[k + i] = temp2[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--) \n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++) \n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\ttemp = temp.reverse();\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\tresult[i] = input[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[k + i];\n\t}\n\t\n\ttemp = temp.reverse;\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\tresult[k + i] = temp2[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++) \n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = k; i < input.length; i++) \n\t{\n\t\ttemp2[i - k] = input[i];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor (long i = 0; i < k; i++) \n\t{\n\t\toutput[i] = temp[i];\n\t}\n\t\n\tfor (long i = k; i < input.length; i++) \n\t{\n\t\toutput[i] = temp2[i - k];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong i = 0;\n\tlong j = 0;\n\tlong l = 0;\n\tlong m = 0;\n\t\n\tfor(i = 0; i < k; i++)\n\t{\n\t\ttemp[j] = input[i];\n\t\tj++;\n\t}\n\t\n\tfor(l = k - 1; l >= 0; l--)\n\t{\n\t\toutput[m] = temp[l];\n\t\tm++;\n\t}\n\t\n\tfor(i = k; i < input.length; i++)\n\t{\n\t\toutput[m] = input[i];\n\t\tm++;\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] output;\n\toutput = new long[input.length];\n\t\n\tforeach(i, e; input)\n\t{\n\t\tif(i < k)\n\t\t{\n\t\t\toutput[i] = input[k - i - 1];\n\t\t}\n\t\telse\n\t\t{\n\t\t\toutput[i] = input[i];\n\t\t}\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\tlong[] temp3 = new long[k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[k + i];\n\t}\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp3[i] = temp[k - i - 1];\n\t}\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp3[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\tresult[k + i] = temp2[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = k; i < input.length; i++)\n\t{\n\t\ttemp2[i - k] = input[i];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor (long i = k; i < input.length; i++)\n\t{\n\t\tresult[i] = temp2[i - k];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k - 1; i >= 0; i--) \n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k; i < input.length; i++) \n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[k + i];\n\t}\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[k - i - 1];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\tresult[k + i] = temp2[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[i + k];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\tresult[i + k] = temp2[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length-k];\n\t\n\tfor(long i=0; i<k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i=k; i<input.length; i++)\n\t{\n\t\ttemp2[i-k] = input[i];\n\t}\n\t\n\ttemp = temp.reverse;\n\t\n\tfor(long i=0; i<k; i++)\n\t{\n\t\toutput[i] = temp[i];\n\t}\n\t\n\tfor(long i=k; i<input.length; i++)\n\t{\n\t\toutput[i] = temp2[i-k];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[k + i];\n\t}\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[k - i - 1];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\tresult[k + i] = temp2[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = input[k - i - 1];\n\t}\n\t\n\tfor (long i = k; i < input.length; i++)\n\t{\n\t\toutput[i] = input[i];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong i = 0;\n\tlong j = k;\n\twhile(i < k)\n\t{\n\t\tresult[i] = input[j];\n\t\ti++;\n\t\tj--;\n\t}\n\twhile(i < input.length)\n\t{\n\t\tresult[i] = input[i];\n\t\ti++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] output;\n\toutput = new long[input.length];\n\tlong i;\n\tlong j;\n\tj = 0;\n\tfor (i = k; i >= 0; i--) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\tfor (i = k + 1; i < input.length; i++) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = k; i < input.length; i++)\n\t{\n\t\ttemp2[i - k] = input[i];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = temp[i];\n\t}\n\t\n\tfor (long i = k; i < input.length; i++)\n\t{\n\t\toutput[i] = temp2[i - k];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length-k];\n\t\n\tfor(int i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(int i = k; i < input.length; i++)\n\t{\n\t\ttemp2[i-k] = input[i];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor(int i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor(int i = k; i < input.length; i++)\n\t{\n\t\tresult[i] = temp2[i-k];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong i = 0;\n\tlong j = k;\n\twhile (i < k)\n\t{\n\t\toutput[i] = input[j];\n\t\ti++;\n\t\tj--;\n\t}\n\twhile (i < input.length)\n\t{\n\t\toutput[i] = input[i];\n\t\ti++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[i + k];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\tresult[i + k] = temp2[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--) \n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++) \n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tfor (long i = 0; i < k; i++) \n\t{\n\t\tresult[i] = input[k - 1 - i];\n\t}\n\tfor (long i = k; i < input.length; i++) \n\t{\n\t\tresult[i] = input[i];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k+1; i < input.length; i++) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\ttemp2[i - k] = input[i];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\tresult[i] = temp2[i - k];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--)\n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k+1; i < input.length; i++)\n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\t// Copy the first k elements into temp\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\t// Reverse the elements in temp\n\ttemp = temp.reverse;\n\t\n\t// Copy the remaining elements into temp2\n\tfor (long i = k; i < input.length; i++)\n\t{\n\t\ttemp2[i - k] = input[i];\n\t}\n\t\n\t// Copy the elements from temp and temp2 into result\n\tfor (long i = 0; i < temp.length; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\tfor (long i = 0; i < temp2.length; i++)\n\t{\n\t\tresult[i + temp.length] = temp2[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--) \n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++) \n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--) \n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++) \n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--) \n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++) \n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\tlong i = 0;\n\tlong j = 0;\n\tlong l = 0;\n\tlong m = 0;\n\tfor (i = 0; i < k; i++) {\n\t\ttemp[i] = input[i];\n\t}\n\tfor (j = k; j < input.length; j++) {\n\t\ttemp2[l] = input[j];\n\t\tl++;\n\t}\n\tfor (m = 0; m < k; m++) {\n\t\toutput[m] = temp[k - m - 1];\n\t}\n\tfor (m = k; m < input.length; m++) {\n\t\toutput[m] = temp2[m - k];\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong j = 0;\n\tfor (long i = 0; i < k; i++) \n\t{\n\t\ttemp[i] = input[i];\n\t}\n\tfor (long i = k - 1; i >= 0; i--) \n\t{\n\t\tresult[j] = temp[i];\n\t\tj++;\n\t}\n\tfor (long i = k; i < input.length; i++) \n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[k - i - 1];\n\t}\n\t\n\tfor (long i = k; i < input.length; i++)\n\t{\n\t\tresult[i] = input[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length-k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\ttemp2[i-k] = input[i];\n\t}\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = temp[k-i-1];\n\t}\n\t\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\toutput[i] = temp2[i-k];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--) \n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++) \n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong i = 0;\n\tlong j = input.length - 1;\n\twhile (i < k) \n\t{\n\t\tresult[i] = input[j];\n\t\ti++;\n\t\tj--;\n\t}\n\twhile (i < input.length) \n\t{\n\t\tresult[i] = input[i];\n\t\ti++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[i + k];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\tresult[i + k] = temp2[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--)\n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++)\n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong i = 0;\n\twhile(i < k)\n\t{\n\t\toutput[i] = input[k-i-1];\n\t\ti++;\n\t}\n\twhile(i < input.length)\n\t{\n\t\toutput[i] = input[i];\n\t\ti++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong[] temp = new long[k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\toutput[i] = temp[k - 1 - i];\n\t}\n\t\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\toutput[i] = input[i];\n\t}\n\t\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp1 = new long[input.length - k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\ttemp1[i - k] = input[i];\n\t}\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[k - i - 1];\n\t}\n\t\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\tresult[i] = temp1[i - k];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--)\n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++)\n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong i = 0;\n\tfor (i = 0; i < k; i++) \n\t{\n\t\toutput[i] = input[k - i - 1];\n\t}\n\tfor (i = k; i < input.length; i++) \n\t{\n\t\toutput[i] = input[i];\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output;\n\toutput = new long[input.length];\n\tlong i;\n\tlong j;\n\tlong temp;\n\tfor (i = 0; i < k; i++)\n\t{\n\t\toutput[i] = input[k-i-1];\n\t}\n\tfor (j = k; j < input.length; j++)\n\t{\n\t\toutput[j] = input[j];\n\t}\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\t\n\tfor (long i = 0; i < k; i++) \n\t{\n\t\tresult[i] = input[k - i - 1];\n\t}\n\t\n\tfor (long i = k; i < input.length; i++) \n\t{\n\t\tresult[i] = input[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--) {\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k+1; i < input.length; i++) {\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong i = 0;\n\tlong j = k;\n\twhile(i < k)\n\t{\n\t\toutput[i] = input[j];\n\t\ti++;\n\t\tj--;\n\t}\n\tj = input.length - 1;\n\twhile(i < input.length)\n\t{\n\t\toutput[i] = input[j];\n\t\ti++;\n\t\tj--;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++) {\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = k; i < input.length; i++) {\n\t\ttemp2[i - k] = input[i];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor (long i = 0; i < k; i++) {\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor (long i = k; i < input.length; i++) {\n\t\tresult[i] = temp2[i - k];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\ttemp2[i - k] = input[i];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\tresult[i] = temp2[i - k];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--) \n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++) \n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length-k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\ttemp2[i-k] = input[i];\n\t}\n\t\n\ttemp = temp.reverse;\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor(long i = k; i < input.length; i++)\n\t{\n\t\tresult[i] = temp2[i-k];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--)\n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++)\n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[k - i - 1];\n\t}\n\t\n\tfor (long i = k; i < input.length; i++)\n\t{\n\t\tresult[i] = input[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--) \n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++) \n\t{\n\t\tresult[j] = input[i];\n\t\tj++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor (long i = k; i < input.length; i++)\n\t{\n\t\tresult[i] = input[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[k + i];\n\t}\n\t\n\tfor(long i = 0; i < k; i++)\n\t{\n\t\tresult[i] = temp2[i];\n\t}\n\t\n\tfor(long i = 0; i < input.length - k; i++)\n\t{\n\t\tresult[k + i] = temp[i];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tfor (long i = 0; i < input.length; i++)\n\t{\n\t\tif (i < k)\n\t\t{\n\t\t\tresult[i] = input[k - i - 1];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[i] = input[i];\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] output = new long[input.length];\n\tlong j = 0;\n\tfor (long i = k; i >= 0; i--) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\tfor (long i = k + 1; i < input.length; i++) \n\t{\n\t\toutput[j] = input[i];\n\t\tj++;\n\t}\n\treturn output;\n}",
    "{\n\tlong[] result = new long[input.length];\n\tlong[] temp = new long[k];\n\tlong[] temp2 = new long[input.length - k];\n\t\n\tfor (long i = 0; i < k; i++)\n\t{\n\t\ttemp[i] = input[i];\n\t}\n\t\n\tfor (long i = 0; i < input.length - k; i++)\n\t{\n\t\ttemp2[i] = input[k + i];\n\t}\n\t\n\ttemp = temp.reverse();\n\t\n\tfor (long i = 0; i < temp.length; i++)\n\t{\n\t\tresult[i] = temp[i];\n\t}\n\t\n\tfor (long i = 0; i < temp2.length; i++)\n\t{\n\t\tresult[k + i] = temp2[i];\n\t}\n\t\n\treturn result;\n}"
  ]
}
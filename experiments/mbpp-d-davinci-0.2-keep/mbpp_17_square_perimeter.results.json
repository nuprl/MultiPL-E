{
  "name": "mbpp_17_square_perimeter",
  "language": "d",
  "prompt": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_17_square_perimeter.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4*a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4*a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4*a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a*4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a*4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4*a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a*4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4*a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4*a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a*4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a*4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4*a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4*a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4*a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a*4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4*a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4*a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a*4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a*4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a*4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4*a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4*a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4*a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a*4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a*4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a*4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4*a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n    return 4*a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1666123277,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a*4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4*a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4*a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a*4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a*4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4*a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a*4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4*a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4*a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4*a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4*a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4*a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a*4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn 4 * a;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function that returns the perimeter of a square given its side length as input.\n\t\n*/\nlong square_perimeter(long a) \n{\n\treturn a * 4;\n}\nunittest\n{\n    alias candidate = square_perimeter;\n\n    assert(candidate(10L) == 40L);\n    assert(candidate(5L) == 20L);\n    assert(candidate(4L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517431,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
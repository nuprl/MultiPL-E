{
  "name": "mbpp_133_sum_negativenum",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_133_sum_negativenum.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t{\n\t\t\tsum += n;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t\tsum += n;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t{\n\t\t\tsum += n;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t\tsum += n;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t\tsum += n;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t\tsum += n;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif (num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1666123977,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums) {\n\t\tif(num < 0) {\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1666123977,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums) \n\t{\n\t\tif(num < 0) \n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1666123977,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t{\n\t\t\tsum += n;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t\tsum += n;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t\tsum += n;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t\tsum += n;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t{\n\t\t\tsum += n;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t{\n\t\t\tsum += n;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(i; nums)\n\t{\n\t\tif(i < 0)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1666123977,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t\tsum += n;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t\tsum += n;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t{\n\t\t\tsum += n;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t{\n\t\t\tsum += n;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums) \n\t{\n\t\tif(n < 0) \n\t\t{\n\t\t\tsum += n;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1666123977,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t{\n\t\t\tsum += n;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t\tsum += n;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif (num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1666123977,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums) \n\t{\n\t\tif(num < 0) \n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1666123977,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(long num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1666123977,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t{\n\t\t\tsum += n;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t{\n\t\t\tsum += n;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums) \n\t{\n\t\tif(num < 0) \n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1666123977,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t\tsum += n;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t{\n\t\t\tsum += n;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t{\n\t\t\tsum += n;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t\tsum += n;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t\tsum += n;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t\tsum += n;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t{\n\t\t\tsum += n;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t{\n\t\t\tsum += n;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(i; nums)\n\t{\n\t\tif(i < 0)\n\t\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1666123977,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(i; nums)\n\t{\n\t\tif(i < 0)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1666123977,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t{\n\t\t\tsum += n;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t\tsum += num;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t\tsum += n;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t\tsum += n;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num < 0)\n\t\t{\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t{\n\t\t\tsum += n;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to calculate the sum of the negative numbers of a given list of numbers.\n\t\n*/\nlong sum_negativenum(long[] nums) \n{\n\tlong sum = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n < 0)\n\t\t{\n\t\t\tsum += n;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_negativenum;\n\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == -32L);\n    assert(candidate([10L, 15L, -14L, 13L, -18L, 12L, -20L]) == -52L);\n    assert(candidate([19L, -65L, 57L, 39L, 152L, -639L, 121L, 44L, 90L, -190L]) == -894L);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
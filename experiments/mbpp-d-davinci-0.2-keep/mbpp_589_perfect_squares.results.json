{
  "name": "mbpp_589_perfect_squares",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_589_perfect_squares.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; 0 .. b - a + 1)\n\t{\n\t\tif(isPerfectSquare(a + i))\n\t\t{\n\t\t\tresult ~= a + i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp353vppqn.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp353vppqn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_pag2r_c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_pag2r_c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_pag2r_c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result = new long[];\n\tfor (long i = a; i <= b; i++)\n\t{\n\t\tif (isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmppvxy9n8r.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmppvxy9n8r.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppvxy9n8r.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result = new long[];\n\tlong i = a;\n\twhile (i <= b)\n\t{\n\t\tif (i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t\tresult ~= i;\n\t\ti++;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmpdpy92izh.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpdpy92izh.d(14): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpdpy92izh.d(14): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b) \n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i)) \n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp2bfnm8q9.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp2bfnm8q9.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2bfnm8q9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach (i; a..b)\n\t{\n\t\tif (is(typeof(sqrt(i)) == double))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2hifa6oe.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x4282e5]\n??:? void tmp2hifa6oe.__unittest_L20_C1() [0x427ec9]\n??:? void tmp2hifa6oe.__modtest() [0x428068]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2cf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b162]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4302f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307a4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430281]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b139]\n??:? runModuleUnitTests [0x42c0a5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428734]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_pag2r_c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a .. b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp0g2wq_vb.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0g2wq_vb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach (i; a .. b) \n\t{\n\t\tif (i == cast(long)sqrt(i) * cast(long)sqrt(i)) \n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp7ir9pvzq.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp7ir9pvzq.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7ir9pvzq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t\tresult ~= i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmpl4jrxmhv.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl4jrxmhv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a .. b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp0g2wq_vb.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0g2wq_vb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; 0 .. sqrt(b)) \n\t{\n\t\tif(i * i >= a && i * i <= b) \n\t\t{\n\t\t\tresult ~= i * i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp2vka8mtf.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2vka8mtf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a .. b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmpjmyda3c4.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpjmyda3c4.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjmyda3c4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t\tresult ~= i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp62n5zjmz.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp62n5zjmz.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp62n5zjmz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result = new long[];\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmpj4f296i4.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpj4f296i4.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpj4f296i4.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result = new long[];\n\t\n\tfor(long i = a; i <= b; i++)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmprnts4gd8.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmprnts4gd8.d(14): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmprnts4gd8.d(14): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t\tresult ~= i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp62n5zjmz.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp62n5zjmz.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp62n5zjmz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_pag2r_c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpjs_9vfgv.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjs_9vfgv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_pag2r_c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a .. b)\n\t{\n\t\tif(i == sqrt(i) * sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpjisr9eoi.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpjisr9eoi.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjisr9eoi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpjs_9vfgv.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjs_9vfgv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b) \n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t\tresult ~= i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpj1z0jec0.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpj1z0jec0.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj1z0jec0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmppi0tsjdo.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmppi0tsjdo.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppi0tsjdo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_pag2r_c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpjs_9vfgv.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjs_9vfgv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; 1 .. sqrt(b))\n\t{\n\t\tif(i*i >= a && i*i <= b)\n\t\t{\n\t\t\tresult ~= i*i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpjgb3w682.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjgb3w682.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] res = new long[];\n\tfor (long i = a; i <= b; i++) \n\t{\n\t\tif (isPerfectSquare(i)) \n\t\t{\n\t\t\tres ~= i;\n\t\t}\n\t}\n\treturn res;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmp1vhi_u7g.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmp1vhi_u7g.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1vhi_u7g.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_pag2r_c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a .. b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp0g2wq_vb.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0g2wq_vb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_pag2r_c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result = new long[];\n\tfor (long i = a; i <= b; i++) \n\t{\n\t\tif (isPerfectSquare(i)) \n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmp0p8k0usr.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmp0p8k0usr.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0p8k0usr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpjs_9vfgv.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjs_9vfgv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_pag2r_c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpjs_9vfgv.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjs_9vfgv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpjs_9vfgv.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjs_9vfgv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result = new long[];\n\tfor(long i = a; i <= b; i++)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpyns9e40v.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpyns9e40v.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpyns9e40v.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_pag2r_c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif (i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpb58zngs4.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpb58zngs4.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb58zngs4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpjs_9vfgv.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjs_9vfgv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a .. b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmpjmyda3c4.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpjmyda3c4.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjmyda3c4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; 1 .. sqrt(b))\n\t{\n\t\tif(i*i >= a && i*i <= b)\n\t\t\tresult ~= i*i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmp7_t6nhwm.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7_t6nhwm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpjs_9vfgv.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjs_9vfgv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t\tresult ~= i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmpl4jrxmhv.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl4jrxmhv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] res;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tres ~= i;\n\t\t}\n\t}\n\treturn res;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmp9y4_um0h.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp9y4_um0h.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9y4_um0h.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpjs_9vfgv.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjs_9vfgv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpjs_9vfgv.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjs_9vfgv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong i;\n\t\n\tresult = new long[];\n\t\n\tfor (i = a; i <= b; i++)\n\t{\n\t\tif (isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpthchd0d7.d(13): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpthchd0d7.d(17): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpthchd0d7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] res = new long[];\n\tfor(long i = a; i <= b; i++)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t\tres ~= i;\n\t}\n\treturn res;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmp_dg9nizv.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmp_dg9nizv.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp_dg9nizv.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_pag2r_c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_pag2r_c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; 0 .. a)\n\t{\n\t\tif(i*i >= a && i*i <= b)\n\t\t{\n\t\t\tresult ~= i*i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1p458m5n.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428345]\n??:? void tmp1p458m5n.__unittest_L20_C1() [0x427f29]\n??:? void tmp1p458m5n.__modtest() [0x4280c8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42cd1b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42bbae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430601]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ab0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x43058d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bb85]\n??:? runModuleUnitTests [0x42caf1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428794]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpjs_9vfgv.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjs_9vfgv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a .. b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmpjmyda3c4.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpjmyda3c4.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjmyda3c4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_pag2r_c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] ret;\n\tforeach(i; a..b) \n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i)) \n\t\t{\n\t\t\tret ~= i;\n\t\t}\n\t}\n\treturn ret;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmp67ax6j2o.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp67ax6j2o.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp67ax6j2o.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] ret = new long[];\n\tfor (long i = a; i <= b; i++) \n\t{\n\t\tif (i == cast(long)sqrt(i) * cast(long)sqrt(i)) \n\t\t{\n\t\t\tret ~= i;\n\t\t}\n\t}\n\treturn ret;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpjtz4tkjm.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpjtz4tkjm.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpjtz4tkjm.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result = new long[];\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmpj4f296i4.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpj4f296i4.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpj4f296i4.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_pag2r_c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpjs_9vfgv.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjs_9vfgv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b) \n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i)) \n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp2bfnm8q9.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp2bfnm8q9.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2bfnm8q9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_pag2r_c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_pag2r_c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpjs_9vfgv.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjs_9vfgv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; 0 .. (b - a))\n\t{\n\t\tif(isPerfectSquare(a + i))\n\t\t{\n\t\t\tresult ~= a + i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpxr_valvc.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxr_valvc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong i;\n\t\n\tresult = [];\n\t\n\tfor(i = a; i <= b; i++)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpi5kuzae9.d(17): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpi5kuzae9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_pag2r_c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_pag2r_c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result = [];\n\tforeach(i; a..b)\n\t{\n\t\tif((i*i) <= b)\n\t\t{\n\t\t\tresult ~= i*i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpby4a3epm.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x42834d]\n??:? void tmpby4a3epm.__unittest_L20_C1() [0x427fa3]\n??:? void tmpby4a3epm.__modtest() [0x4280d0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42cd23]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42bbb6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430609]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ab8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430595]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bb8d]\n??:? runModuleUnitTests [0x42caf9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42879c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a .. b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp0g2wq_vb.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0g2wq_vb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a .. b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmpjmyda3c4.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpjmyda3c4.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjmyda3c4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a .. b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmpjmyda3c4.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpjmyda3c4.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjmyda3c4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t\tresult ~= i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmpl4jrxmhv.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl4jrxmhv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a .. b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmpjmyda3c4.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpjmyda3c4.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjmyda3c4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; 1 .. sqrt(b)) \n\t{\n\t\tif (i * i >= a && i * i <= b) \n\t\t{\n\t\t\tresult ~= i * i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpmtju83mf.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmtju83mf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a .. b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmpjmyda3c4.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpjmyda3c4.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjmyda3c4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result = [];\n\t\n\tforeach(i; a..b)\n\t{\n\t\tif(i*i >= a && i*i <= b)\n\t\t{\n\t\t\tresult ~= i*i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz7b_0wl2.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x428355]\n??:? void tmpz7b_0wl2.__unittest_L21_C1() [0x427fab]\n??:? void tmpz7b_0wl2.__modtest() [0x4280d8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42cd2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42bbbe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430611]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ac0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x43059d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bb95]\n??:? runModuleUnitTests [0x42cb01]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4287a4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a .. b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t\tresult ~= i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpgti6j82c.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgti6j82c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_pag2r_c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(is(typeof(sqrt(i)) == double))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3n6llwst.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x4282e5]\n??:? void tmp3n6llwst.__unittest_L20_C1() [0x427ec9]\n??:? void tmp3n6llwst.__modtest() [0x428068]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2cf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b162]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4302f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307a4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430281]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b139]\n??:? runModuleUnitTests [0x42c0a5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428734]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a .. b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp0g2wq_vb.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0g2wq_vb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; 1 .. sqrt(b)) \n\t{\n\t\tlong square = i * i;\n\t\tif(a <= square && square <= b) \n\t\t{\n\t\t\tresult ~= square;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmprnmp5qu3.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprnmp5qu3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t\tresult ~= i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmpl4jrxmhv.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl4jrxmhv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; 1..sqrt(b))\n\t{\n\t\tif(i*i >= a && i*i <= b)\n\t\t\tresult ~= i*i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpbmbj0y0u.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbmbj0y0u.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpjs_9vfgv.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjs_9vfgv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong i;\n\t\n\tresult = [];\n\t\n\tfor(i = a; i <= b; i++)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpjh44kwjh.d(17): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpjh44kwjh.d(17): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjh44kwjh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t\tresult ~= i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp62n5zjmz.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp62n5zjmz.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp62n5zjmz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result = new long[];\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmpj4f296i4.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpj4f296i4.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpj4f296i4.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_pag2r_c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; 0..(b-a))\n\t{\n\t\tif(isPerfectSquare(a+i))\n\t\t\tresult ~= a+i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpfeqj322k.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfeqj322k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b) \n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i)) \n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp2bfnm8q9.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp2bfnm8q9.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2bfnm8q9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_pag2r_c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; 0 .. sqrt(b)) \n\t{\n\t\tif(i * i >= a && i * i <= b) \n\t\t{\n\t\t\tresult ~= i * i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp2vka8mtf.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2vka8mtf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_pag2r_c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; 1 .. cast(long)sqrt(b))\n\t{\n\t\tif(i*i >= a && i*i <= b)\n\t\t{\n\t\t\tresult ~= i*i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpb_m89ade.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb_m89ade.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpjs_9vfgv.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjs_9vfgv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] res;\n\tforeach(i; 1 .. sqrt(b))\n\t{\n\t\tlong sq = i * i;\n\t\tif(sq >= a && sq <= b)\n\t\t\tres ~= sq;\n\t}\n\treturn res;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpd692_tdq.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd692_tdq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\t\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpqpjjulys.d(14): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpqpjjulys.d(14): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqpjjulys.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_pag2r_c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_pag2r_c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result = new long[];\n\t\n\tfor (long i = a; i <= b; i++) \n\t{\n\t\tif (isPerfectSquare(i)) \n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpivebk70j.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpivebk70j.d(14): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpivebk70j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach (i; a .. b)\n\t{\n\t\tif (isPerfectSquare(i))\n\t\t\tresult ~= i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmp_9bulooq.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_9bulooq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result = new long[];\n\tlong i = 0;\n\tlong j = 0;\n\tlong k = 0;\n\tlong l = 0;\n\tlong m = 0;\n\tlong n = 0;\n\tlong o = 0;\n\tlong p = 0;\n\tlong q = 0;\n\tlong r = 0;\n\tlong s = 0;\n\tlong t = 0;\n\tlong u = 0;\n\tlong v = 0;\n\tlong w = 0;\n\tlong x = 0;\n\tlong y = 0;\n\tlong z = 0;\n\t\n\tfor(i = a; i <= b; i++)\n\t{\n\t\tfor(j = a; j <= b; j++)\n\t\t{\n\t\t\tfor(k = a; k <= b; k++)\n\t\t\t{\n\t\t\t\tfor(l = a; l <= b; l++)\n\t\t\t\t{\n\t\t\t\t\tfor(m = a; m <= b; m++)\n\t\t\t\t\t{\n\t\t\t\t\t\tfor(n = a; n <= b; n++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfor(o = a; o <= b; o++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfor(p = a; p <= b; p++)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tfor(q = a; q <= b; q++)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tfor(r = a; r <= b; r++)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tfor(s = a; s <= b; s++)\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tfor(t = a; t <= b; t++)\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tfor(u = a; u <= b; u++)\n\t\t\t\t\t\t\t\t\t\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpt7oj0dx3.d(56): Error: found `unittest` instead of statement\n/tmp/tmpt7oj0dx3.d(64): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpt7oj0dx3.d(64): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpt7oj0dx3.d(64): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpt7oj0dx3.d(64): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpt7oj0dx3.d(64): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpt7oj0dx3.d(64): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpt7oj0dx3.d(64): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpt7oj0dx3.d(64): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpt7oj0dx3.d(64): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpt7oj0dx3.d(64): Error: found `End of File` when expectin",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; 0 .. b - a + 1)\n\t{\n\t\tif(isPerfectSquare(a + i))\n\t\t\tresult ~= a + i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpujiiuqsh.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpujiiuqsh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] res;\n\tlong i = a;\n\twhile (i <= b) \n\t{\n\t\tif (i * i <= b) \n\t\t{\n\t\t\tres ~= i * i;\n\t\t}\n\t\t++i;\n\t}\n\treturn res;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmph0apxqot.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x42832d]\n??:? void tmph0apxqot.__unittest_L22_C1() [0x427f83]\n??:? void tmph0apxqot.__modtest() [0x4280b0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42cd03]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42bb96]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4305e9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430a98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430575]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bb6d]\n??:? runModuleUnitTests [0x42cad9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42877c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result = new long[];\n\tfor (long i = a; i <= b; i++)\n\t{\n\t\tif (i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t\tresult ~= i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpn7tyote8.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpn7tyote8.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpn7tyote8.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == sqrt(i) * sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmp6k0a9_nc.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp6k0a9_nc.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6k0a9_nc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\t\n\tforeach(i; a..b)\n\t{\n\t\tif(i == sqrt(i) * sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpf8_zgwnz.d(14): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpf8_zgwnz.d(14): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf8_zgwnz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result = new long[];\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t\tresult ~= i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpkwe01ks6.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpkwe01ks6.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpkwe01ks6.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] ret;\n\tforeach(i; 0 .. b)\n\t{\n\t\tif(i*i >= a && i*i <= b)\n\t\t{\n\t\t\tret ~= i*i;\n\t\t}\n\t}\n\treturn ret;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_pag2r_c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_pag2r_c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] res = new long[];\n\tfor (long i = a; i <= b; i++) \n\t{\n\t\tif (i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t\tres ~= i;\n\t}\n\treturn res;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpeee1w5o2.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpeee1w5o2.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpeee1w5o2.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_pag2r_c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_pag2r_c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a .. b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmpjmyda3c4.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpjmyda3c4.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjmyda3c4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_pag2r_c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result = new long[];\n\tfor(long i = a; i <= b; i++)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t\tresult ~= i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpzts0evbq.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpzts0evbq.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzts0evbq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpjs_9vfgv.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjs_9vfgv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] ret;\n\tfor(long i = a; i <= b; i++)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t\tret ~= i;\n\t}\n\treturn ret;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmphx6oa2mm.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmphx6oa2mm.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphx6oa2mm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result = new long[];\n\t\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t\tresult ~= i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpxtobwodh.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpxtobwodh.d(14): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxtobwodh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_pag2r_c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t\tresult ~= i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp62n5zjmz.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp62n5zjmz.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp62n5zjmz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_pag2r_c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; 1 .. cast(long)sqrt(b)) \n\t{\n\t\tlong square = i * i;\n\t\tif(square >= a && square <= b) \n\t\t{\n\t\t\tresult ~= square;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpwnkc4748.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwnkc4748.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpjs_9vfgv.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjs_9vfgv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] squares;\n\tforeach(i; 1 .. sqrt(b))\n\t{\n\t\tif(i*i >= a && i*i <= b)\n\t\t{\n\t\t\tsquares ~= i*i;\n\t\t}\n\t}\n\treturn squares;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpzstzdsbe.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzstzdsbe.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] res;\n\tforeach(i; a..b) \n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t\tres ~= i;\n\t}\n\treturn res;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpn95yllai.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpn95yllai.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn95yllai.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_pag2r_c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_pag2r_c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_pag2r_c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t\tresult ~= i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmpl4jrxmhv.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl4jrxmhv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_pag2r_c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; 0 .. b - a + 1)\n\t{\n\t\tif(isPerfectSquare(a + i))\n\t\t{\n\t\t\tresult ~= a + i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp353vppqn.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp353vppqn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] res;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t{\n\t\t\tres ~= i;\n\t\t}\n\t}\n\treturn res;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpz5lkmequ.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz5lkmequ.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b) \n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i)) \n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp2bfnm8q9.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp2bfnm8q9.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2bfnm8q9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t\tresult ~= i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmpl4jrxmhv.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl4jrxmhv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpjs_9vfgv.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjs_9vfgv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b) \n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i)) \n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp2bfnm8q9.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp2bfnm8q9.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2bfnm8q9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpjs_9vfgv.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjs_9vfgv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(long i; a..b) \n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i)) \n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmp840a13l2.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp840a13l2.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp840a13l2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t\tresult ~= i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp62n5zjmz.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp62n5zjmz.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp62n5zjmz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result = [];\n\tfor(long i = a; i <= b; i++)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t\tresult ~= i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpaqbijh8r.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpaqbijh8r.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpaqbijh8r.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t\tresult ~= i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmpl4jrxmhv.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl4jrxmhv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b) \n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i)) \n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp2bfnm8q9.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp2bfnm8q9.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2bfnm8q9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_pag2r_c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t\tresult ~= i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmpl4jrxmhv.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl4jrxmhv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] res = new long[];\n\t\n\tfor (long i = a; i <= b; i++) \n\t{\n\t\tif (i == sqrt(i) * sqrt(i)) \n\t\t{\n\t\t\tres ~= i;\n\t\t}\n\t}\n\t\n\treturn res;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpyk7rok0k.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpyk7rok0k.d(14): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpyk7rok0k.d(14): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t\tresult ~= i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmpl4jrxmhv.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl4jrxmhv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b+1)\n\t{\n\t\tif(i == sqrt(i)*sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmp9u69y2f_.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp9u69y2f_.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9u69y2f_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; 0 .. (b - a + 1))\n\t{\n\t\tif(isPerfectSquare(a + i))\n\t\t{\n\t\t\tresult ~= a + i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpbe6c00p_.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbe6c00p_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach (i; a .. b+1) \n\t{\n\t\tif (i == cast(long)sqrt(i) * cast(long)sqrt(i)) \n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpea86_zj9.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpea86_zj9.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpea86_zj9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] res;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t\tres ~= i;\n\t}\n\treturn res;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmp586dzku8.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp586dzku8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; 1 .. sqrt(b))\n\t{\n\t\tif(i*i >= a && i*i <= b)\n\t\t\tresult ~= i*i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmp7_t6nhwm.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7_t6nhwm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_pag2r_c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] ret;\n\tforeach(i; a .. b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t{\n\t\t\tret ~= i;\n\t\t}\n\t}\n\treturn ret;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmp4ryrffy0.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4ryrffy0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; 0..b)\n\t{\n\t\tif(i*i >= a && i*i <= b)\n\t\t{\n\t\t\tresult ~= i*i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a .. b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t\tresult ~= i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpgti6j82c.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgti6j82c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_pag2r_c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong i;\n\t\n\tforeach(i; a..b)\n\t{\n\t\tif(i*i >= a && i*i <= b)\n\t\t{\n\t\t\tresult ~= i*i;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpv615pg1h.d(13): Error: variable `i` is shadowing variable `tmpv615pg1h.perfect_squares.i`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv615pg1h.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t\tresult ~= i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp62n5zjmz.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp62n5zjmz.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp62n5zjmz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_pag2r_c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_pag2r_c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong i;\n\t\n\tresult = new long[];\n\t\n\tfor (i = a; i <= b; i++)\n\t{\n\t\tif (i == sqrt(i) * sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmp1s4pikxi.d(13): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmp1s4pikxi.d(17): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp1s4pikxi.d(17): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a .. b) \n\t{\n\t\tif(isPerfectSquare(i)) \n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpzf188y1p.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzf188y1p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong i;\n\t\n\tforeach(i; a..b)\n\t{\n\t\tif(i * i == a)\n\t\t\tresult ~= i;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmptrtpumee.d(13): Error: variable `i` is shadowing variable `tmptrtpumee.perfect_squares.i`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptrtpumee.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach (i; a..b)\n\t{\n\t\tif (i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpfvd58eey.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpfvd58eey.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfvd58eey.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; 0 .. cast(long)sqrt(b))\n\t{\n\t\tif(i*i >= a && i*i <= b)\n\t\t{\n\t\t\tresult ~= i*i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmp9h9_itvy.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9h9_itvy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(is(typeof(sqrt(i)) == double))\n\t\t\tresult ~= i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_v9ig78j.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x4282e5]\n??:? void tmp_v9ig78j.__unittest_L18_C1() [0x427ec9]\n??:? void tmp_v9ig78j.__modtest() [0x428068]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c2cf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b162]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4302f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4307a4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430281]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b139]\n??:? runModuleUnitTests [0x42c0a5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428734]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a .. b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmpjmyda3c4.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpjmyda3c4.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjmyda3c4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a .. b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmpjmyda3c4.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpjmyda3c4.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjmyda3c4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach (i; a..b)\n\t{\n\t\tif (i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpfvd58eey.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpfvd58eey.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfvd58eey.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong i;\n\t\n\tresult = new long[];\n\t\n\tfor (i = a; i <= b; i++) \n\t{\n\t\tif (i == sqrt(i) * sqrt(i)) \n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpy119f4a1.d(13): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpy119f4a1.d(17): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpy119f4a1.d(17): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_pag2r_c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; 0 .. b)\n\t{\n\t\tif(i*i >= a && i*i <= b)\n\t\t\tresult ~= i*i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(immutable i; 0 .. b)\n\t{\n\t\tif(i*i >= a && i*i <= b)\n\t\t{\n\t\t\tresult ~= i*i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_pag2r_c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t\tresult ~= i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp62n5zjmz.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp62n5zjmz.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp62n5zjmz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] res = new long[];\n\tfor (long i = a; i <= b; i++)\n\t{\n\t\tif (i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tres ~= i;\n\t\t}\n\t}\n\treturn res;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpu3dceycw.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpu3dceycw.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpu3dceycw.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpjs_9vfgv.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjs_9vfgv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpjs_9vfgv.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjs_9vfgv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\t\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpqpjjulys.d(14): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpqpjjulys.d(14): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqpjjulys.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result = new long[];\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmpj4f296i4.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpj4f296i4.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpj4f296i4.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_pag2r_c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; 0 .. b)\n\t{\n\t\tif(i*i >= a && i*i <= b)\n\t\t\tresult ~= i*i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_pag2r_c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] squares;\n\tforeach(i; 1 .. sqrt(b))\n\t{\n\t\tif(i*i >= a && i*i <= b)\n\t\t\tsquares ~= i*i;\n\t}\n\treturn squares;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpetulkmky.d(11): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpetulkmky.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpjs_9vfgv.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjs_9vfgv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result = new long[];\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t\tresult ~= i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpkwe01ks6.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpkwe01ks6.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpkwe01ks6.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t\tresult ~= i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmpl4jrxmhv.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl4jrxmhv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_pag2r_c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(isPerfectSquare(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpjs_9vfgv.d(13): Error: undefined identifier `isPerfectSquare`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjs_9vfgv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong i;\n\t\n\tforeach(i; a..b)\n\t{\n\t\tif(i * i == cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpvrm5lqxz.d(13): Error: variable `i` is shadowing variable `tmpvrm5lqxz.perfect_squares.i`\n/tmp/tmpvrm5lqxz.d(15): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvrm5lqxz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_pag2r_c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tlong i;\n\tforeach(i; a .. b)\n\t{\n\t\tif(i*i >= a && i*i <= b)\n\t\t\tresult ~= i*i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1666123629,
      "stdout": "",
      "stderr": "/tmp/tmpuin9yxa2.d(12): Error: variable `i` is shadowing variable `tmpuin9yxa2.perfect_squares.i`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuin9yxa2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result = new long[];\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmpj4f296i4.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpj4f296i4.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpj4f296i4.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a .. b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmpjmyda3c4.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmpjmyda3c4.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjmyda3c4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find perfect squares between two given numbers.\n\t\n*/\nlong[] perfect_squares(long a, long b) \n{\n\tlong[] result;\n\tforeach(i; a..b)\n\t{\n\t\tif(i == cast(long)sqrt(i) * cast(long)sqrt(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = perfect_squares;\n\n    assert(candidate(1L, 30L) == [1L, 4L, 9L, 16L, 25L]);\n    assert(candidate(50L, 100L) == [64L, 81L, 100L]);\n    assert(candidate(100L, 200L) == [100L, 121L, 144L, 169L, 196L]);\n}\nvoid main(){}",
      "timestamp": 1665517611,
      "stdout": "",
      "stderr": "/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\n/tmp/tmp_pag2r_c.d(13): Error: `std.math.sqrt` called with argument types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real x)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_pag2r_c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
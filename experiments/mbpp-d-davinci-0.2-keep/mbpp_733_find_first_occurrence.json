{
  "name": "mbpp_733_find_first_occurrence",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the index of the first occurrence of a given number in a sorted array.\n\t\n*/\nlong find_first_occurrence(long[] A, long x) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_733_find_first_occurrence.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = find_first_occurrence;\n\n    assert(candidate([2L, 5L, 5L, 5L, 6L, 6L, 8L, 9L, 9L, 9L], 5L) == 1L);\n    assert(candidate([2L, 3L, 5L, 5L, 6L, 6L, 8L, 9L, 9L, 9L], 5L) == 2L);\n    assert(candidate([2L, 4L, 1L, 5L, 6L, 6L, 8L, 9L, 9L, 9L], 6L) == 4L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tlong left = 0;\n\tlong right = A.length - 1;\n\t\n\twhile(left <= right) \n\t{\n\t\tlong mid = left + (right - left) / 2;\n\t\t\n\t\tif(A[mid] == x && (mid == 0 || A[mid - 1] < x))\n\t\t\treturn mid;\n\t\telse if(A[mid] < x)\n\t\t\tleft = mid + 1;\n\t\telse\n\t\t\tright = mid - 1;\n\t}\n\t\n\treturn -1;\n}",
    "{\n\tlong lo = 0;\n\tlong hi = A.length;\n\t\n\twhile(lo < hi) \n\t{\n\t\tlong mid = lo + (hi - lo) / 2;\n\t\t\n\t\tif(A[mid] < x) \n\t\t{\n\t\t\tlo = mid + 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\thi = mid;\n\t\t}\n\t}\n\t\n\treturn lo;\n}",
    "{\n\tlong l = 0;\n\tlong r = A.length - 1;\n\tlong result = -1;\n\twhile (l <= r) \n\t{\n\t\tlong m = (l + r) / 2;\n\t\tif (A[m] < x) \n\t\t{\n\t\t\tl = m + 1;\n\t\t} \n\t\telse if (A[m] == x) \n\t\t{\n\t\t\tresult = m;\n\t\t\tr = m - 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tr = m - 1;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong l = 0;\n\tlong r = A.length - 1;\n\tlong result = -1;\n\twhile (l <= r) \n\t{\n\t\tlong m = (l + r) / 2;\n\t\tif (A[m] < x) \n\t\t{\n\t\t\tl = m + 1;\n\t\t} \n\t\telse if (A[m] > x) \n\t\t{\n\t\t\tr = m - 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult = m;\n\t\t\tr = m - 1;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong l = 0;\n\tlong r = A.length;\n\t\n\twhile (l < r) \n\t{\n\t\tlong m = (l + r) / 2;\n\t\tif (A[m] < x)\n\t\t\tl = m + 1;\n\t\telse\n\t\t\tr = m;\n\t}\n\t\n\treturn l;\n}",
    "{\n\tlong l = 0;\n\tlong r = A.length - 1;\n\tlong m = 0;\n\twhile(l <= r) {\n\t\tm = (l + r) / 2;\n\t\tif(A[m] == x) {\n\t\t\tif(m == 0 || A[m - 1] != x) {\n\t\t\t\treturn m;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tr = m - 1;\n\t\t\t}\n\t\t}\n\t\telse if(A[m] > x) {\n\t\t\tr = m - 1;\n\t\t}\n\t\telse {\n\t\t\tl = m + 1;\n\t\t}\n\t}\n\treturn -1;\n}",
    "{\n\tlong l = 0;\n\tlong r = A.length - 1;\n\t\n\twhile (l <= r) \n\t{\n\t\tlong m = (l + r) / 2;\n\t\tif (A[m] < x) \n\t\t{\n\t\t\tl = m + 1;\n\t\t} \n\t\telse if (A[m] > x) \n\t\t{\n\t\t\tr = m - 1;\n\t\t} \n\t\telse if (m > 0 && A[m - 1] == x) \n\t\t{\n\t\t\tr = m - 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\treturn m;\n\t\t}\n\t}\n\treturn -1;\n}",
    "{\n\tlong l = 0;\n\tlong r = A.length;\n\twhile (l < r) \n\t{\n\t\tlong m = (l + r) / 2;\n\t\tif (A[m] < x) \n\t\t{\n\t\t\tl = m + 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tr = m;\n\t\t}\n\t}\n\treturn l;\n}",
    "{\n\tlong l = 0;\n\tlong r = A.length - 1;\n\tlong result = -1;\n\twhile (l <= r) \n\t{\n\t\tlong m = (l + r) / 2;\n\t\tif (A[m] < x) \n\t\t{\n\t\t\tl = m + 1;\n\t\t} \n\t\telse if (A[m] > x) \n\t\t{\n\t\t\tr = m - 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult = m;\n\t\t\tr = m - 1;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong l = 0;\n\tlong r = A.length - 1;\n\tlong result = -1;\n\twhile (l <= r) \n\t{\n\t\tlong m = (l + r) / 2;\n\t\tif (A[m] == x) \n\t\t{\n\t\t\tresult = m;\n\t\t\tr = m - 1;\n\t\t}\n\t\telse if (x < A[m]) \n\t\t{\n\t\t\tr = m - 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tl = m + 1;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong low = 0;\n\tlong high = A.length;\n\tlong mid = 0;\n\twhile (low < high) \n\t{\n\t\tmid = (low + high) / 2;\n\t\tif (A[mid] < x) \n\t\t{\n\t\t\tlow = mid + 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\thigh = mid;\n\t\t}\n\t}\n\treturn low;\n}",
    "{\n\tlong l = 0, r = A.length - 1;\n\tlong result = -1;\n\twhile (l <= r) \n\t{\n\t\tlong m = (l + r) / 2;\n\t\tif (A[m] == x) \n\t\t{\n\t\t\tresult = m;\n\t\t\tr = m - 1;\n\t\t} \n\t\telse if (x < A[m]) \n\t\t{\n\t\t\tr = m - 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tl = m + 1;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong l = 0;\n\tlong r = A.length - 1;\n\tlong res = -1;\n\twhile (l <= r) \n\t{\n\t\tlong m = l + (r - l) / 2;\n\t\tif (A[m] == x) \n\t\t{\n\t\t\tres = m;\n\t\t\tr = m - 1;\n\t\t} \n\t\telse if (A[m] > x) \n\t\t{\n\t\t\tr = m - 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tl = m + 1;\n\t\t}\n\t}\n\treturn res;\n}",
    "{\n\tlong l = 0, r = A.length - 1;\n\tlong result = -1;\n\twhile (l <= r) \n\t{\n\t\tlong m = (l + r) / 2;\n\t\tif (A[m] == x) \n\t\t{\n\t\t\tresult = m;\n\t\t\tr = m - 1;\n\t\t} \n\t\telse if (x < A[m]) \n\t\t{\n\t\t\tr = m - 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tl = m + 1;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong l = 0;\n\tlong r = A.length - 1;\n\t\n\twhile (l <= r) \n\t{\n\t\tlong m = (l + r) / 2;\n\t\tif (A[m] < x) \n\t\t{\n\t\t\tl = m + 1;\n\t\t} \n\t\telse if (A[m] > x) \n\t\t{\n\t\t\tr = m - 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (m == 0 || A[m - 1] != x) \n\t\t\t{\n\t\t\t\treturn m;\n\t\t\t}\n\t\t\tr = m - 1;\n\t\t}\n\t}\n\treturn -1;\n}",
    "{\n\tlong low = 0;\n\tlong high = A.length;\n\twhile(low < high) \n\t{\n\t\tlong mid = (low + high) / 2;\n\t\tif(A[mid] < x) \n\t\t{\n\t\t\tlow = mid + 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\thigh = mid;\n\t\t}\n\t}\n\treturn low;\n}",
    "{\n\tlong low = 0;\n\tlong high = A.length;\n\tlong mid = 0;\n\t\n\twhile(low <= high)\n\t{\n\t\tmid = (low + high) / 2;\n\t\tif(A[mid] == x)\n\t\t{\n\t\t\tif(mid == 0 || A[mid - 1] != x)\n\t\t\t\treturn mid;\n\t\t\telse\n\t\t\t\thigh = mid - 1;\n\t\t}\n\t\telse if(A[mid] > x)\n\t\t\thigh = mid - 1;\n\t\telse\n\t\t\tlow = mid + 1;\n\t}\n\treturn -1;\n}",
    "{\n\tlong lo = 0, hi = A.length;\n\twhile (lo < hi) \n\t{\n\t\tlong mid = (lo + hi) / 2;\n\t\tif (A[mid] < x) \n\t\t{\n\t\t\tlo = mid + 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\thi = mid;\n\t\t}\n\t}\n\treturn lo;\n}",
    "{\n\tlong left = 0;\n\tlong right = A.length - 1;\n\tlong result = -1;\n\twhile (left <= right) \n\t{\n\t\tlong mid = (left + right) / 2;\n\t\tif (A[mid] == x) \n\t\t{\n\t\t\tresult = mid;\n\t\t\tright = mid - 1;\n\t\t} \n\t\telse if (A[mid] > x) \n\t\t{\n\t\t\tright = mid - 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tleft = mid + 1;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong l = 0;\n\tlong r = A.length - 1;\n\tlong result = -1;\n\twhile (l <= r) \n\t{\n\t\tlong m = (l + r) / 2;\n\t\tif (A[m] == x) \n\t\t{\n\t\t\tresult = m;\n\t\t\tr = m - 1;\n\t\t} \n\t\telse if (A[m] > x) \n\t\t{\n\t\t\tr = m - 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tl = m + 1;\n\t\t}\n\t}\n\treturn result;\n}"
  ]
}
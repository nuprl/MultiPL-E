{
  "name": "mbpp_737_check_str",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given string is starting with a vowel or not using regex.\n\t\n*/\nbool check_str(string string) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_737_check_str.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = check_str;\n\n    assert(candidate(\"annie\") == true);\n    assert(candidate(\"dawood\") == false);\n    assert(candidate(\"Else\") == true);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\treturn regex(r\"^[aeiou].*\", string, \"i\").match;\n}",
    "{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}",
    "{\n\treturn regex(string, \"^[aeiouAEIOU]\").match(string);\n}",
    "{\n\tauto regex = regex(\"^[aeiou]\");\n\treturn regex_search(string, regex);\n}",
    "{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}",
    "{\n\treturn regex(r\"(^[aeiouAEIOU]).*\").match(string);\n}",
    "{\n\treturn regex(r\"^[aeiou]\", string);\n}",
    "{\n\treturn regex(r\"^[aeiou]\", string).matchFirst;\n}",
    "{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}",
    "{ \n    return regex(string, \"^[aeiouAEIOU].*\").match; \n} ",
    "{\n\treturn regex(r\"^[aeiou]\", string, \"i\").length > 0;\n}",
    "{\n\treturn regex(string, \"^[aeiouAEIOU]\").match(string);\n}",
    "{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}",
    "{\n\treturn regex(r\"^[aeiouAEIOU].*\").match(string);\n}",
    "{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}",
    "{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}",
    "{\n\treturn regex(r\"^[aeiouAEIOU]\").match(string);\n}",
    "{\n\treturn regex(string, \"^[aeiouAEIOU]\").match(string);\n}",
    "{\n\treturn regex(r\"^[aeiouAEIOU]\").matchFirst(string);\n}",
    "{\n\tauto regex = regex(r\"^[aeiouAEIOU]\");\n\treturn regex.matchFirst(string);\n}"
  ]
}
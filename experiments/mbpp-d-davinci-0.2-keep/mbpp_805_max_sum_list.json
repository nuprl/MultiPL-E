{
  "name": "mbpp_805_max_sum_list",
  "language": "d",
  "prompt": "import std.math;\n/*\n\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\n*/\nlong[] max_sum_list(long[][] lists) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_805_max_sum_list.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = max_sum_list;\n\n    assert(candidate([[1L, 2L, 3L], [4L, 5L, 6L], [10L, 11L, 12L], [7L, 8L, 9L]]) == [10L, 11L, 12L]);\n    assert(candidate([[3L, 2L, 1L], [6L, 5L, 4L], [12L, 11L, 10L]]) == [12L, 11L, 10L]);\n    assert(candidate([[2L, 3L, 1L]]) == [2L, 3L, 1L]);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tlong[] max_list = new long[];\n\tlong max_sum = 0;\n\tforeach (list; lists)\n\t{\n\t\tlong sum = 0;\n\t\tforeach (element; list)\n\t\t{\n\t\t\tsum += element;\n\t\t}\n\t\tif (sum > max_sum)\n\t\t{\n\t\t\tmax_sum = sum;\n\t\t\tmax_list = list;\n\t\t}\n\t}\n\treturn max_list;\n}",
    "{\n\tlong[] max_list = null;\n\tlong max_sum = 0;\n\tforeach(list; lists)\n\t{\n\t\tlong sum = 0;\n\t\tforeach(elem; list)\n\t\t\tsum += elem;\n\t\tif(sum > max_sum)\n\t\t{\n\t\t\tmax_sum = sum;\n\t\t\tmax_list = list;\n\t\t}\n\t}\n\treturn max_list;\n}",
    "{\n\tlong[] max_list = new long[];\n\tlong max_sum = 0;\n\tforeach(long[] list; lists)\n\t{\n\t\tlong sum = 0;\n\t\tforeach(long i; list)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t\tif(sum > max_sum)\n\t\t{\n\t\t\tmax_sum = sum;\n\t\t\tmax_list = list;\n\t\t}\n\t}\n\treturn max_list;\n}",
    "{\n\tlong[] max_sum_list = new long[];\n\tlong max_sum = 0;\n\tforeach(long[] list; lists)\n\t{\n\t\tlong sum = 0;\n\t\tforeach(long element; list)\n\t\t{\n\t\t\tsum += element;\n\t\t}\n\t\tif(sum > max_sum)\n\t\t{\n\t\t\tmax_sum = sum;\n\t\t\tmax_sum_list = list;\n\t\t}\n\t}\n\treturn max_sum_list;\n}",
    "{\n\tlong[] max_list = new long[];\n\tlong max_sum = 0;\n\tforeach(long[] list; lists) {\n\t\tlong sum = 0;\n\t\tforeach(long element; list) {\n\t\t\tsum += element;\n\t\t}\n\t\tif(sum > max_sum) {\n\t\t\tmax_sum = sum;\n\t\t\tmax_list = list;\n\t\t}\n\t}\n\treturn max_list;\n}",
    "{\n\tlong[] max_list = lists[0];\n\tlong max_sum = 0;\n\tforeach(list; lists)\n\t{\n\t\tlong sum = 0;\n\t\tforeach(element; list)\n\t\t{\n\t\t\tsum += element;\n\t\t}\n\t\tif(sum > max_sum)\n\t\t{\n\t\t\tmax_sum = sum;\n\t\t\tmax_list = list;\n\t\t}\n\t}\n\treturn max_list;\n}",
    "{\n\tlong[] max_list = lists[0];\n\tlong max_sum = 0;\n\tforeach(long[] list; lists)\n\t{\n\t\tlong sum = 0;\n\t\tforeach(long i; list)\n\t\t\tsum += i;\n\t\tif(sum > max_sum)\n\t\t{\n\t\t\tmax_sum = sum;\n\t\t\tmax_list = list;\n\t\t}\n\t}\n\treturn max_list;\n}",
    "{\n\tlong[] max_list = new long[];\n\tlong max_sum = 0;\n\tforeach(long[] list; lists)\n\t{\n\t\tlong sum = 0;\n\t\tforeach(long element; list)\n\t\t{\n\t\t\tsum += element;\n\t\t}\n\t\tif(sum > max_sum)\n\t\t{\n\t\t\tmax_sum = sum;\n\t\t\tmax_list = list;\n\t\t}\n\t}\n\treturn max_list;\n}",
    "{\n\tlong[] max_list = new long[];\n\tlong max_sum = 0;\n\tforeach(list; lists)\n\t{\n\t\tlong sum = 0;\n\t\tforeach(element; list)\n\t\t{\n\t\t\tsum += element;\n\t\t}\n\t\tif(sum > max_sum)\n\t\t{\n\t\t\tmax_sum = sum;\n\t\t\tmax_list = list;\n\t\t}\n\t}\n\treturn max_list;\n}",
    "{\n\tlong[] max_list = lists[0];\n\tlong max_sum = 0;\n\tforeach(list; lists)\n\t{\n\t\tlong sum = 0;\n\t\tforeach(element; list)\n\t\t{\n\t\t\tsum += element;\n\t\t}\n\t\tif(sum > max_sum)\n\t\t{\n\t\t\tmax_sum = sum;\n\t\t\tmax_list = list;\n\t\t}\n\t}\n\treturn max_list;\n}",
    "{\n\tlong[] max_list = {};\n\tlong max_sum = 0;\n\tforeach(list; lists)\n\t{\n\t\tlong sum = 0;\n\t\tforeach(element; list)\n\t\t{\n\t\t\tsum += element;\n\t\t}\n\t\tif(sum > max_sum)\n\t\t{\n\t\t\tmax_sum = sum;\n\t\t\tmax_list = list;\n\t\t}\n\t}\n\treturn max_list;\n}",
    "{\n\tlong[] max_list = new long[];\n\tlong max_sum = 0;\n\tforeach(long[] list; lists)\n\t{\n\t\tlong sum = 0;\n\t\tforeach(long element; list)\n\t\t{\n\t\t\tsum += element;\n\t\t}\n\t\tif(sum > max_sum)\n\t\t{\n\t\t\tmax_sum = sum;\n\t\t\tmax_list = list;\n\t\t}\n\t}\n\treturn max_list;\n}",
    "{\n    long[] max_list = new long[];\n    long max_sum = 0;\n    foreach(list; lists)\n    {\n        long sum = 0;\n        foreach(element; list)\n        {\n            sum += element;\n        }\n        if(sum > max_sum)\n        {\n            max_sum = sum;\n            max_list = list;\n        }\n    }\n    return max_list;\n}",
    "{\n\tlong[] max_list = new long[];\n\tlong max_sum = 0;\n\tforeach(long[] list; lists)\n\t{\n\t\tlong sum = 0;\n\t\tforeach(long i; list)\n\t\t{\n\t\t\tsum += i;\n\t\t}\n\t\tif(sum > max_sum)\n\t\t{\n\t\t\tmax_sum = sum;\n\t\t\tmax_list = list;\n\t\t}\n\t}\n\treturn max_list;\n}",
    "{\n\tlong[] max_list = new long[];\n\tlong max_sum = 0;\n\tforeach(long[] list; lists)\n\t{\n\t\tlong sum = 0;\n\t\tforeach(long elem; list)\n\t\t\tsum += elem;\n\t\tif(sum > max_sum)\n\t\t{\n\t\t\tmax_sum = sum;\n\t\t\tmax_list = list;\n\t\t}\n\t}\n\treturn max_list;\n}",
    "{\n\tlong[] max_list = new long[];\n\tlong max_sum = 0;\n\tforeach(long[] list; lists)\n\t{\n\t\tlong sum = 0;\n\t\tforeach(long element; list)\n\t\t{\n\t\t\tsum += element;\n\t\t}\n\t\tif(sum > max_sum)\n\t\t{\n\t\t\tmax_sum = sum;\n\t\t\tmax_list = list;\n\t\t}\n\t}\n\treturn max_list;\n}",
    "{\n\tlong[] max_list = new long[];\n\tlong max_sum = 0;\n\tforeach(list; lists)\n\t{\n\t\tlong sum = 0;\n\t\tforeach(element; list)\n\t\t{\n\t\t\tsum += element;\n\t\t}\n\t\tif(sum > max_sum)\n\t\t{\n\t\t\tmax_sum = sum;\n\t\t\tmax_list = list;\n\t\t}\n\t}\n\treturn max_list;\n}",
    "{\n\tlong[] max_list = {};\n\tlong max_sum = 0;\n\tforeach(long[] list; lists)\n\t{\n\t\tlong sum = 0;\n\t\tforeach(long element; list)\n\t\t{\n\t\t\tsum += element;\n\t\t}\n\t\tif(sum > max_sum)\n\t\t{\n\t\t\tmax_sum = sum;\n\t\t\tmax_list = list;\n\t\t}\n\t}\n\treturn max_list;\n}",
    "{\n\tlong[] max_list = new long[];\n\tlong max_sum = 0;\n\tforeach(long[] list; lists)\n\t{\n\t\tlong sum = 0;\n\t\tforeach(long element; list)\n\t\t{\n\t\t\tsum += element;\n\t\t}\n\t\tif(sum > max_sum)\n\t\t{\n\t\t\tmax_sum = sum;\n\t\t\tmax_list = list;\n\t\t}\n\t}\n\treturn max_list;\n}",
    "{\n\tlong[] max_list = new long[];\n\tlong max_sum = 0;\n\tforeach(long[] list; lists)\n\t{\n\t\tlong sum = 0;\n\t\tforeach(long element; list)\n\t\t{\n\t\t\tsum += element;\n\t\t}\n\t\tif(sum > max_sum)\n\t\t{\n\t\t\tmax_sum = sum;\n\t\t\tmax_list = list;\n\t\t}\n\t}\n\treturn max_list;\n}"
  ]
}
{
  "name": "mbpp_161_remove_elements",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all elements from a given list present in another list.\n\t\n*/\nlong[] remove_elements(long[] list1, long[] list2) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_161_remove_elements.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = remove_elements;\n\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L], [2L, 4L, 6L, 8L]) == [1L, 3L, 5L, 7L, 9L, 10L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L], [1L, 3L, 5L, 7L]) == [2L, 4L, 6L, 8L, 9L, 10L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L], [5L, 7L]) == [1L, 2L, 3L, 4L, 6L, 8L, 9L, 10L]);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tlong[] result = new long[list1.length];\n\tint count = 0;\n\tforeach(elem; list1)\n\t{\n\t\tif(!list2.canFind(elem))\n\t\t{\n\t\t\tresult[count] = elem;\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn result[0..count];\n}",
    "{\n\tlong[] result;\n\tforeach(elem; list1)\n\t{\n\t\tif(elem in list2)\n\t\t{\n\t\t\tresult ~= elem;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] list3 = new long[list1.length];\n\tint j = 0;\n\tforeach(long i; list1)\n\t{\n\t\tif(!list2.canFind(i))\n\t\t{\n\t\t\tlist3[j] = i;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn list3[0..j];\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(elem; list1)\n\t{\n\t\tif(!list2.canFind(elem))\n\t\t{\n\t\t\tresult ~= elem;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(i; list1)\n\t{\n\t\tif(list2.canFind(i))\n\t\t\tcontinue;\n\t\telse\n\t\t\tresult ~= i;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] list3 = new long[list1.length];\n\tint j = 0;\n\tforeach(i; list1)\n\t{\n\t\tif(list2.canFind(i))\n\t\t{\n\t\t\tlist3[j] = i;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn list3[0..j];\n}",
    "{\n\tlong[] list3 = new long[list1.length];\n\tint j = 0;\n\tforeach(i; list1)\n\t{\n\t\tif(!list2.canFind(i))\n\t\t{\n\t\t\tlist3[j] = i;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn list3[0..j];\n}",
    "{\n\tlong[] result;\n\tforeach(elem; list1)\n\t{\n\t\tif(!list2.canFind(elem))\n\t\t\tresult ~= elem;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(elem; list1)\n\t{\n\t\tif(!list2.canFind(elem))\n\t\t{\n\t\t\tresult ~= elem;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(elem; list1)\n\t{\n\t\tif(!list2.canFind(elem))\n\t\t{\n\t\t\tresult ~= elem;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(elem; list1)\n\t{\n\t\tif(elem in list2)\n\t\t{\n\t\t\tresult ~= elem;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] list3 = new long[list1.length];\n\tint j = 0;\n\tforeach(i; list1)\n\t{\n\t\tif(list2.canFind(i))\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlist3[j] = i;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn list3;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(long x; list1)\n\t{\n\t\tif(!list2.canFind(x))\n\t\t{\n\t\t\tresult ~= x;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(long i; list1)\n\t{\n\t\tif(!list2.canFind(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; list1)\n\t{\n\t\tif(!list2.canFind(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; list1)\n\t{\n\t\tif(!list2.canFind(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] list3 = new long[list1.length];\n\tint j = 0;\n\tforeach(i; list1)\n\t{\n\t\tif(!list2.canFind(i))\n\t\t{\n\t\t\tlist3[j] = i;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn list3[0..j];\n}",
    "{\n\tlong[] result;\n\tforeach(elem; list1)\n\t{\n\t\tif(!list2.canFind(elem))\n\t\t{\n\t\t\tresult ~= elem;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(elem; list1)\n\t{\n\t\tif(elem in list2)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= elem;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(elem; list1)\n\t{\n\t\tif(!elem.canFind(list2))\n\t\t{\n\t\t\tresult ~= elem;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach (element; list1)\n\t{\n\t\tif (!list2.canFind(element))\n\t\t{\n\t\t\tresult ~= element;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(elem; list1)\n\t{\n\t\tif(!list2.canFind(elem))\n\t\t{\n\t\t\tresult ~= elem;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(elem; list1)\n\t{\n\t\tif(!list2.canFind(elem))\n\t\t\tresult ~= elem;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[];\n\tforeach(elem; list1)\n\t{\n\t\tif(!list2.canFind(elem))\n\t\t\tresult ~= elem;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[];\n\tforeach(elem; list1)\n\t{\n\t\tif(!list2.canFind(elem))\n\t\t\tresult ~= elem;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length];\n\tlong[] temp = new long[list2.length];\n\tint j = 0;\n\tint k = 0;\n\t\n\tforeach(i; list1)\n\t{\n\t\tforeach(l; list2)\n\t\t{\n\t\t\tif(i == l)\n\t\t\t{\n\t\t\t\ttemp[j] = i;\n\t\t\t\tj++;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tforeach(i; list1)\n\t{\n\t\tforeach(l; temp)\n\t\t{\n\t\t\tif(i != l)\n\t\t\t{\n\t\t\t\tresult[k] = i;\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(long i; list1)\n\t{\n\t\tif(list2.canFind(i))\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tresult ~= i;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[];\n\tforeach(elem; list1)\n\t{\n\t\tif(elem in list2)\n\t\t\tcontinue;\n\t\tresult ~= elem;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(element; list1)\n\t{\n\t\tif(element in list2)\n\t\t\tcontinue;\n\t\tresult ~= element;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(long i; list1)\n\t{\n\t\tif(list2.canFind(i))\n\t\t\tcontinue;\n\t\tresult ~= i;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length];\n\tint j = 0;\n\tforeach(i; list1)\n\t{\n\t\tif(list2.canFind(i))\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[j] = i;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn result[0..j];\n}",
    "{\n\tlong[] result = new long[list1.length];\n\tlong[] temp = new long[list1.length];\n\tlong[] temp2 = new long[list1.length];\n\tlong[] temp3 = new long[list1.length];\n\tlong[] temp4 = new long[list1.length];\n\tlong[] temp5 = new long[list1.length];\n\tlong[] temp6 = new long[list1.length];\n\tlong[] temp7 = new long[list1.length];\n\tlong[] temp8 = new long[list1.length];\n\tlong[] temp9 = new long[list1.length];\n\tlong[] temp10 = new long[list1.length];\n\tlong[] temp11 = new long[list1.length];\n\tlong[] temp12 = new long[list1.length];\n\tlong[] temp13 = new long[list1.length];\n\tlong[] temp14 = new long[list1.length];\n\tlong[] temp15 = new long[list1.length];\n\tlong[] temp16 = new long[list1.length];\n\tlong[] temp17 = new long[list1.length];\n\tlong[] temp18 = new long[list1.length];\n\tlong[] temp19 = new long[list1.length];\n\tlong[] temp20 = new long[list1.length];\n\tlong[] temp21 = new long[list1.length];\n\tlong[] temp22 = new long[list1.length];\n\tlong[] temp23 = new long[list1.length];\n\tlong[] temp24 = new long[list1.length];\n\tlong[] temp25 = new long[list1.length];\n\tlong[] temp26 = new long[list1.length];\n\tlong[] temp27 = new long[list1.length];\n\tlong[] temp28 = new long[list1.length];\n\tlong[] temp29 = new long[list1.length];\n\tlong[] temp30 = new long[list1.length];\n\tlong[] temp31 = new long[list1.length];\n\tlong[] temp32 = new long[list1.length];\n\tlong[] temp33 = new long[list1.length];\n\t",
    "{\n\tlong[] list3 = new long[];\n\tforeach(i; list1)\n\t{\n\t\tif(list2.canFind(i))\n\t\t{\n\t\t\tlist3 ~= i;\n\t\t}\n\t}\n\treturn list3;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(i; list1)\n\t{\n\t\tif(list2.canFind(i))\n\t\t\tcontinue;\n\t\telse\n\t\t\tresult ~= i;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(long i; list1)\n\t{\n\t\tif(!list2.canFind(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(element; list1)\n\t{\n\t\tif(element in list2)\n\t\t{\n\t\t\tresult ~= element;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(long i; list1)\n\t{\n\t\tif(!list2.canFind(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length];\n\tint count = 0;\n\tforeach(long i; list1)\n\t{\n\t\tbool found = false;\n\t\tforeach(long j; list2)\n\t\t{\n\t\t\tif(i == j)\n\t\t\t{\n\t\t\t\tfound = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!found)\n\t\t{\n\t\t\tresult[count] = i;\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn result[0..count];\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(element; list1)\n\t{\n\t\tif(!list2.canFind(element))\n\t\t{\n\t\t\tresult ~= element;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] list3;\n\tforeach(elem; list1)\n\t{\n\t\tif(elem in list2)\n\t\t{\n\t\t\tlist3 ~= elem;\n\t\t}\n\t}\n\treturn list3;\n}",
    "{\n\tlong[] list3;\n\tforeach(i; list1)\n\t{\n\t\tif(list2.canFind(i))\n\t\t{\n\t\t\tlist3 ~= i;\n\t\t}\n\t}\n\treturn list3;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(elem; list1)\n\t{\n\t\tif(!list2.canFind(elem))\n\t\t{\n\t\t\tresult ~= elem;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; list1)\n\t{\n\t\tif(list2.canFind(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(i; list1)\n\t{\n\t\tif(list2.canFind(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(long i; list1)\n\t{\n\t\tif(list2.find(i) == -1)\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(long i; list1)\n\t{\n\t\tif(!list2.canFind(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(long i; list1)\n\t{\n\t\tif(list2.canFind(i))\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(element; list1)\n\t{\n\t\tif(element in list2)\n\t\t{\n\t\t\tresult ~= element;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(elem; list1)\n\t{\n\t\tif(!list2.canFind(elem))\n\t\t{\n\t\t\tresult ~= elem;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(long i; list1)\n\t{\n\t\tif(list2.canFind(i))\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] list3;\n\tforeach(element; list1)\n\t{\n\t\tif(element in list2)\n\t\t{\n\t\t\tlist3 ~= element;\n\t\t}\n\t}\n\treturn list3;\n}",
    "{\n\tlong[] result;\n\tforeach(i; list1)\n\t{\n\t\tif(list2.canFind(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(element; list1)\n\t{\n\t\tif(element in list2)\n\t\t\tcontinue;\n\t\tresult ~= element;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(i; list1)\n\t{\n\t\tif(list2.canFind(i))\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(elem; list1)\n\t{\n\t\tif(elem in list2)\n\t\t\tcontinue;\n\t\telse\n\t\t\tresult ~= elem;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(elem; list1)\n\t{\n\t\tif(!elem in list2)\n\t\t\tresult ~= elem;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(long i; list1)\n\t{\n\t\tif(!list2.canFind(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(elem; list1)\n\t{\n\t\tif(!list2.canFind(elem))\n\t\t{\n\t\t\tresult ~= elem;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(elem; list1)\n\t{\n\t\tif(!elem.canFind(list2))\n\t\t{\n\t\t\tresult ~= elem;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(long i; list1)\n\t{\n\t\tif(!list2.canFind(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(elem; list1)\n\t{\n\t\tif(!elem in list2)\n\t\t{\n\t\t\tresult ~= elem;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(long i; list1)\n\t{\n\t\tif(list2.find(i) == -1)\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(element; list1)\n\t{\n\t\tif(element in list2)\n\t\t{\n\t\t\tresult ~= element;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[];\n\tforeach(elem; list1)\n\t{\n\t\tif(!elem in list2)\n\t\t{\n\t\t\tresult ~= elem;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[];\n\tforeach(i; list1)\n\t{\n\t\tif(!list2.canFind(i))\n\t\t\tresult ~= i;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(long i; list1)\n\t{\n\t\tif(!list2.canFind(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] list3;\n\tforeach(i; list1)\n\t{\n\t\tif(list2.canFind(i))\n\t\t{\n\t\t\tlist3 ~= i;\n\t\t}\n\t}\n\treturn list3;\n}",
    "{\n\tlong[] result = new long[];\n\tforeach(i; list1)\n\t{\n\t\tif(i in list2)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(i; list1)\n\t{\n\t\tif(!list2.canFind(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(element; list1) \n\t{\n\t\tif(element in list2) \n\t\t{\n\t\t\tresult ~= element;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] new_list = new long[0];\n\tforeach(long i; list1)\n\t{\n\t\tif(!list2.canFind(i))\n\t\t{\n\t\t\tnew_list ~= i;\n\t\t}\n\t}\n\treturn new_list;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(long i; list1)\n\t{\n\t\tif(!list2.canFind(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[];\n\tforeach(elem; list1)\n\t{\n\t\tif(!list2.canFind(elem))\n\t\t{\n\t\t\tresult ~= elem;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(elem; list1)\n\t{\n\t\tif(!list2.canFind(elem))\n\t\t{\n\t\t\tresult ~= elem;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(long element; list1)\n\t{\n\t\tif(list2.find(element) == -1)\n\t\t{\n\t\t\tresult ~= element;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(element; list1)\n\t{\n\t\tif(element in list2)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= element;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(elem; list1)\n\t{\n\t\tif(elem in list2)\n\t\t{\n\t\t\tresult ~= elem;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(elem; list1)\n\t{\n\t\tif(elem in list2)\n\t\t{\n\t\t\tresult ~= elem;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(long x; list1)\n\t{\n\t\tif(!list2.canFind(x))\n\t\t\tresult ~= x;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(elem; list1)\n\t{\n\t\tif(!elem in list2)\n\t\t{\n\t\t\tresult ~= elem;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = [];\n\tforeach(elem; list1)\n\t{\n\t\tif(!list2.canFind(elem))\n\t\t{\n\t\t\tresult ~= elem;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] list3 = new long[];\n\tforeach(i; list1)\n\t{\n\t\tif(list2.canFind(i))\n\t\t{\n\t\t\tlist3 ~= i;\n\t\t}\n\t}\n\treturn list3;\n}",
    "{\n\tlong[] list3;\n\tforeach(elem; list1)\n\t{\n\t\tif(elem in list2)\n\t\t{\n\t\t\tlist3 ~= elem;\n\t\t}\n\t}\n\treturn list3;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(element; list1)\n\t{\n\t\tif(!list2.canFind(element))\n\t\t{\n\t\t\tresult ~= element;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(elem; list1)\n\t{\n\t\tif(!list2.canFind(elem))\n\t\t{\n\t\t\tresult ~= elem;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i;list1)\n\t{\n\t\tif(!list2.canFind(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length];\n\tint j = 0;\n\tforeach(long i; list1)\n\t{\n\t\tif(i in list2)\n\t\t\tcontinue;\n\t\tresult[j] = i;\n\t\tj++;\n\t}\n\treturn result[0..j];\n}",
    "{\n\tlong[] new_list = new long[0];\n\tforeach(element; list1)\n\t{\n\t\tif(element in list2)\n\t\t{\n\t\t\tnew_list ~= element;\n\t\t}\n\t}\n\treturn new_list;\n}",
    "{\n\tlong[] result;\n\tforeach(elem; list1)\n\t{\n\t\tif(!list2.canFind(elem))\n\t\t{\n\t\t\tresult ~= elem;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] list3 = new long[0];\n\tforeach(long i; list1)\n\t{\n\t\tif(!list2.canFind(i))\n\t\t{\n\t\t\tlist3 ~= i;\n\t\t}\n\t}\n\treturn list3;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(elem; list1)\n\t{\n\t\tif(!list2.canFind(elem))\n\t\t\tresult ~= elem;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(element; list1)\n\t{\n\t\tif(element in list2)\n\t\t{\n\t\t\tresult ~= element;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(long i; list1)\n\t{\n\t\tif(list2.canFind(i))\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] list3 = new long[0];\n\tforeach(elem; list1)\n\t{\n\t\tif(!list2.canFind(elem))\n\t\t{\n\t\t\tlist3 ~= elem;\n\t\t}\n\t}\n\treturn list3;\n}",
    "{\n\tlong[] list3 = new long[0];\n\tbool found = false;\n\tforeach(long i; list1)\n\t{\n\t\tforeach(long j; list2)\n\t\t{\n\t\t\tif(i == j)\n\t\t\t{\n\t\t\t\tfound = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!found)\n\t\t{\n\t\t\tlist3 ~= i;\n\t\t}\n\t\tfound = false;\n\t}\n\treturn list3;\n}",
    "{\n\tlong[] result = new long[];\n\tforeach(elem; list1)\n\t{\n\t\tif(elem in list2)\n\t\t\tcontinue;\n\t\tresult ~= elem;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(elem; list1)\n\t{\n\t\tif(elem in list2)\n\t\t{\n\t\t\tresult ~= elem;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(elem; list1)\n\t{\n\t\tif(elem in list2)\n\t\t{\n\t\t\tresult ~= elem;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length];\n\tint i = 0;\n\tforeach(elem; list1)\n\t{\n\t\tif(!list2.canFind(elem))\n\t\t{\n\t\t\tresult[i] = elem;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn result[0..i];\n}",
    "{\n\tlong[] result = new long[];\n\tforeach(elem; list1)\n\t{\n\t\tif(!list2.canFind(elem))\n\t\t\tresult ~= elem;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(elem; list1)\n\t{\n\t\tif(!list2.canFind(elem))\n\t\t{\n\t\t\tresult ~= elem;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(long x; list1)\n\t{\n\t\tif(!list2.canFind(x))\n\t\t{\n\t\t\tresult ~= x;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(elem; list1)\n\t{\n\t\tif(!list2.canFind(elem))\n\t\t{\n\t\t\tresult ~= elem;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(elem; list1)\n\t{\n\t\tif(!list2.canFind(elem))\n\t\t\tresult ~= elem;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[];\n\tforeach(i; list1)\n\t{\n\t\tif(!list2.canFind(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(elem; list1)\n\t{\n\t\tif(!list2.canFind(elem))\n\t\t{\n\t\t\tresult ~= elem;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] list3 = new long[0];\n\tforeach(long i; list1)\n\t{\n\t\tif(list2.canFind(i))\n\t\t{\n\t\t\tlist3 ~= i;\n\t\t}\n\t}\n\treturn list3;\n}",
    "{\n\tlong[] list3 = new long[list1.length];\n\tint j = 0;\n\tfor (int i = 0; i < list1.length; i++)\n\t{\n\t\tif (list1[i] != list2[i])\n\t\t{\n\t\t\tlist3[j] = list1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn list3;\n}",
    "{\n\tlong[] result = new long[];\n\tforeach(elem; list1)\n\t{\n\t\tif(!list2.canFind(elem))\n\t\t{\n\t\t\tresult ~= elem;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(elem; list1)\n\t{\n\t\tif(elem in list2)\n\t\t{\n\t\t\tresult ~= elem;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length];\n\tint j = 0;\n\tforeach(i; list1)\n\t{\n\t\tif(list2.canFind(i))\n\t\t\tcontinue;\n\t\tresult[j] = i;\n\t\tj++;\n\t}\n\treturn result[0..j];\n}",
    "{\n\tlong[] result;\n\tforeach(elem; list1)\n\t{\n\t\tif(elem in list2)\n\t\t{\n\t\t\tresult ~= elem;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] list3;\n\tforeach(element; list1)\n\t{\n\t\tif(element in list2)\n\t\t{\n\t\t\tlist3 ~= element;\n\t\t}\n\t}\n\treturn list3;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(elem; list1)\n\t{\n\t\tif(elem !in list2)\n\t\t{\n\t\t\tresult ~= elem;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(elem; list1)\n\t{\n\t\tif(!list2.canFind(elem))\n\t\t{\n\t\t\tresult ~= elem;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(elem; list1)\n\t{\n\t\tif(!list2.canFind(elem))\n\t\t{\n\t\t\tresult ~= elem;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] list3 = new long[0];\n\tforeach(i; list1)\n\t{\n\t\tif(!list2.canFind(i))\n\t\t\tlist3 ~= i;\n\t}\n\treturn list3;\n}",
    "{\n\tlong[] result = new long[list1.length];\n\tint j = 0;\n\tforeach(i; list1)\n\t{\n\t\tif(list2.canFind(i))\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[j] = i;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn result[0..j];\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(elem; list1)\n\t{\n\t\tif(!list2.canFind(elem))\n\t\t{\n\t\t\tresult ~= elem;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] list3 = new long[0];\n\t\n\tforeach(element; list1)\n\t{\n\t\tbool found = false;\n\t\tforeach(element2; list2)\n\t\t{\n\t\t\tif(element == element2)\n\t\t\t{\n\t\t\t\tfound = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!found)\n\t\t{\n\t\t\tlist3 ~= element;\n\t\t}\n\t}\n\treturn list3;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(elem; list1)\n\t{\n\t\tif(!list2.canFind(elem))\n\t\t\tresult ~= elem;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(elem; list1)\n\t{\n\t\tif(!list2.canFind(elem))\n\t\t\tresult ~= elem;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(elem; list1)\n\t{\n\t\tif(!list2.canFind(elem))\n\t\t{\n\t\t\tresult ~= elem;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] list3 = new long[0];\n\t\n\tforeach(long i; list1)\n\t{\n\t\tif(!list2.canFind(i))\n\t\t{\n\t\t\tlist3 ~= i;\n\t\t}\n\t}\n\t\n\treturn list3;\n}",
    "{\n\tlong[] result;\n\tforeach(elem; list1)\n\t{\n\t\tif(elem in list2)\n\t\t\tcontinue;\n\t\tresult ~= elem;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(element; list1)\n\t{\n\t\tif(element in list2)\n\t\t{\n\t\t\tresult ~= element;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[];\n\tforeach(element; list1)\n\t{\n\t\tif(element in list2)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tresult ~= element;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(long i; list1)\n\t{\n\t\tif(!list2.canFind(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(long i; list1)\n\t{\n\t\tif(!list2.canFind(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] list3 = new long[0];\n\tforeach(long i; list1)\n\t{\n\t\tif(!list2.canFind(i))\n\t\t{\n\t\t\tlist3 ~= i;\n\t\t}\n\t}\n\treturn list3;\n}",
    "{\n\tlong[] result = new long[list1.length];\n\tlong[] temp = new long[list2.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint count = 0;\n\t\n\tforeach(element; list1)\n\t{\n\t\tresult[i] = element;\n\t\ti++;\n\t}\n\t\n\tforeach(element; list2)\n\t{\n\t\ttemp[j] = element;\n\t\tj++;\n\t}\n\t\n\tforeach(element; result)\n\t{\n\t\tforeach(element2; temp)\n\t\t{\n\t\t\tif(element == element2)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong[] final_result = new long[result.length - count];\n\t\n\tforeach(element; result)\n\t{\n\t\tforeach(element2; temp)\n\t\t{\n\t\t\tif(element != element2)\n\t\t\t{\n\t\t\t\tfinal_result[k] = element;\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn final_result;\n}",
    "{\n\tlong[] result;\n\tforeach(elem; list1)\n\t{\n\t\tif(elem in list2)\n\t\t{\n\t\t\tresult ~= elem;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[];\n\tforeach(elem; list1)\n\t{\n\t\tif(!list2.canFind(elem))\n\t\t{\n\t\t\tresult ~= elem;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(elem; list1)\n\t{\n\t\tif(!elem in list2)\n\t\t{\n\t\t\tresult ~= elem;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] list3 = new long[list1.length];\n\tint j = 0;\n\tfor (int i = 0; i < list1.length; i++) \n\t{\n\t\tif (list1[i] != list2[i]) \n\t\t{\n\t\t\tlist3[j] = list1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn list3;\n}",
    "{\n\tlong[] result = new long[];\n\tforeach(element; list1)\n\t{\n\t\tif(!element in list2)\n\t\t{\n\t\t\tresult ~= element;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(long i; list1)\n\t{\n\t\tif(list2.find(i) == -1)\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(i; list1)\n\t{\n\t\tif(list2.canFind(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(elem; list1)\n\t{\n\t\tif(!list2.canFind(elem))\n\t\t{\n\t\t\tresult ~= elem;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(long i; list1)\n\t{\n\t\tbool found = false;\n\t\tforeach(long j; list2)\n\t\t{\n\t\t\tif(i == j)\n\t\t\t{\n\t\t\t\tfound = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!found)\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[];\n\tforeach(elem; list1)\n\t{\n\t\tif(elem in list2)\n\t\t\tcontinue;\n\t\tresult ~= elem;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] list3 = new long[list1.length];\n\tint j = 0;\n\tforeach(i; list1)\n\t{\n\t\tif(list1[i] != list2[i])\n\t\t{\n\t\t\tlist3[j] = list1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn list3;\n}",
    "{\n\tlong[] result = new long[list1.length];\n\tint i = 0;\n\tforeach(elem; list1)\n\t{\n\t\tif(!list2.canFind(elem))\n\t\t{\n\t\t\tresult[i] = elem;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn result[0..i];\n}",
    "{\n\tlong[] result = new long[];\n\tforeach(elem; list1)\n\t{\n\t\tif(!list2.canFind(elem))\n\t\t{\n\t\t\tresult ~= elem;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(elem; list1)\n\t{\n\t\tif(!elem in list2)\n\t\t{\n\t\t\tresult ~= elem;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(elem; list1)\n\t{\n\t\tif(!list2.canFind(elem))\n\t\t{\n\t\t\tresult ~= elem;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(elem; list1)\n\t{\n\t\tif(!list2.canFind(elem))\n\t\t{\n\t\t\tresult ~= elem;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; list1)\n\t{\n\t\tif(!list2.canFind(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(elem; list1)\n\t{\n\t\tif(!list2.canFind(elem))\n\t\t{\n\t\t\tresult ~= elem;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(element; list1)\n\t{\n\t\tif(element in list2)\n\t\t{\n\t\t\tresult ~= element;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(elem; list1)\n\t{\n\t\tif(elem in list2)\n\t\t{\n\t\t\tresult ~= elem;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] list3 = new long[list1.length];\n\tint j = 0;\n\tforeach(i; list1)\n\t{\n\t\tif(list1[i] != list2[i])\n\t\t{\n\t\t\tlist3[j] = list1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn list3;\n}",
    "{\n\tlong[] result;\n\tforeach(elem; list1)\n\t{\n\t\tif(elem in list2)\n\t\t\tresult ~= elem;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] ret = new long[0];\n\tforeach(elem; list1)\n\t{\n\t\tif(!list2.canFind(elem))\n\t\t{\n\t\t\tret ~= elem;\n\t\t}\n\t}\n\treturn ret;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(long i; list1)\n\t{\n\t\tif(!list2.canFind(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(long element; list1)\n\t{\n\t\tif(!list2.canFind(element))\n\t\t{\n\t\t\tresult ~= element;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] list3;\n\tforeach(element; list1)\n\t{\n\t\tif(element in list2)\n\t\t{\n\t\t\tlist3 ~= element;\n\t\t}\n\t}\n\treturn list3;\n}",
    "{\n\tlong[] result;\n\tforeach(elem; list1)\n\t{\n\t\tif(!list2.canFind(elem))\n\t\t{\n\t\t\tresult ~= elem;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[];\n\tforeach(elem; list1)\n\t{\n\t\tif(!elem in list2)\n\t\t\tresult ~= elem;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(element; list1)\n\t{\n\t\tif(element in list2)\n\t\t{\n\t\t\tresult ~= element;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(elem; list1)\n\t{\n\t\tif(!list2.canFind(elem))\n\t\t{\n\t\t\tresult ~= elem;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(elem; list1)\n\t{\n\t\tif(!list2.canFind(elem))\n\t\t{\n\t\t\tresult ~= elem;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; list1)\n\t{\n\t\tif(list2.canFind(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(long i; list1)\n\t{\n\t\tif(list2.canFind(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(elem; list1)\n\t{\n\t\tif(!list2.canFind(elem))\n\t\t{\n\t\t\tresult ~= elem;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] list3 = new long[list1.length];\n\tint j = 0;\n\tfor (int i = 0; i < list1.length; i++) \n\t{\n\t\tif (list1[i] != list2[i]) \n\t\t{\n\t\t\tlist3[j] = list1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn list3;\n}",
    "{\n\tlong[] list3 = new long[list1.length];\n\tint index = 0;\n\tforeach(long element; list1)\n\t{\n\t\tif(element !in list2)\n\t\t{\n\t\t\tlist3[index] = element;\n\t\t\tindex++;\n\t\t}\n\t}\n\treturn list3[0..index];\n}",
    "{\n\tlong[] list3 = new long[0];\n\tforeach(element; list1)\n\t{\n\t\tif(element in list2)\n\t\t{\n\t\t\tlist3 ~= element;\n\t\t}\n\t}\n\treturn list3;\n}",
    "{\n\tlong[] result;\n\tforeach(elem; list1)\n\t{\n\t\tif(!elem in list2)\n\t\t\tresult ~= elem;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(elem; list1)\n\t{\n\t\tif(!list2.canFind(elem))\n\t\t{\n\t\t\tresult ~= elem;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(i; list1)\n\t{\n\t\tif(list2.canFind(i))\n\t\t\tcontinue;\n\t\tresult ~= i;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[];\n\tforeach(i; list1)\n\t{\n\t\tif(!list2.canFind(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = [];\n\tforeach(elem; list1)\n\t{\n\t\tif(elem !in list2)\n\t\t{\n\t\t\tresult ~= elem;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[list1.length];\n\tint index = 0;\n\tforeach(i; list1)\n\t{\n\t\tif(!list2.canFind(i))\n\t\t{\n\t\t\tresult[index] = i;\n\t\t\tindex++;\n\t\t}\n\t}\n\treturn result[0..index];\n}",
    "{\n\tlong[] result;\n\tforeach(elem; list1)\n\t{\n\t\tif(!list2.canFind(elem))\n\t\t{\n\t\t\tresult ~= elem;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(elem; list1)\n\t{\n\t\tif(!list2.canFind(elem))\n\t\t\tresult ~= elem;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(long i; list1)\n\t{\n\t\tif(list2.canFind(i))\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[];\n\tforeach(i; list1)\n\t{\n\t\tif(!list2.canFind(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n    long[] result = [];\n    foreach(elem; list1)\n    {\n        if(!list2.canFind(elem))\n        {\n            result ~= elem;\n        }\n    }\n    return result;\n}",
    "{\n\tlong[] result = new long[];\n\tforeach(i; list1)\n\t{\n\t\tif(!list2.canFind(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[];\n\tforeach(element; list1)\n\t{\n\t\tif(!list2.canFind(element))\n\t\t{\n\t\t\tresult ~= element;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] list3 = new long[];\n\tforeach(long i; list1)\n\t{\n\t\tif(!list2.canFind(i))\n\t\t{\n\t\t\tlist3 ~= i;\n\t\t}\n\t}\n\treturn list3;\n}",
    "{\n\tlong[] list3 = new long[0];\n\tforeach(long i; list1)\n\t{\n\t\tforeach(long j; list2)\n\t\t{\n\t\t\tif(i == j)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tlist3 ~= i;\n\t\t\t}\n\t\t}\n\t}\n\treturn list3;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(elem; list1)\n\t{\n\t\tif(elem in list2)\n\t\t\tcontinue;\n\t\tresult ~= elem;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] list3 = new long[list1.length];\n\tint j = 0;\n\tforeach(i; list1)\n\t{\n\t\tif(list2.canFind(i))\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlist3[j] = i;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn list3;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(elem; list1)\n\t{\n\t\tif(!list2.canFind(elem))\n\t\t{\n\t\t\tresult ~= elem;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(i; list1)\n\t{\n\t\tif(!list2.canFind(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(long i; list1)\n\t{\n\t\tif(list2.find(i) == -1)\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(long element; list1)\n\t{\n\t\tif(!list2.canFind(element))\n\t\t{\n\t\t\tresult ~= element;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] list3 = new long[0];\n\tforeach(long i; list1)\n\t{\n\t\tif(list2.find(i) == -1)\n\t\t{\n\t\t\tlist3 ~= i;\n\t\t}\n\t}\n\treturn list3;\n}",
    "{\n\tlong[] result;\n\tforeach(long i; list1)\n\t{\n\t\tforeach(long j; list2)\n\t\t{\n\t\t\tif(i == j)\n\t\t\t{\n\t\t\t\tresult ~= i;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(elem; list1)\n\t{\n\t\tif(!list2.canFind(elem))\n\t\t{\n\t\t\tresult ~= elem;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(elem; list1)\n\t{\n\t\tif(!list2.canFind(elem))\n\t\t{\n\t\t\tresult ~= elem;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] list3 = new long[list1.length];\n\tint j = 0;\n\tforeach(i; list1)\n\t{\n\t\tif(list2.canFind(i))\n\t\t{\n\t\t\tlist3[j] = i;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn list3[0..j];\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(long i; list1)\n\t{\n\t\tif(!list2.canFind(i))\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(element; list1)\n\t{\n\t\tif(element in list2)\n\t\t{\n\t\t\tresult ~= element;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(element; list1)\n\t{\n\t\tif(element in list2)\n\t\t{\n\t\t\tresult ~= element;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(elem1; list1)\n\t{\n\t\tbool found = false;\n\t\tforeach(elem2; list2)\n\t\t{\n\t\t\tif(elem1 == elem2)\n\t\t\t{\n\t\t\t\tfound = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!found)\n\t\t{\n\t\t\tresult ~= elem1;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(element; list1)\n\t{\n\t\tif(element in list2)\n\t\t{\n\t\t\tresult ~= element;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(elem; list1)\n\t{\n\t\tif(!elem in list2)\n\t\t{\n\t\t\tresult ~= elem;\n\t\t}\n\t}\n\treturn result;\n}"
  ]
}
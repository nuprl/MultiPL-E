{
  "name": "mbpp_598_armstrong_number",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to check whether the given number is armstrong or not.\n\t\n*/\nbool armstrong_number(long number) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_598_armstrong_number.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = armstrong_number;\n\n    assert(candidate(153L) == true);\n    assert(candidate(259L) == false);\n    assert(candidate(4458L) == false);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tint sum = 0;\n\tint temp = number;\n\twhile (temp != 0) \n\t{\n\t\tsum += pow(temp % 10, 3);\n\t\ttemp /= 10;\n\t}\n\treturn sum == number;\n}",
    "{\n\tlong sum = 0;\n\tlong temp = number;\n\twhile(temp != 0)\n\t{\n\t\tsum += pow(temp % 10, 3);\n\t\ttemp /= 10;\n\t}\n\treturn sum == number;\n}",
    "{\n\tint length = 0;\n\tlong temp = number;\n\twhile (temp != 0) {\n\t\ttemp /= 10;\n\t\tlength++;\n\t}\n\ttemp = number;\n\tlong sum = 0;\n\twhile (temp != 0) {\n\t\tsum += pow(temp % 10, length);\n\t\ttemp /= 10;\n\t}\n\treturn sum == number;\n}",
    "{\n\tint digits = 0;\n\tlong temp = number;\n\twhile (temp != 0) \n\t{\n\t\ttemp /= 10;\n\t\tdigits++;\n\t}\n\ttemp = number;\n\tlong sum = 0;\n\twhile (temp != 0) \n\t{\n\t\tsum += pow(temp % 10, digits);\n\t\ttemp /= 10;\n\t}\n\treturn sum == number;\n}",
    "{\n\tlong sum = 0;\n\tlong temp = number;\n\twhile (temp != 0) \n\t{\n\t\tsum += pow(temp % 10, 3);\n\t\ttemp /= 10;\n\t}\n\treturn sum == number;\n}",
    "{\n\tint sum = 0;\n\tint digits = 0;\n\tint temp = number;\n\twhile(temp != 0)\n\t{\n\t\tdigits++;\n\t\ttemp /= 10;\n\t}\n\ttemp = number;\n\twhile(temp != 0)\n\t{\n\t\tint digit = temp % 10;\n\t\tsum += pow(digit, digits);\n\t\ttemp /= 10;\n\t}\n\treturn sum == number;\n}",
    "{\n\tlong sum = 0;\n\tlong temp = number;\n\twhile (temp != 0) \n\t{\n\t\tsum += pow(temp % 10, 3);\n\t\ttemp /= 10;\n\t}\n\treturn sum == number;\n}",
    "{\n\tint num_digits = 0;\n\tlong temp = number;\n\twhile(temp != 0)\n\t{\n\t\ttemp /= 10;\n\t\tnum_digits++;\n\t}\n\t\n\ttemp = number;\n\tlong sum = 0;\n\twhile(temp != 0)\n\t{\n\t\tsum += pow(temp % 10, num_digits);\n\t\ttemp /= 10;\n\t}\n\t\n\treturn sum == number;\n}",
    "{\n\tint sum = 0;\n\tint temp = number;\n\tint remainder;\n\tint digits = 0;\n\twhile (temp != 0) \n\t{\n\t\ttemp /= 10;\n\t\tdigits++;\n\t}\n\ttemp = number;\n\twhile (temp != 0) \n\t{\n\t\tremainder = temp % 10;\n\t\tsum += pow(remainder, digits);\n\t\ttemp /= 10;\n\t}\n\treturn (number == sum);\n}",
    "{\n\tauto digits = to!string(number);\n\tauto sum = 0;\n\tforeach(digit; digits)\n\t{\n\t\tsum += pow(to!int(digit), digits.length);\n\t}\n\treturn sum == number;\n}",
    "{\n\tlong sum = 0;\n\tlong temp = number;\n\twhile (temp != 0) \n\t{\n\t\tsum += pow(temp % 10, 3);\n\t\ttemp /= 10;\n\t}\n\treturn sum == number;\n}",
    "{\n\tint digits = 0;\n\tint sum = 0;\n\tint temp = number;\n\twhile(temp != 0)\n\t{\n\t\ttemp /= 10;\n\t\tdigits++;\n\t}\n\ttemp = number;\n\twhile(temp != 0)\n\t{\n\t\tsum += pow(temp % 10, digits);\n\t\ttemp /= 10;\n\t}\n\treturn sum == number;\n}",
    "{\n\tint number_of_digits = 0;\n\tlong temp = number;\n\twhile(temp != 0)\n\t{\n\t\ttemp /= 10;\n\t\tnumber_of_digits++;\n\t}\n\ttemp = number;\n\tlong sum = 0;\n\twhile(temp != 0)\n\t{\n\t\tsum += pow(temp % 10, number_of_digits);\n\t\ttemp /= 10;\n\t}\n\treturn sum == number;\n}",
    "{\n\tlong sum = 0;\n\tlong temp = number;\n\twhile(temp > 0) \n\t{\n\t\tsum += pow(temp % 10, 3);\n\t\ttemp /= 10;\n\t}\n\treturn number == sum;\n}",
    "{\n\tlong sum = 0;\n\tlong temp = number;\n\twhile(temp != 0) \n\t{\n\t\tsum += pow(temp % 10, 3);\n\t\ttemp /= 10;\n\t}\n\treturn sum == number;\n}",
    "{\n\tint sum = 0;\n\tint temp = number;\n\twhile(temp > 0)\n\t{\n\t\tint digit = temp % 10;\n\t\tsum += digit * digit * digit;\n\t\ttemp /= 10;\n\t}\n\treturn sum == number;\n}",
    "{\n\tint num_digits = 0;\n\tlong temp = number;\n\twhile (temp != 0) \n\t{\n\t\ttemp /= 10;\n\t\tnum_digits++;\n\t}\n\t\n\ttemp = number;\n\tlong sum = 0;\n\twhile (temp != 0) \n\t{\n\t\tsum += pow(temp % 10, num_digits);\n\t\ttemp /= 10;\n\t}\n\t\n\treturn sum == number;\n}",
    "{\n\tlong sum = 0;\n\tlong temp = number;\n\twhile (number > 0) \n\t{\n\t\tsum += pow(number % 10, 3);\n\t\tnumber /= 10;\n\t}\n\treturn sum == temp;\n}",
    "{\n\tlong sum = 0;\n\tlong temp = number;\n\twhile(temp > 0) \n\t{\n\t\tsum += pow(temp % 10, 3);\n\t\ttemp /= 10;\n\t}\n\treturn sum == number;\n}",
    "{\n\tlong sum = 0;\n\tlong temp = number;\n\twhile(temp != 0) \n\t{\n\t\tsum += pow(temp % 10, 3);\n\t\ttemp /= 10;\n\t}\n\treturn sum == number;\n}"
  ]
}
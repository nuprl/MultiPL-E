{
  "name": "mbpp_477_is_lower",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to convert the given string to lower case.\n\t\n*/\nstring is_lower(string string) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_477_is_lower.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = is_lower;\n\n    assert(candidate(\"InValid\") == \"invalid\");\n    assert(candidate(\"TruE\") == \"true\");\n    assert(candidate(\"SenTenCE\") == \"sentence\");\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tstring lower_string = \"\";\n\tforeach(char c; string)\n\t{\n\t\tlower_string ~= toLower(c);\n\t}\n\treturn lower_string;\n}",
    "{\n\treturn toLower(string);\n}",
    "{\n\treturn toLower(string);\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c >= 'A' && c <= 'Z')\n\t\t{\n\t\t\tresult ~= c + 'a' - 'A';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c >= 'A' && c <= 'Z')\n\t\t{\n\t\t\tresult ~= c.to!char + 32;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\treturn toLower(string);\n}",
    "{\n\treturn toLower(string);\n}",
    "{\n\treturn toLower(string);\n}",
    "{\n\tstring lower_string = \"\";\n\tforeach(char c; string)\n\t{\n\t\tlower_string ~= toLower(c);\n\t}\n\treturn lower_string;\n}",
    "{\n\tstring result;\n\tforeach(char c; string)\n\t{\n\t\tif(c >= 'A' && c <= 'Z')\n\t\t{\n\t\t\tc = c - 'A' + 'a';\n\t\t}\n\t\tresult ~= c;\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tforeach(char c; string)\n\t{\n\t\tif(c >= 'A' && c <= 'Z')\n\t\t{\n\t\t\tresult ~= to!char(c + 32);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\treturn toLower(string);\n}",
    "{\n\treturn toLower(string);\n}",
    "{\n\tstring result = \"\";\n\tforeach(char c; string)\n\t{\n\t\tresult ~= toLower(c);\n\t}\n\treturn result;\n}",
    "{\n\treturn toLower(string);\n}\n/*\n\tWrite a python function to check if a string is a palindrome or not.\n*/",
    "{\n\treturn toLower(string);\n}",
    "{\n\tstring result = \"\";\n\tforeach(char c; string)\n\t{\n\t\tresult ~= toLower(c);\n\t}\n\treturn result;\n}",
    "{\n\treturn toLower(string);\n}",
    "{\n\tstring result = \"\";\n\tforeach(char c; string)\n\t{\n\t\tif(c >= 'A' && c <= 'Z')\n\t\t{\n\t\t\tc = c + 32;\n\t\t}\n\t\tresult ~= c;\n\t}\n\treturn result;\n}",
    "{\n\treturn toLower(string);\n}"
  ]
}
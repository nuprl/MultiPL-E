{
  "name": "mbpp_769_Diff",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_769_Diff.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpp4j_n34j.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmpp4j_n34j.Diff(long[], long[]) [0x427e82]\n??:? void tmpp4j_n34j.__unittest_L22_C1() [0x427fad]\n??:? void tmpp4j_n34j.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tforeach(long i; li1)\n\t{\n\t\tif(i in li2)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tli3[j] = i;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp64gjypi_.d(14): Error: incompatible types for `(i) in (li2)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp64gjypi_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tlong[] li5 = new long[li1.length];\n\tlong[] li6 = new long[li2.length];\n\t\n\tforeach(i; li1)\n\t{\n\t\tli3[i] = li1[i];\n\t}\n\t\n\tforeach(i; li2)\n\t{\n\t\tli4[i] = li2[i];\n\t}\n\t\n\tforeach(i; li3)\n\t{\n\t\tforeach(j; li4)\n\t\t{\n\t\t\tif(li3[i] == li4[j])\n\t\t\t{\n\t\t\t\tli3[i] = 0;\n\t\t\t\tli4[j] = 0;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tforeach(i; li3)\n\t{\n\t\tif(li3[i] != 0)\n\t\t{\n\t\t\tli5 ~= li3[i];\n\t\t}\n\t}\n\t\n\tforeach(i; li4)\n\t{\n\t\tif(li4[i] != 0)\n\t\t{\n\t\t\tli6 ~= li4[i];\n\t\t}\n\t}\n\t\n\treturn li5 ~ li6;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmplip5oyxe.d(17): Range violation\n----------------\n??:? _d_arrayboundsp [0x428a6e]\n??:? long[] tmplip5oyxe.Diff(long[], long[]) [0x427efe]\n??:? void tmplip5oyxe.__unittest_L55_C1() [0x42844d]\n??:? void tmplip5oyxe.__modtest() [0x42873c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d5ab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c43e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430e41]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4312f0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430dcd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c415]\n??:? runModuleUnitTests [0x42d381]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li = new long[li1.length];\n\tint i = 0;\n\tforeach(long l; li1)\n\t{\n\t\tif(l in li2)\n\t\t{\n\t\t\tli[i] = l;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn li;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpltay1hch.d(14): Error: incompatible types for `(l) in (li2)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpltay1hch.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tauto li3 = li1.dup;\n\tforeach(i; li2)\n\t{\n\t\tauto pos = li3.find(i);\n\t\tif(pos != -1)\n\t\t\tli3.remove(pos);\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpn4ybn7mo.d(13): Error: no property `find` for type `long[]`\n/tmp/tmpn4ybn7mo.d(15): Error: no property `remove` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn4ybn7mo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp559o03gz.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmp559o03gz.Diff(long[], long[]) [0x427e82]\n??:? void tmp559o03gz.__unittest_L22_C1() [0x427fad]\n??:? void tmp559o03gz.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tauto li3 = li1.dup;\n\tforeach(long i; li2)\n\t{\n\t\tif(li3.find(i) != -1)\n\t\t{\n\t\t\tli3.remove(i);\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpmjwh2_xi.d(13): Error: no property `find` for type `long[]`\n/tmp/tmpmjwh2_xi.d(15): Error: no property `remove` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmjwh2_xi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long l1; li1)\n\t{\n\t\tif(l1 != li2[i])\n\t\t{\n\t\t\tli3[i] = l1;\n\t\t}\n\t\ti++;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp0h_8envw.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285a6]\n??:? long[] tmp0h_8envw.Diff(long[], long[]) [0x427e7e]\n??:? void tmp0h_8envw.__unittest_L22_C1() [0x427f85]\n??:? void tmp0h_8envw.__modtest() [0x428274]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b442]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306cd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b7c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430659]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b419]\n??:? runModuleUnitTests [0x42c385]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpp4j_n34j.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmpp4j_n34j.Diff(long[], long[]) [0x427e82]\n??:? void tmpp4j_n34j.__unittest_L22_C1() [0x427fad]\n??:? void tmpp4j_n34j.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\t\n\tforeach(i; 0 .. li1.length)\n\t{\n\t\tli3[i] = li1[i];\n\t}\n\t\n\tforeach(i; 0 .. li2.length)\n\t{\n\t\tli4[i] = li2[i];\n\t}\n\t\n\tlong[] li5 = new long[li3.length + li4.length];\n\t\n\tforeach(i; 0 .. li3.length)\n\t{\n\t\tli5[i] = li3[i];\n\t}\n\t\n\tforeach(i; 0 .. li4.length)\n\t{\n\t\tli5[i + li3.length] = li4[i];\n\t}\n\t\n\tlong[] li6 = new long[li5.length];\n\t\n\tforeach(i; 0 .. li5.length)\n\t{\n\t\tli6[i] = li5[i];\n\t}\n\t\n\tlong[] li7 = new long[li6.length];\n\t\n\tforeach(i; 0 .. li6.length)\n\t{\n\t\tli7[i] = li6[i];\n\t}\n\t\n\tlong[] li8 = new long[li7.length];\n\t\n\tforeach(i; 0 .. li7.length)\n\t{\n\t\tli8[i] = li7[i];\n\t}\n\t\n\tlong[] li9 = new long[li8.length];\n\t\n\tforeach(i; 0 .. li8.length)\n\t{\n\t\tli9[i] = li8[i];\n\t}\n\t\n\tlong[] li10 = new long[li9.length];\n\t\n\tforeach(i; 0 .. li9.length)\n\t{\n\t\tli10[i] = li9[i];\n\t}\n\t\n\tlong[] li11 = new long[li10.length];\n\t\n\tforeach(i; 0 .. li10.length)\n\t{\n\t\tli11[i]\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpt0y1ei1n.d(75): Error: found `unittest` when expecting `;` following statement\n/tmp/tmpt0y1ei1n.d(83): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpt0y1ei1n.d(83): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt0y1ei1n.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpp4j_n34j.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmpp4j_n34j.Diff(long[], long[]) [0x427e82]\n??:? void tmpp4j_n34j.__unittest_L22_C1() [0x427fad]\n??:? void tmpp4j_n34j.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\t\n\tforeach(i; 0..li1.length)\n\t{\n\t\tli3[i] = li1[i];\n\t}\n\t\n\tforeach(i; 0..li2.length)\n\t{\n\t\tli4[i] = li2[i];\n\t}\n\t\n\tforeach(i; 0..li3.length)\n\t{\n\t\tforeach(j; 0..li4.length)\n\t\t{\n\t\t\tif(li3[i] == li4[j])\n\t\t\t{\n\t\t\t\tli3[i] = 0;\n\t\t\t\tli4[j] = 0;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvlcyncn1.d(41): unittest failure\n----------------\n??:? _d_unittestp [0x4286b5]\n??:? void tmpvlcyncn1.__unittest_L37_C1() [0x4281ac]\n??:? void tmpvlcyncn1.__modtest() [0x428434]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c76f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b602]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43088d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430d3c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430819]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5d9]\n??:? runModuleUnitTests [0x42c545]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428b78]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (!li2.contains(li1[i])) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3[0..j];\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp6m8113r2.d(14): Error: no property `contains` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6m8113r2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length + li2.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile (i < li1.length && j < li2.length) \n\t{\n\t\tif (li1[i] < li2[j]) \n\t\t{\n\t\t\tli3[k] = li1[i];\n\t\t\ti += 1;\n\t\t\tk += 1;\n\t\t} \n\t\telse if (li2[j] < li1[i]) \n\t\t{\n\t\t\tj += 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\ti += 1;\n\t\t\tj += 1;\n\t\t}\n\t}\n\twhile (i < li1.length) \n\t{\n\t\tli3[k] = li1[i];\n\t\ti += 1;\n\t\tk += 1;\n\t}\n\treturn li3[0 .. k];\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpux843yzm.d(44): unittest failure\n----------------\n??:? _d_unittestp [0x42862d]\n??:? void tmpux843yzm.__unittest_L40_C1() [0x428128]\n??:? void tmpux843yzm.__modtest() [0x4283b0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c6e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b57a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430805]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430cb4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430791]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b551]\n??:? runModuleUnitTests [0x42c4bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428af0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp559o03gz.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmp559o03gz.Diff(long[], long[]) [0x427e82]\n??:? void tmp559o03gz.__unittest_L22_C1() [0x427fad]\n??:? void tmp559o03gz.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n    long[] li3 = new long[li1.length + li2.length];\n    long[] li4 = new long[li1.length + li2.length];\n    long[] li5 = new long[li1.length + li2.length];\n    long[] li6 = new long[li1.length + li2.length];\n    long[] li7 = new long[li1.length + li2.length];\n    long[] li8 = new long[li1.length + li2.length];\n    long[] li9 = new long[li1.length + li2.length];\n    long[] li10 = new long[li1.length + li2.length];\n    long[] li11 = new long[li1.length + li2.length];\n    long[] li12 = new long[li1.length + li2.length];\n    long[] li13 = new long[li1.length + li2.length];\n    long[] li14 = new long[li1.length + li2.length];\n    long[] li15 = new long[li1.length + li2.length];\n    long[] li16 = new long[li1.length + li2.length];\n    long[] li17 = new long[li1.length + li2.length];\n    long[] li18 = new long[li1.length + li2.length];\n    long[] li19 = new long[li1.length + li2.length];\n    long[] li20 = new long[li1.length + li2.length];\n    long[] li21 = new long[li1.length + li2.length];\n    long[] li22 = new long[li1.length + li2.length];\n    long[] li23 = new long[li1.length + li2.length];\n    long[] li24 = new long[li1.length + li2.length];\n    long[] li25 = new long[li1.length + li2.length];\n    long[] li26 = new long[li1.length + li2.length];\n    long[] li27 = new long[li1.length + li2.length];\n    long[] li28 = new long[\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp4_fx2bm1.d(36): Error: expression expected, not `unittest`\n/tmp/tmp4_fx2bm1.d(37): Error: found `{` when expecting `]`\n/tmp/tmp4_fx2bm1.d(38): Error: semicolon expected, not `alias`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4_fx2bm1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp559o03gz.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmp559o03gz.Diff(long[], long[]) [0x427e82]\n??:? void tmp559o03gz.__unittest_L22_C1() [0x427fad]\n??:? void tmp559o03gz.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint k = 0;\n\tforeach(long i; li1)\n\t{\n\t\tif(!li2.canFind(i))\n\t\t{\n\t\t\tli3[k] = i;\n\t\t\tk++;\n\t\t}\n\t}\n\treturn li3[0..k];\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpa6q_nn4r.d(14): Error: no property `canFind` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa6q_nn4r.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = li1.dup;\n\tforeach(long i; li2)\n\t{\n\t\tli3 -= i;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpkac3i3hg.d(13): Error: invalid array operation `li3 -= i` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkac3i3hg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpp4j_n34j.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmpp4j_n34j.Diff(long[], long[]) [0x427e82]\n??:? void tmpp4j_n34j.__unittest_L22_C1() [0x427fad]\n??:? void tmpp4j_n34j.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpp4j_n34j.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmpp4j_n34j.Diff(long[], long[]) [0x427e82]\n??:? void tmpp4j_n34j.__unittest_L22_C1() [0x427fad]\n??:? void tmpp4j_n34j.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3;\n\tforeach(long i; li1)\n\t{\n\t\tif(!li2.find(i))\n\t\t{\n\t\t\tli3 ~= i;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "/tmp/tmperurv156.d(13): Error: no property `find` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmperurv156.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\t\n\tfor(int i = 0; i < li1.length; i++)\n\t{\n\t\tli3[i] = li1[i];\n\t}\n\t\n\tfor(int i = 0; i < li2.length; i++)\n\t{\n\t\tli4[i] = li2[i];\n\t}\n\t\n\tlong[] li5 = new long[li3.length + li4.length];\n\t\n\tfor(int i = 0; i < li3.length; i++)\n\t{\n\t\tli5[i] = li3[i];\n\t}\n\t\n\tfor(int i = 0; i < li4.length; i++)\n\t{\n\t\tli5[i + li3.length] = li4[i];\n\t}\n\t\n\tlong[] li6 = new long[li5.length];\n\t\n\tfor(int i = 0; i < li5.length; i++)\n\t{\n\t\tli6[i] = li5[i];\n\t}\n\t\n\tfor(int i = 0; i < li3.length; i++)\n\t{\n\t\tfor(int j = 0; j < li4.length; j++)\n\t\t{\n\t\t\tif(li3[i] == li4[j])\n\t\t\t{\n\t\t\t\tli6[i] = 0;\n\t\t\t\tli6[j + li3.length] = 0;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tlong[] li7 = new long[li6.length];\n\t\n\tfor(int i = 0; i < li6.length; i++)\n\t{\n\t\tli7[i] = li6[i];\n\t}\n\t\n\tfor(int i = 0; i < li6.length; i++)\n\t{\n\t\tif(li6[i] == 0)\n\t\t{\n\t\t\tli7[i] = 0;\n\t\t}\n\t}\n\t\n\tlong[] li8 =\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "/tmp/tmpzy_qggnl.d(70): Error: expression expected, not `unittest`\n/tmp/tmpzy_qggnl.d(71): Error: semicolon expected, not `{`\n/tmp/tmpzy_qggnl.d(78): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzy_qggnl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = li1.dup;\n\tforeach(long i; li2)\n\t{\n\t\tif(li3.find(i) != -1)\n\t\t{\n\t\t\tli3.remove(li3.find(i));\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "/tmp/tmppkuguv27.d(13): Error: no property `find` for type `long[]`\n/tmp/tmppkuguv27.d(15): Error: no property `remove` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppkuguv27.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (!li2.contains(li1[i]))\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "/tmp/tmp7rsemkz1.d(14): Error: no property `contains` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7rsemkz1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long l; li1)\n\t{\n\t\tif(l in li2)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tli3[i] = l;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "/tmp/tmpuwjzuvj0.d(14): Error: incompatible types for `(l) in (li2)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuwjzuvj0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpp4j_n34j.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmpp4j_n34j.Diff(long[], long[]) [0x427e82]\n??:? void tmpp4j_n34j.__unittest_L22_C1() [0x427fad]\n??:? void tmpp4j_n34j.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3;\n\tforeach(long i; li1)\n\t{\n\t\tif(!li2.find(i))\n\t\t{\n\t\t\tli3 ~= i;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "/tmp/tmperurv156.d(13): Error: no property `find` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmperurv156.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpp4j_n34j.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmpp4j_n34j.Diff(long[], long[]) [0x427e82]\n??:? void tmpp4j_n34j.__unittest_L22_C1() [0x427fad]\n??:? void tmpp4j_n34j.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tlong[] li5 = new long[li1.length];\n\t\n\tforeach(i; 0 .. li1.length)\n\t{\n\t\tli3[i] = li1[i];\n\t}\n\t\n\tforeach(i; 0 .. li2.length)\n\t{\n\t\tli4[i] = li2[i];\n\t}\n\t\n\tforeach(i; 0 .. li1.length)\n\t{\n\t\tforeach(j; 0 .. li2.length)\n\t\t{\n\t\t\tif(li3[i] == li4[j])\n\t\t\t{\n\t\t\t\tli3[i] = 0;\n\t\t\t\tli4[j] = 0;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tforeach(i; 0 .. li1.length)\n\t{\n\t\tif(li3[i] != 0)\n\t\t{\n\t\t\tli5 ~= li3[i];\n\t\t}\n\t}\n\t\n\treturn li5;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpejgsomvk.d(50): unittest failure\n----------------\n??:? _d_unittestp [0x4287b5]\n??:? void tmpejgsomvk.__unittest_L46_C1() [0x4282b0]\n??:? void tmpejgsomvk.__modtest() [0x428538]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d25b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c0ee]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430c39]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4310e8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430bc5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c0c5]\n??:? runModuleUnitTests [0x42d031]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428c78]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tforeach(i; li1)\n\t{\n\t\tif(i in li2)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tli3[j] = i;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3[0..j];\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "/tmp/tmpt3b1a5vx.d(14): Error: incompatible types for `(i) in (li2)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt3b1a5vx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tlong[] li5 = new long[li1.length];\n\tlong[] li6 = new long[li2.length];\n\tlong[] li7 = new long[li1.length];\n\t\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tli3[i] = li1[i];\n\t\tli4[i] = li2[i];\n\t}\n\t\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tfor (int j = 0; j < li2.length; j++) \n\t\t{\n\t\t\tif (li3[i] == li4[j]) \n\t\t\t{\n\t\t\t\tli5[i] = li3[i];\n\t\t\t\tli6[j] = li4[j];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li5[i] != li1[i]) \n\t\t{\n\t\t\tli7[i] = li1[i];\n\t\t}\n\t}\n\t\n\treturn li7;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpdlcafanx.d(19): Range violation\n----------------\n??:? _d_arrayboundsp [0x428856]\n??:? long[] tmpdlcafanx.Diff(long[], long[]) [0x427f13]\n??:? void tmpdlcafanx.__unittest_L44_C1() [0x428239]\n??:? void tmpdlcafanx.__modtest() [0x428528]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c85f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b6f2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43097d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430e2c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430909]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b6c9]\n??:? runModuleUnitTests [0x42c635]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp559o03gz.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmp559o03gz.Diff(long[], long[]) [0x427e82]\n??:? void tmp559o03gz.__unittest_L22_C1() [0x427fad]\n??:? void tmp559o03gz.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tforeach(long i; li1)\n\t{\n\t\tif(!li2.find(i))\n\t\t{\n\t\t\tli3[j] = i;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3[0..j];\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "/tmp/tmpwi1napef.d(14): Error: no property `find` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwi1napef.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile (i < li1.length && j < li2.length) \n\t{\n\t\tif (li1[i] < li2[j]) \n\t\t{\n\t\t\tli3[k] = li1[i];\n\t\t\ti += 1;\n\t\t\tk += 1;\n\t\t} \n\t\telse if (li2[j] < li1[i]) \n\t\t{\n\t\t\tj += 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\ti += 1;\n\t\t\tj += 1;\n\t\t}\n\t}\n\twhile (i < li1.length) \n\t{\n\t\tli3[k] = li1[i];\n\t\ti += 1;\n\t\tk += 1;\n\t}\n\treturn li3[0..k];\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1yns6cwu.d(44): unittest failure\n----------------\n??:? _d_unittestp [0x42862d]\n??:? void tmp1yns6cwu.__unittest_L40_C1() [0x428124]\n??:? void tmp1yns6cwu.__modtest() [0x4283ac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c6e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b57a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430805]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430cb4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430791]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b551]\n??:? runModuleUnitTests [0x42c4bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428af0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] result = new long[];\n\tforeach(long i; li1)\n\t{\n\t\tif(!li2.canFind(i))\n\t\t\tresult ~= i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "/tmp/tmpzqwc5ben.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpzqwc5ben.d(13): Error: no property `canFind` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzqwc5ben.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tforeach(long i; li1)\n\t{\n\t\tif(i in li2)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tli3[j] = i;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3[0..j];\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "/tmp/tmp2um9jn0r.d(14): Error: incompatible types for `(i) in (li2)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2um9jn0r.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint k = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tint j = 0;\n\t\tfor (; j < li2.length; j++) \n\t\t{\n\t\t\tif (li1[i] == li2[j]) \n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (j == li2.length) \n\t\t{\n\t\t\tli3[k] = li1[i];\n\t\t\tk++;\n\t\t}\n\t}\n\treturn li3[0..k];\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppndt_228.d(34): unittest failure\n----------------\n??:? _d_unittestp [0x42854d]\n??:? void tmppndt_228.__unittest_L30_C1() [0x428048]\n??:? void tmppndt_228.__modtest() [0x4282d0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c607]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b49a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430725]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430bd4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4306b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b471]\n??:? runModuleUnitTests [0x42c3dd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428a10]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tlong[] li5 = new long[li1.length + li2.length];\n\tlong[] li6 = new long[li1.length + li2.length];\n\tlong[] li7 = new long[li1.length + li2.length];\n\tlong[] li8 = new long[li1.length + li2.length];\n\tlong[] li9 = new long[li1.length + li2.length];\n\tlong[] li10 = new long[li1.length + li2.length];\n\tlong[] li11 = new long[li1.length + li2.length];\n\tlong[] li12 = new long[li1.length + li2.length];\n\tlong[] li13 = new long[li1.length + li2.length];\n\tlong[] li14 = new long[li1.length + li2.length];\n\tlong[] li15 = new long[li1.length + li2.length];\n\tlong[] li16 = new long[li1.length + li2.length];\n\tlong[] li17 = new long[li1.length + li2.length];\n\tlong[] li18 = new long[li1.length + li2.length];\n\tlong[] li19 = new long[li1.length + li2.length];\n\tlong[] li20 = new long[li1.length + li2.length];\n\tlong[] li21 = new long[li1.length + li2.length];\n\tlong[] li22 = new long[li1.length + li2.length];\n\tlong[] li23 = new long[li1.length + li2.length];\n\tlong[] li24 = new long[li1.length + li2.length];\n\tlong[] li25 = new long[li1.length + li2.length];\n\tlong[] li26 = new long[li1.length + li2.length];\n\tlong[] li27 = new long[li1.length + li2.length];\n\tlong[] li28 = new long[li1.length + li2.length];\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "/tmp/tmp6m833bpx.d(36): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6m833bpx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tauto res = li1.dup;\n\tforeach(e; li2)\n\t{\n\t\tres.remove(e);\n\t}\n\treturn res;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "/tmp/tmplhtvcbhh.d(13): Error: no property `remove` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplhtvcbhh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = li1.dup;\n\tforeach(long i; li2)\n\t{\n\t\tli3 -= i;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpkac3i3hg.d(13): Error: invalid array operation `li3 -= i` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkac3i3hg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tforeach(i; li1)\n\t{\n\t\tif(i in li2)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tli3[j] = i;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3[0..j];\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "/tmp/tmpt3b1a5vx.d(14): Error: incompatible types for `(i) in (li2)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt3b1a5vx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long x; li1)\n\t{\n\t\tif(x in li2)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tli3[i] = x;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn li3[0..i];\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "/tmp/tmpw17ya5ur.d(14): Error: incompatible types for `(x) in (li2)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw17ya5ur.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] diff = new long[];\n\tforeach(long a; li1)\n\t{\n\t\tif(a in li2)\n\t\t{\n\t\t\tdiff ~= a;\n\t\t}\n\t}\n\treturn diff;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "/tmp/tmpu2m1f6fy.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpu2m1f6fy.d(13): Error: incompatible types for `(a) in (li2)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu2m1f6fy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp559o03gz.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmp559o03gz.Diff(long[], long[]) [0x427e82]\n??:? void tmp559o03gz.__unittest_L22_C1() [0x427fad]\n??:? void tmp559o03gz.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3[0..j];\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpdmz_xkgj.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285e6]\n??:? long[] tmpdmz_xkgj.Diff(long[], long[]) [0x427e82]\n??:? void tmpdmz_xkgj.__unittest_L22_C1() [0x427fc9]\n??:? void tmpdmz_xkgj.__modtest() [0x4282b8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5ef]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b482]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43070d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430bbc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430699]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b459]\n??:? runModuleUnitTests [0x42c3c5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (!li2.contains(li1[i])) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "/tmp/tmpgjzchr7f.d(14): Error: no property `contains` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgjzchr7f.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpp4j_n34j.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmpp4j_n34j.Diff(long[], long[]) [0x427e82]\n??:? void tmpp4j_n34j.__unittest_L22_C1() [0x427fad]\n??:? void tmpp4j_n34j.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp559o03gz.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmp559o03gz.Diff(long[], long[]) [0x427e82]\n??:? void tmp559o03gz.__unittest_L22_C1() [0x427fad]\n??:? void tmp559o03gz.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpp4j_n34j.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmpp4j_n34j.Diff(long[], long[]) [0x427e82]\n??:? void tmpp4j_n34j.__unittest_L22_C1() [0x427fad]\n??:? void tmpp4j_n34j.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long l; li1)\n\t{\n\t\tif(l in li2)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tli3[i] = l;\n\t\ti++;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "/tmp/tmp7ht8o0wt.d(14): Error: incompatible types for `(l) in (li2)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7ht8o0wt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp559o03gz.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmp559o03gz.Diff(long[], long[]) [0x427e82]\n??:? void tmp559o03gz.__unittest_L22_C1() [0x427fad]\n??:? void tmp559o03gz.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpp4j_n34j.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmpp4j_n34j.Diff(long[], long[]) [0x427e82]\n??:? void tmpp4j_n34j.__unittest_L22_C1() [0x427fad]\n??:? void tmpp4j_n34j.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp559o03gz.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmp559o03gz.Diff(long[], long[]) [0x427e82]\n??:? void tmp559o03gz.__unittest_L22_C1() [0x427fad]\n??:? void tmp559o03gz.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = li1.dup;\n\tforeach(long i; li2)\n\t{\n\t\tli3 -= i;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpkac3i3hg.d(13): Error: invalid array operation `li3 -= i` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkac3i3hg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\t\n\tforeach(long x; li1)\n\t{\n\t\tli3[i] = x;\n\t\ti++;\n\t}\n\t\n\tforeach(long x; li2)\n\t{\n\t\tli4[j] = x;\n\t\tj++;\n\t}\n\t\n\tforeach(long x; li3)\n\t{\n\t\tforeach(long y; li4)\n\t\t{\n\t\t\tif(x == y)\n\t\t\t{\n\t\t\t\tli3[k] = 0;\n\t\t\t}\n\t\t}\n\t\tk++;\n\t}\n\t\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfmbireq8.d(46): unittest failure\n----------------\n??:? _d_unittestp [0x428665]\n??:? void tmpfmbireq8.__unittest_L42_C1() [0x42815c]\n??:? void tmpfmbireq8.__modtest() [0x4283e4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c71f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b5b2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43083d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430cec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4307c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b589]\n??:? runModuleUnitTests [0x42c4f5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428b28]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tlong[] li5 = new long[li1.length];\n\tlong[] li6 = new long[li2.length];\n\tlong[] li7 = new long[li1.length];\n\tlong[] li8 = new long[li2.length];\n\tlong[] li9 = new long[li1.length];\n\tlong[] li10 = new long[li2.length];\n\tlong[] li11 = new long[li1.length];\n\tlong[] li12 = new long[li2.length];\n\tlong[] li13 = new long[li1.length];\n\tlong[] li14 = new long[li2.length];\n\tlong[] li15 = new long[li1.length];\n\tlong[] li16 = new long[li2.length];\n\tlong[] li17 = new long[li1.length];\n\tlong[] li18 = new long[li2.length];\n\tlong[] li19 = new long[li1.length];\n\tlong[] li20 = new long[li2.length];\n\tlong[] li21 = new long[li1.length];\n\tlong[] li22 = new long[li2.length];\n\tlong[] li23 = new long[li1.length];\n\tlong[] li24 = new long[li2.length];\n\tlong[] li25 = new long[li1.length];\n\tlong[] li26 = new long[li2.length];\n\tlong[] li27 = new long[li1.length];\n\tlong[] li28 = new long[li2.length];\n\tlong[] li29 = new long[li1.length];\n\tlong[] li30 = new long[li2.length];\n\tlong[] li31 = new long[li1.length];\n\tlong[] li32 = new long[li2.length];\n\tlong[] li33 = new long[li1.length];\n\tlong[] li34 = new long[li2.length];\n\tlong[] li35 = new long[li1.length];\n\tlong[] li36 = new long[li2.length];\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "/tmp/tmp0_z7lbtq.d(44): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0_z7lbtq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpp4j_n34j.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmpp4j_n34j.Diff(long[], long[]) [0x427e82]\n??:? void tmpp4j_n34j.__unittest_L22_C1() [0x427fad]\n??:? void tmpp4j_n34j.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li;\n\tforeach(i; li1)\n\t{\n\t\tif(i notin li2)\n\t\t{\n\t\t\tli ~= i;\n\t\t}\n\t}\n\treturn li;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "/tmp/tmp8danwi9a.d(13): Error: found `notin` when expecting `)`\n/tmp/tmp8danwi9a.d(13): Error: found `)` when expecting `;` following statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8danwi9a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tforeach(long i; li1)\n\t{\n\t\tif(!li2.find(i))\n\t\t{\n\t\t\tli3[j] = i;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3[0..j];\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "/tmp/tmpwi1napef.d(14): Error: no property `find` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwi1napef.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tlong[] li5 = new long[li1.length];\n\tlong[] li6 = new long[li2.length];\n\tlong[] li7 = new long[li1.length];\n\tlong[] li8 = new long[li2.length];\n\tlong[] li9 = new long[li1.length];\n\tlong[] li10 = new long[li2.length];\n\tlong[] li11 = new long[li1.length];\n\tlong[] li12 = new long[li2.length];\n\tlong[] li13 = new long[li1.length];\n\tlong[] li14 = new long[li2.length];\n\tlong[] li15 = new long[li1.length];\n\tlong[] li16 = new long[li2.length];\n\tlong[] li17 = new long[li1.length];\n\tlong[] li18 = new long[li2.length];\n\tlong[] li19 = new long[li1.length];\n\tlong[] li20 = new long[li2.length];\n\tlong[] li21 = new long[li1.length];\n\tlong[] li22 = new long[li2.length];\n\tlong[] li23 = new long[li1.length];\n\tlong[] li24 = new long[li2.length];\n\tlong[] li25 = new long[li1.length];\n\tlong[] li26 = new long[li2.length];\n\tlong[] li27 = new long[li1.length];\n\tlong[] li28 = new long[li2.length];\n\tlong[] li29 = new long[li1.length];\n\tlong[] li30 = new long[li2.length];\n\tlong[] li31 = new long[li1.length];\n\tlong[] li32 = new long[li2.length];\n\tlong[] li33 = new long[li1.length];\n\tlong[] li34 = new long[li2.length];\n\tlong[] li35 = new long[li1.length];\n\tlong[] li36 = new long[li2.length];\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "/tmp/tmp0_z7lbtq.d(44): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0_z7lbtq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint k = 0;\n\tforeach(long i; li1)\n\t{\n\t\tif(i in li2)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tli3[k] = i;\n\t\t\tk++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "/tmp/tmpdztw95x_.d(14): Error: incompatible types for `(i) in (li2)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdztw95x_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[0];\n\tforeach(long i; li1)\n\t{\n\t\tif(!li2.canFind(i))\n\t\t{\n\t\t\tli3 ~= i;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "/tmp/tmpn517obvf.d(13): Error: no property `canFind` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn517obvf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length + li2.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile (i < li1.length && j < li2.length) \n\t{\n\t\tif (li1[i] < li2[j]) \n\t\t{\n\t\t\tli3[k] = li1[i];\n\t\t\ti++;\n\t\t\tk++;\n\t\t}\n\t\telse if (li2[j] < li1[i]) \n\t\t{\n\t\t\tj++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t}\n\twhile (i < li1.length) \n\t{\n\t\tli3[k] = li1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\treturn li3[0..k];\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpndd18_wm.d(44): unittest failure\n----------------\n??:? _d_unittestp [0x42860d]\n??:? void tmpndd18_wm.__unittest_L40_C1() [0x428108]\n??:? void tmpndd18_wm.__modtest() [0x428390]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c6c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b55a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4307e5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430c94]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430771]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b531]\n??:? runModuleUnitTests [0x42c49d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428ad0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length + li2.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile (i < li1.length && j < li2.length) \n\t{\n\t\tif (li1[i] < li2[j]) \n\t\t{\n\t\t\tli3[k] = li1[i];\n\t\t\ti++;\n\t\t\tk++;\n\t\t} \n\t\telse if (li2[j] < li1[i]) \n\t\t{\n\t\t\tj++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t}\n\twhile (i < li1.length) \n\t{\n\t\tli3[k] = li1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\treturn li3[0..k];\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp385y0uc5.d(44): unittest failure\n----------------\n??:? _d_unittestp [0x42860d]\n??:? void tmp385y0uc5.__unittest_L40_C1() [0x428108]\n??:? void tmp385y0uc5.__modtest() [0x428390]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c6c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b55a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4307e5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430c94]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430771]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b531]\n??:? runModuleUnitTests [0x42c49d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428ad0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3;\n\tforeach(long i; li1)\n\t{\n\t\tif(!li2.find(i))\n\t\t{\n\t\t\tli3 ~= i;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "/tmp/tmperurv156.d(13): Error: no property `find` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmperurv156.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long x; li1)\n\t{\n\t\tif(x in li2)\n\t\t{\n\t\t\tli3[i] = x;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "/tmp/tmpzhg6lx25.d(14): Error: incompatible types for `(x) in (li2)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzhg6lx25.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length + li2.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile (i < li1.length && j < li2.length) \n\t{\n\t\tif (li1[i] < li2[j]) \n\t\t{\n\t\t\tli3[k] = li1[i];\n\t\t\ti += 1;\n\t\t\tk += 1;\n\t\t} \n\t\telse if (li2[j] < li1[i]) \n\t\t{\n\t\t\tli3[k] = li2[j];\n\t\t\tj += 1;\n\t\t\tk += 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\ti += 1;\n\t\t\tj += 1;\n\t\t}\n\t}\n\twhile (i < li1.length) \n\t{\n\t\tli3[k] = li1[i];\n\t\ti += 1;\n\t\tk += 1;\n\t}\n\twhile (j < li2.length) \n\t{\n\t\tli3[k] = li2[j];\n\t\tj += 1;\n\t\tk += 1;\n\t}\n\treturn li3[0 .. k];\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmps7wtj75e.d(52): unittest failure\n----------------\n??:? _d_unittestp [0x4286f5]\n??:? void tmps7wtj75e.__unittest_L48_C1() [0x4281f0]\n??:? void tmps7wtj75e.__modtest() [0x428478]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c7af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b642]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4308cd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430d7c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430859]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b619]\n??:? runModuleUnitTests [0x42c585]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428bb8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint k = 0;\n\tforeach(int i; li1)\n\t{\n\t\tforeach(int j; li2)\n\t\t{\n\t\t\tif(i != j)\n\t\t\t{\n\t\t\t\tli3[k] = i;\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "/tmp/tmpys6mc0lb.d(12): Error: cannot implicitly convert expression `__r73[__key74]` of type `long` to `int`\n/tmp/tmpys6mc0lb.d(14): Error: cannot implicitly convert expression `__r75[__key76]` of type `long` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpys6mc0lb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp559o03gz.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmp559o03gz.Diff(long[], long[]) [0x427e82]\n??:? void tmp559o03gz.__unittest_L22_C1() [0x427fad]\n??:? void tmp559o03gz.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length + li2.length];\n\tlong[] li4 = new long[li1.length + li2.length];\n\tlong[] li5 = new long[li1.length + li2.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\tint m = 0;\n\tint n = 0;\n\tint o = 0;\n\tint p = 0;\n\tint q = 0;\n\tint r = 0;\n\tint s = 0;\n\tint t = 0;\n\tint u = 0;\n\tint v = 0;\n\tint w = 0;\n\tint x = 0;\n\tint y = 0;\n\tint z = 0;\n\tint aa = 0;\n\tint bb = 0;\n\tint cc = 0;\n\tint dd = 0;\n\tint ee = 0;\n\tint ff = 0;\n\tint gg = 0;\n\tint hh = 0;\n\tint ii = 0;\n\tint jj = 0;\n\tint kk = 0;\n\tint ll = 0;\n\tint mm = 0;\n\tint nn = 0;\n\tint oo = 0;\n\tint pp = 0;\n\tint qq = 0;\n\tint rr = 0;\n\tint ss = 0;\n\tint tt = 0;\n\tint uu = 0;\n\tint vv = 0;\n\tint ww = 0;\n\tint xx = 0;\n\tint yy = 0;\n\tint zz = 0;\n\tint aaa = 0;\n\tint bbb = 0;\n\tint ccc = 0;\n\tint ddd = 0;\n\tint eee = 0;\n\tint fff = 0;\n\tint ggg = 0;\n\tint hhh = 0;\n\tint iii = 0;\n\tint jjj = 0;\n\tint kkk = 0;\n\tint lll = 0;\n\tint mmm = 0;\n\tint nnn = 0;\n\tint ooo = 0;\n\tint ppp =\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "/tmp/tmpdzvy_8mr.d(73): Error: expression expected, not `unittest`\n/tmp/tmpdzvy_8mr.d(74): Error: semicolon expected, not `{`\n/tmp/tmpdzvy_8mr.d(81): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdzvy_8mr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile(i < li1.length && j < li2.length) \n\t{\n\t\tif(li1[i] < li2[j]) \n\t\t{\n\t\t\tli3[k] = li1[i];\n\t\t\ti++;\n\t\t\tk++;\n\t\t}\n\t\telse if(li2[j] < li1[i]) \n\t\t{\n\t\t\tj++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t}\n\twhile(i < li1.length) \n\t{\n\t\tli3[k] = li1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\treturn li3[0..k];\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2ybtu4nq.d(44): unittest failure\n----------------\n??:? _d_unittestp [0x42860d]\n??:? void tmp2ybtu4nq.__unittest_L40_C1() [0x428104]\n??:? void tmp2ybtu4nq.__modtest() [0x42838c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c6c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b55a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4307e5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430c94]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430771]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b531]\n??:? runModuleUnitTests [0x42c49d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428ad0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length + li2.length];\n\tint k = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tint count = 0;\n\t\tfor (int j = 0; j < li2.length; j++) \n\t\t{\n\t\t\tif (li1[i] == li2[j]) \n\t\t\t{\n\t\t\t\tcount = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (count == 0) \n\t\t{\n\t\t\tli3[k] = li1[i];\n\t\t\tk++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpb05k6i9_.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x42853d]\n??:? void tmpb05k6i9_.__unittest_L31_C1() [0x428034]\n??:? void tmpb05k6i9_.__modtest() [0x4282bc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5f7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b48a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430715]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430bc4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4306a1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b461]\n??:? runModuleUnitTests [0x42c3cd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428a00]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tlong[] li5 = new long[li1.length];\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\tint m = 0;\n\tint n = 0;\n\tint o = 0;\n\tint p = 0;\n\tint q = 0;\n\tint r = 0;\n\tint s = 0;\n\tint t = 0;\n\tint u = 0;\n\tint v = 0;\n\tint w = 0;\n\tint x = 0;\n\tint y = 0;\n\tint z = 0;\n\tint aa = 0;\n\tint ab = 0;\n\tint ac = 0;\n\tint ad = 0;\n\tint ae = 0;\n\tint af = 0;\n\tint ag = 0;\n\tint ah = 0;\n\tint ai = 0;\n\tint aj = 0;\n\tint ak = 0;\n\tint al = 0;\n\tint am = 0;\n\tint an = 0;\n\tint ao = 0;\n\tint ap = 0;\n\tint aq = 0;\n\tint ar = 0;\n\tint as = 0;\n\tint at = 0;\n\tint au = 0;\n\tint av = 0;\n\tint aw = 0;\n\tint ax = 0;\n\tint ay = 0;\n\tint az = 0;\n\tint ba = 0;\n\tint bb = 0;\n\tint bc = 0;\n\tint bd = 0;\n\tint be = 0;\n\tint bf = 0;\n\tint bg = 0;\n\tint bh = 0;\n\tint bi = 0;\n\tint bj = 0;\n\tint bk = 0;\n\tint bl = 0;\n\tint bm = 0;\n\tint bn = 0;\n\tint bo = 0;\n\tint bp = 0;\n\tint bq = 0;\n\tint br = 0;\n\tint bs = 0;\n\tint bt = 0;\n\tint bu =\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "/tmp/tmp77vw1ieu.d(77): Error: expression expected, not `unittest`\n/tmp/tmp77vw1ieu.d(78): Error: semicolon expected, not `{`\n/tmp/tmp77vw1ieu.d(85): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp77vw1ieu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tlong[] li5 = new long[li1.length];\n\tlong[] li6 = new long[li2.length];\n\tlong[] li7 = new long[li1.length];\n\tlong[] li8 = new long[li2.length];\n\tlong[] li9 = new long[li1.length];\n\tlong[] li10 = new long[li2.length];\n\tlong[] li11 = new long[li1.length];\n\tlong[] li12 = new long[li2.length];\n\tlong[] li13 = new long[li1.length];\n\tlong[] li14 = new long[li2.length];\n\tlong[] li15 = new long[li1.length];\n\tlong[] li16 = new long[li2.length];\n\tlong[] li17 = new long[li1.length];\n\tlong[] li18 = new long[li2.length];\n\tlong[] li19 = new long[li1.length];\n\tlong[] li20 = new long[li2.length];\n\tlong[] li21 = new long[li1.length];\n\tlong[] li22 = new long[li2.length];\n\tlong[] li23 = new long[li1.length];\n\tlong[] li24 = new long[li2.length];\n\tlong[] li25 = new long[li1.length];\n\tlong[] li26 = new long[li2.length];\n\tlong[] li27 = new long[li1.length];\n\tlong[] li28 = new long[li2.length];\n\tlong[] li29 = new long[li1.length];\n\tlong[] li30 = new long[li2.length];\n\tlong[] li31 = new long[li1.length];\n\tlong[] li32 = new long[li2.length];\n\tlong[] li33 = new long[li1.length];\n\tlong[] li34 = new long[li2.length];\n\tlong[] li35 = new long[li1.length];\n\tlong[] li36 = new long[li2.length];\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "/tmp/tmp0_z7lbtq.d(44): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0_z7lbtq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (!li2.contains(li1[i])) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3[0..j];\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp6m8113r2.d(14): Error: no property `contains` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6m8113r2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp559o03gz.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmp559o03gz.Diff(long[], long[]) [0x427e82]\n??:? void tmp559o03gz.__unittest_L22_C1() [0x427fad]\n??:? void tmp559o03gz.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length + li2.length];\n\tlong[] li4 = new long[li1.length + li2.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\tint m = 0;\n\tint n = 0;\n\tint o = 0;\n\tint p = 0;\n\tint q = 0;\n\tint r = 0;\n\tint s = 0;\n\tint t = 0;\n\tint u = 0;\n\tint v = 0;\n\tint w = 0;\n\tint x = 0;\n\tint y = 0;\n\tint z = 0;\n\tint aa = 0;\n\tint bb = 0;\n\tint cc = 0;\n\tint dd = 0;\n\tint ee = 0;\n\tint ff = 0;\n\tint gg = 0;\n\tint hh = 0;\n\tint ii = 0;\n\tint jj = 0;\n\tint kk = 0;\n\tint ll = 0;\n\tint mm = 0;\n\tint nn = 0;\n\tint oo = 0;\n\tint pp = 0;\n\tint qq = 0;\n\tint rr = 0;\n\tint ss = 0;\n\tint tt = 0;\n\tint uu = 0;\n\tint vv = 0;\n\tint ww = 0;\n\tint xx = 0;\n\tint yy = 0;\n\tint zz = 0;\n\tint aaa = 0;\n\tint bbb = 0;\n\tint ccc = 0;\n\tint ddd = 0;\n\tint eee = 0;\n\tint fff = 0;\n\tint ggg = 0;\n\tint hhh = 0;\n\tint iii = 0;\n\tint jjj = 0;\n\tint kkk = 0;\n\tint lll = 0;\n\tint mmm = 0;\n\tint nnn = 0;\n\tint ooo = 0;\n\tint ppp = 0;\n\tint qqq = 0;\n\tint rrr = 0;\n\t\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "/tmp/tmp5mcpse9w.d(75): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5mcpse9w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long l1; li1)\n\t{\n\t\tforeach(long l2; li2)\n\t\t{\n\t\t\tif(l1 == l2)\n\t\t\t{\n\t\t\t\tli3[i] = l1;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpsgw2jq5w.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x42850d]\n??:? void tmpsgw2jq5w.__unittest_L25_C1() [0x428008]\n??:? void tmpsgw2jq5w.__modtest() [0x428290]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b45a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306e5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b94]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430671]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b431]\n??:? runModuleUnitTests [0x42c39d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4289d0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp559o03gz.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmp559o03gz.Diff(long[], long[]) [0x427e82]\n??:? void tmp559o03gz.__unittest_L22_C1() [0x427fad]\n??:? void tmp559o03gz.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tforeach(i; li1)\n\t{\n\t\tif(i notin li2)\n\t\t{\n\t\t\tli3[j] = i;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3[0..j];\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "/tmp/tmpbsjf0aig.d(14): Error: found `notin` when expecting `)`\n/tmp/tmpbsjf0aig.d(14): Error: found `)` when expecting `;` following statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbsjf0aig.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long x; li1)\n\t{\n\t\tif(x notin li2)\n\t\t{\n\t\t\tli3[i] = x;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "/tmp/tmpg5f4d8cv.d(14): Error: found `notin` when expecting `)`\n/tmp/tmpg5f4d8cv.d(14): Error: found `)` when expecting `;` following statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg5f4d8cv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long x; li1)\n\t{\n\t\tif(x in li2)\n\t\t{\n\t\t\tli3[i] = x;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "/tmp/tmpzhg6lx25.d(14): Error: incompatible types for `(x) in (li2)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzhg6lx25.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint k = 0;\n\tforeach(long i; li1)\n\t{\n\t\tint j = 0;\n\t\tforeach(long l; li2)\n\t\t{\n\t\t\tif(i == l)\n\t\t\t{\n\t\t\t\tj = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(j == 0)\n\t\t{\n\t\t\tli3[k] = i;\n\t\t\tk++;\n\t\t}\n\t}\n\treturn li3[0..k];\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpgazoi7i0.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x42855d]\n??:? void tmpgazoi7i0.__unittest_L31_C1() [0x428054]\n??:? void tmpgazoi7i0.__modtest() [0x4282dc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c617]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4aa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430735]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430be4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4306c1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b481]\n??:? runModuleUnitTests [0x42c3ed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428a20]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpp4j_n34j.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmpp4j_n34j.Diff(long[], long[]) [0x427e82]\n??:? void tmpp4j_n34j.__unittest_L22_C1() [0x427fad]\n??:? void tmpp4j_n34j.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3;\n\tforeach(long i; li1)\n\t{\n\t\tif(!li2.find(i))\n\t\t{\n\t\t\tli3 ~= i;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "/tmp/tmperurv156.d(13): Error: no property `find` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmperurv156.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3;\n\tforeach(long i; li1)\n\t{\n\t\tif(i in li2)\n\t\t\tcontinue;\n\t\tli3 ~= i;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "/tmp/tmpw9_yh9sa.d(13): Error: incompatible types for `(i) in (li2)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw9_yh9sa.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length + li2.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile (i < li1.length && j < li2.length) \n\t{\n\t\tif (li1[i] < li2[j]) \n\t\t{\n\t\t\tli3[k] = li1[i];\n\t\t\ti++;\n\t\t\tk++;\n\t\t} \n\t\telse if (li2[j] < li1[i]) \n\t\t{\n\t\t\tj++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t}\n\twhile (i < li1.length) \n\t{\n\t\tli3[k] = li1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\treturn li3[0..k];\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp385y0uc5.d(44): unittest failure\n----------------\n??:? _d_unittestp [0x42860d]\n??:? void tmp385y0uc5.__unittest_L40_C1() [0x428108]\n??:? void tmp385y0uc5.__modtest() [0x428390]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c6c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b55a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4307e5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430c94]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430771]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b531]\n??:? runModuleUnitTests [0x42c49d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428ad0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp559o03gz.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmp559o03gz.Diff(long[], long[]) [0x427e82]\n??:? void tmp559o03gz.__unittest_L22_C1() [0x427fad]\n??:? void tmp559o03gz.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp559o03gz.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmp559o03gz.Diff(long[], long[]) [0x427e82]\n??:? void tmp559o03gz.__unittest_L22_C1() [0x427fad]\n??:? void tmp559o03gz.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tforeach(i; li1)\n\t{\n\t\tif(i notin li2)\n\t\t{\n\t\t\tli3[j] = i;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "/tmp/tmp0u41gayo.d(14): Error: found `notin` when expecting `)`\n/tmp/tmp0u41gayo.d(14): Error: found `)` when expecting `;` following statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0u41gayo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tforeach(long i; li1)\n\t{\n\t\tif(i in li2)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tli3[j] = i;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3[0..j];\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "/tmp/tmp2um9jn0r.d(14): Error: incompatible types for `(i) in (li2)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2um9jn0r.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long x; li1)\n\t{\n\t\tif(!li2.canFind(x))\n\t\t{\n\t\t\tli3[i] = x;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "/tmp/tmpahrn_o2_.d(14): Error: no property `canFind` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpahrn_o2_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[];\n\tforeach(long i; li1)\n\t{\n\t\tif(!li2.canFind(i))\n\t\t{\n\t\t\tli3 ~= i;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "/tmp/tmpfh_h9nze.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmpfh_h9nze.d(13): Error: no property `canFind` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfh_h9nze.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tforeach(long i; li1)\n\t{\n\t\tif(i in li2)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tli3[j] = i;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp64gjypi_.d(14): Error: incompatible types for `(i) in (li2)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp64gjypi_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpp4j_n34j.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmpp4j_n34j.Diff(long[], long[]) [0x427e82]\n??:? void tmpp4j_n34j.__unittest_L22_C1() [0x427fad]\n??:? void tmpp4j_n34j.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpp4j_n34j.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmpp4j_n34j.Diff(long[], long[]) [0x427e82]\n??:? void tmpp4j_n34j.__unittest_L22_C1() [0x427fad]\n??:? void tmpp4j_n34j.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length + li2.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile (i < li1.length && j < li2.length) \n\t{\n\t\tif (li1[i] < li2[j]) \n\t\t{\n\t\t\tli3[k] = li1[i];\n\t\t\ti++;\n\t\t\tk++;\n\t\t} \n\t\telse if (li2[j] < li1[i]) \n\t\t{\n\t\t\tj++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t}\n\twhile (i < li1.length) \n\t{\n\t\tli3[k] = li1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\treturn li3[0..k];\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp385y0uc5.d(44): unittest failure\n----------------\n??:? _d_unittestp [0x42860d]\n??:? void tmp385y0uc5.__unittest_L40_C1() [0x428108]\n??:? void tmp385y0uc5.__modtest() [0x428390]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c6c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b55a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4307e5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430c94]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430771]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b531]\n??:? runModuleUnitTests [0x42c49d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428ad0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = li1.dup;\n\tforeach(long i; li2)\n\t{\n\t\tli3 -= i;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpkac3i3hg.d(13): Error: invalid array operation `li3 -= i` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkac3i3hg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\t\n\tli3 = li1.dup;\n\tli4 = li2.dup;\n\t\n\tforeach(i; 0 .. li3.length)\n\t{\n\t\tforeach(j; 0 .. li4.length)\n\t\t{\n\t\t\tif(li3[i] == li4[j])\n\t\t\t{\n\t\t\t\tli3[i] = 0;\n\t\t\t\tli4[j] = 0;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0vitc5ip.d(34): unittest failure\n----------------\n??:? _d_unittestp [0x4296f9]\n??:? void tmp0vitc5ip.__unittest_L30_C1() [0x428274]\n??:? void tmp0vitc5ip.__modtest() [0x428670]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42e313]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x429382]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42b09d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42b12c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42b029]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x429359]\n??:? runModuleUnitTests [0x42e0e9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429c10]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor(int i = 0; i < li1.length; i++) \n\t{\n\t\tif(!li2.contains(li1[i])) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3[0..j];\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "/tmp/tmp0sp3prof.d(14): Error: no property `contains` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0sp3prof.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp559o03gz.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmp559o03gz.Diff(long[], long[]) [0x427e82]\n??:? void tmp559o03gz.__unittest_L22_C1() [0x427fad]\n??:? void tmp559o03gz.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp559o03gz.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmp559o03gz.Diff(long[], long[]) [0x427e82]\n??:? void tmp559o03gz.__unittest_L22_C1() [0x427fad]\n??:? void tmp559o03gz.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = li1.dup;\n\tforeach(long i; li2)\n\t{\n\t\tli3 -= i;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpkac3i3hg.d(13): Error: invalid array operation `li3 -= i` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkac3i3hg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length + li2.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile (i < li1.length && j < li2.length) \n\t{\n\t\tif (li1[i] < li2[j]) \n\t\t{\n\t\t\tli3[k] = li1[i];\n\t\t\ti++;\n\t\t\tk++;\n\t\t} \n\t\telse if (li2[j] < li1[i]) \n\t\t{\n\t\t\tj++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t}\n\twhile (i < li1.length) \n\t{\n\t\tli3[k] = li1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\treturn li3[0..k];\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp385y0uc5.d(44): unittest failure\n----------------\n??:? _d_unittestp [0x42860d]\n??:? void tmp385y0uc5.__unittest_L40_C1() [0x428108]\n??:? void tmp385y0uc5.__modtest() [0x428390]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c6c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b55a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4307e5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430c94]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430771]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b531]\n??:? runModuleUnitTests [0x42c49d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428ad0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[0];\n\tforeach(long i; li1)\n\t{\n\t\tif(!li2.canFind(i))\n\t\t{\n\t\t\tli3 ~= i;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "/tmp/tmpn517obvf.d(13): Error: no property `canFind` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn517obvf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp559o03gz.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmp559o03gz.Diff(long[], long[]) [0x427e82]\n??:? void tmp559o03gz.__unittest_L22_C1() [0x427fad]\n??:? void tmp559o03gz.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tlong[] li5 = new long[li1.length];\n\t\n\tforeach(i; 0 .. li1.length)\n\t{\n\t\tli3[i] = li1[i];\n\t}\n\t\n\tforeach(i; 0 .. li2.length)\n\t{\n\t\tli4[i] = li2[i];\n\t}\n\t\n\tforeach(i; 0 .. li1.length)\n\t{\n\t\tforeach(j; 0 .. li2.length)\n\t\t{\n\t\t\tif(li3[i] == li4[j])\n\t\t\t{\n\t\t\t\tli3[i] = 0;\n\t\t\t\tli4[j] = 0;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tforeach(i; 0 .. li1.length)\n\t{\n\t\tif(li3[i] != 0)\n\t\t{\n\t\t\tli5 ~= li3[i];\n\t\t}\n\t}\n\t\n\treturn li5;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpejgsomvk.d(50): unittest failure\n----------------\n??:? _d_unittestp [0x4287b5]\n??:? void tmpejgsomvk.__unittest_L46_C1() [0x4282b0]\n??:? void tmpejgsomvk.__modtest() [0x428538]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d25b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42c0ee]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430c39]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4310e8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430bc5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c0c5]\n??:? runModuleUnitTests [0x42d031]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428c78]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length + li2.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile (i < li1.length && j < li2.length) \n\t{\n\t\tif (li1[i] < li2[j]) \n\t\t{\n\t\t\tli3[k] = li1[i];\n\t\t\ti++;\n\t\t\tk++;\n\t\t} \n\t\telse if (li2[j] < li1[i]) \n\t\t{\n\t\t\tj++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t}\n\twhile (i < li1.length) \n\t{\n\t\tli3[k] = li1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\treturn li3[0..k];\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp385y0uc5.d(44): unittest failure\n----------------\n??:? _d_unittestp [0x42860d]\n??:? void tmp385y0uc5.__unittest_L40_C1() [0x428108]\n??:? void tmp385y0uc5.__modtest() [0x428390]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c6c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b55a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4307e5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430c94]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430771]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b531]\n??:? runModuleUnitTests [0x42c49d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428ad0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tforeach(long i; li1)\n\t{\n\t\tif(i in li2)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tli3[j] = i;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp64gjypi_.d(14): Error: incompatible types for `(i) in (li2)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp64gjypi_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tforeach(long i; li1)\n\t{\n\t\tif(i in li2)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tli3[j] = i;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp64gjypi_.d(14): Error: incompatible types for `(i) in (li2)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp64gjypi_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tforeach(i; li1)\n\t{\n\t\tif(i in li2)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tli3[j] = i;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "/tmp/tmpeezvjjre.d(14): Error: incompatible types for `(i) in (li2)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpeezvjjre.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long x; li1)\n\t{\n\t\tif(x in li2)\n\t\t{\n\t\t\tli3[i] = x;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "/tmp/tmpzhg6lx25.d(14): Error: incompatible types for `(x) in (li2)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzhg6lx25.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpp4j_n34j.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmpp4j_n34j.Diff(long[], long[]) [0x427e82]\n??:? void tmpp4j_n34j.__unittest_L22_C1() [0x427fad]\n??:? void tmpp4j_n34j.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpp4j_n34j.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmpp4j_n34j.Diff(long[], long[]) [0x427e82]\n??:? void tmpp4j_n34j.__unittest_L22_C1() [0x427fad]\n??:? void tmpp4j_n34j.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length + li2.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile (i < li1.length && j < li2.length) \n\t{\n\t\tif (li1[i] < li2[j]) \n\t\t{\n\t\t\tli3[k] = li1[i];\n\t\t\ti += 1;\n\t\t\tk += 1;\n\t\t}\n\t\telse if (li2[j] < li1[i]) \n\t\t{\n\t\t\tj += 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ti += 1;\n\t\t\tj += 1;\n\t\t}\n\t}\n\twhile (i < li1.length) \n\t{\n\t\tli3[k] = li1[i];\n\t\ti += 1;\n\t\tk += 1;\n\t}\n\treturn li3[0 .. k];\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpt65j4pn8.d(44): unittest failure\n----------------\n??:? _d_unittestp [0x42862d]\n??:? void tmpt65j4pn8.__unittest_L40_C1() [0x428128]\n??:? void tmpt65j4pn8.__modtest() [0x4283b0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c6e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b57a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430805]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430cb4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430791]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b551]\n??:? runModuleUnitTests [0x42c4bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428af0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpp4j_n34j.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmpp4j_n34j.Diff(long[], long[]) [0x427e82]\n??:? void tmpp4j_n34j.__unittest_L22_C1() [0x427fad]\n??:? void tmpp4j_n34j.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp559o03gz.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmp559o03gz.Diff(long[], long[]) [0x427e82]\n??:? void tmp559o03gz.__unittest_L22_C1() [0x427fad]\n??:? void tmp559o03gz.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = li1.dup;\n\tforeach(long i; li2)\n\t{\n\t\tif(li3.find(i) != -1)\n\t\t{\n\t\t\tli3.remove(i);\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "/tmp/tmpg2l73i4u.d(13): Error: no property `find` for type `long[]`\n/tmp/tmpg2l73i4u.d(15): Error: no property `remove` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg2l73i4u.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpp4j_n34j.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmpp4j_n34j.Diff(long[], long[]) [0x427e82]\n??:? void tmpp4j_n34j.__unittest_L22_C1() [0x427fad]\n??:? void tmpp4j_n34j.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint k = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tint count = 0;\n\t\tfor (int j = 0; j < li2.length; j++) \n\t\t{\n\t\t\tif (li1[i] == li2[j]) \n\t\t\t{\n\t\t\t\tcount = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (count == 0) \n\t\t{\n\t\t\tli3[k] = li1[i];\n\t\t\tk++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8tsuuv0i.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428535]\n??:? void tmp8tsuuv0i.__unittest_L31_C1() [0x428030]\n??:? void tmp8tsuuv0i.__modtest() [0x4282b8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5ef]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b482]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43070d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430bbc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430699]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b459]\n??:? runModuleUnitTests [0x42c3c5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4289f8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long l; li1)\n\t{\n\t\tif(l in li2)\n\t\t{\n\t\t\tli3[i] = l;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "/tmp/tmp3f36vcnb.d(14): Error: incompatible types for `(l) in (li2)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3f36vcnb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\t\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpw4bufnpq.d(15): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmpw4bufnpq.Diff(long[], long[]) [0x427e82]\n??:? void tmpw4bufnpq.__unittest_L23_C1() [0x427fad]\n??:? void tmpw4bufnpq.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tauto li3 = li1.dup;\n\tforeach(i; li2)\n\t\tli3 -= i;\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "/tmp/tmp7mvawy51.d(12): Error: invalid array operation `li3 -= i` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7mvawy51.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile(i < li1.length && j < li2.length)\n\t{\n\t\tif(li1[i] < li2[j])\n\t\t{\n\t\t\tli3[k] = li1[i];\n\t\t\ti++;\n\t\t\tk++;\n\t\t}\n\t\telse if(li1[i] > li2[j])\n\t\t{\n\t\t\tj++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t}\n\twhile(i < li1.length)\n\t{\n\t\tli3[k] = li1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\treturn li3[0..k];\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmph8xibgdr.d(44): unittest failure\n----------------\n??:? _d_unittestp [0x42860d]\n??:? void tmph8xibgdr.__unittest_L40_C1() [0x428104]\n??:? void tmph8xibgdr.__modtest() [0x42838c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c6c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b55a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4307e5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430c94]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430771]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b531]\n??:? runModuleUnitTests [0x42c49d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428ad0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tforeach(long i; li1)\n\t{\n\t\tif(i in li2)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tli3[j] = i;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp64gjypi_.d(14): Error: incompatible types for `(i) in (li2)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp64gjypi_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tforeach(long i; li1)\n\t{\n\t\tif(i notin li2)\n\t\t{\n\t\t\tli3[j] = i;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "/tmp/tmprqbqh09r.d(14): Error: found `notin` when expecting `)`\n/tmp/tmprqbqh09r.d(14): Error: found `)` when expecting `;` following statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprqbqh09r.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3;\n\tforeach(long i; li1)\n\t{\n\t\tif(i in li2)\n\t\t{\n\t\t\tli3 ~= i;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "/tmp/tmp5x6_wxon.d(13): Error: incompatible types for `(i) in (li2)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5x6_wxon.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tforeach(i; 0 .. li1.length)\n\t{\n\t\tli3[i] = li1[i] - li2[i];\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp3tj5lmpa.d(13): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285a6]\n??:? long[] tmp3tj5lmpa.Diff(long[], long[]) [0x427ead]\n??:? void tmp3tj5lmpa.__unittest_L17_C1() [0x427f85]\n??:? void tmp3tj5lmpa.__modtest() [0x428274]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b442]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306cd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b7c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430659]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b419]\n??:? runModuleUnitTests [0x42c385]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp559o03gz.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmp559o03gz.Diff(long[], long[]) [0x427e82]\n??:? void tmp559o03gz.__unittest_L22_C1() [0x427fad]\n??:? void tmp559o03gz.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length + li2.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile (i < li1.length && j < li2.length) \n\t{\n\t\tif (li1[i] < li2[j]) \n\t\t{\n\t\t\tli3[k] = li1[i];\n\t\t\ti += 1;\n\t\t\tk += 1;\n\t\t} \n\t\telse if (li2[j] < li1[i]) \n\t\t{\n\t\t\tj += 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\ti += 1;\n\t\t\tj += 1;\n\t\t}\n\t}\n\twhile (i < li1.length) \n\t{\n\t\tli3[k] = li1[i];\n\t\ti += 1;\n\t\tk += 1;\n\t}\n\treturn li3[0..k];\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpulq8ye40.d(44): unittest failure\n----------------\n??:? _d_unittestp [0x42862d]\n??:? void tmpulq8ye40.__unittest_L40_C1() [0x428128]\n??:? void tmpulq8ye40.__modtest() [0x4283b0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c6e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b57a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430805]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430cb4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430791]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b551]\n??:? runModuleUnitTests [0x42c4bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428af0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpp4j_n34j.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmpp4j_n34j.Diff(long[], long[]) [0x427e82]\n??:? void tmpp4j_n34j.__unittest_L22_C1() [0x427fad]\n??:? void tmpp4j_n34j.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tforeach(long i; li1)\n\t{\n\t\tif(!li2.find(i))\n\t\t{\n\t\t\tli3[j] = i;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3[0..j];\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "/tmp/tmpwi1napef.d(14): Error: no property `find` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwi1napef.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpp4j_n34j.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmpp4j_n34j.Diff(long[], long[]) [0x427e82]\n??:? void tmpp4j_n34j.__unittest_L22_C1() [0x427fad]\n??:? void tmpp4j_n34j.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp559o03gz.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmp559o03gz.Diff(long[], long[]) [0x427e82]\n??:? void tmp559o03gz.__unittest_L22_C1() [0x427fad]\n??:? void tmp559o03gz.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length + li2.length];\n\tlong[] li4 = new long[li1.length + li2.length];\n\tlong[] li5 = new long[li1.length + li2.length];\n\tlong[] li6 = new long[li1.length + li2.length];\n\tlong[] li7 = new long[li1.length + li2.length];\n\tlong[] li8 = new long[li1.length + li2.length];\n\tlong[] li9 = new long[li1.length + li2.length];\n\tlong[] li10 = new long[li1.length + li2.length];\n\tlong[] li11 = new long[li1.length + li2.length];\n\tlong[] li12 = new long[li1.length + li2.length];\n\tlong[] li13 = new long[li1.length + li2.length];\n\tlong[] li14 = new long[li1.length + li2.length];\n\tlong[] li15 = new long[li1.length + li2.length];\n\tlong[] li16 = new long[li1.length + li2.length];\n\tlong[] li17 = new long[li1.length + li2.length];\n\tlong[] li18 = new long[li1.length + li2.length];\n\tlong[] li19 = new long[li1.length + li2.length];\n\tlong[] li20 = new long[li1.length + li2.length];\n\tlong[] li21 = new long[li1.length + li2.length];\n\tlong[] li22 = new long[li1.length + li2.length];\n\tlong[] li23 = new long[li1.length + li2.length];\n\tlong[] li24 = new long[li1.length + li2.length];\n\tlong[] li25 = new long[li1.length + li2.length];\n\tlong[] li26 = new long[li1.length + li2.length];\n\tlong[] li27 = new long[li1.length + li2.length];\n\tlong[] li28 = new long[\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "/tmp/tmpahbkgghk.d(36): Error: expression expected, not `unittest`\n/tmp/tmpahbkgghk.d(37): Error: found `{` when expecting `]`\n/tmp/tmpahbkgghk.d(38): Error: semicolon expected, not `alias`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpahbkgghk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint k = 0;\n\tforeach(long i; li1)\n\t{\n\t\tif(i in li2)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tli3[k] = i;\n\t\t\tk++;\n\t\t}\n\t}\n\treturn li3[0..k];\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "/tmp/tmpmv3rriwl.d(14): Error: incompatible types for `(i) in (li2)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmv3rriwl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long l; li1)\n\t{\n\t\tif(l in li2)\n\t\t{\n\t\t\tli3[i] = l;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "/tmp/tmp3f36vcnb.d(14): Error: incompatible types for `(l) in (li2)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3f36vcnb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length + li2.length];\n\tlong[] li4 = new long[li1.length + li2.length];\n\tlong[] li5 = new long[li1.length + li2.length];\n\tlong[] li6 = new long[li1.length + li2.length];\n\t\n\tlong[] li7 = new long[li1.length + li2.length];\n\tlong[] li8 = new long[li1.length + li2.length];\n\tlong[] li9 = new long[li1.length + li2.length];\n\tlong[] li10 = new long[li1.length + li2.length];\n\t\n\tlong[] li11 = new long[li1.length + li2.length];\n\tlong[] li12 = new long[li1.length + li2.length];\n\tlong[] li13 = new long[li1.length + li2.length];\n\tlong[] li14 = new long[li1.length + li2.length];\n\t\n\tlong[] li15 = new long[li1.length + li2.length];\n\tlong[] li16 = new long[li1.length + li2.length];\n\tlong[] li17 = new long[li1.length + li2.length];\n\tlong[] li18 = new long[li1.length + li2.length];\n\t\n\tlong[] li19 = new long[li1.length + li2.length];\n\tlong[] li20 = new long[li1.length + li2.length];\n\tlong[] li21 = new long[li1.length + li2.length];\n\tlong[] li22 = new long[li1.length + li2.length];\n\t\n\tlong[] li23 = new long[li1.length + li2.length];\n\tlong[] li24 = new long[li1.length + li2.length];\n\tlong[] li25 = new long[li1.length + li2.length];\n\tlong[] li26 = new long[li1.length + li2.length];\n\t\n\tlong[] li27 = new long[li1.length + li2.\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "/tmp/tmp21wiuagg.d(41): Error: identifier expected following `.`, not `unittest`\n/tmp/tmp21wiuagg.d(42): Error: found `{` when expecting `]`\n/tmp/tmp21wiuagg.d(43): Error: semicolon expected, not `alias`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp21wiuagg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long x; li1)\n\t{\n\t\tif(x notin li2)\n\t\t{\n\t\t\tli3[i] = x;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "/tmp/tmpg5f4d8cv.d(14): Error: found `notin` when expecting `)`\n/tmp/tmpg5f4d8cv.d(14): Error: found `)` when expecting `;` following statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg5f4d8cv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpp4j_n34j.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmpp4j_n34j.Diff(long[], long[]) [0x427e82]\n??:? void tmpp4j_n34j.__unittest_L22_C1() [0x427fad]\n??:? void tmpp4j_n34j.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length + li2.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile (i < li1.length && j < li2.length) \n\t{\n\t\tif (li1[i] < li2[j]) \n\t\t{\n\t\t\tli3[k] = li1[i];\n\t\t\ti += 1;\n\t\t\tk += 1;\n\t\t} \n\t\telse if (li2[j] < li1[i]) \n\t\t{\n\t\t\tj += 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\ti += 1;\n\t\t\tj += 1;\n\t\t}\n\t}\n\twhile (i < li1.length) \n\t{\n\t\tli3[k] = li1[i];\n\t\ti += 1;\n\t\tk += 1;\n\t}\n\treturn li3[0..k];\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpulq8ye40.d(44): unittest failure\n----------------\n??:? _d_unittestp [0x42862d]\n??:? void tmpulq8ye40.__unittest_L40_C1() [0x428128]\n??:? void tmpulq8ye40.__modtest() [0x4283b0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c6e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b57a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430805]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430cb4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430791]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b551]\n??:? runModuleUnitTests [0x42c4bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428af0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp559o03gz.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmp559o03gz.Diff(long[], long[]) [0x427e82]\n??:? void tmp559o03gz.__unittest_L22_C1() [0x427fad]\n??:? void tmp559o03gz.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp559o03gz.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmp559o03gz.Diff(long[], long[]) [0x427e82]\n??:? void tmp559o03gz.__unittest_L22_C1() [0x427fad]\n??:? void tmp559o03gz.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpp4j_n34j.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmpp4j_n34j.Diff(long[], long[]) [0x427e82]\n??:? void tmpp4j_n34j.__unittest_L22_C1() [0x427fad]\n??:? void tmpp4j_n34j.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp559o03gz.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmp559o03gz.Diff(long[], long[]) [0x427e82]\n??:? void tmp559o03gz.__unittest_L22_C1() [0x427fad]\n??:? void tmp559o03gz.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp559o03gz.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmp559o03gz.Diff(long[], long[]) [0x427e82]\n??:? void tmp559o03gz.__unittest_L22_C1() [0x427fad]\n??:? void tmp559o03gz.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpp4j_n34j.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmpp4j_n34j.Diff(long[], long[]) [0x427e82]\n??:? void tmpp4j_n34j.__unittest_L22_C1() [0x427fad]\n??:? void tmpp4j_n34j.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{ \n    long[] li3 = new long[li1.length]; \n    int k = 0; \n    for (int i = 0; i < li1.length; i++) \n    { \n        int j; \n        for (j = 0; j < li2.length; j++) \n            if (li1[i] == li2[j]) \n                break; \n  \n        if (j == li2.length) \n            li3[k++] = li1[i]; \n    } \n    return li3[0..k]; \n} \n/*\n\tWrite a python function to get the frequency of the elements in a list.\n*/\nlong[] Freq(long[] li) \n{ \n    long[] li_new = new long[li.length]; \n    int k = 0; \n    for (int i = 0; i < li.length; i++) \n    { \n        int j; \n        for (j = 0; j < i; j++) \n            if (li[i] == li[j]) \n                break; \n  \n        if (i == j) \n            li_new[k++] = li[i]; \n    } \n    return li_new[0..k]; \n} \n/*\n\tWrite a python function to get the intersection of two lists.\n*/\nlong[] Intersection(long[] li1, long[] li2) \n{ \n    long[] li3 = new long[li1.length]; \n    int k = 0; \n    for (int i = 0; i < li1.length; i++) \n    { \n        for (int j = 0; j < li2.length; j++) \n            if (li1[i] == li2[j]) \n                li3[k++] = li1[i]; \n    } \n    return li3[0..k]; \n} \n/*\n\tWrite a python function to get the union of two lists.\n*/\nlong[] Union(long[] li1, long[] li2) \n{ \n    long[] li3 = new long[li1.length\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "/tmp/tmpegzb4w47.d(64): Error: found `unittest` when expecting `]`\n/tmp/tmpegzb4w47.d(65): Error: semicolon expected, not `{`\n/tmp/tmpegzb4w47.d(72): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpegzb4w47.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile (i < li1.length && j < li2.length) \n\t{\n\t\tif (li1[i] < li2[j]) \n\t\t{\n\t\t\tli3[k] = li1[i];\n\t\t\ti += 1;\n\t\t\tk += 1;\n\t\t} \n\t\telse if (li2[j] < li1[i]) \n\t\t{\n\t\t\tj += 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\ti += 1;\n\t\t\tj += 1;\n\t\t}\n\t}\n\twhile (i < li1.length) \n\t{\n\t\tli3[k] = li1[i];\n\t\ti += 1;\n\t\tk += 1;\n\t}\n\treturn li3[0..k];\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1yns6cwu.d(44): unittest failure\n----------------\n??:? _d_unittestp [0x42862d]\n??:? void tmp1yns6cwu.__unittest_L40_C1() [0x428124]\n??:? void tmp1yns6cwu.__modtest() [0x4283ac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c6e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b57a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430805]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430cb4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430791]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b551]\n??:? runModuleUnitTests [0x42c4bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428af0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile(i < li1.length && j < li2.length) \n\t{\n\t\tif (li1[i] < li2[j]) \n\t\t{\n\t\t\tli3[k] = li1[i];\n\t\t\ti++;\n\t\t\tk++;\n\t\t}\n\t\telse if (li2[j] < li1[i]) \n\t\t{\n\t\t\tj++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t}\n\twhile (i < li1.length) \n\t{\n\t\tli3[k] = li1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\treturn li3[0..k];\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfosm1_7n.d(44): unittest failure\n----------------\n??:? _d_unittestp [0x42860d]\n??:? void tmpfosm1_7n.__unittest_L40_C1() [0x428104]\n??:? void tmpfosm1_7n.__modtest() [0x42838c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c6c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b55a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4307e5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430c94]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430771]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b531]\n??:? runModuleUnitTests [0x42c49d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428ad0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpp4j_n34j.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmpp4j_n34j.Diff(long[], long[]) [0x427e82]\n??:? void tmpp4j_n34j.__unittest_L22_C1() [0x427fad]\n??:? void tmpp4j_n34j.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length + li2.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile (i < li1.length && j < li2.length) \n\t{\n\t\tif (li1[i] < li2[j]) \n\t\t{\n\t\t\tli3[k] = li1[i];\n\t\t\ti++;\n\t\t\tk++;\n\t\t} \n\t\telse if (li2[j] < li1[i]) \n\t\t{\n\t\t\tj++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t}\n\twhile (i < li1.length) \n\t{\n\t\tli3[k] = li1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\treturn li3[0..k];\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp385y0uc5.d(44): unittest failure\n----------------\n??:? _d_unittestp [0x42860d]\n??:? void tmp385y0uc5.__unittest_L40_C1() [0x428108]\n??:? void tmp385y0uc5.__modtest() [0x428390]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c6c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b55a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4307e5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430c94]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430771]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b531]\n??:? runModuleUnitTests [0x42c49d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428ad0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = li1.dup;\n\tforeach(long i; li2)\n\t{\n\t\tli3 -= i;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpkac3i3hg.d(13): Error: invalid array operation `li3 -= i` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkac3i3hg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tforeach(int i; li1)\n\t{\n\t\tif(i notin li2)\n\t\t{\n\t\t\tli3[j] = i;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "/tmp/tmp4shu5nk5.d(14): Error: found `notin` when expecting `)`\n/tmp/tmp4shu5nk5.d(14): Error: found `)` when expecting `;` following statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4shu5nk5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint k = 0;\n\tforeach(long i; li1)\n\t{\n\t\tif(i in li2)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tli3[k] = i;\n\t\t\tk++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "/tmp/tmpdztw95x_.d(14): Error: incompatible types for `(i) in (li2)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdztw95x_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length + li2.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile (i < li1.length && j < li2.length) \n\t{\n\t\tif (li1[i] < li2[j]) \n\t\t{\n\t\t\tli3[k] = li1[i];\n\t\t\ti++;\n\t\t\tk++;\n\t\t} \n\t\telse if (li2[j] < li1[i]) \n\t\t{\n\t\t\tj++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t}\n\twhile (i < li1.length) \n\t{\n\t\tli3[k] = li1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\treturn li3[0..k];\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp385y0uc5.d(44): unittest failure\n----------------\n??:? _d_unittestp [0x42860d]\n??:? void tmp385y0uc5.__unittest_L40_C1() [0x428108]\n??:? void tmp385y0uc5.__modtest() [0x428390]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c6c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b55a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4307e5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430c94]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430771]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b531]\n??:? runModuleUnitTests [0x42c49d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428ad0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach (long l; li1)\n\t{\n\t\tif (l in li2)\n\t\t{\n\t\t\tli3[i] = l;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "/tmp/tmpvea9surl.d(14): Error: incompatible types for `(l) in (li2)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvea9surl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long a; li1)\n\t{\n\t\tif(a in li2)\n\t\t{\n\t\t\tli3[i] = a;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "/tmp/tmpiajg1aib.d(14): Error: incompatible types for `(a) in (li2)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiajg1aib.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (!li2.contains(li1[i])) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3[0..j];\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp6m8113r2.d(14): Error: no property `contains` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6m8113r2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length + li2.length];\n\tlong[] li4 = new long[li1.length + li2.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\tint m = 0;\n\tint n = 0;\n\t\n\twhile(i < li1.length)\n\t{\n\t\tj = 0;\n\t\twhile(j < li2.length)\n\t\t{\n\t\t\tif(li1[i] == li2[j])\n\t\t\t{\n\t\t\t\tli3[k] = li1[i];\n\t\t\t\tk++;\n\t\t\t}\n\t\t\tj++;\n\t\t}\n\t\ti++;\n\t}\n\t\n\twhile(l < li1.length)\n\t{\n\t\tm = 0;\n\t\twhile(m < li3.length)\n\t\t{\n\t\t\tif(li1[l] == li3[m])\n\t\t\t{\n\t\t\t\tli4[n] = li1[l];\n\t\t\t\tn++;\n\t\t\t}\n\t\t\tm++;\n\t\t}\n\t\tl++;\n\t}\n\t\n\treturn li4;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmps65ki5r3.d(55): unittest failure\n----------------\n??:? _d_unittestp [0x428635]\n??:? void tmps65ki5r3.__unittest_L51_C1() [0x428130]\n??:? void tmps65ki5r3.__modtest() [0x4283b8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c6ef]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b582]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43080d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430cbc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430799]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b559]\n??:? runModuleUnitTests [0x42c4c5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428af8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] diff = new long[li1.length];\n\tint i = 0;\n\tforeach(long l1; li1)\n\t{\n\t\tforeach(long l2; li2)\n\t\t{\n\t\t\tif(l1 == l2)\n\t\t\t{\n\t\t\t\tdiff[i] = l1;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\treturn diff;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3q8nyky1.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x42850d]\n??:? void tmp3q8nyky1.__unittest_L25_C1() [0x428008]\n??:? void tmp3q8nyky1.__modtest() [0x428290]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b45a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306e5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b94]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430671]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b431]\n??:? runModuleUnitTests [0x42c39d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4289d0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint k = 0;\n\tforeach(long i; li1)\n\t{\n\t\tif(!li2.canFind(i))\n\t\t{\n\t\t\tli3[k] = i;\n\t\t\tk++;\n\t\t}\n\t}\n\treturn li3[0..k];\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpa6q_nn4r.d(14): Error: no property `canFind` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa6q_nn4r.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length + li2.length];\n\tlong[] li4 = new long[li1.length + li2.length];\n\tlong[] li5 = new long[li1.length + li2.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\tint m = 0;\n\tint n = 0;\n\tint o = 0;\n\tint p = 0;\n\tint q = 0;\n\tint r = 0;\n\tint s = 0;\n\tint t = 0;\n\tint u = 0;\n\tint v = 0;\n\tint w = 0;\n\tint x = 0;\n\tint y = 0;\n\tint z = 0;\n\tint aa = 0;\n\tint ab = 0;\n\tint ac = 0;\n\tint ad = 0;\n\tint ae = 0;\n\tint af = 0;\n\tint ag = 0;\n\tint ah = 0;\n\tint ai = 0;\n\tint aj = 0;\n\tint ak = 0;\n\tint al = 0;\n\tint am = 0;\n\tint an = 0;\n\tint ao = 0;\n\tint ap = 0;\n\tint aq = 0;\n\tint ar = 0;\n\tint as = 0;\n\tint at = 0;\n\tint au = 0;\n\tint av = 0;\n\tint aw = 0;\n\tint ax = 0;\n\tint ay = 0;\n\tint az = 0;\n\tint ba = 0;\n\tint bb = 0;\n\tint bc = 0;\n\tint bd = 0;\n\tint be = 0;\n\tint bf = 0;\n\tint bg = 0;\n\tint bh = 0;\n\tint bi = 0;\n\tint bj = 0;\n\tint bk = 0;\n\tint bl = 0;\n\tint bm = 0;\n\tint bn = 0;\n\tint bo = 0;\n\tint bp = 0;\n\tint bq = 0;\n\tint br = 0\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "/tmp/tmps0i1633z.d(75): Error: semicolon expected, not `unittest`\n/tmp/tmps0i1633z.d(75): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps0i1633z.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (!li2.contains(li1[i]))\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3[0..j];\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "/tmp/tmpzm70cx49.d(14): Error: no property `contains` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzm70cx49.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long x; li1)\n\t{\n\t\tif(x in li2)\n\t\t{\n\t\t\tli3[i] = x;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "/tmp/tmpzhg6lx25.d(14): Error: incompatible types for `(x) in (li2)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzhg6lx25.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length + li2.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile (i < li1.length && j < li2.length) \n\t{\n\t\tif (li1[i] < li2[j]) \n\t\t{\n\t\t\tli3[k] = li1[i];\n\t\t\ti++;\n\t\t\tk++;\n\t\t} \n\t\telse if (li2[j] < li1[i]) \n\t\t{\n\t\t\tli3[k] = li2[j];\n\t\t\tj++;\n\t\t\tk++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t}\n\twhile (i < li1.length) \n\t{\n\t\tli3[k] = li1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\twhile (j < li2.length) \n\t{\n\t\tli3[k] = li2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\treturn li3[0..k];\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpmhqjsl36.d(52): unittest failure\n----------------\n??:? _d_unittestp [0x4286c5]\n??:? void tmpmhqjsl36.__unittest_L48_C1() [0x4281c0]\n??:? void tmpmhqjsl36.__modtest() [0x428448]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c77f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b612]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43089d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430d4c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430829]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5e9]\n??:? runModuleUnitTests [0x42c555]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428b88]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length + li2.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile (i < li1.length && j < li2.length) \n\t{\n\t\tif (li1[i] < li2[j]) \n\t\t{\n\t\t\tli3[k] = li1[i];\n\t\t\ti += 1;\n\t\t\tk += 1;\n\t\t} \n\t\telse if (li2[j] < li1[i]) \n\t\t{\n\t\t\tj += 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\ti += 1;\n\t\t\tj += 1;\n\t\t}\n\t}\n\twhile (i < li1.length) \n\t{\n\t\tli3[k] = li1[i];\n\t\ti += 1;\n\t\tk += 1;\n\t}\n\treturn li3[0..k];\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpulq8ye40.d(44): unittest failure\n----------------\n??:? _d_unittestp [0x42862d]\n??:? void tmpulq8ye40.__unittest_L40_C1() [0x428128]\n??:? void tmpulq8ye40.__modtest() [0x4283b0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c6e7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b57a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430805]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430cb4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430791]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b551]\n??:? runModuleUnitTests [0x42c4bd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428af0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\t\n\tint i = 0;\n\tforeach(long x; li1)\n\t{\n\t\tif(x in li2)\n\t\t{\n\t\t\tli3[i] = x;\n\t\t\ti++;\n\t\t}\n\t}\n\t\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "/tmp/tmpm3ikgok5.d(15): Error: incompatible types for `(x) in (li2)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm3ikgok5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long x; li1) \n\t{\n\t\tif(x in li2) \n\t\t{\n\t\t\tli3[i] = x;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "/tmp/tmphbd9z4zt.d(14): Error: incompatible types for `(x) in (li2)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphbd9z4zt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpp4j_n34j.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmpp4j_n34j.Diff(long[], long[]) [0x427e82]\n??:? void tmpp4j_n34j.__unittest_L22_C1() [0x427fad]\n??:? void tmpp4j_n34j.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tforeach(long i; li1)\n\t{\n\t\tif(i in li2)\n\t\t\tcontinue;\n\t\telse\n\t\t\tli3[j++] = i;\n\t}\n\treturn li3[0..j];\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "/tmp/tmpn6_9v02a.d(14): Error: incompatible types for `(i) in (li2)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn6_9v02a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n    long[] li3 = new long[li1.length];\n    int k = 0;\n    foreach(long i; li1)\n    {\n        if(!li2.contains(i))\n        {\n            li3[k++] = i;\n        }\n    }\n    return li3[0..k];\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "/tmp/tmplp20nwvs.d(14): Error: no property `contains` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplp20nwvs.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = li1.dup;\n\tforeach(long i; li2)\n\t{\n\t\tli3 -= i;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmpkac3i3hg.d(13): Error: invalid array operation `li3 -= i` (possible missing [])\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkac3i3hg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpp4j_n34j.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmpp4j_n34j.Diff(long[], long[]) [0x427e82]\n??:? void tmpp4j_n34j.__unittest_L22_C1() [0x427fad]\n??:? void tmpp4j_n34j.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3;\n\tforeach(long i; li1)\n\t{\n\t\tif(li2.find(i) == -1)\n\t\t{\n\t\t\tli3 ~= i;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "/tmp/tmp79upayjg.d(13): Error: no property `find` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp79upayjg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpp4j_n34j.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmpp4j_n34j.Diff(long[], long[]) [0x427e82]\n??:? void tmpp4j_n34j.__unittest_L22_C1() [0x427fad]\n??:? void tmpp4j_n34j.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tlong[] li4 = new long[li2.length];\n\tlong[] li5 = new long[li1.length + li2.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\tint m = 0;\n\tint n = 0;\n\tint o = 0;\n\tint p = 0;\n\tint q = 0;\n\tint r = 0;\n\tint s = 0;\n\tint t = 0;\n\tint u = 0;\n\tint v = 0;\n\tint w = 0;\n\tint x = 0;\n\tint y = 0;\n\tint z = 0;\n\tint aa = 0;\n\tint bb = 0;\n\tint cc = 0;\n\tint dd = 0;\n\tint ee = 0;\n\tint ff = 0;\n\tint gg = 0;\n\tint hh = 0;\n\tint ii = 0;\n\tint jj = 0;\n\tint kk = 0;\n\tint ll = 0;\n\tint mm = 0;\n\tint nn = 0;\n\tint oo = 0;\n\tint pp = 0;\n\tint qq = 0;\n\tint rr = 0;\n\tint ss = 0;\n\tint tt = 0;\n\tint uu = 0;\n\tint vv = 0;\n\tint ww = 0;\n\tint xx = 0;\n\tint yy = 0;\n\tint zz = 0;\n\tint aaa = 0;\n\tint bbb = 0;\n\tint ccc = 0;\n\tint ddd = 0;\n\tint eee = 0;\n\tint fff = 0;\n\tint ggg = 0;\n\tint hhh = 0;\n\tint iii = 0;\n\tint jjj = 0;\n\tint kkk = 0;\n\tint lll = 0;\n\tint mmm = 0;\n\tint nnn = 0;\n\tint ooo = 0;\n\tint ppp = 0;\n\tint qqq = 0;\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "/tmp/tmpsc45s21x.d(74): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsc45s21x.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp559o03gz.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmp559o03gz.Diff(long[], long[]) [0x427e82]\n??:? void tmp559o03gz.__unittest_L22_C1() [0x427fad]\n??:? void tmp559o03gz.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long x; li1)\n\t{\n\t\tif(x in li2)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tli3[i] = x;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn li3[0..i];\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "/tmp/tmpw17ya5ur.d(14): Error: incompatible types for `(x) in (li2)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw17ya5ur.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long x; li1)\n\t{\n\t\tif(x in li2)\n\t\t{\n\t\t\tli3[i] = x;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123064,
      "stdout": "",
      "stderr": "/tmp/tmpzhg6lx25.d(14): Error: incompatible types for `(x) in (li2)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzhg6lx25.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile (i < li1.length && j < li2.length) \n\t{\n\t\tif (li1[i] < li2[j]) \n\t\t{\n\t\t\tli3[k] = li1[i];\n\t\t\ti++;\n\t\t\tk++;\n\t\t}\n\t\telse if (li2[j] < li1[i]) \n\t\t{\n\t\t\tj++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t}\n\twhile (i < li1.length) \n\t{\n\t\tli3[k] = li1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\treturn li3[0..k];\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppl79qb0n.d(44): unittest failure\n----------------\n??:? _d_unittestp [0x42860d]\n??:? void tmppl79qb0n.__unittest_L40_C1() [0x428104]\n??:? void tmppl79qb0n.__modtest() [0x42838c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c6c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b55a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4307e5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430c94]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430771]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b531]\n??:? runModuleUnitTests [0x42c49d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428ad0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp559o03gz.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmp559o03gz.Diff(long[], long[]) [0x427e82]\n??:? void tmp559o03gz.__unittest_L22_C1() [0x427fad]\n??:? void tmp559o03gz.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = li1.dup;\n\tforeach(long i; li2)\n\t{\n\t\tif(li3.find(i) != -1)\n\t\t{\n\t\t\tli3.remove(i);\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "/tmp/tmpg2l73i4u.d(13): Error: no property `find` for type `long[]`\n/tmp/tmpg2l73i4u.d(15): Error: no property `remove` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg2l73i4u.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = li1.dup;\n\tforeach(long i; li2)\n\t{\n\t\tif(li3.find(i) != -1)\n\t\t{\n\t\t\tli3.remove(i);\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "/tmp/tmpg2l73i4u.d(13): Error: no property `find` for type `long[]`\n/tmp/tmpg2l73i4u.d(15): Error: no property `remove` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg2l73i4u.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3;\n\tforeach(long i; li1)\n\t{\n\t\tif(!li2.canFind(i))\n\t\t\tli3 ~= i;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "/tmp/tmpjltkciji.d(13): Error: no property `canFind` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjltkciji.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp559o03gz.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmp559o03gz.Diff(long[], long[]) [0x427e82]\n??:? void tmp559o03gz.__unittest_L22_C1() [0x427fad]\n??:? void tmp559o03gz.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3;\n\tforeach(long i; li1)\n\t{\n\t\tif(!li2.canFind(i))\n\t\t\tli3 ~= i;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "/tmp/tmpjltkciji.d(13): Error: no property `canFind` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjltkciji.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint i = 0;\n\tforeach(long x; li1)\n\t{\n\t\tif(x notin li2)\n\t\t{\n\t\t\tli3[i] = x;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn li3[0..i];\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "/tmp/tmpco0bxajc.d(14): Error: found `notin` when expecting `)`\n/tmp/tmpco0bxajc.d(14): Error: found `)` when expecting `;` following statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpco0bxajc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpp4j_n34j.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmpp4j_n34j.Diff(long[], long[]) [0x427e82]\n??:? void tmpp4j_n34j.__unittest_L22_C1() [0x427fad]\n??:? void tmpp4j_n34j.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[0];\n\tforeach(long i; li1)\n\t{\n\t\tif(i in li2)\n\t\t{\n\t\t\tli3 ~= i;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "/tmp/tmp66sc2qe_.d(13): Error: incompatible types for `(i) in (li2)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp66sc2qe_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp559o03gz.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmp559o03gz.Diff(long[], long[]) [0x427e82]\n??:? void tmp559o03gz.__unittest_L22_C1() [0x427fad]\n??:? void tmp559o03gz.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[0];\n\tforeach(long i; li1)\n\t{\n\t\tif(!li2.find(i))\n\t\t{\n\t\t\tli3 ~= i;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "/tmp/tmpc_g6t5a9.d(13): Error: no property `find` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc_g6t5a9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tauto li3 = li1.dup;\n\tforeach(i; li2)\n\t{\n\t\tif(li3.length == 0)\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\telse if(li3.length == 1)\n\t\t{\n\t\t\tif(li3[0] == i)\n\t\t\t{\n\t\t\t\tli3.length = 0;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(li3.length > 1)\n\t\t\t{\n\t\t\t\tif(li3[0] == i)\n\t\t\t\t{\n\t\t\t\t\tli3 = li3[1..$];\n\t\t\t\t}\n\t\t\t\telse if(li3[$-1] == i)\n\t\t\t\t{\n\t\t\t\t\tli3 = li3[0..$-1];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tfor(int j = 1; j < li3.length - 1; j++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(li3[j] == i)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tli3 = li3[0..j] ~ li3[j+1..$];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp14aegqae.d(55): unittest failure\n----------------\n??:? _d_unittestp [0x4297f9]\n??:? void tmp14aegqae.__unittest_L51_C1() [0x428370]\n??:? void tmp14aegqae.__modtest() [0x42876c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42f487]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x429482]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42c211]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42c2a0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42c19d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x429459]\n??:? runModuleUnitTests [0x42f25d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429d10]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++)\n\t{\n\t\tif (li1[i] != li2[i])\n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpp4j_n34j.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmpp4j_n34j.Diff(long[], long[]) [0x427e82]\n??:? void tmpp4j_n34j.__unittest_L22_C1() [0x427fad]\n??:? void tmpp4j_n34j.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp559o03gz.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmp559o03gz.Diff(long[], long[]) [0x427e82]\n??:? void tmp559o03gz.__unittest_L22_C1() [0x427fad]\n??:? void tmp559o03gz.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tforeach(long i; li1)\n\t{\n\t\tif(i != li2[j])\n\t\t{\n\t\t\tli3[j] = i;\n\t\t}\n\t\tj++;\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpsvio7_rv.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285a6]\n??:? long[] tmpsvio7_rv.Diff(long[], long[]) [0x427e7e]\n??:? void tmpsvio7_rv.__unittest_L22_C1() [0x427f85]\n??:? void tmpsvio7_rv.__modtest() [0x428274]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b442]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306cd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430b7c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430659]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b419]\n??:? runModuleUnitTests [0x42c385]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tfor (int i = 0; i < li1.length; i++) \n\t{\n\t\tif (li1[i] != li2[i]) \n\t\t{\n\t\t\tli3[j] = li1[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmp559o03gz.d(14): Range violation\n----------------\n??:? _d_arrayboundsp [0x4285ce]\n??:? long[] tmp559o03gz.Diff(long[], long[]) [0x427e82]\n??:? void tmp559o03gz.__unittest_L22_C1() [0x427fad]\n??:? void tmp559o03gz.__modtest() [0x42829c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b46a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4306f5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430ba4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430681]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b441]\n??:? runModuleUnitTests [0x42c3ad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[li1.length];\n\tint j = 0;\n\tforeach(long i; li1)\n\t{\n\t\tif(i in li2)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tli3[j] = i;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp64gjypi_.d(14): Error: incompatible types for `(i) in (li2)`: `long` and `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp64gjypi_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to get the difference between two lists.\n\t\n*/\nlong[] Diff(long[] li1, long[] li2) \n{\n\tlong[] li3 = new long[];\n\tforeach(long i; li1)\n\t{\n\t\tif(!li2.find(i))\n\t\t{\n\t\t\tli3 ~= i;\n\t\t}\n\t}\n\treturn li3;\n}\nunittest\n{\n    alias candidate = Diff;\n\n    assert(candidate([10L, 15L, 20L, 25L, 30L, 35L, 40L], [25L, 40L, 35L]) == [10L, 20L, 30L, 15L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], [6L, 7L, 1L]) == [2L, 3L, 4L, 5L, 6L, 7L]);\n    assert(candidate([1L, 2L, 3L], [6L, 7L, 1L]) == [2L, 3L, 6L, 7L]);\n}\nvoid main(){}",
      "timestamp": 1666123065,
      "stdout": "",
      "stderr": "/tmp/tmp_8jyaeok.d(10): Error: new can only create structs, dynamic arrays or class objects, not `long[]`'s\n/tmp/tmp_8jyaeok.d(13): Error: no property `find` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_8jyaeok.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
{
  "name": "mbpp_624_is_upper",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to convert a given string to uppercase.\n\t\n*/\nstring is_upper(string string) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_624_is_upper.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = is_upper;\n\n    assert(candidate(\"person\") == \"PERSON\");\n    assert(candidate(\"final\") == \"FINAL\");\n    assert(candidate(\"Valid\") == \"VALID\");\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tresult ~= toUpper(c);\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tforeach(char c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\tstring result = \"\";\n\tforeach(char c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\tstring result = \"\";\n\tforeach(char c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn string.toUpper();\n}",
    "{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tresult ~= toUpper(c);\n\t}\n\treturn result;\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\tstring result = \"\";\n\tforeach(char c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\tstring result = \"\";\n\tforeach(char c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\tstring upper_string = \"\";\n\tforeach(char c; string)\n\t{\n\t\tif(c.isLower)\n\t\t\tupper_string ~= c.toUpper;\n\t\telse\n\t\t\tupper_string ~= c;\n\t}\n\treturn upper_string;\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}\n/*\n\tWrite a python function to convert a given string to lowercase.\n*/\nstring is_lower(string string) \n{\n\treturn toLower(string);\n}\n/*\n\tWrite a python function to swap comma and dot in a string.\n\t\n\tSample string: \"32.054,23\"\n\tExpected Output: \"32,054.23\"\n*/\nstring swap_comma_dot(string string) \n{\n\treturn replace(string, \",\", \";\").replace(\".\", \",\").replace(\";\", \".\");\n}\n/*\n\tWrite a python function to remove leading zeros from an IP address.\n\t\n\tSample IP: \"255.024.01.01\"\n\tExpected Output: \"255.24.1.1\"\n*/\nstring remove_leading_zeros(string ip) \n{\n\tstring[] ip_split = split(ip, \".\");\n\tstring[] ip_split_new = new string[ip_split.length];\n\tforeach(i, ip_split_new; ip_split)\n\t{\n\t\tip_split_new[i] = to!string(to!int(ip_split[i]));\n\t}\n\treturn join(ip_split_new, \".\");\n}\n/*\n\tWrite a python function to check whether a string starts with specified characters.\n\t\n\tTest Data:\n\t\tstring_startswith(\"w3resource.com\", \"w3r\") -> True\n\t\tstring_startswith(\"w3resource.com\", \"w3r\") -> False\n*/",
    "{\n\treturn string.toUpper();\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tresult ~= toUpper(c);\n\t}\n\treturn result;\n}",
    "{\n\treturn toUpper(string);\n}\n/*\n\tWrite a python function to convert a given string to lowercase.\n*/\nstring is_lower(string string) \n{\n\treturn toLower(string);\n}\n/*\n\tWrite a python function to swapcase a given string.\n*/\nstring swap_case(string string) \n{\n\treturn toLower(string);\n}\n/*\n\tWrite a python function to capitalize first and last letters of each word of a given string.\n*/\nstring cap_first_last(string string) \n{\n\treturn toLower(string);\n}\n/*\n\tWrite a python function to calculate the number of upper case letters and lower case letters.\n*/\nstring upper_lower_count(string string) \n{\n\treturn toLower(string);\n}\n/*\n\tWrite a python function to calculate the number of uppercase letters and lowercase letters.\n*/\nstring upper_lower_count(string string) \n{\n\treturn toLower(string);\n}\n/*\n\tWrite a python function to calculate the number of uppercase letters and lowercase letters.\n*/\nstring upper_lower_count(string string) \n{\n\treturn toLower(string);\n}\n/*\n\tWrite a python function to calculate the number of uppercase letters and lowercase letters.\n*/\nstring upper_lower_count(string string) \n{\n\treturn toLower(string);\n}\n/*\n\tWrite a python function to calculate the number of uppercase letters and lowercase letters.\n*/\nstring upper_lower_count(string string) \n{\n\treturn toLower(string);\n}\n/*\n\tWrite a python function to calculate the number of uppercase letters and lowercase letters.\n*/\nstring upper_lower_count(string string) \n{\n\treturn toLower(string);\n}\n/*\n\tWrite a python function to calculate the number of uppercase letters and lowercase letters.\n*/\nstring upper_lower_count(string string) \n{\n\treturn toLower(string);\n}\n/*\n\tWrite a python function to calculate the number of uppercase letters and lowercase letters.\n*/\nstring upper_lower_count(string string) ",
    "{\n\treturn toUpper(string);\n}",
    "{\n\tstring result = \"\";\n\tforeach(char c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; string) \n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}",
    "{\n\treturn to!string(map!(toupper)(string));\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}",
    "{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tresult ~= toUpper(c);\n\t}\n\treturn result;\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn to!string(map!(toUpper)(string));\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\tint i;\n\tstring temp;\n\tfor (i = 0; i < string.length; i++) \n\t{\n\t\ttemp += toupper(string[i]);\n\t}\n\treturn temp;\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn to!string(toUpper(string));\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\tstring result;\n\tforeach (char c; string)\n\t{\n\t\tif (c >= 'a' && c <= 'z')\n\t\t{\n\t\t\tresult ~= c.toUpper();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\treturn to!string(toUpper(string));\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\tstring result = \"\";\n\tforeach(char c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\tstring result = \"\";\n\tforeach(char c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring result = \"\";\n\tforeach (char c; string)\n\t{\n\t\tif (c.isUpper)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tresult ~= toUpper(c);\n\t}\n\treturn result;\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\tstring result;\n\tforeach(char c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c.isLower)\n\t\t{\n\t\t\tresult ~= c.toUpper;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tstring result;\n\tforeach(c; string)\n\t{\n\t\tresult ~= toUpper(c);\n\t}\n\treturn result;\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn string.toUpper();\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn to!string(toUpper(string));\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tresult ~= toUpper(c);\n\t}\n\treturn result;\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\tstring result = \"\";\n\tforeach(char c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\tstring result = \"\";\n\tforeach (i; 0 .. string.length)\n\t{\n\t\tresult ~= toUpper(string[i]);\n\t}\n\treturn result;\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\tstring result = \"\";\n\tforeach(char c; string)\n\t{\n\t\tresult ~= toUpper(c);\n\t}\n\treturn result;\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn string.toUpper();\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\tstring result = \"\";\n\tforeach(char c; string)\n\t{\n\t\tresult ~= toUpper(c);\n\t}\n\treturn result;\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\tstring result;\n\tforeach(char c; string)\n\t{\n\t\tresult ~= toUpper(c);\n\t}\n\treturn result;\n}",
    "{\n\treturn to!string(map!(toUpper)(string));\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn to!string(map!(toUpper)(string));\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\tstring result;\n\tforeach(char c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn string.toUpper();\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\tstring result = \"\";\n\tfor(int i = 0; i < string.length; i++)\n\t{\n\t\tif(string[i] >= 'a' && string[i] <= 'z')\n\t\t{\n\t\t\tresult ~= string[i].toUpper();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= string[i];\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\tstring result = \"\";\n\tforeach(c; string)\n\t{\n\t\tif(c.isUpper)\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}",
    "{\n\treturn toUpper(string);\n}"
  ]
}
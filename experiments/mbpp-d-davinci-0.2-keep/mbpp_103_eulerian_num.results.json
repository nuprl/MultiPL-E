{
  "name": "mbpp_103_eulerian_num",
  "language": "d",
  "prompt": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_103_eulerian_num.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0) return 1;\n\tif (n == 1 || m == 1) return n;\n\tif (n < m) return 0;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517671,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5xqz8z1m.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmp5xqz8z1m.__unittest_L14_C1() [0x427ad9]\n??:? void tmp5xqz8z1m.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 && m == 0) return 1;\n\tif (n == 0 || m == 0) return 0;\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517671,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpidzxra_m.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmpidzxra_m.__unittest_L13_C1() [0x427acd]\n??:? void tmpidzxra_m.__modtest() [0x427b2c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (m > n) return 0;\n\tif (m == n) return 1;\n\tif (m == 1) return factorial(n);\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + m * eulerian_num(n, m + 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517671,
      "stdout": "",
      "stderr": "/tmp/tmp6fknq1pu.d(11): Error: undefined identifier `factorial`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6fknq1pu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (m == 1)\n\t\treturn 1;\n\tif (n == m)\n\t\treturn 1;\n\tif (m > n)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517671,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_xq0w0ji.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmp_xq0w0ji.__unittest_L21_C1() [0x427ae5]\n??:? void tmp_xq0w0ji.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baeb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a97e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa9d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a955]\n??:? runModuleUnitTests [0x42b8c1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428214]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpg552g6dr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpg552g6dr.__unittest_L17_C1() [0x427aff]\n??:? void tmpg552g6dr.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (n == 1)\n\t\treturn 1;\n\tif (m == 1)\n\t\treturn 1;\n\tif (n == m)\n\t\treturn 1;\n\tif (n < m)\n\t\treturn 0;\n\tif (n > m)\n\t\tresult = (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517671,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp13a2ois8.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmp13a2ois8.__unittest_L26_C1() [0x427b35]\n??:? void tmp13a2ois8.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430010]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9a5]\n??:? runModuleUnitTests [0x42b911]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428264]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpg552g6dr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpg552g6dr.__unittest_L17_C1() [0x427aff]\n??:? void tmpg552g6dr.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0) return 0;\n\tif (n == 0 && m == 0) return 1;\n\tif (n == 0 || m == 0) return 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517672,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzu8wmtjd.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpzu8wmtjd.__unittest_L14_C1() [0x427aff]\n??:? void tmpzu8wmtjd.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0 || n < m)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 1 && m == 1)\n\t\treturn 1;\n\tif (n == 1 && m == 0)\n\t\treturn 0;\n\tif (m == 0)\n\t\treturn factorial(n - 1);\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517671,
      "stdout": "",
      "stderr": "/tmp/tmpyi7xx686.d(18): Error: undefined identifier `factorial`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyi7xx686.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517672,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmphupc_ena.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmphupc_ena.__unittest_L15_C1() [0x427abd]\n??:? void tmphupc_ena.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n;\n\tif (n == m)\n\t\treturn 1;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517671,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpmbmpdile.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpmbmpdile.__unittest_L19_C1() [0x427ae5]\n??:? void tmpmbmpdile.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baeb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a97e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa9d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a955]\n??:? runModuleUnitTests [0x42b8c1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428214]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0) \n\t{\n\t\treturn 0;\n\t}\n\tif (n == 0 && m == 0) \n\t{\n\t\treturn 1;\n\t}\n\tif (n == 0 || m == 0) \n\t{\n\t\treturn 0;\n\t}\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517671,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzhrv_oc6.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpzhrv_oc6.__unittest_L23_C1() [0x427aff]\n??:? void tmpzhrv_oc6.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (m > n) return 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517671,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3ljav55n.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmp3ljav55n.__unittest_L14_C1() [0x427ad1]\n??:? void tmp3ljav55n.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0) return 0;\n\tif (n == 0 || m == 0) return 1;\n\tif (n == 1 || m == 1) return n;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517671,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpakz2_hjf.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmpakz2_hjf.__unittest_L14_C1() [0x427af1]\n??:? void tmpakz2_hjf.__modtest() [0x427b50]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a986]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb19]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a95d]\n??:? runModuleUnitTests [0x42b8c9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42821c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif(n == 0 || m == 0) return 1;\n\tif(n == 1 || m == 1) return n;\n\tif(n < m) return 0;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517671,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp20trf33c.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmp20trf33c.__unittest_L14_C1() [0x427ad9]\n??:? void tmp20trf33c.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (n == 1) return 1;\n\tif (m == 1) return 1;\n\tif (n < m) return 0;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517672,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvq490z8j.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpvq490z8j.__unittest_L16_C1() [0x427ae1]\n??:? void tmpvq490z8j.__modtest() [0x427b40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n;\n\tif (n < m)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517671,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjexd4bqf.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpjexd4bqf.__unittest_L17_C1() [0x427add]\n??:? void tmpjexd4bqf.__modtest() [0x427b3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (n == 1) return 1;\n\tif (m == 1) return 1;\n\tif (n < m) return 0;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517672,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvq490z8j.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpvq490z8j.__unittest_L16_C1() [0x427ae1]\n??:? void tmpvq490z8j.__modtest() [0x427b40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (m > n)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517671,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpln0q5q3m.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmpln0q5q3m.__unittest_L17_C1() [0x427acd]\n??:? void tmpln0q5q3m.__modtest() [0x427b2c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (m > n)\n\t\treturn 0;\n\tif (m == 0 || m == n)\n\t\treturn 1;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + m * eulerian_num(n, m + 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517686,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\t\n\tif (m == 0 || m == n) \n\t{\n\t\tresult = 1;\n\t}\n\telse if (m == 1 || m == n - 1) \n\t{\n\t\tresult = n;\n\t}\n\telse \n\t{\n\t\tresult = (n - m) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp947w4_w3.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmp947w4_w3.__unittest_L26_C1() [0x427af1]\n??:? void tmp947w4_w3.__modtest() [0x427b50]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a986]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb19]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a95d]\n??:? runModuleUnitTests [0x42b8c9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42821c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1)\n\t\treturn m + 1;\n\tif (m == 1)\n\t\treturn n + 1;\n\tif (n == m)\n\t\treturn factorial(n);\n\treturn (n - m + 1) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "/tmp/tmpp87gszc4.d(16): Error: undefined identifier `factorial`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp87gszc4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (m > n) return 0;\n\tif (m == n) return 1;\n\tif (m == 0) return 1;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + m * eulerian_num(n, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpdig1x36s.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmpdig1x36s.__unittest_L14_C1() [0x427ae3]\n??:? void tmpdig1x36s.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (m > n) return 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpwbdtik4d.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpwbdtik4d.__unittest_L14_C1() [0x427ae1]\n??:? void tmpwbdtik4d.__modtest() [0x427b40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (n == 1) return 1;\n\tif (m == 1) return 1;\n\tif (m > n) return 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqs3mh44f.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmpqs3mh44f.__unittest_L16_C1() [0x427aed]\n??:? void tmpqs3mh44f.__modtest() [0x427b4c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a986]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb19]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a95d]\n??:? runModuleUnitTests [0x42b8c9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42821c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif(n == m)\n\t\tresult = 1;\n\telse if(m == 1)\n\t\tresult = 1;\n\telse if(m == 0)\n\t\tresult = 0;\n\telse\n\t\tresult = (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5f3gtpsq.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmp5f3gtpsq.__unittest_L20_C1() [0x427add]\n??:? void tmp5f3gtpsq.__modtest() [0x427b3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0) return 0;\n\tif (n == 0 || m == 0) return 1;\n\tif (n == 1 || m == 1) return n;\n\tif (n == m) return factorial(n);\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "/tmp/tmpdsypku48.d(12): Error: undefined identifier `factorial`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdsypku48.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0) return 0;\n\tif (n == 0 || m == 0) return 1;\n\tif (n == 1 || m == 1) return n;\n\tif (n == m) return factorial(n);\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "/tmp/tmp6i7p64gx.d(12): Error: undefined identifier `factorial`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6i7p64gx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong res = 0;\n\tif(n == 0)\n\t\treturn 1;\n\tif(m == 0)\n\t\treturn 0;\n\tif(n == 1)\n\t\treturn 1;\n\tif(m == 1)\n\t\treturn 1;\n\tif(n == m)\n\t\treturn 1;\n\tif(n < m)\n\t\treturn 0;\n\tif(n > m)\n\t\tres = (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n\treturn res;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7rizz5zb.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427e15]\n??:? void tmp7rizz5zb.__unittest_L26_C1() [0x427b35]\n??:? void tmp7rizz5zb.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430010]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faed]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9a5]\n??:? runModuleUnitTests [0x42b911]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428264]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n    if (n < 0 || m < 0 || n < m)\n        return 0;\n    if (n == 0 && m == 0)\n        return 1;\n    if (m == 0)\n        return 0;\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5t_rfo8u.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmp5t_rfo8u.__unittest_L17_C1() [0x427ad1]\n??:? void tmp5t_rfo8u.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n < m)\n\t\treturn 0;\n\tif (n == m)\n\t\treturn 1;\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpokia71iq.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpokia71iq.__unittest_L17_C1() [0x427ad9]\n??:? void tmpokia71iq.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + m * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjgr49ii1.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmpjgr49ii1.__unittest_L17_C1() [0x427aed]\n??:? void tmpjgr49ii1.__modtest() [0x427b4c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a986]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb19]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a95d]\n??:? runModuleUnitTests [0x42b8c9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42821c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0) \n\t{\n\t\treturn 0;\n\t}\n\tif (n == 0 || m == 0) \n\t{\n\t\treturn 1;\n\t}\n\tif (n == 1 || m == 1) \n\t{\n\t\treturn n;\n\t}\n\tif (n < m) \n\t{\n\t\treturn 0;\n\t}\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprjck42co.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmprjck42co.__unittest_L27_C1() [0x427ae5]\n??:? void tmprjck42co.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baeb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a97e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa9d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a955]\n??:? runModuleUnitTests [0x42b8c1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428214]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (m == 0)\n\t{\n\t\treturn 1;\n\t}\n\telse if (n == 0)\n\t{\n\t\treturn 0;\n\t}\n\telse if (m > n)\n\t{\n\t\treturn 0;\n\t}\n\telse\n\t{\n\t\tresult = (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123790,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\tif (n == m)\n\t\treturn factorial(n);\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "/tmp/tmpthajh5di.d(16): Error: undefined identifier `factorial`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpthajh5di.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpa0vsstin.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmpa0vsstin.__unittest_L13_C1() [0x427abd]\n??:? void tmpa0vsstin.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif(n < m)\n\t\treturn 0;\n\tif(n == m || m == 0)\n\t\treturn 1;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123790,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0 || n < m)\n\t\treturn 0;\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (m == 1)\n\t\treturn factorial(n);\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + m * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "/tmp/tmp8o_5m61t.d(14): Error: undefined identifier `factorial`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8o_5m61t.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0) \n\t{\n\t\treturn 1;\n\t}\n\tif (m == 0) \n\t{\n\t\treturn 0;\n\t}\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpiashm53a.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmpiashm53a.__unittest_L19_C1() [0x427abd]\n??:? void tmpiashm53a.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0 || n < m) \n\t\treturn 0;\n\tif (n == 0 || m == 0) \n\t\treturn 1;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp088qr2g2.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmp088qr2g2.__unittest_L15_C1() [0x427acd]\n??:? void tmp088qr2g2.__modtest() [0x427b2c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (n == 1)\n\t\treturn 1;\n\tif (m == 1)\n\t\treturn 1;\n\tif (n < m)\n\t\treturn 0;\n\tif (n == m)\n\t\treturn 1;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqeuc19mu.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmpqeuc19mu.__unittest_L23_C1() [0x427af1]\n??:? void tmpqeuc19mu.__modtest() [0x427b50]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a986]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb19]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a95d]\n??:? runModuleUnitTests [0x42b8c9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42821c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0) \n\t\treturn 1;\n\tif (n == 1 || m == 1) \n\t\treturn n;\n\tif (n < m) \n\t\treturn 0;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpe5nrvt_f.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpe5nrvt_f.__unittest_L17_C1() [0x427ad9]\n??:? void tmpe5nrvt_f.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (m > n) return 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5owgjujr.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmp5owgjujr.__unittest_L14_C1() [0x427acd]\n??:? void tmp5owgjujr.__modtest() [0x427b2c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0 || n < m)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8rd9_whh.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmp8rd9_whh.__unittest_L17_C1() [0x427ad1]\n??:? void tmp8rd9_whh.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\tif (n == 1 || m == 1)\n\t\treturn 1;\n\tif (n == m)\n\t\treturn factorial(n);\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "/tmp/tmpg0en0t2y.d(14): Error: undefined identifier `factorial`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg0en0t2y.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0) return 0;\n\tif (n == 0 && m == 0) return 1;\n\tif (m == 0) return 0;\n\tif (n == 0) return 1;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp__phvu5x.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmp__phvu5x.__unittest_L15_C1() [0x427add]\n??:? void tmp__phvu5x.__modtest() [0x427b3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (n == 1)\n\t\treturn 1;\n\tif (m == 1)\n\t\treturn 1;\n\tif (n < m)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpnvh4hl1p.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmpnvh4hl1p.__unittest_L21_C1() [0x427aed]\n??:? void tmpnvh4hl1p.__modtest() [0x427b4c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a986]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb19]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a95d]\n??:? runModuleUnitTests [0x42b8c9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42821c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (n == 0) \n\t{\n\t\tresult = 1;\n\t}\n\telse if (m == 0) \n\t{\n\t\tresult = 0;\n\t}\n\telse if (n == 1) \n\t{\n\t\tresult = 1;\n\t}\n\telse if (m == 1) \n\t{\n\t\tresult = 1;\n\t}\n\telse if (n == m) \n\t{\n\t\tresult = 1;\n\t}\n\telse \n\t{\n\t\tresult = (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpmcly69xx.d(40): unittest failure\n----------------\n??:? _d_unittestp [0x427df5]\n??:? void tmpmcly69xx.__unittest_L36_C1() [0x427b19]\n??:? void tmpmcly69xx.__modtest() [0x427b78]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb1b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb41]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42fff0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42facd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a985]\n??:? runModuleUnitTests [0x42b8f1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428244]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (m == 0) \n\t{\n\t\tresult = 1;\n\t}\n\telse if (n == 0) \n\t{\n\t\tresult = 0;\n\t}\n\telse if (n == 1) \n\t{\n\t\tresult = 1;\n\t}\n\telse if (n == m) \n\t{\n\t\tresult = 1;\n\t}\n\telse \n\t{\n\t\tresult = (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpf2brlp2s.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427de5]\n??:? void tmpf2brlp2s.__unittest_L32_C1() [0x427b05]\n??:? void tmpf2brlp2s.__modtest() [0x427b64]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a99e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]\n??:? runModuleUnitTests [0x42b8e1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428234]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n;\n\tif (n < m)\n\t\treturn 0;\n\tif (n == m)\n\t\treturn factorial(n);\n\tif (n > m)\n\t\tresult = (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "/tmp/tmp6dh4b8af.d(17): Error: undefined identifier `factorial`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6dh4b8af.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\tif (m > n)\n\t\treturn 0;\n\tif (m == n)\n\t\treturn 1;\n\tif (m == 1)\n\t\treturn factorial(n - 1);\n\tif (m == n - 1)\n\t\treturn factorial(n) / 2;\n\tif (m == n - 2)\n\t\treturn factorial(n) / 2 * (n - 1);\n\tif (m == n - 3)\n\t\treturn factorial(n) / 2 * (n - 1) * (n - 2) / 3;\n\tif (m == n - 4)\n\t\treturn factorial(n) / 2 * (n - 1) * (n - 2) * (n - 3) / 12;\n\tif (m == n - 5)\n\t\treturn factorial(n) / 2 * (n - 1) * (n - 2) * (n - 3) * (n - 4) / 60;\n\tif (m == n - 6)\n\t\treturn factorial(n) / 2 * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) / 360;\n\tif (m == n - 7)\n\t\treturn factorial(n) / 2 * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) / 2520;\n\tif (m == n - 8)\n\t\treturn factorial(n) / 2 * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) / 20160;\n\tif (m == n - 9)\n\t\treturn factorial(n) / 2 * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7)\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "/tmp/tmpcs_0_iog.d(38): Error: found `unittest` when expecting `;` following `return` statement\n/tmp/tmpcs_0_iog.d(46): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcs_0_iog.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpg552g6dr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpg552g6dr.__unittest_L17_C1() [0x427aff]\n??:? void tmpg552g6dr.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (n == 1) return 1;\n\tif (m == 1) return 1;\n\tif (n < m) return 0;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517672,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvq490z8j.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpvq490z8j.__unittest_L16_C1() [0x427ae1]\n??:? void tmpvq490z8j.__modtest() [0x427b40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1)\n\t\treturn m + 1;\n\tif (m == 1)\n\t\treturn n + 1;\n\treturn (n + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp09pazhkg.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmp09pazhkg.__unittest_L17_C1() [0x427b0f]\n??:? void tmp09pazhkg.__modtest() [0x427b48]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baeb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a97e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa9d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a955]\n??:? runModuleUnitTests [0x42b8c1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428214]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (m > n)\n\t\treturn 0;\n\tif (m == n)\n\t\treturn 1;\n\tfor (int i = 1; i <= m; i++)\n\t\tresult += eulerian_num(n - 1, i - 1) * (n - i + 1);\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpf02i88fq.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpf02i88fq.__unittest_L22_C1() [0x427ae5]\n??:? void tmpf02i88fq.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baeb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a97e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa9d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a955]\n??:? runModuleUnitTests [0x42b8c1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428214]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0) return 0;\n\tif (n == 0 || m == 0) return 1;\n\tif (n == 1 || m == 1) return n;\n\tif (n == m) return factorial(n);\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + m * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "/tmp/tmpbq0v9jg_.d(12): Error: undefined identifier `factorial`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbq0v9jg_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n == 1 ? m + 1 : n + 1;\n\tif (n < m)\n\t\treturn 0;\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmph7ih5kas.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427ded]\n??:? void tmph7ih5kas.__unittest_L19_C1() [0x427b37]\n??:? void tmph7ih5kas.__modtest() [0x427b70]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb13]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9a6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb39]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fac5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a97d]\n??:? runModuleUnitTests [0x42b8e9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42823c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong[long] factorials;\n\tfactorials[0] = 1;\n\tforeach(i; 1 .. n + 1)\n\t\tfactorials[i] = factorials[i - 1] * i;\n\t\n\tlong[long] binomials;\n\tbinomials[0] = 1;\n\tforeach(i; 1 .. n + 1)\n\t\tbinomials[i] = binomials[i - 1] * (n + 1 - i) / i;\n\t\n\tlong result = 0;\n\tforeach(i; 0 .. m + 1)\n\t\tresult += binomials[i] * factorials[n + 1] / (factorials[n + 1 - i] * factorials[i]);\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "core.exception.RangeError@/tmp/tmpx7up1sso.d(21): Range violation\n----------------\n??:? _d_arrayboundsp [0x428af2]\n??:? long tmpx7up1sso.eulerian_num(long, long) [0x427d89]\n??:? void tmpx7up1sso.__unittest_L25_C1() [0x427e66]\n??:? void tmpx7up1sso.__modtest() [0x427ee0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42d963]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42889e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42a87d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42a90c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42a809]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428875]\n??:? runModuleUnitTests [0x42d739]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int functi",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0) \n\t{\n\t\treturn 0;\n\t}\n\tif (n == 0 && m == 0) \n\t{\n\t\treturn 1;\n\t}\n\tif (m == 0) \n\t{\n\t\treturn 0;\n\t}\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz8k5ft5k.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmpz8k5ft5k.__unittest_L23_C1() [0x427acd]\n??:? void tmpz8k5ft5k.__modtest() [0x427b2c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0) \n\t\treturn 1;\n\tif (n < m) \n\t\treturn 0;\n\tif (n == m) \n\t\treturn 1;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpywy3b0z7.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpywy3b0z7.__unittest_L17_C1() [0x427add]\n??:? void tmpywy3b0z7.__modtest() [0x427b3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0 || n < m) \n\t{\n\t\treturn 0;\n\t}\n\tif (n == 0 && m == 0) \n\t{\n\t\treturn 1;\n\t}\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcx03sza1.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmpcx03sza1.__unittest_L19_C1() [0x427acd]\n??:? void tmpcx03sza1.__modtest() [0x427b2c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0) \n\t\treturn 1;\n\tif (n == 1 || m == 1) \n\t\treturn n == 1 ? m : n;\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpx1r5wlrn.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpx1r5wlrn.__unittest_L15_C1() [0x427add]\n??:? void tmpx1r5wlrn.__modtest() [0x427b3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0) return 1;\n\tif (n == 1 || m == 1) return n;\n\tif (n < m) return 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_8bn5g_x.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmp_8bn5g_x.__unittest_L14_C1() [0x427add]\n??:? void tmp_8bn5g_x.__modtest() [0x427b3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (m > n)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8249ihz_.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmp8249ihz_.__unittest_L17_C1() [0x427ad1]\n??:? void tmp8249ihz_.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (m == 1) return 1;\n\tif (m > n) return 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpipugzzj0.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpipugzzj0.__unittest_L15_C1() [0x427ae9]\n??:? void tmpipugzzj0.__modtest() [0x427b48]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baeb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a97e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa9d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a955]\n??:? runModuleUnitTests [0x42b8c1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428214]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n;\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8j6g5f3y.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmp8j6g5f3y.__unittest_L17_C1() [0x427add]\n??:? void tmp8j6g5f3y.__modtest() [0x427b3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0) \n\t{\n\t\treturn 1;\n\t}\n\tif (m == 0) \n\t{\n\t\treturn 0;\n\t}\n\tif (m > n) \n\t{\n\t\treturn 0;\n\t}\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp86paxwju.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmp86paxwju.__unittest_L23_C1() [0x427ad1]\n??:? void tmp86paxwju.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif(n == 0)\n\t{\n\t\tresult = 1;\n\t}\n\telse if(m == 0)\n\t{\n\t\tresult = 0;\n\t}\n\telse if(n == 1)\n\t{\n\t\tresult = 1;\n\t}\n\telse if(m == 1)\n\t{\n\t\tresult = 1;\n\t}\n\telse\n\t{\n\t\tresult = (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpn0zcootz.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427ddd]\n??:? void tmpn0zcootz.__unittest_L32_C1() [0x427b01]\n??:? void tmpn0zcootz.__modtest() [0x427b60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb03]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a996]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb29]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]\n??:? runModuleUnitTests [0x42b8d9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42822c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 && m == 0) return 1;\n\tif (n == 0 || m == 0) return 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpu1qjzrls.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmpu1qjzrls.__unittest_L13_C1() [0x427af7]\n??:? void tmpu1qjzrls.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n;\n\tif (n < m)\n\t\treturn 0;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpw9pg1kmn.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpw9pg1kmn.__unittest_L17_C1() [0x427ad9]\n??:? void tmpw9pg1kmn.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (m == 0 || m == n)\n\t\treturn 1;\n\tif (m == 1 || m == n - 1)\n\t\treturn n;\n\tif (m > n)\n\t\treturn 0;\n\t\n\tresult = eulerian_num(n - 1, m - 1) + (n - m) * eulerian_num(n - 1, m);\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpnq4_mdjl.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpnq4_mdjl.__unittest_L20_C1() [0x427ae1]\n??:? void tmpnq4_mdjl.__modtest() [0x427b40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0) \n\t{\n\t\treturn 0;\n\t}\n\tif (n == 0 && m == 0) \n\t{\n\t\treturn 1;\n\t}\n\tif (m > n) \n\t{\n\t\treturn 0;\n\t}\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 && m == 0) return 1;\n\tif (n == 0 || m == 0) return 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpu1qjzrls.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmpu1qjzrls.__unittest_L13_C1() [0x427af7]\n??:? void tmpu1qjzrls.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0 || n < m) \n\t{\n\t\treturn 0;\n\t}\n\tif (n == 0 || m == 0) \n\t{\n\t\treturn 1;\n\t}\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmps5rj0f7c.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmps5rj0f7c.__unittest_L19_C1() [0x427ac9]\n??:? void tmps5rj0f7c.__modtest() [0x427b28]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0) \n\t\treturn 1;\n\tif (n == 1 || m == 1) \n\t\treturn n;\n\tif (n < m) \n\t\treturn 0;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpe5nrvt_f.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpe5nrvt_f.__unittest_L17_C1() [0x427ad9]\n??:? void tmpe5nrvt_f.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (m > n) return 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5owgjujr.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmp5owgjujr.__unittest_L14_C1() [0x427acd]\n??:? void tmp5owgjujr.__modtest() [0x427b2c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\tif (n == m)\n\t\treturn 1;\n\tif (m == 1)\n\t\treturn 1;\n\tif (m > n)\n\t\treturn 0;\n\tresult = (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp38_89nm4.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmp38_89nm4.__unittest_L23_C1() [0x427af1]\n??:? void tmp38_89nm4.__modtest() [0x427b50]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a986]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb19]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a95d]\n??:? runModuleUnitTests [0x42b8c9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42821c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (n == 1)\n\t\treturn 1;\n\tif (m == 1)\n\t\treturn 1;\n\tif (n < m)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpg2nixzn0.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpg2nixzn0.__unittest_L21_C1() [0x427ae5]\n??:? void tmpg2nixzn0.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baeb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a97e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa9d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a955]\n??:? runModuleUnitTests [0x42b8c1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428214]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (n == 0) \n\t{\n\t\tresult = 1;\n\t}\n\telse if (m == 0) \n\t{\n\t\tresult = 0;\n\t}\n\telse if (n == 1) \n\t{\n\t\tresult = 1;\n\t}\n\telse if (m == 1) \n\t{\n\t\tresult = 1;\n\t}\n\telse if (n < m) \n\t{\n\t\tresult = 0;\n\t}\n\telse \n\t{\n\t\tresult = (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpg18i1amm.d(40): unittest failure\n----------------\n??:? _d_unittestp [0x427ded]\n??:? void tmpg18i1amm.__unittest_L36_C1() [0x427b11]\n??:? void tmpg18i1amm.__modtest() [0x427b70]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb13]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9a6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb39]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fac5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a97d]\n??:? runModuleUnitTests [0x42b8e9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42823c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (m == 0 || m == n)\n\t\treturn 1;\n\tif (m == 1)\n\t\treturn n;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + m * eulerian_num(n, m - 2);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpt4_ijn82.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmpt4_ijn82.__unittest_L15_C1() [0x427abd]\n??:? void tmpt4_ijn82.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n;\n\tif (n < m)\n\t\treturn 0;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpw9pg1kmn.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpw9pg1kmn.__unittest_L17_C1() [0x427ad9]\n??:? void tmpw9pg1kmn.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong[long] memo;\n\tauto eulerian = (n, m) {\n\t\tif (n < m) return 0;\n\t\tif (n == m) return 1;\n\t\tif (m == 0) return 1;\n\t\tif (memo[n * 100 + m] != 0) return memo[n * 100 + m];\n\t\treturn memo[n * 100 + m] = (n - m) * eulerian(n - 1, m) + (m + 1) * eulerian(n - 1, m - 1);\n\t};\n\treturn eulerian(n, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "/tmp/tmpv88xz5df.d(10): Error: variable `tmpv88xz5df.eulerian_num.eulerian` type `void` is inferred from initializer `(n, m)\n{\nif (n < m)\nreturn 0;\nif (n == m)\nreturn 1;\nif (m == 0)\nreturn 1;\nif (memo[n * 100 + m] != 0)\nreturn memo[n * 100 + m];\nreturn memo[n * 100 + m] = (n - m) * eulerian(n - 1, m) + (m + 1) * eulerian(n - 1, m - 1);\n}\n`, and variables cannot be of type `void`\n/tmp/tmpv88xz5df.d(10): Error: template lambda has no value\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv88xz5df.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpue__jcuj.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmpue__jcuj.__unittest_L15_C1() [0x427af7]\n??:? void tmpue__jcuj.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (n == 1) return 1;\n\tif (m == 1) return 1;\n\tif (n < m) return 0;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517672,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvq490z8j.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpvq490z8j.__unittest_L16_C1() [0x427ae1]\n??:? void tmpvq490z8j.__modtest() [0x427b40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1)\n\t\treturn m + 1;\n\tif (m == 1)\n\t\treturn n + 1;\n\treturn (n + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp09pazhkg.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmp09pazhkg.__unittest_L17_C1() [0x427b0f]\n??:? void tmp09pazhkg.__modtest() [0x427b48]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baeb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a97e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa9d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a955]\n??:? runModuleUnitTests [0x42b8c1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428214]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (n == 1)\n\t\treturn 1;\n\tif (m == 1)\n\t\treturn 1;\n\tif (n < m)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpnvh4hl1p.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmpnvh4hl1p.__unittest_L21_C1() [0x427aed]\n??:? void tmpnvh4hl1p.__modtest() [0x427b4c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a986]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb19]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a95d]\n??:? runModuleUnitTests [0x42b8c9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42821c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n < m)\n\t\treturn 0;\n\tif (n == m)\n\t\treturn 1;\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpokia71iq.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpokia71iq.__unittest_L17_C1() [0x427ad9]\n??:? void tmpokia71iq.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpg552g6dr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpg552g6dr.__unittest_L17_C1() [0x427aff]\n??:? void tmpg552g6dr.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n;\n\tif (n < m)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp19m62ass.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmp19m62ass.__unittest_L17_C1() [0x427add]\n??:? void tmp19m62ass.__modtest() [0x427b3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpg552g6dr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpg552g6dr.__unittest_L17_C1() [0x427aff]\n??:? void tmpg552g6dr.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0) \n\t{\n\t\treturn 1;\n\t}\n\tif (m > n) \n\t{\n\t\treturn 0;\n\t}\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + m * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpr9zo2ca_.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpr9zo2ca_.__unittest_L19_C1() [0x427ad5]\n??:? void tmpr9zo2ca_.__modtest() [0x427b34]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong[long] memo;\n\treturn eulerian_num_impl(n, m, memo);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "/tmp/tmp6lkdsbpa.d(10): Error: undefined identifier `eulerian_num_impl`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6lkdsbpa.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (n == 0 || m == 0)\n\t\treturn 1;\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "/tmp/tmp2bsdog6s.d(12): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2bsdog6s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0) \n\t\treturn 1;\n\tif (m == 0) \n\t\treturn 0;\n\tif (n == 1) \n\t\treturn 1;\n\tif (m == 1) \n\t\treturn 1;\n\tif (n < m) \n\t\treturn 0;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmps4cwejow.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmps4cwejow.__unittest_L21_C1() [0x427ae1]\n??:? void tmps4cwejow.__modtest() [0x427b40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0) \n\t{\n\t\treturn 1;\n\t}\n\tif (m == 0) \n\t{\n\t\treturn 0;\n\t}\n\tif (n == 1) \n\t{\n\t\treturn 1;\n\t}\n\tif (m == 1) \n\t{\n\t\treturn 1;\n\t}\n\tif (m > n) \n\t{\n\t\treturn 0;\n\t}\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4bhiofgq.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmp4bhiofgq.__unittest_L31_C1() [0x427aed]\n??:? void tmp4bhiofgq.__modtest() [0x427b4c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a986]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb19]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a95d]\n??:? runModuleUnitTests [0x42b8c9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42821c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0 || n < m)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 1 && m == 1)\n\t\treturn 1;\n\tif (n == 1 && m == 0)\n\t\treturn 0;\n\tif (m == 0)\n\t\treturn 1;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp07baim9l.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427ddd]\n??:? void tmp07baim9l.__unittest_L21_C1() [0x427b01]\n??:? void tmp07baim9l.__modtest() [0x427b60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb03]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a996]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb29]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]\n??:? runModuleUnitTests [0x42b8d9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42822c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n;\n\tif (n == m)\n\t\treturn factorial(n);\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "/tmp/tmp563izrwu.d(16): Error: undefined identifier `factorial`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp563izrwu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (n == m)\n\t\treturn 1;\n\tif (n > m)\n\t\treturn 0;\n\tif (n == 1)\n\t\treturn m;\n\tfor (long i = 0; i < n; i++)\n\t\tresult += eulerian_num(i, m - 1);\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123776,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpunkb5no_.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmpunkb5no_.__unittest_L24_C1() [0x427abd]\n??:? void tmpunkb5no_.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (m > n) return 0;\n\tif (m == n) return 1;\n\tfor (long i = 0; i < m; i++) \n\t{\n\t\tresult += eulerian_num(n - 1, i);\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123776,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpktb9vkz2.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmpktb9vkz2.__unittest_L20_C1() [0x427ac9]\n??:? void tmpktb9vkz2.__modtest() [0x427b28]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (n == 1)\n\t\treturn 1;\n\tif (m == 1)\n\t\treturn 1;\n\tif (m > n)\n\t\treturn 0;\n\tfor (long i = 0; i <= n - m; i++)\n\t\tresult += eulerian_num(n - i, m - 1) * pow(-1, i) * factorial(n) / (factorial(i) * factorial(n - i));\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "/tmp/tmp4xlux7tk.d(21): Error: undefined identifier `factorial`\n/tmp/tmp4xlux7tk.d(21): Error: undefined identifier `factorial`\n/tmp/tmp4xlux7tk.d(21): Error: undefined identifier `factorial`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4xlux7tk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif(n == 0 || m == 0) {\n\t\treturn 1;\n\t}\n\tif(n == 1 || m == 1) {\n\t\treturn n;\n\t}\n\tif(n == m) {\n\t\treturn 1;\n\t}\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123776,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpwwca6aak.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpwwca6aak.__unittest_L20_C1() [0x427ad9]\n??:? void tmpwwca6aak.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif(n == 0 || m == 0 || m > n) return 0;\n\tif(m == 1 || m == n) return 1;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123776,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuhijyh1_.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpuhijyh1_.__unittest_L13_C1() [0x427ae1]\n??:? void tmpuhijyh1_.__modtest() [0x427b40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpg552g6dr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpg552g6dr.__unittest_L17_C1() [0x427aff]\n??:? void tmpg552g6dr.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0 || n < m) return 0;\n\tif (n == 0 && m == 0) return 1;\n\tif (m == 0) return 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyl5ruufg.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmpyl5ruufg.__unittest_L14_C1() [0x427ad1]\n??:? void tmpyl5ruufg.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (m == 1) return 1;\n\tif (m > n) return 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpipugzzj0.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpipugzzj0.__unittest_L15_C1() [0x427ae9]\n??:? void tmpipugzzj0.__modtest() [0x427b48]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baeb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a97e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa9d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a955]\n??:? runModuleUnitTests [0x42b8c1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428214]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (n == 1) return 1;\n\tif (m == 1) return 1;\n\tif (n < m) return 0;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517672,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvq490z8j.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpvq490z8j.__unittest_L16_C1() [0x427ae1]\n??:? void tmpvq490z8j.__modtest() [0x427b40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n;\n\tif (n == m)\n\t\treturn factorial(n);\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "/tmp/tmp563izrwu.d(16): Error: undefined identifier `factorial`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp563izrwu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0) return 0;\n\tif (m == 0) return 1;\n\tif (n == 0) return 0;\n\tif (m == 1) return 1;\n\tif (n == m) return 1;\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123776,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7zf7qmdd.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmp7zf7qmdd.__unittest_L16_C1() [0x427ae1]\n??:? void tmp7zf7qmdd.__modtest() [0x427b40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (m == 0)\n\t\treturn 1;\n\tif (n == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123776,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkwmgxoh5.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmpkwmgxoh5.__unittest_L15_C1() [0x427abd]\n??:? void tmpkwmgxoh5.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (m > n)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkfj2kw1b.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmpkfj2kw1b.__unittest_L17_C1() [0x427ad1]\n??:? void tmpkfj2kw1b.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpg552g6dr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpg552g6dr.__unittest_L17_C1() [0x427aff]\n??:? void tmpg552g6dr.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpg552g6dr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpg552g6dr.__unittest_L17_C1() [0x427aff]\n??:? void tmpg552g6dr.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n + m - 1;\n\tif (n < m)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2xkjuibx.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427ddd]\n??:? void tmp2xkjuibx.__unittest_L17_C1() [0x427afd]\n??:? void tmp2xkjuibx.__modtest() [0x427b5c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb03]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a996]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb29]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]\n??:? runModuleUnitTests [0x42b8d9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42822c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (m > n) return 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpwbdtik4d.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpwbdtik4d.__unittest_L14_C1() [0x427ae1]\n??:? void tmpwbdtik4d.__modtest() [0x427b40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (n == m)\n\t\treturn 1;\n\tif (n > m)\n\t\treturn 0;\n\tfor (long i = 0; i <= n; i++)\n\t\tresult += pow(-1, i) * eulerian_num(n - i, m - 1);\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123776,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpc2ge0542.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427ebd]\n??:? void tmpc2ge0542.__unittest_L22_C1() [0x427b29]\n??:? void tmpc2ge0542.__modtest() [0x427c40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbe3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa76]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa4d]\n??:? runModuleUnitTests [0x42b9b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42830c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpg552g6dr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpg552g6dr.__unittest_L17_C1() [0x427aff]\n??:? void tmpg552g6dr.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0) return 0;\n\tif (n == 0 || m == 0) return 1;\n\tif (n == 1 || m == 1) return n;\n\tif (n == m) return factorial(n);\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123776,
      "stdout": "",
      "stderr": "/tmp/tmpxc476fez.d(12): Error: undefined identifier `factorial`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxc476fez.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n;\n\tif (n < m)\n\t\treturn 0;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpw9pg1kmn.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpw9pg1kmn.__unittest_L17_C1() [0x427ad9]\n??:? void tmpw9pg1kmn.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong[long] memo;\n\tauto eulerian = (n, m) {\n\t\tif (n < 0 || m < 0) return 0;\n\t\tif (n == 0 && m == 0) return 1;\n\t\tif (n == 0 || m == 0) return 0;\n\t\tif (memo.count(n * 100 + m)) return memo[n * 100 + m];\n\t\treturn memo[n * 100 + m] = (n - 1) * eulerian(n - 1, m) + eulerian(n - 1, m - 1);\n\t};\n\treturn eulerian(n, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "/tmp/tmpzjcta2f8.d(10): Error: variable `tmpzjcta2f8.eulerian_num.eulerian` type `void` is inferred from initializer `(n, m)\n{\nif (n < 0 || m < 0)\nreturn 0;\nif (n == 0 && (m == 0))\nreturn 1;\nif (n == 0 || m == 0)\nreturn 0;\nif (memo.count(n * 100 + m))\nreturn memo[n * 100 + m];\nreturn memo[n * 100 + m] = (n - 1) * eulerian(n - 1, m) + eulerian(n - 1, m - 1);\n}\n`, and variables cannot be of type `void`\n/tmp/tmpzjcta2f8.d(10): Error: template lambda has no value\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzjcta2f8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0 || n < m)\n\t\treturn 0;\n\tif (m == 0 || n == m)\n\t\treturn 1;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + m * eulerian_num(n, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123776,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpux3z_n1o.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmpux3z_n1o.__unittest_L15_C1() [0x427ae3]\n??:? void tmpux3z_n1o.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (m > n) return 0;\n\tif (m == 0) return 1;\n\tif (m == 1) return n;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + m * eulerian_num(n, m - 2);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123776,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvast_3r4.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmpvast_3r4.__unittest_L14_C1() [0x427abd]\n??:? void tmpvast_3r4.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (m == 1)\n\t\treturn 1;\n\tif (m > n)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123776,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqzvbdw4h.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpqzvbdw4h.__unittest_L21_C1() [0x427ae1]\n??:? void tmpqzvbdw4h.__modtest() [0x427b40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 && m == 0) return 1;\n\tif (n == 0 || m == 0) return 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpu1qjzrls.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmpu1qjzrls.__unittest_L13_C1() [0x427af7]\n??:? void tmpu1qjzrls.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (m > n)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123790,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\t\n\tif (n == 1 || m == 1)\n\t\treturn n;\n\t\n\tif (n < m)\n\t\treturn 0;\n\t\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123776,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpv6164c6b.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpv6164c6b.__unittest_L20_C1() [0x427ad9]\n??:? void tmpv6164c6b.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (m > n) return 0;\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123776,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpya44rwm8.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmpya44rwm8.__unittest_L14_C1() [0x427acd]\n??:? void tmpya44rwm8.__modtest() [0x427b2c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (m == 0)\n\t\treturn 1;\n\tif (n == 0)\n\t\treturn 0;\n\tfor (long i = 0; i <= m; i++)\n\t\tresult += pow(-1, i) * comb(m, i) * eulerian_num(n - 1, m - i);\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "/tmp/tmpqqzefkwr.d(15): Error: undefined identifier `comb`, did you mean function `cos`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqqzefkwr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n;\n\tif (n == m)\n\t\treturn factorial(n);\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "/tmp/tmp563izrwu.d(16): Error: undefined identifier `factorial`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp563izrwu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0) return 0;\n\tif (n == 0 || m == 0) return 1;\n\tif (n == 1 || m == 1) return n;\n\tif (n == m) return factorial(n);\n\treturn eulerian_num(n - 1, m - 1) + (n - 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123776,
      "stdout": "",
      "stderr": "/tmp/tmp5su1effa.d(12): Error: undefined identifier `factorial`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5su1effa.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n;\n\tif (n < m)\n\t\treturn 0;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpw9pg1kmn.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpw9pg1kmn.__unittest_L17_C1() [0x427ad9]\n??:? void tmpw9pg1kmn.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0 || n < m) \n\t\treturn 0;\n\tif (n == 0 && m == 0) \n\t\treturn 1;\n\tif (n == 1 && m == 1) \n\t\treturn 1;\n\tif (m == 0) \n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123776,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprs0b0a5q.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmprs0b0a5q.__unittest_L19_C1() [0x427b13]\n??:? void tmprs0b0a5q.__modtest() [0x427b4c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a986]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb19]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a95d]\n??:? runModuleUnitTests [0x42b8c9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42821c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0) return 0;\n\tif (n == 0 || m == 0) return 1;\n\tif (n == 1) return m + 1;\n\tif (m == 1) return n + 1;\n\treturn (n - m) * eulerian_num(n - 1, m) + (m + 1) * eulerian_num(n - 1, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123776,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7hqeulvy.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmp7hqeulvy.__unittest_L15_C1() [0x427b07]\n??:? void tmp7hqeulvy.__modtest() [0x427b40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpg552g6dr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpg552g6dr.__unittest_L17_C1() [0x427aff]\n??:? void tmpg552g6dr.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0) return 1;\n\tif (n == 1 || m == 1) return n;\n\tif (n < m) return 0;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517671,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5xqz8z1m.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmp5xqz8z1m.__unittest_L14_C1() [0x427ad9]\n??:? void tmp5xqz8z1m.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0 || n < m) return 0;\n\tif (n == 0 || m == 0) return 1;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123776,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpdn4xhz9s.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmpdn4xhz9s.__unittest_L13_C1() [0x427ac9]\n??:? void tmpdn4xhz9s.__modtest() [0x427b28]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0 || n < m)\n\t\treturn 0;\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == m)\n\t\treturn 1;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpplm9jy9f.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpplm9jy9f.__unittest_L17_C1() [0x427add]\n??:? void tmpplm9jy9f.__modtest() [0x427b3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (m == 0 || m == n)\n\t\treturn 1;\n\tif (m == 1 || m == n - 1)\n\t\treturn n;\n\tif (m > n / 2)\n\t\tm = n - m;\n\tfor (long i = 0; i < m; i++)\n\t\tresult += eulerian_num(n - i - 1, m - i - 1);\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123776,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp94vpgwji.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmp94vpgwji.__unittest_L20_C1() [0x427ae5]\n??:? void tmp94vpgwji.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baeb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a97e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa9d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a955]\n??:? runModuleUnitTests [0x42b8c1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428214]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (m == 0)\n\t\tresult = 1;\n\telse if (n == 0)\n\t\tresult = 0;\n\telse if (n == 1)\n\t\tresult = 1;\n\telse if (n == m)\n\t\tresult = 1;\n\telse\n\t\tresult = (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123776,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpthw9as6n.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427de5]\n??:? void tmpthw9as6n.__unittest_L22_C1() [0x427b05]\n??:? void tmpthw9as6n.__modtest() [0x427b64]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a99e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]\n??:? runModuleUnitTests [0x42b8e1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428234]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0) \n\t{\n\t\treturn 0;\n\t}\n\tif (n == 0 && m == 0) \n\t{\n\t\treturn 1;\n\t}\n\tif (n == 0 || m == 0) \n\t{\n\t\treturn 0;\n\t}\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517671,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzhrv_oc6.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpzhrv_oc6.__unittest_L23_C1() [0x427aff]\n??:? void tmpzhrv_oc6.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong res = 0;\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (n == 1)\n\t\treturn 1;\n\tif (m == 1)\n\t\treturn 1;\n\tif (m > n)\n\t\treturn 0;\n\tif (m == n)\n\t\treturn 1;\n\tfor (long i = 0; i < m; i++)\n\t{\n\t\tres += eulerian_num(n - 1, i);\n\t}\n\treturn res;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123776,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp756sjcw6.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmp756sjcw6.__unittest_L28_C1() [0x427aed]\n??:? void tmp756sjcw6.__modtest() [0x427b4c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a986]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb19]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a95d]\n??:? runModuleUnitTests [0x42b8c9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42821c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n;\n\tif (n < m)\n\t\treturn 0;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpw9pg1kmn.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpw9pg1kmn.__unittest_L17_C1() [0x427ad9]\n??:? void tmpw9pg1kmn.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0 || n < m)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + m * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123776,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp22ebaui0.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmp22ebaui0.__unittest_L17_C1() [0x427acd]\n??:? void tmp22ebaui0.__modtest() [0x427b2c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tlong i = 0;\n\tlong j = 0;\n\tlong k = 0;\n\tlong l = 0;\n\tlong m_fact = 1;\n\tlong n_fact = 1;\n\tlong n_minus_m_fact = 1;\n\tlong m_plus_1_fact = 1;\n\t\n\tif (n < m)\n\t{\n\t\treturn 0;\n\t}\n\t\n\tfor (i = 1; i <= m; i++)\n\t{\n\t\tm_fact *= i;\n\t}\n\t\n\tfor (j = 1; j <= n; j++)\n\t{\n\t\tn_fact *= j;\n\t}\n\t\n\tfor (k = 1; k <= n - m; k++)\n\t{\n\t\tn_minus_m_fact *= k;\n\t}\n\t\n\tfor (l = 1; l <= m + 1; l++)\n\t{\n\t\tm_plus_1_fact *= l;\n\t}\n\t\n\tresult = (m_fact * n_fact) / (n_minus_m_fact * m_plus_1_fact);\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123776,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpag6n1y_z.d(52): unittest failure\n----------------\n??:? _d_unittestp [0x427e05]\n??:? void tmpag6n1y_z.__unittest_L48_C1() [0x427b29]\n??:? void tmpag6n1y_z.__modtest() [0x427b88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428254]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0) \n\t{\n\t\treturn 1;\n\t}\n\tif (m == 0) \n\t{\n\t\treturn 0;\n\t}\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpiashm53a.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmpiashm53a.__unittest_L19_C1() [0x427abd]\n??:? void tmpiashm53a.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n < m)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123776,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8av_7zod.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmp8av_7zod.__unittest_L17_C1() [0x427ad1]\n??:? void tmp8av_7zod.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0) \n\t\treturn 0;\n\tif (n == 0 || m == 0) \n\t\treturn 1;\n\tif (n == 1 || m == 1) \n\t\treturn n;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123776,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpje_5httg.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmpje_5httg.__unittest_L17_C1() [0x427af1]\n??:? void tmpje_5httg.__modtest() [0x427b50]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a986]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb19]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a95d]\n??:? runModuleUnitTests [0x42b8c9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42821c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (n == 1) return 1;\n\tif (m == 1) return 1;\n\tif (n == m) return 1;\n\tif (m > n) return 0;\n\treturn (n-m+1) * eulerian_num(n-1, m-1) + (m+1) * eulerian_num(n-1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123776,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfbeixhcd.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427ddd]\n??:? void tmpfbeixhcd.__unittest_L17_C1() [0x427afd]\n??:? void tmpfbeixhcd.__modtest() [0x427b5c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb03]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a996]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb29]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]\n??:? runModuleUnitTests [0x42b8d9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42822c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0) \n\t{\n\t\treturn 0;\n\t}\n\tif (n == 0 && m == 0) \n\t{\n\t\treturn 1;\n\t}\n\tif (m == 0) \n\t{\n\t\treturn 0;\n\t}\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz8k5ft5k.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmpz8k5ft5k.__unittest_L23_C1() [0x427acd]\n??:? void tmpz8k5ft5k.__modtest() [0x427b2c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (m == 0 || n == m)\n\t\treturn 1;\n\tif (m == 1)\n\t\treturn n;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123776,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpec35dbx4.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x427d95]\n??:? void tmpec35dbx4.__unittest_L15_C1() [0x427ab9]\n??:? void tmpec35dbx4.__modtest() [0x427b18]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42babb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a94e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a925]\n??:? runModuleUnitTests [0x42b891]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281e4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong i, j;\n\tlong[][] a = new long[n + 1][m + 1];\n\t\n\ta[0][0] = 1;\n\t\n\tforeach(i; 1 .. n + 1)\n\t{\n\t\tforeach(j; 0 .. m + 1)\n\t\t{\n\t\t\tif(j == 0)\n\t\t\t\ta[i][j] = a[i - 1][j] * (i - 1) / i;\n\t\t\telse\n\t\t\t\ta[i][j] = a[i - 1][j] * (i - 1) / i + a[i - 1][j - 1];\n\t\t}\n\t}\n\t\n\treturn a[n][m];\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123776,
      "stdout": "",
      "stderr": "/tmp/tmpa858jsz6.d(10): Error: variable `n` cannot be read at compile time\n/tmp/tmpa858jsz6.d(14): Error: variable `i` is shadowing variable `tmpa858jsz6.eulerian_num.i`\n/tmp/tmpa858jsz6.d(16): Error: variable `j` is shadowing variable `tmpa858jsz6.eulerian_num.j`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa858jsz6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (n == 0) \n\t{\n\t\treturn 1;\n\t}\n\tif (m == 0) \n\t{\n\t\treturn 0;\n\t}\n\tif (m == 1) \n\t{\n\t\treturn 1;\n\t}\n\tif (n == m) \n\t{\n\t\treturn 1;\n\t}\n\tif (m > n) \n\t{\n\t\treturn 0;\n\t}\n\tresult = eulerian_num(n - 1, m - 1) + (n - m + 1) * eulerian_num(n - 1, m);\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123776,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpsbsl1imd.d(37): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmpsbsl1imd.__unittest_L33_C1() [0x427af5]\n??:? void tmpsbsl1imd.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428224]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0 || n < m)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + m * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123776,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp22ebaui0.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmp22ebaui0.__unittest_L17_C1() [0x427acd]\n??:? void tmp22ebaui0.__modtest() [0x427b2c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (m > n) return 0;\n\tif (m == 0 || m == n) return 1;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + m * eulerian_num(n, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123776,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuqtw3b9p.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x427d95]\n??:? void tmpuqtw3b9p.__unittest_L13_C1() [0x427adf]\n??:? void tmpuqtw3b9p.__modtest() [0x427b18]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42babb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a94e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a925]\n??:? runModuleUnitTests [0x42b891]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281e4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (m == 1)\n\t\treturn 1;\n\tif (m > n)\n\t\treturn 0;\n\tif (m == n)\n\t\treturn 1;\n\tif (m < n)\n\t\treturn eulerian_num(n - 1, m - 1) + (n - m + 1) * eulerian_num(n - 1, m);\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123776,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_a5sigiu.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427ded]\n??:? void tmp_a5sigiu.__unittest_L24_C1() [0x427b11]\n??:? void tmp_a5sigiu.__modtest() [0x427b70]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb13]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9a6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb39]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fac5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a97d]\n??:? runModuleUnitTests [0x42b8e9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42823c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (m > n)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123790,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (m == 1)\n\t\treturn factorial(n);\n\tif (n == m)\n\t\treturn 1;\n\tif (n > m)\n\t\treturn eulerian_num(n - 1, m - 1) + (n - 1) * eulerian_num(n - 1, m);\n\treturn 0;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123776,
      "stdout": "",
      "stderr": "/tmp/tmp6774iqt3.d(13): Error: undefined identifier `factorial`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6774iqt3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (m > n)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123791,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (n == 1) return 1;\n\tif (m == 1) return 1;\n\tif (n < m) return 0;\n\tif (n == m) return 1;\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123776,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1rgqoqzi.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmp1rgqoqzi.__unittest_L17_C1() [0x427af9]\n??:? void tmp1rgqoqzi.__modtest() [0x427b58]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428224]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n;\n\tif (n < m)\n\t\treturn 0;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpw9pg1kmn.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpw9pg1kmn.__unittest_L17_C1() [0x427ad9]\n??:? void tmpw9pg1kmn.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong[long] fact = new long[long];\n\tfact[0] = 1;\n\tforeach(i; 1 .. n + 1)\n\t\tfact[i] = fact[i - 1] * i;\n\t\n\tlong[long] binom = new long[long];\n\tbinom[0] = 1;\n\tforeach(i; 1 .. n + 1)\n\t\tbinom[i] = binom[i - 1] * (n - i + 1) / i;\n\t\n\tlong[long] eulerian = new long[long];\n\teulerian[0] = 1;\n\tforeach(i; 1 .. n + 1)\n\t\teulerian[i] = eulerian[i - 1] * (n - i + 1) / i;\n\t\n\tlong[long] eulerian_sum = new long[long];\n\teulerian_sum[0] = 1;\n\tforeach(i; 1 .. n + 1)\n\t\teulerian_sum[i] = eulerian_sum[i - 1] + eulerian[i];\n\t\n\tlong[long] eulerian_sum_pow = new long[long];\n\teulerian_sum_pow[0] = 1;\n\tforeach(i; 1 .. n + 1)\n\t\teulerian_sum_pow[i] = eulerian_sum_pow[i - 1] * eulerian_sum[i];\n\t\n\tlong[long] eulerian_sum_pow_sum = new long[long];\n\teulerian_sum_pow_sum[0] = 1;\n\tforeach(i; 1 .. n + 1)\n\t\teulerian_sum_pow_sum[i] = eulerian_sum_pow_sum[i - 1] + eulerian_sum_pow[i];\n\t\n\tlong[long] eulerian_sum_pow_sum_pow = new long[long];\n\teulerian_sum_pow_sum_pow[0] = 1;\n\tforeach(i; 1 .. n + 1)\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123776,
      "stdout": "",
      "stderr": "/tmp/tmpg61k4khu.d(9): Error: need size of rightmost array, not type `long`\n/tmp/tmpg61k4khu.d(14): Error: need size of rightmost array, not type `long`\n/tmp/tmpg61k4khu.d(19): Error: need size of rightmost array, not type `long`\n/tmp/tmpg61k4khu.d(24): Error: need size of rightmost array, not type `long`\n/tmp/tmpg61k4khu.d(29): Error: need size of rightmost array, not type `long`\n/tmp/tmpg61k4khu.d(34): Error: need size of rightmost array, not type `long`\n/tmp/tmpg61k4khu.d(39): Error: need size of rightmost array, not type `long`\n/tmp/tmpg61k4khu.d(42): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg61k4khu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (m > n)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkfj2kw1b.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmpkfj2kw1b.__unittest_L17_C1() [0x427ad1]\n??:? void tmpkfj2kw1b.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0) return 0;\n\tif (m == 0) return 1;\n\tif (m > n) return 0;\n\tif (m == n) return 1;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123791,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123776,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkb4k16yt.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpkb4k16yt.__unittest_L17_C1() [0x427ad5]\n??:? void tmpkb4k16yt.__modtest() [0x427b34]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (n == 0 || m == 0) \n\t{\n\t\tresult = 1;\n\t}\n\telse if (n == 1 || m == 1) \n\t{\n\t\tresult = n;\n\t}\n\telse if (n < m) \n\t{\n\t\tresult = 0;\n\t}\n\telse \n\t{\n\t\tresult = (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123776,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7dmxye9o.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427ded]\n??:? void tmp7dmxye9o.__unittest_L28_C1() [0x427b0d]\n??:? void tmp7dmxye9o.__modtest() [0x427b6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb13]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9a6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb39]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fac5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a97d]\n??:? runModuleUnitTests [0x42b8e9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42823c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0) return 0;\n\tif (n == 0 || m == 0) return 1;\n\tif (n == 1 || m == 1) return n;\n\tif (n == m) return factorial(n);\n\tif (n < m) return 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123776,
      "stdout": "",
      "stderr": "/tmp/tmpxc17nibb.d(12): Error: undefined identifier `factorial`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxc17nibb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (n == 1)\n\t\treturn 1;\n\tif (m == 1)\n\t\treturn 1;\n\tif (n < m)\n\t\treturn 0;\n\tif (n == m)\n\t\treturn 1;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123775,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqeuc19mu.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmpqeuc19mu.__unittest_L23_C1() [0x427af1]\n??:? void tmpqeuc19mu.__modtest() [0x427b50]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a986]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb19]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a95d]\n??:? runModuleUnitTests [0x42b8c9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42821c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0 || n < m)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 1 && m == 0)\n\t\treturn 1;\n\tif (n == 1 && m == 1)\n\t\treturn 1;\n\tif (n == m)\n\t\treturn 1;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123776,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp410747u2.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427de5]\n??:? void tmp410747u2.__unittest_L21_C1() [0x427b05]\n??:? void tmp410747u2.__modtest() [0x427b64]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a99e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]\n??:? runModuleUnitTests [0x42b8e1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428234]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (n == 1) return 1;\n\tif (m == 1) return 1;\n\tif (n < m) return 0;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517672,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvq490z8j.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpvq490z8j.__unittest_L16_C1() [0x427ae1]\n??:? void tmpvq490z8j.__modtest() [0x427b40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (n == 1) return 1;\n\tif (m == 1) return 1;\n\tif (m == n) return 1;\n\tif (m > n) return 0;\n\tfor (long i = 0; i <= m; i++)\n\t{\n\t\tresult += pow(-1, i) * eulerian_num(n - 1, m - i);\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123776,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvot7bydx.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427ee5]\n??:? void tmpvot7bydx.__unittest_L22_C1() [0x427b4d]\n??:? void tmpvot7bydx.__modtest() [0x427c64]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa9e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300e0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbbd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa75]\n??:? runModuleUnitTests [0x42b9e1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428334]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0 || n < m) return 0;\n\tif (n == 0 && m == 0) return 1;\n\tif (n == 1 && m == 1) return 1;\n\tif (n == 1 && m == 0) return 1;\n\tif (m == 0) return 1;\n\tif (m == 1) return n;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123776,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpoj60qlx8.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427ded]\n??:? void tmpoj60qlx8.__unittest_L17_C1() [0x427b0d]\n??:? void tmpoj60qlx8.__modtest() [0x427b6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb13]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9a6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb39]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fac5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a97d]\n??:? runModuleUnitTests [0x42b8e9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42823c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n;\n\tif (n < m)\n\t\treturn 0;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpw9pg1kmn.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpw9pg1kmn.__unittest_L17_C1() [0x427ad9]\n??:? void tmpw9pg1kmn.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0 || n < m) \n\t{\n\t\treturn 0;\n\t}\n\tif (n == 0 && m == 0) \n\t{\n\t\treturn 1;\n\t}\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpsmb_urov.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmpsmb_urov.__unittest_L19_C1() [0x427ac9]\n??:? void tmpsmb_urov.__modtest() [0x427b28]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0) return 0;\n\tif (n == 0 && m == 0) return 1;\n\tif (n == 0 || m == 0) return 0;\n\tif (n == 1 || m == 1) return 1;\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123759,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpu37g98uk.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmpu37g98uk.__unittest_L15_C1() [0x427aed]\n??:? void tmpu37g98uk.__modtest() [0x427b4c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a986]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb19]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a95d]\n??:? runModuleUnitTests [0x42b8c9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42821c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0) return 0;\n\tif (n == 0 || m == 0) return 1;\n\tif (n == 1) return m + 1;\n\tif (m == 1) return n + 1;\n\tif (n == m) return 1;\n\t\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123776,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpo7lyix3o.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmpo7lyix3o.__unittest_L17_C1() [0x427b1b]\n??:? void tmpo7lyix3o.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428224]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\t// n >= m\n\tif(n < m)\n\t\treturn 0;\n\t\n\tif(n == m)\n\t\treturn 1;\n\t\n\tif(m == 0)\n\t\treturn 1;\n\t\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123791,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n;\n\tif (n == m)\n\t\treturn factorial(n);\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + m * eulerian_num(n - 1, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123776,
      "stdout": "",
      "stderr": "/tmp/tmpu_9zvp2k.d(14): Error: undefined identifier `factorial`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu_9zvp2k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpg552g6dr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpg552g6dr.__unittest_L17_C1() [0x427aff]\n??:? void tmpg552g6dr.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < m) \n\t{\n\t\treturn 0;\n\t}\n\tif (n == m) \n\t{\n\t\treturn 1;\n\t}\n\tif (m == 0) \n\t{\n\t\treturn 1;\n\t}\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123791,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0) \n\t{\n\t\treturn 0;\n\t}\n\tif (n == 0 && m == 0) \n\t{\n\t\treturn 1;\n\t}\n\tif (n == 0 || m == 0) \n\t{\n\t\treturn 0;\n\t}\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517671,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzhrv_oc6.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpzhrv_oc6.__unittest_L23_C1() [0x427aff]\n??:? void tmpzhrv_oc6.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (m > n) return 0;\n\tif (m == 1) return 1;\n\tif (m == n) return 1;\n\tif (m == n - 1) return n;\n\tif (m == n - 2) return (n * (n - 1)) / 2;\n\tif (m == n - 3) return (n * (n - 1) * (n - 2)) / 6;\n\tif (m == n - 4) return (n * (n - 1) * (n - 2) * (n - 3)) / 24;\n\tif (m == n - 5) return (n * (n - 1) * (n - 2) * (n - 3) * (n - 4)) / 120;\n\tif (m == n - 6) return (n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5)) / 720;\n\tif (m == n - 7) return (n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6)) / 5040;\n\tif (m == n - 8) return (n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7)) / 40320;\n\tif (m == n - 9) return (n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8)) / 362880;\n\tif (m == n - 10) return (n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9)) / 3628800;\n\tif (m == n - 11) return (n * (\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123776,
      "stdout": "",
      "stderr": "/tmp/tmpjmzgt5v5.d(26): Error: expression expected, not `unittest`\n/tmp/tmpjmzgt5v5.d(25): Error: found `{` when expecting `)`\n/tmp/tmpjmzgt5v5.d(25): Error: found `alias` when expecting `)`\n/tmp/tmpjmzgt5v5.d(28): Error: found `candidate` when expecting `;` following `return` statement\n/tmp/tmpjmzgt5v5.d(28): Error: found `=` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjmzgt5v5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (n == 0) \n\t{\n\t\tresult = 1;\n\t}\n\telse if (m == 0) \n\t{\n\t\tresult = 0;\n\t}\n\telse if (n == 1) \n\t{\n\t\tresult = 1;\n\t}\n\telse if (m == 1) \n\t{\n\t\tresult = 1;\n\t}\n\telse if (n < m) \n\t{\n\t\tresult = 0;\n\t}\n\telse \n\t{\n\t\tresult = (m * eulerian_num(n - 1, m) + (n - m) * eulerian_num(n - 1, m - 1));\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123776,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuywkuyh9.d(40): unittest failure\n----------------\n??:? _d_unittestp [0x427df5]\n??:? void tmpuywkuyh9.__unittest_L36_C1() [0x427b15]\n??:? void tmpuywkuyh9.__modtest() [0x427b74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb1b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb41]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42fff0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42facd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a985]\n??:? runModuleUnitTests [0x42b8f1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428244]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0) \n\t\treturn 0;\n\tif (n == 0 || m == 0) \n\t\treturn 1;\n\tif (n < m) \n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123776,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppw6_2qq2.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmppw6_2qq2.__unittest_L17_C1() [0x427ad5]\n??:? void tmppw6_2qq2.__modtest() [0x427b34]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (n == 0 && m == 0) \n\t{\n\t\tresult = 1;\n\t}\n\telse if (n == 0 || m == 0) \n\t{\n\t\tresult = 0;\n\t}\n\telse \n\t{\n\t\tresult = (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123776,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp87o3i1cz.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmp87o3i1cz.__unittest_L24_C1() [0x427b13]\n??:? void tmp87o3i1cz.__modtest() [0x427b4c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a986]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb19]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a95d]\n??:? runModuleUnitTests [0x42b8c9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42821c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (m == 1)\n\t\treturn 1;\n\tif (n == 1)\n\t\treturn 1;\n\tif (m > n)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123776,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpae2t25pr.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmpae2t25pr.__unittest_L21_C1() [0x427aed]\n??:? void tmpae2t25pr.__modtest() [0x427b4c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a986]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb19]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a95d]\n??:? runModuleUnitTests [0x42b8c9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42821c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (m == 0)\n\t\treturn 1;\n\tif (n == 0)\n\t\treturn 0;\n\tif (m > n)\n\t\treturn 0;\n\tif (m == n)\n\t\treturn 1;\n\tif (m == 1)\n\t\treturn 1;\n\tif (m == n - 1)\n\t\treturn n;\n\tif (m == n - 2)\n\t\treturn n * (n - 1) / 2;\n\tif (m == n - 3)\n\t\treturn n * (n - 1) * (n - 2) / 6;\n\tif (m == n - 4)\n\t\treturn n * (n - 1) * (n - 2) * (n - 3) / 24;\n\tif (m == n - 5)\n\t\treturn n * (n - 1) * (n - 2) * (n - 3) * (n - 4) / 120;\n\tif (m == n - 6)\n\t\treturn n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) / 720;\n\tif (m == n - 7)\n\t\treturn n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) / 5040;\n\tif (m == n - 8)\n\t\treturn n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) / 40320;\n\tif (m == n - 9)\n\t\treturn n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) / 362880;\n\tif (m == n - 10)\n\t\treturn n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123776,
      "stdout": "",
      "stderr": "/tmp/tmpvk5a378f.d(40): Error: expression expected, not `unittest`\n/tmp/tmpvk5a378f.d(39): Error: found `{` when expecting `)`\n/tmp/tmpvk5a378f.d(42): Error: found `alias` when expecting `;` following `return` statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvk5a378f.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif(n == 0 && m == 0)\n\t\treturn 1;\n\tif(n == 0 || m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123776,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpev8azqfx.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmpev8azqfx.__unittest_L15_C1() [0x427af7]\n??:? void tmpev8azqfx.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0 || n < m)\n\t\treturn 0;\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == m)\n\t\treturn 1;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpplm9jy9f.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpplm9jy9f.__unittest_L17_C1() [0x427add]\n??:? void tmpplm9jy9f.__modtest() [0x427b3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0) return 0;\n\tif (n == 0 || m == 0) return 1;\n\tif (n == 1 || m == 1) return n;\n\tif (n == m) return 1;\n\tif (n < m) return 0;\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123776,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5ignttzp.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x427df5]\n??:? void tmp5ignttzp.__unittest_L16_C1() [0x427b15]\n??:? void tmp5ignttzp.__modtest() [0x427b74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb1b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb41]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42fff0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42facd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a985]\n??:? runModuleUnitTests [0x42b8f1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428244]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0) return 0;\n\tif (n == 0 && m == 0) return 1;\n\tif (n == 0 || m == 0) return 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517672,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzu8wmtjd.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpzu8wmtjd.__unittest_L14_C1() [0x427aff]\n??:? void tmpzu8wmtjd.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (m == 0)\n\t\treturn 1;\n\tif (m == 1)\n\t\treturn n;\n\tif (n == m)\n\t\treturn 1;\n\tif (n < m)\n\t\treturn 0;\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123777,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpobxhk4_9.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmpobxhk4_9.__unittest_L19_C1() [0x427acd]\n??:? void tmpobxhk4_9.__modtest() [0x427b2c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpg552g6dr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpg552g6dr.__unittest_L17_C1() [0x427aff]\n??:? void tmpg552g6dr.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (m > n)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517671,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpln0q5q3m.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmpln0q5q3m.__unittest_L17_C1() [0x427acd]\n??:? void tmpln0q5q3m.__modtest() [0x427b2c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (m > n)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123758,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkfj2kw1b.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmpkfj2kw1b.__unittest_L17_C1() [0x427ad1]\n??:? void tmpkfj2kw1b.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\tif (n == m)\n\t\treturn 1;\n\tif (n > m)\n\t\treturn 0;\n\tif (n < m)\n\t\treturn factorial(m) / (factorial(n) * factorial(m - n)) * eulerian_num(n - 1, m - 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123776,
      "stdout": "",
      "stderr": "/tmp/tmpbpb_gbvs.d(19): Error: undefined identifier `factorial`\n/tmp/tmpbpb_gbvs.d(19): Error: undefined identifier `factorial`\n/tmp/tmpbpb_gbvs.d(19): Error: undefined identifier `factorial`\n/tmp/tmpbpb_gbvs.d(7): Error: function `tmpbpb_gbvs.eulerian_num` no `return exp;` or `assert(0);` at end of function\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbpb_gbvs.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0) return 0;\n\tif (n == 0 || m == 0) return 1;\n\tif (n == 1 || m == 1) return n;\n\tif (n == m) return factorial(n);\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + m * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "/tmp/tmpbq0v9jg_.d(12): Error: undefined identifier `factorial`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbq0v9jg_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\tif (n == m)\n\t\treturn 1;\n\tif (m > n)\n\t\treturn 0;\n\tfor (long i = 0; i <= n - m; i++)\n\t\tresult += eulerian_num(n - i, m - 1);\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123777,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuq1c49pp.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpuq1c49pp.__unittest_L22_C1() [0x427add]\n??:? void tmpuq1c49pp.__modtest() [0x427b3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tlong result = 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\tif (n == m)\n\t\treturn 1;\n\tif (m > n)\n\t\treturn 0;\n\tif (m == 1)\n\t\treturn factorial(n - 1);\n\tresult += (n - m) * eulerian_num(n - 1, m - 1);\n\tresult += (m + 1) * eulerian_num(n - 1, m);\n\treturn result;\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1666123776,
      "stdout": "",
      "stderr": "/tmp/tmpm07yzorb.d(19): Error: undefined identifier `factorial`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm07yzorb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpg552g6dr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpg552g6dr.__unittest_L17_C1() [0x427aff]\n??:? void tmpg552g6dr.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (m > n) return 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5owgjujr.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmp5owgjujr.__unittest_L14_C1() [0x427acd]\n??:? void tmp5owgjujr.__modtest() [0x427b2c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n{\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (m == 1) return 1;\n\tif (m > n) return 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}\nunittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
      "timestamp": 1665517656,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpipugzzj0.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpipugzzj0.__unittest_L15_C1() [0x427ae9]\n??:? void tmpipugzzj0.__modtest() [0x427b48]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baeb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a97e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa9d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a955]\n??:? runModuleUnitTests [0x42b8c1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428214]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
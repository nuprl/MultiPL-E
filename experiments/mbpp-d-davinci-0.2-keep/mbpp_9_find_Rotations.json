{
  "name": "mbpp_9_find_Rotations",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the minimum number of rotations (greater than 0) required to get the same string.\n\t\n*/\nlong find_Rotations(string str) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_9_find_Rotations.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = find_Rotations;\n\n    assert(candidate(\"aaaa\") == 1L);\n    assert(candidate(\"ab\") == 2L);\n    assert(candidate(\"abc\") == 3L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tlong len = str.length;\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\twhile (i < len && j < len && k < len) \n\t{\n\t\tif (str[(i + k) % len] == str[(j + k) % len]) \n\t\t{\n\t\t\tk++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (str[(i + k) % len] > str[(j + k) % len]) \n\t\t\t{\n\t\t\t\ti = i + k + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tj = j + k + 1;\n\t\t\t}\n\t\t\tif (i == j) \n\t\t\t{\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tk = 0;\n\t\t}\n\t}\n\treturn min(i, j);\n}",
    "{\n\tlong len = str.length;\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\twhile (i < len && j < len && k < len) \n\t{\n\t\tif (str[(i + k) % len] == str[(j + k) % len]) \n\t\t{\n\t\t\tk++;\n\t\t}\n\t\telse if (str[(i + k) % len] > str[(j + k) % len]) \n\t\t{\n\t\t\ti = i + k + 1;\n\t\t\tif (i <= j) \n\t\t\t{\n\t\t\t\ti = j + 1;\n\t\t\t}\n\t\t\tk = 0;\n\t\t}\n\t\telse if (str[(i + k) % len] < str[(j + k) % len]) \n\t\t{\n\t\t\tj = j + k + 1;\n\t\t\tif (j <= i) \n\t\t\t{\n\t\t\t\tj = i + 1;\n\t\t\t}\n\t\t\tk = 0;\n\t\t}\n\t}\n\treturn min(i, j);\n}",
    "{\n\tlong n = str.length;\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\twhile (i < n && j < n && k < n) \n\t{\n\t\tif (str[(i + k) % n] == str[(j + k) % n]) \n\t\t{\n\t\t\tk++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (str[(i + k) % n] > str[(j + k) % n]) \n\t\t\t{\n\t\t\t\ti = i + k + 1;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tj = j + k + 1;\n\t\t\t}\n\t\t\tif (i == j) \n\t\t\t{\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tk = 0;\n\t\t}\n\t}\n\treturn min(i, j);\n}",
    "{\n\tlong n = str.length;\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\twhile (i < n && j < n && k < n) \n\t{\n\t\tif (str[(i + k) % n] == str[(j + k) % n]) \n\t\t{\n\t\t\tk++;\n\t\t}\n\t\telse if (str[(i + k) % n] > str[(j + k) % n]) \n\t\t{\n\t\t\ti = i + k + 1;\n\t\t\tif (i <= j) \n\t\t\t{\n\t\t\t\ti = j + 1;\n\t\t\t}\n\t\t\tk = 0;\n\t\t}\n\t\telse if (str[(i + k) % n] < str[(j + k) % n]) \n\t\t{\n\t\t\tj = j + k + 1;\n\t\t\tif (j <= i) \n\t\t\t{\n\t\t\t\tj = i + 1;\n\t\t\t}\n\t\t\tk = 0;\n\t\t}\n\t}\n\treturn min(i, j);\n}",
    "{\n\tlong n = str.length;\n\tstring temp = str + str;\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\twhile (i < n && j < n) \n\t{\n\t\tk = 0;\n\t\twhile (k < n && temp[i + k] == temp[j + k]) \n\t\t{\n\t\t\tk++;\n\t\t}\n\t\tif (k == n) \n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\tif (temp[i + k] > temp[j + k]) \n\t\t{\n\t\t\ti = i + k + 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tj = j + k + 1;\n\t\t}\n\t\tif (i == j) \n\t\t{\n\t\t\tj++;\n\t\t}\n\t}\n\treturn min(i, j);\n}",
    "{\n\tlong len = str.length;\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\twhile(i < len && j < len && k < len) \n\t{\n\t\tif(str[i + k] == str[j + k]) \n\t\t{\n\t\t\tk++;\n\t\t\tif(k == len) \n\t\t\t{\n\t\t\t\treturn i;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif(str[i + k] > str[j + k]) \n\t\t\t{\n\t\t\t\ti = i + k + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tj = j + k + 1;\n\t\t\t}\n\t\t\tif(i == j) \n\t\t\t{\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tk = 0;\n\t\t}\n\t}\n\treturn i;\n}",
    "{\n\tlong n = str.length;\n\tstring temp = str ~ str;\n\tlong i = 1, j = 0;\n\tlong lps[n];\n\tlps[0] = 0;\n\twhile (i < 2 * n) \n\t{\n\t\tif (temp[i] == temp[j]) \n\t\t{\n\t\t\tj++;\n\t\t\tlps[i] = j;\n\t\t\ti++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (j != 0) \n\t\t\t{\n\t\t\t\tj = lps[j - 1];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tlps[i] = 0;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\tlong res = lps[n - 1];\n\treturn (n - res);\n}",
    "{\n\tlong n = str.length;\n\tlong count = 0;\n\tlong min = n;\n\tlong index = 0;\n\tstring temp = str;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\ttemp = temp[n - 1 .. n] ~ temp[0 .. n - 2];\n\t\tif (temp < str) \n\t\t{\n\t\t\tif (count < min) \n\t\t\t{\n\t\t\t\tmin = count;\n\t\t\t\tindex = i + 1;\n\t\t\t}\n\t\t}\n\t\tcount++;\n\t}\n\treturn index;\n}",
    "{\n\tlong n = str.length;\n\tstring concat = str ~ str;\n\tlong i = 1;\n\tlong j = 0;\n\tlong lps[n];\n\tlps[0] = 0;\n\twhile (i < 2 * n) \n\t{\n\t\tif (concat[i] == concat[j]) \n\t\t{\n\t\t\tj++;\n\t\t\tlps[i] = j;\n\t\t\ti++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (j != 0) \n\t\t\t{\n\t\t\t\tj = lps[j - 1];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tlps[i] = 0;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\tlong res = lps[n - 1];\n\treturn (n - res);\n}",
    "{\n\tlong len = str.length;\n\tstring temp = str ~ str;\n\tlong min_rotations = len;\n\tfor (long i = 1; i < len; i++) \n\t{\n\t\tif (temp[i..i + len - 1] < str) \n\t\t{\n\t\t\tmin_rotations = i;\n\t\t}\n\t}\n\treturn min_rotations;\n}",
    "{\n\tlong n = str.length;\n\tstring temp = str ~ str;\n\tlong i = 1, j = 0;\n\tlong lps[n];\n\tlps[0] = 0;\n\twhile (i < 2 * n) \n\t{\n\t\tif (temp[i] == temp[j]) \n\t\t{\n\t\t\tj++;\n\t\t\tlps[i] = j;\n\t\t\ti++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (j != 0) \n\t\t\t{\n\t\t\t\tj = lps[j - 1];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tlps[i] = 0;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\tlong res = lps[n - 1];\n\treturn (n - res);\n}",
    "{\n\tlong n = str.length;\n\tstring temp = str ~ str;\n\tlong min = n;\n\tfor (long i = 1; i < n; i++) \n\t{\n\t\tif (temp[i..i + n - 1] < str) \n\t\t{\n\t\t\tmin = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn min;\n}",
    "{\n\tlong n = str.length;\n\tstring temp = str ~ str;\n\tlong i = 1, j = 0;\n\tlong lps[n];\n\tlps[0] = 0;\n\twhile (i < 2 * n) \n\t{\n\t\tif (temp[i] == temp[j]) \n\t\t{\n\t\t\tj++;\n\t\t\tlps[i] = j;\n\t\t\ti++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (j != 0) \n\t\t\t{\n\t\t\t\tj = lps[j - 1];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tlps[i] = 0;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\tlong res = (n - lps[n - 1]);\n\tif (res == n) \n\t{\n\t\treturn 0;\n\t}\n\treturn res;\n}",
    "{\n\tlong n = str.length;\n\tlong count = 0;\n\tlong i = 0;\n\tlong j = 1;\n\twhile (count < n) \n\t{\n\t\tif (str[i] == str[j]) \n\t\t{\n\t\t\tcount++;\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ti = 0;\n\t\t\tcount = 0;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn i;\n}",
    "{\n\tlong n = str.length;\n\tstring concat = str ~ str;\n\tlong i = 1, j = 0;\n\tlong lps[n];\n\tlps[0] = 0;\n\twhile(i < n) \n\t{\n\t\tif(concat[i] == concat[j]) \n\t\t{\n\t\t\tj++;\n\t\t\tlps[i] = j;\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif(j != 0) \n\t\t\t{\n\t\t\t\tj = lps[j - 1];\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tlps[i] = 0;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\treturn n - lps[n - 1];\n}",
    "{\n\tlong n = str.length;\n\tstring temp = str ~ str;\n\tlong i = 1, j = 0;\n\twhile (i < n && j < n) \n\t{\n\t\tlong t = j + (i + j) / 2;\n\t\tif (temp[t] < temp[i + j]) \n\t\t{\n\t\t\tj = t;\n\t\t\ti = 1;\n\t\t} \n\t\telse if (temp[t] > temp[i + j]) \n\t\t{\n\t\t\ti = i + j + 1;\n\t\t\tj = 0;\n\t\t} \n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn min(i, j);\n}",
    "{\n\tlong n = str.length;\n\tstring temp = str ~ str;\n\tlong i = 1;\n\tlong j = 0;\n\tlong k = 0;\n\twhile (i < n) \n\t{\n\t\tj = i;\n\t\tk = 0;\n\t\twhile (j < i + n) \n\t\t{\n\t\t\tif (str[k] != temp[j]) \n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tj++;\n\t\t\tk++;\n\t\t}\n\t\tif (j == i + n) \n\t\t{\n\t\t\treturn i;\n\t\t}\n\t\ti++;\n\t}\n\treturn 0;\n}",
    "{\n\tlong len = str.length;\n\tstring temp = str ~ str;\n\tlong i = 1;\n\tlong j = 0;\n\tlong k = 0;\n\tlong[] lps = new long[len];\n\twhile (i < 2 * len) \n\t{\n\t\tif (temp[i] == temp[j]) \n\t\t{\n\t\t\tj++;\n\t\t\tlps[i] = j;\n\t\t\ti++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (j != 0) \n\t\t\t{\n\t\t\t\tj = lps[j - 1];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tlps[i] = 0;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\treturn len - lps[2 * len - 1];\n}",
    "{\n\tlong n = str.length;\n\tstring temp = str ~ str;\n\tlong i = 1, j = 0;\n\tlong lps[n];\n\tlps[0] = 0;\n\twhile (i < 2 * n) \n\t{\n\t\tif (temp[i] == temp[j]) \n\t\t{\n\t\t\tj += 1;\n\t\t\tlps[i] = j;\n\t\t\ti += 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (j != 0) \n\t\t\t{\n\t\t\t\tj = lps[j - 1];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tlps[i] = 0;\n\t\t\t\ti += 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn n - lps[n - 1];\n}",
    "{\n\tlong len = str.length;\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\twhile (i < len && j < len && k < len) \n\t{\n\t\tif (str[(i + k) % len] == str[(j + k) % len])\n\t\t\tk++;\n\t\telse \n\t\t{\n\t\t\tif (str[(i + k) % len] > str[(j + k) % len])\n\t\t\t\ti = i + k + 1;\n\t\t\telse\n\t\t\t\tj = j + k + 1;\n\t\t\tif (i == j)\n\t\t\t\tj++;\n\t\t\tk = 0;\n\t\t}\n\t}\n\treturn min(i, j);\n}",
    "{\n\tlong len = str.length;\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\twhile (i < len && j < len && k < len) \n\t{\n\t\tif (str[(i + k) % len] == str[(j + k) % len]) \n\t\t{\n\t\t\tk += 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (str[(i + k) % len] > str[(j + k) % len]) \n\t\t\t{\n\t\t\t\ti = i + k + 1;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tj = j + k + 1;\n\t\t\t}\n\t\t\tif (i == j) \n\t\t\t{\n\t\t\t\tj += 1;\n\t\t\t}\n\t\t\tk = 0;\n\t\t}\n\t}\n\treturn min(i, j);\n}",
    "{\n\tlong n = str.length;\n\tlong count = 0;\n\tlong min = n;\n\tlong index = 0;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tif (str[i] == '1') \n\t\t{\n\t\t\tcount = 0;\n\t\t\tfor (long j = i; j < n; j++) \n\t\t\t{\n\t\t\t\tif (str[j] == '1') \n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (long j = 0; j < i; j++) \n\t\t\t{\n\t\t\t\tif (str[j] == '1') \n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (count < min) \n\t\t\t{\n\t\t\t\tmin = count;\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t}\n\treturn index;\n}",
    "{\n\tlong len = str.length;\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\twhile(i < len && j < len && k < len) \n\t{\n\t\tif(str[(i + k) % len] == str[(j + k) % len]) \n\t\t{\n\t\t\tk++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif(str[(i + k) % len] > str[(j + k) % len]) \n\t\t\t{\n\t\t\t\ti = i + k + 1;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tj = j + k + 1;\n\t\t\t}\n\t\t\tif(i == j) \n\t\t\t{\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tk = 0;\n\t\t}\n\t}\n\treturn min(i, j);\n}",
    "{\n\tlong len = str.length;\n\tlong min_rotations = len;\n\tstring temp = str;\n\tfor (long i = 0; i < len; i++) \n\t{\n\t\ttemp = temp[len - 1 .. len - 1] ~ temp[0 .. len - 2];\n\t\tif (temp < str) \n\t\t{\n\t\t\tmin_rotations = i + 1;\n\t\t}\n\t}\n\treturn min_rotations;\n}",
    "{\n\tlong n = str.length;\n\tstring temp = str ~ str;\n\tlong[] lps = new long[2 * n];\n\tlps[0] = 0;\n\tlong len = 0;\n\tlong i = 1;\n\twhile (i < 2 * n) \n\t{\n\t\tif (temp[i] == temp[len]) \n\t\t{\n\t\t\tlen++;\n\t\t\tlps[i] = len;\n\t\t\ti++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (len != 0) \n\t\t\t{\n\t\t\t\tlen = lps[len - 1];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tlps[i] = 0;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\tlong res = lps[n - 1];\n\tif (res > 0 && n % (n - res) == 0) \n\t{\n\t\treturn n - res;\n\t}\n\treturn n;\n}",
    "{\n\tlong n = str.length;\n\tlong count = 0;\n\tstring concat = str ~ str;\n\tforeach (i; 0 .. n) \n\t{\n\t\tif (concat[i .. i + n - 1] == str)\n\t\t\treturn i;\n\t}\n\treturn -1;\n}",
    "{\n\tlong n = str.length;\n\tstring temp = str ~ str;\n\tlong[] lps = new long[2*n];\n\tlps[0] = 0;\n\tlong len = 0;\n\tlong i = 1;\n\twhile(i < 2*n)\n\t{\n\t\tif(temp[i] == temp[len])\n\t\t{\n\t\t\tlen++;\n\t\t\tlps[i] = len;\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(len != 0)\n\t\t\t{\n\t\t\t\tlen = lps[len-1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tlps[i] = 0;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\treturn n - lps[2*n-1];\n}",
    "{\n\tstring str1 = str ~ str;\n\tlong n = str.length;\n\tlong i = 1;\n\tlong j = 0;\n\tlong[] lps = new long[n];\n\tlps[0] = 0;\n\twhile (i < n) \n\t{\n\t\tif (str1[i] == str1[j]) \n\t\t{\n\t\t\tj++;\n\t\t\tlps[i] = j;\n\t\t\ti++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (j != 0) \n\t\t\t{\n\t\t\t\tj = lps[j - 1];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tlps[i] = 0;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\treturn n - lps[n - 1];\n}",
    "{\n\tlong n = str.length;\n\tstring concat = str ~ str;\n\tlong min_length = n;\n\tlong i = 0;\n\twhile (i < n) \n\t{\n\t\tlong j = i;\n\t\tlong k = 0;\n\t\twhile (j < 2 * n && concat[j] == str[k]) \n\t\t{\n\t\t\tj++;\n\t\t\tk++;\n\t\t}\n\t\tif (k < min_length) \n\t\t{\n\t\t\tmin_length = k;\n\t\t}\n\t\ti++;\n\t}\n\treturn min_length;\n}",
    "{\n\tlong n = str.length;\n\tlong count = 0;\n\tlong i = 0;\n\tlong j = 1;\n\twhile (count < n) \n\t{\n\t\tif (str[i] == str[j]) \n\t\t{\n\t\t\tcount++;\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (j == n - 1) \n\t\t\t{\n\t\t\t\ti++;\n\t\t\t\tj = i + 1;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tj++;\n\t\t\t}\n\t\t}\n\t}\n\treturn i;\n}",
    "{\n\tlong n = str.length;\n\tstring concat = str + str;\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\twhile (i < n && j < n) \n\t{\n\t\tk = 0;\n\t\twhile (k < n && concat[i + k] == concat[j + k]) \n\t\t{\n\t\t\tk++;\n\t\t}\n\t\tif (k == n) \n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\tif (concat[i + k] > concat[j + k]) \n\t\t{\n\t\t\ti = i + k + 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tj = j + k + 1;\n\t\t}\n\t\tif (i == j) \n\t\t{\n\t\t\tj++;\n\t\t}\n\t}\n\treturn min(i, j);\n}",
    "{\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\tlong n = str.length;\n\twhile (i < n && j < n && k < n) \n\t{\n\t\tif (str[(i + k) % n] == str[(j + k) % n]) \n\t\t{\n\t\t\tk++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (str[(i + k) % n] > str[(j + k) % n]) \n\t\t\t{\n\t\t\t\ti = i + k + 1;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tj = j + k + 1;\n\t\t\t}\n\t\t\tif (i == j) \n\t\t\t{\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tk = 0;\n\t\t}\n\t}\n\treturn min(i, j);\n}",
    "{\n\tlong len = str.length;\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\twhile (i < len && j < len && k < len) \n\t{\n\t\tif (str[(i + k) % len] == str[(j + k) % len]) \n\t\t{\n\t\t\tk++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (str[(i + k) % len] > str[(j + k) % len]) \n\t\t\t{\n\t\t\t\ti = i + k + 1;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tj = j + k + 1;\n\t\t\t}\n\t\t\tif (i == j) \n\t\t\t{\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tk = 0;\n\t\t}\n\t}\n\treturn min(i, j);\n}",
    "{\n\tlong n = str.length;\n\tlong count = 0;\n\tlong min = n;\n\tlong index = 0;\n\tlong i = 0;\n\tlong j = 0;\n\tlong k = 0;\n\tlong temp = 0;\n\tlong arr[n];\n\t\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tarr[i] = str[i];\n\t}\n\t\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tj = i;\n\t\tk = 0;\n\t\tcount = 0;\n\t\twhile (k < n)\n\t\t{\n\t\t\tif (arr[j] != str[k])\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\tj = (j + 1) % n;\n\t\t\tk++;\n\t\t}\n\t\tif (count < min)\n\t\t{\n\t\t\tmin = count;\n\t\t\tindex = i;\n\t\t}\n\t}\n\treturn index;\n}",
    "{\n\tlong n = str.length;\n\tlong count = 0;\n\tlong min = n;\n\tlong index = 0;\n\tlong i = 0;\n\tlong j = 0;\n\tlong k = 0;\n\t\n\twhile(i < n)\n\t{\n\t\tj = 0;\n\t\tk = i;\n\t\tcount = 0;\n\t\twhile(j < n)\n\t\t{\n\t\t\tif(str[k] != str[j])\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\tj++;\n\t\t\tk++;\n\t\t\tif(k == n)\n\t\t\t{\n\t\t\t\tk = 0;\n\t\t\t}\n\t\t}\n\t\tif(count < min)\n\t\t{\n\t\t\tmin = count;\n\t\t\tindex = i;\n\t\t}\n\t\ti++;\n\t}\n\treturn index;\n}",
    "{\n\tlong n = str.length;\n\tstring temp = str ~ str;\n\tlong min_index = 0;\n\tlong min_length = n;\n\tlong i = 1;\n\twhile (i < n) \n\t{\n\t\tlong length = 0;\n\t\twhile (temp[i + length] == temp[min_index + length]) \n\t\t{\n\t\t\tlength++;\n\t\t\tif (min_index + length == n) \n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (length < min_length) \n\t\t{\n\t\t\tmin_index = i;\n\t\t\tmin_length = length;\n\t\t}\n\t\ti++;\n\t}\n\treturn min_index;\n}",
    "{\n\tstring str1 = str ~ str;\n\tlong min = long.max;\n\tfor (long i = 0; i < str.length; i++) \n\t{\n\t\tlong count = 0;\n\t\tfor (long j = 0; j < str.length; j++) \n\t\t{\n\t\t\tif (str[j] != str1[i + j]) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tif (count < min) \n\t\t{\n\t\t\tmin = count;\n\t\t}\n\t}\n\treturn min;\n}",
    "{\n\tlong len = str.length;\n\tstring temp = str ~ str;\n\tlong min_rotations = len;\n\tfor (long i = 0; i < len; i++) \n\t{\n\t\tif (temp[i..i+len-1] < str) \n\t\t{\n\t\t\tmin_rotations = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn min_rotations;\n}",
    "{\n\tlong min_rotations = 0;\n\tlong len = str.length;\n\tlong i = 0;\n\tlong j = 0;\n\tlong k = 0;\n\tlong min_index = 0;\n\tlong min_value = str[0];\n\t\n\tfor (i = 0; i < len; i++)\n\t{\n\t\tif (str[i] < min_value)\n\t\t{\n\t\t\tmin_value = str[i];\n\t\t\tmin_index = i;\n\t\t}\n\t}\n\t\n\tif (min_index == 0)\n\t{\n\t\tmin_rotations = 0;\n\t}\n\telse\n\t{\n\t\tmin_rotations = len - min_index;\n\t}\n\t\n\treturn min_rotations;\n}",
    "{\n\tlong n = str.length;\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\twhile (i < n && j < n && k < n) \n\t{\n\t\tif (str[(i + k) % n] == str[(j + k) % n]) \n\t\t{\n\t\t\tk++;\n\t\t} \n\t\telse if (str[(i + k) % n] > str[(j + k) % n]) \n\t\t{\n\t\t\ti = i + k + 1;\n\t\t\tif (i <= j) \n\t\t\t{\n\t\t\t\ti = j + 1;\n\t\t\t}\n\t\t\tk = 0;\n\t\t} \n\t\telse if (str[(i + k) % n] < str[(j + k) % n]) \n\t\t{\n\t\t\tj = j + k + 1;\n\t\t\tif (j <= i) \n\t\t\t{\n\t\t\t\tj = i + 1;\n\t\t\t}\n\t\t\tk = 0;\n\t\t}\n\t}\n\treturn min(i, j);\n}",
    "{\n\tlong n = str.length;\n\tlong min_rotations = 0;\n\tlong min_index = 0;\n\tlong min_value = str[0];\n\t\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tif (str[i] < min_value) \n\t\t{\n\t\t\tmin_value = str[i];\n\t\t\tmin_index = i;\n\t\t}\n\t}\n\t\n\tmin_rotations = min_index;\n\t\n\tif (min_rotations > 0) \n\t{\n\t\tmin_rotations = n - min_rotations;\n\t}\n\t\n\treturn min_rotations;\n}",
    "{\n\tlong n = str.length;\n\tlong count = 0;\n\tlong min = n;\n\tlong index = 0;\n\tlong i = 0;\n\tlong j = 0;\n\tlong k = 0;\n\tlong l = 0;\n\tlong m = 0;\n\tlong p = 0;\n\tlong q = 0;\n\tlong r = 0;\n\tlong s = 0;\n\tlong t = 0;\n\tlong u = 0;\n\tlong v = 0;\n\tlong w = 0;\n\tlong x = 0;\n\tlong y = 0;\n\tlong z = 0;\n\tlong a = 0;\n\tlong b = 0;\n\tlong c = 0;\n\tlong d = 0;\n\tlong e = 0;\n\tlong f = 0;\n\tlong g = 0;\n\tlong h = 0;\n\tlong ii = 0;\n\tlong jj = 0;\n\tlong kk = 0;\n\tlong ll = 0;\n\tlong mm = 0;\n\tlong pp = 0;\n\tlong qq = 0;\n\tlong rr = 0;\n\tlong ss = 0;\n\tlong tt = 0;\n\tlong uu = 0;\n\tlong vv = 0;\n\tlong ww = 0;\n\tlong xx = 0;\n\tlong yy = 0;\n\tlong zz = 0;\n\tlong aa = 0;\n\tlong bb = 0;\n\tlong cc = 0;\n\tlong dd = 0;\n\tlong ee = 0;\n\tlong ff = 0;\n\tlong gg = 0;\n\tlong hh = 0;\n\tlong iii = 0;\n\tlong jjj = 0;\n\tlong kkk = 0;\n\tlong lll = 0;\n\tlong mmm = 0;\n\tlong ppp = 0;\n\tlong qqq = 0;\n\tlong rrr = 0;\n\tlong sss = 0;\n\tlong ttt = 0;\n\tlong uuu = 0;\n\tlong vvv = 0;\n\tlong www = 0;\n\tlong xxx = 0;\n\tlong yyy = 0;\n\tlong zzz = 0;\n\tlong",
    "{\n\tlong len = str.length;\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\twhile(i < len && j < len && k < len) \n\t{\n\t\tif(str[(i + k) % len] == str[(j + k) % len]) \n\t\t{\n\t\t\tk++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif(str[(i + k) % len] > str[(j + k) % len]) \n\t\t\t{\n\t\t\t\ti = i + k + 1;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tj = j + k + 1;\n\t\t\t}\n\t\t\tif(i == j) \n\t\t\t{\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tk = 0;\n\t\t}\n\t}\n\treturn min(i, j);\n}",
    "{\n\tlong len = str.length;\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\twhile (i < len && j < len && k < len) \n\t{\n\t\tif (str[(i + k) % len] == str[(j + k) % len]) \n\t\t{\n\t\t\tk++;\n\t\t}\n\t\telse if (str[(i + k) % len] > str[(j + k) % len]) \n\t\t{\n\t\t\ti = i + k + 1;\n\t\t\tif (i <= j) \n\t\t\t{\n\t\t\t\ti = j + 1;\n\t\t\t}\n\t\t\tk = 0;\n\t\t}\n\t\telse if (str[(i + k) % len] < str[(j + k) % len]) \n\t\t{\n\t\t\tj = j + k + 1;\n\t\t\tif (j <= i) \n\t\t\t{\n\t\t\t\tj = i + 1;\n\t\t\t}\n\t\t\tk = 0;\n\t\t}\n\t}\n\treturn min(i, j);\n}",
    "{\n\tlong n = str.length;\n\tstring temp = str ~ str;\n\tlong[] lps = new long[2 * n];\n\tlps[0] = 0;\n\tlong len = 0;\n\tlong i = 1;\n\twhile (i < 2 * n) \n\t{\n\t\tif (temp[i] == temp[len]) \n\t\t{\n\t\t\tlen++;\n\t\t\tlps[i] = len;\n\t\t\ti++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (len != 0) \n\t\t\t{\n\t\t\t\tlen = lps[len - 1];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tlps[i] = 0;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\treturn (n - lps[n - 1]);\n}",
    "{\n\tlong len = str.length;\n\tstring temp = str ~ str;\n\tlong min_index = 0;\n\tlong min_length = len;\n\tlong i = 0;\n\twhile (i < len) \n\t{\n\t\tlong j = i + 1;\n\t\tlong end = j + len - 1;\n\t\twhile (j < end) \n\t\t{\n\t\t\tif (temp[j] < temp[min_index]) \n\t\t\t{\n\t\t\t\tmin_index = j;\n\t\t\t}\n\t\t\tj++;\n\t\t}\n\t\tif (min_index == i) \n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\tlong start_index = min_index;\n\t\twhile (start_index < end) \n\t\t{\n\t\t\tswap(temp[start_index], temp[start_index + 1]);\n\t\t\tstart_index++;\n\t\t}\n\t\ti++;\n\t}\n\treturn min_index;\n}",
    "{\n\tlong n = str.length;\n\tstring concat = str ~ str;\n\tlong i = 1;\n\tlong j = 0;\n\tlong[] lps = new long[n];\n\tlps[0] = 0;\n\twhile (i < n) \n\t{\n\t\tif (concat[i] == concat[j]) \n\t\t{\n\t\t\tj++;\n\t\t\tlps[i] = j;\n\t\t\ti++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (j != 0) \n\t\t\t{\n\t\t\t\tj = lps[j - 1];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tlps[i] = 0;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\treturn n - lps[n - 1];\n}",
    "{\n\tlong n = str.length;\n\tstring temp = str ~ str;\n\tlong i = 1, j = 0;\n\twhile(i < n && j < n) \n\t{\n\t\tlong k = 0;\n\t\twhile(k < n && temp[i + k] == temp[j + k]) \n\t\t{\n\t\t\tk++;\n\t\t}\n\t\tif(k == n) \n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\tif(temp[i + k] > temp[j + k]) \n\t\t{\n\t\t\ti = i + k + 1;\n\t\t\tif(i == j) \n\t\t\t{\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tj = j + k + 1;\n\t\t\tif(i == j) \n\t\t\t{\n\t\t\t\tj++;\n\t\t\t}\n\t\t}\n\t}\n\treturn min(i, j);\n}",
    "{\n\tlong len = str.length;\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\twhile (i < len && j < len && k < len) \n\t{\n\t\tif (str[(i + k) % len] == str[(j + k) % len]) \n\t\t{\n\t\t\tk++;\n\t\t} \n\t\telse if (str[(i + k) % len] > str[(j + k) % len]) \n\t\t{\n\t\t\ti = i + k + 1;\n\t\t\tif (i <= j) \n\t\t\t{\n\t\t\t\ti = j + 1;\n\t\t\t}\n\t\t\tk = 0;\n\t\t} \n\t\telse if (str[(i + k) % len] < str[(j + k) % len]) \n\t\t{\n\t\t\tj = j + k + 1;\n\t\t\tif (j <= i) \n\t\t\t{\n\t\t\t\tj = i + 1;\n\t\t\t}\n\t\t\tk = 0;\n\t\t}\n\t}\n\treturn min(i, j);\n}",
    "{\n\tlong n = str.length;\n\tlong count = 0;\n\tlong min = n;\n\tlong index = 0;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tif (str[i] == '1') \n\t\t{\n\t\t\tcount = 0;\n\t\t\tfor (long j = i; j < n; j++) \n\t\t\t{\n\t\t\t\tif (str[j] == '1') \n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (long j = 0; j < i; j++) \n\t\t\t{\n\t\t\t\tif (str[j] == '1') \n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (count < min) \n\t\t\t{\n\t\t\t\tmin = count;\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t}\n\treturn index;\n}",
    "{\n\tlong n = str.length;\n\tlong count = 0;\n\tlong min = n;\n\tlong index = 0;\n\tlong i = 0;\n\tlong j = 0;\n\tlong k = 0;\n\tlong temp = 0;\n\tlong temp2 = 0;\n\tlong temp3 = 0;\n\tlong temp4 = 0;\n\tlong temp5 = 0;\n\tlong temp6 = 0;\n\tlong temp7 = 0;\n\tlong temp8 = 0;\n\tlong temp9 = 0;\n\tlong temp10 = 0;\n\tlong temp11 = 0;\n\tlong temp12 = 0;\n\tlong temp13 = 0;\n\tlong temp14 = 0;\n\tlong temp15 = 0;\n\tlong temp16 = 0;\n\tlong temp17 = 0;\n\tlong temp18 = 0;\n\tlong temp19 = 0;\n\tlong temp20 = 0;\n\tlong temp21 = 0;\n\tlong temp22 = 0;\n\tlong temp23 = 0;\n\tlong temp24 = 0;\n\tlong temp25 = 0;\n\tlong temp26 = 0;\n\tlong temp27 = 0;\n\tlong temp28 = 0;\n\tlong temp29 = 0;\n\tlong temp30 = 0;\n\tlong temp31 = 0;\n\tlong temp32 = 0;\n\tlong temp33 = 0;\n\tlong temp34 = 0;\n\tlong temp35 = 0;\n\tlong temp36 = 0;\n\tlong temp37 = 0;\n\tlong temp38 = 0;\n\tlong temp39 = 0;\n\tlong temp40 = 0;\n\tlong temp41 = 0;\n\tlong temp42 = 0;\n\tlong temp43 = 0;\n\tlong temp44 = 0;\n\tlong temp45 = 0;\n\tlong temp46 = 0;\n\tlong temp47 = 0;\n\tlong temp48 = 0;\n\tlong temp49 = 0;\n\tlong temp50 = 0;\n\tlong temp51 = 0;\n\tlong temp52 = 0;\n\tlong temp53 = 0;\n\tlong temp54 = 0;\n\tlong temp55 = 0;\n\tlong temp56 = 0;\n\tlong temp57 = 0;\n\tlong temp",
    "{\n\tlong len = str.length;\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\twhile(i < len && j < len && k < len) \n\t{\n\t\tif(str[(i + k) % len] == str[(j + k) % len]) \n\t\t{\n\t\t\tk++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif(str[(i + k) % len] > str[(j + k) % len]) \n\t\t\t{\n\t\t\t\ti = i + k + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tj = j + k + 1;\n\t\t\t}\n\t\t\tif(i == j) \n\t\t\t{\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tk = 0;\n\t\t}\n\t}\n\treturn min(i, j);\n}",
    "{\n\tlong n = str.length;\n\tstring temp = str ~ str;\n\tlong[] lps = new long[2 * n];\n\tlps[0] = 0;\n\tlong len = 0;\n\tlong i = 1;\n\twhile (i < 2 * n) \n\t{\n\t\tif (temp[i] == temp[len]) \n\t\t{\n\t\t\tlen++;\n\t\t\tlps[i] = len;\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (len != 0) \n\t\t\t{\n\t\t\t\tlen = lps[len - 1];\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tlps[i] = 0;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\tlong res = lps[n - 1];\n\treturn (n - res);\n}",
    "{\n\tlong len = str.length;\n\tlong min_rotations = 0;\n\tlong min_rotations_index = 0;\n\tlong min_rotations_value = str[0];\n\t\n\tfor (long i = 0; i < len; i++) \n\t{\n\t\tif (str[i] < min_rotations_value) \n\t\t{\n\t\t\tmin_rotations_value = str[i];\n\t\t\tmin_rotations_index = i;\n\t\t}\n\t}\n\t\n\tmin_rotations = min_rotations_index;\n\t\n\treturn min_rotations;\n}",
    "{\n\tlong n = str.length;\n\tstring concat = str ~ str;\n\tlong i = 1;\n\tlong j = 0;\n\tlong k = 0;\n\tlong[] lps = new long[n];\n\twhile (i < 2 * n) \n\t{\n\t\tif (concat[i] == concat[j]) \n\t\t{\n\t\t\tj++;\n\t\t\tlps[i] = j;\n\t\t\ti++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (j != 0) \n\t\t\t{\n\t\t\t\tj = lps[j - 1];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tlps[i] = 0;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\tk = lps[n - 1];\n\treturn (n - k) % n;\n}",
    "{\n\tlong len = str.length;\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\twhile (i < len && j < len && k < len) \n\t{\n\t\tif (str[(i + k) % len] == str[(j + k) % len]) \n\t\t{\n\t\t\tk++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (str[(i + k) % len] > str[(j + k) % len]) \n\t\t\t{\n\t\t\t\ti = i + k + 1;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tj = j + k + 1;\n\t\t\t}\n\t\t\tif (i == j) \n\t\t\t{\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tk = 0;\n\t\t}\n\t}\n\treturn min(i, j);\n}",
    "{\n\tlong n = str.length;\n\tstring temp = str ~ str;\n\tlong i = 1, j = 0;\n\tlong lps[n];\n\tlps[0] = 0;\n\twhile (i < 2 * n) \n\t{\n\t\tif (temp[i] == temp[j]) \n\t\t{\n\t\t\tj++;\n\t\t\tlps[i] = j;\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (j != 0) \n\t\t\t{\n\t\t\t\tj = lps[j - 1];\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tlps[i] = 0;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\treturn (n - lps[n - 1]);\n}",
    "{\n\tlong len = str.length;\n\tstring temp = str ~ str;\n\tlong min_rotations = len;\n\tfor (long i = 0; i < len; i++) \n\t{\n\t\tstring temp2 = temp[i..$];\n\t\tif (temp2.length > len) \n\t\t{\n\t\t\ttemp2 = temp2[0..len-1];\n\t\t}\n\t\tif (temp2 < str) \n\t\t{\n\t\t\tmin_rotations = min(min_rotations, len - temp2.length);\n\t\t}\n\t}\n\treturn min_rotations;\n}",
    "{\n\tlong n = str.length;\n\tlong count = 0;\n\tlong min = n;\n\tlong index = 0;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tif (str[i] == '1') \n\t\t{\n\t\t\tcount = 0;\n\t\t\tfor (long j = i; j < n; j++) \n\t\t\t{\n\t\t\t\tif (str[j] == '1') \n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (long j = 0; j < i; j++) \n\t\t\t{\n\t\t\t\tif (str[j] == '1') \n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (count < min) \n\t\t\t{\n\t\t\t\tmin = count;\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t}\n\treturn index;\n}",
    "{\n\tlong n = str.length;\n\tlong count = 0;\n\tlong min = n;\n\tlong index = 0;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tif (str[i] == '1') \n\t\t{\n\t\t\tcount = 0;\n\t\t\tfor (long j = i; j < n; j++) \n\t\t\t{\n\t\t\t\tif (str[j] == '1') \n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (long j = 0; j < i; j++) \n\t\t\t{\n\t\t\t\tif (str[j] == '1') \n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (count < min) \n\t\t\t{\n\t\t\t\tmin = count;\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t}\n\treturn index;\n}",
    "{\n\tlong len = str.length;\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\twhile (i < len && j < len && k < len) \n\t{\n\t\tif (str[i + k] == str[j + k]) \n\t\t{\n\t\t\tk++;\n\t\t\tif (j + k == len) \n\t\t\t{\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\telse if (str[i + k] > str[j + k]) \n\t\t{\n\t\t\tj = j + k + 1;\n\t\t\tif (j == i) \n\t\t\t{\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tk = 0;\n\t\t}\n\t\telse if (str[i + k] < str[j + k]) \n\t\t{\n\t\t\ti = max(i + k + 1, j);\n\t\t\tj = i + 1;\n\t\t\tk = 0;\n\t\t}\n\t}\n\treturn i;\n}",
    "{\n\tlong len = str.length;\n\tstring temp = str ~ str;\n\tlong min_len = len;\n\tforeach(i; 0 .. len)\n\t{\n\t\tif(temp[i .. i + len - 1] < str)\n\t\t{\n\t\t\tmin_len = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn min_len;\n}",
    "{\n\tlong min_rotations = 0;\n\tlong len = str.length;\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\twhile (i < len && j < len && k < len) \n\t{\n\t\tif (str[(i + k) % len] == str[(j + k) % len]) \n\t\t{\n\t\t\tk++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (str[(i + k) % len] > str[(j + k) % len]) \n\t\t\t{\n\t\t\t\ti = i + k + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tj = j + k + 1;\n\t\t\t}\n\t\t\tif (i == j) \n\t\t\t{\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tk = 0;\n\t\t}\n\t}\n\tmin_rotations = min(i, j);\n\treturn min_rotations;\n}",
    "{\n\tlong min_rotations = 0;\n\tlong len = str.length;\n\tlong i = 0;\n\tlong j = 0;\n\tlong k = 0;\n\tlong min_index = 0;\n\tlong min_value = 0;\n\tlong min_rotations = 0;\n\tlong[] arr = new long[len];\n\tfor (i = 0; i < len; i++) \n\t{\n\t\tarr[i] = str[i];\n\t}\n\tfor (i = 0; i < len; i++) \n\t{\n\t\tmin_value = arr[i];\n\t\tmin_index = i;\n\t\tfor (j = i + 1; j < len; j++) \n\t\t{\n\t\t\tif (arr[j] < min_value) \n\t\t\t{\n\t\t\t\tmin_value = arr[j];\n\t\t\t\tmin_index = j;\n\t\t\t}\n\t\t}\n\t\tif (min_index != i) \n\t\t{\n\t\t\tfor (k = min_index; k > i; k--) \n\t\t\t{\n\t\t\t\tarr[k] = arr[k - 1];\n\t\t\t}\n\t\t\tarr[i] = min_value;\n\t\t\tmin_rotations += (min_index - i);\n\t\t}\n\t}\n\treturn min_rotations;\n}",
    "{\n\tlong n = str.length;\n\tlong count = 0;\n\tlong min = n;\n\tlong index = 0;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tif (str[i] == '1') \n\t\t{\n\t\t\tcount = 0;\n\t\t\tfor (long j = i; j < n; j++) \n\t\t\t{\n\t\t\t\tif (str[j] == '1') \n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (long j = 0; j < i; j++) \n\t\t\t{\n\t\t\t\tif (str[j] == '1') \n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (count < min) \n\t\t\t{\n\t\t\t\tmin = count;\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t}\n\treturn index;\n}",
    "{\n\tlong len = str.length;\n\tstring temp = str ~ str;\n\tlong min_rot = len;\n\tfor (long i = 0; i < len; i++) \n\t{\n\t\tstring sub = temp[i..i+len-1];\n\t\tif (sub < str) \n\t\t{\n\t\t\tmin_rot = min(min_rot, i);\n\t\t}\n\t}\n\treturn min_rot;\n}",
    "{\n\tlong n = str.length;\n\tlong count = 0;\n\tlong min = n;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tif (str[i] == 'a') \n\t\t{\n\t\t\tcount = 0;\n\t\t\tfor (long j = 0; j < n; j++) \n\t\t\t{\n\t\t\t\tif (str[j] == 'a') \n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (count == n) \n\t\t\t{\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tmin = min(min, n - count);\n\t\t\t}\n\t\t}\n\t\tstr = str[n - 1] + str.substr(0, n - 1);\n\t}\n\treturn min;\n}",
    "{\n\tlong n = str.length;\n\tlong count = 0;\n\tlong min = n;\n\tlong index = 0;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tif (str[i] == '1') \n\t\t{\n\t\t\tcount = 0;\n\t\t\tfor (long j = i; j < n; j++) \n\t\t\t{\n\t\t\t\tif (str[j] == '1') \n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (long j = 0; j < i; j++) \n\t\t\t{\n\t\t\t\tif (str[j] == '1') \n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (count < min) \n\t\t\t{\n\t\t\t\tmin = count;\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t}\n\treturn index;\n}",
    "{\n\tlong n = str.length;\n\tstring temp = str ~ str;\n\tlong i = 1;\n\tlong j = 0;\n\tlong lps[n];\n\tlps[0] = 0;\n\twhile(i < 2 * n)\n\t{\n\t\tif(temp[i] == temp[j])\n\t\t{\n\t\t\tlps[i] = j + 1;\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(j != 0)\n\t\t\t{\n\t\t\t\tj = lps[j - 1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tlps[i] = 0;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\treturn n - lps[2 * n - 1];\n}",
    "{\n\tlong n = str.length;\n\tstring concat = str ~ str;\n\tlong i = 1, j = 0;\n\tlong lps[n];\n\tlps[0] = 0;\n\twhile (i < n) \n\t{\n\t\tif (concat[i] == concat[j]) \n\t\t{\n\t\t\tj++;\n\t\t\tlps[i] = j;\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (j != 0) \n\t\t\t{\n\t\t\t\tj = lps[j - 1];\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tlps[i] = 0;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\treturn (n - lps[n - 1]);\n}",
    "{\n\tlong len = str.length;\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\twhile (i < len && j < len && k < len) \n\t{\n\t\tif (str[i + k] == str[j + k]) \n\t\t{\n\t\t\tk += 1;\n\t\t\tif (j + k == len) \n\t\t\t{\n\t\t\t\treturn i;\n\t\t\t}\n\t\t} \n\t\telse if (str[i + k] > str[j + k]) \n\t\t{\n\t\t\tj = j + k + 1;\n\t\t\tif (j <= i) \n\t\t\t{\n\t\t\t\tj = i + 1;\n\t\t\t}\n\t\t\tk = 0;\n\t\t} \n\t\telse if (str[i + k] < str[j + k]) \n\t\t{\n\t\t\ti = max(i + k + 1, j);\n\t\t\tj = i + 1;\n\t\t\tk = 0;\n\t\t}\n\t}\n\treturn i;\n}",
    "{\n\tlong len = str.length;\n\tstring temp = str ~ str;\n\tlong i = 1;\n\tlong j = 0;\n\tlong k = 0;\n\tlong[] lps = new long[len];\n\tlps[0] = 0;\n\twhile(i < 2 * len) \n\t{\n\t\tif(temp[i] == temp[j]) \n\t\t{\n\t\t\tj++;\n\t\t\tlps[i] = j;\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif(j != 0) \n\t\t\t{\n\t\t\t\tj = lps[j - 1];\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tlps[i] = 0;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\treturn len - lps[2 * len - 1];\n}",
    "{\n\tlong n = str.length;\n\tstring temp = str ~ str;\n\tlong[] lps = new long[n];\n\tlong i = 1, len = 0;\n\tlps[0] = 0;\n\twhile (i < n) \n\t{\n\t\tif (temp[i] == temp[len]) \n\t\t{\n\t\t\tlen++;\n\t\t\tlps[i] = len;\n\t\t\ti++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (len != 0) \n\t\t\t{\n\t\t\t\tlen = lps[len - 1];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tlps[i] = 0;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\treturn n - lps[n - 1];\n}",
    "{\n\tlong n = str.length;\n\tlong count = 0;\n\tlong min = n;\n\tlong index = 0;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tif (str[i] == '1') \n\t\t{\n\t\t\tcount = 0;\n\t\t\tfor (long j = i; j < n; j++) \n\t\t\t{\n\t\t\t\tif (str[j] == '1') \n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (long j = 0; j < i; j++) \n\t\t\t{\n\t\t\t\tif (str[j] == '1') \n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (count < min) \n\t\t\t{\n\t\t\t\tmin = count;\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t}\n\treturn index;\n}",
    "{\n\tlong min_rotations = 0;\n\tlong n = str.length;\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\twhile(i < n && j < n && k < n)\n\t{\n\t\tif(str[i+k] == str[j+k])\n\t\t{\n\t\t\tk++;\n\t\t\tif(k == n)\n\t\t\t{\n\t\t\t\treturn min_rotations;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(str[i+k] > str[j+k])\n\t\t\t{\n\t\t\t\ti = i + k + 1;\n\t\t\t\tif(i <= j)\n\t\t\t\t{\n\t\t\t\t\ti = j + 1;\n\t\t\t\t}\n\t\t\t\tk = 0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tj = j + k + 1;\n\t\t\t\tif(j <= i)\n\t\t\t\t{\n\t\t\t\t\tj = i + 1;\n\t\t\t\t}\n\t\t\t\tk = 0;\n\t\t\t}\n\t\t}\n\t}\n\tmin_rotations = min(i,j);\n\treturn min_rotations;\n}",
    "{\n\tlong n = str.length;\n\tstring concat = str ~ str;\n\tlong min_length = n;\n\tlong index = 0;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tstring temp = concat[i .. i + n - 1];\n\t\tif (temp < str) \n\t\t{\n\t\t\tif (temp.length < min_length) \n\t\t\t{\n\t\t\t\tindex = i;\n\t\t\t\tmin_length = temp.length;\n\t\t\t}\n\t\t}\n\t}\n\treturn index;\n}",
    "{\n\tlong n = str.length;\n\tstring concat = str ~ str;\n\tlong i = 1;\n\tlong j = 0;\n\tlong[] lps = new long[n];\n\tlps[0] = 0;\n\twhile (i < n) \n\t{\n\t\tif (concat[i] == concat[j]) \n\t\t{\n\t\t\tj++;\n\t\t\tlps[i] = j;\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (j != 0) \n\t\t\t{\n\t\t\t\tj = lps[j - 1];\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tlps[i] = 0;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\treturn n - lps[n - 1];\n}",
    "{\n\tlong len = str.length;\n\tlong min_rotations = len;\n\tstring temp = str;\n\tfor (long i = 0; i < len; i++) \n\t{\n\t\ttemp = temp[len - 1 .. len - 1] ~ temp[0 .. len - 2];\n\t\tif (temp < str) \n\t\t{\n\t\t\tmin_rotations = min(min_rotations, i + 1);\n\t\t}\n\t}\n\treturn min_rotations;\n}",
    "{\n\tlong n = str.length;\n\tlong count = 0;\n\tlong min = n;\n\tlong index = 0;\n\tlong i = 0;\n\tlong j = 0;\n\tlong k = 0;\n\tlong temp = 0;\n\tlong temp2 = 0;\n\tlong temp3 = 0;\n\tlong temp4 = 0;\n\tlong temp5 = 0;\n\tlong temp6 = 0;\n\tlong temp7 = 0;\n\tlong temp8 = 0;\n\tlong temp9 = 0;\n\tlong temp10 = 0;\n\tlong temp11 = 0;\n\tlong temp12 = 0;\n\tlong temp13 = 0;\n\tlong temp14 = 0;\n\tlong temp15 = 0;\n\tlong temp16 = 0;\n\tlong temp17 = 0;\n\tlong temp18 = 0;\n\tlong temp19 = 0;\n\tlong temp20 = 0;\n\tlong temp21 = 0;\n\tlong temp22 = 0;\n\tlong temp23 = 0;\n\tlong temp24 = 0;\n\tlong temp25 = 0;\n\tlong temp26 = 0;\n\tlong temp27 = 0;\n\tlong temp28 = 0;\n\tlong temp29 = 0;\n\tlong temp30 = 0;\n\tlong temp31 = 0;\n\tlong temp32 = 0;\n\tlong temp33 = 0;\n\tlong temp34 = 0;\n\tlong temp35 = 0;\n\tlong temp36 = 0;\n\tlong temp37 = 0;\n\tlong temp38 = 0;\n\tlong temp39 = 0;\n\tlong temp40 = 0;\n\tlong temp41 = 0;\n\tlong temp42 = 0;\n\tlong temp43 = 0;\n\tlong temp44 = 0;\n\tlong temp45 = 0;\n\tlong temp46 = 0;\n\tlong temp47 = 0;\n\tlong temp48 = 0;\n\tlong temp49 = 0;\n\tlong temp50 = 0;\n\tlong temp51 = 0;\n\tlong temp52 = 0;\n\tlong temp53 = 0;\n\tlong temp54 = 0;\n\tlong temp55 = 0;\n\tlong temp56 = 0;\n\tlong temp57 = 0;\n\tlong temp",
    "{\n\tlong n = str.length;\n\tstring concat = str ~ str;\n\tlong i = 1;\n\tlong j = 0;\n\tlong lps[n];\n\tlps[0] = 0;\n\twhile (i < 2 * n) \n\t{\n\t\tif (concat[i] == concat[j]) \n\t\t{\n\t\t\tj += 1;\n\t\t\tlps[i] = j;\n\t\t\ti += 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (j != 0) \n\t\t\t{\n\t\t\t\tj = lps[j - 1];\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tlps[i] = 0;\n\t\t\t\ti += 1;\n\t\t\t}\n\t\t}\n\t}\n\tlong res = lps[n - 1];\n\tif (res > 0 and res < n) \n\t{\n\t\treturn n - res;\n\t}\n\treturn 0;\n}",
    "{\n\tlong len = str.length;\n\tstring temp = str ~ str;\n\tlong min_index = 0;\n\tlong min_len = len;\n\tlong i = 1;\n\twhile (i < len) \n\t{\n\t\tlong len_front = len - i;\n\t\tlong len_back = i;\n\t\tif (temp[i] < temp[i - 1] && len_front <= len_back) \n\t\t{\n\t\t\tif (len_front < min_len) \n\t\t\t{\n\t\t\t\tmin_index = i;\n\t\t\t\tmin_len = len_front;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\telse if (temp[i] < temp[i - 1] && len_front > len_back) \n\t\t{\n\t\t\tif (len_back < min_len) \n\t\t\t{\n\t\t\t\tmin_index = i;\n\t\t\t\tmin_len = len_back;\n\t\t\t}\n\t\t}\n\t\ti++;\n\t}\n\treturn min_index;\n}",
    "{\n\tauto len = str.length;\n\tauto min = str;\n\tfor (int i = 0; i < len; i++) \n\t{\n\t\tmin = min(min, str[i..$] ~ str[0..i]);\n\t}\n\treturn len - min.length;\n}",
    "{\n\tlong n = str.length;\n\tstring temp = str ~ str;\n\tlong[] lps = new long[2 * n];\n\tlps[0] = 0;\n\tlong len = 0;\n\tlong i = 1;\n\twhile (i < 2 * n) \n\t{\n\t\tif (temp[i] == temp[len]) \n\t\t{\n\t\t\tlen++;\n\t\t\tlps[i] = len;\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (len != 0) \n\t\t\t{\n\t\t\t\tlen = lps[len - 1];\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tlps[i] = 0;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\tlong res = lps[n - 1];\n\tif (res > n / 2) \n\t{\n\t\tres = n - res;\n\t}\n\treturn res;\n}",
    "{\n\tlong n = str.length;\n\tlong count = 0;\n\tlong min = n;\n\tlong index = 0;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tif (str[i] == '1') \n\t\t{\n\t\t\tcount = 0;\n\t\t\tfor (long j = i; j < n; j++) \n\t\t\t{\n\t\t\t\tif (str[j] == '1') \n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (long j = 0; j < i; j++) \n\t\t\t{\n\t\t\t\tif (str[j] == '1') \n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (count < min) \n\t\t\t{\n\t\t\t\tmin = count;\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t}\n\treturn index;\n}",
    "{\n\tlong n = str.length;\n\tlong count = 0;\n\tlong min = n;\n\tlong i = 0;\n\tlong index = 0;\n\twhile (i < n) \n\t{\n\t\tif (str[i] == 'a') \n\t\t{\n\t\t\tindex = i;\n\t\t\tcount = 0;\n\t\t\twhile (str[i] == 'a') \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tif (count < min) \n\t\t\t{\n\t\t\t\tmin = count;\n\t\t\t}\n\t\t}\n\t\ti++;\n\t}\n\treturn (n - index - min);\n}",
    "{\n\tlong n = str.length;\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\twhile (i < n && j < n && k < n) \n\t{\n\t\tif (str[(i + k) % n] == str[(j + k) % n]) \n\t\t{\n\t\t\tk++;\n\t\t}\n\t\telse if (str[(i + k) % n] > str[(j + k) % n]) \n\t\t{\n\t\t\ti = i + k + 1;\n\t\t\tif (i <= j) \n\t\t\t{\n\t\t\t\ti = j + 1;\n\t\t\t}\n\t\t\tk = 0;\n\t\t}\n\t\telse if (str[(i + k) % n] < str[(j + k) % n]) \n\t\t{\n\t\t\tj = j + k + 1;\n\t\t\tif (j <= i) \n\t\t\t{\n\t\t\t\tj = i + 1;\n\t\t\t}\n\t\t\tk = 0;\n\t\t}\n\t}\n\treturn min(i, j);\n}",
    "{\n\tlong len = str.length;\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\twhile (i < len && j < len && k < len) \n\t{\n\t\tif (str[(i + k) % len] == str[(j + k) % len]) \n\t\t{\n\t\t\tk++;\n\t\t} \n\t\telse if (str[(i + k) % len] > str[(j + k) % len]) \n\t\t{\n\t\t\ti = i + k + 1;\n\t\t\tif (i <= j) \n\t\t\t{\n\t\t\t\ti = j + 1;\n\t\t\t}\n\t\t\tk = 0;\n\t\t} \n\t\telse if (str[(i + k) % len] < str[(j + k) % len]) \n\t\t{\n\t\t\tj = j + k + 1;\n\t\t\tif (j <= i) \n\t\t\t{\n\t\t\t\tj = i + 1;\n\t\t\t}\n\t\t\tk = 0;\n\t\t}\n\t}\n\treturn min(i, j);\n}",
    "{\n\tstring temp = str + str;\n\tlong n = str.length;\n\tlong min_rotations = n;\n\tlong i = 0;\n\twhile (i < n) \n\t{\n\t\tif (temp[i..i+n] == str) \n\t\t{\n\t\t\tmin_rotations = min(min_rotations, i);\n\t\t}\n\t\ti++;\n\t}\n\treturn min_rotations;\n}",
    "{\n\tlong n = str.length;\n\tstring temp = str ~ str;\n\tlong i = 1, j = 0;\n\twhile (i < n && j < n) \n\t{\n\t\tlong t = j + (i + j) / 2;\n\t\tif (temp[t] < temp[i + j])\n\t\t{\n\t\t\tj = t;\n\t\t\ti = 1;\n\t\t}\n\t\telse if (temp[t] > temp[i + j])\n\t\t{\n\t\t\ti = i + j + 1;\n\t\t\tj = 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn min(i, j);\n}",
    "{\n\tstring str1 = str + str;\n\tlong n = str.length;\n\tlong res = 0;\n\tlong i = 1;\n\tlong j = 0;\n\twhile (i < n) \n\t{\n\t\tif (str1[i + j] == str1[res + j]) \n\t\t{\n\t\t\tj++;\n\t\t\tif (j == n) \n\t\t\t{\n\t\t\t\treturn i;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (j == 0) \n\t\t\t{\n\t\t\t\ti++;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\ti += j - lps[j - 1];\n\t\t\t\tj = lps[j - 1];\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}",
    "{\n\tlong n = str.length;\n\tstring concat = str ~ str;\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\twhile (i < n && j < n) \n\t{\n\t\tk = 0;\n\t\twhile (k < n && str[(i + k) % n] == concat[j + k]) \n\t\t{\n\t\t\tk++;\n\t\t}\n\t\tif (k == n) \n\t\t{\n\t\t\treturn j;\n\t\t}\n\t\tif (str[(i + k) % n] > concat[j + k]) \n\t\t{\n\t\t\ti = i + k + 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tj = j + k + 1;\n\t\t}\n\t\tif (i == j) \n\t\t{\n\t\t\tj++;\n\t\t}\n\t}\n\treturn j;\n}",
    "{\n\tlong n = str.length;\n\tstring temp = str ~ str;\n\tlong i = 1, j = 0;\n\twhile (i < n && j < n) \n\t{\n\t\tlong k = 0;\n\t\twhile (k < n && temp[i + k] == temp[j + k]) \n\t\t{\n\t\t\tk++;\n\t\t}\n\t\tif (k == n) \n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\tif (temp[i + k] > temp[j + k]) \n\t\t{\n\t\t\ti = i + k + 1;\n\t\t\tif (i <= j) \n\t\t\t{\n\t\t\t\ti = j + 1;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tj = j + k + 1;\n\t\t\tif (j <= i) \n\t\t\t{\n\t\t\t\tj = i + 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn min(i, j);\n}",
    "{ \n\tlong n = str.length; \n\tstring temp = str + str; \n\tlong i = 0, j = 1, k = 0; \n\twhile (i + k < n && j + k < n) \n\t{ \n\t\tif (temp[i + k] == temp[j + k]) \n\t\t\tk++; \n\t\telse if (temp[i + k] > temp[j + k]) \n\t\t{ \n\t\t\ti = i + k + 1; \n\t\t\tif (i <= j) \n\t\t\t\ti = j + 1; \n\t\t\tk = 0; \n\t\t} \n\t\telse if (temp[i + k] < temp[j + k]) \n\t\t{ \n\t\t\tj = j + k + 1; \n\t\t\tif (j <= i) \n\t\t\t\tj = i + 1; \n\t\t\tk = 0; \n\t\t} \n\t} \n\treturn min(i, j); \n} ",
    "{\n\tlong len = str.length;\n\tstring temp = str ~ str;\n\tlong min_rot = len;\n\tforeach(i; 0 .. len) \n\t{\n\t\tif(temp[i .. i + len - 1] == str) \n\t\t{\n\t\t\tmin_rot = min(min_rot, i);\n\t\t}\n\t}\n\treturn min_rot;\n}",
    "{\n\tlong len = str.length;\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\twhile (i < len && j < len && k < len) \n\t{\n\t\tif (str[(i + k) % len] == str[(j + k) % len]) \n\t\t{\n\t\t\tk++;\n\t\t} \n\t\telse if (str[(i + k) % len] > str[(j + k) % len]) \n\t\t{\n\t\t\ti = i + k + 1;\n\t\t\tif (i <= j) \n\t\t\t{\n\t\t\t\ti = j + 1;\n\t\t\t}\n\t\t\tk = 0;\n\t\t} \n\t\telse if (str[(i + k) % len] < str[(j + k) % len]) \n\t\t{\n\t\t\tj = j + k + 1;\n\t\t\tif (j <= i) \n\t\t\t{\n\t\t\t\tj = i + 1;\n\t\t\t}\n\t\t\tk = 0;\n\t\t}\n\t}\n\treturn min(i, j);\n}",
    "{\n\tlong n = str.length;\n\tstring concat = str ~ str;\n\tlong i = 1, j = 0;\n\tlong lps[n];\n\tlps[0] = 0;\n\twhile (i < n) \n\t{\n\t\tif (concat[i] == concat[j]) \n\t\t{\n\t\t\tj++;\n\t\t\tlps[i] = j;\n\t\t\ti++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (j != 0) \n\t\t\t{\n\t\t\t\tj = lps[j - 1];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tlps[i] = 0;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\treturn (n - lps[n - 1]);\n}",
    "{\n\tlong n = str.length;\n\tlong count = 0;\n\tlong min = n;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tcount = 0;\n\t\tfor (long j = 0; j < n; j++) \n\t\t{\n\t\t\tif (str[(i + j) % n] != str[j]) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tif (count < min) \n\t\t{\n\t\t\tmin = count;\n\t\t}\n\t}\n\treturn min;\n}",
    "{\n\tlong n = str.length;\n\tlong min_rotations = n;\n\tlong i = 0;\n\tlong j = 1;\n\twhile (j < n) \n\t{\n\t\tif (str[i] == str[j]) \n\t\t{\n\t\t\tj++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ti = 0;\n\t\t\tj++;\n\t\t}\n\t\tif (i == n - 1) \n\t\t{\n\t\t\tmin_rotations = min(min_rotations, j - i - 1);\n\t\t\ti = 0;\n\t\t}\n\t}\n\treturn min_rotations;\n}",
    "{\n\tlong n = str.length;\n\tstring temp = str ~ str;\n\tlong[] lps = new long[2 * n];\n\tlong len = 0;\n\tlong i = 1;\n\twhile (i < 2 * n) \n\t{\n\t\tif (temp[i] == temp[len]) \n\t\t{\n\t\t\tlen++;\n\t\t\tlps[i] = len;\n\t\t\ti++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (len != 0) \n\t\t\t{\n\t\t\t\tlen = lps[len - 1];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tlps[i] = 0;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\tlong res = lps[2 * n - 1];\n\treturn (n - res) % n;\n}",
    "{\n\tstring temp = str ~ str;\n\tlong n = str.length;\n\tlong[] lps = new long[n];\n\tlps[0] = 0;\n\tlong len = 0;\n\tlong i = 1;\n\twhile (i < n) \n\t{\n\t\tif (str[i] == str[len]) \n\t\t{\n\t\t\tlen++;\n\t\t\tlps[i] = len;\n\t\t\ti++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (len != 0) \n\t\t\t{\n\t\t\t\tlen = lps[len - 1];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tlps[i] = 0;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\treturn n - lps[n - 1];\n}",
    "{\n\tlong n = str.length;\n\tstring concat = str ~ str;\n\tlong i = 1, j = 0;\n\tlong lps[n];\n\tlps[0] = 0;\n\twhile (i < n) \n\t{\n\t\tif (concat[i] == concat[j]) \n\t\t{\n\t\t\tj++;\n\t\t\tlps[i] = j;\n\t\t\ti++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (j != 0) \n\t\t\t{\n\t\t\t\tj = lps[j - 1];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tlps[i] = 0;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\treturn n - lps[n - 1];\n}",
    "{\n\tlong len = str.length;\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\twhile (i < len && j < len && k < len) \n\t{\n\t\tif (str[(i + k) % len] == str[(j + k) % len]) \n\t\t{\n\t\t\tk++;\n\t\t}\n\t\telse if (str[(i + k) % len] > str[(j + k) % len]) \n\t\t{\n\t\t\ti = i + k + 1;\n\t\t\tif (i <= j) \n\t\t\t{\n\t\t\t\ti = j + 1;\n\t\t\t}\n\t\t\tk = 0;\n\t\t}\n\t\telse if (str[(i + k) % len] < str[(j + k) % len]) \n\t\t{\n\t\t\tj = j + k + 1;\n\t\t\tif (j <= i) \n\t\t\t{\n\t\t\t\tj = i + 1;\n\t\t\t}\n\t\t\tk = 0;\n\t\t}\n\t}\n\treturn min(i, j);\n}",
    "{\n\tlong n = str.length;\n\tlong count = 0;\n\tlong min = n;\n\tlong index = 0;\n\tlong i = 0;\n\tlong j = 0;\n\tlong k = 0;\n\tlong temp = 0;\n\tlong min_index = 0;\n\tlong min_count = 0;\n\tlong min_temp = 0;\n\tlong min_j = 0;\n\tlong min_k = 0;\n\tlong min_i = 0;\n\tlong min_index = 0;\n\tlong min_count = 0;\n\tlong min_temp = 0;\n\tlong min_j = 0;\n\tlong min_k = 0;\n\tlong min_i = 0;\n\tlong min_index = 0;\n\tlong min_count = 0;\n\tlong min_temp = 0;\n\tlong min_j = 0;\n\tlong min_k = 0;\n\tlong min_i = 0;\n\tlong min_index = 0;\n\tlong min_count = 0;\n\tlong min_temp = 0;\n\tlong min_j = 0;\n\tlong min_k = 0;\n\tlong min_i = 0;\n\tlong min_index = 0;\n\tlong min_count = 0;\n\tlong min_temp = 0;\n\tlong min_j = 0;\n\tlong min_k = 0;\n\tlong min_i = 0;\n\tlong min_index = 0;\n\tlong min_count = 0;\n\tlong min_temp = 0;\n\tlong min_j = 0;\n\tlong min_k = 0;\n\tlong min_i = 0;\n\tlong min_index = 0;\n\tlong min_count = 0;\n\tlong min_temp = 0;\n\tlong min_j = 0;\n\tlong min_k = 0;\n\tlong min_i = 0;\n\tlong min_index = 0;\n\tlong min_count = 0;\n\tlong min_temp = 0;\n\tlong min_j = 0;\n\tlong min_k = 0;\n\tlong min_i = 0;\n\tlong min_index = 0;\n\tlong min_count = 0;\n\t",
    "{\n\tlong len = str.length;\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\twhile (i < len && j < len && k < len) \n\t{\n\t\tif (str[(i + k) % len] == str[(j + k) % len]) \n\t\t{\n\t\t\tk++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (str[(i + k) % len] > str[(j + k) % len]) \n\t\t\t{\n\t\t\t\ti = i + k + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tj = j + k + 1;\n\t\t\t}\n\t\t\tif (i == j) \n\t\t\t{\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tk = 0;\n\t\t}\n\t}\n\treturn min(i, j);\n}",
    "{\n\tlong len = str.length;\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\twhile(i < len && j < len && k < len) \n\t{\n\t\tif(str[(i + k) % len] == str[(j + k) % len]) \n\t\t{\n\t\t\tk++;\n\t\t}\n\t\telse if(str[(i + k) % len] > str[(j + k) % len]) \n\t\t{\n\t\t\ti = i + k + 1;\n\t\t\tif(i <= j) \n\t\t\t{\n\t\t\t\ti = j + 1;\n\t\t\t}\n\t\t\tk = 0;\n\t\t}\n\t\telse if(str[(i + k) % len] < str[(j + k) % len]) \n\t\t{\n\t\t\tj = j + k + 1;\n\t\t\tif(j <= i) \n\t\t\t{\n\t\t\t\tj = i + 1;\n\t\t\t}\n\t\t\tk = 0;\n\t\t}\n\t}\n\treturn min(i, j);\n}",
    "{\n\tlong len = str.length;\n\tstring temp = str ~ str;\n\tlong i = 1;\n\tlong j = 0;\n\tlong k = 0;\n\tlong[] lps = new long[len];\n\twhile (i < 2 * len) \n\t{\n\t\tif (temp[i] == temp[j]) \n\t\t{\n\t\t\tj++;\n\t\t\tlps[i] = j;\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (j != 0) \n\t\t\t{\n\t\t\t\tj = lps[j - 1];\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tlps[i] = 0;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\treturn len - lps[2 * len - 1];\n}",
    "{\n\tlong len = str.length;\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\twhile(i < len && j < len && k < len) \n\t{\n\t\tif(str[i + k] == str[j + k]) \n\t\t{\n\t\t\tk += 1;\n\t\t\tif(k == len) \n\t\t\t{\n\t\t\t\treturn i;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif(str[i + k] > str[j + k]) \n\t\t\t{\n\t\t\t\ti = i + k + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tj = j + k + 1;\n\t\t\t}\n\t\t\tif(i == j) \n\t\t\t{\n\t\t\t\tj += 1;\n\t\t\t}\n\t\t\tk = 0;\n\t\t}\n\t}\n\treturn i;\n}",
    "{\n\tlong n = str.length;\n\tstring temp = str ~ str;\n\tlong[] lps = new long[2 * n];\n\tlps[0] = 0;\n\tlong len = 0;\n\tlong i = 1;\n\twhile (i < 2 * n) \n\t{\n\t\tif (temp[i] == temp[len]) \n\t\t{\n\t\t\tlen++;\n\t\t\tlps[i] = len;\n\t\t\ti++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (len != 0) \n\t\t\t{\n\t\t\t\tlen = lps[len - 1];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tlps[i] = 0;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\tlong result = lps[n - 1];\n\tif (result > n / 2) \n\t{\n\t\tresult = n - result;\n\t}\n\treturn result;\n}",
    "{\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\tlong n = str.length;\n\twhile (i < n && j < n && k < n) \n\t{\n\t\tif (str[(i + k) % n] == str[(j + k) % n]) \n\t\t{\n\t\t\tk++;\n\t\t} \n\t\telse if (str[(i + k) % n] > str[(j + k) % n]) \n\t\t{\n\t\t\ti = i + k + 1;\n\t\t\tif (i <= j) \n\t\t\t{\n\t\t\t\ti = j + 1;\n\t\t\t}\n\t\t\tk = 0;\n\t\t} \n\t\telse if (str[(i + k) % n] < str[(j + k) % n]) \n\t\t{\n\t\t\tj = j + k + 1;\n\t\t\tif (j <= i) \n\t\t\t{\n\t\t\t\tj = i + 1;\n\t\t\t}\n\t\t\tk = 0;\n\t\t}\n\t}\n\treturn min(i, j);\n}",
    "{\n\tlong n = str.length;\n\tlong min_rotations = n;\n\tlong i = 0;\n\tlong j = 1;\n\twhile (i < n && j < n) \n\t{\n\t\tlong k = 0;\n\t\twhile (k < n && str[(i + k) % n] == str[(j + k) % n]) \n\t\t{\n\t\t\tk++;\n\t\t}\n\t\tif (k == n) \n\t\t{\n\t\t\treturn min_rotations;\n\t\t}\n\t\tif (str[(i + k) % n] > str[(j + k) % n]) \n\t\t{\n\t\t\ti = i + k + 1;\n\t\t\tif (i == j) \n\t\t\t{\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tmin_rotations = min(min_rotations, j - i + n);\n\t\t} \n\t\telse \n\t\t{\n\t\t\tj = j + k + 1;\n\t\t\tif (i == j) \n\t\t\t{\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tmin_rotations = min(min_rotations, j - i + n);\n\t\t}\n\t}\n\treturn min_rotations;\n}",
    "{\n\tlong n = str.length;\n\tstring concat = str ~ str;\n\tlong i = 1, j = 0;\n\tlong lps[n];\n\tlps[0] = 0;\n\twhile (i < n) \n\t{\n\t\tif (concat[i] == concat[j]) \n\t\t{\n\t\t\tj++;\n\t\t\tlps[i] = j;\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (j != 0) \n\t\t\t{\n\t\t\t\tj = lps[j - 1];\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tlps[i] = 0;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\treturn (n - lps[n - 1]);\n}",
    "{\n\tlong n = str.length;\n\tlong count = 0;\n\tlong min = n;\n\tlong index = 0;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tif (str[i] == '1') \n\t\t{\n\t\t\tcount = 0;\n\t\t\tfor (long j = i; j < n; j++) \n\t\t\t{\n\t\t\t\tif (str[j] == '1') \n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (long j = 0; j < i; j++) \n\t\t\t{\n\t\t\t\tif (str[j] == '1') \n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (count < min) \n\t\t\t{\n\t\t\t\tmin = count;\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t}\n\treturn index;\n}",
    "{\n\tlong n = str.length;\n\tstring temp = str ~ str;\n\tlong i = 1, j = 0;\n\tlong lps[n];\n\tlps[0] = 0;\n\twhile (i < 2 * n) \n\t{\n\t\tif (temp[i] == temp[j]) \n\t\t{\n\t\t\tj++;\n\t\t\tlps[i] = j;\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (j != 0) \n\t\t\t{\n\t\t\t\tj = lps[j - 1];\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tlps[i] = 0;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\treturn (n - lps[n - 1]);\n}",
    "{\n\tlong n = str.length;\n\tstring concat = str ~ str;\n\tlong i = 1, j = 0;\n\tlong lps[n];\n\tlps[0] = 0;\n\twhile (i < n) \n\t{\n\t\tif (concat[i] == concat[j]) \n\t\t{\n\t\t\tj++;\n\t\t\tlps[i] = j;\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (j != 0) \n\t\t\t{\n\t\t\t\tj = lps[j - 1];\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tlps[i] = 0;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\tlong res = lps[n - 1];\n\treturn (res > n / 2) ? -1 : res;\n}",
    "{\n\tlong len = str.length;\n\tstring temp = str ~ str;\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\twhile (i < len && j < len && k < len) \n\t{\n\t\tif (temp[i + k] == temp[j + k]) \n\t\t{\n\t\t\tk++;\n\t\t\tif (k == len) \n\t\t\t{\n\t\t\t\treturn i;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (temp[i + k] > temp[j + k]) \n\t\t\t{\n\t\t\t\ti = i + k + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tj = j + k + 1;\n\t\t\t}\n\t\t\tif (i == j) \n\t\t\t{\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tk = 0;\n\t\t}\n\t}\n\treturn i;\n}",
    "{\n\tlong n = str.length;\n\tlong min_rotations = n;\n\tlong index = 0;\n\tlong i = 0;\n\twhile (i < n) \n\t{\n\t\tif (str[i] < str[index]) \n\t\t{\n\t\t\tindex = i;\n\t\t}\n\t\ti++;\n\t}\n\tmin_rotations = index;\n\treturn min_rotations;\n}",
    "{\n\tlong len = str.length;\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\twhile (i < len && j < len && k < len) \n\t{\n\t\tif (str[(i + k) % len] == str[(j + k) % len]) \n\t\t{\n\t\t\tk++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (str[(i + k) % len] > str[(j + k) % len]) \n\t\t\t{\n\t\t\t\ti = i + k + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tj = j + k + 1;\n\t\t\t}\n\t\t\tif (i == j) \n\t\t\t{\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tk = 0;\n\t\t}\n\t}\n\treturn min(i, j);\n}",
    "{\n\tlong n = str.length;\n\tstring concat = str ~ str;\n\tlong min_length = n;\n\tlong min_index = 0;\n\tfor (long i = 1; i < n; i++) \n\t{\n\t\tif (concat[i..i + n - 1] < str) \n\t\t{\n\t\t\tif (n - i < min_length) \n\t\t\t{\n\t\t\t\tmin_length = n - i;\n\t\t\t\tmin_index = i;\n\t\t\t}\n\t\t}\n\t}\n\treturn min_index;\n}",
    "{\n\tlong n = str.length;\n\tstring temp = str ~ str;\n\tlong i = 1, j = 0;\n\tlong lps[n];\n\tlps[0] = 0;\n\twhile (i < 2 * n) \n\t{\n\t\tif (temp[i] == temp[j]) \n\t\t{\n\t\t\tj++;\n\t\t\tlps[i] = j;\n\t\t\ti++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (j != 0) \n\t\t\t{\n\t\t\t\tj = lps[j - 1];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tlps[i] = 0;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\treturn n - lps[n - 1];\n}",
    "{\n\tlong n = str.length;\n\tlong count = 0;\n\tlong min = n;\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tif (str[i] == '1')\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\tif (count == n)\n\t{\n\t\treturn 0;\n\t}\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tif (str[i] == '1')\n\t\t{\n\t\t\tcount--;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t\tmin = min(min, count);\n\t}\n\treturn min;\n}",
    "{\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\twhile (i < str.length() && j < str.length() && k < str.length()) \n\t{\n\t\tif (str[i + k] == str[j + k]) \n\t\t{\n\t\t\tk++;\n\t\t\tif (j + k == str.length()) \n\t\t\t{\n\t\t\t\treturn i;\n\t\t\t}\n\t\t} \n\t\telse if (str[i + k] > str[j + k]) \n\t\t{\n\t\t\tj = j + k + 1;\n\t\t\tif (j == i) \n\t\t\t{\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tk = 0;\n\t\t} \n\t\telse if (str[i + k] < str[j + k]) \n\t\t{\n\t\t\ti = max(i + k + 1, j);\n\t\t\tj = i + 1;\n\t\t\tk = 0;\n\t\t}\n\t}\n\treturn i;\n}",
    "{\n\tlong len = str.length;\n\tlong min_rotations = len;\n\tstring temp = str;\n\tfor (long i = 0; i < len; i++) \n\t{\n\t\ttemp = temp[len - 1 .. len - 1] ~ temp[0 .. len - 2];\n\t\tif (temp < str) \n\t\t{\n\t\t\tmin_rotations = min(min_rotations, len - i);\n\t\t}\n\t}\n\treturn min_rotations;\n}",
    "{\n\tlong n = str.length;\n\tstring temp = str ~ str;\n\tlong[] lps = new long[2 * n];\n\tlps[0] = 0;\n\tlong len = 0;\n\tlong i = 1;\n\twhile (i < 2 * n) \n\t{\n\t\tif (temp[i] == temp[len]) \n\t\t{\n\t\t\tlen++;\n\t\t\tlps[i] = len;\n\t\t\ti++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (len != 0) \n\t\t\t{\n\t\t\t\tlen = lps[len - 1];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tlps[i] = 0;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\tlong res = lps[2 * n - 1];\n\treturn (n - res);\n}",
    "{\n\tlong len = str.length;\n\tstring temp = str ~ str;\n\tlong min_rotations = len;\n\tforeach (i; 0 .. len)\n\t{\n\t\tif (temp[i .. i + len - 1] == str)\n\t\t{\n\t\t\tmin_rotations = min(min_rotations, i);\n\t\t}\n\t}\n\treturn min_rotations;\n}",
    "{\n\tlong n = str.length;\n\tstring temp = str ~ str;\n\tlong i = 1, j = 0;\n\tlong lps[n];\n\tlps[0] = 0;\n\twhile(i < 2 * n) \n\t{\n\t\tif(temp[i] == temp[j]) \n\t\t{\n\t\t\tj++;\n\t\t\tlps[i] = j;\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif(j != 0) \n\t\t\t{\n\t\t\t\tj = lps[j - 1];\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tlps[i] = 0;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\treturn (n - lps[n - 1]);\n}",
    "{\n\tlong n = str.length;\n\tstring temp = str ~ str;\n\tlong i = 1, j = 0;\n\twhile (i < n && j < n) \n\t{\n\t\tlong k = 0;\n\t\twhile (k < n && temp[i + k] == temp[j + k]) \n\t\t\tk++;\n\t\tif (k == n) \n\t\t\tbreak;\n\t\tif (temp[i + k] > temp[j + k]) \n\t\t{\n\t\t\ti = i + k + 1;\n\t\t\tif (i <= j) \n\t\t\t\ti = j + 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tj = j + k + 1;\n\t\t\tif (j <= i) \n\t\t\t\tj = i + 1;\n\t\t}\n\t}\n\treturn min(i, j);\n}",
    "{\n\tlong len = str.length;\n\tstring temp = str ~ str;\n\tlong min_rotations = len;\n\tfor (long i = 1; i < len; i++) \n\t{\n\t\tif (temp[i..i + len - 1] < str) \n\t\t{\n\t\t\tmin_rotations = min(min_rotations, i);\n\t\t}\n\t}\n\treturn min_rotations;\n}",
    "{\n\tlong n = str.length;\n\tlong count = 0;\n\tlong min = n;\n\tlong index = 0;\n\tlong i = 0;\n\tlong j = 0;\n\twhile(i < n) \n\t{\n\t\tif(str[i] == str[0]) \n\t\t{\n\t\t\tj = 0;\n\t\t\tcount = 0;\n\t\t\twhile(j < n) \n\t\t\t{\n\t\t\t\tif(str[(i + j) % n] != str[j]) \n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcount++;\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tif(count == n) \n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(count < min) \n\t\t\t{\n\t\t\t\tmin = count;\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\ti++;\n\t}\n\treturn index;\n}",
    "{\n\tlong len = str.length;\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\twhile (i < len && j < len && k < len) \n\t{\n\t\tif (str[i + k] == str[j + k]) \n\t\t{\n\t\t\tk++;\n\t\t\tif (j + k == len) \n\t\t\t{\n\t\t\t\tj += k + 1;\n\t\t\t\tk = 0;\n\t\t\t}\n\t\t\telse if (i + k == len) \n\t\t\t{\n\t\t\t\ti += k + 1;\n\t\t\t\tk = 0;\n\t\t\t}\n\t\t}\n\t\telse if (str[i + k] > str[j + k]) \n\t\t{\n\t\t\tj = j + k + 1;\n\t\t\tk = 0;\n\t\t\tif (j == i) \n\t\t\t{\n\t\t\t\tj++;\n\t\t\t}\n\t\t}\n\t\telse if (str[i + k] < str[j + k]) \n\t\t{\n\t\t\ti = i + k + 1;\n\t\t\tk = 0;\n\t\t\tif (i == j) \n\t\t\t{\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\treturn min(i, j);\n}",
    "{\n\tlong n = str.length;\n\tstring temp = str ~ str;\n\tlong i = 1, j = 0;\n\twhile (i < n && j < n) \n\t{\n\t\tif (temp[i + j] == temp[j]) \n\t\t{\n\t\t\tj++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t\tj = 0;\n\t\t}\n\t}\n\treturn i;\n}",
    "{\n\tlong n = str.length;\n\tstring concat = str ~ str;\n\tlong i = 0, j = 1;\n\tlong count = 0;\n\twhile (i < n && j < n) \n\t{\n\t\tcount++;\n\t\tif (concat[i + j] == concat[j]) \n\t\t{\n\t\t\tj++;\n\t\t} \n\t\telse if (concat[i + j] > concat[j]) \n\t\t{\n\t\t\ti = i + j + 1;\n\t\t\tj = 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tj = 0;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong n = str.length;\n\tlong count = 0;\n\tlong min = 0;\n\tlong index = 0;\n\tlong i;\n\t\n\tfor (i = 0; i < n; i++) \n\t{\n\t\tif (str[i] == '1') \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\t\n\tmin = count;\n\t\n\tfor (i = 0; i < n; i++) \n\t{\n\t\tif (str[i] == '1') \n\t\t{\n\t\t\tcount--;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t\t\n\t\tif (count < min) \n\t\t{\n\t\t\tmin = count;\n\t\t\tindex = i + 1;\n\t\t}\n\t}\n\t\n\treturn index;\n}",
    "{\n\tlong len = str.length;\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\twhile (i < len && j < len && k < len) \n\t{\n\t\tif (str[(i + k) % len] == str[(j + k) % len]) \n\t\t{\n\t\t\tk++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (str[(i + k) % len] > str[(j + k) % len]) \n\t\t\t{\n\t\t\t\ti = i + k + 1;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tj = j + k + 1;\n\t\t\t}\n\t\t\tif (i == j) \n\t\t\t{\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tk = 0;\n\t\t}\n\t}\n\treturn min(i, j);\n}",
    "{\n\tlong len = str.length;\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\twhile (i < len && j < len && k < len) \n\t{\n\t\tif (str[(i + k) % len] == str[(j + k) % len]) \n\t\t{\n\t\t\tk++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (str[(i + k) % len] > str[(j + k) % len]) \n\t\t\t{\n\t\t\t\ti = i + k + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tj = j + k + 1;\n\t\t\t}\n\t\t\tif (i == j) \n\t\t\t{\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tk = 0;\n\t\t}\n\t}\n\treturn min(i, j);\n}",
    "{\n\tlong n = str.length;\n\tlong min_rotations = n;\n\tlong i = 0;\n\tlong j = 1;\n\twhile (j < n) \n\t{\n\t\tif (str[i] == str[j]) \n\t\t{\n\t\t\t++i;\n\t\t\t++j;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tmin_rotations = min(min_rotations, j - i);\n\t\t\ti = 0;\n\t\t\tj = 1;\n\t\t}\n\t}\n\tmin_rotations = min(min_rotations, n - i);\n\treturn min_rotations;\n}",
    "{\n\tlong len = str.length;\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\twhile (i < len && j < len && k < len) \n\t{\n\t\tif (str[(i + k) % len] == str[(j + k) % len]) \n\t\t{\n\t\t\tk++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (str[(i + k) % len] > str[(j + k) % len]) \n\t\t\t{\n\t\t\t\ti = i + k + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tj = j + k + 1;\n\t\t\t}\n\t\t\tif (i == j) \n\t\t\t{\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tk = 0;\n\t\t}\n\t}\n\treturn min(i, j);\n}",
    "{\n\tlong n = str.length;\n\tstring temp = str + str;\n\tlong i = 1;\n\tlong j = 0;\n\tlong k = 0;\n\tlong[] lps = new long[n];\n\tlps[0] = 0;\n\twhile (i < 2 * n) \n\t{\n\t\tif (temp[i] == temp[j]) \n\t\t{\n\t\t\tj++;\n\t\t\tlps[i] = j;\n\t\t\ti++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (j != 0) \n\t\t\t{\n\t\t\t\tj = lps[j - 1];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tlps[i] = 0;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\treturn n - lps[n - 1];\n}",
    "{\n\tlong n = str.length;\n\tstring concat = str ~ str;\n\tlong i = 1, j = 0;\n\tlong lps[n];\n\tlps[0] = 0;\n\twhile (i < n) \n\t{\n\t\tif (concat[i] == concat[j]) \n\t\t{\n\t\t\tj++;\n\t\t\tlps[i] = j;\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (j != 0) \n\t\t\t{\n\t\t\t\tj = lps[j - 1];\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tlps[i] = 0;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\treturn (n - lps[n - 1]);\n}",
    "{\n\tlong n = str.length;\n\tlong count = 0;\n\tlong min = n;\n\tlong index = 0;\n\tlong i = 0;\n\twhile (i < n) \n\t{\n\t\tif (str[i] == 'a') \n\t\t{\n\t\t\tcount = 0;\n\t\t\tindex = i;\n\t\t\twhile (str[index] == 'a') \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t\tindex++;\n\t\t\t}\n\t\t\tmin = min(min, count);\n\t\t\ti = index;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ti++;\n\t\t}\n\t}\n\treturn min;\n}",
    "{\n\tlong len = str.length;\n\tstring temp = str ~ str;\n\tlong i = 1;\n\tlong j = 0;\n\tlong k = 0;\n\twhile (i < len && j + k < 2 * len) \n\t{\n\t\tif (temp[i + k] == temp[j + k]) \n\t\t{\n\t\t\tk++;\n\t\t\tif (k == len) \n\t\t\t{\n\t\t\t\treturn i;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (temp[i + k] > temp[j + k]) \n\t\t\t{\n\t\t\t\ti = i + k + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tj = j + k + 1;\n\t\t\t}\n\t\t\tif (i == j) \n\t\t\t{\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tk = 0;\n\t\t}\n\t}\n\treturn i;\n}",
    "{\n\tlong len = str.length;\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\twhile (i < len && j < len && k < len) \n\t{\n\t\tif (str[(i + k) % len] == str[(j + k) % len]) \n\t\t{\n\t\t\tk++;\n\t\t}\n\t\telse if (str[(i + k) % len] > str[(j + k) % len]) \n\t\t{\n\t\t\ti = i + k + 1;\n\t\t\tif (i <= j) \n\t\t\t{\n\t\t\t\ti = j + 1;\n\t\t\t}\n\t\t\tk = 0;\n\t\t}\n\t\telse if (str[(i + k) % len] < str[(j + k) % len]) \n\t\t{\n\t\t\tj = j + k + 1;\n\t\t\tif (j <= i) \n\t\t\t{\n\t\t\t\tj = i + 1;\n\t\t\t}\n\t\t\tk = 0;\n\t\t}\n\t}\n\treturn min(i, j);\n}",
    "{\n\tlong len = str.length;\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\twhile (i < len && j < len && k < len) \n\t{\n\t\tif (str[(i + k) % len] == str[(j + k) % len]) \n\t\t{\n\t\t\tk++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (str[(i + k) % len] > str[(j + k) % len]) \n\t\t\t{\n\t\t\t\ti = i + k + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tj = j + k + 1;\n\t\t\t}\n\t\t\tif (i == j) \n\t\t\t{\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tk = 0;\n\t\t}\n\t}\n\treturn min(i, j);\n}",
    "{ \n    long n = str.length(); \n    long count = 0; \n    for (long i = 0; i < n; i++) \n    { \n        if (str[i] != str[0]) \n            break; \n        count++; \n    } \n    long j = count, k = 0; \n    while (j < n) \n    { \n        if (str[j] == str[k]) \n        { \n            j++; \n            k++; \n        } \n        else if (k != 0) \n            k = 0; \n        else\n            j++; \n    } \n    return (k == 0) ? 0 : (n - k); \n} ",
    "{\n\tlong n = str.length;\n\tstring concat = str ~ str;\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\twhile (i < n && j < n) \n\t{\n\t\tk = 0;\n\t\twhile (k < n && concat[i + k] == concat[j + k]) \n\t\t{\n\t\t\tk++;\n\t\t}\n\t\tif (k == n) \n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\tif (concat[i + k] > concat[j + k]) \n\t\t{\n\t\t\ti = i + k + 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tj = j + k + 1;\n\t\t}\n\t\tif (i == j) \n\t\t{\n\t\t\tj++;\n\t\t}\n\t}\n\treturn min(i, j);\n}",
    "{\n\tlong len = str.length;\n\tstring temp = str ~ str;\n\tlong min_rotations = len;\n\tlong index = 0;\n\tfor (long i = 1; i < len; i++) \n\t{\n\t\tif (temp[i..i + len - 1] < temp[index..index + len - 1]) \n\t\t{\n\t\t\tindex = i;\n\t\t}\n\t}\n\treturn index;\n}",
    "{\n\tlong n = str.length;\n\tstring concat = str ~ str;\n\tlong min_length = n;\n\tlong min_index = 0;\n\tfor (long i = 1; i < n; i++) \n\t{\n\t\tif (concat[i..i + n - 1] < concat[min_index..min_index + n - 1]) \n\t\t{\n\t\t\tmin_index = i;\n\t\t}\n\t}\n\treturn min_index;\n}",
    "{\n\tlong n = str.length;\n\tstring concat = str ~ str;\n\tlong i = 1;\n\tlong j = 0;\n\tlong k = 0;\n\tlong[] lps = new long[n];\n\twhile (i < n) \n\t{\n\t\tif (concat[i] == concat[j]) \n\t\t{\n\t\t\tj++;\n\t\t\tlps[i] = j;\n\t\t\ti++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (j != 0) \n\t\t\t{\n\t\t\t\tj = lps[j - 1];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tlps[i] = 0;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\treturn n - lps[n - 1];\n}",
    "{\n\tstring str1 = str ~ str;\n\tlong n = str.length;\n\tlong i = 1;\n\tlong j = 0;\n\tlong k = 0;\n\twhile (i < n) \n\t{\n\t\tj = i;\n\t\tk = 0;\n\t\twhile (j < n + k) \n\t\t{\n\t\t\tif (str1[j] != str1[k])\n\t\t\t\tbreak;\n\t\t\tj++;\n\t\t\tk++;\n\t\t}\n\t\tif (j == n + k)\n\t\t\treturn i;\n\t\tif (str1[j] < str1[k])\n\t\t\ti = j + 1;\n\t\telse\n\t\t\ti++;\n\t}\n\treturn i;\n}",
    "{\n\tlong len = str.length;\n\tstring temp = str ~ str;\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\twhile (i + k < len && j + k < len) \n\t{\n\t\tif (temp[i + k] == temp[j + k]) \n\t\t{\n\t\t\tk += 1;\n\t\t} \n\t\telse if (temp[i + k] > temp[j + k]) \n\t\t{\n\t\t\ti = i + k + 1;\n\t\t\tif (i <= j) \n\t\t\t{\n\t\t\t\ti = j + 1;\n\t\t\t}\n\t\t\tk = 0;\n\t\t} \n\t\telse if (temp[i + k] < temp[j + k]) \n\t\t{\n\t\t\tj = j + k + 1;\n\t\t\tif (j <= i) \n\t\t\t{\n\t\t\t\tj = i + 1;\n\t\t\t}\n\t\t\tk = 0;\n\t\t}\n\t}\n\treturn min(i, j);\n}",
    "{\n\tlong n = str.length;\n\tstring temp = str ~ str;\n\tlong[] lps = new long[2 * n];\n\tlps[0] = 0;\n\tlong len = 0;\n\tlong i = 1;\n\twhile (i < 2 * n) \n\t{\n\t\tif (temp[i] == temp[len]) \n\t\t{\n\t\t\tlen++;\n\t\t\tlps[i] = len;\n\t\t\ti++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (len != 0) \n\t\t\t{\n\t\t\t\tlen = lps[len - 1];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tlps[i] = 0;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\tlong res = lps[n - 1];\n\tif (res > n / 2) \n\t{\n\t\tres = n - res;\n\t}\n\treturn res;\n}",
    "{\n\tlong n = str.length;\n\tstring temp = str ~ str;\n\tlong[] lps = new long[2 * n];\n\tlps[0] = 0;\n\tlong len = 0;\n\tlong i = 1;\n\twhile (i < 2 * n) \n\t{\n\t\tif (temp[i] == temp[len]) \n\t\t{\n\t\t\tlen++;\n\t\t\tlps[i] = len;\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (len != 0) \n\t\t\t{\n\t\t\t\tlen = lps[len - 1];\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tlps[i] = 0;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\treturn n - lps[2 * n - 1];\n}",
    "{\n\tlong n = str.length;\n\tstring temp = str ~ str;\n\tlong[] lps = new long[2 * n];\n\tlong len = 0;\n\tlong i = 1;\n\twhile (i < 2 * n) \n\t{\n\t\tif (temp[i] == temp[len]) \n\t\t{\n\t\t\tlen++;\n\t\t\tlps[i] = len;\n\t\t\ti++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (len != 0) \n\t\t\t{\n\t\t\t\tlen = lps[len - 1];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tlps[i] = 0;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\tlong res = lps[2 * n - 1];\n\treturn (n - res) % n;\n}",
    "{\n\tlong len = str.length;\n\tstring temp = str ~ str;\n\tlong min_rotations = len;\n\t\n\tforeach(i; 0 .. len)\n\t{\n\t\tif(temp[i .. i + len - 1] == str)\n\t\t{\n\t\t\tmin_rotations = min(min_rotations, i);\n\t\t}\n\t}\n\t\n\treturn min_rotations;\n}",
    "{\n\tlong n = str.length;\n\tstring temp = str ~ str;\n\tlong i = 1, j = 0;\n\tlong lps[n];\n\tlps[0] = 0;\n\twhile(i < 2*n) \n\t{\n\t\tif(temp[i] == temp[j]) \n\t\t{\n\t\t\tlps[i] = j + 1;\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif(j != 0) \n\t\t\t{\n\t\t\t\tj = lps[j-1];\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tlps[i] = 0;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\treturn n - lps[2*n-1];\n}",
    "{\n\tlong n = str.length;\n\tstring concat = str ~ str;\n\tlong min_length = n;\n\tlong index = 0;\n\tfor (long i = 1; i < n; i++) \n\t{\n\t\tif (concat[i..i + n - 1] < concat[index..index + n - 1]) \n\t\t{\n\t\t\tindex = i;\n\t\t}\n\t}\n\treturn index;\n}",
    "{\n\tlong n = str.length;\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\twhile (i < n && j < n && k < n) \n\t{\n\t\tif (str[(i + k) % n] == str[(j + k) % n]) \n\t\t{\n\t\t\tk++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (str[(i + k) % n] > str[(j + k) % n]) \n\t\t\t{\n\t\t\t\ti = i + k + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tj = j + k + 1;\n\t\t\t}\n\t\t\tif (i == j) \n\t\t\t{\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tk = 0;\n\t\t}\n\t}\n\treturn min(i, j);\n}",
    "{\n\tlong n = str.length;\n\tstring concat = str ~ str;\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\twhile (i < n && j < n) \n\t{\n\t\tk = 0;\n\t\twhile (k < n && concat[i + k] == concat[j + k]) \n\t\t{\n\t\t\tk++;\n\t\t}\n\t\tif (k == n) \n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\tif (concat[i + k] > concat[j + k]) \n\t\t{\n\t\t\ti = i + k + 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tj = j + k + 1;\n\t\t}\n\t\tif (i == j) \n\t\t{\n\t\t\tj++;\n\t\t}\n\t}\n\treturn min(i, j);\n}",
    "{\n\tlong n = str.length;\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\twhile (i < n && j < n && k < n) \n\t{\n\t\tif (str[(i + k) % n] == str[(j + k) % n]) \n\t\t{\n\t\t\tk++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (str[(i + k) % n] > str[(j + k) % n]) \n\t\t\t{\n\t\t\t\ti = i + k + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tj = j + k + 1;\n\t\t\t}\n\t\t\tif (i == j) \n\t\t\t{\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tk = 0;\n\t\t}\n\t}\n\treturn min(i, j);\n}",
    "{\n\tlong n = str.length;\n\tstring concat = str ~ str;\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\twhile (i < n && j < n) \n\t{\n\t\tk = 0;\n\t\twhile (k < n && concat[i + k] == concat[j + k]) \n\t\t{\n\t\t\tk++;\n\t\t}\n\t\tif (k == n) \n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\tif (concat[i + k] > concat[j + k]) \n\t\t{\n\t\t\ti = i + k + 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tj = j + k + 1;\n\t\t}\n\t\tif (i == j) \n\t\t{\n\t\t\tj++;\n\t\t}\n\t}\n\treturn min(i, j);\n}",
    "{\n\tlong n = str.length;\n\tlong min_rotations = n;\n\tlong i = 0;\n\tlong j = 1;\n\twhile (i < n && j < n) \n\t{\n\t\tlong k = 0;\n\t\twhile (k < n && str[(i + k) % n] == str[(j + k) % n]) \n\t\t{\n\t\t\tk++;\n\t\t}\n\t\tif (k == n) \n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\tif (str[(i + k) % n] > str[(j + k) % n]) \n\t\t{\n\t\t\ti = i + k + 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tj = j + k + 1;\n\t\t}\n\t\tif (i == j) \n\t\t{\n\t\t\tj++;\n\t\t}\n\t}\n\tmin_rotations = min(min_rotations, min(i, j));\n\treturn min_rotations;\n}",
    "{\n\tlong n = str.length;\n\tstring concat = str ~ str;\n\tlong i = 1, j = 0;\n\tlong lps[$];\n\tlps[0] = 0;\n\twhile (i < 2 * n) \n\t{\n\t\tif (concat[i] == concat[j]) \n\t\t{\n\t\t\tlps[i] = j + 1;\n\t\t\ti++;\n\t\t\tj++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (j != 0) \n\t\t\t{\n\t\t\t\tj = lps[j - 1];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tlps[i] = 0;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\tlong res = lps[2 * n - 1];\n\treturn (n - res) % n;\n}",
    "{\n\tlong len = str.length;\n\tstring temp = str ~ str;\n\tlong min_rotations = len;\n\tforeach(i; 0 .. len)\n\t{\n\t\tif(temp[i .. i + len - 1] == str)\n\t\t{\n\t\t\tmin_rotations = min(min_rotations, i);\n\t\t}\n\t}\n\treturn min_rotations;\n}",
    "{\n\tlong len = str.length;\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\twhile (i < len && j < len && k < len) \n\t{\n\t\tif (str[(i + k) % len] == str[(j + k) % len]) \n\t\t{\n\t\t\tk++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (str[(i + k) % len] > str[(j + k) % len]) \n\t\t\t{\n\t\t\t\ti = i + k + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tj = j + k + 1;\n\t\t\t}\n\t\t\tif (i == j) \n\t\t\t{\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tk = 0;\n\t\t}\n\t}\n\treturn min(i, j);\n}",
    "{\n\tlong n = str.length;\n\tstring temp = str ~ str;\n\tlong[] lps = new long[2*n];\n\tlps[0] = 0;\n\tlong len = 0;\n\tlong i = 1;\n\twhile (i < 2*n) \n\t{\n\t\tif (temp[i] == temp[len]) \n\t\t{\n\t\t\tlen++;\n\t\t\tlps[i] = len;\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (len != 0) \n\t\t\t{\n\t\t\t\tlen = lps[len-1];\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tlps[i] = 0;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\tlong res = lps[n-1];\n\tif (res > n/2) \n\t{\n\t\treturn -1;\n\t}\n\treturn n - res;\n}",
    "{\n\tlong len = str.length;\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\twhile (i < len && j < len && k < len) \n\t{\n\t\tif (str[i + k] == str[j + k]) \n\t\t{\n\t\t\tk++;\n\t\t\tif (k == len) \n\t\t\t{\n\t\t\t\treturn i;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (str[i + k] > str[j + k]) \n\t\t\t{\n\t\t\t\ti = i + k + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tj = j + k + 1;\n\t\t\t}\n\t\t\tif (i == j) \n\t\t\t{\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tk = 0;\n\t\t}\n\t}\n\treturn i;\n}",
    "{\n\tlong len = str.length;\n\tstring temp = str ~ str;\n\tlong i = 1;\n\tlong j = 0;\n\tlong k = 0;\n\tlong[] lps = new long[len];\n\twhile (i < 2 * len) \n\t{\n\t\tif (temp[i] == temp[j]) \n\t\t{\n\t\t\tj++;\n\t\t\tlps[i] = j;\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (j != 0) \n\t\t\t{\n\t\t\t\tj = lps[j - 1];\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tlps[i] = 0;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\treturn len - lps[2 * len - 1];\n}",
    "{\n\tlong len = str.length;\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\twhile (i < len && j < len && k < len) \n\t{\n\t\tif (str[i + k] == str[j + k]) \n\t\t{\n\t\t\tk++;\n\t\t\tif (j + k == len) \n\t\t\t{\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\telse if (str[i + k] > str[j + k]) \n\t\t{\n\t\t\tj = j + k + 1;\n\t\t\tif (j == i) \n\t\t\t{\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tk = 0;\n\t\t}\n\t\telse if (str[i + k] < str[j + k]) \n\t\t{\n\t\t\ti = max(i + k + 1, j);\n\t\t\tj = i + 1;\n\t\t\tk = 0;\n\t\t}\n\t}\n\treturn i;\n}",
    "{\n    long n = str.length;\n    long count = 0;\n    for (long i = 0; i < n; i++) \n    {\n        if (str[i] != str[0]) \n        {\n            break;\n        }\n        count++;\n    }\n    if (count == n) \n    {\n        return 0;\n    }\n    long i = count, j = i + 1;\n    while (j < n) \n    {\n        if (str[i] != str[j]) \n        {\n            break;\n        }\n        j++;\n    }\n    return j - i;\n}",
    "{\n\tlong n = str.length;\n\tstring temp = str ~ str;\n\tlong[] lps = new long[2 * n];\n\tlong len = 0;\n\tlong i = 1;\n\twhile (i < 2 * n) \n\t{\n\t\tif (temp[i] == temp[len]) \n\t\t{\n\t\t\tlen++;\n\t\t\tlps[i] = len;\n\t\t\ti++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (len != 0) \n\t\t\t{\n\t\t\t\tlen = lps[len - 1];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tlps[i] = 0;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\tlong result = n - lps[2 * n - 1];\n\treturn result;\n}",
    "{\n\tlong n = str.length;\n\tlong count = 0;\n\tlong min = 0;\n\tlong index = 0;\n\tlong i = 0;\n\t\n\tfor (i = 0; i < n; i++) {\n\t\tif (str[i] == '1') {\n\t\t\tcount++;\n\t\t}\n\t}\n\t\n\tmin = count;\n\t\n\tfor (i = 0; i < n; i++) {\n\t\tif (str[i] == '1') {\n\t\t\tcount--;\n\t\t}\n\t\t\n\t\tif (min > count) {\n\t\t\tmin = count;\n\t\t\tindex = i;\n\t\t}\n\t}\n\t\n\treturn index + 1;\n}",
    "{\n\tlong n = str.length;\n\tstring temp = str ~ str;\n\tlong min_rotations = n;\n\t\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(temp[i .. i + n - 1] == str)\n\t\t{\n\t\t\tmin_rotations = min(min_rotations, i);\n\t\t}\n\t}\n\t\n\treturn min_rotations;\n}",
    "{\n\tlong len = str.length;\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\twhile (i < len && j < len && k < len) \n\t{\n\t\tif (str[(i + k) % len] == str[(j + k) % len]) \n\t\t{\n\t\t\tk++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (str[(i + k) % len] > str[(j + k) % len]) \n\t\t\t{\n\t\t\t\ti = i + k + 1;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tj = j + k + 1;\n\t\t\t}\n\t\t\tif (i == j) \n\t\t\t{\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tk = 0;\n\t\t}\n\t}\n\treturn min(i, j);\n}",
    "{\n\tlong n = str.length;\n\tstring temp = str ~ str;\n\tlong i = 1, j = 0;\n\tlong lps[n];\n\tlps[0] = 0;\n\twhile (i < 2 * n) \n\t{\n\t\tif (temp[i] == temp[j]) \n\t\t{\n\t\t\tj++;\n\t\t\tlps[i] = j;\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (j != 0) \n\t\t\t{\n\t\t\t\tj = lps[j - 1];\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tlps[i] = 0;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\treturn (n - lps[n - 1]);\n}",
    "{\n\tlong n = str.length;\n\tstring concat = str ~ str;\n\tlong i = 1;\n\tlong j = 0;\n\tlong lps[n];\n\tlps[0] = 0;\n\twhile (i < 2 * n) \n\t{\n\t\tif (concat[i] == concat[j]) \n\t\t{\n\t\t\tj++;\n\t\t\tlps[i] = j;\n\t\t\ti++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (j != 0) \n\t\t\t{\n\t\t\t\tj = lps[j - 1];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tlps[i] = 0;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\tlong res = lps[n - 1];\n\treturn (n - res) % n;\n}",
    "{\n\tlong n = str.length;\n\tlong count = 0;\n\tlong min = n;\n\tlong index = 0;\n\tlong i = 0;\n\tlong j = 0;\n\twhile (i < n) \n\t{\n\t\tj = 0;\n\t\tindex = i;\n\t\tcount = 0;\n\t\twhile (j < n) \n\t\t{\n\t\t\tif (str[index] != str[j]) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\tindex++;\n\t\t\tj++;\n\t\t\tif (index == n) \n\t\t\t{\n\t\t\t\tindex = 0;\n\t\t\t}\n\t\t}\n\t\tif (count < min) \n\t\t{\n\t\t\tmin = count;\n\t\t}\n\t\ti++;\n\t}\n\treturn min;\n}",
    "{\n\tlong len = str.length;\n\tlong min_rotations = len;\n\tlong i = 0;\n\twhile (i < len) \n\t{\n\t\tif (str[i] == 'a') \n\t\t{\n\t\t\tlong rotations = i;\n\t\t\tif (len - i < min_rotations) \n\t\t\t{\n\t\t\t\trotations = len - i;\n\t\t\t}\n\t\t\tmin_rotations = min(min_rotations, rotations);\n\t\t}\n\t\ti++;\n\t}\n\treturn min_rotations;\n}",
    "{\n\tlong n = str.length;\n\tstring concat = str ~ str;\n\tlong i = 1;\n\tlong j = 0;\n\tlong lps[n];\n\tlps[0] = 0;\n\twhile (i < 2 * n) \n\t{\n\t\tif (concat[i] == concat[j]) \n\t\t{\n\t\t\tj += 1;\n\t\t\tlps[i] = j;\n\t\t\ti += 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (j != 0) \n\t\t\t{\n\t\t\t\tj = lps[j - 1];\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tlps[i] = 0;\n\t\t\t\ti += 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn (n - lps[n - 1]);\n}",
    "{\n\tlong n = str.length;\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\twhile (i < n && j < n && k < n) \n\t{\n\t\tif (str[(i + k) % n] == str[(j + k) % n]) \n\t\t{\n\t\t\tk++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (str[(i + k) % n] > str[(j + k) % n]) \n\t\t\t{\n\t\t\t\ti = i + k + 1;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tj = j + k + 1;\n\t\t\t}\n\t\t\tif (i == j) \n\t\t\t{\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tk = 0;\n\t\t}\n\t}\n\treturn min(i, j);\n}",
    "{\n\tlong n = str.length;\n\tstring str1 = str ~ str;\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\twhile (i < n && j < n) \n\t{\n\t\tk = 0;\n\t\twhile (k < n && str1[i + k] == str1[j + k]) \n\t\t{\n\t\t\tk++;\n\t\t}\n\t\tif (k == n) \n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\tif (str1[i + k] > str1[j + k]) \n\t\t{\n\t\t\ti = i + k + 1;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tj = j + k + 1;\n\t\t}\n\t\tif (i == j) \n\t\t{\n\t\t\tj++;\n\t\t}\n\t}\n\treturn min(i, j);\n}",
    "{\n\tlong n = str.length;\n\tstring temp = str ~ str;\n\tlong i = 1, j = 0;\n\tlong lps[n];\n\tlps[0] = 0;\n\twhile (i < 2 * n) \n\t{\n\t\tif (temp[i] == temp[j]) \n\t\t{\n\t\t\tj++;\n\t\t\tlps[i] = j;\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (j != 0) \n\t\t\t{\n\t\t\t\tj = lps[j - 1];\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tlps[i] = 0;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\treturn (n - lps[n - 1]);\n}",
    "{\n\tlong n = str.length;\n\tstring temp = str ~ str;\n\tlong[] lps = new long[2 * n];\n\tlps[0] = 0;\n\tlong len = 0;\n\tlong i = 1;\n\twhile (i < 2 * n) \n\t{\n\t\tif (temp[i] == temp[len]) \n\t\t{\n\t\t\tlen++;\n\t\t\tlps[i] = len;\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (len != 0) \n\t\t\t{\n\t\t\t\tlen = lps[len - 1];\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tlps[i] = 0;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\treturn (n - lps[n - 1]);\n}",
    "{\n\tlong len = str.length;\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\twhile (i < len && j < len && k < len) \n\t{\n\t\tif (str[(i + k) % len] == str[(j + k) % len]) \n\t\t{\n\t\t\tk++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (str[(i + k) % len] > str[(j + k) % len]) \n\t\t\t{\n\t\t\t\ti = i + k + 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tj = j + k + 1;\n\t\t\t}\n\t\t\tif (i == j) \n\t\t\t{\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tk = 0;\n\t\t}\n\t}\n\treturn min(i, j);\n}",
    "{\n\tlong n = str.length;\n\tlong count = 0;\n\tlong min = n;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tif (str[i] == '1') \n\t\t{\n\t\t\tcount = 0;\n\t\t\tfor (long j = i; j < n; j++) \n\t\t\t{\n\t\t\t\tif (str[j] == '1') \n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t\telse \n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (long j = 0; j < i; j++) \n\t\t\t{\n\t\t\t\tif (str[j] == '1') \n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t\telse \n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (count < min) \n\t\t\t{\n\t\t\t\tmin = count;\n\t\t\t}\n\t\t}\n\t}\n\treturn min;\n}",
    "{\n\tlong len = str.length;\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\twhile (i < len && j < len && k < len) \n\t{\n\t\tif (str[(i + k) % len] == str[(j + k) % len]) \n\t\t{\n\t\t\tk++;\n\t\t} \n\t\telse if (str[(i + k) % len] > str[(j + k) % len]) \n\t\t{\n\t\t\ti = i + k + 1;\n\t\t\tif (i <= j) \n\t\t\t{\n\t\t\t\ti = j + 1;\n\t\t\t}\n\t\t\tk = 0;\n\t\t} \n\t\telse if (str[(i + k) % len] < str[(j + k) % len]) \n\t\t{\n\t\t\tj = j + k + 1;\n\t\t\tif (j <= i) \n\t\t\t{\n\t\t\t\tj = i + 1;\n\t\t\t}\n\t\t\tk = 0;\n\t\t}\n\t}\n\treturn min(i, j);\n}",
    "{\n    long n = str.length;\n    long count = 0;\n    for (long i = 0; i < n; i++) \n    {\n        if (str[i] != str[0]) \n        {\n            break;\n        }\n        count++;\n    }\n    long j = count;\n    for (; j < n; j++) \n    {\n        if (str[j] != str[j - count]) \n        {\n            break;\n        }\n    }\n    return (j == n) ? count : n;\n}",
    "{\n\tlong n = str.length;\n\tstring concat = str ~ str;\n\tlong i = 1;\n\tlong j = 0;\n\tlong[] lps = new long[n];\n\tlps[0] = 0;\n\twhile (i < n) \n\t{\n\t\tif (concat[i] == concat[j]) \n\t\t{\n\t\t\tj++;\n\t\t\tlps[i] = j;\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (j != 0) \n\t\t\t{\n\t\t\t\tj = lps[j - 1];\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tlps[i] = 0;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\treturn n - lps[n - 1];\n}",
    "{\n\tlong n = str.length;\n\tstring concat = str ~ str;\n\tlong i = 1, j = 0;\n\tlong lps[n];\n\tlps[0] = 0;\n\twhile (i < n) \n\t{\n\t\tif (concat[i] == concat[j]) \n\t\t{\n\t\t\tj++;\n\t\t\tlps[i] = j;\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (j != 0) \n\t\t\t{\n\t\t\t\tj = lps[j - 1];\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tlps[i] = 0;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\treturn (n - lps[n - 1]);\n}",
    "{\n\tlong n = str.length;\n\tlong count = 0;\n\tlong min = n;\n\tlong i = 0;\n\tlong j = 1;\n\twhile (i < n && j < n) \n\t{\n\t\tif (str[i] == str[j]) \n\t\t{\n\t\t\tj++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (count + n - i < min) \n\t\t\t{\n\t\t\t\tmin = count + n - i;\n\t\t\t}\n\t\t\tcount++;\n\t\t\tif (i == j) \n\t\t\t{\n\t\t\t\tj++;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\ti = j;\n\t\t\t}\n\t\t}\n\t}\n\treturn min;\n}",
    "{\n\tlong n = str.length;\n\tlong count = 0;\n\tlong min = n;\n\tlong index = 0;\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tif (str[i] == '1') \n\t\t{\n\t\t\tcount = 0;\n\t\t\tfor (long j = i; j < n; j++) \n\t\t\t{\n\t\t\t\tif (str[j] == '1') \n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (long j = 0; j < i; j++) \n\t\t\t{\n\t\t\t\tif (str[j] == '1') \n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (count < min) \n\t\t\t{\n\t\t\t\tmin = count;\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t}\n\treturn index;\n}",
    "{\n\tlong n = str.length;\n\tlong min_rotations = n;\n\tstring temp = str ~ str;\n\tforeach(i; 0 .. n)\n\t{\n\t\tif(temp[i .. i + n - 1] < str)\n\t\t{\n\t\t\tmin_rotations = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn min_rotations;\n}",
    "{\n\tlong n = str.length;\n\tstring concat = str ~ str;\n\tlong i = 1;\n\tlong j = 0;\n\tlong k = 0;\n\tlong[] lps = new long[n];\n\tlps[0] = 0;\n\twhile (i < 2 * n) \n\t{\n\t\tif (concat[i] == concat[j]) \n\t\t{\n\t\t\tj++;\n\t\t\tlps[i] = j;\n\t\t\ti++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (j != 0) \n\t\t\t{\n\t\t\t\tj = lps[j - 1];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tlps[i] = 0;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\tk = lps[n - 1];\n\treturn (n - k) % n;\n}",
    "{\n\tlong n = str.length;\n\tstring temp = str ~ str;\n\tlong i = 1, j = 0;\n\tlong lps[n];\n\tlps[0] = 0;\n\twhile (i < 2 * n) \n\t{\n\t\tif (temp[i] == temp[j]) \n\t\t{\n\t\t\tj++;\n\t\t\tlps[i] = j;\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (j != 0) \n\t\t\t{\n\t\t\t\tj = lps[j - 1];\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tlps[i] = 0;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\tlong res = lps[n - 1];\n\treturn (n - res);\n}",
    "{\n\tlong n = str.length;\n\tstring temp = str ~ str;\n\tlong[] lps = new long[2 * n];\n\tlong len = 0, i = 1;\n\tlps[0] = 0;\n\twhile (i < 2 * n) \n\t{\n\t\tif (temp[i] == temp[len]) \n\t\t{\n\t\t\tlen++;\n\t\t\tlps[i] = len;\n\t\t\ti++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (len != 0) \n\t\t\t{\n\t\t\t\tlen = lps[len - 1];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tlps[i] = 0;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\tlong res = lps[n - 1];\n\treturn (n - res);\n}",
    "{\n\tlong n = str.length;\n\tlong count = 0;\n\tlong i = 0;\n\tlong j = 1;\n\twhile (count < n) \n\t{\n\t\tif (str[i] == str[j]) \n\t\t{\n\t\t\tcount++;\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ti = 0;\n\t\t\tcount = 0;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn i;\n}",
    "{\n\tlong n = str.length;\n\tstring temp = str + str;\n\tlong i = 1;\n\tlong j = 0;\n\tlong k = 0;\n\twhile(i < n && j < n) \n\t{\n\t\tk = 0;\n\t\twhile(k < n && temp[i+k] == temp[j+k]) \n\t\t{\n\t\t\tk++;\n\t\t}\n\t\tif(temp[i+k] < temp[j+k]) \n\t\t{\n\t\t\tj = i;\n\t\t\ti = j + 1;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ti = i + k + 1;\n\t\t}\n\t}\n\treturn j;\n}",
    "{\n\tint n = str.length;\n\tstring temp = str ~ str;\n\tint i = 0;\n\tint j = 1;\n\twhile (i < n && j < n) \n\t{\n\t\tint k = 0;\n\t\twhile (k < n && temp[i + k] == temp[j + k]) \n\t\t{\n\t\t\tk++;\n\t\t}\n\t\tif (k == n) \n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\tif (temp[i + k] > temp[j + k]) \n\t\t{\n\t\t\ti = max(i + k + 1, j);\n\t\t} \n\t\telse \n\t\t{\n\t\t\tj = max(j + k + 1, i);\n\t\t}\n\t}\n\treturn min(i, j);\n}",
    "{\n\tlong n = str.length;\n\tstring temp = str ~ str;\n\tlong[] lps = new long[2 * n];\n\tlong len = 0, i = 1;\n\tlps[0] = 0;\n\twhile (i < 2 * n) \n\t{\n\t\tif (temp[i] == temp[len]) \n\t\t{\n\t\t\tlen++;\n\t\t\tlps[i] = len;\n\t\t\ti++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (len != 0) \n\t\t\t{\n\t\t\t\tlen = lps[len - 1];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tlps[i] = 0;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\tlong res = lps[n - 1];\n\tif (res > 0 && n % (n - res) == 0) \n\t{\n\t\treturn n - res;\n\t}\n\treturn n;\n}",
    "{\n\tlong len = str.length;\n\tstring temp = str ~ str;\n\tlong min_index = 0;\n\tlong min_len = len;\n\tlong i = 0;\n\twhile (i < len) \n\t{\n\t\tlong j = i + 1;\n\t\tlong end = j + len - 1;\n\t\twhile (j < end) \n\t\t{\n\t\t\tif (temp[j] < temp[min_index]) \n\t\t\t{\n\t\t\t\tmin_index = j;\n\t\t\t}\n\t\t\tj++;\n\t\t}\n\t\tif (min_index == i) \n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\twhile (i < min_index) \n\t\t{\n\t\t\tswap(temp[i++], temp[min_index++]);\n\t\t}\n\t\tmin_index = i + 1;\n\t}\n\treturn min_index;\n}",
    "{\n\tlong min_rotations = 0;\n\tlong len = str.length;\n\tlong i = 0;\n\tlong j = 1;\n\tlong k = 0;\n\twhile (i < len && j < len && k < len) \n\t{\n\t\tif (str[i + k] == str[j + k]) \n\t\t{\n\t\t\tk++;\n\t\t\tif (j + k == len) \n\t\t\t{\n\t\t\t\tmin_rotations = min(i, min_rotations);\n\t\t\t\tj = j + k + 1;\n\t\t\t\tk = 0;\n\t\t\t}\n\t\t\telse if (i + k == len) \n\t\t\t{\n\t\t\t\tmin_rotations = min(j, min_rotations);\n\t\t\t\ti = i + k + 1;\n\t\t\t\tk = 0;\n\t\t\t}\n\t\t}\n\t\telse if (str[i + k] > str[j + k]) \n\t\t{\n\t\t\tmin_rotations = min(j, min_rotations);\n\t\t\tj = j + k + 1;\n\t\t\tk = 0;\n\t\t}\n\t\telse if (str[i + k] < str[j + k]) \n\t\t{\n\t\t\tmin_rotations = min(i, min_rotations);\n\t\t\ti = i + k + 1;\n\t\t\tk = 0;\n\t\t}\n\t}\n\treturn min_rotations;\n}",
    "{\n\tlong n = str.length;\n\tlong count = 0;\n\tlong min = n;\n\tlong index = 0;\n\tlong i = 0;\n\tlong j = 0;\n\tlong k = 0;\n\tlong temp = 0;\n\tlong temp_index = 0;\n\tlong temp_count = 0;\n\t\n\t// find the minimum rotation\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tif (str[i] < min)\n\t\t{\n\t\t\tmin = str[i];\n\t\t\tindex = i;\n\t\t}\n\t}\n\t\n\t// find the minimum rotation count\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tif (str[i] == min)\n\t\t{\n\t\t\tcount = 0;\n\t\t\ttemp = i;\n\t\t\tfor (j = 0; j < n; j++)\n\t\t\t{\n\t\t\t\tif (str[temp] == str[j])\n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t\ttemp++;\n\t\t\t\t\tif (temp == n)\n\t\t\t\t\t{\n\t\t\t\t\t\ttemp = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (count < n)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttemp_count = count;\n\t\t\t\ttemp_index = i;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif (temp_count == n)\n\t{\n\t\treturn temp_index;\n\t}\n\telse\n\t{\n\t\treturn index;\n\t}\n}"
  ]
}
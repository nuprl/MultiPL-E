{
  "name": "mbpp_784_mul_even_odd",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the product of first even and odd number of a given list.\n\t\n*/\nlong mul_even_odd(long[] list1) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_784_mul_even_odd.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = mul_even_odd;\n\n    assert(candidate([1L, 3L, 5L, 7L, 4L, 1L, 6L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([1L, 5L, 7L, 9L, 10L]) == 10L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong i = 0;\n\tlong j = 0;\n\tlong mul = 0;\n\t\n\tforeach(long item; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = item;\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd = item;\n\t\t\tj++;\n\t\t}\n\t\t\n\t\tif(i == 1 && j == 1)\n\t\t{\n\t\t\tmul = even * odd;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn mul;\n}",
    "{\n\tlong even_num = 0;\n\tlong odd_num = 0;\n\tint i = 0;\n\tint j = 0;\n\tint len = list1.length;\n\t\n\twhile(i < len)\n\t{\n\t\tif(list1[i] % 2 == 0)\n\t\t{\n\t\t\teven_num = list1[i];\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\t\n\twhile(j < len)\n\t{\n\t\tif(list1[j] % 2 != 0)\n\t\t{\n\t\t\todd_num = list1[j];\n\t\t\tbreak;\n\t\t}\n\t\tj++;\n\t}\n\t\n\treturn even_num * odd_num;\n}",
    "{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\tint i = 0;\n\tforeach(long l; list1)\n\t{\n\t\tif(i == 0)\n\t\t{\n\t\t\teven = l;\n\t\t\ti = 1;\n\t\t}\n\t\telse if(i == 1)\n\t\t{\n\t\t\todd = l;\n\t\t\tbreak;\n\t\t}\n\t}\n\tresult = even * odd;\n\treturn result;\n}",
    "{\n\tlong even = 0;\n\tlong odd = 0;\n\tforeach(i, e; list1)\n\t{\n\t\tif(i%2 == 0)\n\t\t{\n\t\t\teven = e;\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach(i, e; list1)\n\t{\n\t\tif(i%2 != 0)\n\t\t{\n\t\t\todd = e;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn even*odd;\n}",
    "{\n\treturn list1[0] * list1[1];\n}",
    "{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong count = 0;\n\tforeach(i; list1)\n\t{\n\t\tif(count == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tcount++;\n\t\t}\n\t\telse if(count == 1)\n\t\t{\n\t\t\todd = i;\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn even * odd;\n}",
    "{\n\tlong even = 0;\n\tlong odd = 0;\n\t\n\tforeach(i, e; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = e;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(i, e; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = e;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn even * odd;\n}",
    "{\n\tlong even = 0;\n\tlong odd = 0;\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn even * odd;\n}",
    "{\n\tlong even = 0;\n\tlong odd = 0;\n\tint i = 0;\n\tforeach(long elem; list1)\n\t{\n\t\tif(i%2 == 0)\n\t\t{\n\t\t\teven = elem;\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\ti = 0;\n\tforeach(long elem; list1)\n\t{\n\t\tif(i%2 != 0)\n\t\t{\n\t\t\todd = elem;\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\treturn even*odd;\n}",
    "{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong mul = 0;\n\t\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tif(list1[i] % 2 == 0)\n\t\t{\n\t\t\teven = list1[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tif(list1[i] % 2 != 0)\n\t\t{\n\t\t\todd = list1[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tmul = even * odd;\n\treturn mul;\n}",
    "{\n\treturn list1.filter!(x => x % 2 == 0).front * list1.filter!(x => x % 2 != 0).front;\n}",
    "{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\t\n\tforeach(i, val; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = val;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd = val;\n\t\t}\n\t}\n\t\n\tresult = even * odd;\n\treturn result;\n}",
    "{\n\tlong even = 0;\n\tlong odd = 0;\n\tbool even_found = false;\n\tbool odd_found = false;\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\teven_found = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\todd_found = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(even_found && odd_found)\n\t{\n\t\treturn even * odd;\n\t}\n\telse\n\t{\n\t\treturn 0;\n\t}\n}",
    "{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\t\n\tforeach(i, item; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = item;\n\t\t\tresult = even * odd;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd = item;\n\t\t\tresult = even * odd;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong even = 0;\n\tlong odd = 0;\n\tforeach(i, e; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = e;\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach(i, e; list1)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\todd = e;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn even * odd;\n}",
    "{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong count = 0;\n\tlong product = 0;\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tif(count == 0)\n\t\t\t{\n\t\t\t\teven = i;\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(count == 1)\n\t\t\t{\n\t\t\t\todd = i;\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tproduct = even * odd;\n\treturn product;\n}",
    "{\n\tlong even = 0;\n\tlong odd = 0;\n\tlong result = 0;\n\t\n\tforeach(i, element; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = element;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd = element;\n\t\t}\n\t\t\n\t\tif(even != 0 && odd != 0)\n\t\t{\n\t\t\tresult = even * odd;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong even = 0;\n\tlong odd = 0;\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = list1[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = list1[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn even * odd;\n}",
    "{\n\tlong even = 0;\n\tlong odd = 0;\n\t\n\tforeach(i, e; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = e;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(i, e; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = e;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn even * odd;\n}",
    "{\n\tlong even = 0;\n\tlong odd = 0;\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\teven = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tforeach(i; list1)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn even * odd;\n}"
  ]
}
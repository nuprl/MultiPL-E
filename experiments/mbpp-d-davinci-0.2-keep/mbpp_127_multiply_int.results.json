{
  "name": "mbpp_127_multiply_int",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_127_multiply_int.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif ((y & 1) != 0) \n\t\t{\n\t\t\tresult = result + x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\n/*\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "/tmp/tmpidz1uv1u.d(22): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpidz1uv1u.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tif (x == 0 || y == 0)\n\t\treturn 0;\n\t\n\tlong z = multiply_int(x, y >> 1);\n\tz += z;\n\t\n\tif (y & 1)\n\t\tz += x;\n\t\n\treturn z;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tif (x == 0 || y == 0)\n\t\treturn 0;\n\t\n\tlong result = 0;\n\t\n\tif (x < 0) {\n\t\tx = -x;\n\t\ty = -y;\n\t}\n\t\n\twhile (x > 0) {\n\t\tif (x & 1)\n\t\t\tresult += y;\n\t\tx >>= 1;\n\t\ty <<= 1;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1)\n\t\t\tresult += x;\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t\tresult = result + x;\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tif (x == 0 || y == 0) \n\t{\n\t\treturn 0;\n\t}\n\t\n\tlong result = 0;\n\tlong i = 0;\n\twhile (i < y) \n\t{\n\t\tresult += x;\n\t\ti++;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\t\n\twhile (y > 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tif (x == 0 || y == 0)\n\t\treturn 0;\n\t\n\tif (x < 0)\n\t\treturn -multiply_int(-x, y);\n\t\n\tif (y < 0)\n\t\treturn -multiply_int(x, -y);\n\t\n\tlong result = 0;\n\twhile (y > 0) {\n\t\tif (y & 1)\n\t\t\tresult += x;\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y > 0) \n\t{\n\t\tif (y % 2 == 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile(y != 0) \n\t{\n\t\tif(y & 1) \n\t\t\tresult += x;\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tif (x == 0 || y == 0) \n\t\treturn 0;\n\telse if (x == 1) \n\t\treturn y;\n\telse if (y == 1) \n\t\treturn x;\n\telse if (x == -1) \n\t\treturn -y;\n\telse if (y == -1) \n\t\treturn -x;\n\telse if (x < 0 && y < 0) \n\t\treturn multiply_int(-x, -y);\n\telse if (x < 0) \n\t\treturn -multiply_int(-x, y);\n\telse if (y < 0) \n\t\treturn -multiply_int(x, -y);\n\telse \n\t\treturn x + multiply_int(x, y - 1);\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif ((y & 1) != 0)\n\t\t\tresult += x;\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile(y != 0) \n\t{\n\t\tif(y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult = result + x;\n\t\t}\n\t\tx = x << 1;\n\t\ty = y >> 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tif (y == 0) \n\t\treturn 0;\n\telse if (y > 0) \n\t\treturn x + multiply_int(x, y - 1);\n\telse \n\t\treturn -multiply_int(x, -y);\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1)\n\t\t\tresult += x;\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif ((y & 1) != 0) \n\t\t{\n\t\t\tresult = result + x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tif (x == 0 || y == 0)\n\t\treturn 0;\n\telse if (x == 1)\n\t\treturn y;\n\telse if (y == 1)\n\t\treturn x;\n\telse if (x == -1)\n\t\treturn -y;\n\telse if (y == -1)\n\t\treturn -x;\n\telse if (x == -2147483648)\n\t\treturn y == -1 ? x : 0;\n\telse if (y == -2147483648)\n\t\treturn x == -1 ? y : 0;\n\telse if (x < 0)\n\t\treturn -multiply_int(-x, y);\n\telse if (y < 0)\n\t\treturn -multiply_int(x, -y);\n\telse if (x < y)\n\t\treturn multiply_int(y, x);\n\telse\n\t{\n\t\tlong result = 0;\n\t\twhile (y != 0)\n\t\t{\n\t\t\tif (y & 1)\n\t\t\t\tresult += x;\n\t\t\tx <<= 1;\n\t\t\ty >>= 1;\n\t\t}\n\t\treturn result;\n\t}\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tif (x == 0 || y == 0)\n\t\treturn 0;\n\telse if (y > 0)\n\t\treturn x + multiply_int(x, y - 1);\n\telse\n\t\treturn -multiply_int(x, -y);\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tif (x == 0 || y == 0)\n\t\treturn 0;\n\t\n\tif (x < 0)\n\t\treturn -multiply_int(-x, y);\n\tif (y < 0)\n\t\treturn -multiply_int(x, -y);\n\t\n\tlong result = 0;\n\twhile (y > 0) {\n\t\tresult += x;\n\t\ty--;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tif (x == 0 || y == 0)\n\t\treturn 0;\n\t\n\tif (x < 0 && y < 0)\n\t\treturn multiply_int(-x, -y);\n\t\n\tif (x < 0)\n\t\treturn -multiply_int(-x, y);\n\t\n\tif (y < 0)\n\t\treturn -multiply_int(x, -y);\n\t\n\tlong result = 0;\n\twhile (y > 0) \n\t{\n\t\tif (y & 1)\n\t\t\tresult += x;\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tif (y == 0) \n\t\treturn 0;\n\telse if (y > 0) \n\t\treturn x + multiply_int(x, y - 1);\n\telse \n\t\treturn -multiply_int(x, -y);\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif ((y & 1) != 0) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile(y != 0) \n\t{\n\t\tif(y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y > 0) {\n\t\tif (y % 2 == 1) {\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult = result + x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y > 0) {\n\t\tif (y % 2 == 1) {\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tresult += x * (y & 1);\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1)\n\t\t\tresult += x;\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tif (x < 0)\n\t\treturn -multiply_int(-x, y);\n\tif (y < 0)\n\t\treturn -multiply_int(x, -y);\n\t\n\tlong result = 0;\n\twhile (x > 0) \n\t{\n\t\tif (x & 1)\n\t\t\tresult += y;\n\t\tx >>= 1;\n\t\ty <<= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tif (x == 0 || y == 0)\n\t\treturn 0;\n\t\n\tif (x < 0 && y < 0)\n\t\treturn multiply_int(-x, -y);\n\t\n\tif (x < 0)\n\t\treturn -multiply_int(-x, y);\n\t\n\tif (y < 0)\n\t\treturn -multiply_int(x, -y);\n\t\n\tlong result = 0;\n\twhile (y > 0) \n\t{\n\t\tresult += x;\n\t\ty--;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile(y != 0) \n\t{\n\t\tif(y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tif (x < 0)\n\t{\n\t\treturn -multiply_int(-x, y);\n\t}\n\tif (y < 0)\n\t{\n\t\treturn -multiply_int(x, -y);\n\t}\n\t\n\tlong result = 0;\n\twhile (y > 0)\n\t{\n\t\tif (y % 2 == 1)\n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tif (x == 0 || y == 0)\n\t\treturn 0;\n\t\n\tif (x < 0 && y < 0)\n\t\treturn multiply_int(-x, -y);\n\t\n\tif (x < 0)\n\t\treturn -multiply_int(-x, y);\n\t\n\tif (y < 0)\n\t\treturn -multiply_int(x, -y);\n\t\n\tlong result = 0;\n\twhile (y > 0) {\n\t\tif (y % 2 == 1)\n\t\t\tresult += x;\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tif (x == 0 || y == 0) \n\t{\n\t\treturn 0;\n\t}\n\telse if (x == 1) \n\t{\n\t\treturn y;\n\t}\n\telse if (y == 1) \n\t{\n\t\treturn x;\n\t}\n\telse if (x == -1) \n\t{\n\t\treturn -y;\n\t}\n\telse if (y == -1) \n\t{\n\t\treturn -x;\n\t}\n\telse if (x < 0 && y < 0) \n\t{\n\t\treturn multiply_int(-x, -y);\n\t}\n\telse if (x < 0) \n\t{\n\t\treturn -multiply_int(-x, y);\n\t}\n\telse if (y < 0) \n\t{\n\t\treturn -multiply_int(x, -y);\n\t}\n\telse \n\t{\n\t\tlong result = 0;\n\t\twhile (y > 0) \n\t\t{\n\t\t\tresult += x;\n\t\t\ty--;\n\t\t}\n\t\treturn result;\n\t}\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tif (x == 0 || y == 0)\n\t\treturn 0;\n\t\n\tif (x == 1)\n\t\treturn y;\n\t\n\tif (y == 1)\n\t\treturn x;\n\t\n\tif (x == -1)\n\t\treturn -y;\n\t\n\tif (y == -1)\n\t\treturn -x;\n\t\n\tif (x == -2)\n\t\treturn y << 1;\n\t\n\tif (y == -2)\n\t\treturn x << 1;\n\t\n\tif (x == 2)\n\t\treturn y << 1;\n\t\n\tif (y == 2)\n\t\treturn x << 1;\n\t\n\tif (x == -4)\n\t\treturn y << 2;\n\t\n\tif (y == -4)\n\t\treturn x << 2;\n\t\n\tif (x == 4)\n\t\treturn y << 2;\n\t\n\tif (y == 4)\n\t\treturn x << 2;\n\t\n\tif (x == -8)\n\t\treturn y << 3;\n\t\n\tif (y == -8)\n\t\treturn x << 3;\n\t\n\tif (x == 8)\n\t\treturn y << 3;\n\t\n\tif (y == 8)\n\t\treturn x << 3;\n\t\n\tif (x == -16)\n\t\treturn y << 4;\n\t\n\tif (y == -16)\n\t\treturn x << 4;\n\t\n\tif (x == 16)\n\t\treturn y << 4;\n\t\n\tif (y == 16)\n\t\treturn x << 4;\n\t\n\tif (x == -32)\n\t\treturn y << 5;\n\t\n\tif (y == -32)\n\t\treturn x << 5;\n\t\n\tif (x == 32)\n\t\treturn y << 5;\n\t\n\tif (y == 32)\n\t\treturn x << 5;\n\t\n\tif (x == -64)\n\t\treturn y << 6;\n\t\n\tif (y == -64)\n\t\treturn x << 6;\n\t\n\tif (x == 64)\n\t\treturn y <<\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "/tmp/tmpq5gho566.d(93): Error: expression expected, not `unittest`\n/tmp/tmpq5gho566.d(94): Error: found `{` when expecting `;` following `return` statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq5gho566.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y > 0) \n\t{\n\t\tif (y % 2 == 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1)\n\t\t\tresult += x;\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) {\n\t\tif (y & 1) {\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) {\n\t\tif (y & 1) {\n\t\t\tresult = result + x;\n\t\t}\n\t\ty = y >> 1;\n\t\tx = x << 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y > 0) \n\t{\n\t\tif (y % 2 == 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tif(x == 0 || y == 0)\n\t\treturn 0;\n\t\n\tif(x < 0)\n\t\treturn -multiply_int(-x, y);\n\t\n\tif(y < 0)\n\t\treturn -multiply_int(x, -y);\n\t\n\tlong result = 0;\n\twhile(y != 0)\n\t{\n\t\tif(y & 1)\n\t\t\tresult += x;\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t\tresult = result + x;\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t\tresult += x;\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\t\n\twhile(y != 0) \n\t{\n\t\tif(y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tif(x == 0 || y == 0)\n\t\treturn 0;\n\t\n\tif(x < 0)\n\t\treturn -multiply_int(-x, y);\n\t\n\tif(y < 0)\n\t\treturn -multiply_int(x, -y);\n\t\n\tlong result = 0;\n\twhile(y != 0)\n\t{\n\t\tif(y & 1)\n\t\t\tresult += x;\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tif (x < 0 && y < 0)\n\t{\n\t\treturn multiply_int(-x, -y);\n\t}\n\telse if (x < 0)\n\t{\n\t\treturn -multiply_int(-x, y);\n\t}\n\telse if (y < 0)\n\t{\n\t\treturn -multiply_int(x, -y);\n\t}\n\telse if (x == 0 || y == 0)\n\t{\n\t\treturn 0;\n\t}\n\telse if (x == 1)\n\t{\n\t\treturn y;\n\t}\n\telse if (y == 1)\n\t{\n\t\treturn x;\n\t}\n\telse if (x == 2)\n\t{\n\t\treturn y << 1;\n\t}\n\telse if (y == 2)\n\t{\n\t\treturn x << 1;\n\t}\n\telse if (x == 3)\n\t{\n\t\treturn y + (y << 1);\n\t}\n\telse if (y == 3)\n\t{\n\t\treturn x + (x << 1);\n\t}\n\telse if (x == 4)\n\t{\n\t\treturn y << 2;\n\t}\n\telse if (y == 4)\n\t{\n\t\treturn x << 2;\n\t}\n\telse if (x == 5)\n\t{\n\t\treturn y + (y << 2);\n\t}\n\telse if (y == 5)\n\t{\n\t\treturn x + (x << 2);\n\t}\n\telse if (x == 6)\n\t{\n\t\treturn y + (y << 1) + (y << 2);\n\t}\n\telse if (y == 6)\n\t{\n\t\treturn x + (x << 1) + (x << 2);\n\t}\n\telse if (x == 7)\n\t{\n\t\treturn y + (y << 1) + (y << 2) + (y << 3);\n\t}\n\telse if (y == 7)\n\t{\n\t\treturn x + (x << 1) + (x << 2) + (x << 3);\n\t}\n\telse if (x == 8)\n\t{\n\t\t\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "/tmp/tmp_3tkqucf.d(85): Error: found `unittest` instead of statement\n/tmp/tmp_3tkqucf.d(93): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_3tkqucf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tif (x == 0 || y == 0) return 0;\n\tif (x < 0 && y < 0) return multiply_int(-x, -y);\n\tif (x < 0) return -multiply_int(-x, y);\n\tif (y < 0) return -multiply_int(x, -y);\n\t\n\tlong result = 0;\n\twhile (y > 0) \n\t{\n\t\tif (y & 1) result += x;\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1)\n\t\t\tresult += x;\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tif (x == 0 || y == 0)\n\t\treturn 0;\n\t\n\tif (x < 0 && y < 0)\n\t\treturn multiply_int(-x, -y);\n\t\n\tif (x < 0)\n\t\treturn -multiply_int(-x, y);\n\t\n\tif (y < 0)\n\t\treturn -multiply_int(x, -y);\n\t\n\tlong result = 0;\n\twhile (y > 0) \n\t{\n\t\tif (y & 1)\n\t\t\tresult += x;\n\t\t\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) {\n\t\tif (y & 1) {\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif ((y & 1) != 0) \n\t\t{\n\t\t\tresult = result + x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tif (y == 0)\n\t\treturn 0;\n\telse if (y > 0)\n\t\treturn x + multiply_int(x, y - 1);\n\telse\n\t\treturn -multiply_int(x, -y);\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) {\n\t\tif (y & 1) {\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult = result + x;\n\t\t}\n\t\tx = x << 1;\n\t\ty = y >> 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile(y != 0) \n\t{\n\t\tif(y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult = result + x;\n\t\t}\n\t\tx = x << 1;\n\t\ty = y >> 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile(y != 0) \n\t{\n\t\tif(y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult = result + x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile(y != 0) \n\t{\n\t\tif(y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult = result + x;\n\t\t}\n\t\tx = x << 1;\n\t\ty = y >> 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tif (x == 0 || y == 0)\n\t\treturn 0;\n\tif (x == 1)\n\t\treturn y;\n\tif (y == 1)\n\t\treturn x;\n\t\n\tif (x < 0)\n\t\treturn -multiply_int(-x, y);\n\tif (y < 0)\n\t\treturn -multiply_int(x, -y);\n\t\n\tlong result = 0;\n\twhile (y > 0) {\n\t\tresult += x;\n\t\ty--;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif ((y & 1) != 0) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif ((y & 1) != 0) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile(y != 0) \n\t{\n\t\tif(y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile(y != 0) \n\t{\n\t\tif(y & 1)\n\t\t\tresult += x;\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t\tresult = result + x;\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tif (x == 0 || y == 0) return 0;\n\tif (x == 1) return y;\n\tif (y == 1) return x;\n\t\n\tlong result = 0;\n\t\n\tif (x < 0) {\n\t\tif (y < 0) {\n\t\t\tresult = multiply_int(-x, -y);\n\t\t} else {\n\t\t\tresult = -multiply_int(-x, y);\n\t\t}\n\t} else {\n\t\tif (y < 0) {\n\t\t\tresult = -multiply_int(x, -y);\n\t\t} else {\n\t\t\tresult = x + multiply_int(x, y - 1);\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1)\n\t\t\tresult += x;\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tif (x == 0 || y == 0)\n\t\treturn 0;\n\t\n\tif (x < 0)\n\t\treturn -multiply_int(-x, y);\n\t\n\tif (y < 0)\n\t\treturn -multiply_int(x, -y);\n\t\n\tlong result = 0;\n\twhile (x > 0) {\n\t\tif (x & 1)\n\t\t\tresult += y;\n\t\tx >>= 1;\n\t\ty <<= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) {\n\t\tif (y & 1) {\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tif (x == 0 || y == 0)\n\t\treturn 0;\n\t\n\tif (x == 1)\n\t\treturn y;\n\t\n\tif (y == 1)\n\t\treturn x;\n\t\n\tif (x == -1)\n\t\treturn -y;\n\t\n\tif (y == -1)\n\t\treturn -x;\n\t\n\tif (x == -2147483648)\n\t\treturn y == -1 ? x : 0;\n\t\n\tif (y == -2147483648)\n\t\treturn x == -1 ? y : 0;\n\t\n\treturn x * y;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t\tresult = result + x;\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) {\n\t\tif (y & 1) {\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult = result + x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile(y != 0) \n\t{\n\t\tif(y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1)\n\t\t\tresult += x;\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y > 0) \n\t{\n\t\tif (y % 2 == 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile(y != 0)\n\t{\n\t\tif(y & 1)\n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) {\n\t\tif (y & 1) {\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tif (x == 0 || y == 0) \n\t{\n\t\treturn 0;\n\t}\n\t\n\tif (x < 0 && y < 0) \n\t{\n\t\treturn multiply_int(-x, -y);\n\t}\n\t\n\tif (x < 0) \n\t{\n\t\treturn -multiply_int(-x, y);\n\t}\n\t\n\tif (y < 0) \n\t{\n\t\treturn -multiply_int(x, -y);\n\t}\n\t\n\tlong result = 0;\n\twhile (y > 0) \n\t{\n\t\tresult += x;\n\t\ty--;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\t\n\twhile(y != 0) \n\t{\n\t\tif(y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\t\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile(y != 0) \n\t{\n\t\tif(y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tif (x == 0 || y == 0)\n\t\treturn 0;\n\t\n\tif (x < 0 && y < 0)\n\t\treturn multiply_int(-x, -y);\n\t\n\tif (x < 0)\n\t\treturn -multiply_int(-x, y);\n\t\n\tif (y < 0)\n\t\treturn -multiply_int(x, -y);\n\t\n\tlong result = 0;\n\twhile (y > 0) {\n\t\tif (y & 1)\n\t\t\tresult += x;\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tif(x == 0 || y == 0) return 0;\n\t\n\tlong result = 0;\n\t\n\twhile(y != 0)\n\t{\n\t\tif(y & 1)\n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\t\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tif (x == 0 || y == 0)\n\t\treturn 0;\n\t\n\tif (x < 0)\n\t\treturn -multiply_int(-x, y);\n\t\n\tif (y < 0)\n\t\treturn -multiply_int(x, -y);\n\t\n\tlong sum = 0;\n\twhile (y > 0) {\n\t\tif (y & 1)\n\t\t\tsum += x;\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1)\n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tif (x == 0 || y == 0) return 0;\n\t\n\tlong z = multiply_int(x, y >> 1);\n\tz = z + z;\n\t\n\tif (y & 1) z = z + x;\n\t\n\treturn z;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t\tresult += x;\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\t\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\t\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult = result + x;\n\t\t}\n\t\tx = x << 1;\n\t\ty = y >> 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile(y != 0)\n\t{\n\t\tif(y & 1)\n\t\t\tresult += x;\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y > 0) \n\t{\n\t\tif (y % 2 == 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tif (x == 0 || y == 0)\n\t\treturn 0;\n\tif (x == 1)\n\t\treturn y;\n\tif (y == 1)\n\t\treturn x;\n\t\n\tif (x < 0 && y < 0)\n\t\treturn multiply_int(-x, -y);\n\tif (x < 0)\n\t\treturn -multiply_int(-x, y);\n\tif (y < 0)\n\t\treturn -multiply_int(x, -y);\n\t\n\tif (x < y)\n\t\treturn multiply_int(y, x);\n\t\n\tlong result = 0;\n\twhile (y > 0) {\n\t\tif (y & 1)\n\t\t\tresult += x;\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tif (y == 0) return 0;\n\tif (y == 1) return x;\n\t\n\tif (y % 2 == 0) return multiply_int(x + x, y / 2);\n\telse return multiply_int(x + x, y / 2) + x;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tif (x == 0 || y == 0)\n\t\treturn 0;\n\t\n\tif (x < 0 && y < 0)\n\t\treturn multiply_int(-x, -y);\n\t\n\tif (x < 0)\n\t\treturn -multiply_int(-x, y);\n\t\n\tif (y < 0)\n\t\treturn -multiply_int(x, -y);\n\t\n\tlong result = 0;\n\twhile (y > 0)\n\t{\n\t\tif (y & 1)\n\t\t\tresult += x;\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) {\n\t\tif (y & 1) {\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult = result + x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tif(x == 0 || y == 0)\n\t\treturn 0;\n\t\n\tif(x < 0 && y < 0)\n\t\treturn multiply_int(-x, -y);\n\t\n\tif(x < 0)\n\t\treturn -multiply_int(-x, y);\n\t\n\tif(y < 0)\n\t\treturn -multiply_int(x, -y);\n\t\n\tif(x == 1)\n\t\treturn y;\n\t\n\tif(y == 1)\n\t\treturn x;\n\t\n\tif(x == 2)\n\t\treturn y << 1;\n\t\n\tif(y == 2)\n\t\treturn x << 1;\n\t\n\tif(x == 3)\n\t\treturn y + y + y;\n\t\n\tif(y == 3)\n\t\treturn x + x + x;\n\t\n\tif(x == 4)\n\t\treturn y << 2;\n\t\n\tif(y == 4)\n\t\treturn x << 2;\n\t\n\tif(x == 5)\n\t\treturn y + y + y + y + y;\n\t\n\tif(y == 5)\n\t\treturn x + x + x + x + x;\n\t\n\tif(x == 6)\n\t\treturn y + y + y + y + y + y;\n\t\n\tif(y == 6)\n\t\treturn x + x + x + x + x + x;\n\t\n\tif(x == 7)\n\t\treturn y + y + y + y + y + y + y;\n\t\n\tif(y == 7)\n\t\treturn x + x + x + x + x + x + x;\n\t\n\tif(x == 8)\n\t\treturn y << 3;\n\t\n\tif(y == 8)\n\t\treturn x << 3;\n\t\n\tif(x == 9)\n\t\treturn y + y + y + y + y + y + y + y + y;\n\t\n\tif(y == 9)\n\t\treturn x + x + x + x + x + x + x + x + x;\n\t\n\tif(x == 10)\n\t\treturn\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "/tmp/tmptz7up38_.d(78): Error: expression expected, not `unittest`\n/tmp/tmptz7up38_.d(79): Error: found `{` when expecting `;` following `return` statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptz7up38_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tif (x == 0 || y == 0)\n\t\treturn 0;\n\t\n\tif (x < 0)\n\t\treturn -multiply_int(-x, y);\n\t\n\tif (y < 0)\n\t\treturn -multiply_int(x, -y);\n\t\n\tlong result = 0;\n\twhile (y > 0) {\n\t\tif (y & 1)\n\t\t\tresult += x;\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) {\n\t\tif (y & 1)\n\t\t\tresult += x;\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tif (x == 0 || y == 0)\n\t\treturn 0;\n\tif (x == 1)\n\t\treturn y;\n\tif (y == 1)\n\t\treturn x;\n\t\n\tif (x < 0 && y < 0)\n\t\treturn multiply_int(-x, -y);\n\tif (x < 0)\n\t\treturn -multiply_int(-x, y);\n\tif (y < 0)\n\t\treturn -multiply_int(x, -y);\n\t\n\tif (x < y)\n\t\treturn multiply_int(y, x);\n\t\n\tlong result = 0;\n\twhile (y > 0) {\n\t\tresult += x;\n\t\ty--;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif ((y & 1) != 0) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\t// if x is negative, make it positive\n\tif (x < 0) \n\t{\n\t\tx = -x;\n\t\ty = -y;\n\t}\n\t\n\t// if y is negative, make it positive\n\tif (y < 0) \n\t{\n\t\tx = -x;\n\t\ty = -y;\n\t}\n\t\n\t// if y is 0, return 0\n\tif (y == 0) \n\t{\n\t\treturn 0;\n\t}\n\t\n\t// if y is 1, return x\n\tif (y == 1) \n\t{\n\t\treturn x;\n\t}\n\t\n\t// if y is even, divide it by 2\n\tif (y % 2 == 0) \n\t{\n\t\treturn multiply_int(x + x, y / 2);\n\t}\n\t\n\t// if y is odd, subtract 1 and divide it by 2\n\treturn multiply_int(x + x, (y - 1) / 2) + x;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult = result + x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\tlong i = 0;\n\twhile (i < y) \n\t{\n\t\tresult += x;\n\t\ti++;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122945,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\t\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122946,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1)\n\t\t\tresult += x;\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517466,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y != 0) \n\t{\n\t\tif (y & 1)\n\t\t\tresult = result + x;\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122946,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to multiply two integers.\n\t\n*/\nlong multiply_int(long x, long y) \n{\n\tlong result = 0;\n\twhile (y > 0) \n\t{\n\t\tif (y & 1) \n\t\t{\n\t\t\tresult += x;\n\t\t}\n\t\tx <<= 1;\n\t\ty >>= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = multiply_int;\n\n    assert(candidate(10L, 20L) == 200L);\n    assert(candidate(5L, 10L) == 50L);\n    assert(candidate(4L, 8L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666122946,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_566_sum_digits",
  "language": "d",
  "prompt": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_566_sum_digits.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0) \n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0) \n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tif (n < 10)\n\t\treturn n;\n\telse\n\t\treturn n % 10 + sum_digits(n / 10);\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0) \n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0) \n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0) \n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0) \n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0) \n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n != 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1666123808,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0) \n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0) \n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0) {\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1666123808,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0) \n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0) \n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0) {\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1666123808,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0) \n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0) \n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0) \n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0) {\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1666123808,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0) \n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0) \n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0) \n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tif (n < 10)\n\t\treturn n;\n\treturn n % 10 + sum_digits(n / 10);\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1666123808,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0) \n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0) \n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0) \n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n != 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1666123808,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0) \n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0) \n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0) \n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0) {\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1666123808,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0) {\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1666123808,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0) \n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tif (n < 10)\n\t\treturn n;\n\telse\n\t\treturn n % 10 + sum_digits(n / 10);\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0) {\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1666123808,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0) \n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0) \n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0) \n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0) \n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1666123808,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0) \n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tif (n < 10)\n\t\treturn n;\n\treturn n % 10 + sum_digits(n / 10);\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1666123808,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0) {\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1666123808,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0) \n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\t\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\t\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tif(n == 0)\n\t\treturn 0;\n\treturn n % 10 + sum_digits(n / 10);\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0) \n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0) \n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0) \n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0) \n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1666123808,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0) \n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tif (n < 10)\n\t\treturn n;\n\telse\n\t\treturn n % 10 + sum_digits(n / 10);\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0) \n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0) \n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0) \n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0) {\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1666123808,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n != 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1666123808,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n != 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1666123808,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile (n > 0) \n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to get the sum of the digits of a non-negative integer.\n\t\n*/\nlong sum_digits(long n) \n{\n\tlong sum = 0;\n\twhile(n > 0)\n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = sum_digits;\n\n    assert(candidate(345L) == 12L);\n    assert(candidate(12L) == 3L);\n    assert(candidate(97L) == 16L);\n}\nvoid main(){}",
      "timestamp": 1665517654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
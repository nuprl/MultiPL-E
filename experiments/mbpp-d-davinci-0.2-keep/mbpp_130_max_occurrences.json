{
  "name": "mbpp_130_max_occurrences",
  "language": "d",
  "prompt": "import std.math;\n/*\n\n\tWrite a function to find the item with maximum frequency in a given list.\n\t\n*/\nlong max_occurrences(long[] nums) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_130_max_occurrences.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = max_occurrences;\n\n    assert(candidate([2L, 3L, 8L, 4L, 7L, 9L, 8L, 2L, 6L, 5L, 1L, 6L, 1L, 2L, 3L, 2L, 4L, 6L, 9L, 1L, 2L]) == 2L);\n    assert(candidate([2L, 3L, 8L, 4L, 7L, 9L, 8L, 7L, 9L, 15L, 14L, 10L, 12L, 13L, 16L, 18L]) == 8L);\n    assert(candidate([10L, 20L, 20L, 30L, 40L, 90L, 80L, 50L, 30L, 20L, 50L, 10L]) == 20L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tlong max_num = 0;\n\tlong max_occurrences = 0;\n\tlong[] occurrences = new long[nums.length];\n\t\n\tforeach(num; nums)\n\t{\n\t\toccurrences[num]++;\n\t}\n\t\n\tforeach(num; occurrences)\n\t{\n\t\tif(num > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = num;\n\t\t\tmax_num = occurrences.indexOf(num);\n\t\t}\n\t}\n\t\n\treturn max_num;\n}",
    "{\n\tlong max_num = 0;\n\tlong max_count = 0;\n\tlong count = 0;\n\tforeach(long num; nums)\n\t{\n\t\tcount = 0;\n\t\tforeach(long num2; nums)\n\t\t{\n\t\t\tif(num == num2)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tif(count > max_count)\n\t\t{\n\t\t\tmax_count = count;\n\t\t\tmax_num = num;\n\t\t}\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max_count = 0;\n\tlong max_item = 0;\n\t\n\tforeach(num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(n; nums)\n\t\t{\n\t\t\tif(n == num)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max_count)\n\t\t{\n\t\t\tmax_count = count;\n\t\t\tmax_item = num;\n\t\t}\n\t}\n\treturn max_item;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_item = 0;\n\t\n\tforeach(long num; nums)\n\t{\n\t\tlong occurrences = 0;\n\t\tforeach(long num2; nums)\n\t\t{\n\t\t\tif(num == num2)\n\t\t\t{\n\t\t\t\toccurrences++;\n\t\t\t}\n\t\t}\n\t\tif(occurrences > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences;\n\t\t\tmax_occurrences_item = num;\n\t\t}\n\t}\n\treturn max_occurrences_item;\n}",
    "{\n\tlong max_count = 0;\n\tlong max_num = 0;\n\tforeach(num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(n; nums)\n\t\t{\n\t\t\tif(n == num)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max_count)\n\t\t{\n\t\t\tmax_count = count;\n\t\t\tmax_num = num;\n\t\t}\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max_count = 0;\n\tlong max_num = 0;\n\tlong[] counts = new long[nums.length];\n\tforeach(num; nums)\n\t{\n\t\tcounts[num]++;\n\t\tif(counts[num] > max_count)\n\t\t{\n\t\t\tmax_count = counts[num];\n\t\t\tmax_num = num;\n\t\t}\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_item = 0;\n\tlong[] occurrences = new long[nums.length];\n\t\n\tforeach(long num; nums)\n\t{\n\t\toccurrences[num]++;\n\t\tif(occurrences[num] > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences[num];\n\t\t\tmax_occurrences_item = num;\n\t\t}\n\t}\n\t\n\treturn max_occurrences_item;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_num = 0;\n\tlong[] occurrences = new long[nums.length];\n\t\n\tforeach(long num; nums)\n\t{\n\t\toccurrences[num]++;\n\t\tif(occurrences[num] > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences[num];\n\t\t\tmax_occurrences_num = num;\n\t\t}\n\t}\n\t\n\treturn max_occurrences_num;\n}",
    "{\n\tlong max_occur = 0;\n\tlong max_num = 0;\n\tlong[] counts = new long[nums.length];\n\t\n\tfor (long i = 0; i < nums.length; i++)\n\t{\n\t\tfor (long j = 0; j < nums.length; j++)\n\t\t{\n\t\t\tif (nums[i] == nums[j])\n\t\t\t{\n\t\t\t\tcounts[i]++;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (long i = 0; i < nums.length; i++)\n\t{\n\t\tif (counts[i] > max_occur)\n\t\t{\n\t\t\tmax_occur = counts[i];\n\t\t\tmax_num = nums[i];\n\t\t}\n\t}\n\t\n\treturn max_num;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_num = 0;\n\tlong[] occurrences = new long[nums.length];\n\t\n\tfor(long i = 0; i < nums.length; i++)\n\t{\n\t\tlong num = nums[i];\n\t\tlong num_occurrences = 0;\n\t\t\n\t\tfor(long j = 0; j < nums.length; j++)\n\t\t{\n\t\t\tif(num == nums[j])\n\t\t\t{\n\t\t\t\tnum_occurrences++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif(num_occurrences > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = num_occurrences;\n\t\t\tmax_occurrences_num = num;\n\t\t}\n\t}\n\t\n\treturn max_occurrences_num;\n}",
    "{\n\tlong max = 0;\n\tlong max_num = 0;\n\tforeach(num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(n; nums)\n\t\t{\n\t\t\tif(num == n)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tif(count > max)\n\t\t{\n\t\t\tmax = count;\n\t\t\tmax_num = num;\n\t\t}\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_number = 0;\n\tlong[] occurrences = new long[nums.length];\n\t\n\tforeach(i; 0 .. nums.length)\n\t{\n\t\tforeach(j; 0 .. nums.length)\n\t\t{\n\t\t\tif(nums[i] == nums[j])\n\t\t\t{\n\t\t\t\toccurrences[i]++;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tforeach(i; 0 .. occurrences.length)\n\t{\n\t\tif(occurrences[i] > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences[i];\n\t\t\tmax_number = nums[i];\n\t\t}\n\t}\n\t\n\treturn max_number;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_num = 0;\n\t\n\tforeach(num; nums)\n\t{\n\t\tlong num_occurrences = 0;\n\t\tforeach(n; nums)\n\t\t{\n\t\t\tif(num == n)\n\t\t\t\tnum_occurrences++;\n\t\t}\n\t\t\n\t\tif(num_occurrences > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = num_occurrences;\n\t\t\tmax_occurrences_num = num;\n\t\t}\n\t}\n\t\n\treturn max_occurrences_num;\n}",
    "{\n\tlong max = 0;\n\tlong max_num = 0;\n\tforeach(num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(n; nums)\n\t\t{\n\t\t\tif(n == num)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tif(count > max)\n\t\t{\n\t\t\tmax = count;\n\t\t\tmax_num = num;\n\t\t}\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max_count = 0;\n\tlong max_num = 0;\n\tforeach(num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(n; nums)\n\t\t{\n\t\t\tif(n == num)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max_count)\n\t\t{\n\t\t\tmax_count = count;\n\t\t\tmax_num = num;\n\t\t}\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max_count = 0;\n\tlong max_item = 0;\n\tlong[] counts = new long[nums.length];\n\t\n\tforeach(num; nums)\n\t{\n\t\tcounts[num]++;\n\t\tif(counts[num] > max_count)\n\t\t{\n\t\t\tmax_count = counts[num];\n\t\t\tmax_item = num;\n\t\t}\n\t}\n\t\n\treturn max_item;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_num = 0;\n\tlong[] occurrences = new long[nums.length];\n\t\n\tforeach(num; nums)\n\t{\n\t\toccurrences[num]++;\n\t\tif(occurrences[num] > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences[num];\n\t\t\tmax_occurrences_num = num;\n\t\t}\n\t}\n\t\n\treturn max_occurrences_num;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_item = 0;\n\tlong[] occurrences = new long[nums.length];\n\t\n\tforeach(long num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(long num2; nums)\n\t\t{\n\t\t\tif(num == num2)\n\t\t\t\tcount++;\n\t\t}\n\t\toccurrences[num] = count;\n\t\tif(count > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = count;\n\t\t\tmax_occurrences_item = num;\n\t\t}\n\t}\n\treturn max_occurrences_item;\n}",
    "{\n\tlong max = 0;\n\tlong max_count = 0;\n\tforeach(num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(n; nums)\n\t\t{\n\t\t\tif(n == num)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tif(count > max_count)\n\t\t{\n\t\t\tmax = num;\n\t\t\tmax_count = count;\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong max_count = 0;\n\tlong max_item = 0;\n\tforeach(num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(n; nums)\n\t\t{\n\t\t\tif(n == num)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max_count)\n\t\t{\n\t\t\tmax_count = count;\n\t\t\tmax_item = num;\n\t\t}\n\t}\n\treturn max_item;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_num = 0;\n\tlong[] occurrences = new long[nums.length];\n\tforeach(long num; nums)\n\t{\n\t\tlong occurrences_num = 0;\n\t\tforeach(long num2; nums)\n\t\t{\n\t\t\tif(num == num2)\n\t\t\t{\n\t\t\t\toccurrences_num++;\n\t\t\t}\n\t\t}\n\t\toccurrences[num] = occurrences_num;\n\t\tif(occurrences_num > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences_num;\n\t\t\tmax_occurrences_num = num;\n\t\t}\n\t}\n\treturn max_occurrences_num;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_num = 0;\n\tlong[] occurrences = new long[nums.length];\n\t\n\tforeach(long num; nums)\n\t{\n\t\toccurrences[num]++;\n\t\tif(occurrences[num] > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences[num];\n\t\t\tmax_occurrences_num = num;\n\t\t}\n\t}\n\t\n\treturn max_occurrences_num;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_num = 0;\n\tlong[] occurrences = new long[nums.length];\n\tforeach(num; nums)\n\t{\n\t\toccurrences[num]++;\n\t\tif(occurrences[num] > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences[num];\n\t\t\tmax_occurrences_num = num;\n\t\t}\n\t}\n\treturn max_occurrences_num;\n}",
    "{\n\tlong max = 0;\n\tlong max_occurrences = 0;\n\t\n\tforeach(num; nums)\n\t{\n\t\tlong occurrences = 0;\n\t\tforeach(n; nums)\n\t\t{\n\t\t\tif(num == n)\n\t\t\t\toccurrences++;\n\t\t}\n\t\tif(occurrences > max_occurrences)\n\t\t{\n\t\t\tmax = num;\n\t\t\tmax_occurrences = occurrences;\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tlong max_occurrences = 0;\n\tforeach(n; nums)\n\t{\n\t\tlong occurrences = 0;\n\t\tforeach(m; nums)\n\t\t{\n\t\t\tif(n == m)\n\t\t\t{\n\t\t\t\toccurrences++;\n\t\t\t}\n\t\t}\n\t\tif(occurrences > max_occurrences)\n\t\t{\n\t\t\tmax = n;\n\t\t\tmax_occurrences = occurrences;\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong max_count = 0;\n\tlong max_item = 0;\n\tforeach(n; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(m; nums)\n\t\t{\n\t\t\tif(m == n)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max_count)\n\t\t{\n\t\t\tmax_count = count;\n\t\t\tmax_item = n;\n\t\t}\n\t}\n\treturn max_item;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_value = 0;\n\tlong[] occurrences = new long[nums.length];\n\tforeach(long num; nums)\n\t{\n\t\toccurrences[num]++;\n\t\tif(occurrences[num] > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences[num];\n\t\t\tmax_occurrences_value = num;\n\t\t}\n\t}\n\treturn max_occurrences_value;\n}",
    "{\n\tlong max_count = 0;\n\tlong max_num = 0;\n\tlong[] counts = new long[nums.length];\n\t\n\tfor (long i = 0; i < nums.length; i++)\n\t{\n\t\tfor (long j = 0; j < nums.length; j++)\n\t\t{\n\t\t\tif (nums[i] == nums[j])\n\t\t\t{\n\t\t\t\tcounts[i]++;\n\t\t\t}\n\t\t}\n\t\tif (counts[i] > max_count)\n\t\t{\n\t\t\tmax_count = counts[i];\n\t\t\tmax_num = nums[i];\n\t\t}\n\t}\n\t\n\treturn max_num;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_num = 0;\n\tlong[] occurrences = new long[nums.length];\n\t\n\tfor (long i = 0; i < nums.length; i++)\n\t{\n\t\toccurrences[i] = 0;\n\t\tfor (long j = 0; j < nums.length; j++)\n\t\t{\n\t\t\tif (nums[i] == nums[j])\n\t\t\t{\n\t\t\t\toccurrences[i]++;\n\t\t\t}\n\t\t}\n\t\tif (occurrences[i] > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences[i];\n\t\t\tmax_occurrences_num = nums[i];\n\t\t}\n\t}\n\t\n\treturn max_occurrences_num;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_item = 0;\n\tlong[] occurrences = new long[nums.length];\n\t\n\tforeach(long num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(long num2; nums)\n\t\t{\n\t\t\tif(num == num2)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\toccurrences[num] = count;\n\t\tif(count > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = count;\n\t\t\tmax_occurrences_item = num;\n\t\t}\n\t}\n\t\n\treturn max_occurrences_item;\n}",
    "{\n\tlong max_count = 0;\n\tlong max_item = 0;\n\tforeach(num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(n; nums)\n\t\t{\n\t\t\tif(n == num)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max_count)\n\t\t{\n\t\t\tmax_count = count;\n\t\t\tmax_item = num;\n\t\t}\n\t}\n\treturn max_item;\n}",
    "{\n\tlong max = 0;\n\tlong max_count = 0;\n\tlong count = 0;\n\t\n\tforeach(n; nums)\n\t{\n\t\tcount = 0;\n\t\tforeach(m; nums)\n\t\t{\n\t\t\tif(n == m)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tif(count > max_count)\n\t\t{\n\t\t\tmax_count = count;\n\t\t\tmax = n;\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong max_count = 0;\n\tlong max_item = 0;\n\tlong[] counts = new long[nums.length];\n\tfor (long i = 0; i < nums.length; i++)\n\t{\n\t\tlong count = 0;\n\t\tfor (long j = 0; j < nums.length; j++)\n\t\t{\n\t\t\tif (nums[i] == nums[j])\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tcounts[i] = count;\n\t\tif (count > max_count)\n\t\t{\n\t\t\tmax_count = count;\n\t\t\tmax_item = nums[i];\n\t\t}\n\t}\n\treturn max_item;\n}",
    "{\n\tlong max_count = 0;\n\tlong max_item = 0;\n\tlong[] counts = new long[nums.length];\n\t\n\tforeach(long num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(long num2; nums)\n\t\t{\n\t\t\tif(num == num2)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tcounts[num] = count;\n\t\tif(count > max_count)\n\t\t{\n\t\t\tmax_count = count;\n\t\t\tmax_item = num;\n\t\t}\n\t}\n\treturn max_item;\n}",
    "{\n\tlong max_occur = 0;\n\tlong max_num = 0;\n\tlong[] counts = new long[nums.length];\n\t\n\tforeach(long num; nums)\n\t{\n\t\tcounts[num]++;\n\t\tif(counts[num] > max_occur)\n\t\t{\n\t\t\tmax_occur = counts[num];\n\t\t\tmax_num = num;\n\t\t}\n\t}\n\t\n\treturn max_num;\n}",
    "{\n\tlong max = 0;\n\tlong max_occurrences = 0;\n\tlong[] occurrences = new long[nums.length];\n\tforeach(num; nums)\n\t{\n\t\toccurrences[num]++;\n\t\tif(occurrences[num] > max_occurrences)\n\t\t{\n\t\t\tmax = num;\n\t\t\tmax_occurrences = occurrences[num];\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_item = 0;\n\t\n\tforeach(item; nums)\n\t{\n\t\tlong occurrences = 0;\n\t\tforeach(item2; nums)\n\t\t{\n\t\t\tif(item == item2)\n\t\t\t\toccurrences++;\n\t\t}\n\t\t\n\t\tif(occurrences > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences;\n\t\t\tmax_occurrences_item = item;\n\t\t}\n\t}\n\t\n\treturn max_occurrences_item;\n}",
    "{\n\tlong max = 0;\n\tlong max_occurrences = 0;\n\tforeach(num; nums)\n\t{\n\t\tlong occurrences = 0;\n\t\tforeach(n; nums)\n\t\t{\n\t\t\tif(n == num)\n\t\t\t\toccurrences++;\n\t\t}\n\t\tif(occurrences > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences;\n\t\t\tmax = num;\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_num = 0;\n\tlong[] occurrences = new long[nums.length];\n\t\n\tforeach(num; nums)\n\t{\n\t\toccurrences[num]++;\n\t\tif(occurrences[num] > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences[num];\n\t\t\tmax_occurrences_num = num;\n\t\t}\n\t}\n\t\n\treturn max_occurrences_num;\n}",
    "{\n\tlong max = 0;\n\tlong max_num = 0;\n\tforeach(num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(n; nums)\n\t\t{\n\t\t\tif(n == num)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max)\n\t\t{\n\t\t\tmax = count;\n\t\t\tmax_num = num;\n\t\t}\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max = 0;\n\tlong max_item = 0;\n\tforeach(item; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(i; nums)\n\t\t{\n\t\t\tif(i == item)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max)\n\t\t{\n\t\t\tmax = count;\n\t\t\tmax_item = item;\n\t\t}\n\t}\n\treturn max_item;\n}",
    "{\n\tlong max_count = 0;\n\tlong max_num = 0;\n\tforeach(num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(n; nums)\n\t\t{\n\t\t\tif(n == num)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max_count)\n\t\t{\n\t\t\tmax_count = count;\n\t\t\tmax_num = num;\n\t\t}\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_num = 0;\n\tlong[] occurrences = new long[nums.length];\n\t\n\tforeach(num; nums)\n\t{\n\t\toccurrences[num]++;\n\t\tif(occurrences[num] > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences[num];\n\t\t\tmax_occurrences_num = num;\n\t\t}\n\t}\n\t\n\treturn max_occurrences_num;\n}",
    "{\n\tlong max = 0;\n\tlong max_count = 0;\n\tlong count = 0;\n\tforeach(n; nums)\n\t{\n\t\tcount = 0;\n\t\tforeach(m; nums)\n\t\t{\n\t\t\tif(n == m)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tif(count > max_count)\n\t\t{\n\t\t\tmax_count = count;\n\t\t\tmax = n;\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_item = 0;\n\t\n\tforeach(item; nums)\n\t{\n\t\tlong occurrences = 0;\n\t\tforeach(item_2; nums)\n\t\t{\n\t\t\tif(item == item_2)\n\t\t\t{\n\t\t\t\toccurrences++;\n\t\t\t}\n\t\t}\n\t\tif(occurrences > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences;\n\t\t\tmax_occurrences_item = item;\n\t\t}\n\t}\n\treturn max_occurrences_item;\n}",
    "{\n\tlong max_count = 0;\n\tlong max_item = 0;\n\tforeach(n; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(m; nums)\n\t\t{\n\t\t\tif(n == m)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max_count)\n\t\t{\n\t\t\tmax_count = count;\n\t\t\tmax_item = n;\n\t\t}\n\t}\n\treturn max_item;\n}",
    "{\n\tlong max = 0;\n\tlong max_num = 0;\n\tlong[] counts = new long[nums.length];\n\t\n\tforeach(num; nums)\n\t{\n\t\tcounts[num]++;\n\t}\n\t\n\tforeach(num; counts)\n\t{\n\t\tif(num > max)\n\t\t{\n\t\t\tmax = num;\n\t\t\tmax_num = num;\n\t\t}\n\t}\n\t\n\treturn max_num;\n}",
    "{\n\tlong max = 0;\n\tlong max_occurrences = 0;\n\tlong[] occurrences = new long[nums.length];\n\t\n\tforeach(n; nums)\n\t{\n\t\toccurrences[n]++;\n\t\tif(occurrences[n] > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences[n];\n\t\t\tmax = n;\n\t\t}\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tlong max_num = 0;\n\tforeach(n; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(m; nums)\n\t\t{\n\t\t\tif(n == m)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max)\n\t\t{\n\t\t\tmax = count;\n\t\t\tmax_num = n;\n\t\t}\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_value = 0;\n\tlong[] occurrences = new long[nums.length];\n\t\n\tforeach(long num; nums)\n\t{\n\t\toccurrences[num]++;\n\t\tif(occurrences[num] > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences[num];\n\t\t\tmax_occurrences_value = num;\n\t\t}\n\t}\n\t\n\treturn max_occurrences_value;\n}",
    "{\n\tlong max = 0;\n\tlong max_num = 0;\n\tforeach(num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(n; nums)\n\t\t{\n\t\t\tif(n == num)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max)\n\t\t{\n\t\t\tmax = count;\n\t\t\tmax_num = num;\n\t\t}\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max = 0;\n\tlong max_item = 0;\n\tlong[] counts;\n\t\n\tcounts = new long[nums.length];\n\t\n\tforeach(long num; nums)\n\t{\n\t\tcounts[num]++;\n\t}\n\t\n\tforeach(long count; counts)\n\t{\n\t\tif(count > max)\n\t\t{\n\t\t\tmax = count;\n\t\t\tmax_item = count;\n\t\t}\n\t}\n\t\n\treturn max_item;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_num = 0;\n\tlong[] occurrences = new long[nums.length];\n\t\n\tforeach(num; nums)\n\t{\n\t\toccurrences[num]++;\n\t\tif(occurrences[num] > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences[num];\n\t\t\tmax_occurrences_num = num;\n\t\t}\n\t}\n\t\n\treturn max_occurrences_num;\n}",
    "{\n\tlong max = 0;\n\tlong max_count = 0;\n\tforeach(long num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(long num2; nums)\n\t\t{\n\t\t\tif(num == num2)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tif(count > max_count)\n\t\t{\n\t\t\tmax_count = count;\n\t\t\tmax = num;\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tlong max_num = 0;\n\tforeach(num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(n; nums)\n\t\t{\n\t\t\tif(n == num)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max)\n\t\t{\n\t\t\tmax = count;\n\t\t\tmax_num = num;\n\t\t}\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_num = 0;\n\tlong[] occurrences = new long[nums.length];\n\tforeach(num; nums)\n\t{\n\t\toccurrences[num]++;\n\t\tif(occurrences[num] > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences[num];\n\t\t\tmax_occurrences_num = num;\n\t\t}\n\t}\n\treturn max_occurrences_num;\n}",
    "{\n\tlong max_count = 0;\n\tlong max_num = 0;\n\tforeach(num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(n; nums)\n\t\t{\n\t\t\tif(n == num)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max_count)\n\t\t{\n\t\t\tmax_count = count;\n\t\t\tmax_num = num;\n\t\t}\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_item = 0;\n\tlong[] occurrences = new long[nums.length];\n\t\n\tforeach(num; nums)\n\t{\n\t\toccurrences[num]++;\n\t\tif(occurrences[num] > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences[num];\n\t\t\tmax_occurrences_item = num;\n\t\t}\n\t}\n\t\n\treturn max_occurrences_item;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_item = 0;\n\t\n\tforeach(long num; nums)\n\t{\n\t\tlong occurrences = count(nums, num);\n\t\tif(occurrences > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences;\n\t\t\tmax_occurrences_item = num;\n\t\t}\n\t}\n\t\n\treturn max_occurrences_item;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_num = 0;\n\tlong[] occurrences = new long[nums.length];\n\t\n\tforeach(num; nums)\n\t{\n\t\toccurrences[num]++;\n\t\tif(occurrences[num] > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences[num];\n\t\t\tmax_occurrences_num = num;\n\t\t}\n\t}\n\t\n\treturn max_occurrences_num;\n}",
    "{\n\tlong max_count = 0;\n\tlong max_item = 0;\n\tforeach(num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(n; nums)\n\t\t{\n\t\t\tif(n == num)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max_count)\n\t\t{\n\t\t\tmax_count = count;\n\t\t\tmax_item = num;\n\t\t}\n\t}\n\treturn max_item;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_item = 0;\n\t\n\tforeach(long num; nums)\n\t{\n\t\tlong occurrences = 0;\n\t\tforeach(long num2; nums)\n\t\t{\n\t\t\tif(num == num2)\n\t\t\t{\n\t\t\t\toccurrences++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif(occurrences > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences;\n\t\t\tmax_occurrences_item = num;\n\t\t}\n\t}\n\t\n\treturn max_occurrences_item;\n}",
    "{\n\tlong max_count = 0;\n\tlong max_item = 0;\n\tforeach(long num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(long num2; nums)\n\t\t{\n\t\t\tif(num == num2)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max_count)\n\t\t{\n\t\t\tmax_count = count;\n\t\t\tmax_item = num;\n\t\t}\n\t}\n\treturn max_item;\n}",
    "{\n\tlong max = 0;\n\tlong max_num = 0;\n\tforeach(num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(num2; nums)\n\t\t{\n\t\t\tif(num == num2)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max)\n\t\t{\n\t\t\tmax = count;\n\t\t\tmax_num = num;\n\t\t}\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max_count = 0;\n\tlong max_item = 0;\n\tlong[] counts = new long[nums.length];\n\t\n\tfor (long i = 0; i < nums.length; i++)\n\t{\n\t\tlong count = 0;\n\t\tfor (long j = 0; j < nums.length; j++)\n\t\t{\n\t\t\tif (nums[j] == nums[i])\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tcounts[i] = count;\n\t\tif (count > max_count)\n\t\t{\n\t\t\tmax_count = count;\n\t\t\tmax_item = nums[i];\n\t\t}\n\t}\n\t\n\treturn max_item;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_item = 0;\n\tlong[] occurrences = new long[nums.length];\n\t\n\tforeach(long num; nums)\n\t{\n\t\toccurrences[num]++;\n\t}\n\t\n\tforeach(long num; occurrences)\n\t{\n\t\tif(num > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = num;\n\t\t\tmax_item = occurrences.indexof(num);\n\t\t}\n\t}\n\t\n\treturn max_item;\n}",
    "{\n\tlong max = 0;\n\tlong max_occurrences = 0;\n\tforeach(num; nums)\n\t{\n\t\tlong occurrences = count(nums, num);\n\t\tif(occurrences > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences;\n\t\t\tmax = num;\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong max_count = 0;\n\tlong max_item = 0;\n\tlong[] counts = new long[nums.length];\n\tforeach(long num; nums)\n\t{\n\t\tcounts[num]++;\n\t\tif(counts[num] > max_count)\n\t\t{\n\t\t\tmax_count = counts[num];\n\t\t\tmax_item = num;\n\t\t}\n\t}\n\treturn max_item;\n}",
    "{\n\tlong max = 0;\n\tlong max_num = 0;\n\tforeach(num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(n; nums)\n\t\t{\n\t\t\tif(n == num)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tif(count > max)\n\t\t{\n\t\t\tmax = count;\n\t\t\tmax_num = num;\n\t\t}\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max = 0;\n\tlong max_num = 0;\n\tlong[] counts;\n\tcounts = new long[nums.length];\n\tforeach(long num; nums)\n\t{\n\t\tcounts[num]++;\n\t}\n\tforeach(long count; counts)\n\t{\n\t\tif(count > max)\n\t\t{\n\t\t\tmax = count;\n\t\t\tmax_num = num;\n\t\t}\n\t}\n\treturn max_num;\n}",
    "{\n\tlong[] counts = new long[nums.length];\n\tlong max = 0;\n\tlong max_count = 0;\n\t\n\tfor (int i = 0; i < nums.length; i++)\n\t{\n\t\tcounts[i] = 0;\n\t\tfor (int j = 0; j < nums.length; j++)\n\t\t{\n\t\t\tif (nums[i] == nums[j])\n\t\t\t{\n\t\t\t\tcounts[i]++;\n\t\t\t}\n\t\t}\n\t\tif (counts[i] > max_count)\n\t\t{\n\t\t\tmax = nums[i];\n\t\t\tmax_count = counts[i];\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong max_count = 0;\n\tlong max_num = 0;\n\tlong[] counts = new long[nums.length];\n\t\n\tforeach(num; nums)\n\t{\n\t\tcounts[num]++;\n\t}\n\t\n\tforeach(num; nums)\n\t{\n\t\tif(counts[num] > max_count)\n\t\t{\n\t\t\tmax_count = counts[num];\n\t\t\tmax_num = num;\n\t\t}\n\t}\n\t\n\treturn max_num;\n}",
    "{\n\tlong max = 0;\n\tlong max_occur = 0;\n\tforeach(n; nums)\n\t{\n\t\tlong occur = 0;\n\t\tforeach(m; nums)\n\t\t{\n\t\t\tif(n == m)\n\t\t\t\toccur++;\n\t\t}\n\t\tif(occur > max_occur)\n\t\t{\n\t\t\tmax_occur = occur;\n\t\t\tmax = n;\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong max_count = 0;\n\tlong max_num = 0;\n\tlong[] counts = new long[nums.length];\n\tlong[] nums_copy = nums;\n\t\n\tforeach(num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(num_copy; nums_copy)\n\t\t{\n\t\t\tif(num == num_copy)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tcounts[num] = count;\n\t}\n\t\n\tforeach(count; counts)\n\t{\n\t\tif(count > max_count)\n\t\t{\n\t\t\tmax_count = count;\n\t\t\tmax_num = num;\n\t\t}\n\t}\n\t\n\treturn max_num;\n}",
    "{\n\tlong max_occur = 0;\n\tlong max_num = 0;\n\tlong[] occur = new long[nums.length];\n\tforeach(num; nums)\n\t{\n\t\toccur[num]++;\n\t}\n\tforeach(num; occur)\n\t{\n\t\tif(num > max_occur)\n\t\t{\n\t\t\tmax_occur = num;\n\t\t\tmax_num = occur.indexof(num);\n\t\t}\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max_count = 0;\n\tlong max_item = 0;\n\t\n\tforeach(item; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(i; nums)\n\t\t{\n\t\t\tif(i == item)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max_count)\n\t\t{\n\t\t\tmax_count = count;\n\t\t\tmax_item = item;\n\t\t}\n\t}\n\treturn max_item;\n}",
    "{\n\tlong[] counts = new long[nums.length];\n\tlong max_count = 0;\n\tlong max_index = 0;\n\tfor (long i = 0; i < nums.length; i++)\n\t{\n\t\tcounts[i] = 0;\n\t\tfor (long j = 0; j < nums.length; j++)\n\t\t{\n\t\t\tif (nums[i] == nums[j])\n\t\t\t{\n\t\t\t\tcounts[i]++;\n\t\t\t}\n\t\t}\n\t\tif (counts[i] > max_count)\n\t\t{\n\t\t\tmax_count = counts[i];\n\t\t\tmax_index = i;\n\t\t}\n\t}\n\treturn nums[max_index];\n}",
    "{\n\tlong max_occur = 0;\n\tlong max_num = 0;\n\tlong[] occur = new long[nums.length];\n\tfor (long i = 0; i < nums.length; i++)\n\t{\n\t\tfor (long j = 0; j < nums.length; j++)\n\t\t{\n\t\t\tif (nums[i] == nums[j])\n\t\t\t{\n\t\t\t\toccur[i]++;\n\t\t\t}\n\t\t}\n\t\tif (occur[i] > max_occur)\n\t\t{\n\t\t\tmax_occur = occur[i];\n\t\t\tmax_num = nums[i];\n\t\t}\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max_num = 0;\n\tlong max_count = 0;\n\tlong[] counts = new long[nums.length];\n\t\n\tforeach(num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(n; nums)\n\t\t{\n\t\t\tif(num == n)\n\t\t\t\tcount++;\n\t\t}\n\t\tcounts[num] = count;\n\t\tif(count > max_count)\n\t\t{\n\t\t\tmax_count = count;\n\t\t\tmax_num = num;\n\t\t}\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max = 0;\n\tlong max_num = 0;\n\tforeach(num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(n; nums)\n\t\t{\n\t\t\tif(n == num)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max)\n\t\t{\n\t\t\tmax = count;\n\t\t\tmax_num = num;\n\t\t}\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max = 0;\n\tlong max_num = 0;\n\tforeach(num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(n; nums)\n\t\t{\n\t\t\tif(n == num)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max)\n\t\t{\n\t\t\tmax = count;\n\t\t\tmax_num = num;\n\t\t}\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_num = 0;\n\tlong[] occurrences = new long[nums.length];\n\t\n\tforeach(num; nums)\n\t{\n\t\toccurrences[num]++;\n\t\tif(occurrences[num] > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences[num];\n\t\t\tmax_occurrences_num = num;\n\t\t}\n\t}\n\t\n\treturn max_occurrences_num;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_num = 0;\n\tlong[] occurrences = new long[nums.length];\n\t\n\tforeach(long num; nums)\n\t{\n\t\toccurrences[num]++;\n\t\tif(occurrences[num] > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences[num];\n\t\t\tmax_occurrences_num = num;\n\t\t}\n\t}\n\t\n\treturn max_occurrences_num;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_num = 0;\n\t\n\tforeach(num; nums)\n\t{\n\t\tlong occurrences = 0;\n\t\tforeach(n; nums)\n\t\t{\n\t\t\tif(num == n)\n\t\t\t\toccurrences++;\n\t\t}\n\t\tif(occurrences > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences;\n\t\t\tmax_occurrences_num = num;\n\t\t}\n\t}\n\t\n\treturn max_occurrences_num;\n}",
    "{\n\tlong max = 0;\n\tlong max_count = 0;\n\tlong count = 0;\n\tforeach(num; nums)\n\t{\n\t\tcount = 0;\n\t\tforeach(n; nums)\n\t\t{\n\t\t\tif(n == num)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max_count)\n\t\t{\n\t\t\tmax = num;\n\t\t\tmax_count = count;\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_num = 0;\n\tlong[] occurrences = new long[nums.length];\n\t\n\tforeach(long num; nums)\n\t{\n\t\toccurrences[num]++;\n\t\tif(occurrences[num] > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences[num];\n\t\t\tmax_occurrences_num = num;\n\t\t}\n\t}\n\t\n\treturn max_occurrences_num;\n}",
    "{\n\tlong max = 0;\n\tlong max_num = 0;\n\tforeach(num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(n; nums)\n\t\t{\n\t\t\tif(n == num)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max)\n\t\t{\n\t\t\tmax = count;\n\t\t\tmax_num = num;\n\t\t}\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_num = 0;\n\tlong[] occurrences = new long[nums.length];\n\tforeach (num; nums)\n\t{\n\t\tlong occurrences_num = 0;\n\t\tforeach (num_; nums)\n\t\t{\n\t\t\tif (num == num_)\n\t\t\t{\n\t\t\t\toccurrences_num++;\n\t\t\t}\n\t\t}\n\t\toccurrences[num] = occurrences_num;\n\t\tif (occurrences_num > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences_num;\n\t\t\tmax_occurrences_num = num;\n\t\t}\n\t}\n\treturn max_occurrences_num;\n}",
    "{\n\tlong max_count = 0;\n\tlong max_item = 0;\n\tforeach(item; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(i; nums)\n\t\t{\n\t\t\tif(item == i)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max_count)\n\t\t{\n\t\t\tmax_count = count;\n\t\t\tmax_item = item;\n\t\t}\n\t}\n\treturn max_item;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_num = 0;\n\tlong[] occurrences = new long[nums.length];\n\t\n\tforeach(long num; nums)\n\t{\n\t\toccurrences[num]++;\n\t\tif(occurrences[num] > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences[num];\n\t\t\tmax_occurrences_num = num;\n\t\t}\n\t}\n\t\n\treturn max_occurrences_num;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_item = 0;\n\tlong[] occurrences = new long[nums.length];\n\t\n\tforeach(long num; nums)\n\t{\n\t\toccurrences[num]++;\n\t}\n\t\n\tforeach(long num; nums)\n\t{\n\t\tif(occurrences[num] > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences[num];\n\t\t\tmax_occurrences_item = num;\n\t\t}\n\t}\n\t\n\treturn max_occurrences_item;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_item = 0;\n\tlong[] occurrences = new long[nums.length];\n\t\n\tforeach(long num; nums)\n\t{\n\t\toccurrences[num]++;\n\t}\n\t\n\tforeach(long num; occurrences)\n\t{\n\t\tif(num > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = num;\n\t\t\tmax_occurrences_item = num;\n\t\t}\n\t}\n\t\n\treturn max_occurrences_item;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_num = 0;\n\tlong[] occurrences = new long[nums.length];\n\t\n\tforeach(num; nums)\n\t{\n\t\toccurrences[num]++;\n\t\tif(occurrences[num] > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences[num];\n\t\t\tmax_occurrences_num = num;\n\t\t}\n\t}\n\t\n\treturn max_occurrences_num;\n}",
    "{\n\tlong max = 0;\n\tlong max_num = 0;\n\tforeach(num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(n; nums)\n\t\t{\n\t\t\tif(n == num)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max)\n\t\t{\n\t\t\tmax = count;\n\t\t\tmax_num = num;\n\t\t}\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max_count = 0;\n\tlong max_num = 0;\n\t\n\tforeach(num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(n; nums)\n\t\t{\n\t\t\tif(num == n)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max_count)\n\t\t{\n\t\t\tmax_count = count;\n\t\t\tmax_num = num;\n\t\t}\n\t}\n\t\n\treturn max_num;\n}",
    "{\n\tlong max = 0;\n\tlong max_count = 0;\n\tlong count = 0;\n\t\n\tforeach(num; nums)\n\t{\n\t\tcount = 0;\n\t\tforeach(n; nums)\n\t\t{\n\t\t\tif(num == n)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max_count)\n\t\t{\n\t\t\tmax_count = count;\n\t\t\tmax = num;\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_item = 0;\n\t\n\tforeach(num; nums)\n\t{\n\t\tlong occurrences = 0;\n\t\tforeach(num2; nums)\n\t\t{\n\t\t\tif(num == num2)\n\t\t\t{\n\t\t\t\toccurrences++;\n\t\t\t}\n\t\t}\n\t\tif(occurrences > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences;\n\t\t\tmax_occurrences_item = num;\n\t\t}\n\t}\n\treturn max_occurrences_item;\n}",
    "{\n\tlong max = 0;\n\tlong max_occurrences = 0;\n\tlong[] occurrences = new long[nums.length];\n\t\n\tforeach(num; nums)\n\t{\n\t\toccurrences[num]++;\n\t}\n\t\n\tforeach(occurrence; occurrences)\n\t{\n\t\tif(occurrence > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrence;\n\t\t\tmax = occurrences.indexof(occurrence);\n\t\t}\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong max_count = 0;\n\tlong max_item = 0;\n\t\n\tforeach(long num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(long num2; nums)\n\t\t{\n\t\t\tif(num == num2)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max_count)\n\t\t{\n\t\t\tmax_count = count;\n\t\t\tmax_item = num;\n\t\t}\n\t}\n\t\n\treturn max_item;\n}",
    "{\n\tlong[] counts = new long[nums.length];\n\tlong max = 0;\n\tlong max_index = 0;\n\tfor (long i = 0; i < nums.length; i++)\n\t{\n\t\tfor (long j = 0; j < nums.length; j++)\n\t\t{\n\t\t\tif (nums[i] == nums[j])\n\t\t\t{\n\t\t\t\tcounts[i]++;\n\t\t\t}\n\t\t}\n\t\tif (counts[i] > max)\n\t\t{\n\t\t\tmax = counts[i];\n\t\t\tmax_index = i;\n\t\t}\n\t}\n\treturn nums[max_index];\n}",
    "{\n\tlong max_num = 0;\n\tlong max_count = 0;\n\tforeach(num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(n; nums)\n\t\t{\n\t\t\tif(n == num)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max_count)\n\t\t{\n\t\t\tmax_count = count;\n\t\t\tmax_num = num;\n\t\t}\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max_count = 0;\n\tlong max_item = 0;\n\tforeach(n; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(m; nums)\n\t\t{\n\t\t\tif(n == m)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tif(count > max_count)\n\t\t{\n\t\t\tmax_count = count;\n\t\t\tmax_item = n;\n\t\t}\n\t}\n\treturn max_item;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_item = 0;\n\tforeach(long num; nums)\n\t{\n\t\tlong occurrences = 0;\n\t\tforeach(long num2; nums)\n\t\t{\n\t\t\tif(num == num2)\n\t\t\t{\n\t\t\t\toccurrences++;\n\t\t\t}\n\t\t}\n\t\tif(occurrences > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences;\n\t\t\tmax_occurrences_item = num;\n\t\t}\n\t}\n\treturn max_occurrences_item;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_num = 0;\n\tlong[] occurrences = new long[nums.length];\n\t\n\tforeach(num; nums)\n\t{\n\t\toccurrences[num]++;\n\t\tif(occurrences[num] > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences[num];\n\t\t\tmax_occurrences_num = num;\n\t\t}\n\t}\n\t\n\treturn max_occurrences_num;\n}",
    "{\n\tlong max_count = 0;\n\tlong max_item = 0;\n\tlong count = 0;\n\t\n\tforeach(long num; nums)\n\t{\n\t\tcount = 0;\n\t\tforeach(long num2; nums)\n\t\t{\n\t\t\tif(num == num2)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max_count)\n\t\t{\n\t\t\tmax_count = count;\n\t\t\tmax_item = num;\n\t\t}\n\t}\n\treturn max_item;\n}",
    "{\n\tlong max_count = 0;\n\tlong max_num = 0;\n\tlong[] counts = new long[nums.length];\n\tfor (long i = 0; i < nums.length; i++)\n\t{\n\t\tcounts[i] = 0;\n\t\tfor (long j = 0; j < nums.length; j++)\n\t\t{\n\t\t\tif (nums[i] == nums[j])\n\t\t\t{\n\t\t\t\tcounts[i]++;\n\t\t\t}\n\t\t}\n\t\tif (counts[i] > max_count)\n\t\t{\n\t\t\tmax_count = counts[i];\n\t\t\tmax_num = nums[i];\n\t\t}\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max = 0;\n\tlong max_count = 0;\n\tforeach(num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(n; nums)\n\t\t{\n\t\t\tif(n == num)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tif(count > max_count)\n\t\t{\n\t\t\tmax_count = count;\n\t\t\tmax = num;\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_num = 0;\n\tlong[] occurrences = new long[nums.length];\n\t\n\tforeach(num; nums)\n\t{\n\t\toccurrences[num]++;\n\t\tif(occurrences[num] > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences[num];\n\t\t\tmax_occurrences_num = num;\n\t\t}\n\t}\n\t\n\treturn max_occurrences_num;\n}",
    "{\n\tlong max = 0;\n\tlong max_count = 0;\n\tforeach(num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(n; nums)\n\t\t{\n\t\t\tif(n == num)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max_count)\n\t\t{\n\t\t\tmax = num;\n\t\t\tmax_count = count;\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_num = 0;\n\tlong[] occurrences = new long[nums.length];\n\tforeach(num; nums)\n\t{\n\t\toccurrences[num]++;\n\t}\n\tforeach(num; nums)\n\t{\n\t\tif(occurrences[num] > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences[num];\n\t\t\tmax_occurrences_num = num;\n\t\t}\n\t}\n\treturn max_occurrences_num;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_num = 0;\n\t\n\tforeach(num; nums)\n\t{\n\t\tlong occurrences = 0;\n\t\tforeach(num2; nums)\n\t\t{\n\t\t\tif(num == num2)\n\t\t\t{\n\t\t\t\toccurrences++;\n\t\t\t}\n\t\t}\n\t\tif(occurrences > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences;\n\t\t\tmax_occurrences_num = num;\n\t\t}\n\t}\n\treturn max_occurrences_num;\n}",
    "{\n\tlong max_count = 0;\n\tlong max_num = 0;\n\tforeach(num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(n; nums)\n\t\t{\n\t\t\tif(num == n)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max_count)\n\t\t{\n\t\t\tmax_count = count;\n\t\t\tmax_num = num;\n\t\t}\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max = 0;\n\tlong max_occurrences = 0;\n\tforeach(num; nums)\n\t{\n\t\tlong occurrences = 0;\n\t\tforeach(n; nums)\n\t\t{\n\t\t\tif(n == num)\n\t\t\t{\n\t\t\t\toccurrences++;\n\t\t\t}\n\t\t}\n\t\tif(occurrences > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences;\n\t\t\tmax = num;\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong max_count = 0;\n\tlong max_num = 0;\n\tforeach(num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(n; nums)\n\t\t{\n\t\t\tif(n == num)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max_count)\n\t\t{\n\t\t\tmax_count = count;\n\t\t\tmax_num = num;\n\t\t}\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max = 0;\n\tlong max_count = 0;\n\tlong count = 0;\n\t\n\tforeach(long num; nums)\n\t{\n\t\tcount = 0;\n\t\tforeach(long num2; nums)\n\t\t{\n\t\t\tif(num == num2)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max_count)\n\t\t{\n\t\t\tmax_count = count;\n\t\t\tmax = num;\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_item = 0;\n\tlong[] occurrences = new long[nums.length];\n\tforeach(long num; nums)\n\t{\n\t\toccurrences[num]++;\n\t\tif(occurrences[num] > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences[num];\n\t\t\tmax_occurrences_item = num;\n\t\t}\n\t}\n\treturn max_occurrences_item;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_num = 0;\n\tlong[] occurrences = new long[nums.length];\n\tforeach(long num; nums)\n\t{\n\t\toccurrences[num]++;\n\t\tif(occurrences[num] > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences[num];\n\t\t\tmax_occurrences_num = num;\n\t\t}\n\t}\n\treturn max_occurrences_num;\n}",
    "{\n\tlong max_count = 0;\n\tlong max_num = 0;\n\tlong[] counts = new long[nums.length];\n\t\n\tforeach(num; nums)\n\t{\n\t\tcounts[num]++;\n\t\tif(counts[num] > max_count)\n\t\t{\n\t\t\tmax_count = counts[num];\n\t\t\tmax_num = num;\n\t\t}\n\t}\n\t\n\treturn max_num;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_item = 0;\n\tlong[] occurrences = new long[nums.length];\n\tlong[] items = new long[nums.length];\n\tlong occurrences_index = 0;\n\tlong items_index = 0;\n\t\n\tfor (long i = 0; i < nums.length; i++)\n\t{\n\t\tlong item = nums[i];\n\t\tlong occurrences_count = 0;\n\t\t\n\t\tfor (long j = 0; j < nums.length; j++)\n\t\t{\n\t\t\tif (item == nums[j])\n\t\t\t{\n\t\t\t\toccurrences_count++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (occurrences_count > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences_count;\n\t\t\tmax_occurrences_item = item;\n\t\t}\n\t\t\n\t\tif (occurrences_index == 0)\n\t\t{\n\t\t\toccurrences[occurrences_index] = occurrences_count;\n\t\t\titems[items_index] = item;\n\t\t\toccurrences_index++;\n\t\t\titems_index++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbool found = false;\n\t\t\tfor (long k = 0; k < occurrences_index; k++)\n\t\t\t{\n\t\t\t\tif (occurrences[k] == occurrences_count && items[k] == item)\n\t\t\t\t{\n\t\t\t\t\tfound = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (!found)\n\t\t\t{\n\t\t\t\toccurrences[occurrences_index] = occurrences_count;\n\t\t\t\titems[items_index] = item;\n\t\t\t\toccurrences_index++;\n\t\t\t\titems_index++;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn max_occurrences_item;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_num = 0;\n\t\n\tforeach(num; nums)\n\t{\n\t\tlong occurrences = 0;\n\t\tforeach(num_; nums)\n\t\t{\n\t\t\tif(num == num_)\n\t\t\t\toccurrences++;\n\t\t}\n\t\tif(occurrences > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences;\n\t\t\tmax_occurrences_num = num;\n\t\t}\n\t}\n\treturn max_occurrences_num;\n}",
    "{\n\tlong max_count = 0;\n\tlong max_item = 0;\n\tforeach(num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(n; nums)\n\t\t{\n\t\t\tif(num == n)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max_count)\n\t\t{\n\t\t\tmax_count = count;\n\t\t\tmax_item = num;\n\t\t}\n\t}\n\treturn max_item;\n}",
    "{\n\tlong max_count = 0;\n\tlong max_num = 0;\n\tlong count = 0;\n\tlong num = 0;\n\t\n\tforeach(num; nums)\n\t{\n\t\tcount = 0;\n\t\tforeach(n; nums)\n\t\t{\n\t\t\tif(n == num)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tif(count > max_count)\n\t\t{\n\t\t\tmax_count = count;\n\t\t\tmax_num = num;\n\t\t}\n\t}\n\t\n\treturn max_num;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_number = 0;\n\tlong[] occurrences = new long[nums.length];\n\t\n\tforeach(long num; nums)\n\t{\n\t\toccurrences[num]++;\n\t\tif(occurrences[num] > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences[num];\n\t\t\tmax_occurrences_number = num;\n\t\t}\n\t}\n\t\n\treturn max_occurrences_number;\n}",
    "{\n\tlong max_num = 0;\n\tlong max_count = 0;\n\tlong curr_num = 0;\n\tlong curr_count = 0;\n\t\n\tforeach(num; nums)\n\t{\n\t\tif (num == curr_num)\n\t\t{\n\t\t\tcurr_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcurr_num = num;\n\t\t\tcurr_count = 1;\n\t\t}\n\t\t\n\t\tif (curr_count > max_count)\n\t\t{\n\t\t\tmax_num = curr_num;\n\t\t\tmax_count = curr_count;\n\t\t}\n\t}\n\t\n\treturn max_num;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_num = 0;\n\tlong[] occurrences = new long[nums.length];\n\t\n\tforeach(num; nums)\n\t{\n\t\toccurrences[num]++;\n\t}\n\t\n\tforeach(num; occurrences)\n\t{\n\t\tif(num > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = num;\n\t\t\tmax_occurrences_num = occurrences.indexof(num);\n\t\t}\n\t}\n\t\n\treturn max_occurrences_num;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_num = 0;\n\tlong[] occurrences = new long[nums.length];\n\t\n\tforeach(num; nums)\n\t{\n\t\toccurrences[num]++;\n\t}\n\t\n\tforeach(num; occurrences)\n\t{\n\t\tif(num > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = num;\n\t\t\tmax_occurrences_num = occurrences.indexof(num);\n\t\t}\n\t}\n\t\n\treturn max_occurrences_num;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_item = 0;\n\tlong[] occurrences = new long[nums.length];\n\tlong[] items = new long[nums.length];\n\tlong occurrences_index = 0;\n\tlong items_index = 0;\n\t\n\tforeach(long num; nums)\n\t{\n\t\tlong item_index = 0;\n\t\tbool found = false;\n\t\tforeach(long item; items)\n\t\t{\n\t\t\tif(item == num)\n\t\t\t{\n\t\t\t\toccurrences[item_index]++;\n\t\t\t\tfound = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\titem_index++;\n\t\t}\n\t\t\n\t\tif(!found)\n\t\t{\n\t\t\titems[items_index] = num;\n\t\t\toccurrences[occurrences_index]++;\n\t\t\titems_index++;\n\t\t\toccurrences_index++;\n\t\t}\n\t}\n\t\n\tlong max_occurrences_index = 0;\n\tforeach(long occurrence; occurrences)\n\t{\n\t\tif(occurrence > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrence;\n\t\t\tmax_occurrences_item = items[max_occurrences_index];\n\t\t}\n\t\tmax_occurrences_index++;\n\t}\n\t\n\treturn max_occurrences_item;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_num = 0;\n\tlong[] occurrences = new long[nums.length];\n\t\n\tforeach(num; nums)\n\t{\n\t\toccurrences[num]++;\n\t\tif(occurrences[num] > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences[num];\n\t\t\tmax_num = num;\n\t\t}\n\t}\n\t\n\treturn max_num;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_value = 0;\n\tlong[] occurrences = new long[nums.length];\n\tforeach(num; nums)\n\t{\n\t\toccurrences[num]++;\n\t\tif(occurrences[num] > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences[num];\n\t\t\tmax_occurrences_value = num;\n\t\t}\n\t}\n\treturn max_occurrences_value;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_item = 0;\n\tlong[] occurrences = new long[nums.length];\n\t\n\tforeach(num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(num2; nums)\n\t\t{\n\t\t\tif(num == num2)\n\t\t\t\tcount++;\n\t\t}\n\t\toccurrences[num] = count;\n\t}\n\t\n\tforeach(occurrence; occurrences)\n\t{\n\t\tif(occurrence > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrence;\n\t\t\tmax_occurrences_item = num;\n\t\t}\n\t}\n\t\n\treturn max_occurrences_item;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_num = 0;\n\tlong[] occurrences = new long[nums.length];\n\tforeach(num; nums)\n\t{\n\t\toccurrences[num]++;\n\t\tif(occurrences[num] > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences[num];\n\t\t\tmax_occurrences_num = num;\n\t\t}\n\t}\n\treturn max_occurrences_num;\n}",
    "{\n\tlong max = 0;\n\tlong max_num = 0;\n\tlong[] num_counts = new long[nums.length];\n\t\n\tforeach(num; nums)\n\t{\n\t\tnum_counts[num]++;\n\t\tif(num_counts[num] > max)\n\t\t{\n\t\t\tmax = num_counts[num];\n\t\t\tmax_num = num;\n\t\t}\n\t}\n\t\n\treturn max_num;\n}",
    "{\n\tlong max = 0;\n\tlong max_num = 0;\n\tforeach(num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(n; nums)\n\t\t{\n\t\t\tif(num == n)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max)\n\t\t{\n\t\t\tmax = count;\n\t\t\tmax_num = num;\n\t\t}\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max = 0;\n\tlong max_count = 0;\n\tlong count = 0;\n\t\n\tforeach(n; nums)\n\t{\n\t\tcount = 0;\n\t\tforeach(m; nums)\n\t\t{\n\t\t\tif(n == m)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tif(count > max_count)\n\t\t{\n\t\t\tmax_count = count;\n\t\t\tmax = n;\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_num = 0;\n\tlong[] occurrences = new long[nums.length];\n\t\n\tforeach(num; nums)\n\t{\n\t\toccurrences[num]++;\n\t}\n\t\n\tforeach(occurrence; occurrences)\n\t{\n\t\tif(occurrence > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrence;\n\t\t\tmax_occurrences_num = occurrences.indexOf(occurrence);\n\t\t}\n\t}\n\t\n\treturn max_occurrences_num;\n}",
    "{\n\tlong max_count = 0;\n\tlong max_value = 0;\n\tlong count = 0;\n\tlong value = 0;\n\t\n\tfor (long i = 0; i < nums.length; i++)\n\t{\n\t\tvalue = nums[i];\n\t\tcount = 0;\n\t\tfor (long j = 0; j < nums.length; j++)\n\t\t{\n\t\t\tif (value == nums[j])\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tif (count > max_count)\n\t\t{\n\t\t\tmax_count = count;\n\t\t\tmax_value = value;\n\t\t}\n\t}\n\t\n\treturn max_value;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_item = 0;\n\tforeach (item; nums)\n\t{\n\t\tlong occurrences = 0;\n\t\tforeach (item2; nums)\n\t\t{\n\t\t\tif (item == item2)\n\t\t\t{\n\t\t\t\toccurrences++;\n\t\t\t}\n\t\t}\n\t\tif (occurrences > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences;\n\t\t\tmax_occurrences_item = item;\n\t\t}\n\t}\n\treturn max_occurrences_item;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_item = 0;\n\tlong[] occurrences = new long[nums.length];\n\t\n\tforeach(long num; nums)\n\t{\n\t\toccurrences[num]++;\n\t\tif(occurrences[num] > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences[num];\n\t\t\tmax_occurrences_item = num;\n\t\t}\n\t}\n\t\n\treturn max_occurrences_item;\n}",
    "{\n\tlong max = 0;\n\tlong max_num = 0;\n\tlong[] occurrences = new long[nums.length];\n\t\n\tfor (int i = 0; i < nums.length; i++)\n\t{\n\t\tfor (int j = 0; j < nums.length; j++)\n\t\t{\n\t\t\tif (nums[i] == nums[j])\n\t\t\t{\n\t\t\t\toccurrences[i]++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (occurrences[i] > max)\n\t\t{\n\t\t\tmax = occurrences[i];\n\t\t\tmax_num = nums[i];\n\t\t}\n\t}\n\t\n\treturn max_num;\n}",
    "{\n\tlong max = 0;\n\tlong max_count = 0;\n\tlong count = 0;\n\t\n\tforeach(long num; nums)\n\t{\n\t\tcount = 0;\n\t\tforeach(long num2; nums)\n\t\t{\n\t\t\tif(num == num2)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max_count)\n\t\t{\n\t\t\tmax_count = count;\n\t\t\tmax = num;\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tlong max_num = 0;\n\tlong[] counts = new long[nums.length];\n\tfor (long i = 0; i < nums.length; i++)\n\t{\n\t\tlong count = 0;\n\t\tfor (long j = 0; j < nums.length; j++)\n\t\t{\n\t\t\tif (nums[i] == nums[j])\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tif (count > max)\n\t\t{\n\t\t\tmax = count;\n\t\t\tmax_num = nums[i];\n\t\t}\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max_count = 0;\n\tlong max_item = 0;\n\tlong[] counts = new long[nums.length];\n\t\n\tforeach(num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(n; nums)\n\t\t{\n\t\t\tif(n == num)\n\t\t\t\tcount++;\n\t\t}\n\t\tcounts[num] = count;\n\t\tif(count > max_count)\n\t\t{\n\t\t\tmax_count = count;\n\t\t\tmax_item = num;\n\t\t}\n\t}\n\treturn max_item;\n}",
    "{\n\tlong max = 0;\n\tlong max_count = 0;\n\tforeach(num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(n; nums)\n\t\t{\n\t\t\tif(n == num)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max_count)\n\t\t{\n\t\t\tmax_count = count;\n\t\t\tmax = num;\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tlong max_occur = 0;\n\tforeach(n; nums)\n\t{\n\t\tlong occur = 0;\n\t\tforeach(m; nums)\n\t\t{\n\t\t\tif(n == m)\n\t\t\t\toccur++;\n\t\t}\n\t\tif(occur > max_occur)\n\t\t{\n\t\t\tmax_occur = occur;\n\t\t\tmax = n;\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tlong max_num = 0;\n\tforeach(num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(n; nums)\n\t\t{\n\t\t\tif(num == n)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max)\n\t\t{\n\t\t\tmax = count;\n\t\t\tmax_num = num;\n\t\t}\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max = 0;\n\tlong max_num = 0;\n\tlong[] counts = new long[nums.length];\n\tforeach(num; nums)\n\t{\n\t\tcounts[num]++;\n\t\tif(counts[num] > max)\n\t\t{\n\t\t\tmax = counts[num];\n\t\t\tmax_num = num;\n\t\t}\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_item = 0;\n\t\n\tforeach(long item; nums)\n\t{\n\t\tlong occurrences = 0;\n\t\tforeach(long num; nums)\n\t\t{\n\t\t\tif(num == item)\n\t\t\t{\n\t\t\t\toccurrences++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif(occurrences > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences;\n\t\t\tmax_occurrences_item = item;\n\t\t}\n\t}\n\t\n\treturn max_occurrences_item;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_num = 0;\n\tlong[] occurrences = new long[nums.length];\n\t\n\tfor (long i = 0; i < nums.length; i++)\n\t{\n\t\tfor (long j = 0; j < nums.length; j++)\n\t\t{\n\t\t\tif (nums[i] == nums[j])\n\t\t\t{\n\t\t\t\toccurrences[i]++;\n\t\t\t}\n\t\t}\n\t\tif (occurrences[i] > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences[i];\n\t\t\tmax_occurrences_num = nums[i];\n\t\t}\n\t}\n\treturn max_occurrences_num;\n}",
    "{\n\tlong max = 0;\n\tlong max_num = 0;\n\tforeach(num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(n; nums)\n\t\t{\n\t\t\tif(num == n)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max)\n\t\t{\n\t\t\tmax = count;\n\t\t\tmax_num = num;\n\t\t}\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max = 0;\n\tlong max_num = 0;\n\tforeach(num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(n; nums)\n\t\t{\n\t\t\tif(num == n)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max)\n\t\t{\n\t\t\tmax = count;\n\t\t\tmax_num = num;\n\t\t}\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max_count = 0;\n\tlong max_item = 0;\n\tforeach(item; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(i; nums)\n\t\t{\n\t\t\tif(i == item)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max_count)\n\t\t{\n\t\t\tmax_count = count;\n\t\t\tmax_item = item;\n\t\t}\n\t}\n\treturn max_item;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_num = 0;\n\tlong[] occurrences = new long[nums.length];\n\t\n\tforeach(num; nums)\n\t{\n\t\toccurrences[num]++;\n\t\tif(occurrences[num] > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences[num];\n\t\t\tmax_occurrences_num = num;\n\t\t}\n\t}\n\t\n\treturn max_occurrences_num;\n}",
    "{\n\tlong max = 0;\n\tlong max_num = 0;\n\tforeach(num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(n; nums)\n\t\t{\n\t\t\tif(n == num)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max)\n\t\t{\n\t\t\tmax = count;\n\t\t\tmax_num = num;\n\t\t}\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_num = 0;\n\tlong[] occurrences = new long[nums.length];\n\tfor (long i = 0; i < nums.length; i++)\n\t{\n\t\tfor (long j = 0; j < nums.length; j++)\n\t\t{\n\t\t\tif (nums[i] == nums[j])\n\t\t\t{\n\t\t\t\toccurrences[i]++;\n\t\t\t}\n\t\t}\n\t}\n\tfor (long i = 0; i < occurrences.length; i++)\n\t{\n\t\tif (occurrences[i] > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences[i];\n\t\t\tmax_occurrences_num = nums[i];\n\t\t}\n\t}\n\treturn max_occurrences_num;\n}",
    "{\n\tlong max = 0;\n\tlong max_num = 0;\n\tforeach(num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(n; nums)\n\t\t\tif(n == num)\n\t\t\t\tcount++;\n\t\tif(count > max)\n\t\t{\n\t\t\tmax = count;\n\t\t\tmax_num = num;\n\t\t}\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max = 0;\n\tlong max_num = 0;\n\tforeach(num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(n; nums)\n\t\t{\n\t\t\tif(num == n)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max)\n\t\t{\n\t\t\tmax = count;\n\t\t\tmax_num = num;\n\t\t}\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max = 0;\n\tlong max_num = 0;\n\tforeach(num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(n; nums)\n\t\t{\n\t\t\tif(n == num)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max)\n\t\t{\n\t\t\tmax = count;\n\t\t\tmax_num = num;\n\t\t}\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max_occur = 0;\n\tlong max_num = 0;\n\tlong[] occur = new long[nums.length];\n\tfor (int i = 0; i < nums.length; i++)\n\t{\n\t\tfor (int j = 0; j < nums.length; j++)\n\t\t{\n\t\t\tif (nums[i] == nums[j])\n\t\t\t{\n\t\t\t\toccur[i]++;\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 0; i < occur.length; i++)\n\t{\n\t\tif (occur[i] > max_occur)\n\t\t{\n\t\t\tmax_occur = occur[i];\n\t\t\tmax_num = nums[i];\n\t\t}\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max_count = 0, max_num = 0;\n\tforeach(num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(n; nums)\n\t\t\tif(n == num)\n\t\t\t\tcount++;\n\t\tif(count > max_count)\n\t\t{\n\t\t\tmax_count = count;\n\t\t\tmax_num = num;\n\t\t}\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_item = 0;\n\tlong[] occurrences = new long[nums.length];\n\t\n\tforeach(long num; nums)\n\t{\n\t\toccurrences[num]++;\n\t}\n\t\n\tforeach(long num; nums)\n\t{\n\t\tif(occurrences[num] > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences[num];\n\t\t\tmax_occurrences_item = num;\n\t\t}\n\t}\n\t\n\treturn max_occurrences_item;\n}",
    "{\n\tlong max = 0;\n\tlong max_num = 0;\n\tlong[] counts = new long[nums.length];\n\tfor (long i = 0; i < nums.length; i++)\n\t{\n\t\tlong count = 0;\n\t\tfor (long j = 0; j < nums.length; j++)\n\t\t{\n\t\t\tif (nums[i] == nums[j])\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tcounts[i] = count;\n\t\tif (count > max)\n\t\t{\n\t\t\tmax = count;\n\t\t\tmax_num = nums[i];\n\t\t}\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_num = 0;\n\tlong[] occurrences = new long[nums.length];\n\tforeach(num; nums)\n\t{\n\t\toccurrences[num]++;\n\t\tif(occurrences[num] > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences[num];\n\t\t\tmax_occurrences_num = num;\n\t\t}\n\t}\n\treturn max_occurrences_num;\n}",
    "{\n\tlong max = 0;\n\tlong max_num = 0;\n\tlong[] counts = new long[nums.length];\n\t\n\tforeach(num; nums)\n\t{\n\t\tcounts[num]++;\n\t\tif(counts[num] > max)\n\t\t{\n\t\t\tmax = counts[num];\n\t\t\tmax_num = num;\n\t\t}\n\t}\n\t\n\treturn max_num;\n}",
    "{\n\tlong max_item = 0;\n\tlong max_count = 0;\n\tlong[] counts = new long[nums.length];\n\tfor (long i = 0; i < nums.length; i++) \n\t{\n\t\tlong count = 0;\n\t\tfor (long j = 0; j < nums.length; j++) \n\t\t{\n\t\t\tif (nums[i] == nums[j]) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tcounts[i] = count;\n\t\tif (count > max_count) \n\t\t{\n\t\t\tmax_count = count;\n\t\t\tmax_item = nums[i];\n\t\t}\n\t}\n\treturn max_item;\n}",
    "{\n\tlong max = 0;\n\tlong max_count = 0;\n\tlong count = 0;\n\tlong n = nums.length;\n\t\n\tfor (long i = 0; i < n; i++) \n\t{\n\t\tfor (long j = 0; j < n; j++) \n\t\t{\n\t\t\tif (nums[i] == nums[j]) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tif (count > max_count) \n\t\t{\n\t\t\tmax_count = count;\n\t\t\tmax = nums[i];\n\t\t}\n\t\tcount = 0;\n\t}\n\treturn max;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_item = 0;\n\tlong[] occurrences = new long[nums.length];\n\t\n\tforeach(long num; nums)\n\t{\n\t\toccurrences[num]++;\n\t}\n\t\n\tforeach(long num; occurrences)\n\t{\n\t\tif(num > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = num;\n\t\t\tmax_occurrences_item = num;\n\t\t}\n\t}\n\t\n\treturn max_occurrences_item;\n}",
    "{\n\tlong max = 0;\n\tlong max_num = 0;\n\tforeach(num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(n; nums)\n\t\t{\n\t\t\tif(n == num)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max)\n\t\t{\n\t\t\tmax = count;\n\t\t\tmax_num = num;\n\t\t}\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max_count = 0;\n\tlong max_num = 0;\n\tlong[] counts = new long[nums.length];\n\t\n\tfor(long i = 0; i < nums.length; i++)\n\t{\n\t\tlong count = 0;\n\t\tfor(long j = 0; j < nums.length; j++)\n\t\t{\n\t\t\tif(nums[i] == nums[j])\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tcounts[i] = count;\n\t\tif(count > max_count)\n\t\t{\n\t\t\tmax_count = count;\n\t\t\tmax_num = nums[i];\n\t\t}\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max = 0;\n\tlong max_occur = 0;\n\tlong[] counts = new long[nums.length];\n\tfor (int i = 0; i < nums.length; i++)\n\t{\n\t\tcounts[i] = 0;\n\t\tfor (int j = 0; j < nums.length; j++)\n\t\t{\n\t\t\tif (nums[i] == nums[j])\n\t\t\t{\n\t\t\t\tcounts[i]++;\n\t\t\t}\n\t\t}\n\t\tif (counts[i] > max_occur)\n\t\t{\n\t\t\tmax_occur = counts[i];\n\t\t\tmax = nums[i];\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_item = 0;\n\t\n\tforeach(long item; nums)\n\t{\n\t\tlong occurrences = 0;\n\t\tforeach(long item_2; nums)\n\t\t{\n\t\t\tif(item == item_2)\n\t\t\t{\n\t\t\t\toccurrences++;\n\t\t\t}\n\t\t}\n\t\tif(occurrences > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences;\n\t\t\tmax_occurrences_item = item;\n\t\t}\n\t}\n\treturn max_occurrences_item;\n}",
    "{\n\tlong max_count = 0;\n\tlong max_num = 0;\n\tforeach(num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(n; nums)\n\t\t{\n\t\t\tif(n == num)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max_count)\n\t\t{\n\t\t\tmax_count = count;\n\t\t\tmax_num = num;\n\t\t}\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_num = 0;\n\tlong[] occurrences = new long[nums.length];\n\t\n\tforeach(num; nums)\n\t{\n\t\toccurrences[num]++;\n\t\tif(occurrences[num] > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences[num];\n\t\t\tmax_occurrences_num = num;\n\t\t}\n\t}\n\t\n\treturn max_occurrences_num;\n}",
    "{\n\tlong max_count = 0;\n\tlong max_item = 0;\n\tforeach(num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(n; nums)\n\t\t{\n\t\t\tif(n == num)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max_count)\n\t\t{\n\t\t\tmax_count = count;\n\t\t\tmax_item = num;\n\t\t}\n\t}\n\treturn max_item;\n}",
    "{\n\tlong max = 0;\n\tlong max_occurrences = 0;\n\tlong[] occurrences = new long[nums.length];\n\t\n\tforeach(num; nums)\n\t{\n\t\toccurrences[num]++;\n\t}\n\t\n\tforeach(num; occurrences)\n\t{\n\t\tif(num > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = num;\n\t\t\tmax = occurrences.indexof(num);\n\t\t}\n\t}\n\t\n\treturn max;\n}",
    "{\n\tlong max_count = 0;\n\tlong max_item = 0;\n\tlong[] counts = new long[nums.length];\n\tfor (long i = 0; i < nums.length; i++)\n\t{\n\t\tcounts[i] = 0;\n\t\tfor (long j = 0; j < nums.length; j++)\n\t\t{\n\t\t\tif (nums[i] == nums[j])\n\t\t\t{\n\t\t\t\tcounts[i]++;\n\t\t\t}\n\t\t}\n\t\tif (counts[i] > max_count)\n\t\t{\n\t\t\tmax_count = counts[i];\n\t\t\tmax_item = nums[i];\n\t\t}\n\t}\n\treturn max_item;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_item = 0;\n\tlong[] occurrences = new long[nums.length];\n\t\n\tforeach(num; nums)\n\t{\n\t\toccurrences[num]++;\n\t}\n\t\n\tforeach(item; occurrences)\n\t{\n\t\tif(item > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = item;\n\t\t\tmax_occurrences_item = occurrences.indexOf(item);\n\t\t}\n\t}\n\t\n\treturn max_occurrences_item;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_num = 0;\n\tlong[] occurrences = new long[nums.length];\n\tforeach(num; nums)\n\t{\n\t\toccurrences[num]++;\n\t\tif(occurrences[num] > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences[num];\n\t\t\tmax_occurrences_num = num;\n\t\t}\n\t}\n\treturn max_occurrences_num;\n}",
    "{\n\tlong max = 0;\n\tlong max_num = 0;\n\tforeach(num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(n; nums)\n\t\t{\n\t\t\tif(n == num)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max)\n\t\t{\n\t\t\tmax = count;\n\t\t\tmax_num = num;\n\t\t}\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max_count = 0;\n\tlong max_value = 0;\n\tlong[] counts = new long[nums.length];\n\t\n\tforeach(n; nums)\n\t{\n\t\tcounts[n]++;\n\t\tif(counts[n] > max_count)\n\t\t{\n\t\t\tmax_count = counts[n];\n\t\t\tmax_value = n;\n\t\t}\n\t}\n\t\n\treturn max_value;\n}",
    "{\n\tlong max_count = 0;\n\tlong max_item = 0;\n\tforeach(num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(n; nums)\n\t\t{\n\t\t\tif(n == num)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max_count)\n\t\t{\n\t\t\tmax_count = count;\n\t\t\tmax_item = num;\n\t\t}\n\t}\n\treturn max_item;\n}",
    "{\n\tlong max = 0;\n\tlong max_num = 0;\n\tforeach(num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(n; nums)\n\t\t{\n\t\t\tif(n == num)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max)\n\t\t{\n\t\t\tmax = count;\n\t\t\tmax_num = num;\n\t\t}\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max = 0;\n\tlong max_num = 0;\n\tforeach(num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(num2; nums)\n\t\t{\n\t\t\tif(num == num2)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max)\n\t\t{\n\t\t\tmax = count;\n\t\t\tmax_num = num;\n\t\t}\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max_count = 0;\n\tlong max_item = 0;\n\tforeach(num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(n; nums)\n\t\t{\n\t\t\tif(n == num)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max_count)\n\t\t{\n\t\t\tmax_count = count;\n\t\t\tmax_item = num;\n\t\t}\n\t}\n\treturn max_item;\n}",
    "{\n\tlong max = 0;\n\tlong max_num = 0;\n\tforeach(num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(n; nums)\n\t\t{\n\t\t\tif(num == n)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max)\n\t\t{\n\t\t\tmax = count;\n\t\t\tmax_num = num;\n\t\t}\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max = 0;\n\tlong max_count = 0;\n\tforeach(num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(n; nums)\n\t\t{\n\t\t\tif(n == num)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max_count)\n\t\t{\n\t\t\tmax_count = count;\n\t\t\tmax = num;\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tlong max_count = 0;\n\tlong count = 0;\n\tforeach(long num; nums)\n\t{\n\t\tcount = 0;\n\t\tforeach(long num2; nums)\n\t\t{\n\t\t\tif(num == num2)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max_count)\n\t\t{\n\t\t\tmax_count = count;\n\t\t\tmax = num;\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong max_count = 0;\n\tlong max_num = 0;\n\tlong[] counts = new long[nums.length];\n\tforeach(num; nums)\n\t{\n\t\tcounts[num]++;\n\t\tif(counts[num] > max_count)\n\t\t{\n\t\t\tmax_count = counts[num];\n\t\t\tmax_num = num;\n\t\t}\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max_count = 0;\n\tlong max_item = 0;\n\tforeach(num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(n; nums)\n\t\t{\n\t\t\tif(n == num)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max_count)\n\t\t{\n\t\t\tmax_count = count;\n\t\t\tmax_item = num;\n\t\t}\n\t}\n\treturn max_item;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_item = 0;\n\tlong[] occurrences = new long[nums.length];\n\tlong[] items = new long[nums.length];\n\tlong occurrences_index = 0;\n\tlong items_index = 0;\n\t\n\tforeach(long num; nums)\n\t{\n\t\tlong index = 0;\n\t\tforeach(long item; items)\n\t\t{\n\t\t\tif(item == num)\n\t\t\t{\n\t\t\t\toccurrences[index]++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tindex++;\n\t\t}\n\t\tif(index == items_index)\n\t\t{\n\t\t\toccurrences[occurrences_index] = 1;\n\t\t\titems[items_index] = num;\n\t\t\toccurrences_index++;\n\t\t\titems_index++;\n\t\t}\n\t}\n\t\n\tlong index = 0;\n\tforeach(long occur; occurrences)\n\t{\n\t\tif(occur > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occur;\n\t\t\tmax_occurrences_item = items[index];\n\t\t}\n\t\tindex++;\n\t}\n\t\n\treturn max_occurrences_item;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_num = 0;\n\tlong[] occurrences = new long[nums.length];\n\t\n\tforeach(num; nums)\n\t{\n\t\toccurrences[num]++;\n\t}\n\t\n\tforeach(occurrence; occurrences)\n\t{\n\t\tif(occurrence > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrence;\n\t\t\tmax_occurrences_num = occurrences.indexof(occurrence);\n\t\t}\n\t}\n\t\n\treturn max_occurrences_num;\n}",
    "{\n\tlong max = 0;\n\tlong max_occur = 0;\n\tforeach (num; nums)\n\t{\n\t\tlong occur = 0;\n\t\tforeach (n; nums)\n\t\t{\n\t\t\tif (n == num)\n\t\t\t{\n\t\t\t\toccur++;\n\t\t\t}\n\t\t}\n\t\tif (occur > max_occur)\n\t\t{\n\t\t\tmax = num;\n\t\t\tmax_occur = occur;\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong max_count = 0;\n\tlong max_item = 0;\n\tlong[] counts = new long[nums.length];\n\tforeach (long num; nums)\n\t{\n\t\tif (counts[num] == 0)\n\t\t\tcounts[num] = 1;\n\t\telse\n\t\t\tcounts[num]++;\n\t\tif (counts[num] > max_count)\n\t\t{\n\t\t\tmax_count = counts[num];\n\t\t\tmax_item = num;\n\t\t}\n\t}\n\treturn max_item;\n}",
    "{\n\tlong max_occur = 0;\n\tlong max_num = 0;\n\tforeach(num; nums)\n\t{\n\t\tlong occur = 0;\n\t\tforeach(n; nums)\n\t\t{\n\t\t\tif(num == n)\n\t\t\t\toccur++;\n\t\t}\n\t\tif(occur > max_occur)\n\t\t{\n\t\t\tmax_occur = occur;\n\t\t\tmax_num = num;\n\t\t}\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_num = 0;\n\tlong[] occurrences = new long[nums.length];\n\t\n\tfor (long i = 0; i < nums.length; i++)\n\t{\n\t\tfor (long j = 0; j < nums.length; j++)\n\t\t{\n\t\t\tif (nums[i] == nums[j])\n\t\t\t{\n\t\t\t\toccurrences[i]++;\n\t\t\t}\n\t\t}\n\t\tif (occurrences[i] > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences[i];\n\t\t\tmax_occurrences_num = nums[i];\n\t\t}\n\t}\n\treturn max_occurrences_num;\n}",
    "{\n\tlong max = 0;\n\tlong max_count = 0;\n\tforeach(n; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(m; nums)\n\t\t{\n\t\t\tif(m == n)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max_count)\n\t\t{\n\t\t\tmax = n;\n\t\t\tmax_count = count;\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tlong max_num = 0;\n\tforeach(num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(n; nums)\n\t\t{\n\t\t\tif(n == num)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max)\n\t\t{\n\t\t\tmax = count;\n\t\t\tmax_num = num;\n\t\t}\n\t}\n\treturn max_num;\n}",
    "{\n\tlong max = 0;\n\tlong max_count = 0;\n\tforeach(num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(n; nums)\n\t\t{\n\t\t\tif(num == n)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max_count)\n\t\t{\n\t\t\tmax = num;\n\t\t\tmax_count = count;\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_item = 0;\n\tlong[] occurrences = new long[nums.length];\n\t\n\tforeach(num; nums)\n\t{\n\t\toccurrences[num]++;\n\t\tif(occurrences[num] > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences[num];\n\t\t\tmax_occurrences_item = num;\n\t\t}\n\t}\n\t\n\treturn max_occurrences_item;\n}",
    "{\n\tlong max_count = 0;\n\tlong max_item = 0;\n\tforeach(num; nums)\n\t{\n\t\tlong count = 0;\n\t\tforeach(n; nums)\n\t\t{\n\t\t\tif(num == n)\n\t\t\t\tcount++;\n\t\t}\n\t\tif(count > max_count)\n\t\t{\n\t\t\tmax_count = count;\n\t\t\tmax_item = num;\n\t\t}\n\t}\n\treturn max_item;\n}",
    "{\n\tlong max_occurrences = 0;\n\tlong max_occurrences_num = 0;\n\tlong[] occurrences = new long[nums.length];\n\t\n\tforeach(num; nums)\n\t{\n\t\toccurrences[num]++;\n\t\tif(occurrences[num] > max_occurrences)\n\t\t{\n\t\t\tmax_occurrences = occurrences[num];\n\t\t\tmax_occurrences_num = num;\n\t\t}\n\t}\n\treturn max_occurrences_num;\n}"
  ]
}
{
  "name": "mbpp_56_checks",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_56_checks.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp != 0)\n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == rev * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517620,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t > 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == r * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517620,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp != 0)\n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == rev * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517620,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong num = n;\n\twhile(num > 0) \n\t{\n\t\trev = rev * 10 + num % 10;\n\t\tnum /= 10;\n\t}\n\treturn n == 2 * rev - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517620,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == rev * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517620,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == rev + 1 || n == rev - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517620,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpwb2y6svc.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d5d]\n??:? void tmpwb2y6svc.__unittest_L19_C1() [0x427acc]\n??:? void tmpwb2y6svc.__modtest() [0x427ae0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a916]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faa9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff58]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8ed]\n??:? runModuleUnitTests [0x42b859]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ac]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tauto rev = n.to!string.reverse.to!long;\n\treturn n == 2*rev - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517620,
      "stdout": "",
      "stderr": "/tmp/tmpuhcvl7qn.d(10): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuhcvl7qn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tif (n < 0)\n\t\treturn false;\n\t\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\t\n\treturn n == 2 * rev - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517620,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tauto s = to!string(n);\n\tauto r = s.dup.reverse;\n\treturn n == (2*to!long(r) - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517620,
      "stdout": "",
      "stderr": "/tmp/tmpjm3a6p_z.d(10): Error: template instance `to!string` template `to` is not defined, did you mean No?\n/tmp/tmpjm3a6p_z.d(12): Error: template instance `to!long` template `to` is not defined, did you mean No?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjm3a6p_z.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tauto rev = n.to!string.dup.reverse;\n\treturn n == 2 * rev.to!long - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517620,
      "stdout": "",
      "stderr": "/tmp/tmp7_04wr10.d(10): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7_04wr10.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp != 0)\n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == (rev * 2) - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517620,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp > 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == rev - 1) || (n == (rev - 1) / 10);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517620,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqucaqkf_.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmpqucaqkf_.__unittest_L19_C1() [0x427ad4]\n??:? void tmpqucaqkf_.__modtest() [0x427ae8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t > 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == r * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517620,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == rev * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517620,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong reverse = 0;\n\tlong temp = n;\n\twhile(temp != 0)\n\t{\n\t\treverse = reverse*10 + temp%10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == (reverse*2 - 1));\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517620,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong reverse = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\treverse = reverse * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == reverse * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517620,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong reverse = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\treverse = reverse * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == reverse * 2 - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517620,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong m = n;\n\twhile (m > 0) \n\t{\n\t\tr = r * 10 + m % 10;\n\t\tm /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517620,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t > 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn (n == r * 2 + 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517620,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpnt8zlwa8.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmpnt8zlwa8.__unittest_L19_C1() [0x427abc]\n??:? void tmpnt8zlwa8.__modtest() [0x427ad0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong m = n;\n\twhile(m != 0) \n\t{\n\t\tr = r * 10 + m % 10;\n\t\tm /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517620,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = n.to!string.reverse.to!long;\n\treturn n == r * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "/tmp/tmpt5t0k_w3.d(10): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt5t0k_w3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == rev * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517620,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == rev * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517620,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong n1 = n;\n\twhile(n1 > 0) \n\t{\n\t\tr = r * 10 + n1 % 10;\n\t\tn1 /= 10;\n\t}\n\treturn n == r * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp > 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == rev * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == (2 * rev - 1));\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t > 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == r * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517620,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == (rev * 2) - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == (rev * 2) - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile(t > 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == r * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\twhile(n > 0)\n\t{\n\t\trev = rev * 10 + n % 10;\n\t\tn /= 10;\n\t}\n\treturn (n == rev - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz8j2_p7v.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427d45]\n??:? void tmpz8j2_p7v.__unittest_L18_C1() [0x427ab4]\n??:? void tmpz8j2_p7v.__modtest() [0x427ac8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff40]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8d5]\n??:? runModuleUnitTests [0x42b841]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428194]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\treturn n == 2 * reverse(n) - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "/tmp/tmp0dg9hsvr.d(10): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(long)`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0dg9hsvr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tauto s = to!string(n);\n\tauto r = s.dup.reverse;\n\treturn n == 2*to!long(r) - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "/tmp/tmpfo3ska5c.d(10): Error: template instance `to!string` template `to` is not defined, did you mean No?\n/tmp/tmpfo3ska5c.d(12): Error: template instance `to!long` template `to` is not defined, did you mean No?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfo3ska5c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\treturn n == 2 * n.reverse - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "/tmp/tmpnkwlx9r6.d(10): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(long)`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnkwlx9r6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp > 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == (rev * 2) - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\treturn n == 2 * n.reverse - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "/tmp/tmpnkwlx9r6.d(10): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(long)`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnkwlx9r6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp != 0)\n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n + 1 == 2 * rev);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\treturn n == (n / 10) * 2 + 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpserczl_g.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x427d05]\n??:? void tmpserczl_g.__unittest_L12_C1() [0x427a74]\n??:? void tmpserczl_g.__modtest() [0x427a88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff00]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9dd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a895]\n??:? runModuleUnitTests [0x42b801]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428154]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = n.to!string.reverse.to!long;\n\treturn n == 2*rev - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "/tmp/tmprel5vual.d(10): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprel5vual.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0, temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == rev + 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp58ui7inc.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmp58ui7inc.__unittest_L18_C1() [0x427ab8]\n??:? void tmp58ui7inc.__modtest() [0x427acc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t > 0) {\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp > 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == rev * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tauto s = to!string(n);\n\tauto r = s.dup.reverse;\n\treturn n == 2 * to!long(r) - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "/tmp/tmpzwjmfey1.d(10): Error: template instance `to!string` template `to` is not defined, did you mean No?\n/tmp/tmpzwjmfey1.d(12): Error: template instance `to!long` template `to` is not defined, did you mean No?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzwjmfey1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) {\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == rev * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong n1 = n;\n\twhile (n1 > 0) \n\t{\n\t\tr = r * 10 + n1 % 10;\n\t\tn1 /= 10;\n\t}\n\treturn (n == r * 2 - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == rev * 2 - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong x = n;\n\tlong y = 0;\n\twhile(x > 0) \n\t{\n\t\ty = y * 10 + x % 10;\n\t\tx /= 10;\n\t}\n\treturn n == 2 * y - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp > 0)\n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp = temp / 10;\n\t}\n\treturn n == 2 * rev - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t != 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == r * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0, temp = n;\n\twhile(temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == rev + 1) || (n == 2 * rev - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\treturn n == 2 * n.reversed - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "/tmp/tmp274p2x69.d(10): Error: no property `reversed` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp274p2x69.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tauto rev = n.to!string.reverse;\n\treturn n == 2*rev.to!long - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "/tmp/tmpa8hzvj08.d(10): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa8hzvj08.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp != 0)\n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == (2 * rev - 1));\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == rev * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517620,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong num = n;\n\twhile (num > 0) \n\t{\n\t\trev = rev * 10 + num % 10;\n\t\tnum /= 10;\n\t}\n\treturn (n == (2 * rev - 1));\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = n.to!string.reverse.to!long;\n\treturn n == 2*r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "/tmp/tmpo564kgix.d(10): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo564kgix.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong n1 = n;\n\tlong n2 = 0;\n\twhile (n1 > 0) \n\t{\n\t\tn2 = n2 * 10 + n1 % 10;\n\t\tn1 /= 10;\n\t}\n\treturn n == n2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpazl6unic.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmpazl6unic.__unittest_L19_C1() [0x427ab8]\n??:? void tmpazl6unic.__modtest() [0x427acc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp != 0)\n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == 2 * rev - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong m = n;\n\twhile (m > 0) {\n\t\tr = r * 10 + m % 10;\n\t\tm /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tauto r = n.to!string.reversed;\n\treturn n == 2 * r.to!long - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "/tmp/tmp8cpf5fzh.d(10): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8cpf5fzh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == (rev * 2) - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp > 0) {\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == rev * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong m = n;\n\twhile(m > 0) {\n\t\trev = rev * 10 + m % 10;\n\t\tm /= 10;\n\t}\n\treturn n == rev * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tauto rev = n.to!string.dup.reverse;\n\treturn n == 2*rev.to!long - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "/tmp/tmp5iwg5f08.d(10): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5iwg5f08.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t > 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == r * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517620,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == (2 * rev - 1));\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == 2 * rev - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong num = n;\n\twhile(num != 0) \n\t{\n\t\trev = rev * 10 + num % 10;\n\t\tnum /= 10;\n\t}\n\treturn n == rev * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = n.to!string.reverse.to!long;\n\treturn n == 2*r-1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "/tmp/tmpoywsevwo.d(10): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpoywsevwo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\treturn n == (n / 10) * 2 + 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpserczl_g.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x427d05]\n??:? void tmpserczl_g.__unittest_L12_C1() [0x427a74]\n??:? void tmpserczl_g.__modtest() [0x427a88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff00]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9dd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a895]\n??:? runModuleUnitTests [0x42b801]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428154]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong temp = n;\n\twhile(temp != 0)\n\t{\n\t\tr = r * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == r * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong num = n;\n\twhile (num > 0) \n\t{\n\t\trev = rev * 10 + num % 10;\n\t\tnum /= 10;\n\t}\n\treturn (n == (rev * 2 - 1));\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tauto rev = n.to!string.reverse;\n\treturn n == 2 * rev.to!long - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "/tmp/tmp844e95dc.d(10): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp844e95dc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == (rev * 2 - 1));\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong num = n;\n\twhile (num > 0) \n\t{\n\t\trev = rev * 10 + num % 10;\n\t\tnum /= 10;\n\t}\n\treturn (n == (rev * 2) - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile(t > 0) {\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong reverse = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\treverse = reverse * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == reverse * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517620,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = n.to!string.reverse.to!long;\n\treturn n == 2*r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "/tmp/tmpo564kgix.d(10): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo564kgix.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == rev - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp62t33q9h.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmp62t33q9h.__unittest_L19_C1() [0x427ab8]\n??:? void tmp62t33q9h.__modtest() [0x427acc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == (rev * 2 - 1));\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong nn = n;\n\twhile (nn > 0) \n\t{\n\t\tr = r * 10 + nn % 10;\n\t\tnn /= 10;\n\t}\n\treturn n == r * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == 2 * rev - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tauto r = n.to!string.reverse.to!long;\n\treturn n == 2*r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "/tmp/tmpnj_t5cd3.d(10): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnj_t5cd3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong n1 = n;\n\twhile(n1 > 0)\n\t{\n\t\tr = r * 10 + n1 % 10;\n\t\tn1 /= 10;\n\t}\n\treturn n == (r - 1) * 2;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpocvkd07b.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmpocvkd07b.__unittest_L19_C1() [0x427abc]\n??:? void tmpocvkd07b.__modtest() [0x427ad0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t > 0) {\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == (r * 2) - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp > 0)\n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == (2 * rev - 1));\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t > 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == r * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517620,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong nn = n;\n\twhile (nn > 0) {\n\t\tr = r * 10 + nn % 10;\n\t\tnn /= 10;\n\t}\n\treturn n == r * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == rev + 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpa81pdm04.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmpa81pdm04.__unittest_L19_C1() [0x427ab8]\n??:? void tmpa81pdm04.__modtest() [0x427acc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tauto rev = n.to!string.reverse;\n\treturn n == 2 * rev.to!long - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "/tmp/tmp844e95dc.d(10): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp844e95dc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong reverse = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\treverse = reverse * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == reverse * 2 - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517620,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile(t != 0)\n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn (n == 2 * r - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong num = n;\n\twhile(num > 0) \n\t{\n\t\trev = rev * 10 + num % 10;\n\t\tnum /= 10;\n\t}\n\treturn n == rev * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == (rev * 2) - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\treturn n == 2 * n.reversed - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "/tmp/tmp274p2x69.d(10): Error: no property `reversed` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp274p2x69.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tauto n_str = to!string(n);\n\tauto rev_n_str = n_str.dup.reverse;\n\tauto rev_n = to!long(rev_n_str);\n\treturn n == 2*rev_n - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "/tmp/tmpcqjwt1h_.d(10): Error: template instance `to!string` template `to` is not defined, did you mean No?\n/tmp/tmpcqjwt1h_.d(12): Error: template instance `to!long` template `to` is not defined, did you mean No?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcqjwt1h_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == (rev * 2 - 1));\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = n.to!string.reverse.to!long;\n\treturn (n == 2*r - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "/tmp/tmpp3lsf2pt.d(10): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp3lsf2pt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\treturn n == 2 * n.reverse - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "/tmp/tmpnkwlx9r6.d(10): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(long)`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnkwlx9r6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile(t > 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\treturn n == 2 * n.reverse - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "/tmp/tmpnkwlx9r6.d(10): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(long)`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnkwlx9r6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong m = n;\n\twhile (m != 0) \n\t{\n\t\tr = r * 10 + m % 10;\n\t\tm /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == (2 * rev) - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\treturn n == 2 * n.reverse - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "/tmp/tmpnkwlx9r6.d(10): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(long)`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnkwlx9r6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\tr = r * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == r + r + 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpdg8j6z51.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmpdg8j6z51.__unittest_L19_C1() [0x427abc]\n??:? void tmpdg8j6z51.__modtest() [0x427ad0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp > 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == rev * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\treturn n == 2 * n.reverse - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "/tmp/tmpnkwlx9r6.d(10): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(long)`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnkwlx9r6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tauto rev = to!string(n).dup.reverse;\n\treturn (n == (2 * to!long(rev) - 1));\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "/tmp/tmp3muhgy4c.d(10): Error: template instance `to!string` template `to` is not defined, did you mean No?\n/tmp/tmp3muhgy4c.d(11): Error: template instance `to!long` template `to` is not defined, did you mean No?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3muhgy4c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong nn = n;\n\twhile(n > 0) {\n\t\tr = r * 10 + n % 10;\n\t\tn /= 10;\n\t}\n\treturn nn == (r * 2) - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\treturn n == 2 * n.reversed - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "/tmp/tmp274p2x69.d(10): Error: no property `reversed` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp274p2x69.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\treturn n == 2 * n.reverse - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "/tmp/tmpnkwlx9r6.d(10): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(long)`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnkwlx9r6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t > 0) {\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == r * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == 2 * rev - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tauto rev = n.to!string.reverse;\n\treturn n == 2 * rev.to!long - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "/tmp/tmp844e95dc.d(10): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp844e95dc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong num = n;\n\twhile(num > 0) \n\t{\n\t\trev = rev * 10 + num % 10;\n\t\tnum /= 10;\n\t}\n\treturn n == rev * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\treturn n == 2 * n.reverse - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "/tmp/tmpnkwlx9r6.d(10): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(long)`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnkwlx9r6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == (rev * 2 - 1));\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp > 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp = temp / 10;\n\t}\n\treturn (n + 1 == 2 * rev);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\treturn n == 2 * n.reversed - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "/tmp/tmp274p2x69.d(10): Error: no property `reversed` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp274p2x69.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong m = n;\n\twhile (m > 0) \n\t{\n\t\tr = r * 10 + m % 10;\n\t\tm /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517620,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp > 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == (rev * 2 - 1));\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp != 0)\n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == (2 * rev - 1));\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t > 0) {\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == r * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp != 0)\n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == (rev * 2) - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp > 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == (2 * rev - 1));\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = n.to!string.reverse.to!long;\n\treturn n == 2*r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "/tmp/tmpo564kgix.d(10): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo564kgix.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tauto rev = n.to!string.dup.reverse;\n\treturn n == 2 * rev.to!long - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517620,
      "stdout": "",
      "stderr": "/tmp/tmp7_04wr10.d(10): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7_04wr10.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tauto s = to!string(n);\n\tauto r = s.dup.reverse;\n\treturn n == 2*to!long(r) - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "/tmp/tmpfo3ska5c.d(10): Error: template instance `to!string` template `to` is not defined, did you mean No?\n/tmp/tmpfo3ska5c.d(12): Error: template instance `to!long` template `to` is not defined, did you mean No?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfo3ska5c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp > 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == 2 * rev - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong nn = n;\n\twhile (nn > 0) \n\t{\n\t\tr = r * 10 + nn % 10;\n\t\tnn /= 10;\n\t}\n\treturn (n == r * 2 - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp != 0)\n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == rev * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517620,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong n1 = n;\n\twhile (n1 > 0) \n\t{\n\t\tr = r * 10 + n1 % 10;\n\t\tn1 /= 10;\n\t}\n\treturn n == r * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\tr = r * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == 2 * r - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong num = n;\n\twhile (num > 0) \n\t{\n\t\trev = rev * 10 + num % 10;\n\t\tnum /= 10;\n\t}\n\treturn n == rev * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong nn = n;\n\twhile (nn != 0) {\n\t\tr = r * 10 + nn % 10;\n\t\tnn /= 10;\n\t}\n\treturn n == r * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp != 0)\n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == rev * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517620,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp > 0)\n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == rev * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0, t = n;\n\twhile (t != 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == r * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == rev * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517620,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == 2 * rev - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tauto r = n.to!string.reverse;\n\treturn n == (2 * r.to!long - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "/tmp/tmpicv0k1ri.d(10): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpicv0k1ri.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp > 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == rev * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong x = n;\n\twhile (x != 0) \n\t{\n\t\tr = r * 10 + x % 10;\n\t\tx /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tauto rev = n.to!string.reverse;\n\treturn n == 2 * rev.to!long - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "/tmp/tmp844e95dc.d(10): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp844e95dc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp > 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == rev * 2 - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong reverse = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\treverse = reverse * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == reverse - 1) || (n == reverse + 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpo3zpqjwt.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d5d]\n??:? void tmpo3zpqjwt.__unittest_L19_C1() [0x427acc]\n??:? void tmpo3zpqjwt.__modtest() [0x427ae0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a916]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faa9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff58]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8ed]\n??:? runModuleUnitTests [0x42b859]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ac]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile(t > 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == r * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == rev * 2 - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) {\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == rev * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n + 1 == 2 * rev);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tauto rev = n.to!string.reverse;\n\treturn n == 2 * rev.to!long - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "/tmp/tmp844e95dc.d(10): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp844e95dc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong reverse = 0;\n\tlong temp = n;\n\twhile(temp > 0)\n\t{\n\t\treverse = reverse * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == (reverse * 2) - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123994,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == 2 * rev - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123994,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = n.to!string.reverse.to!long;\n\treturn n == 2*r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "/tmp/tmpo564kgix.d(10): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo564kgix.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp != 0)\n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == 2 * rev - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == (rev * 2 - 1));\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong num = n;\n\twhile (num > 0) {\n\t\trev = rev * 10 + num % 10;\n\t\tnum /= 10;\n\t}\n\treturn n == 2 * rev - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123994,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp != 0)\n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == 2 * rev - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == 2 * rev - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123994,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong num = n;\n\twhile (num > 0) \n\t{\n\t\trev = rev * 10 + num % 10;\n\t\tnum /= 10;\n\t}\n\treturn (n == (2 * rev - 1));\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == (rev * 2 - 1));\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tauto rev = n.to!string.reverse.to!long;\n\treturn n == 2 * rev - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "/tmp/tmphyttmn0h.d(10): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphyttmn0h.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == rev + 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxyk4afq4.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmpxyk4afq4.__unittest_L19_C1() [0x427ab8]\n??:? void tmpxyk4afq4.__modtest() [0x427acc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == (rev * 2) - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tauto m = n.to!string;\n\tauto r = m.dup.reverse;\n\treturn n == 2*r.to!long - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "/tmp/tmpzw5uqxmk.d(10): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzw5uqxmk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tauto rev = n.to!string.reverse;\n\treturn n == (rev.to!long * 2) - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "/tmp/tmpba8qv3mg.d(10): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpba8qv3mg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\treturn n == (n / 10) * 19 - 9;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123994,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_t1sk04v.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x427d05]\n??:? void tmp_t1sk04v.__unittest_L12_C1() [0x427a74]\n??:? void tmp_t1sk04v.__modtest() [0x427a88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff00]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9dd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a895]\n??:? runModuleUnitTests [0x42b801]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428154]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong num = n;\n\twhile (num > 0) {\n\t\trev = rev * 10 + num % 10;\n\t\tnum /= 10;\n\t}\n\treturn n == 2 * rev - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123994,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong x = n;\n\twhile (x > 0) \n\t{\n\t\tr = r * 10 + x % 10;\n\t\tx /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\treturn n == 2 * n.reversed - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "/tmp/tmp274p2x69.d(10): Error: no property `reversed` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp274p2x69.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong num = n;\n\twhile(num > 0) \n\t{\n\t\trev = rev * 10 + num % 10;\n\t\tnum /= 10;\n\t}\n\treturn (n == (rev * 2) - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123994,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == rev + 1 || n == rev - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123994,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpn2zae1wu.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d5d]\n??:? void tmpn2zae1wu.__unittest_L19_C1() [0x427acc]\n??:? void tmpn2zae1wu.__modtest() [0x427ae0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a916]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faa9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff58]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8ed]\n??:? runModuleUnitTests [0x42b859]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ac]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tint rev = 0;\n\tint temp = n;\n\twhile(temp > 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == rev * 2 - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "/tmp/tmpzupaehae.d(11): Error: cannot implicitly convert expression `n` of type `long` to `int`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzupaehae.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = n.to!string.reverse.to!long;\n\treturn n == 2*r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "/tmp/tmpo564kgix.d(10): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpo564kgix.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == 2 * rev - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123994,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\tr = r * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == r + 1) || (n == r - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123994,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpit5p19i6.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d5d]\n??:? void tmpit5p19i6.__unittest_L19_C1() [0x427acc]\n??:? void tmpit5p19i6.__modtest() [0x427ae0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a916]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faa9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff58]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8ed]\n??:? runModuleUnitTests [0x42b859]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ac]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tauto rev = n.to!string().reversed.to!long;\n\treturn n == rev * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "/tmp/tmptvku8orm.d(10): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptvku8orm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\treturn n == 2 * n.reversed - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "/tmp/tmp274p2x69.d(10): Error: no property `reversed` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp274p2x69.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong x = n;\n\twhile (x != 0) {\n\t\tr = r * 10 + x % 10;\n\t\tx /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123994,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == rev * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517620,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\treturn n == (n / 10) * 19 - 9;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123994,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_t1sk04v.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x427d05]\n??:? void tmp_t1sk04v.__unittest_L12_C1() [0x427a74]\n??:? void tmp_t1sk04v.__modtest() [0x427a88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff00]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9dd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a895]\n??:? runModuleUnitTests [0x42b801]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428154]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp > 0)\n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == rev * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tauto rev = n.to!string.dup.reverse;\n\treturn n == 2 * rev.to!long - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517620,
      "stdout": "",
      "stderr": "/tmp/tmp7_04wr10.d(10): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7_04wr10.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile(t > 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong reverse = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\treverse = reverse * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == reverse * 2 - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1665517620,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong t = n;\n\twhile(t > 0) {\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123993,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\treturn n == (n / 10) * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123994,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp55x6myni.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x427d05]\n??:? void tmp55x6myni.__unittest_L12_C1() [0x427a74]\n??:? void tmp55x6myni.__modtest() [0x427a88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff00]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42f9dd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a895]\n??:? runModuleUnitTests [0x42b801]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428154]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong m = n;\n\twhile (m != 0) \n\t{\n\t\trev = rev * 10 + m % 10;\n\t\tm /= 10;\n\t}\n\treturn n == 2 * rev - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123994,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong reverse = 0;\n\tlong x = n;\n\twhile (x != 0) {\n\t\treverse = reverse * 10 + x % 10;\n\t\tx /= 10;\n\t}\n\treturn n == 2 * reverse - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123994,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp > 0) {\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == 2 * rev - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123994,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) {\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == rev * 2 - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tauto s = to!string(n);\n\tauto r = s.dup.reverse;\n\treturn n == 2*to!long(r) - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "/tmp/tmpfo3ska5c.d(10): Error: template instance `to!string` template `to` is not defined, did you mean No?\n/tmp/tmpfo3ska5c.d(12): Error: template instance `to!long` template `to` is not defined, did you mean No?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfo3ska5c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tauto s = to!string(n);\n\tauto r = s.dup.reverse;\n\treturn n == 2 * to!long(r) - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "/tmp/tmpzwjmfey1.d(10): Error: template instance `to!string` template `to` is not defined, did you mean No?\n/tmp/tmpzwjmfey1.d(12): Error: template instance `to!long` template `to` is not defined, did you mean No?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzwjmfey1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == (rev * 2) - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tauto s = to!string(n);\n\tauto r = s.dup.reverse;\n\treturn n == 2*to!long(r) - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "/tmp/tmpfo3ska5c.d(10): Error: template instance `to!string` template `to` is not defined, did you mean No?\n/tmp/tmpfo3ska5c.d(12): Error: template instance `to!long` template `to` is not defined, did you mean No?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfo3ska5c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong num = n;\n\twhile (num != 0) \n\t{\n\t\trev = rev * 10 + num % 10;\n\t\tnum /= 10;\n\t}\n\treturn (n == 2 * rev - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123994,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == (2 * rev - 1));\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123992,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong r = 0;\n\tlong m = n;\n\twhile(m > 0)\n\t{\n\t\tr = r * 10 + m % 10;\n\t\tm /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123994,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == 2 * rev - 1);\n}\nunittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
      "timestamp": 1666123994,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_640_remove_parenthesis",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_640_remove_parenthesis.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_0xt5ngf.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b2d]\n??:? void tmp_0xt5ngf.__unittest_L23_C1() [0x427c0e]\n??:? void tmp_0xt5ngf.__modtest() [0x427d94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df17]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428886]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adc5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae54]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad51]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42885d]\n??:? runModuleUnitTests [0x42dced]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428ff0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item.length > 0)\n\t\t\t{\n\t\t\t\tif(item[$-1] == ')')\n\t\t\t\t{\n\t\t\t\t\titem = item[0..$-1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1kb4p4a7.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bd5]\n??:? void tmp1kb4p4a7.__unittest_L31_C1() [0x427cba]\n??:? void tmp1kb4p4a7.__modtest() [0x427e40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42892e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae6d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aefc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428905]\n??:? runModuleUnitTests [0x42dd95]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429098]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(item[0] == '(' && item[$-1] == ')')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-2];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpi7tzijhz.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bcd]\n??:? void tmpi7tzijhz.__unittest_L31_C1() [0x427cb2]\n??:? void tmpi7tzijhz.__modtest() [0x427e38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfb7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae65]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aef4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288fd]\n??:? runModuleUnitTests [0x42dd8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429090]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(item[0] == '(' && item[$-1] == ')')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqdys05bf.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bcd]\n??:? void tmpqdys05bf.__unittest_L31_C1() [0x427cb2]\n??:? void tmpqdys05bf.__modtest() [0x427e38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfb7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae65]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aef4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288fd]\n??:? runModuleUnitTests [0x42dd8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429090]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(item[0] != '(' && item[$-1] != ')')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpetphnnjk.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428b75]\n??:? void tmpetphnnjk.__unittest_L27_C1() [0x427c5a]\n??:? void tmpetphnnjk.__modtest() [0x427de0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae9c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288a5]\n??:? runModuleUnitTests [0x42dd35]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429038]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item != \"(\" && item != \")\")\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpgprevhdv.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428b55]\n??:? void tmpgprevhdv.__unittest_L20_C1() [0x427c36]\n??:? void tmpgprevhdv.__modtest() [0x427dbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42decb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ad79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae08]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428885]\n??:? runModuleUnitTests [0x42dca1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fa4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t\telse if(item[0] != '(' && item[$-1] != ')')\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkawv1d21.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x428b75]\n??:? void tmpkawv1d21.__unittest_L24_C1() [0x427c5a]\n??:? void tmpkawv1d21.__modtest() [0x427de0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae9c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288a5]\n??:? runModuleUnitTests [0x42dd35]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429038]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(' && item[$ - 1] == ')')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$ - 2];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_2_fjyge.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428bb5]\n??:? void tmp_2_fjyge.__unittest_L27_C1() [0x427c96]\n??:? void tmp_2_fjyge.__modtest() [0x427e1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df9f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42890e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae4d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aedc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42add9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288e5]\n??:? runModuleUnitTests [0x42dd75]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429078]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item.length > 0)\n\t\t\t{\n\t\t\t\tif(item[$-1] == ')')\n\t\t\t\t{\n\t\t\t\t\titem = item[0..$-1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1kb4p4a7.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bd5]\n??:? void tmp1kb4p4a7.__unittest_L31_C1() [0x427cba]\n??:? void tmp1kb4p4a7.__modtest() [0x427e40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42892e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae6d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aefc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428905]\n??:? runModuleUnitTests [0x42dd95]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429098]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tint count = 0;\n\tforeach(item; items)\n\t{\n\t\tif(item == \"(\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t\telse if(item == \")\")\n\t\t{\n\t\t\tcount--;\n\t\t}\n\t\telse if(count == 0)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmphv6vx18r.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428b6d]\n??:? void tmphv6vx18r.__unittest_L29_C1() [0x427c52]\n??:? void tmphv6vx18r.__modtest() [0x427dd8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dee3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288c6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ad91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42889d]\n??:? runModuleUnitTests [0x42dcb9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fbc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(' && item[$-1] == ')')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-2];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprdp26yxo.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428bb5]\n??:? void tmprdp26yxo.__unittest_L27_C1() [0x427c96]\n??:? void tmprdp26yxo.__modtest() [0x427e1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df9f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42890e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae4d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aedc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42add9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288e5]\n??:? runModuleUnitTests [0x42dd75]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429078]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item[0] != '(')\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpgdi2ibhs.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428b1d]\n??:? void tmpgdi2ibhs.__unittest_L20_C1() [0x427bfe]\n??:? void tmpgdi2ibhs.__modtest() [0x427d84]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df07]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428876]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adb5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae44]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad41]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42884d]\n??:? runModuleUnitTests [0x42dcdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fe0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\tint index = item.find(')');\n\t\t\t\tif(index != -1)\n\t\t\t\t{\n\t\t\t\t\titem = item[index+1..$];\n\t\t\t\t}\n\t\t\t}\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "/tmp/tmpybiucoos.d(17): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpybiucoos.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t\telse if(item[0] != '(' && item[$-1] != ')')\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkawv1d21.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x428b75]\n??:? void tmpkawv1d21.__unittest_L24_C1() [0x427c5a]\n??:? void tmpkawv1d21.__modtest() [0x427de0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae9c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288a5]\n??:? runModuleUnitTests [0x42dd35]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429038]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item == \"(\" || item == \")\")\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxv09x2qa.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x428b55]\n??:? void tmpxv09x2qa.__unittest_L21_C1() [0x427c36]\n??:? void tmpxv09x2qa.__modtest() [0x427dbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42decb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ad79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae08]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428885]\n??:? runModuleUnitTests [0x42dca1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fa4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item.length > 0)\n\t\t\t{\n\t\t\t\tif(item[$-1] == ')')\n\t\t\t\t{\n\t\t\t\t\titem = item[0..$-1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1kb4p4a7.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bd5]\n??:? void tmp1kb4p4a7.__unittest_L31_C1() [0x427cba]\n??:? void tmp1kb4p4a7.__modtest() [0x427e40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42892e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae6d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aefc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428905]\n??:? runModuleUnitTests [0x42dd95]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429098]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item == \"(\")\n\t\t{\n\t\t\tresult ~= \" \";\n\t\t}\n\t\telse if(item == \")\")\n\t\t{\n\t\t\tresult ~= \" \";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpeeptcc7_.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428b95]\n??:? void tmpeeptcc7_.__unittest_L28_C1() [0x427c7a]\n??:? void tmpeeptcc7_.__modtest() [0x427e00]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ee]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adb9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288c5]\n??:? runModuleUnitTests [0x42dce1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fe4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2m79o7wu.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428b85]\n??:? void tmp2m79o7wu.__unittest_L27_C1() [0x427c6a]\n??:? void tmp2m79o7wu.__modtest() [0x427df0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aeac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ada9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288b5]\n??:? runModuleUnitTests [0x42dd45]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429048]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0 && item[0] != '(')\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpn0i0balg.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428b25]\n??:? void tmpn0i0balg.__unittest_L20_C1() [0x427c06]\n??:? void tmpn0i0balg.__modtest() [0x427d8c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df0f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42887e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adbd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae4c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad49]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428855]\n??:? runModuleUnitTests [0x42dce5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fe8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items) \n\t{\n\t\tif(item[0] != '(') \n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppu4yow5c.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428b1d]\n??:? void tmppu4yow5c.__unittest_L20_C1() [0x427bfe]\n??:? void tmppu4yow5c.__modtest() [0x427d84]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df07]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428876]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adb5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae44]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad41]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42884d]\n??:? runModuleUnitTests [0x42dcdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fe0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_pd7fpww.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b25]\n??:? void tmp_pd7fpww.__unittest_L23_C1() [0x427c0a]\n??:? void tmp_pd7fpww.__modtest() [0x427d90]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df0f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42887e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adbd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae4c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad49]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428855]\n??:? runModuleUnitTests [0x42dce5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fe8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(' && item[$-1] != ')')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7q1vs6da.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b5d]\n??:? void tmp7q1vs6da.__unittest_L23_C1() [0x427c3e]\n??:? void tmp7q1vs6da.__modtest() [0x427dc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df47]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42888d]\n??:? runModuleUnitTests [0x42dd1d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429020]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(' && item[$-1] != ')')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpwvbqfpp6.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b5d]\n??:? void tmpwvbqfpp6.__unittest_L23_C1() [0x427c3e]\n??:? void tmpwvbqfpp6.__modtest() [0x427dc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df47]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42888d]\n??:? runModuleUnitTests [0x42dd1d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429020]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item == \"(\" || item == \")\")\n\t\t\tcontinue;\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy5456sts.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x428b55]\n??:? void tmpy5456sts.__unittest_L19_C1() [0x427c36]\n??:? void tmpy5456sts.__modtest() [0x427dbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42decb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ad79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae08]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428885]\n??:? runModuleUnitTests [0x42dca1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fa4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item[0] != '(')\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvcs_pv5b.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428b1d]\n??:? void tmpvcs_pv5b.__unittest_L20_C1() [0x427bfe]\n??:? void tmpvcs_pv5b.__modtest() [0x427d84]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df07]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428876]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adb5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae44]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad41]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42884d]\n??:? runModuleUnitTests [0x42dcdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fe0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items) {\n\t\tif(item.length == 1) {\n\t\t\tresult ~= item;\n\t\t}\n\t\telse if(item[0] == '(') {\n\t\t\tresult ~= item[1..$-1];\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz7_igs4z.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x428b85]\n??:? void tmpz7_igs4z.__unittest_L21_C1() [0x427c66]\n??:? void tmpz7_igs4z.__modtest() [0x427dec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aeac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ada9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288b5]\n??:? runModuleUnitTests [0x42dd45]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429048]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item[0] == '(')\n\t\t{\n\t\t\titem = item[1..$-1];\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplks0b5m1.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x428b65]\n??:? void tmplks0b5m1.__unittest_L21_C1() [0x427c46]\n??:? void tmplks0b5m1.__modtest() [0x427dcc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df4f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adfd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae8c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428895]\n??:? runModuleUnitTests [0x42dd25]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429028]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(' && item[$ - 1] == ')')\n\t\t\t{\n\t\t\t\titem = item[1..$ - 2];\n\t\t\t}\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpai3xyxbk.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x428b9d]\n??:? void tmpai3xyxbk.__unittest_L24_C1() [0x427c82]\n??:? void tmpai3xyxbk.__modtest() [0x427e08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df87]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288f6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae35]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aec4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adc1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288cd]\n??:? runModuleUnitTests [0x42dd5d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429060]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(i; items)\n\t{\n\t\tif(i.find(\"(\") != -1)\n\t\t{\n\t\t\ti = i.replace(\"(\", \"\");\n\t\t\ti = i.replace(\")\", \"\");\n\t\t}\n\t\tresult ~= i;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123133,
      "stdout": "",
      "stderr": "/tmp/tmpfqtgpgho.d(13): Error: no property `find` for type `string`\n/tmp/tmpfqtgpgho.d(15): Error: no property `replace` for type `string`\n/tmp/tmpfqtgpgho.d(16): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfqtgpgho.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(' && item[$-1] != ')')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpwvbqfpp6.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b5d]\n??:? void tmpwvbqfpp6.__unittest_L23_C1() [0x427c3e]\n??:? void tmpwvbqfpp6.__modtest() [0x427dc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df47]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42888d]\n??:? runModuleUnitTests [0x42dd1d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429020]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t\telse if(item[0] != '(' && item[$-1] != ')')\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpukwm8327.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x428b75]\n??:? void tmpukwm8327.__unittest_L24_C1() [0x427c5a]\n??:? void tmpukwm8327.__modtest() [0x427de0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae9c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288a5]\n??:? runModuleUnitTests [0x42dd35]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429038]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(item[0] == '(' && item[$-1] == ')')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-2];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpsimh_5zl.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bcd]\n??:? void tmpsimh_5zl.__unittest_L31_C1() [0x427cb2]\n??:? void tmpsimh_5zl.__modtest() [0x427e38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfb7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae65]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aef4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288fd]\n??:? runModuleUnitTests [0x42dd8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429090]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(i; items)\n\t{\n\t\tif(i.length == 1)\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz2vodvuv.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428b05]\n??:? void tmpz2vodvuv.__unittest_L20_C1() [0x427be6]\n??:? void tmpz2vodvuv.__modtest() [0x427d6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42de7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42885e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ad29]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42adb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42acb5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428835]\n??:? runModuleUnitTests [0x42dc51]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428f54]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2m79o7wu.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428b85]\n??:? void tmp2m79o7wu.__unittest_L27_C1() [0x427c6a]\n??:? void tmp2m79o7wu.__modtest() [0x427df0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aeac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ada9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288b5]\n??:? runModuleUnitTests [0x42dd45]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429048]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item[$-1] == ')')\n\t\t\t{\n\t\t\t\titem = item[0..$-1];\n\t\t\t}\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpr0o5y9bb.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428bcd]\n??:? void tmpr0o5y9bb.__unittest_L28_C1() [0x427cb2]\n??:? void tmpr0o5y9bb.__modtest() [0x427e38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfb7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae65]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aef4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288fd]\n??:? runModuleUnitTests [0x42dd8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429090]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items) \n\t{\n\t\tif(item == \"(\" || item == \")\") \n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8s_dg8ze.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x428b55]\n??:? void tmp8s_dg8ze.__unittest_L21_C1() [0x427c36]\n??:? void tmp8s_dg8ze.__modtest() [0x427dbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42decb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ad79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae08]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428885]\n??:? runModuleUnitTests [0x42dca1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fa4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item[$-1] == ')')\n\t\t\t{\n\t\t\t\titem = item[0..$-1];\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6ou0raef.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428bcd]\n??:? void tmp6ou0raef.__unittest_L28_C1() [0x427cb2]\n??:? void tmp6ou0raef.__modtest() [0x427e38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfb7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae65]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aef4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288fd]\n??:? runModuleUnitTests [0x42dd8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429090]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfuqsmjti.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428b05]\n??:? void tmpfuqsmjti.__unittest_L20_C1() [0x427be6]\n??:? void tmpfuqsmjti.__modtest() [0x427d6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42de7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42885e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ad29]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42adb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42acb5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428835]\n??:? runModuleUnitTests [0x42dc51]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428f54]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t\telse if(item.length > 1)\n\t\t{\n\t\t\tif(item[0] == '(' && item[$-1] == ')')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp60mw62q3.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bdd]\n??:? void tmp60mw62q3.__unittest_L31_C1() [0x427cbe]\n??:? void tmp60mw62q3.__modtest() [0x427e44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfc7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae75]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42af04]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ae01]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42890d]\n??:? runModuleUnitTests [0x42dd9d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4290a0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\tif(item[item.length - 1] == ')')\n\t\t\t\t{\n\t\t\t\t\titem = item[1..item.length - 1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_lsotqb6.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428bad]\n??:? void tmp_lsotqb6.__unittest_L27_C1() [0x427c8e]\n??:? void tmp_lsotqb6.__modtest() [0x427e14]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df97]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae45]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aed4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42add1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288dd]\n??:? runModuleUnitTests [0x42dd6d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429070]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfuqsmjti.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428b05]\n??:? void tmpfuqsmjti.__unittest_L20_C1() [0x427be6]\n??:? void tmpfuqsmjti.__modtest() [0x427d6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42de7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42885e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ad29]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42adb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42acb5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428835]\n??:? runModuleUnitTests [0x42dc51]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428f54]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7iuzm4k5.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428b85]\n??:? void tmp7iuzm4k5.__unittest_L27_C1() [0x427c6a]\n??:? void tmp7iuzm4k5.__modtest() [0x427df0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aeac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ada9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288b5]\n??:? runModuleUnitTests [0x42dd45]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429048]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item.length > 0)\n\t\t\t{\n\t\t\t\tif(item[$-1] == ')')\n\t\t\t\t{\n\t\t\t\t\titem = item[0..$-1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1kb4p4a7.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bd5]\n??:? void tmp1kb4p4a7.__unittest_L31_C1() [0x427cba]\n??:? void tmp1kb4p4a7.__modtest() [0x427e40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42892e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae6d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aefc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428905]\n??:? runModuleUnitTests [0x42dd95]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429098]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(' && item[item.length-1] != ')')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplni5ltwn.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b55]\n??:? void tmplni5ltwn.__unittest_L23_C1() [0x427c3a]\n??:? void tmplni5ltwn.__modtest() [0x427dc0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df3f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42aded]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae7c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad79]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428885]\n??:? runModuleUnitTests [0x42dd15]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429018]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tint count = 0;\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item == \"(\")\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t\telse if(item == \")\")\n\t\t{\n\t\t\tcount--;\n\t\t}\n\t\telse if(count == 0)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpgrlx9_hm.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428b6d]\n??:? void tmpgrlx9_hm.__unittest_L29_C1() [0x427c52]\n??:? void tmpgrlx9_hm.__modtest() [0x427dd8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dee3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288c6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ad91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42889d]\n??:? runModuleUnitTests [0x42dcb9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fbc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t\telse if(item[0] != '(' && item[$-1] != ')')\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkawv1d21.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x428b75]\n??:? void tmpkawv1d21.__unittest_L24_C1() [0x427c5a]\n??:? void tmpkawv1d21.__modtest() [0x427de0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae9c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288a5]\n??:? runModuleUnitTests [0x42dd35]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429038]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length == 0)\n\t\t\tcontinue;\n\t\tif(item[0] == '(')\n\t\t{\n\t\t\titem = item[1..$];\n\t\t\tif(item.length == 0)\n\t\t\t\tcontinue;\n\t\t\tif(item[$-1] == ')')\n\t\t\t\titem = item[0..$-2];\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0b7f24_0.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428bd5]\n??:? void tmp0b7f24_0.__unittest_L27_C1() [0x427cb6]\n??:? void tmp0b7f24_0.__modtest() [0x427e3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42892e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae6d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aefc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428905]\n??:? runModuleUnitTests [0x42dd95]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429098]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= item[1 .. $-1];\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpp8rf2qs0.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x428b5d]\n??:? void tmpp8rf2qs0.__unittest_L24_C1() [0x427c3e]\n??:? void tmpp8rf2qs0.__modtest() [0x427dc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df47]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42888d]\n??:? runModuleUnitTests [0x42dd1d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429020]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item == \"(\")\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse if(item == \")\")\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1x90q3kl.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428b55]\n??:? void tmp1x90q3kl.__unittest_L28_C1() [0x427c36]\n??:? void tmp1x90q3kl.__modtest() [0x427dbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42decb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ad79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae08]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428885]\n??:? runModuleUnitTests [0x42dca1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fa4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(' && item[$-1] != ')')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7q1vs6da.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b5d]\n??:? void tmp7q1vs6da.__unittest_L23_C1() [0x427c3e]\n??:? void tmp7q1vs6da.__modtest() [0x427dc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df47]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42888d]\n??:? runModuleUnitTests [0x42dd1d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429020]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items) \n\t{\n\t\tif(item.length == 1) \n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpgg3hqk51.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428b05]\n??:? void tmpgg3hqk51.__unittest_L20_C1() [0x427be6]\n??:? void tmpgg3hqk51.__modtest() [0x427d6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42de7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42885e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ad29]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42adb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42acb5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428835]\n??:? runModuleUnitTests [0x42dc51]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428f54]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7iuzm4k5.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428b85]\n??:? void tmp7iuzm4k5.__unittest_L27_C1() [0x427c6a]\n??:? void tmp7iuzm4k5.__modtest() [0x427df0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aeac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ada9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288b5]\n??:? runModuleUnitTests [0x42dd45]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429048]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(' && item[$-1] != ')')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7q1vs6da.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b5d]\n??:? void tmp7q1vs6da.__unittest_L23_C1() [0x427c3e]\n??:? void tmp7q1vs6da.__modtest() [0x427dc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df47]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42888d]\n??:? runModuleUnitTests [0x42dd1d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429020]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(' && item[$-1] == ')')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-2];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprdp26yxo.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428bb5]\n??:? void tmprdp26yxo.__unittest_L27_C1() [0x427c96]\n??:? void tmprdp26yxo.__modtest() [0x427e1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df9f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42890e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae4d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aedc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42add9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288e5]\n??:? runModuleUnitTests [0x42dd75]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429078]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(' && item[$-1] != ')')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmptw58hfqh.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b55]\n??:? void tmptw58hfqh.__unittest_L23_C1() [0x427c3a]\n??:? void tmptw58hfqh.__modtest() [0x427dc0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df3f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42aded]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae7c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad79]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428885]\n??:? runModuleUnitTests [0x42dd15]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429018]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item[0] == '(')\n\t\t{\n\t\t\tresult ~= item[1..$-1];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4nxn6uc8.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x428b75]\n??:? void tmp4nxn6uc8.__unittest_L24_C1() [0x427c56]\n??:? void tmp4nxn6uc8.__modtest() [0x427ddc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae9c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288a5]\n??:? runModuleUnitTests [0x42dd35]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429038]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item == \"(\")\n\t\t{\n\t\t\twhile(item != \")\")\n\t\t\t{\n\t\t\t\titem = items.popFront();\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "/tmp/tmpxsl252un.d(17): Error: no property `popFront` for type `string[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxsl252un.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2m79o7wu.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428b85]\n??:? void tmp2m79o7wu.__unittest_L27_C1() [0x427c6a]\n??:? void tmp2m79o7wu.__modtest() [0x427df0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aeac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ada9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288b5]\n??:? runModuleUnitTests [0x42dd45]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429048]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0 && item[0] != '(')\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpp79lqfg2.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428b1d]\n??:? void tmpp79lqfg2.__unittest_L20_C1() [0x427c02]\n??:? void tmpp79lqfg2.__modtest() [0x427d88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df07]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428876]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adb5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae44]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad41]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42884d]\n??:? runModuleUnitTests [0x42dcdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fe0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_0xt5ngf.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b2d]\n??:? void tmp_0xt5ngf.__unittest_L23_C1() [0x427c0e]\n??:? void tmp_0xt5ngf.__modtest() [0x427d94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df17]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428886]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adc5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae54]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad51]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42885d]\n??:? runModuleUnitTests [0x42dced]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428ff0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(string item; items)\n\t{\n\t\tif(item.length == 0)\n\t\t\tcontinue;\n\t\tif(item[0] == '(' && item[$-1] == ')')\n\t\t{\n\t\t\tresult ~= item[1..$-2];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbujnxbgo.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x428bad]\n??:? void tmpbujnxbgo.__unittest_L26_C1() [0x427c8e]\n??:? void tmpbujnxbgo.__modtest() [0x427e14]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df97]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae45]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aed4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42add1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288dd]\n??:? runModuleUnitTests [0x42dd6d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429070]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpibkwf3ij.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428b45]\n??:? void tmpibkwf3ij.__unittest_L31_C1() [0x427c2a]\n??:? void tmpibkwf3ij.__modtest() [0x427db0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df2f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42889e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42addd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae6c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad69]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428875]\n??:? runModuleUnitTests [0x42dd05]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429008]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(' && item[$-1] != ')')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpwvbqfpp6.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b5d]\n??:? void tmpwvbqfpp6.__unittest_L23_C1() [0x427c3e]\n??:? void tmpwvbqfpp6.__modtest() [0x427dc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df47]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42888d]\n??:? runModuleUnitTests [0x42dd1d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429020]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item[0] != '(' && item[$-1] != ')')\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpu6_jkj0z.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428b4d]\n??:? void tmpu6_jkj0z.__unittest_L20_C1() [0x427c2e]\n??:? void tmpu6_jkj0z.__modtest() [0x427db4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df37]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288a6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ade5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae74]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad71]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42887d]\n??:? runModuleUnitTests [0x42dd0d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429010]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item.length > 0)\n\t\t\t{\n\t\t\t\tif(item[$-1] == ')')\n\t\t\t\t{\n\t\t\t\t\titem = item[0..$-1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfwmci2eo.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bd5]\n??:? void tmpfwmci2eo.__unittest_L31_C1() [0x427cb6]\n??:? void tmpfwmci2eo.__modtest() [0x427e3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42892e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae6d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aefc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428905]\n??:? runModuleUnitTests [0x42dd95]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429098]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item == \"(\" || item == \")\")\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp29uupa8v.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x428b55]\n??:? void tmp29uupa8v.__unittest_L24_C1() [0x427c36]\n??:? void tmp29uupa8v.__modtest() [0x427dbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42decb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ad79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae08]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428885]\n??:? runModuleUnitTests [0x42dca1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fa4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item[$-1] == ')')\n\t\t\t{\n\t\t\t\titem = item[0..$-1];\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpypczm0_5.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428bcd]\n??:? void tmpypczm0_5.__unittest_L28_C1() [0x427cb2]\n??:? void tmpypczm0_5.__modtest() [0x427e38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfb7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae65]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aef4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288fd]\n??:? runModuleUnitTests [0x42dd8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429090]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(' && item[$-1] != ')')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpwvbqfpp6.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b5d]\n??:? void tmpwvbqfpp6.__unittest_L23_C1() [0x427c3e]\n??:? void tmpwvbqfpp6.__modtest() [0x427dc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df47]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42888d]\n??:? runModuleUnitTests [0x42dd1d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429020]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\tif(item[$-1] == ')')\n\t\t\t\t{\n\t\t\t\t\tresult ~= item[1..$-1];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tresult ~= item;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp98h0q044.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x428bd5]\n??:? void tmp98h0q044.__unittest_L34_C1() [0x427cba]\n??:? void tmp98h0q044.__modtest() [0x427e40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42892e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae6d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aefc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428905]\n??:? runModuleUnitTests [0x42dd95]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429098]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t\telse if(item[0] == '(')\n\t\t{\n\t\t\tresult ~= item[1..$-1];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9quwgaor.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428b9d]\n??:? void tmp9quwgaor.__unittest_L28_C1() [0x427c82]\n??:? void tmp9quwgaor.__modtest() [0x427e08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df87]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288f6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae35]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aec4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adc1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288cd]\n??:? runModuleUnitTests [0x42dd5d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429060]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\tif(item[$-1] == ')')\n\t\t\t\t{\n\t\t\t\t\tresult ~= item[1..$-1];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tresult ~= item[1..$];\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(item[$-1] == ')')\n\t\t\t\t{\n\t\t\t\t\tresult ~= item[0..$-1];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tresult ~= item;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_7iefgu1.d(45): unittest failure\n----------------\n??:? _d_unittestp [0x428c7d]\n??:? void tmp_7iefgu1.__unittest_L41_C1() [0x427d62]\n??:? void tmp_7iefgu1.__modtest() [0x427ee8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42e067]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4289d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42af15]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42afa4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42aea1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4289ad]\n??:? runModuleUnitTests [0x42de3d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429140]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(' && item[$-1] == ')')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-2];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprdp26yxo.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428bb5]\n??:? void tmprdp26yxo.__unittest_L27_C1() [0x427c96]\n??:? void tmprdp26yxo.__modtest() [0x427e1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df9f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42890e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae4d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aedc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42add9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288e5]\n??:? runModuleUnitTests [0x42dd75]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429078]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item.length > 0)\n\t\t\t{\n\t\t\t\tif(item[$-1] == ')')\n\t\t\t\t{\n\t\t\t\t\titem = item[0..$-1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfwmci2eo.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bd5]\n??:? void tmpfwmci2eo.__unittest_L31_C1() [0x427cb6]\n??:? void tmpfwmci2eo.__modtest() [0x427e3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42892e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae6d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aefc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428905]\n??:? runModuleUnitTests [0x42dd95]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429098]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2m79o7wu.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428b85]\n??:? void tmp2m79o7wu.__unittest_L27_C1() [0x427c6a]\n??:? void tmp2m79o7wu.__modtest() [0x427df0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aeac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ada9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288b5]\n??:? runModuleUnitTests [0x42dd45]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429048]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(' && item[$-1] != ')')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7q1vs6da.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b5d]\n??:? void tmp7q1vs6da.__unittest_L23_C1() [0x427c3e]\n??:? void tmp7q1vs6da.__modtest() [0x427dc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df47]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42888d]\n??:? runModuleUnitTests [0x42dd1d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429020]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0 && item[0] != '(')\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpn0i0balg.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428b25]\n??:? void tmpn0i0balg.__unittest_L20_C1() [0x427c06]\n??:? void tmpn0i0balg.__modtest() [0x427d8c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df0f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42887e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adbd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae4c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad49]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428855]\n??:? runModuleUnitTests [0x42dce5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fe8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0 && item[0] != '(')\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpn0i0balg.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428b25]\n??:? void tmpn0i0balg.__unittest_L20_C1() [0x427c06]\n??:? void tmpn0i0balg.__modtest() [0x427d8c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df0f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42887e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adbd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae4c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad49]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428855]\n??:? runModuleUnitTests [0x42dce5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fe8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item == \"(\")\n\t\t{\n\t\t\twhile(item != \")\")\n\t\t\t{\n\t\t\t\titem = items.popFront();\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "/tmp/tmpxsl252un.d(17): Error: no property `popFront` for type `string[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxsl252un.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item == \"(\")\n\t\t{\n\t\t\twhile(item != \")\")\n\t\t\t{\n\t\t\t\titem = items[1];\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpiyxx4_8k.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428b85]\n??:? void tmpiyxx4_8k.__unittest_L27_C1() [0x427c6a]\n??:? void tmpiyxx4_8k.__modtest() [0x427df0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aeac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ada9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288b5]\n??:? runModuleUnitTests [0x42dd45]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429048]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items) \n\t{\n\t\tif(item.length == 0) \n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tif(item[0] == '(') \n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tif(item[$-1] == ')') \n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpq5tg4jdy.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x428b55]\n??:? void tmpq5tg4jdy.__unittest_L29_C1() [0x427c36]\n??:? void tmpq5tg4jdy.__modtest() [0x427dbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df3f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42aded]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae7c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad79]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428885]\n??:? runModuleUnitTests [0x42dd15]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429018]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t\telse if(item[0] == '(' && item[$-1] == ')')\n\t\t{\n\t\t\tresult ~= item[1..$-2];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxh36sl4j.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428bcd]\n??:? void tmpxh36sl4j.__unittest_L28_C1() [0x427cb2]\n??:? void tmpxh36sl4j.__modtest() [0x427e38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfb7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae65]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aef4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288fd]\n??:? runModuleUnitTests [0x42dd8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429090]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item == \"(\" || item == \")\")\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxv09x2qa.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x428b55]\n??:? void tmpxv09x2qa.__unittest_L21_C1() [0x427c36]\n??:? void tmpxv09x2qa.__modtest() [0x427dbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42decb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ad79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae08]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428885]\n??:? runModuleUnitTests [0x42dca1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fa4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0 && item[0] != '(')\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpp79lqfg2.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428b1d]\n??:? void tmpp79lqfg2.__unittest_L20_C1() [0x427c02]\n??:? void tmpp79lqfg2.__modtest() [0x427d88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df07]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428876]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adb5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae44]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad41]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42884d]\n??:? runModuleUnitTests [0x42dcdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fe0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\tif(item[$-1] == ')')\n\t\t\t\t{\n\t\t\t\t\tresult ~= item[1..$-1];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tresult ~= item[1..$];\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(item[$-1] == ')')\n\t\t\t\t{\n\t\t\t\t\tresult ~= item[0..$-1];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tresult ~= item[0..$];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5w1biy2c.d(45): unittest failure\n----------------\n??:? _d_unittestp [0x428c85]\n??:? void tmp5w1biy2c.__unittest_L41_C1() [0x427d66]\n??:? void tmp5w1biy2c.__modtest() [0x427eec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42e06f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4289de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42af1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42afac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42aea9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4289b5]\n??:? runModuleUnitTests [0x42de45]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429148]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp68wuj0ew.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428b85]\n??:? void tmp68wuj0ew.__unittest_L27_C1() [0x427c66]\n??:? void tmp68wuj0ew.__modtest() [0x427dec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aeac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ada9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288b5]\n??:? runModuleUnitTests [0x42dd45]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429048]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item == \"(\" || item == \")\")\n\t\t\tcontinue;\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8jv2igpr.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x428b55]\n??:? void tmp8jv2igpr.__unittest_L19_C1() [0x427c36]\n??:? void tmp8jv2igpr.__modtest() [0x427dbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42decb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ad79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae08]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428885]\n??:? runModuleUnitTests [0x42dca1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fa4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item[$-1] == ')')\n\t\t\t{\n\t\t\t\titem = item[0..$-1];\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6ou0raef.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428bcd]\n??:? void tmp6ou0raef.__unittest_L28_C1() [0x427cb2]\n??:? void tmp6ou0raef.__modtest() [0x427e38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfb7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae65]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aef4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288fd]\n??:? runModuleUnitTests [0x42dd8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429090]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp68wuj0ew.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428b85]\n??:? void tmp68wuj0ew.__unittest_L27_C1() [0x427c66]\n??:? void tmp68wuj0ew.__modtest() [0x427dec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aeac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ada9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288b5]\n??:? runModuleUnitTests [0x42dd45]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429048]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items) \n\t{\n\t\tif(item.length > 0) \n\t\t{\n\t\t\tif(item[0] == '(') \n\t\t\t{\n\t\t\t\tif(item[$-1] == ')') \n\t\t\t\t{\n\t\t\t\t\tresult ~= item[1..$-1];\n\t\t\t\t}\n\t\t\t\telse \n\t\t\t\t{\n\t\t\t\t\tresult ~= item;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpa2dlfkze.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x428bd5]\n??:? void tmpa2dlfkze.__unittest_L34_C1() [0x427cba]\n??:? void tmpa2dlfkze.__modtest() [0x427e40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42892e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae6d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aefc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428905]\n??:? runModuleUnitTests [0x42dd95]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429098]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(item[0] == '(' && item[$-1] == ')')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-2];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpi7tzijhz.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bcd]\n??:? void tmpi7tzijhz.__unittest_L31_C1() [0x427cb2]\n??:? void tmpi7tzijhz.__modtest() [0x427e38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfb7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae65]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aef4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288fd]\n??:? runModuleUnitTests [0x42dd8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429090]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0 && item[0] != '(')\n\t\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpmubu4i1o.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x428b25]\n??:? void tmpmubu4i1o.__unittest_L18_C1() [0x427c06]\n??:? void tmpmubu4i1o.__modtest() [0x427d8c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df0f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42887e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adbd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae4c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad49]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428855]\n??:? runModuleUnitTests [0x42dce5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fe8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(' && item[$-1] != ')')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmptw58hfqh.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b55]\n??:? void tmptw58hfqh.__unittest_L23_C1() [0x427c3a]\n??:? void tmptw58hfqh.__modtest() [0x427dc0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df3f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42aded]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae7c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad79]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428885]\n??:? runModuleUnitTests [0x42dd15]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429018]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item == \"(\" || item == \")\")\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_i2a9s9x.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x428b55]\n??:? void tmp_i2a9s9x.__unittest_L21_C1() [0x427c36]\n??:? void tmp_i2a9s9x.__modtest() [0x427dbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42decb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ad79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae08]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428885]\n??:? runModuleUnitTests [0x42dca1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fa4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(' && item[$-1] != ')')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpwvbqfpp6.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b5d]\n??:? void tmpwvbqfpp6.__unittest_L23_C1() [0x427c3e]\n??:? void tmpwvbqfpp6.__modtest() [0x427dc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df47]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42888d]\n??:? runModuleUnitTests [0x42dd1d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429020]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7iuzm4k5.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428b85]\n??:? void tmp7iuzm4k5.__unittest_L27_C1() [0x427c6a]\n??:? void tmp7iuzm4k5.__modtest() [0x427df0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aeac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ada9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288b5]\n??:? runModuleUnitTests [0x42dd45]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429048]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2m79o7wu.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428b85]\n??:? void tmp2m79o7wu.__unittest_L27_C1() [0x427c6a]\n??:? void tmp2m79o7wu.__modtest() [0x427df0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aeac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ada9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288b5]\n??:? runModuleUnitTests [0x42dd45]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429048]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2m79o7wu.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428b85]\n??:? void tmp2m79o7wu.__unittest_L27_C1() [0x427c6a]\n??:? void tmp2m79o7wu.__modtest() [0x427df0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aeac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ada9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288b5]\n??:? runModuleUnitTests [0x42dd45]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429048]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0 && item[0] != '(' && item[$-1] != ')')\n\t\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprvkhktly.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x428b55]\n??:? void tmprvkhktly.__unittest_L18_C1() [0x427c36]\n??:? void tmprvkhktly.__modtest() [0x427dbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df3f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42aded]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae7c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad79]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428885]\n??:? runModuleUnitTests [0x42dd15]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429018]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item.length > 0)\n\t\t\t{\n\t\t\t\tif(item[$-1] == ')')\n\t\t\t\t{\n\t\t\t\t\titem = item[0..$-1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1kb4p4a7.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bd5]\n??:? void tmp1kb4p4a7.__unittest_L31_C1() [0x427cba]\n??:? void tmp1kb4p4a7.__modtest() [0x427e40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42892e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae6d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aefc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428905]\n??:? runModuleUnitTests [0x42dd95]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429098]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tint count = 0;\n\tforeach(item; items)\n\t{\n\t\tif(item == \"(\")\n\t\t\tcount++;\n\t\telse if(item == \")\")\n\t\t\tcount--;\n\t\telse if(count == 0)\n\t\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123135,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpdgylg4ba.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b6d]\n??:? void tmpdgylg4ba.__unittest_L23_C1() [0x427c4e]\n??:? void tmpdgylg4ba.__modtest() [0x427dd4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dee3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288c6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ad91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae20]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42889d]\n??:? runModuleUnitTests [0x42dcb9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fbc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item[0] == '(')\n\t\t{\n\t\t\tresult ~= \" \";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123135,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpescu5rsk.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x428b45]\n??:? void tmpescu5rsk.__unittest_L24_C1() [0x427c26]\n??:? void tmpescu5rsk.__modtest() [0x427dac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df2f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42889e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42addd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae6c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad69]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428875]\n??:? runModuleUnitTests [0x42dd05]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429008]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\tif(item[$-1] == ')')\n\t\t\t\t{\n\t\t\t\t\tresult ~= item[1..$-2];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tresult ~= item[1..$];\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123135,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1j7tc5s1.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x428c05]\n??:? void tmp1j7tc5s1.__unittest_L34_C1() [0x427ce6]\n??:? void tmp1j7tc5s1.__modtest() [0x427e6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfef]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42895e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae9d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42af2c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ae29]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428935]\n??:? runModuleUnitTests [0x42ddc5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4290c8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0 && item[0] != '(')\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpp79lqfg2.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428b1d]\n??:? void tmpp79lqfg2.__unittest_L20_C1() [0x427c02]\n??:? void tmpp79lqfg2.__modtest() [0x427d88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df07]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428876]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adb5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae44]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad41]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42884d]\n??:? runModuleUnitTests [0x42dcdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fe0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 1)\n\t\t{\n\t\t\tif(item[0] == '(' && item[$-1] == ')')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123135,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppzkkry4q.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bcd]\n??:? void tmppzkkry4q.__unittest_L31_C1() [0x427cb2]\n??:? void tmppzkkry4q.__modtest() [0x427e38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfb7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae65]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aef4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288fd]\n??:? runModuleUnitTests [0x42dd8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429090]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(' && item[$-1] != ')')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpwvbqfpp6.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b5d]\n??:? void tmpwvbqfpp6.__unittest_L23_C1() [0x427c3e]\n??:? void tmpwvbqfpp6.__modtest() [0x427dc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df47]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42888d]\n??:? runModuleUnitTests [0x42dd1d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429020]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item[0] == '(')\n\t\t{\n\t\t\tresult ~= item[1..$-1];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123135,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmphaodxklv.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x428b75]\n??:? void tmphaodxklv.__unittest_L24_C1() [0x427c56]\n??:? void tmphaodxklv.__modtest() [0x427ddc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae9c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288a5]\n??:? runModuleUnitTests [0x42dd35]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429038]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2m79o7wu.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428b85]\n??:? void tmp2m79o7wu.__unittest_L27_C1() [0x427c6a]\n??:? void tmp2m79o7wu.__modtest() [0x427df0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aeac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ada9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288b5]\n??:? runModuleUnitTests [0x42dd45]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429048]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(' && item[$-1] == ')')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-2];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123135,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpybd9j4lx.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428bb5]\n??:? void tmpybd9j4lx.__unittest_L27_C1() [0x427c96]\n??:? void tmpybd9j4lx.__modtest() [0x427e1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df9f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42890e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae4d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aedc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42add9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288e5]\n??:? runModuleUnitTests [0x42dd75]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429078]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item[$-1] == ')')\n\t\t\t{\n\t\t\t\titem = item[0..$-1];\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6ou0raef.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428bcd]\n??:? void tmp6ou0raef.__unittest_L28_C1() [0x427cb2]\n??:? void tmp6ou0raef.__modtest() [0x427e38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfb7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae65]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aef4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288fd]\n??:? runModuleUnitTests [0x42dd8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429090]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items) \n\t{\n\t\tif(item.length > 0 && item[0] != '(')\n\t\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123135,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxw1gntl6.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x428b25]\n??:? void tmpxw1gntl6.__unittest_L18_C1() [0x427c06]\n??:? void tmpxw1gntl6.__modtest() [0x427d8c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df0f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42887e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adbd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae4c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad49]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428855]\n??:? runModuleUnitTests [0x42dce5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fe8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item[$-1] == ')')\n\t\t\t{\n\t\t\t\titem = item[0..$-1];\n\t\t\t}\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpr0o5y9bb.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428bcd]\n??:? void tmpr0o5y9bb.__unittest_L28_C1() [0x427cb2]\n??:? void tmpr0o5y9bb.__modtest() [0x427e38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfb7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae65]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aef4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288fd]\n??:? runModuleUnitTests [0x42dd8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429090]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(' && item[$-1] == ')')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-2];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123135,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpybd9j4lx.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428bb5]\n??:? void tmpybd9j4lx.__unittest_L27_C1() [0x427c96]\n??:? void tmpybd9j4lx.__modtest() [0x427e1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df9f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42890e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae4d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aedc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42add9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288e5]\n??:? runModuleUnitTests [0x42dd75]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429078]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item == \"(\" || item == \")\")\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_i2a9s9x.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x428b55]\n??:? void tmp_i2a9s9x.__unittest_L21_C1() [0x427c36]\n??:? void tmp_i2a9s9x.__modtest() [0x427dbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42decb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ad79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae08]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428885]\n??:? runModuleUnitTests [0x42dca1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fa4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(' && item[$-1] != ')')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmptw58hfqh.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b55]\n??:? void tmptw58hfqh.__unittest_L23_C1() [0x427c3a]\n??:? void tmptw58hfqh.__modtest() [0x427dc0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df3f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42aded]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae7c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad79]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428885]\n??:? runModuleUnitTests [0x42dd15]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429018]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item.length > 0)\n\t\t\t{\n\t\t\t\tif(item[$-1] == ')')\n\t\t\t\t{\n\t\t\t\t\titem = item[0..$-1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfwmci2eo.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bd5]\n??:? void tmpfwmci2eo.__unittest_L31_C1() [0x427cb6]\n??:? void tmpfwmci2eo.__modtest() [0x427e3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42892e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae6d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aefc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428905]\n??:? runModuleUnitTests [0x42dd95]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429098]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item.length > 0)\n\t\t\t{\n\t\t\t\tif(item[$-1] == ')')\n\t\t\t\t{\n\t\t\t\t\titem = item[0..$-1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfwmci2eo.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bd5]\n??:? void tmpfwmci2eo.__unittest_L31_C1() [0x427cb6]\n??:? void tmpfwmci2eo.__modtest() [0x427e3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42892e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae6d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aefc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428905]\n??:? runModuleUnitTests [0x42dd95]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429098]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123135,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp77ptfgzu.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b2d]\n??:? void tmp77ptfgzu.__unittest_L23_C1() [0x427c0e]\n??:? void tmp77ptfgzu.__modtest() [0x427d94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df17]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428886]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adc5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae54]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad51]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42885d]\n??:? runModuleUnitTests [0x42dced]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428ff0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items) \n\t{\n\t\tif(item.length > 1) \n\t\t{\n\t\t\tif(item[0] == '(' && item[$-1] == ')') \n\t\t\t{\n\t\t\t\titem = item[1..$-1];\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123135,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmphslyw7cm.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x428b9d]\n??:? void tmphslyw7cm.__unittest_L24_C1() [0x427c82]\n??:? void tmphslyw7cm.__modtest() [0x427e08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df87]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288f6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae35]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aec4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adc1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288cd]\n??:? runModuleUnitTests [0x42dd5d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429060]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items) \n\t{\n\t\tif(item.length > 0 && item[0] != '(') \n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123135,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqda3923n.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428b25]\n??:? void tmpqda3923n.__unittest_L20_C1() [0x427c06]\n??:? void tmpqda3923n.__modtest() [0x427d8c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df0f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42887e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adbd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae4c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad49]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428855]\n??:? runModuleUnitTests [0x42dce5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fe8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 2)\n\t\t{\n\t\t\tif(item[0] == '(' && item[$-1] == ')')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-2];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123135,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_arojzzp.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bcd]\n??:? void tmp_arojzzp.__unittest_L31_C1() [0x427cb2]\n??:? void tmp_arojzzp.__modtest() [0x427e38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfb7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae65]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aef4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288fd]\n??:? runModuleUnitTests [0x42dd8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429090]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 1)\n\t\t{\n\t\t\tif(item[0] == '(' && item[$-1] == ')')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-2];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123135,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpb52lq6sf.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bcd]\n??:? void tmpb52lq6sf.__unittest_L31_C1() [0x427cb2]\n??:? void tmpb52lq6sf.__modtest() [0x427e38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfb7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae65]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aef4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288fd]\n??:? runModuleUnitTests [0x42dd8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429090]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_0xt5ngf.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b2d]\n??:? void tmp_0xt5ngf.__unittest_L23_C1() [0x427c0e]\n??:? void tmp_0xt5ngf.__modtest() [0x427d94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df17]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428886]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adc5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae54]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad51]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42885d]\n??:? runModuleUnitTests [0x42dced]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428ff0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t\telse if(item[0] != '(' && item[$-1] != ')')\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkawv1d21.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x428b75]\n??:? void tmpkawv1d21.__unittest_L24_C1() [0x427c5a]\n??:? void tmpkawv1d21.__modtest() [0x427de0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae9c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288a5]\n??:? runModuleUnitTests [0x42dd35]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429038]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item[0] == '(')\n\t\t{\n\t\t\titem = item[1..$-1];\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123135,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpv2bkskp7.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x428b65]\n??:? void tmpv2bkskp7.__unittest_L21_C1() [0x427c46]\n??:? void tmpv2bkskp7.__modtest() [0x427dcc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df4f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adfd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae8c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428895]\n??:? runModuleUnitTests [0x42dd25]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429028]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item.length > 0)\n\t\t\t{\n\t\t\t\tif(item[$-1] == ')')\n\t\t\t\t{\n\t\t\t\t\titem = item[0..$-1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1kb4p4a7.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bd5]\n??:? void tmp1kb4p4a7.__unittest_L31_C1() [0x427cba]\n??:? void tmp1kb4p4a7.__modtest() [0x427e40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42892e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae6d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aefc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428905]\n??:? runModuleUnitTests [0x42dd95]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429098]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t\telse if(item[0] == '(')\n\t\t{\n\t\t\tresult ~= item[1..$-1];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123135,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpi5ksh5qm.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428ba5]\n??:? void tmpi5ksh5qm.__unittest_L28_C1() [0x427c86]\n??:? void tmpi5ksh5qm.__modtest() [0x427e0c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df8f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae3d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aecc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adc9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288d5]\n??:? runModuleUnitTests [0x42dd65]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429068]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123135,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuah67g_n.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428b05]\n??:? void tmpuah67g_n.__unittest_L20_C1() [0x427be6]\n??:? void tmpuah67g_n.__modtest() [0x427d6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42de7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42885e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ad29]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42adb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42acb5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428835]\n??:? runModuleUnitTests [0x42dc51]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428f54]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(' && item[$-1] == ')')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-2];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprdp26yxo.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428bb5]\n??:? void tmprdp26yxo.__unittest_L27_C1() [0x427c96]\n??:? void tmprdp26yxo.__modtest() [0x427e1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df9f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42890e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae4d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aedc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42add9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288e5]\n??:? runModuleUnitTests [0x42dd75]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429078]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(' && item[$-1] != ')')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpwvbqfpp6.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b5d]\n??:? void tmpwvbqfpp6.__unittest_L23_C1() [0x427c3e]\n??:? void tmpwvbqfpp6.__modtest() [0x427dc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df47]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42888d]\n??:? runModuleUnitTests [0x42dd1d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429020]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\tif(item[item.length - 1] == ')')\n\t\t\t\t{\n\t\t\t\t\tresult ~= item[1..item.length - 1];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tresult ~= item;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123135,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmptwdjd6a4.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x428bd5]\n??:? void tmptwdjd6a4.__unittest_L34_C1() [0x427cba]\n??:? void tmptwdjd6a4.__modtest() [0x427e40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42892e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae6d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aefc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428905]\n??:? runModuleUnitTests [0x42dd95]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429098]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0 && item[0] != '(')\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpn0i0balg.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428b25]\n??:? void tmpn0i0balg.__unittest_L20_C1() [0x427c06]\n??:? void tmpn0i0balg.__modtest() [0x427d8c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df0f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42887e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adbd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae4c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad49]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428855]\n??:? runModuleUnitTests [0x42dce5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fe8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(' && item[$-1] != ')')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpwvbqfpp6.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b5d]\n??:? void tmpwvbqfpp6.__unittest_L23_C1() [0x427c3e]\n??:? void tmpwvbqfpp6.__modtest() [0x427dc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df47]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42888d]\n??:? runModuleUnitTests [0x42dd1d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429020]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp68wuj0ew.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428b85]\n??:? void tmp68wuj0ew.__unittest_L27_C1() [0x427c66]\n??:? void tmp68wuj0ew.__modtest() [0x427dec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aeac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ada9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288b5]\n??:? runModuleUnitTests [0x42dd45]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429048]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length == 0)\n\t\t\tcontinue;\n\t\tif(item[0] == '(' && item[$-1] == ')')\n\t\t\tresult ~= item[1..$-2];\n\t\telse\n\t\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123135,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqcfp7pez.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x428bad]\n??:? void tmpqcfp7pez.__unittest_L22_C1() [0x427c8e]\n??:? void tmpqcfp7pez.__modtest() [0x427e14]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df97]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae45]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aed4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42add1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288dd]\n??:? runModuleUnitTests [0x42dd6d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429070]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items) \n\t{\n\t\tif(item.length == 1) \n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpgg3hqk51.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428b05]\n??:? void tmpgg3hqk51.__unittest_L20_C1() [0x427be6]\n??:? void tmpgg3hqk51.__modtest() [0x427d6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42de7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42885e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ad29]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42adb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42acb5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428835]\n??:? runModuleUnitTests [0x42dc51]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428f54]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(' && item[$-1] != ')')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpwvbqfpp6.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b5d]\n??:? void tmpwvbqfpp6.__unittest_L23_C1() [0x427c3e]\n??:? void tmpwvbqfpp6.__modtest() [0x427dc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df47]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42888d]\n??:? runModuleUnitTests [0x42dd1d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429020]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif (item.length > 0)\n\t\t{\n\t\t\tif (item[0] == '(')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123135,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp63e8rmjn.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428b85]\n??:? void tmp63e8rmjn.__unittest_L27_C1() [0x427c6a]\n??:? void tmp63e8rmjn.__modtest() [0x427df0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aeac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ada9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288b5]\n??:? runModuleUnitTests [0x42dd45]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429048]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring[] result;\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(' && item[$-1] == ')')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-2];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result.join(\" \");\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "/tmp/tmp1h7r64i2.d(25): Error: no property `join` for type `string[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1h7r64i2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t\telse if(item[0] != '(' && item[$-1] != ')')\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkawv1d21.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x428b75]\n??:? void tmpkawv1d21.__unittest_L24_C1() [0x427c5a]\n??:? void tmpkawv1d21.__modtest() [0x427de0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae9c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288a5]\n??:? runModuleUnitTests [0x42dd35]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429038]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(' && item[$-1] != ')')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpwvbqfpp6.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b5d]\n??:? void tmpwvbqfpp6.__unittest_L23_C1() [0x427c3e]\n??:? void tmpwvbqfpp6.__modtest() [0x427dc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df47]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42888d]\n??:? runModuleUnitTests [0x42dd1d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429020]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item.length > 0)\n\t\t\t{\n\t\t\t\tif(item[$-1] == ')')\n\t\t\t\t{\n\t\t\t\t\titem = item[0..$-2];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123135,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpob0_eh2h.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bd5]\n??:? void tmpob0_eh2h.__unittest_L31_C1() [0x427cba]\n??:? void tmpob0_eh2h.__modtest() [0x427e40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42892e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae6d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aefc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428905]\n??:? runModuleUnitTests [0x42dd95]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429098]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(item[0] == '(' && item[$-1] == ')')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqdys05bf.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bcd]\n??:? void tmpqdys05bf.__unittest_L31_C1() [0x427cb2]\n??:? void tmpqdys05bf.__modtest() [0x427e38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfb7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae65]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aef4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288fd]\n??:? runModuleUnitTests [0x42dd8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429090]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item.length > 0)\n\t\t\t{\n\t\t\t\tif(item[$-1] == ')')\n\t\t\t\t{\n\t\t\t\t\titem = item[0..$-1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfwmci2eo.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bd5]\n??:? void tmpfwmci2eo.__unittest_L31_C1() [0x427cb6]\n??:? void tmpfwmci2eo.__modtest() [0x427e3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42892e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae6d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aefc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428905]\n??:? runModuleUnitTests [0x42dd95]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429098]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring output = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\toutput ~= item[1..$-1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\toutput ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn output;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123135,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpheugw0sc.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428b85]\n??:? void tmpheugw0sc.__unittest_L27_C1() [0x427c6a]\n??:? void tmpheugw0sc.__modtest() [0x427df0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aeac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ada9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288b5]\n??:? runModuleUnitTests [0x42dd45]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429048]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items) \n\t{\n\t\tif(item.length > 0) \n\t\t{\n\t\t\tif(item[0] == '(') \n\t\t\t{\n\t\t\t\tint index = item.find(\")\");\n\t\t\t\tif(index != -1) \n\t\t\t\t{\n\t\t\t\t\tresult ~= item[0..index];\n\t\t\t\t}\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123135,
      "stdout": "",
      "stderr": "/tmp/tmp93z07_cy.d(17): Error: no property `find` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp93z07_cy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item.length > 0)\n\t\t\t{\n\t\t\t\tif(item[$-1] == ')')\n\t\t\t\t{\n\t\t\t\t\titem = item[0..$-1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1kb4p4a7.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bd5]\n??:? void tmp1kb4p4a7.__unittest_L31_C1() [0x427cba]\n??:? void tmp1kb4p4a7.__modtest() [0x427e40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42892e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae6d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aefc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428905]\n??:? runModuleUnitTests [0x42dd95]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429098]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item[0] == '(' && item[$-1] == ')')\n\t\t{\n\t\t\tresult ~= item[1..$-2];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123135,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpp6iq7qam.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x428b9d]\n??:? void tmpp6iq7qam.__unittest_L24_C1() [0x427c82]\n??:? void tmpp6iq7qam.__modtest() [0x427e08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df87]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288f6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae35]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aec4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adc1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288cd]\n??:? runModuleUnitTests [0x42dd5d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429060]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item.length > 0)\n\t\t\t{\n\t\t\t\tif(item[$-1] == ')')\n\t\t\t\t{\n\t\t\t\t\titem = item[0..$-1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1kb4p4a7.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bd5]\n??:? void tmp1kb4p4a7.__unittest_L31_C1() [0x427cba]\n??:? void tmp1kb4p4a7.__modtest() [0x427e40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42892e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae6d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aefc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428905]\n??:? runModuleUnitTests [0x42dd95]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429098]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(' && item[$-1] != ')')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpwvbqfpp6.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b5d]\n??:? void tmpwvbqfpp6.__unittest_L23_C1() [0x427c3e]\n??:? void tmpwvbqfpp6.__modtest() [0x427dc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df47]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42888d]\n??:? runModuleUnitTests [0x42dd1d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429020]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(' && item[$-1] == ')')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-2];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123135,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpybd9j4lx.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428bb5]\n??:? void tmpybd9j4lx.__unittest_L27_C1() [0x427c96]\n??:? void tmpybd9j4lx.__modtest() [0x427e1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df9f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42890e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae4d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aedc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42add9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288e5]\n??:? runModuleUnitTests [0x42dd75]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429078]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfuqsmjti.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428b05]\n??:? void tmpfuqsmjti.__unittest_L20_C1() [0x427be6]\n??:? void tmpfuqsmjti.__modtest() [0x427d6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42de7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42885e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ad29]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42adb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42acb5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428835]\n??:? runModuleUnitTests [0x42dc51]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428f54]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items) \n\t{\n\t\tif(item[0] != '(') \n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123135,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpk3j5al__.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428b1d]\n??:? void tmpk3j5al__.__unittest_L20_C1() [0x427bfe]\n??:? void tmpk3j5al__.__modtest() [0x427d84]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df07]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428876]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adb5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae44]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad41]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42884d]\n??:? runModuleUnitTests [0x42dcdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fe0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item[$-1] == ')')\n\t\t\t{\n\t\t\t\titem = item[0..$-1];\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpypczm0_5.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428bcd]\n??:? void tmpypczm0_5.__unittest_L28_C1() [0x427cb2]\n??:? void tmpypczm0_5.__modtest() [0x427e38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfb7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae65]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aef4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288fd]\n??:? runModuleUnitTests [0x42dd8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429090]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item[$-1] == ')')\n\t\t\t{\n\t\t\t\titem = item[0..$-1];\n\t\t\t}\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123135,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4lf1_12i.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428bcd]\n??:? void tmp4lf1_12i.__unittest_L28_C1() [0x427cb2]\n??:? void tmp4lf1_12i.__modtest() [0x427e38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfb7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae65]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aef4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288fd]\n??:? runModuleUnitTests [0x42dd8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429090]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items) \n\t{\n\t\tif(item.length == 1) \n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpgg3hqk51.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428b05]\n??:? void tmpgg3hqk51.__unittest_L20_C1() [0x427be6]\n??:? void tmpgg3hqk51.__modtest() [0x427d6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42de7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42885e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ad29]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42adb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42acb5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428835]\n??:? runModuleUnitTests [0x42dc51]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428f54]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item.length > 0)\n\t\t\t{\n\t\t\t\tif(item[$-1] == ')')\n\t\t\t\t{\n\t\t\t\t\titem = item[0..$-1];\n\t\t\t\t}\n\t\t\t}\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123135,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpiffvtvmh.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bd5]\n??:? void tmpiffvtvmh.__unittest_L31_C1() [0x427cb6]\n??:? void tmpiffvtvmh.__modtest() [0x427e3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42892e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae6d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aefc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428905]\n??:? runModuleUnitTests [0x42dd95]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429098]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item == \"(\" || item == \")\")\n\t\t\tcontinue;\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy5456sts.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x428b55]\n??:? void tmpy5456sts.__unittest_L19_C1() [0x427c36]\n??:? void tmpy5456sts.__modtest() [0x427dbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42decb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ad79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae08]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428885]\n??:? runModuleUnitTests [0x42dca1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fa4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items) \n\t{\n\t\tif(item.length > 0) \n\t\t{\n\t\t\tif(item[0] == '(') \n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item[$-1] == ')') \n\t\t\t{\n\t\t\t\titem = item[0..$-1];\n\t\t\t}\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123135,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpa4qp9rar.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428bcd]\n??:? void tmpa4qp9rar.__unittest_L28_C1() [0x427cb2]\n??:? void tmpa4qp9rar.__modtest() [0x427e38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfb7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae65]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aef4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288fd]\n??:? runModuleUnitTests [0x42dd8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429090]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item.length > 0)\n\t\t\t{\n\t\t\t\tif(item[$-1] == ')')\n\t\t\t\t{\n\t\t\t\t\titem = item[0..$-1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1kb4p4a7.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bd5]\n??:? void tmp1kb4p4a7.__unittest_L31_C1() [0x427cba]\n??:? void tmp1kb4p4a7.__modtest() [0x427e40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42892e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae6d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aefc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428905]\n??:? runModuleUnitTests [0x42dd95]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429098]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item[$-1] == ')')\n\t\t\t{\n\t\t\t\titem = item[0..$-1];\n\t\t\t}\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123135,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpj05v6vxj.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428bcd]\n??:? void tmpj05v6vxj.__unittest_L28_C1() [0x427cb2]\n??:? void tmpj05v6vxj.__modtest() [0x427e38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfb7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae65]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aef4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288fd]\n??:? runModuleUnitTests [0x42dd8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429090]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items) \n\t{\n\t\tif(item.length == 1) \n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpgg3hqk51.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428b05]\n??:? void tmpgg3hqk51.__unittest_L20_C1() [0x427be6]\n??:? void tmpgg3hqk51.__modtest() [0x427d6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42de7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42885e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ad29]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42adb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42acb5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428835]\n??:? runModuleUnitTests [0x42dc51]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428f54]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items) \n\t{\n\t\tif(item.length > 0) \n\t\t{\n\t\t\tif(item[0] != '(' && item[$-1] != ')') \n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123135,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuhmml3pw.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b5d]\n??:? void tmpuhmml3pw.__unittest_L23_C1() [0x427c3e]\n??:? void tmpuhmml3pw.__modtest() [0x427dc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df47]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42888d]\n??:? runModuleUnitTests [0x42dd1d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429020]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2m79o7wu.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428b85]\n??:? void tmp2m79o7wu.__unittest_L27_C1() [0x427c6a]\n??:? void tmp2m79o7wu.__modtest() [0x427df0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aeac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ada9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288b5]\n??:? runModuleUnitTests [0x42dd45]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429048]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item == \"(\" || item == \")\")\n\t\t\tcontinue;\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy5456sts.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x428b55]\n??:? void tmpy5456sts.__unittest_L19_C1() [0x427c36]\n??:? void tmpy5456sts.__modtest() [0x427dbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42decb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ad79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae08]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428885]\n??:? runModuleUnitTests [0x42dca1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fa4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items) \n\t{\n\t\tif(item == \"(\" || item == \")\") \n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123135,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpatt7q6sk.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x428b55]\n??:? void tmpatt7q6sk.__unittest_L21_C1() [0x427c36]\n??:? void tmpatt7q6sk.__modtest() [0x427dbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42decb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ad79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae08]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428885]\n??:? runModuleUnitTests [0x42dca1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fa4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(' && item[item.length - 1] == ')')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123135,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplc8xej7d.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428bad]\n??:? void tmplc8xej7d.__unittest_L27_C1() [0x427c92]\n??:? void tmplc8xej7d.__modtest() [0x427e18]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df97]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae45]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aed4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42add1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288dd]\n??:? runModuleUnitTests [0x42dd6d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429070]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7iuzm4k5.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428b85]\n??:? void tmp7iuzm4k5.__unittest_L27_C1() [0x427c6a]\n??:? void tmp7iuzm4k5.__modtest() [0x427df0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aeac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ada9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288b5]\n??:? runModuleUnitTests [0x42dd45]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429048]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(' && item[$-1] == ')')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123135,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyqgq7e_m.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428bb5]\n??:? void tmpyqgq7e_m.__unittest_L27_C1() [0x427c96]\n??:? void tmpyqgq7e_m.__modtest() [0x427e1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df9f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42890e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae4d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aedc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42add9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288e5]\n??:? runModuleUnitTests [0x42dd75]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429078]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(item[0] == '(' && item[$-1] == ')')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-2];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpsimh_5zl.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bcd]\n??:? void tmpsimh_5zl.__unittest_L31_C1() [0x427cb2]\n??:? void tmpsimh_5zl.__modtest() [0x427e38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfb7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae65]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aef4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288fd]\n??:? runModuleUnitTests [0x42dd8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429090]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(' && item[$-1] != ')')\n\t\t\t{\n\t\t\t\tresult ~= item ~ \" \";\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123135,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpf73i6rax.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b7d]\n??:? void tmpf73i6rax.__unittest_L23_C1() [0x427c62]\n??:? void tmpf73i6rax.__modtest() [0x427de8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df67]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae15]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aea4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ada1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288ad]\n??:? runModuleUnitTests [0x42dd3d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429040]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp68wuj0ew.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428b85]\n??:? void tmp68wuj0ew.__unittest_L27_C1() [0x427c66]\n??:? void tmp68wuj0ew.__modtest() [0x427dec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aeac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ada9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288b5]\n??:? runModuleUnitTests [0x42dd45]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429048]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items) \n\t{\n\t\tif(item.length == 1) \n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpgg3hqk51.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428b05]\n??:? void tmpgg3hqk51.__unittest_L20_C1() [0x427be6]\n??:? void tmpgg3hqk51.__modtest() [0x427d6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42de7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42885e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ad29]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42adb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42acb5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428835]\n??:? runModuleUnitTests [0x42dc51]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428f54]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 2)\n\t\t{\n\t\t\tif(item[0] == '(' && item[$-1] == ')')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-2];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123135,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_arojzzp.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bcd]\n??:? void tmp_arojzzp.__unittest_L31_C1() [0x427cb2]\n??:? void tmp_arojzzp.__modtest() [0x427e38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfb7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae65]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aef4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288fd]\n??:? runModuleUnitTests [0x42dd8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429090]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item[0] != '(' && item[$-1] != ')')\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpu6_jkj0z.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428b4d]\n??:? void tmpu6_jkj0z.__unittest_L20_C1() [0x427c2e]\n??:? void tmpu6_jkj0z.__modtest() [0x427db4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df37]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288a6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ade5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae74]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad71]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42887d]\n??:? runModuleUnitTests [0x42dd0d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429010]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t\telse if(item[0] != '(')\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123135,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpig458izq.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x428b4d]\n??:? void tmpig458izq.__unittest_L24_C1() [0x427c2e]\n??:? void tmpig458izq.__modtest() [0x427db4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df37]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288a6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ade5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae74]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad71]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42887d]\n??:? runModuleUnitTests [0x42dd0d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429010]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring output = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item[0] == '(')\n\t\t{\n\t\t\toutput ~= item[1..$-1];\n\t\t}\n\t\telse\n\t\t{\n\t\t\toutput ~= item;\n\t\t}\n\t}\n\treturn output;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123135,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprm2sqncq.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x428b75]\n??:? void tmprm2sqncq.__unittest_L24_C1() [0x427c56]\n??:? void tmprm2sqncq.__modtest() [0x427ddc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae9c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288a5]\n??:? runModuleUnitTests [0x42dd35]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429038]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfuqsmjti.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428b05]\n??:? void tmpfuqsmjti.__unittest_L20_C1() [0x427be6]\n??:? void tmpfuqsmjti.__modtest() [0x427d6c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42de7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42885e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ad29]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42adb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42acb5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428835]\n??:? runModuleUnitTests [0x42dc51]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428f54]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item[0] == '(' && item[$-1] == ')')\n\t\t{\n\t\t\tresult ~= item[1..$-2];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123135,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppjtsj4f7.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x428b9d]\n??:? void tmppjtsj4f7.__unittest_L24_C1() [0x427c82]\n??:? void tmppjtsj4f7.__modtest() [0x427e08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df87]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288f6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae35]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aec4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adc1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288cd]\n??:? runModuleUnitTests [0x42dd5d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429060]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp68wuj0ew.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428b85]\n??:? void tmp68wuj0ew.__unittest_L27_C1() [0x427c66]\n??:? void tmp68wuj0ew.__modtest() [0x427dec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df6f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aeac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ada9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288b5]\n??:? runModuleUnitTests [0x42dd45]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429048]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t\telse if(item[0] != '(' && item[$-1] != ')')\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkawv1d21.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x428b75]\n??:? void tmpkawv1d21.__unittest_L24_C1() [0x427c5a]\n??:? void tmpkawv1d21.__modtest() [0x427de0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae9c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288a5]\n??:? runModuleUnitTests [0x42dd35]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429038]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item[0] == '(')\n\t\t{\n\t\t\tresult ~= remove_parenthesis(item[1..$-1].split(\")\"));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123135,
      "stdout": "",
      "stderr": "/tmp/tmpvpbc6esb.d(15): Error: no property `split` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvpbc6esb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items) \n\t{\n\t\tif(item[0] == '(') \n\t\t{\n\t\t\tresult ~= item[1..$-1];\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123135,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpu3zdmqor.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x428b75]\n??:? void tmpu3zdmqor.__unittest_L24_C1() [0x427c56]\n??:? void tmpu3zdmqor.__modtest() [0x427ddc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae9c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288a5]\n??:? runModuleUnitTests [0x42dd35]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429038]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length == 0)\n\t\t\tcontinue;\n\t\tif(item[0] == '(')\n\t\t\tcontinue;\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123135,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvwfr42ib.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x428b1d]\n??:? void tmpvwfr42ib.__unittest_L21_C1() [0x427bfe]\n??:? void tmpvwfr42ib.__modtest() [0x427d84]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df07]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428876]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adb5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae44]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad41]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42884d]\n??:? runModuleUnitTests [0x42dcdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fe0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item.length > 0)\n\t\t\t{\n\t\t\t\tif(item[$-1] == ')')\n\t\t\t\t{\n\t\t\t\t\titem = item[0..$-1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1kb4p4a7.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bd5]\n??:? void tmp1kb4p4a7.__unittest_L31_C1() [0x427cba]\n??:? void tmp1kb4p4a7.__modtest() [0x427e40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42892e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae6d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aefc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428905]\n??:? runModuleUnitTests [0x42dd95]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429098]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item.length > 0)\n\t\t\t{\n\t\t\t\tif(item[$-1] == ')')\n\t\t\t\t{\n\t\t\t\t\titem = item[0..$-1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1kb4p4a7.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bd5]\n??:? void tmp1kb4p4a7.__unittest_L31_C1() [0x427cba]\n??:? void tmp1kb4p4a7.__modtest() [0x427e40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42892e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae6d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aefc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428905]\n??:? runModuleUnitTests [0x42dd95]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429098]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t\telse if(item[0] != '(' && item[$-1] != ')')\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123135,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpj59yghpd.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x428b75]\n??:? void tmpj59yghpd.__unittest_L24_C1() [0x427c5a]\n??:? void tmpj59yghpd.__modtest() [0x427de0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae9c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288a5]\n??:? runModuleUnitTests [0x42dd35]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429038]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\tif(item[$-1] == ')')\n\t\t\t\t{\n\t\t\t\t\tresult ~= item[1..$-1];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tresult ~= item[1..$];\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(item[$-1] == ')')\n\t\t\t\t{\n\t\t\t\t\tresult ~= item[0..$-1];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tresult ~= item;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_7iefgu1.d(45): unittest failure\n----------------\n??:? _d_unittestp [0x428c7d]\n??:? void tmp_7iefgu1.__unittest_L41_C1() [0x427d62]\n??:? void tmp_7iefgu1.__modtest() [0x427ee8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42e067]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4289d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42af15]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42afa4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42aea1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4289ad]\n??:? runModuleUnitTests [0x42de3d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429140]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(' && item[$-1] == ')')\n\t\t\t{\n\t\t\t\tresult ~= item[1..$-1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123135,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyqgq7e_m.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x428bb5]\n??:? void tmpyqgq7e_m.__unittest_L27_C1() [0x427c96]\n??:? void tmpyqgq7e_m.__modtest() [0x427e1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df9f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42890e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae4d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aedc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42add9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288e5]\n??:? runModuleUnitTests [0x42dd75]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429078]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(' && item[$-1] != ')')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpwvbqfpp6.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b5d]\n??:? void tmpwvbqfpp6.__unittest_L23_C1() [0x427c3e]\n??:? void tmpwvbqfpp6.__modtest() [0x427dc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df47]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42888d]\n??:? runModuleUnitTests [0x42dd1d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429020]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item.length > 0)\n\t\t\t{\n\t\t\t\tif(item[$-1] == ')')\n\t\t\t\t{\n\t\t\t\t\titem = item[0..$-1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfwmci2eo.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bd5]\n??:? void tmpfwmci2eo.__unittest_L31_C1() [0x427cb6]\n??:? void tmpfwmci2eo.__modtest() [0x427e3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42892e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae6d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aefc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428905]\n??:? runModuleUnitTests [0x42dd95]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429098]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_0xt5ngf.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b2d]\n??:? void tmp_0xt5ngf.__unittest_L23_C1() [0x427c0e]\n??:? void tmp_0xt5ngf.__modtest() [0x427d94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df17]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428886]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adc5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae54]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad51]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42885d]\n??:? runModuleUnitTests [0x42dced]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428ff0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t\telse if(item[0] != '(' && item[$-1] != ')')\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkawv1d21.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x428b75]\n??:? void tmpkawv1d21.__unittest_L24_C1() [0x427c5a]\n??:? void tmpkawv1d21.__modtest() [0x427de0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df5f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae9c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288a5]\n??:? runModuleUnitTests [0x42dd35]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429038]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] == '(')\n\t\t\t{\n\t\t\t\titem = item[1..$];\n\t\t\t}\n\t\t\tif(item.length > 0)\n\t\t\t{\n\t\t\t\tif(item[$-1] == ')')\n\t\t\t\t{\n\t\t\t\t\titem = item[0..$-1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1665517310,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1kb4p4a7.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x428bd5]\n??:? void tmp1kb4p4a7.__unittest_L31_C1() [0x427cba]\n??:? void tmp1kb4p4a7.__modtest() [0x427e40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfbf]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42892e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae6d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aefc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428905]\n??:? runModuleUnitTests [0x42dd95]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429098]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(string item; items)\n\t{\n\t\tif(item.length == 1)\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t\telse if(item[0] != '(')\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123135,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpe23u6il0.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x428b4d]\n??:? void tmpe23u6il0.__unittest_L24_C1() [0x427c32]\n??:? void tmpe23u6il0.__modtest() [0x427db8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df37]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288a6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ade5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae74]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad71]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42887d]\n??:? runModuleUnitTests [0x42dd0d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429010]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(' && item[$-1] != ')')\n\t\t\t{\n\t\t\t\tresult ~= item;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpwvbqfpp6.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x428b5d]\n??:? void tmpwvbqfpp6.__unittest_L23_C1() [0x427c3e]\n??:? void tmpwvbqfpp6.__modtest() [0x427dc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df47]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42888d]\n??:? runModuleUnitTests [0x42dd1d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429020]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item == \"(\" || item == \")\")\n\t\t\tcontinue;\n\t\tresult ~= item;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123134,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8jv2igpr.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x428b55]\n??:? void tmp8jv2igpr.__unittest_L19_C1() [0x427c36]\n??:? void tmp8jv2igpr.__modtest() [0x427dbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42decb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ad79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae08]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428885]\n??:? runModuleUnitTests [0x42dca1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fa4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items)\n\t{\n\t\tif(item.length > 0)\n\t\t{\n\t\t\tif(item[0] != '(' && item[$-1] != ')')\n\t\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123135,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzwhtji75.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x428b5d]\n??:? void tmpzwhtji75.__unittest_L21_C1() [0x427c3e]\n??:? void tmpzwhtji75.__modtest() [0x427dc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df47]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adf5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae84]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42888d]\n??:? runModuleUnitTests [0x42dd1d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429020]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items) \n\t{\n\t\tif(item.length == 1) \n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t\telse if(item[0] == '(' && item[$-1] == ')') \n\t\t{\n\t\t\tresult ~= item[1..$-2];\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123135,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3ytl__qt.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428bcd]\n??:? void tmp3ytl__qt.__unittest_L28_C1() [0x427cb2]\n??:? void tmp3ytl__qt.__modtest() [0x427e38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42dfb7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x428926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae65]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aef4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adf1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288fd]\n??:? runModuleUnitTests [0x42dd8d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429090]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result;\n\tforeach(item; items)\n\t{\n\t\tif(item[0] == '(' && item[$-1] == ')')\n\t\t{\n\t\t\tresult ~= item[1..$-2];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123135,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpp6iq7qam.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x428b9d]\n??:? void tmpp6iq7qam.__unittest_L24_C1() [0x427c82]\n??:? void tmpp6iq7qam.__modtest() [0x427e08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df87]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288f6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ae35]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42aec4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42adc1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288cd]\n??:? runModuleUnitTests [0x42dd5d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x429060]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\n*/\nstring remove_parenthesis(string[] items) \n{\n\tstring result = \"\";\n\tforeach(item; items) \n\t{\n\t\tif(item == \"(\") \n\t\t{\n\t\t\tresult ~= \" \";\n\t\t}\n\t\telse if(item == \")\") \n\t\t{\n\t\t\tresult ~= \" \";\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= item;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_parenthesis;\n\n    assert(candidate([\"python (chrome)\"]) == \"python\");\n    assert(candidate([\"string(.abc)\"]) == \"string\");\n    assert(candidate([\"alpha(num)\"]) == \"alpha\");\n}\nvoid main(){}",
      "timestamp": 1666123135,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpthbj3gsw.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x428b95]\n??:? void tmpthbj3gsw.__unittest_L28_C1() [0x427c7a]\n??:? void tmpthbj3gsw.__modtest() [0x427e00]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42df0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x4288ee]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42adb9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ae48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42ad45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x4288c5]\n??:? runModuleUnitTests [0x42dce1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428fe4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
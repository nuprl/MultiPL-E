{
  "name": "mbpp_765_is_polite",
  "language": "d",
  "prompt": "import std.math;\n/*\n\n\tWrite a function to find nth polite number. geeksforgeeks.org/n-th-polite-number/\n\t\n*/\nlong is_polite(long n) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_765_is_polite.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = is_polite;\n\n    assert(candidate(7L) == 11L);\n    assert(candidate(4L) == 7L);\n    assert(candidate(9L) == 13L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tlong i = 2;\n\twhile(i <= sqrt(n)) \n\t{\n\t\tif(n % i == 0) \n\t\t{\n\t\t\treturn i;\n\t\t}\n\t\ti++;\n\t}\n\treturn 0;\n}",
    "{\n\tlong i = 2;\n\twhile(i <= n) {\n\t\tif(n % i == 0) {\n\t\t\treturn i;\n\t\t}\n\t\ti++;\n\t}\n\treturn -1;\n}",
    "{\n\tlong i = 2;\n\twhile (n % i != 0) {\n\t\ti++;\n\t}\n\treturn i;\n}",
    "{\n\tlong i = 2;\n\twhile (n > 1) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\tn /= i;\n\t\t\tif (n % i == 0)\n\t\t\t\treturn 0;\n\t\t}\n\t\ti++;\n\t}\n\treturn 1;\n}",
    "{\n\tlong i = 1;\n\twhile (n % i == 0) \n\t{\n\t\tn /= i;\n\t\ti++;\n\t}\n\treturn n == 1;\n}",
    "{\n\tlong i = 2;\n\twhile(i <= n)\n\t{\n\t\tif(n%i == 0)\n\t\t\treturn i;\n\t\ti++;\n\t}\n\treturn 1;\n}",
    "{\n\tlong i = 2;\n\twhile(i <= n) \n\t{\n\t\tif(n % i == 0) \n\t\t{\n\t\t\treturn i;\n\t\t}\n\t\ti++;\n\t}\n\treturn n;\n}",
    "{\n\tlong i = 2;\n\twhile (n % i != 0) \n\t{\n\t\ti++;\n\t}\n\treturn i;\n}",
    "{\n\tlong i;\n\tfor(i = 2; i <= sqrt(n); i++) \n\t{\n\t\tif(n % i == 0) \n\t\t{\n\t\t\treturn is_polite(n / i) + is_polite(i);\n\t\t}\n\t}\n\treturn 1;\n}",
    "{\n\tlong i;\n\tfor (i = 2; i <= sqrt(n); i++) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn 0;\n}",
    "{\n\tlong i, count = 0;\n\tfor(i = 1; i <= sqrt(n); i++) {\n\t\tif(n % i == 0) {\n\t\t\tif(n / i == i)\n\t\t\t\tcount++;\n\t\t\telse\n\t\t\t\tcount += 2;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong i;\n\tfor (i = 2; i <= sqrt(n); i++) {\n\t\tif (n % i == 0) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}",
    "{\n\tlong i;\n\tfor (i = 2; i <= sqrt(n); i++) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}",
    "{\n\tlong i;\n\tfor (i = 2; i <= sqrt(n); i++) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn 0;\n}",
    "{\n\tlong i;\n\tfor (i = 2; i <= sqrt(n); i++) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn 0;\n}",
    "{\n\tlong i = 2;\n\twhile (i <= sqrt(n)) {\n\t\tif (n % i == 0) {\n\t\t\treturn i;\n\t\t}\n\t\ti++;\n\t}\n\treturn -1;\n}",
    "{\n\tlong i = 1;\n\twhile (i <= n) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\tn = n / i;\n\t\t\ti++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\treturn 0;\n\t\t}\n\t}\n\treturn 1;\n}",
    "{\n\tlong i,j;\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tfor(j=1;j<=n;j++)\n\t\t{\n\t\t\tif(i*j==n)\n\t\t\t{\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}",
    "{\n\tlong i;\n\tfor(i = 2; i <= n; i++)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn 0;\n}",
    "{\n\tlong i;\n\tfor (i = 2; i <= sqrt(n); i++) {\n\t\tif (n % i == 0) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn 0;\n}"
  ]
}
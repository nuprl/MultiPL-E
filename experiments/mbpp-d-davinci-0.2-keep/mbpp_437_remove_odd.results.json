{
  "name": "mbpp_437_remove_odd",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_437_remove_odd.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5rmqt3i5.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmp5rmqt3i5.__unittest_L20_C1() [0x427b5e]\n??:? void tmp5rmqt3i5.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5rmqt3i5.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmp5rmqt3i5.__unittest_L20_C1() [0x427b5e]\n??:? void tmp5rmqt3i5.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpg2l5oauf.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpg2l5oauf.__unittest_L18_C1() [0x427b5a]\n??:? void tmpg2l5oauf.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(int i, char c; str1) \n\t{\n\t\tif(i % 2 == 0) \n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2vh1lixw.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmp2vh1lixw.__unittest_L20_C1() [0x427b5e]\n??:? void tmp2vh1lixw.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i; 0 .. str1.length)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7mn858pv.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmp7mn858pv.__unittest_L20_C1() [0x427b62]\n??:? void tmp7mn858pv.__modtest() [0x427ca8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c62f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b53e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff15]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4303c4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fea1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b515]\n??:? runModuleUnitTests [0x42c405]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283e8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5rmqt3i5.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmp5rmqt3i5.__unittest_L20_C1() [0x427b5e]\n??:? void tmp5rmqt3i5.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tint i;\n\tfor(i = 0; i < str1.length; i++)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfroybyj0.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpfroybyj0.__unittest_L21_C1() [0x427b5a]\n??:? void tmpfroybyj0.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c627]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b536]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4303bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b50d]\n??:? runModuleUnitTests [0x42c3fd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283e0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9ao18tnp.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp9ao18tnp.__unittest_L20_C1() [0x427b5a]\n??:? void tmp9ao18tnp.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tint i;\n\tfor(i = 0; i < str1.length; i++)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfroybyj0.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpfroybyj0.__unittest_L21_C1() [0x427b5a]\n??:? void tmpfroybyj0.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c627]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b536]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4303bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b50d]\n??:? runModuleUnitTests [0x42c3fd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283e0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpex1trwf1.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpex1trwf1.__unittest_L20_C1() [0x427b5a]\n??:? void tmpex1trwf1.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(i, c; str1) \n\t{\n\t\tif(i % 2 == 0) \n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy5k8hr8i.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpy5k8hr8i.__unittest_L20_C1() [0x427b5a]\n??:? void tmpy5k8hr8i.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpex1trwf1.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpex1trwf1.__unittest_L20_C1() [0x427b5a]\n??:? void tmpex1trwf1.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5rmqt3i5.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmp5rmqt3i5.__unittest_L20_C1() [0x427b5e]\n??:? void tmp5rmqt3i5.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5rmqt3i5.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmp5rmqt3i5.__unittest_L20_C1() [0x427b5e]\n??:? void tmp5rmqt3i5.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5rmqt3i5.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmp5rmqt3i5.__unittest_L20_C1() [0x427b5e]\n??:? void tmp5rmqt3i5.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfzw0mr8x.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpfzw0mr8x.__unittest_L20_C1() [0x427b5e]\n??:? void tmpfzw0mr8x.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfzw0mr8x.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpfzw0mr8x.__unittest_L20_C1() [0x427b5e]\n??:? void tmpfzw0mr8x.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(i, ch; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= ch;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpb5srpxpz.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpb5srpxpz.__unittest_L20_C1() [0x427b5a]\n??:? void tmpb5srpxpz.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tint i;\n\tfor(i=0;i<str1.length;i++)\n\t{\n\t\tif(i%2==0)\n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpb_2ur1ze.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpb_2ur1ze.__unittest_L21_C1() [0x427b5a]\n??:? void tmpb_2ur1ze.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c627]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b536]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4303bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b50d]\n??:? runModuleUnitTests [0x42c3fd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283e0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring result;\n\tint i;\n\tfor (i = 0; i < str1.length; i++)\n\t{\n\t\tif (i % 2 == 0)\n\t\t{\n\t\t\tresult ~= str1[i];\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4go7dj__.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp4go7dj__.__unittest_L21_C1() [0x427b5a]\n??:? void tmp4go7dj__.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c627]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b536]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4303bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b50d]\n??:? runModuleUnitTests [0x42c3fd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283e0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9ao18tnp.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp9ao18tnp.__unittest_L20_C1() [0x427b5a]\n??:? void tmp9ao18tnp.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfzw0mr8x.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpfzw0mr8x.__unittest_L20_C1() [0x427b5e]\n??:? void tmpfzw0mr8x.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9ao18tnp.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp9ao18tnp.__unittest_L20_C1() [0x427b5a]\n??:? void tmp9ao18tnp.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9ao18tnp.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp9ao18tnp.__unittest_L20_C1() [0x427b5a]\n??:? void tmp9ao18tnp.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(i,c;str1)\n\t{\n\t\tif(i%2==0)\n\t\t{\n\t\t\tstr2~=c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3l9yrnt4.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp3l9yrnt4.__unittest_L20_C1() [0x427b5a]\n??:? void tmp3l9yrnt4.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1) \n\t{\n\t\tif(i % 2 == 0) \n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzqvfj6fr.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpzqvfj6fr.__unittest_L20_C1() [0x427b5a]\n??:? void tmpzqvfj6fr.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, ch; str1) \n\t{\n\t\tif(i % 2 == 0) \n\t\t{\n\t\t\tstr2 ~= ch;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp90d34lyb.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp90d34lyb.__unittest_L20_C1() [0x427b5a]\n??:? void tmp90d34lyb.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpex1trwf1.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpex1trwf1.__unittest_L20_C1() [0x427b5a]\n??:? void tmpex1trwf1.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfzw0mr8x.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpfzw0mr8x.__unittest_L20_C1() [0x427b5e]\n??:? void tmpfzw0mr8x.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5rmqt3i5.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmp5rmqt3i5.__unittest_L20_C1() [0x427b5e]\n??:? void tmp5rmqt3i5.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9ao18tnp.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp9ao18tnp.__unittest_L20_C1() [0x427b5a]\n??:? void tmp9ao18tnp.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tint i;\n\tfor (i = 0; i < str1.length; i++) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2_dn0sim.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp2_dn0sim.__unittest_L21_C1() [0x427b5a]\n??:? void tmp2_dn0sim.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c627]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b536]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4303bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b50d]\n??:? runModuleUnitTests [0x42c3fd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283e0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpex1trwf1.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpex1trwf1.__unittest_L20_C1() [0x427b5a]\n??:? void tmpex1trwf1.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5rmqt3i5.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmp5rmqt3i5.__unittest_L20_C1() [0x427b5e]\n??:? void tmp5rmqt3i5.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring result;\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3uw9mhl_.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp3uw9mhl_.__unittest_L20_C1() [0x427b5a]\n??:? void tmp3uw9mhl_.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpex1trwf1.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpex1trwf1.__unittest_L20_C1() [0x427b5a]\n??:? void tmpex1trwf1.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1) \n\t{\n\t\tif(i % 2 == 0) \n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzqvfj6fr.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpzqvfj6fr.__unittest_L20_C1() [0x427b5a]\n??:? void tmpzqvfj6fr.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, ch; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= ch;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmptdckkmaq.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmptdckkmaq.__unittest_L18_C1() [0x427b5a]\n??:? void tmptdckkmaq.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, ch; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= ch;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpoy36ah70.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpoy36ah70.__unittest_L20_C1() [0x427b5a]\n??:? void tmpoy36ah70.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i%2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8zjnhq0q.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmp8zjnhq0q.__unittest_L20_C1() [0x427b5e]\n??:? void tmp8zjnhq0q.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpex1trwf1.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpex1trwf1.__unittest_L20_C1() [0x427b5a]\n??:? void tmpex1trwf1.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpex1trwf1.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpex1trwf1.__unittest_L20_C1() [0x427b5a]\n??:? void tmpex1trwf1.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6395_cni.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmp6395_cni.__unittest_L18_C1() [0x427b5e]\n??:? void tmp6395_cni.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfzw0mr8x.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpfzw0mr8x.__unittest_L20_C1() [0x427b5e]\n??:? void tmpfzw0mr8x.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tfor(int i = 0; i < str1.length; i++)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpwdpstglh.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpwdpstglh.__unittest_L20_C1() [0x427b5a]\n??:? void tmpwdpstglh.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c627]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b536]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4303bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b50d]\n??:? runModuleUnitTests [0x42c3fd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283e0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9ao18tnp.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp9ao18tnp.__unittest_L20_C1() [0x427b5a]\n??:? void tmp9ao18tnp.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpex1trwf1.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpex1trwf1.__unittest_L20_C1() [0x427b5a]\n??:? void tmpex1trwf1.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpex1trwf1.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpex1trwf1.__unittest_L20_C1() [0x427b5a]\n??:? void tmpex1trwf1.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9ao18tnp.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp9ao18tnp.__unittest_L20_C1() [0x427b5a]\n??:? void tmp9ao18tnp.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9dxy1qfl.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp9dxy1qfl.__unittest_L18_C1() [0x427b5a]\n??:? void tmp9dxy1qfl.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tint i;\n\tfor (i = 0; i < str1.length; i++)\n\t{\n\t\tif (i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzag3himh.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpzag3himh.__unittest_L21_C1() [0x427b5a]\n??:? void tmpzag3himh.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c627]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b536]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4303bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b50d]\n??:? runModuleUnitTests [0x42c3fd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283e0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5rmqt3i5.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmp5rmqt3i5.__unittest_L20_C1() [0x427b5e]\n??:? void tmp5rmqt3i5.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9ao18tnp.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp9ao18tnp.__unittest_L20_C1() [0x427b5a]\n??:? void tmp9ao18tnp.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpm3t6prwc.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpm3t6prwc.__unittest_L18_C1() [0x427b5e]\n??:? void tmpm3t6prwc.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(int i, char c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpw9q7zc1e.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpw9q7zc1e.__unittest_L20_C1() [0x427b5e]\n??:? void tmpw9q7zc1e.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tint i;\n\tstring str2;\n\tfor (i = 0; i < str1.length; i++) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppxeeto0d.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmppxeeto0d.__unittest_L21_C1() [0x427b52]\n??:? void tmppxeeto0d.__modtest() [0x427c98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c61f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b52e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4303b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b505]\n??:? runModuleUnitTests [0x42c3f5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9ao18tnp.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp9ao18tnp.__unittest_L20_C1() [0x427b5a]\n??:? void tmp9ao18tnp.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpex1trwf1.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpex1trwf1.__unittest_L20_C1() [0x427b5a]\n??:? void tmpex1trwf1.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpex1trwf1.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpex1trwf1.__unittest_L20_C1() [0x427b5a]\n??:? void tmpex1trwf1.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5rmqt3i5.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmp5rmqt3i5.__unittest_L20_C1() [0x427b5e]\n??:? void tmp5rmqt3i5.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9dxy1qfl.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp9dxy1qfl.__unittest_L18_C1() [0x427b5a]\n??:? void tmp9dxy1qfl.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1) \n\t{\n\t\tif(i % 2 == 0) \n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzqvfj6fr.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpzqvfj6fr.__unittest_L20_C1() [0x427b5a]\n??:? void tmpzqvfj6fr.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpex1trwf1.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpex1trwf1.__unittest_L20_C1() [0x427b5a]\n??:? void tmpex1trwf1.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpm3t6prwc.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpm3t6prwc.__unittest_L18_C1() [0x427b5e]\n??:? void tmpm3t6prwc.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpex1trwf1.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpex1trwf1.__unittest_L20_C1() [0x427b5a]\n??:? void tmpex1trwf1.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable char c; str1)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "/tmp/tmpxd4y13y6.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxd4y13y6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfzw0mr8x.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpfzw0mr8x.__unittest_L20_C1() [0x427b5e]\n??:? void tmpfzw0mr8x.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfzw0mr8x.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpfzw0mr8x.__unittest_L20_C1() [0x427b5e]\n??:? void tmpfzw0mr8x.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable char c; str1) \n\t{\n\t\tif(c.isDigit) \n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "/tmp/tmp24y7clu7.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp24y7clu7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9ao18tnp.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp9ao18tnp.__unittest_L20_C1() [0x427b5a]\n??:? void tmp9ao18tnp.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9ao18tnp.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp9ao18tnp.__unittest_L20_C1() [0x427b5a]\n??:? void tmp9ao18tnp.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1) \n\t{\n\t\tif(i % 2 == 0) \n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpynbtxy_4.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpynbtxy_4.__unittest_L20_C1() [0x427b5e]\n??:? void tmpynbtxy_4.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpex1trwf1.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpex1trwf1.__unittest_L20_C1() [0x427b5a]\n??:? void tmpex1trwf1.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5rmqt3i5.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmp5rmqt3i5.__unittest_L20_C1() [0x427b5e]\n??:? void tmp5rmqt3i5.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(i,ch;str1)\n\t{\n\t\tif(i%2==0)\n\t\t{\n\t\t\tstr2 ~= ch;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmphiij5fcx.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmphiij5fcx.__unittest_L20_C1() [0x427b5a]\n??:? void tmphiij5fcx.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9ao18tnp.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp9ao18tnp.__unittest_L20_C1() [0x427b5a]\n??:? void tmp9ao18tnp.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5rmqt3i5.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmp5rmqt3i5.__unittest_L20_C1() [0x427b5e]\n??:? void tmp5rmqt3i5.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfzw0mr8x.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpfzw0mr8x.__unittest_L20_C1() [0x427b5e]\n??:? void tmpfzw0mr8x.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpex1trwf1.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpex1trwf1.__unittest_L20_C1() [0x427b5a]\n??:? void tmpex1trwf1.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9ao18tnp.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp9ao18tnp.__unittest_L20_C1() [0x427b5a]\n??:? void tmp9ao18tnp.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9ao18tnp.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp9ao18tnp.__unittest_L20_C1() [0x427b5a]\n??:? void tmp9ao18tnp.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpm3t6prwc.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpm3t6prwc.__unittest_L18_C1() [0x427b5e]\n??:? void tmpm3t6prwc.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9ao18tnp.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp9ao18tnp.__unittest_L20_C1() [0x427b5a]\n??:? void tmp9ao18tnp.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9ao18tnp.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp9ao18tnp.__unittest_L20_C1() [0x427b5a]\n??:? void tmp9ao18tnp.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable char c; str1)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "/tmp/tmpxd4y13y6.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxd4y13y6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring result = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3tbk6j0r.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp3tbk6j0r.__unittest_L20_C1() [0x427b5a]\n??:? void tmp3tbk6j0r.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9ao18tnp.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp9ao18tnp.__unittest_L20_C1() [0x427b5a]\n??:? void tmp9ao18tnp.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i; 0 .. str1.length)\n\t{\n\t\tif(i%2 == 0)\n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpczxl_kqk.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f2d]\n??:? void tmpczxl_kqk.__unittest_L20_C1() [0x427b66]\n??:? void tmpczxl_kqk.__modtest() [0x427cac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c637]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b546]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4303cc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fea9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b51d]\n??:? runModuleUnitTests [0x42c40d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283f0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpg2l5oauf.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpg2l5oauf.__unittest_L18_C1() [0x427b5a]\n??:? void tmpg2l5oauf.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpm3t6prwc.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpm3t6prwc.__unittest_L18_C1() [0x427b5e]\n??:? void tmpm3t6prwc.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9ao18tnp.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp9ao18tnp.__unittest_L20_C1() [0x427b5a]\n??:? void tmp9ao18tnp.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9ao18tnp.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp9ao18tnp.__unittest_L20_C1() [0x427b5a]\n??:? void tmp9ao18tnp.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5rmqt3i5.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmp5rmqt3i5.__unittest_L20_C1() [0x427b5e]\n??:? void tmp5rmqt3i5.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9ao18tnp.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp9ao18tnp.__unittest_L20_C1() [0x427b5a]\n??:? void tmp9ao18tnp.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\t\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\t\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpshs58zpe.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpshs58zpe.__unittest_L22_C1() [0x427b5e]\n??:? void tmpshs58zpe.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tfor(int i = 0; i < str1.length; i++)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpwdpstglh.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpwdpstglh.__unittest_L20_C1() [0x427b5a]\n??:? void tmpwdpstglh.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c627]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b536]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4303bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b50d]\n??:? runModuleUnitTests [0x42c3fd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283e0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5rmqt3i5.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmp5rmqt3i5.__unittest_L20_C1() [0x427b5e]\n??:? void tmp5rmqt3i5.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable char c; str1)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "/tmp/tmpxd4y13y6.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxd4y13y6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5rmqt3i5.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmp5rmqt3i5.__unittest_L20_C1() [0x427b5e]\n??:? void tmp5rmqt3i5.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tint i;\n\t\n\tfor (i = 0; i < str1.length; i++)\n\t{\n\t\tif (i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t}\n\t}\n\t\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9xte0j68.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp9xte0j68.__unittest_L23_C1() [0x427b5a]\n??:? void tmp9xte0j68.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c627]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b536]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4303bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b50d]\n??:? runModuleUnitTests [0x42c3fd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283e0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, ch; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= ch;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpoy36ah70.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpoy36ah70.__unittest_L20_C1() [0x427b5a]\n??:? void tmpoy36ah70.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5rmqt3i5.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmp5rmqt3i5.__unittest_L20_C1() [0x427b5e]\n??:? void tmp5rmqt3i5.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(i, c; str1) \n\t{\n\t\tif(i % 2 == 0) \n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy5k8hr8i.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpy5k8hr8i.__unittest_L20_C1() [0x427b5a]\n??:? void tmpy5k8hr8i.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5rmqt3i5.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmp5rmqt3i5.__unittest_L20_C1() [0x427b5e]\n??:? void tmp5rmqt3i5.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable char c; str1)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "/tmp/tmpv0t1wwxi.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv0t1wwxi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, ch; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= ch;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpoy36ah70.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpoy36ah70.__unittest_L20_C1() [0x427b5a]\n??:? void tmpoy36ah70.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable char c; str1)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "/tmp/tmpxd4y13y6.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxd4y13y6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring result = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3tbk6j0r.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp3tbk6j0r.__unittest_L20_C1() [0x427b5a]\n??:? void tmp3tbk6j0r.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9ao18tnp.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp9ao18tnp.__unittest_L20_C1() [0x427b5a]\n??:? void tmp9ao18tnp.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable char c; str1)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "/tmp/tmpxd4y13y6.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxd4y13y6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpex1trwf1.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpex1trwf1.__unittest_L20_C1() [0x427b5a]\n??:? void tmpex1trwf1.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9ao18tnp.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp9ao18tnp.__unittest_L20_C1() [0x427b5a]\n??:? void tmp9ao18tnp.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9ao18tnp.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp9ao18tnp.__unittest_L20_C1() [0x427b5a]\n??:? void tmp9ao18tnp.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9dxy1qfl.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp9dxy1qfl.__unittest_L18_C1() [0x427b5a]\n??:? void tmp9dxy1qfl.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9ao18tnp.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp9ao18tnp.__unittest_L20_C1() [0x427b5a]\n??:? void tmp9ao18tnp.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable char c; str1)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "/tmp/tmpv0t1wwxi.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv0t1wwxi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, ch; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= ch;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpoy36ah70.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpoy36ah70.__unittest_L20_C1() [0x427b5a]\n??:? void tmpoy36ah70.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9dxy1qfl.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp9dxy1qfl.__unittest_L18_C1() [0x427b5a]\n??:? void tmp9dxy1qfl.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1) \n\t{\n\t\tif(i % 2 == 0) \n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzqvfj6fr.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpzqvfj6fr.__unittest_L20_C1() [0x427b5a]\n??:? void tmpzqvfj6fr.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, ch; str1) \n\t{\n\t\tif(i % 2 == 0) \n\t\t{\n\t\t\tstr2 ~= ch;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp90d34lyb.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp90d34lyb.__unittest_L20_C1() [0x427b5a]\n??:? void tmp90d34lyb.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5rmqt3i5.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmp5rmqt3i5.__unittest_L20_C1() [0x427b5e]\n??:? void tmp5rmqt3i5.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable index, immutable char c; str1)\n\t{\n\t\tif(index % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmphtsvapu0.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmphtsvapu0.__unittest_L18_C1() [0x427b5e]\n??:? void tmphtsvapu0.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5rmqt3i5.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmp5rmqt3i5.__unittest_L20_C1() [0x427b5e]\n??:? void tmp5rmqt3i5.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9ao18tnp.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp9ao18tnp.__unittest_L20_C1() [0x427b5a]\n??:? void tmp9ao18tnp.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tint i;\n\tfor (i = 0; i < str1.length; i++)\n\t{\n\t\tif (i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzag3himh.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpzag3himh.__unittest_L21_C1() [0x427b5a]\n??:? void tmpzag3himh.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c627]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b536]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4303bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b50d]\n??:? runModuleUnitTests [0x42c3fd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283e0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpg2l5oauf.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpg2l5oauf.__unittest_L18_C1() [0x427b5a]\n??:? void tmpg2l5oauf.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9ao18tnp.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp9ao18tnp.__unittest_L20_C1() [0x427b5a]\n??:? void tmp9ao18tnp.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpg2l5oauf.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpg2l5oauf.__unittest_L18_C1() [0x427b5a]\n??:? void tmpg2l5oauf.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5rmqt3i5.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmp5rmqt3i5.__unittest_L20_C1() [0x427b5e]\n??:? void tmp5rmqt3i5.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5rmqt3i5.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmp5rmqt3i5.__unittest_L20_C1() [0x427b5e]\n??:? void tmp5rmqt3i5.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1) \n\t{\n\t\tif(i % 2 == 0) \n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzqvfj6fr.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpzqvfj6fr.__unittest_L20_C1() [0x427b5a]\n??:? void tmpzqvfj6fr.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(i,ch;str1)\n\t{\n\t\tif(i%2==0)\n\t\t{\n\t\t\tstr2~=ch;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123771,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqtgulmvx.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpqtgulmvx.__unittest_L20_C1() [0x427b5a]\n??:? void tmpqtgulmvx.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tint i;\n\tfor (i = 0; i < str1.length; i++)\n\t{\n\t\tif (i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzag3himh.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpzag3himh.__unittest_L21_C1() [0x427b5a]\n??:? void tmpzag3himh.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c627]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b536]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4303bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b50d]\n??:? runModuleUnitTests [0x42c3fd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283e0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9ao18tnp.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp9ao18tnp.__unittest_L20_C1() [0x427b5a]\n??:? void tmp9ao18tnp.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9ao18tnp.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp9ao18tnp.__unittest_L20_C1() [0x427b5a]\n??:? void tmp9ao18tnp.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(i, c; str1)\n\t{\n\t\tif (i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123771,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprpi63e4j.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmprpi63e4j.__unittest_L20_C1() [0x427b5a]\n??:? void tmprpi63e4j.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tint i;\n\tfor(i = 0; i < str1.length; i++)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfroybyj0.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpfroybyj0.__unittest_L21_C1() [0x427b5a]\n??:? void tmpfroybyj0.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c627]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b536]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4303bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b50d]\n??:? runModuleUnitTests [0x42c3fd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283e0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpg2l5oauf.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpg2l5oauf.__unittest_L18_C1() [0x427b5a]\n??:? void tmpg2l5oauf.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfzw0mr8x.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpfzw0mr8x.__unittest_L20_C1() [0x427b5e]\n??:? void tmpfzw0mr8x.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(i, ch; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= ch;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123771,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuo52etdk.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpuo52etdk.__unittest_L18_C1() [0x427b5a]\n??:? void tmpuo52etdk.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1) \n\t{\n\t\tif(i % 2 == 0) \n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzqvfj6fr.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpzqvfj6fr.__unittest_L20_C1() [0x427b5a]\n??:? void tmpzqvfj6fr.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9ao18tnp.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp9ao18tnp.__unittest_L20_C1() [0x427b5a]\n??:? void tmp9ao18tnp.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9ao18tnp.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp9ao18tnp.__unittest_L20_C1() [0x427b5a]\n??:? void tmp9ao18tnp.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9ao18tnp.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp9ao18tnp.__unittest_L20_C1() [0x427b5a]\n??:? void tmp9ao18tnp.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfzw0mr8x.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpfzw0mr8x.__unittest_L20_C1() [0x427b5e]\n??:? void tmpfzw0mr8x.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfzw0mr8x.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpfzw0mr8x.__unittest_L20_C1() [0x427b5e]\n??:? void tmpfzw0mr8x.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\tforeach(c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123771,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpv9dkcqq7.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427f2d]\n??:? void tmpv9dkcqq7.__unittest_L22_C1() [0x427b66]\n??:? void tmpv9dkcqq7.__modtest() [0x427cac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5c3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4d2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430358]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a9]\n??:? runModuleUnitTests [0x42c399]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42837c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9ao18tnp.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp9ao18tnp.__unittest_L20_C1() [0x427b5a]\n??:? void tmp9ao18tnp.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(i, ch; str1) \n\t{\n\t\tif(i % 2 == 0) \n\t\t{\n\t\t\tstr2 ~= ch;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123771,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmphph7h3yi.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmphph7h3yi.__unittest_L20_C1() [0x427b5a]\n??:? void tmphph7h3yi.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5rmqt3i5.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmp5rmqt3i5.__unittest_L20_C1() [0x427b5e]\n??:? void tmp5rmqt3i5.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, ch; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= ch;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpoy36ah70.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpoy36ah70.__unittest_L20_C1() [0x427b5a]\n??:? void tmpoy36ah70.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9ao18tnp.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp9ao18tnp.__unittest_L20_C1() [0x427b5a]\n??:? void tmp9ao18tnp.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, ch; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= ch;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpoy36ah70.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpoy36ah70.__unittest_L20_C1() [0x427b5a]\n??:? void tmpoy36ah70.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9ao18tnp.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp9ao18tnp.__unittest_L20_C1() [0x427b5a]\n??:? void tmp9ao18tnp.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tint i;\n\tfor(i = 0; i < str1.length; i++)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfroybyj0.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpfroybyj0.__unittest_L21_C1() [0x427b5a]\n??:? void tmpfroybyj0.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c627]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b536]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4303bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b50d]\n??:? runModuleUnitTests [0x42c3fd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283e0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpg2l5oauf.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpg2l5oauf.__unittest_L18_C1() [0x427b5a]\n??:? void tmpg2l5oauf.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpex1trwf1.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpex1trwf1.__unittest_L20_C1() [0x427b5a]\n??:? void tmpex1trwf1.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1) \n\t{\n\t\tif(i % 2 == 0) \n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpynbtxy_4.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpynbtxy_4.__unittest_L20_C1() [0x427b5e]\n??:? void tmpynbtxy_4.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfzw0mr8x.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpfzw0mr8x.__unittest_L20_C1() [0x427b5e]\n??:? void tmpfzw0mr8x.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(i, ch; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= ch;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123771,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuo52etdk.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpuo52etdk.__unittest_L18_C1() [0x427b5a]\n??:? void tmpuo52etdk.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(i, c; str1) {\n\t\tif(i % 2 == 0) {\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123771,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpaeouai_t.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpaeouai_t.__unittest_L18_C1() [0x427b5a]\n??:? void tmpaeouai_t.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope void delegate()) [0x4282f3]\n??:? _d_run_main [0x42825e]\n??:? main [0x427cb3]\n??:? __libc_start_main [0xf6a82554]\n1/1 unittests FAILED\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123771,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpsch4keay.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpsch4keay.__unittest_L20_C1() [0x427b5a]\n??:? void tmpsch4keay.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c627]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b536]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4303bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b50d]\n??:? runModuleUnitTests [0x42c3fd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283e0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfzw0mr8x.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpfzw0mr8x.__unittest_L20_C1() [0x427b5e]\n??:? void tmpfzw0mr8x.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpex1trwf1.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpex1trwf1.__unittest_L20_C1() [0x427b5a]\n??:? void tmpex1trwf1.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable char c; str1)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "/tmp/tmpxd4y13y6.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxd4y13y6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5rmqt3i5.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmp5rmqt3i5.__unittest_L20_C1() [0x427b5e]\n??:? void tmp5rmqt3i5.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpex1trwf1.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpex1trwf1.__unittest_L20_C1() [0x427b5a]\n??:? void tmpex1trwf1.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tint i;\n\tfor (i = 0; i < str1.length; i++) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123771,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpguvdokul.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpguvdokul.__unittest_L21_C1() [0x427b5a]\n??:? void tmpguvdokul.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c627]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b536]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4303bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b50d]\n??:? runModuleUnitTests [0x42c3fd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283e0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(i,ch;str1)\n\t{\n\t\tif(i%2==0)\n\t\t\tstr2~=ch;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123771,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprijqk6fy.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmprijqk6fy.__unittest_L18_C1() [0x427b5a]\n??:? void tmprijqk6fy.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpg2l5oauf.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpg2l5oauf.__unittest_L18_C1() [0x427b5a]\n??:? void tmpg2l5oauf.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5rmqt3i5.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmp5rmqt3i5.__unittest_L20_C1() [0x427b5e]\n??:? void tmp5rmqt3i5.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5rmqt3i5.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmp5rmqt3i5.__unittest_L20_C1() [0x427b5e]\n??:? void tmp5rmqt3i5.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5rmqt3i5.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmp5rmqt3i5.__unittest_L20_C1() [0x427b5e]\n??:? void tmp5rmqt3i5.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9ao18tnp.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp9ao18tnp.__unittest_L20_C1() [0x427b5a]\n??:? void tmp9ao18tnp.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tint i;\n\tfor (i = 0; i < str1.length; i++)\n\t{\n\t\tif (i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzag3himh.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpzag3himh.__unittest_L21_C1() [0x427b5a]\n??:? void tmpzag3himh.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c627]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b536]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4303bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b50d]\n??:? runModuleUnitTests [0x42c3fd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283e0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1) \n\t{\n\t\tif(i % 2 == 0) \n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzqvfj6fr.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpzqvfj6fr.__unittest_L20_C1() [0x427b5a]\n??:? void tmpzqvfj6fr.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9ao18tnp.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp9ao18tnp.__unittest_L20_C1() [0x427b5a]\n??:? void tmp9ao18tnp.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5rmqt3i5.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmp5rmqt3i5.__unittest_L20_C1() [0x427b5e]\n??:? void tmp5rmqt3i5.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tfor(int i = 0; i < str1.length; i++) \n\t{\n\t\tif(i % 2 == 0) \n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123771,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpc1dgj5a5.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpc1dgj5a5.__unittest_L20_C1() [0x427b5a]\n??:? void tmpc1dgj5a5.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c627]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b536]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff0d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4303bc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe99]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b50d]\n??:? runModuleUnitTests [0x42c3fd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283e0]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif (i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123771,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2mkj0s16.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmp2mkj0s16.__unittest_L18_C1() [0x427b5e]\n??:? void tmp2mkj0s16.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tint i;\n\tfor(i = 0; i < str1.length; i += 2)\n\t{\n\t\tstr2 ~= str1[i];\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123771,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpr7izh7jz.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f15]\n??:? void tmpr7izh7jz.__unittest_L18_C1() [0x427b4e]\n??:? void tmpr7izh7jz.__modtest() [0x427c94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c61f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b52e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42ff05]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4303b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b505]\n??:? runModuleUnitTests [0x42c3f5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283d8]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfzw0mr8x.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpfzw0mr8x.__unittest_L20_C1() [0x427b5e]\n??:? void tmpfzw0mr8x.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9dxy1qfl.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp9dxy1qfl.__unittest_L18_C1() [0x427b5a]\n??:? void tmp9dxy1qfl.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(i, ch; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= ch;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123771,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuo52etdk.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpuo52etdk.__unittest_L18_C1() [0x427b5a]\n??:? void tmpuo52etdk.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfzw0mr8x.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpfzw0mr8x.__unittest_L20_C1() [0x427b5e]\n??:? void tmpfzw0mr8x.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable char c; str1)\n\t{\n\t\tif(c.isDigit)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "/tmp/tmpxd4y13y6.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxd4y13y6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9ao18tnp.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp9ao18tnp.__unittest_L20_C1() [0x427b5a]\n??:? void tmp9ao18tnp.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9ao18tnp.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp9ao18tnp.__unittest_L20_C1() [0x427b5a]\n??:? void tmp9ao18tnp.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, ch; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= ch;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpoy36ah70.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpoy36ah70.__unittest_L20_C1() [0x427b5a]\n??:? void tmpoy36ah70.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfzw0mr8x.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpfzw0mr8x.__unittest_L20_C1() [0x427b5e]\n??:? void tmpfzw0mr8x.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfzw0mr8x.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmpfzw0mr8x.__unittest_L20_C1() [0x427b5e]\n??:? void tmpfzw0mr8x.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9dxy1qfl.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp9dxy1qfl.__unittest_L18_C1() [0x427b5a]\n??:? void tmp9dxy1qfl.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpex1trwf1.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpex1trwf1.__unittest_L20_C1() [0x427b5a]\n??:? void tmpex1trwf1.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5rmqt3i5.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmp5rmqt3i5.__unittest_L20_C1() [0x427b5e]\n??:? void tmp5rmqt3i5.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9dxy1qfl.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp9dxy1qfl.__unittest_L18_C1() [0x427b5a]\n??:? void tmp9dxy1qfl.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpex1trwf1.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmpex1trwf1.__unittest_L20_C1() [0x427b5a]\n??:? void tmpex1trwf1.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5rmqt3i5.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmp5rmqt3i5.__unittest_L20_C1() [0x427b5e]\n??:? void tmp5rmqt3i5.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable i, immutable c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5rmqt3i5.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f25]\n??:? void tmp5rmqt3i5.__unittest_L20_C1() [0x427b5e]\n??:? void tmp5rmqt3i5.__modtest() [0x427ca4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5bb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fea1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430350]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b4a1]\n??:? runModuleUnitTests [0x42c391]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428374]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2;\n\tforeach(immutable char c; str1)\n\t{\n\t\tif(c.isDigit)\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "/tmp/tmpf_60b9q0.d(13): Error: no property `isDigit` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf_60b9q0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove odd characters in a string.\n\t\n*/\nstring remove_odd(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(i, c; str1)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_odd;\n\n    assert(candidate(\"python\") == \"yhn\");\n    assert(candidate(\"program\") == \"rga\");\n    assert(candidate(\"language\") == \"agae\");\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9ao18tnp.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp9ao18tnp.__unittest_L20_C1() [0x427b5a]\n??:? void tmp9ao18tnp.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c5b3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b4c2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430348]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b499]\n??:? runModuleUnitTests [0x42c389]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
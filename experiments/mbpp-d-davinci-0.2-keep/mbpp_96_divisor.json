{
  "name": "mbpp_96_divisor",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the number of divisors of a given integer.\n\t\n*/\nlong divisor(long n) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_96_divisor.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = divisor;\n\n    assert(candidate(15L) == 4L);\n    assert(candidate(12L) == 6L);\n    assert(candidate(9L) == 3L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tlong count = 0;\n\tforeach(i; 1..n+1) \n\t{\n\t\tif(n % i == 0) \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor(long i = 1; i <= n; i++)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 1; i <= n; i++)\n\t{\n\t\tif (n % i == 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong result = 0;\n\tforeach(i; 1..n)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tresult++;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 1; i <= n; i++)\n\t{\n\t\tif (n % i == 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 1..n+1)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tcount += 1;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor(long i = 1; i <= n; i++)\n\t{\n\t\tif(n % i == 0)\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 1..n+1)\n\t{\n\t\tif(n % i == 0)\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 1; i <= n; i++)\n\t{\n\t\tif (n % i == 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor(int i = 1; i <= n; i++) \n\t{\n\t\tif(n % i == 0) \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong divisor = 0;\n\tfor (long i = 1; i <= n; i++)\n\t{\n\t\tif (n % i == 0)\n\t\t{\n\t\t\tdivisor++;\n\t\t}\n\t}\n\treturn divisor;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 1; i <= n; i++) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 1; i <= n; i++)\n\t{\n\t\tif (n % i == 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (long i = 1; i <= n; i++)\n\t{\n\t\tif (n % i == 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}"
  ]
}
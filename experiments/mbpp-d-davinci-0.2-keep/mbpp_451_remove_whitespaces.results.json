{
  "name": "mbpp_451_remove_whitespaces",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_451_remove_whitespaces.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring result = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t\ttext2 ~= c;\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t\ttext2 ~= c;\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t\ttext2 ~= c;\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t\ttext2 ~= c;\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach (c; text1)\n\t{\n\t\tif (c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\treturn text1.replace(\" \", \"\");\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp7etota1t.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7etota1t.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(char c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif (c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(char c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t\ttext2 ~= c;\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(char c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t\ttext2 ~= c;\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(char c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(char c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t\ttext2 ~= c;\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t\ttext2 ~= c;\n\t}\n\treturn text2;\n}\n/*\n\tWrite a function to remove all whitespaces from the given string.\n*/\nstring remove_whitespaces2(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t\ttext2 ~= c;\n\t}\n\treturn text2;\n}\n/*\n\tWrite a function to remove all whitespaces from the given string.\n*/\nstring remove_whitespaces3(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t\ttext2 ~= c;\n\t}\n\treturn text2;\n}\n/*\n\tWrite a function to remove all whitespaces from the given string.\n*/\nstring remove_whitespaces4(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t\ttext2 ~= c;\n\t}\n\treturn text2;\n}\n/*\n\tWrite a function to remove all whitespaces from the given string.\n*/\nstring remove_whitespaces5(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t\ttext2 ~= c;\n\t}\n\treturn text2;\n}\n/*\n\tWrite a function to remove all whitespaces from the given string.\n*/\nstring remove_whitespaces6(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t\ttext2 ~= c;\n\t}\n\treturn text2;\n}\n/*\n\tWrite a function to remove all whitespaces from the given string.\n*/\nstring remove_\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "/tmp/tmpl8wtd0xl.d(87): Error: semicolon expected, not `unittest`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl8wtd0xl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring result = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(char c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(char c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t\ttext2 ~= c;\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring result = \"\";\n\tforeach(char c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t\ttext2 ~= c;\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring result = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(!isWhite(c))\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "/tmp/tmpowpeues0.d(13): Error: undefined identifier `isWhite`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpowpeues0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\treturn text1.replace(\" \", \"\");\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp7etota1t.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7etota1t.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(char c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tfor (int i = 0; i < text1.length; i++)\n\t{\n\t\tif (text1[i] != ' ')\n\t\t{\n\t\t\ttext2 ~= text1[i];\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(char c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t\ttext2 ~= c;\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(char c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t\ttext2 ~= c;\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t\ttext2 ~= c;\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring result = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(char c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1) \n\t{\n\t\tif(c != ' ') \n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring result = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\treturn text1.replace(\" \", \"\");\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp7etota1t.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7etota1t.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach (c; text1) \n\t{\n\t\tif (c != ' ') \n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\n/*\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "/tmp/tmpd66xdy0l.d(20): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd66xdy0l.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(char c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t\ttext2 ~= c;\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring result = \"\";\n\tforeach(char c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring result = \"\";\n\tforeach(char c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring result = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring result = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(ch; text1)\n\t{\n\t\tif(ch != ' ')\n\t\t{\n\t\t\ttext2 ~= ch;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(char c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t\ttext2 ~= c;\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t\ttext2 ~= c;\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(char c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(char c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t\ttext2 ~= c;\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t\ttext2 ~= c;\n\t}\n\treturn text2;\n}\n/*\n\tWrite a function to remove all occurrences of the given character from the given string.\n*/\nstring remove_char(string text1, char c)\n{\n\tstring text2;\n\tforeach(c1; text1)\n\t{\n\t\tif(c1 != c)\n\t\t\ttext2 ~= c1;\n\t}\n\treturn text2;\n}\n/*\n\tWrite a function to remove all occurrences of the given character from the given string.\n*/\nstring remove_char(string text1, char c)\n{\n\tstring text2;\n\tforeach(c1; text1)\n\t{\n\t\tif(c1 != c)\n\t\t\ttext2 ~= c1;\n\t}\n\treturn text2;\n}\n/*\n\tWrite a function to remove all occurrences of the given character from the given string.\n*/\nstring remove_char(string text1, char c)\n{\n\tstring text2;\n\tforeach(c1; text1)\n\t{\n\t\tif(c1 != c)\n\t\t\ttext2 ~= c1;\n\t}\n\treturn text2;\n}\n/*\n\tWrite a function to remove all occurrences of the given character from the given string.\n*/\nstring remove_char(string text1, char c)\n{\n\tstring text2;\n\tforeach(c1; text1)\n\t{\n\t\tif(c1 != c)\n\t\t\ttext2 ~= c1;\n\t}\n\treturn text2;\n}\n/*\n\tWrite a function to remove all occurrences of the given character from the given string.\n*/\nstring remove_char(string text1, char c)\n{\n\tstring text2;\n\tforeach(c1; text1)\n\t{\n\t\tif(c1 != c)\n\t\t\ttext2 ~= c1;\n\t}\n\treturn text2;\n}\n/*\n\tWrite a function to remove all occurrences of the given character\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "/tmp/tmpbozsun0n.d(83): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbozsun0n.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\treturn text1.replace(\" \", \"\");\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp7etota1t.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7etota1t.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(char c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t\ttext2 ~= c;\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring result = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring result = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t\ttext2 ~= c;\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(char c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t\ttext2 ~= c;\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t\ttext2 ~= c;\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(char c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring result = \"\";\n\tforeach(char c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t\ttext2 ~= c;\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\treturn text1.replace(\" \", \"\");\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp7etota1t.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7etota1t.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1) \n\t{\n\t\tif(c != ' ') \n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(char c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t\ttext2 ~= c;\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring result;\n\tforeach(char c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t\ttext2 ~= c;\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(!isWhite(c))\n\t\t\ttext2 ~= c;\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "/tmp/tmpqodz1r70.d(13): Error: undefined identifier `isWhite`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqodz1r70.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring result = \"\";\n\tforeach(char c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t\ttext2 ~= c;\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(char c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t\ttext2 ~= c;\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t\ttext2 ~= c;\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(char c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t\ttext2 ~= c;\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring result = \"\";\n\tforeach(char c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring result = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t\ttext2 ~= c;\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\n/*\n\tWrite a function to remove all the vowels from the given string.\n*/\nstring remove_vowels(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\n/*\n\tWrite a function to remove all the consonants from the given string.\n*/\nstring remove_consonants(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\n/*\n\tWrite a function to remove all the digits from the given string.\n*/\nstring remove_digits(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c < '0' || c > '9')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\n/*\n\tWrite a function to remove all the special characters from the given string.\n*/\nstring remove_special_characters(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c >= '0' && c <= '9' || c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "/tmp/tmpplbn4ir0.d(77): Error: found `unittest` instead of statement\n/tmp/tmpplbn4ir0.d(85): Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpplbn4ir0.d(85): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpplbn4ir0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(char c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t\ttext2 ~= c;\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(char c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t\ttext2 ~= c;\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach (c; text1)\n\t{\n\t\tif (c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t\ttext2 ~= c;\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\treturn text1.replace(\" \", \"\");\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp7etota1t.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7etota1t.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(char c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(char c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t\ttext2 ~= c;\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach (c; text1) \n\t{\n\t\tif (c != ' ') \n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(char c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t\ttext2 ~= c;\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\treturn text1.replace(\" \", \"\");\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp7etota1t.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7etota1t.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t\ttext2 ~= c;\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t\ttext2 ~= c;\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t\ttext2 ~= c;\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t\ttext2 ~= c;\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t\ttext2 ~= c;\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t\ttext2 ~= c;\n\t}\n\treturn text2;\n}\n/*\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "/tmp/tmpe9f5mcix.d(18): Error: unterminated /* */ comment\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpe9f5mcix.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\treturn text1.replace(\" \", \"\");\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "/tmp/tmp7etota1t.d(10): Error: no property `replace` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7etota1t.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t\ttext2 ~= c;\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring result = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t\ttext2 ~= c;\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(char c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach (c; text1)\n\t{\n\t\tif (c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t\ttext2 ~= c;\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2 = \"\";\n\tforeach (c; text1)\n\t{\n\t\tif (c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to remove all whitespaces from the given string.\n\t\n*/\nstring remove_whitespaces(string text1) \n{\n\tstring text2;\n\tforeach(c; text1)\n\t{\n\t\tif(c != ' ')\n\t\t{\n\t\t\ttext2 ~= c;\n\t\t}\n\t}\n\treturn text2;\n}\nunittest\n{\n    alias candidate = remove_whitespaces;\n\n    assert(candidate(\" Google    Flutter \") == \"GoogleFlutter\");\n    assert(candidate(\" Google    Dart \") == \"GoogleDart\");\n    assert(candidate(\" iOS    Swift \") == \"iOSSwift\");\n}\nvoid main(){}",
      "timestamp": 1665517430,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_118_string_to_list",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to convert a string to a list of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_118_string_to_list.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = string_to_list;\n\n    assert(candidate(\"python programming\") == [\"python\", \"programming\"]);\n    assert(candidate(\"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"]);\n    assert(candidate(\"write a program\") == [\"write\", \"a\", \"program\"]);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn split(string);\n}",
    "{\n\treturn split(string);\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn split(string);\n}\n/*",
    "{\n\treturn split(string);\n}",
    "{\n\treturn split(string);\n}",
    "{\n\treturn split(string);\n}\n/*",
    "{\n\treturn split(string);\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn split(string);\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn split(string);\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn split(string);\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\tstring[] list;\n\tforeach(string word; split(string, \" \"))\n\t{\n\t\tlist ~= word;\n\t}\n\treturn list;\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn split(string);\n}\n/*",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn split(string);\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn split(string);\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn split(string);\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn split(string);\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn split(string);\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn split(string);\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn split(string);\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn split(string);\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn split(string);\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn split(string);\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn split(string);\n}",
    "{\n\treturn split(string);\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn split(string);\n}",
    "{\n\treturn split(string);\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn split(string);\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn split(string);\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn split(string);\n}\n/*\n\tWrite a function to convert a list of strings to a string joined by the space character.\n\t\n*/\nstring list_to_string(string[] list) \n{\n\treturn join(list);\n}\n/*\n\tWrite a function to convert a string to a list of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string);\n}\n/*\n\tWrite a function to convert a list of strings to a string joined by the space character.\n\t\n*/\nstring list_to_string(string[] list) \n{\n\treturn join(list);\n}\n/*\n\tWrite a function to convert a string to a list of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string);\n}\n/*\n\tWrite a function to convert a list of strings to a string joined by the space character.\n\t\n*/\nstring list_to_string(string[] list) \n{\n\treturn join(list);\n}\n/*\n\tWrite a function to convert a string to a list of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string);\n}\n/*\n\tWrite a function to convert a list of strings to a string joined by the space character.\n\t\n*/\nstring list_to_string(string[] list) \n{\n\treturn join(list);\n}\n/*\n\tWrite a function to convert a string to a list of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string);\n}\n/*\n\tWrite a function to convert a list of strings to a string joined by the space character.\n\t\n*/\nstring list_to_string(string[] list) \n{\n\treturn join(list);\n}\n/*\n\tWrite a function to convert a string to a list of strings split on the space character.\n\t\n*/\nstring[] string_to_list(string string) \n{\n\treturn split(string);\n}\n",
    "{\n\treturn split(string);\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn split(string);\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn split(string);\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn split(string);\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn split(string);\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn split(string, ' ');\n}",
    "{\n\treturn split(string);\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn split(string);\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn split(string);\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn split(string);\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn split(string);\n}",
    "{\n\treturn split(string);\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn split(string);\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn split(string);\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn split(string);\n}",
    "{\n\treturn split(string);\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn split(string);\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn split(string);\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn split(string);\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn string.split(\" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn split(string);\n}",
    "{\n\treturn split(string);\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn split(string, \" \");\n}",
    "{\n\treturn split(string, \" \");\n}"
  ]
}
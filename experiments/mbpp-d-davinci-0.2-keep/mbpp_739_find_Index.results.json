{
  "name": "mbpp_739_find_Index",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_739_find_Index.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long i = 1; \n    long tri = 0; \n    while (true) \n    { \n        tri = (i * (i + 1)) / 2; \n        if (tri % 10 == 0) \n            return i; \n        i++; \n    } \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqky9564f.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d3d]\n??:? void tmpqky9564f.__unittest_L20_C1() [0x427a89]\n??:? void tmpqky9564f.__modtest() [0x427ac0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba63]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8f6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa89]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff38]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa15]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8cd]\n??:? runModuleUnitTests [0x42b839]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42818c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n; \n    long ans = -1; \n    while (low <= high) \n    { \n        long mid = (low + high) / 2; \n        long tri = mid * (mid + 1) / 2; \n        if (tri == n) \n            return mid; \n        else if (tri < n) \n        { \n            ans = mid; \n            low = mid + 1; \n        } \n        else\n            high = mid - 1; \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz1ozo34j.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427d95]\n??:? void tmpz1ozo34j.__unittest_L28_C1() [0x427abc]\n??:? void tmpz1ozo34j.__modtest() [0x427b14]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42babb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a94e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a925]\n??:? runModuleUnitTests [0x42b891]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281e4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong low = 1, high = n; \n\tlong mid; \n\twhile (low <= high) \n\t{ \n\t\tmid = (low + high) / 2; \n\t\tif (mid * (mid + 1) / 2 >= n * (long)log10(n) - (long)log10(2 * 3.14 * n) / 2 + 1) \n\t\t\thigh = mid - 1; \n\t\telse\n\t\t\tlow = mid + 1; \n\t} \n\treturn low; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpimtesthu.d(15): Error: C style cast illegal, use `cast(long)log10(n)`\n/tmp/tmpimtesthu.d(15): Error: C style cast illegal, use `cast(long)log10(2 * 3.14 * n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpimtesthu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    // Initialize low and high for binary search \n    long low = 1, high = n * (n + 1) / 2; \n  \n    // Do binary search for floor(sqrt(n)) \n    while (low < high) \n    { \n        long mid = (low + high) / 2; \n  \n        // If n is a triangular number \n        if (mid * (mid + 1) / 2 < n) \n            low = mid + 1; \n  \n        else\n            high = mid; \n    } \n  \n    return low; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpejeq5ltt.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmpejeq5ltt.__unittest_L28_C1() [0x427aa4]\n??:? void tmpejeq5ltt.__modtest() [0x427afc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long count = 1; \n    long triangularNumber = 0; \n    while (count * (count + 1) / 2 < Math.pow(10, n - 1)) { \n        count++; \n    } \n    return count; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpmj1vwnrl.d(12): Error: undefined identifier `Math`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmj1vwnrl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    // Initialize low and high for binary search \n    long low = 1, high = n * (n + 1) / 2; \n  \n    // Do binary search for floor(sqrt(n)) \n    while (low < high) \n    { \n        long mid = (low + high) / 2; \n  \n        // If n is a triangular number \n        if (mid * (mid + 1) / 2 < n) \n            low = mid + 1; \n  \n        else\n            high = mid; \n    } \n  \n    return low; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpejeq5ltt.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmpejeq5ltt.__unittest_L28_C1() [0x427aa4]\n??:? void tmpejeq5ltt.__modtest() [0x427afc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long count = 1; \n    long triangularNumber = 1; \n    while (count * (count + 1) / 2 < pow(10, n - 1)) \n    { \n        count++; \n        triangularNumber = count * (count + 1) / 2; \n    } \n    return count; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long count = 0; \n    long i = 1; \n    while (count < n) \n    { \n        long t = (i * (i + 1)) / 2; \n        if (t >= pow(10, n - 1)) \n            return i; \n        i++; \n    } \n    return -1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long count = 0; \n    long i = 1; \n    while (count < n) \n    { \n        long triangle = (i * (i + 1)) / 2; \n        if (triangle <= 9) \n            count++; \n        else\n        { \n            long temp = triangle; \n            while (temp != 0) \n            { \n                temp /= 10; \n                count++; \n            } \n        } \n        i++; \n    } \n    return i - 1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpr11hzfct.d(34): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmpr11hzfct.__unittest_L30_C1() [0x427aa4]\n??:? void tmpr11hzfct.__modtest() [0x427afc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{\n\tlong count = 1;\n\tlong triangularNumber = 0;\n\twhile (true) \n\t{\n\t\ttriangularNumber = triangularNumber + count;\n\t\tcount++;\n\t\tif (triangularNumber.to!string.length == n) \n\t\t{\n\t\t\treturn count - 1;\n\t\t}\n\t}\n}\nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpqe7c53gb.d(16): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqe7c53gb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n; \n    long mid = 0; \n    long ans = 0; \n    while (low <= high) \n    { \n        mid = (low + high) / 2; \n        if (mid * (mid + 1) / 2 >= n) \n        { \n            ans = mid; \n            high = mid - 1; \n        } \n        else\n            low = mid + 1; \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuwl9do8q.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmpuwl9do8q.__unittest_L26_C1() [0x427aa4]\n??:? void tmpuwl9do8q.__modtest() [0x427afc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong low = 1, high = n * n, mid, ans = 0; \n\twhile (low <= high) \n\t{ \n\t\tmid = (low + high) / 2; \n\t\tif (mid * (mid + 1) / 2 >= n) \n\t\t{ \n\t\t\tans = mid; \n\t\t\thigh = mid - 1; \n\t\t} \n\t\telse\n\t\t\tlow = mid + 1; \n\t} \n\treturn ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpdqnu413i.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmpdqnu413i.__unittest_L24_C1() [0x427aa8]\n??:? void tmpdqnu413i.__modtest() [0x427b00]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long count = 0; \n    long i = 1; \n    long triangularNumber = 0; \n    while (count <= n) \n    { \n        triangularNumber = (i * (i + 1)) / 2; \n        if (triangularNumber % 10 == 0) \n            count++; \n        i++; \n    } \n    return i - 1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpw29bt_fb.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d55]\n??:? void tmpw29bt_fb.__unittest_L22_C1() [0x427a80]\n??:? void tmpw29bt_fb.__modtest() [0x427ad8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a90e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faa1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff50]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8e5]\n??:? runModuleUnitTests [0x42b851]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281a4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long i = 1; \n    long triangle = 1; \n    while (true) \n    { \n        if (triangle >= pow(10, n - 1)) \n            return i; \n        i++; \n        triangle = (i * (i + 1)) / 2; \n    } \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long i = 1; \n    long triangle = 0; \n    while (true) \n    { \n        triangle = (i * (i + 1)) / 2; \n        if (triangle % 10 == 0) \n        { \n            long temp = triangle; \n            long count = 0; \n            while (temp != 0) \n            { \n                count++; \n                temp /= 10; \n            } \n            if (count == n) \n                return i; \n        } \n        i++; \n    } \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp11x6dt9q.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmp11x6dt9q.__unittest_L30_C1() [0x427ad1]\n??:? void tmp11x6dt9q.__modtest() [0x427b08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong low = 1, high = n; \n\tlong mid, len, num; \n\twhile (low <= high) \n\t{ \n\t\tmid = (low + high) / 2; \n\t\tlen = (long)log10(0.5 * mid * (mid + 1)) + 1; \n\t\tif (len == n) \n\t\t{ \n\t\t\tnum = 0.5 * mid * (mid + 1); \n\t\t\twhile (len == (long)log10(num) + 1) \n\t\t\t{ \n\t\t\t\tmid--; \n\t\t\t\tnum = 0.5 * mid * (mid + 1); \n\t\t\t} \n\t\t\treturn mid + 1; \n\t\t} \n\t\telse if (len < n) \n\t\t\tlow = mid + 1; \n\t\telse\n\t\t\thigh = mid - 1; \n\t} \n\treturn -1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmphsabik93.d(15): Error: C style cast illegal, use `cast(long)log10(0.5 * mid * (mid + 1))`\n/tmp/tmphsabik93.d(19): Error: C style cast illegal, use `cast(long)log10(num)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphsabik93.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 0, high = n * (n + 1) / 2; \n    long mid, num; \n    while (low < high) \n    { \n        mid = (low + high) / 2; \n        num = mid * (mid + 1) / 2; \n        if (num < n) \n            low = mid + 1; \n        else\n            high = mid; \n    } \n    return low; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzo5ij1wk.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmpzo5ij1wk.__unittest_L23_C1() [0x427aa4]\n??:? void tmpzo5ij1wk.__modtest() [0x427afc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong i = 1; \n\tlong sum = 0; \n\twhile (true) \n\t{ \n\t\tsum += i; \n\t\tif (sum % (long)pow(10, n) == sum) \n\t\t\treturn i; \n\t\ti++; \n\t} \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpm7ggm0nt.d(15): Error: C style cast illegal, use `cast(long)pow(10, n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm7ggm0nt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long i = 1; \n    long triangularNumber = 0; \n  \n    while (true) \n    { \n        triangularNumber = (i * (i + 1)) / 2; \n  \n        if (triangularNumber % 10 == 0) \n        { \n            if (triangularNumber / 10 == 0) \n                return i; \n            else\n                i++; \n        } \n        else\n            i++; \n    } \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517385,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n; \n    long mid = 0; \n    long ans = 0; \n    while (low <= high) { \n        mid = (low + high) / 2; \n        if (mid * (mid + 1) / 2 >= n * (long)log10(n)) { \n            ans = mid; \n            high = mid - 1; \n        } \n        else\n            low = mid + 1; \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpfkpwzzjj.d(15): Error: C style cast illegal, use `cast(long)log10(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfkpwzzjj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long count = 0; \n    long i = 1; \n    while (count < n) \n    { \n        long t = (i * (i + 1)) / 2; \n        if (t >= pow(10, n - 1)) \n            return i; \n        i++; \n    } \n    return -1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Initialize low and high for binary search \n\tlong low = 1, high = n * (n + 1) / 2; \n\t\n\t// loop till low is less than or equal to high \n\twhile (low <= high) \n\t{ \n\t\t// Find the mid value \n\t\tlong mid = (low + high) / 2; \n\t\t\n\t\t// if mid has n digits, then return mid \n\t\tif (floor(log10(mid * (mid + 1) / 2)) + 1 == n) \n\t\t\treturn mid; \n\t\t\n\t\t// if mid has more digits, search in left half \n\t\telse if (floor(log10(mid * (mid + 1) / 2)) + 1 > n) \n\t\t\thigh = mid - 1; \n\t\t\n\t\t// if mid has less digits, search in right half \n\t\telse\n\t\t\tlow = mid + 1; \n\t} \n\t\n\t// if no such number exists \n\treturn -1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpw5rc_78k.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427fc5]\n??:? void tmpw5rc_78k.__unittest_L35_C1() [0x427cec]\n??:? void tmpw5rc_78k.__modtest() [0x427d44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42be87]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ad1a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fead]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43035c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe39]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42acf1]\n??:? runModuleUnitTests [0x42bc5d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428414]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long i = 1; \n    long triangularNumber = 0; \n    while (true) \n    { \n        triangularNumber = (i * (i + 1)) / 2; \n        if (triangularNumber % 10 == 0) \n        { \n            long temp = triangularNumber; \n            int count = 0; \n            while (temp != 0) \n            { \n                count++; \n                temp /= 10; \n            } \n            if (count == n) \n                return i; \n        } \n        i++; \n    } \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuhi19xs9.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmpuhi19xs9.__unittest_L30_C1() [0x427acd]\n??:? void tmpuhi19xs9.__modtest() [0x427b04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong x = 1; \n\tlong y = 1; \n\tlong index = 1; \n\twhile (y < n) \n\t{ \n\t\tx = x + 1; \n\t\ty = y + x; \n\t\tindex = index + 1; \n\t} \n\treturn index; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzhhqwk_9.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d45]\n??:? void tmpzhhqwk_9.__unittest_L21_C1() [0x427a70]\n??:? void tmpzhhqwk_9.__modtest() [0x427ac8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff40]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8d5]\n??:? runModuleUnitTests [0x42b841]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428194]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long count = 0; \n    long i = 1; \n    while (count < n) \n    { \n        long t = (i * (i + 1)) / 2; \n        if (t >= pow(10, n - 1)) \n            break; \n        i++; \n    } \n    return i; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 0, high = n * (n + 1) / 2; \n    long mid = (low + high) / 2; \n  \n    while (low < high) { \n        mid = (low + high) / 2; \n  \n        if (mid * (mid + 1) / 2 < n) \n            low = mid + 1; \n        else\n            high = mid; \n    } \n  \n    return low; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzg12u6e3.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427d8d]\n??:? void tmpzg12u6e3.__unittest_L24_C1() [0x427ab4]\n??:? void tmpzg12u6e3.__modtest() [0x427b0c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bab3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a946]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a91d]\n??:? runModuleUnitTests [0x42b889]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281dc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long i = 1; \n    long tri = 0; \n    while (true) \n    { \n        tri = (i * (i + 1)) / 2; \n        if (tri % (long)pow(10, n - 1) == 0) \n            return i; \n        i++; \n    } \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "/tmp/tmpr7qgdarz.d(15): Error: C style cast illegal, use `cast(long)pow(10, n - 1)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr7qgdarz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long index = 1; \n    long triangularNumber = 1; \n    while (triangularNumber < n) \n    { \n        index++; \n        triangularNumber = triangularNumber + index; \n    } \n    return index; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpmlmtdfvg.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmpmlmtdfvg.__unittest_L19_C1() [0x427a54]\n??:? void tmpmlmtdfvg.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = 100000; \n    long mid, ans = -1; \n    while (low <= high) \n    { \n        mid = (low + high) / 2; \n        long tri = (mid * (mid + 1)) / 2; \n        if (tri >= n) \n        { \n            ans = mid; \n            high = mid - 1; \n        } \n        else\n            low = mid + 1; \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpv9au3_a8.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427d8d]\n??:? void tmpv9au3_a8.__unittest_L26_C1() [0x427ab4]\n??:? void tmpv9au3_a8.__modtest() [0x427b0c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bab3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a946]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a91d]\n??:? runModuleUnitTests [0x42b889]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281dc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = 1000000; \n    long mid, ans = 0; \n    while (low <= high) \n    { \n        mid = (low + high) / 2; \n        long tri = (mid * (mid + 1)) / 2; \n        if (tri >= n) \n        { \n            ans = mid; \n            high = mid - 1; \n        } \n        else\n            low = mid + 1; \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpwpuvqy04.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmpwpuvqy04.__unittest_L26_C1() [0x427aa8]\n??:? void tmpwpuvqy04.__modtest() [0x427b00]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong i = 1; \n\tlong j = 1; \n\tlong count = 0; \n\twhile (count < n) \n\t{ \n\t\tj = j + 1; \n\t\tcount = 0; \n\t\tlong temp = j * (j + 1) / 2; \n\t\twhile (temp > 0) \n\t\t{ \n\t\t\tcount = count + 1; \n\t\t\ttemp = temp / 10; \n\t\t} \n\t\ti = i + 1; \n\t} \n\treturn i; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    // Initialize low and high for binary search \n    long low = 1, high = n; \n  \n    // loop till low is less than or equal to high \n    while (low <= high) { \n  \n        // Find the mid value \n        long mid = (low + high) / 2; \n  \n        // Find the triangular number for mid \n        long t = (mid * (mid + 1)) / 2; \n  \n        // If the triangular number is greater than n, set high as mid - 1 \n        if (t > n) \n            high = mid - 1; \n  \n        // If the triangular number is less than n, set low as mid + 1 \n        else if (t < n) \n            low = mid + 1; \n  \n        // If triangular number is equal to n, return mid \n        else\n            return mid; \n    } \n  \n    // If we reach here, then no triangular number is found \n    return -1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuap_mjbe.d(42): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmpuap_mjbe.__unittest_L38_C1() [0x427ab0]\n??:? void tmpuap_mjbe.__modtest() [0x427b08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long i = 1; \n    long triangularNumber = 0; \n    while (true) \n    { \n        triangularNumber = (i * (i + 1)) / 2; \n        if (triangularNumber % 10 == 0) \n        { \n            if (triangularNumber / 10 == n) \n                return i; \n            else\n                i++; \n        } \n        else\n            i++; \n    } \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122610,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong low = 1, high = n; \n\tlong mid, ans = 0; \n\twhile (low <= high) \n\t{ \n\t\tmid = (low + high) / 2; \n\t\tif (mid * (mid + 1) / 2 >= n) \n\t\t{ \n\t\t\tans = mid; \n\t\t\thigh = mid - 1; \n\t\t} \n\t\telse\n\t\t\tlow = mid + 1; \n\t} \n\treturn ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy0itzcbn.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmpy0itzcbn.__unittest_L25_C1() [0x427aa4]\n??:? void tmpy0itzcbn.__modtest() [0x427afc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong low = 1, high = n; \n\tlong mid; \n\tlong ans = 0; \n\twhile (low <= high) \n\t{ \n\t\tmid = (low + high) / 2; \n\t\tif (mid * (mid + 1) / 2 >= n) \n\t\t{ \n\t\t\tans = mid; \n\t\t\thigh = mid - 1; \n\t\t} \n\t\telse\n\t\t\tlow = mid + 1; \n\t} \n\treturn ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmptn1p4oiu.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmptn1p4oiu.__unittest_L26_C1() [0x427aa4]\n??:? void tmptn1p4oiu.__modtest() [0x427afc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long i = 1; \n    long sum = 0; \n    while (true) \n    { \n        sum = sum + i; \n        if (sum % (long)pow(10, n - 1) == 0) \n            return i; \n        i++; \n    } \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "/tmp/tmp15muprf3.d(15): Error: C style cast illegal, use `cast(long)pow(10, n - 1)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp15muprf3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    // Base case \n    if (n <= 0) \n        return 0; \n  \n    // Initialize result \n    long sum = 0; \n  \n    // Find index of largest power of 10 \n    // less than or equal to n \n    long x = 1; \n    while (10 * x <= n) \n        x = x * 10; \n  \n    // Find index of smallest triangular \n    // number with n digits \n    long index = 1; \n    while (true) \n    { \n        sum = sum + x; \n        if (sum >= n) \n            return index; \n        index++; \n        x = x * 10; \n    } \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpn5fjur77.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427d75]\n??:? void tmpn5fjur77.__unittest_L35_C1() [0x427aa0]\n??:? void tmpn5fjur77.__modtest() [0x427af8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba9b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a92e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a905]\n??:? runModuleUnitTests [0x42b871]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281c4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long i = 1; \n    long t = 1; \n    while (t < n) \n    { \n        i++; \n        t = (i * (i + 1)) / 2; \n    } \n    return i; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpki9qgrwl.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d45]\n??:? void tmpki9qgrwl.__unittest_L19_C1() [0x427a6c]\n??:? void tmpki9qgrwl.__modtest() [0x427ac4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff40]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8d5]\n??:? runModuleUnitTests [0x42b841]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428194]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long count = 1; \n    long triangle = 1; \n    while (true) \n    { \n        if (triangle.to!string.length == n) \n            return count; \n        count++; \n        triangle += count; \n    } \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "/tmp/tmpvmy1fcy4.d(14): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvmy1fcy4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long count = 0; \n    long i = 1; \n    while (true) \n    { \n        long tri = (i * (i + 1)) / 2; \n        if (tri % 10 == 0) \n        { \n            count++; \n            if (count == n) \n                return i; \n        } \n        i++; \n    } \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpm3ggo_jr.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427d55]\n??:? void tmpm3ggo_jr.__unittest_L24_C1() [0x427a80]\n??:? void tmpm3ggo_jr.__modtest() [0x427ad8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a90e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faa1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff50]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8e5]\n??:? runModuleUnitTests [0x42b851]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281a4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n; \n    long mid; \n    long ans = 0; \n    while (low <= high) { \n        mid = (low + high) / 2; \n        long temp = mid * (mid + 1) / 2; \n        if (temp >= n) { \n            ans = mid; \n            high = mid - 1; \n        } \n        else { \n            low = mid + 1; \n        } \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmptgue68j6.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmptgue68j6.__unittest_L26_C1() [0x427aa4]\n??:? void tmptgue68j6.__modtest() [0x427afc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long count = 0; \n    long i = 1; \n    while (count < n) \n    { \n        long triangle = (i * (i + 1)) / 2; \n        long digits = (long)log10(triangle) + 1; \n        if (digits == n) \n            return i; \n        i++; \n    } \n    return -1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "/tmp/tmparinfxiq.d(15): Error: C style cast illegal, use `cast(long)log10(triangle)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmparinfxiq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long count = 0; \n    long i = 1; \n    while (count < n) \n    { \n        long triangle = (i * (i + 1)) / 2; \n        if (triangle > 9) \n        { \n            long digits = (long)log10(triangle) + 1; \n            if (digits == n) \n                return i; \n            count = digits; \n        } \n        i++; \n    } \n    return -1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "/tmp/tmpamudlx0k.d(17): Error: C style cast illegal, use `cast(long)log10(triangle)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpamudlx0k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong count = 0; \n\tlong i = 1; \n\twhile (count < n) \n\t{ \n\t\tlong triangularNumber = (i * (i + 1)) / 2; \n\t\tlong digits = (long)log10(triangularNumber) + 1; \n\t\tif (digits == n) \n\t\t\treturn i; \n\t\ti++; \n\t} \n\treturn -1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "/tmp/tmpspot_ba2.d(15): Error: C style cast illegal, use `cast(long)log10(triangularNumber)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpspot_ba2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long i = 1; \n    long triangularNumber = 0; \n    while (true) \n    { \n        triangularNumber = (i * (i + 1)) / 2; \n        if (triangularNumber > pow(10, n - 1)) \n            break; \n        i++; \n    } \n    return i; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpv1_005ro.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427e55]\n??:? void tmpv1_005ro.__unittest_L21_C1() [0x427ac4]\n??:? void tmpv1_005ro.__modtest() [0x427bd4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa0e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430050]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e5]\n??:? runModuleUnitTests [0x42b951]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282a4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n * (n + 1) / 2; \n    long mid, count; \n    while (low < high) \n    { \n        mid = (low + high) / 2; \n        count = 0; \n        for (long i = 1; i <= n; i++) \n            count += min(mid / i, n); \n        if (count < n) \n            low = mid + 1; \n        else\n            high = mid; \n    } \n    return low; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "/tmp/tmpf6yzenv2.d(17): Error: undefined identifier `min`, did you mean variable `mid`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf6yzenv2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n; \n    long mid = 0, digits = 0, tri = 0; \n    while (low <= high) \n    { \n        mid = (low + high) / 2; \n        digits = (long)log10(0.5 * mid * (mid + 1)) + 1; \n        if (digits == n) \n        { \n            tri = mid; \n            break; \n        } \n        else if (digits < n) \n            low = mid + 1; \n        else\n            high = mid - 1; \n    } \n    return tri; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "/tmp/tmpbzvkezss.d(15): Error: C style cast illegal, use `cast(long)log10(0.5 * mid * (mid + 1))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbzvkezss.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n * (n + 1) / 2; \n  \n    // Do binary search to find index \n    while (low < high) \n    { \n        long mid = (low + high) / 2; \n  \n        // If mid is triangular number \n        // with n-1 digits \n        if (mid * (mid + 1) / 2 < pow(10, n - 1)) \n            low = mid + 1; \n  \n        else\n            high = mid; \n    } \n  \n    return low; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpgihwhoxq.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427e9d]\n??:? void tmpgihwhoxq.__unittest_L28_C1() [0x427b0c]\n??:? void tmpgihwhoxq.__modtest() [0x427c1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbc3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa56]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbe9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430098]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa2d]\n??:? runModuleUnitTests [0x42b999]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ec]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long count = 0; \n    long i = 1; \n    while (count < n) \n    { \n        long triangle = (i * (i + 1)) / 2; \n        long digits = (long)log10(triangle) + 1; \n        if (digits == n) \n            return i; \n        i++; \n    } \n    return -1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "/tmp/tmparinfxiq.d(15): Error: C style cast illegal, use `cast(long)log10(triangle)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmparinfxiq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    // Initialize low and high for binary search \n    long low = 1, high = n * (n + 1) / 2; \n  \n    // Do binary search for floor(sqrt(number)) \n    while (low < high) \n    { \n        long mid = (low + high) / 2; \n  \n        // If n*(n+1)/2 is smaller than mid \n        if (mid * (mid + 1) / 2 < n) \n            low = mid + 1; \n  \n        // Else update high \n        else\n            high = mid; \n    } \n  \n    // Required index \n    return low; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbm63mxxl.d(34): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmpbm63mxxl.__unittest_L30_C1() [0x427aa4]\n??:? void tmpbm63mxxl.__modtest() [0x427afc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    // Initialize low and high for binary search \n    long low = 1, high = n * (n + 1) / 2; \n  \n    // Do binary search for floor(sqrt(n)) \n    while (low < high) \n    { \n        long mid = (low + high) / 2; \n  \n        // If n is a triangular number \n        if (mid * (mid + 1) / 2 < n) \n            low = mid + 1; \n  \n        else\n            high = mid; \n    } \n  \n    return low; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpejeq5ltt.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmpejeq5ltt.__unittest_L28_C1() [0x427aa4]\n??:? void tmpejeq5ltt.__modtest() [0x427afc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Initialize low and high for binary search \n\tlong low = 1, high = n * (n + 1) / 2; \n\t\n\t// Do binary search for floor(sqrt(n)) \n\twhile (low < high) \n\t{ \n\t\tlong mid = (low + high) / 2; \n\t\t\n\t\t// If n is a triangular number \n\t\tif (mid * (mid + 1) / 2 < n) \n\t\t\tlow = mid + 1; \n\t\telse\n\t\t\thigh = mid; \n\t} \n\t\n\t// low is the required index \n\treturn low; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmph96ps7a5.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmph96ps7a5.__unittest_L28_C1() [0x427aa4]\n??:? void tmph96ps7a5.__modtest() [0x427afc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long first = 1; \n    long second = 1; \n    long index = 2; \n  \n    while (second < n) \n    { \n        long third = first + second; \n        first = second; \n        second = third; \n        index++; \n    } \n  \n    return index; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8_kx9pvq.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427d45]\n??:? void tmp8_kx9pvq.__unittest_L24_C1() [0x427a6c]\n??:? void tmp8_kx9pvq.__modtest() [0x427ac4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff40]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8d5]\n??:? runModuleUnitTests [0x42b841]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428194]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long i = 1; \n    long j = 1; \n    long count = 0; \n  \n    while (count < n) { \n        j = j + 1; \n        count = 0; \n        long temp = j * (j + 1) / 2; \n        while (temp > 0) { \n            count++; \n            temp = temp / 10; \n        } \n        i++; \n    } \n    return i; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long count = 0; \n    long i = 1; \n    while (count < n) { \n        long triangle = (i * (i + 1)) / 2; \n        long digits = (long)log10(triangle) + 1; \n        if (digits == n) \n            return i; \n        i++; \n    } \n    return -1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "/tmp/tmp0_w5fb5t.d(14): Error: C style cast illegal, use `cast(long)log10(triangle)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0_w5fb5t.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long count = 0; \n    long i = 1; \n    while (count < n) \n    { \n        long triangle = (i * (i + 1)) / 2; \n        long digits = (long)log10(triangle) + 1; \n        if (digits == n) \n            return i; \n        i++; \n    } \n    return -1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "/tmp/tmparinfxiq.d(15): Error: C style cast illegal, use `cast(long)log10(triangle)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmparinfxiq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n * (n + 1) / 2; \n    long mid, num, index = 0; \n    while (low <= high) { \n        mid = (low + high) / 2; \n        num = (long)log10(mid * 2) + 1; \n        if (num == n) { \n            index = mid; \n            break; \n        } \n        else if (num < n) \n            low = mid + 1; \n        else\n            high = mid - 1; \n    } \n    return index; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "/tmp/tmprckmohjx.d(14): Error: C style cast illegal, use `cast(long)log10(mid * 2)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprckmohjx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long count = 0; \n    long i = 1; \n    while (count < n) \n    { \n        long tri = (i * (i + 1)) / 2; \n        long digits = (long)log10(tri) + 1; \n        if (digits == n) \n            return i; \n        i++; \n    } \n    return -1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "/tmp/tmpotfe5p2q.d(15): Error: C style cast illegal, use `cast(long)log10(tri)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpotfe5p2q.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long i = 1; \n    long j = 1; \n    long count = 0; \n    while (count < n) \n    { \n        j = j + 1; \n        count = 0; \n        long temp = j * (j + 1) / 2; \n        while (temp > 0) \n        { \n            count = count + 1; \n            temp = temp / 10; \n        } \n        if (count == n) \n            return j; \n    } \n    return -1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n; \n    long mid; \n    long ans = -1; \n    while (low <= high) \n    { \n        mid = (low + high) / 2; \n        long x = mid * (mid + 1) / 2; \n        if (x == n) \n            return mid; \n        if (x < n) \n        { \n            ans = mid; \n            low = mid + 1; \n        } \n        else\n            high = mid - 1; \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpeh8b4ssm.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmpeh8b4ssm.__unittest_L29_C1() [0x427ac4]\n??:? void tmpeh8b4ssm.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long count = 0; \n    long i = 1; \n    while (count < n) \n    { \n        long triangle = (i * (i + 1)) / 2; \n        long digits = (long)log10(triangle) + 1; \n        if (digits == n) \n            return i; \n        i++; \n    } \n    return -1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "/tmp/tmparinfxiq.d(15): Error: C style cast illegal, use `cast(long)log10(triangle)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmparinfxiq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long i = 1; \n    long triangle = 0; \n    while (true) \n    { \n        triangle = (i * (i + 1)) / 2; \n        if (triangle % 10 == 0) \n        { \n            long temp = triangle; \n            long count = 0; \n            while (temp > 0) \n            { \n                count++; \n                temp /= 10; \n            } \n            if (count == n) \n                return i; \n        } \n        i++; \n    } \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6qbnm0q_.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmp6qbnm0q_.__unittest_L30_C1() [0x427ad1]\n??:? void tmp6qbnm0q_.__modtest() [0x427b08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n * (n + 1) / 2; \n    long mid, count; \n    while (low < high) { \n        mid = (low + high) / 2; \n        count = 0; \n        for (long i = 1; i * (i + 1) < 2 * mid; i++) { \n            count += (mid - (i * (i + 1)) / 2); \n        } \n        if (count < n) \n            low = mid + 1; \n        else\n            high = mid; \n    } \n    return low; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpj5l5ag6r.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmpj5l5ag6r.__unittest_L25_C1() [0x427af8]\n??:? void tmpj5l5ag6r.__modtest() [0x427b50]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a986]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb19]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a95d]\n??:? runModuleUnitTests [0x42b8c9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42821c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = 1000000; \n    long mid, ans = 0; \n    while (low <= high) \n    { \n        mid = (low + high) / 2; \n        if (mid * (mid + 1) / 2 >= n) \n        { \n            ans = mid; \n            high = mid - 1; \n        } \n        else\n            low = mid + 1; \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1ffm0agu.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmp1ffm0agu.__unittest_L25_C1() [0x427aa8]\n??:? void tmp1ffm0agu.__modtest() [0x427b00]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long count = 1; \n    long triangle = 0; \n    while (true) \n    { \n        triangle = triangle + count; \n        count++; \n        if (triangle >= pow(10, n - 1) && triangle < pow(10, n)) \n            return count - 1; \n    } \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long x = 1; \n    long y = 1; \n    long index = 1; \n    while (y < n) \n    { \n        x = x + 1; \n        y = y + x; \n        index = index + 1; \n    } \n    return index; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpggotfwe5.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d45]\n??:? void tmpggotfwe5.__unittest_L21_C1() [0x427a70]\n??:? void tmpggotfwe5.__modtest() [0x427ac8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff40]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8d5]\n??:? runModuleUnitTests [0x42b841]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428194]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong count = 0; \n\tlong i = 1; \n\tlong triangularNumber = 0; \n\twhile (count < n) \n\t{ \n\t\ttriangularNumber = triangularNumber + i; \n\t\ti++; \n\t\tcount = countDigits(triangularNumber); \n\t} \n\treturn i - 1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "/tmp/tmpcnsliivt.d(17): Error: undefined identifier `countDigits`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcnsliivt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long count = 1; \n    long triangle = 0; \n  \n    while (count * (count + 1) / 2 < pow(10, n - 1)) \n        count++; \n  \n    return count; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long i = 1; \n    long j = 1; \n    long count = 0; \n    while (count < n) \n    { \n        j = j + 1; \n        count = 0; \n        long temp = j * (j + 1) / 2; \n        while (temp > 0) \n        { \n            count++; \n            temp = temp / 10; \n        } \n        i++; \n    } \n    return i; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 0, high = n * (n + 1) / 2; \n    long mid, ans = 0; \n    while (low <= high) { \n        mid = (low + high) / 2; \n        if (floor(log10(mid * (mid + 1) / 2)) + 1 == n) { \n            ans = mid; \n            high = mid - 1; \n        } \n        else if (floor(log10(mid * (mid + 1) / 2)) + 1 < n) \n            low = mid + 1; \n        else\n            high = mid - 1; \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9ocd6ibe.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427fcd]\n??:? void tmp9ocd6ibe.__unittest_L25_C1() [0x427cf8]\n??:? void tmp9ocd6ibe.__modtest() [0x427d50]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42be8f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ad22]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42feb5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430364]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe41]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42acf9]\n??:? runModuleUnitTests [0x42bc65]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42841c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n; \n    long mid = 0; \n    long ans = 0; \n    while (low <= high) { \n        mid = (low + high) / 2; \n        if (mid * (mid + 1) / 2 >= n * (long)log10(n)) { \n            ans = mid; \n            high = mid - 1; \n        } \n        else\n            low = mid + 1; \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpfkpwzzjj.d(15): Error: C style cast illegal, use `cast(long)log10(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfkpwzzjj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long i = 1; \n    long triangularNumber = 0; \n    while (true) \n    { \n        triangularNumber = (i * (i + 1)) / 2; \n        if (triangularNumber >= pow(10, n - 1) && triangularNumber < pow(10, n)) \n            return i; \n        i++; \n    } \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = 1000000; \n    long ans = 0; \n  \n    while (low <= high) { \n        long mid = (low + high) / 2; \n  \n        if (mid * (mid + 1) / 2 >= n) { \n            ans = mid; \n            high = mid - 1; \n        } \n        else\n            low = mid + 1; \n    } \n  \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqc2j_scz.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmpqc2j_scz.__unittest_L26_C1() [0x427aa8]\n??:? void tmpqc2j_scz.__modtest() [0x427b00]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = 100000; \n    long ans = 0; \n    while (low <= high) \n    { \n        long mid = (low + high) / 2; \n        long temp = (mid * (mid + 1)) / 2; \n        if (temp >= n) \n        { \n            ans = mid; \n            high = mid - 1; \n        } \n        else\n            low = mid + 1; \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8jod3zib.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmp8jod3zib.__unittest_L26_C1() [0x427aa8]\n??:? void tmp8jod3zib.__modtest() [0x427b00]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong low = 1, high = n; \n\tlong mid = 0; \n\tlong ans = 0; \n\twhile (low <= high) \n\t{ \n\t\tmid = (low + high) / 2; \n\t\tif (mid * (mid + 1) / 2 >= n) \n\t\t{ \n\t\t\tans = mid; \n\t\t\thigh = mid - 1; \n\t\t} \n\t\telse\n\t\t\tlow = mid + 1; \n\t} \n\treturn ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9pd7kw25.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmp9pd7kw25.__unittest_L26_C1() [0x427aa4]\n??:? void tmp9pd7kw25.__modtest() [0x427afc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong low = 1, high = n; \n\tlong mid; \n\tlong ans = -1; \n\twhile (low <= high) \n\t{ \n\t\tmid = (low + high) / 2; \n\t\tlong temp = (mid * (mid + 1)) / 2; \n\t\tif (temp >= n) \n\t\t{ \n\t\t\tans = mid; \n\t\t\thigh = mid - 1; \n\t\t} \n\t\telse\n\t\t\tlow = mid + 1; \n\t} \n\treturn ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpsawy97w5.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmpsawy97w5.__unittest_L27_C1() [0x427ab0]\n??:? void tmpsawy97w5.__modtest() [0x427b08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong i = 1; \n\tlong triangularNumber = 0; \n\twhile (true) \n\t{ \n\t\ttriangularNumber = (i * (i + 1)) / 2; \n\t\tif (triangularNumber % 10 == 0) \n\t\t\tbreak; \n\t\ti++; \n\t} \n\treturn i; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9ecpsrfn.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d3d]\n??:? void tmp9ecpsrfn.__unittest_L21_C1() [0x427a89]\n??:? void tmp9ecpsrfn.__modtest() [0x427ac0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba63]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8f6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa89]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff38]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa15]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8cd]\n??:? runModuleUnitTests [0x42b839]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42818c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n; \n    long mid = 0; \n    long ans = 0; \n    while (low <= high) \n    { \n        mid = (low + high) / 2; \n        if (mid * (mid + 1) / 2 >= n) \n        { \n            ans = mid; \n            high = mid - 1; \n        } \n        else\n            low = mid + 1; \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuwl9do8q.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmpuwl9do8q.__unittest_L26_C1() [0x427aa4]\n??:? void tmpuwl9do8q.__modtest() [0x427afc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long i = 1; \n    long tri = 0; \n    while (true) \n    { \n        tri = (i * (i + 1)) / 2; \n        if (tri % (long)pow(10, n - 1) == 0) \n            return i; \n        i++; \n    } \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "/tmp/tmpr7qgdarz.d(15): Error: C style cast illegal, use `cast(long)pow(10, n - 1)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr7qgdarz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong i = 1; \n\tlong j = 1; \n\tlong count = 0; \n\twhile (count < n) \n\t{ \n\t\tj = j + i; \n\t\ti++; \n\t\tlong temp = j; \n\t\twhile (temp > 0) \n\t\t{ \n\t\t\tcount++; \n\t\t\ttemp = temp / 10; \n\t\t} \n\t} \n\treturn i; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4d1nca5v.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427d5d]\n??:? void tmp4d1nca5v.__unittest_L26_C1() [0x427a84]\n??:? void tmp4d1nca5v.__modtest() [0x427adc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a916]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faa9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff58]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8ed]\n??:? runModuleUnitTests [0x42b859]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ac]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long i = 1; \n    long tri_num = 0; \n    while (true) \n    { \n        tri_num = (i * (i + 1)) / 2; \n        if (tri_num % 10 == 0) \n        { \n            long temp = tri_num; \n            long count = 0; \n            while (temp != 0) \n            { \n                temp /= 10; \n                count++; \n            } \n            if (count == n) \n                return i; \n        } \n        i++; \n    } \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyxn8tsng.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmpyxn8tsng.__unittest_L30_C1() [0x427ad1]\n??:? void tmpyxn8tsng.__modtest() [0x427b08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope void delegate",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long count = 1; \n    long tri_num = 1; \n    while (count * (count + 1) / 2 < pow(10, n - 1)) \n    { \n        count++; \n        tri_num = count * (count + 1) / 2; \n    } \n    return count; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong low = 1, high = 1000000; \n\tlong mid, ans = -1; \n\twhile (low <= high) \n\t{ \n\t\tmid = (low + high) / 2; \n\t\tif (triangular(mid) >= n) \n\t\t{ \n\t\t\tans = mid; \n\t\t\thigh = mid - 1; \n\t\t} \n\t\telse\n\t\t\tlow = mid + 1; \n\t} \n\treturn ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "/tmp/tmpc7n0rmlg.d(15): Error: undefined identifier `triangular`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc7n0rmlg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long i = 1; \n    long j = 1; \n    long count = 0; \n    while (count < n) { \n        j = j + 1; \n        count = 0; \n        long temp = j * (j + 1) / 2; \n        while (temp > 0) { \n            count++; \n            temp = temp / 10; \n        } \n        i++; \n    } \n    return i; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Initialize low and high for binary search \n\tlong low = 1, high = n * (n + 1) / 2; \n\t\n\t// loop till low is less than or equal to high \n\twhile (low <= high) \n\t{ \n\t\t// Find the mid value \n\t\tlong mid = (low + high) / 2; \n\t\t\n\t\t// if mid is a triangular number \n\t\tif (mid * (mid + 1) / 2 == n) \n\t\t\treturn mid; \n\t\t\n\t\t// if mid is less than n \n\t\telse if (mid * (mid + 1) / 2 < n) \n\t\t\tlow = mid + 1; \n\t\t\n\t\t// if mid is greater than n \n\t\telse\n\t\t\thigh = mid - 1; \n\t} \n\t\n\t// if no triangular number is found \n\treturn -1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp60el16em.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmp60el16em.__unittest_L35_C1() [0x427ad8]\n??:? void tmp60el16em.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n * (n + 1) / 2; \n    long mid, num, digits; \n    while (low < high) \n    { \n        mid = (low + high) / 2; \n        num = mid * (mid + 1) / 2; \n        digits = (long)(log10(num) + 1); \n        if (digits == n) \n            return mid; \n        else if (digits < n) \n            low = mid + 1; \n        else\n            high = mid; \n    } \n    return -1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "/tmp/tmpx7vxi7b1.d(16): Error: C style cast illegal, use `cast(long)(log10(num) + 1)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpx7vxi7b1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n; \n    long mid, ans = 0; \n    while (low <= high) \n    { \n        mid = (low + high) / 2; \n        long t = mid * (mid + 1) / 2; \n        if (t > n) \n        { \n            high = mid - 1; \n        } \n        else\n        { \n            ans = mid; \n            low = mid + 1; \n        } \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqyeko9bi.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmpqyeko9bi.__unittest_L28_C1() [0x427aa4]\n??:? void tmpqyeko9bi.__modtest() [0x427afc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    // Base cases \n    if (n <= 0) \n        return 0; \n    if (n == 1) \n        return 1; \n  \n    // A temporary array to store triangular \n    // numbers \n    long[] tri = new long[n + 1]; \n  \n    // Fill the array \n    tri[0] = 0; \n    tri[1] = 1; \n    for (long i = 2; i <= n; i++) \n        tri[(int)i] = tri[(int)i - 1] + i; \n  \n    // Binary search \n    long low = 0, high = n; \n    while (low <= high) \n    { \n        long mid = (low + high) / 2; \n  \n        // If n is one more than a triangular number \n        if (tri[(int)mid] == n - 1) \n            return mid; \n  \n        // If n is more than the previous triangular \n        // number and less than the current triangular \n        // number \n        else if (tri[(int)mid] < n - 1 && \n                 n - 1 < tri[(int)mid + 1]) \n            return mid + 1; \n  \n        // If n is less than the mid triangular number \n        else if (tri[(int)mid] > n - 1) \n            high = mid - 1; \n  \n        // If n is more than the mid triangular number \n        else\n            low = mid + 1; \n    } \n  \n    return -1; \n} \n  \n// Driver code \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "/tmp/tmptck99in_.d(24): Error: C style cast illegal, use `cast(int)i`\n/tmp/tmptck99in_.d(24): Error: C style cast illegal, use `cast(int)i`\n/tmp/tmptck99in_.d(33): Error: C style cast illegal, use `cast(int)mid`\n/tmp/tmptck99in_.d(39): Error: C style cast illegal, use `cast(int)mid`\n/tmp/tmptck99in_.d(40): Error: C style cast illegal, use `cast(int)mid`\n/tmp/tmptck99in_.d(44): Error: C style cast illegal, use `cast(int)mid`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptck99in_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long i = 1; \n    long j = 1; \n    long count = 0; \n    while (count < n) \n    { \n        j = j + 1; \n        count = 0; \n        long temp = j * (j + 1) / 2; \n        while (temp > 0) \n        { \n            temp = temp / 10; \n            count = count + 1; \n        } \n        i = i + 1; \n    } \n    return i; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long i = 1; \n    long j = 1; \n    long count = 0; \n    while (count < n) \n    { \n        j = j + 1; \n        count = 0; \n        long k = j * (j + 1) / 2; \n        while (k > 0) \n        { \n            k = k / 10; \n            count = count + 1; \n        } \n        i = i + 1; \n    } \n    return i; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long i = 1; \n    long tri_num = 1; \n    while (true) \n    { \n        if (tri_num % n == 0) \n            break; \n        i++; \n        tri_num += i; \n    } \n    return i; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8jtmf4ax.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmp8jtmf4ax.__unittest_L21_C1() [0x427a54]\n??:? void tmp8jtmf4ax.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = 100000; \n    long mid, ans = -1; \n  \n    while (low <= high) \n    { \n        mid = (low + high) / 2; \n  \n        if (mid * (mid + 1) / 2 >= n) \n        { \n            ans = mid; \n            high = mid - 1; \n        } \n        else\n            low = mid + 1; \n    } \n  \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpog2gv3jc.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427d8d]\n??:? void tmpog2gv3jc.__unittest_L28_C1() [0x427ab4]\n??:? void tmpog2gv3jc.__modtest() [0x427b0c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bab3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a946]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a91d]\n??:? runModuleUnitTests [0x42b889]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281dc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong low = 1, high = n, mid; \n\twhile (low < high) \n\t{ \n\t\tmid = (low + high) / 2; \n\t\tif (mid * (mid + 1) / 2 < n * (long)log10(n)) \n\t\t\tlow = mid + 1; \n\t\telse\n\t\t\thigh = mid; \n\t} \n\treturn low; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "/tmp/tmp0tjodwkx.d(14): Error: C style cast illegal, use `cast(long)log10(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0tjodwkx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long i = 1; \n    long triangularNumber = 0; \n    while (true) \n    { \n        triangularNumber = (i * (i + 1)) / 2; \n        if (triangularNumber % 10 == 0) \n            break; \n        i++; \n    } \n    return i; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxo7hbqzw.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d3d]\n??:? void tmpxo7hbqzw.__unittest_L21_C1() [0x427a89]\n??:? void tmpxo7hbqzw.__modtest() [0x427ac0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba63]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8f6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa89]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff38]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa15]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8cd]\n??:? runModuleUnitTests [0x42b839]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42818c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n; \n    long mid = 0; \n    long ans = 0; \n  \n    while (low <= high) { \n        mid = (low + high) / 2; \n  \n        // If the number of digits in mid is \n        // greater than n, then move to left \n        if (floor(log10(mid * (mid + 1) / 2)) + 1 > n) \n            high = mid - 1; \n  \n        // If the number of digits in mid is \n        // less than n, then move to right \n        else { \n            ans = mid; \n            low = mid + 1; \n        } \n    } \n  \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppgeasbzf.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427f5d]\n??:? void tmppgeasbzf.__unittest_L32_C1() [0x427c88]\n??:? void tmppgeasbzf.__modtest() [0x427ce0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42be1f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42acb2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe45]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4302f4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fdd1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ac89]\n??:? runModuleUnitTests [0x42bbf5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283ac]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    // Initialize low and high for binary search \n    long low = 1, high = n * (n + 1) / 2; \n  \n    // Do binary search for floor(sqrt(n)) \n    while (low < high) { \n        long mid = (low + high) / 2; \n  \n        // If n is a triangular number \n        if (mid * (mid + 1) / 2 < n) \n            low = mid + 1; \n  \n        else\n            high = mid; \n    } \n  \n    return low; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3e2jrqxc.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmp3e2jrqxc.__unittest_L27_C1() [0x427aa4]\n??:? void tmp3e2jrqxc.__modtest() [0x427afc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = 1000000; \n    long ans = 0; \n  \n    while (low <= high) { \n        long mid = (low + high) / 2; \n  \n        long triangle = (mid * (mid + 1)) / 2; \n  \n        if (triangle >= n) { \n            ans = mid; \n            high = mid - 1; \n        } \n        else\n            low = mid + 1; \n    } \n  \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7pua866e.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmp7pua866e.__unittest_L28_C1() [0x427aa8]\n??:? void tmp7pua866e.__modtest() [0x427b00]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long count = 1; \n    long triangularNumber = 0; \n    while (count * (count + 1) / 2 < pow(10, n - 1)) \n    { \n        count++; \n    } \n    return count; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong i = 1; \n\tlong triangularNumber = 0; \n\twhile (true) \n\t{ \n\t\ttriangularNumber = (i * (i + 1)) / 2; \n\t\tif (triangularNumber % 10 == 0) \n\t\t{ \n\t\t\tif (triangularNumber.to!string.length == n) \n\t\t\t\tbreak; \n\t\t} \n\t\ti++; \n\t} \n\treturn i; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "/tmp/tmpvkkofcm4.d(17): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvkkofcm4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = 1; \n    while (high * (high + 1) / 2 < n) \n        high *= 2; \n    while (low < high) \n    { \n        long mid = (low + high) / 2; \n        if (mid * (mid + 1) / 2 < n) \n            low = mid + 1; \n        else\n            high = mid; \n    } \n    return low; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppuruqvqj.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d8d]\n??:? void tmppuruqvqj.__unittest_L23_C1() [0x427ab4]\n??:? void tmppuruqvqj.__modtest() [0x427b0c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bab3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a946]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a91d]\n??:? runModuleUnitTests [0x42b889]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281dc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n * (n + 1) / 2; \n  \n    while (low < high) \n    { \n        long mid = (low + high) / 2; \n  \n        if (mid * (mid + 1) / 2 < n) \n            low = mid + 1; \n        else\n            high = mid; \n    } \n  \n    return low; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyh3fb_j5.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmpyh3fb_j5.__unittest_L24_C1() [0x427aa4]\n??:? void tmpyh3fb_j5.__modtest() [0x427afc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long i = 1; \n    long t = 1; \n    while (t < n) \n    { \n        i++; \n        t = t + i; \n    } \n    return i; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8honj9kw.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmp8honj9kw.__unittest_L19_C1() [0x427a54]\n??:? void tmp8honj9kw.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n * (n + 1) / 2; \n    long mid, num; \n    while (low < high) \n    { \n        mid = (low + high) / 2; \n        num = (long)log10(0.5 * mid * (mid + 1)); \n        if (num < n - 1) \n            low = mid + 1; \n        else\n            high = mid; \n    } \n    return low; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "/tmp/tmpzf2sbez1.d(15): Error: C style cast illegal, use `cast(long)log10(0.5 * mid * (mid + 1))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzf2sbez1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n; \n    long mid = 0; \n    long ans = 0; \n    while (low <= high) { \n        mid = (low + high) / 2; \n        if (mid * (mid + 1) / 2 >= n * (long)log10(n)) { \n            ans = mid; \n            high = mid - 1; \n        } \n        else\n            low = mid + 1; \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517370,
      "stdout": "",
      "stderr": "/tmp/tmpfkpwzzjj.d(15): Error: C style cast illegal, use `cast(long)log10(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfkpwzzjj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long count = 0; \n    long i = 1; \n    while (count < n) \n    { \n        long triangle = (i * (i + 1)) / 2; \n        long digits = (long)log10(triangle) + 1; \n        if (digits == n) \n            return i; \n        i++; \n    } \n    return -1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "/tmp/tmparinfxiq.d(15): Error: C style cast illegal, use `cast(long)log10(triangle)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmparinfxiq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n; \n    long ans = 0; \n    while (low <= high) \n    { \n        long mid = (low + high) / 2; \n        long digits = (long)log10(0.5 * mid * (mid + 1)) + 1; \n        if (digits == n) \n        { \n            ans = mid; \n            high = mid - 1; \n        } \n        else if (digits < n) \n            low = mid + 1; \n        else\n            high = mid - 1; \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "/tmp/tmpvqhovfq1.d(15): Error: C style cast illegal, use `cast(long)log10(0.5 * mid * (mid + 1))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvqhovfq1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n * (n + 1) / 2; \n    long mid, tri; \n    while (low < high) \n    { \n        mid = (low + high) / 2; \n        tri = mid * (mid + 1) / 2; \n        if (tri < n) \n            low = mid + 1; \n        else\n            high = mid; \n    } \n    return low; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8zdxbeuw.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmp8zdxbeuw.__unittest_L23_C1() [0x427aac]\n??:? void tmp8zdxbeuw.__modtest() [0x427b04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong count = 0; \n\tlong i = 1; \n\twhile (count < n) \n\t{ \n\t\tlong temp = (i * (i + 1)) / 2; \n\t\tif (temp > 9) \n\t\t{ \n\t\t\tlong digits = (long)log10(temp) + 1; \n\t\t\tif (digits == n) \n\t\t\t\treturn i; \n\t\t} \n\t\ti++; \n\t} \n\treturn -1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "/tmp/tmpp1ft6ruw.d(17): Error: C style cast illegal, use `cast(long)log10(temp)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp1ft6ruw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = 1000000; \n    long mid, ans = 0; \n    while (low <= high) { \n        mid = (low + high) / 2; \n        long t = (mid * (mid + 1)) / 2; \n        if (t >= n) { \n            ans = mid; \n            high = mid - 1; \n        } \n        else\n            low = mid + 1; \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp15rggzjj.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmp15rggzjj.__unittest_L24_C1() [0x427aa8]\n??:? void tmp15rggzjj.__modtest() [0x427b00]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 0, high = n * (n + 1) / 2; \n    long mid; \n    while (low < high) \n    { \n        mid = (low + high) / 2; \n        if (mid * (mid + 1) / 2 < n) \n            low = mid + 1; \n        else\n            high = mid; \n    } \n    return low; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpts0xuvx_.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmpts0xuvx_.__unittest_L22_C1() [0x427aa4]\n??:? void tmpts0xuvx_.__modtest() [0x427afc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n; \n    long mid = 0; \n    long ans = 0; \n    while (low <= high) \n    { \n        mid = (low + high) / 2; \n        if (mid * (mid + 1) / 2 >= n * (long)log10(n)) \n        { \n            ans = mid; \n            high = mid - 1; \n        } \n        else\n            low = mid + 1; \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "/tmp/tmpunv93v4k.d(16): Error: C style cast illegal, use `cast(long)log10(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpunv93v4k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong count = 0; \n\tlong i = 1; \n\twhile (count < n) \n\t{ \n\t\tlong t = (i * (i + 1)) / 2; \n\t\tif (t >= pow(10, n - 1)) \n\t\t\tbreak; \n\t\ti++; \n\t} \n\treturn i; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n; \n    long mid, ans = 0; \n    while (low <= high) { \n        mid = (low + high) / 2; \n        if (mid * (mid + 1) / 2 >= n) { \n            ans = mid; \n            high = mid - 1; \n        } \n        else\n            low = mid + 1; \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpdewb_nnd.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmpdewb_nnd.__unittest_L23_C1() [0x427aa4]\n??:? void tmpdewb_nnd.__modtest() [0x427afc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long i = 1; \n    long t = 1; \n    while (t < n) \n    { \n        i++; \n        t = t + i; \n    } \n    return i; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8honj9kw.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmp8honj9kw.__unittest_L19_C1() [0x427a54]\n??:? void tmp8honj9kw.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n * (n + 1) / 2; \n    long mid = 0; \n    while (low < high) \n    { \n        mid = (low + high) / 2; \n        long digits = (long)log10(mid * 2) + 1; \n        if (digits > n) \n            high = mid; \n        else if (digits < n) \n            low = mid + 1; \n        else\n            return mid; \n    } \n    return low; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "/tmp/tmp8hvkzu9k.d(15): Error: C style cast illegal, use `cast(long)log10(mid * 2)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8hvkzu9k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n * (n + 1) / 2; \n    long mid = 0; \n    while (low < high) \n    { \n        mid = (low + high) / 2; \n        if (log10(mid * (mid + 1) / 2) < n - 1) \n            low = mid + 1; \n        else\n            high = mid; \n    } \n    return low; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpv13vq9z2.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427de5]\n??:? void tmpv13vq9z2.__unittest_L22_C1() [0x427b10]\n??:? void tmpv13vq9z2.__modtest() [0x427b68]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb1f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9b2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb45]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42fff4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fad1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a989]\n??:? runModuleUnitTests [0x42b8f5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428234]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = 100000; \n    long mid; \n  \n    // Do binary search to find index \n    while (low <= high) \n    { \n        mid = (low + high) / 2; \n  \n        // If mid is a triangular number \n        // with n digits \n        if (mid * (mid + 1) / 2 >= n *  \n                            (long)pow(10, n - 1) && \n            mid * (mid + 1) / 2 < n *  \n                            (long)pow(10, n)) \n            return mid; \n  \n        // If mid is less than n digits \n        if (mid * (mid + 1) / 2 < n *  \n                            (long)pow(10, n - 1)) \n            low = mid + 1; \n  \n        // If mid is more than n digits \n        else\n            high = mid - 1; \n    } \n  \n    return -1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "/tmp/tmpyet3yn4r.d(21): Error: C style cast illegal, use `cast(long)pow(10, n - 1)`\n/tmp/tmpyet3yn4r.d(23): Error: C style cast illegal, use `cast(long)pow(10, n)`\n/tmp/tmpyet3yn4r.d(28): Error: C style cast illegal, use `cast(long)pow(10, n - 1)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyet3yn4r.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong low = 1, high = n; \n\tlong mid; \n\tlong ans = -1; \n\twhile (low <= high) \n\t{ \n\t\tmid = (low + high) / 2; \n\t\tif (mid * (mid + 1) / 2 >= n) \n\t\t{ \n\t\t\tans = mid; \n\t\t\thigh = mid - 1; \n\t\t} \n\t\telse\n\t\t\tlow = mid + 1; \n\t} \n\treturn ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvx_3p84b.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmpvx_3p84b.__unittest_L26_C1() [0x427ab0]\n??:? void tmpvx_3p84b.__modtest() [0x427b08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope void delegate",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long i = 1; \n    long triangle = 0; \n    while (true) \n    { \n        triangle = (i * (i + 1)) / 2; \n        if (triangle % 10 == 0) \n        { \n            if (triangle.to!string().length == n) \n                return i; \n            else\n                i++; \n        } \n        else\n            i++; \n    } \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "/tmp/tmpz7cet43s.d(17): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz7cet43s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\t// Initialize low and high for binary search \n\tlong low = 1, high = n * (n + 1) / 2; \n\tlong ans = 0; \n\t\n\t// Do binary search to find index \n\twhile (low <= high) \n\t{ \n\t\tlong mid = (low + high) / 2; \n\t\t\n\t\t// Calculate number of digits in mid \n\t\tlong digits = (long)log10(mid) + 1; \n\t\t\n\t\t// If number of digits in mid is equal to n, \n\t\t// then find the index of mid \n\t\tif (digits == n) \n\t\t{ \n\t\t\tans = mid; \n\t\t\thigh = mid - 1; \n\t\t} \n\t\t\n\t\t// If number of digits in mid is less than n, \n\t\t// then find in right half \n\t\telse if (digits < n) \n\t\t\tlow = mid + 1; \n\t\t\n\t\t// If number of digits in mid is more than n, \n\t\t// then find in left half \n\t\telse\n\t\t\thigh = mid - 1; \n\t} \n\t\n\t// Find the index of ans \n\tlong index = 0; \n\tfor (long i = 1; i * (i + 1) / 2 < ans; i++) \n\t\tindex++; \n\t\n\treturn index; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "/tmp/tmphzoje0fu.d(20): Error: C style cast illegal, use `cast(long)log10(mid)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphzoje0fu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n, mid; \n    long ans = -1; \n    while (low <= high) { \n        mid = (low + high) / 2; \n        long t = (mid * (mid + 1)) / 2; \n        if (t < n) { \n            ans = mid; \n            low = mid + 1; \n        } \n        else\n            high = mid - 1; \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp91rabxbr.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmp91rabxbr.__unittest_L24_C1() [0x427aac]\n??:? void tmp91rabxbr.__modtest() [0x427b04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long count = 0; \n    long i = 1; \n    while (count < n) \n    { \n        long t = (i * (i + 1)) / 2; \n        if (t >= pow(10, n - 1)) \n            return i; \n        i++; \n    } \n    return -1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong low = 1, high = n; \n\tlong mid, index = -1; \n\twhile (low <= high) \n\t{ \n\t\tmid = (low + high) / 2; \n\t\tlong temp = (mid * (mid + 1)) / 2; \n\t\tif (temp >= n) \n\t\t{ \n\t\t\tindex = mid; \n\t\t\thigh = mid - 1; \n\t\t} \n\t\telse\n\t\t\tlow = mid + 1; \n\t} \n\treturn index; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp71rsbx02.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmp71rsbx02.__unittest_L26_C1() [0x427ab0]\n??:? void tmp71rsbx02.__modtest() [0x427b08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong low = 1, high = n; \n\tlong mid = 0; \n\tlong ans = 0; \n\twhile (low <= high) \n\t{ \n\t\tmid = (low + high) / 2; \n\t\tif (mid * (mid + 1) / 2 >= n) \n\t\t{ \n\t\t\tans = mid; \n\t\t\thigh = mid - 1; \n\t\t} \n\t\telse\n\t\t\tlow = mid + 1; \n\t} \n\treturn ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9pd7kw25.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmp9pd7kw25.__unittest_L26_C1() [0x427aa4]\n??:? void tmp9pd7kw25.__modtest() [0x427afc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long count = 0; \n    long i = 1; \n    while (count < n) \n    { \n        long t = (i * (i + 1)) / 2; \n        if (t >= pow(10, n - 1)) \n            return i; \n        i++; \n    } \n    return -1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong i = 1; \n\tlong triangle = 0; \n\twhile (true) \n\t{ \n\t\ttriangle = (i * (i + 1)) / 2; \n\t\tif (triangle % 10 == 0) \n\t\t{ \n\t\t\tif (triangle.toString().length == n) \n\t\t\t\treturn i; \n\t\t} \n\t\ti++; \n\t} \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "/tmp/tmp4trmmo57.d(17): Error: no property `toString` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4trmmo57.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long i = 1; \n    long sum = 0; \n    while (true) \n    { \n        sum = sum + i; \n        if (sum % (long)pow(10, n - 1) == 0) \n            return i; \n        i++; \n    } \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "/tmp/tmp15muprf3.d(15): Error: C style cast illegal, use `cast(long)pow(10, n - 1)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp15muprf3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong i = 1; \n\tlong triangularNumber = 0; \n\twhile (true) \n\t{ \n\t\ttriangularNumber = (i * (i + 1)) / 2; \n\t\tif (triangularNumber % 10 == 0) \n\t\t{ \n\t\t\tif (triangularNumber.to!string.length == n) \n\t\t\t\treturn i; \n\t\t} \n\t\ti++; \n\t} \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "/tmp/tmpshm_hz5g.d(17): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpshm_hz5g.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long i = 1; \n    long triangle = 0; \n    while (true) \n    { \n        triangle = (i * (i + 1)) / 2; \n        if (triangle % 10 == 0) \n        { \n            if (triangle.to!string.length == n) \n                return i; \n        } \n        i++; \n    } \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "/tmp/tmp_i64fffw.d(17): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_i64fffw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long i = 1; \n    long triangle = 0; \n    while (true) \n    { \n        triangle = (i * (i + 1)) / 2; \n        if (triangle % 10 == 0) \n        { \n            if (triangle / 10 == 0) \n                break; \n            else\n                i++; \n        } \n        else\n        { \n            if (triangle % (long)pow(10, n - 1) == 0) \n                break; \n            else\n                i++; \n        } \n    } \n    return i; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "/tmp/tmpcz_wba2h.d(24): Error: C style cast illegal, use `cast(long)pow(10, n - 1)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcz_wba2h.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = 100000; \n    long mid, ans = 0; \n    while (low <= high) \n    { \n        mid = (low + high) / 2; \n        long triangle = (mid * (mid + 1)) / 2; \n        if (triangle < n) \n        { \n            low = mid + 1; \n            ans = mid; \n        } \n        else if (triangle > n) \n            high = mid - 1; \n        else\n            return mid; \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2drmaybp.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427d95]\n??:? void tmp2drmaybp.__unittest_L28_C1() [0x427ac0]\n??:? void tmp2drmaybp.__modtest() [0x427b18]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42babb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a94e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a925]\n??:? runModuleUnitTests [0x42b891]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281e4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n, mid; \n    long ans = 0; \n  \n    while (low <= high) { \n        mid = (low + high) / 2; \n  \n        // If mid*(mid+1)/2 has n digits, \n        // then store it and look for a smaller \n        // number with n digits \n        if (floor(log10(mid * (mid + 1) / 2)) + 1 == n) { \n            ans = mid; \n            high = mid - 1; \n        } \n  \n        // If mid*(mid+1)/2 has more than n digits, \n        // look for a smaller number \n        else if (floor(log10(mid * (mid + 1) / 2)) + 1 > n) \n            high = mid - 1; \n  \n        // If mid*(mid+1)/2 has less than n digits, \n        // look for a greater number \n        else\n            low = mid + 1; \n    } \n  \n    return ans; \n} \n  \n// Driver code \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1vgwwjlf.d(43): unittest failure\n----------------\n??:? _d_unittestp [0x427fc5]\n??:? void tmp1vgwwjlf.__unittest_L39_C1() [0x427cec]\n??:? void tmp1vgwwjlf.__modtest() [0x427d44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42be87]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ad1a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fead]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43035c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe39]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42acf1]\n??:? runModuleUnitTests [0x42bc5d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428414]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long i = 1; \n    long sum = 0; \n    while (sum < n) \n    { \n        sum += i; \n        i++; \n    } \n    return i - 1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprv7h5r3m.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmprv7h5r3m.__unittest_L19_C1() [0x427a58]\n??:? void tmprv7h5r3m.__modtest() [0x427ab0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = 1000000; \n    long mid; \n  \n    while (low <= high) { \n        mid = (low + high) / 2; \n  \n        if (triangular(mid) >= pow(10, n - 1) && \n            triangular(mid - 1) < pow(10, n - 1)) \n            return mid; \n  \n        if (triangular(mid) < pow(10, n - 1)) \n            low = mid + 1; \n        else\n            high = mid - 1; \n    } \n  \n    return -1; \n} \n  \nlong triangular(long n) \n{ \n    return (n * (n + 1)) / 2; \n} \n  \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n; \n    long mid; \n    long ans = 0; \n    while (low <= high) { \n        mid = (low + high) / 2; \n        if (mid * (mid + 1) / 2 >= n) { \n            ans = mid; \n            high = mid - 1; \n        } \n        else { \n            low = mid + 1; \n        } \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmphp6q52gr.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmphp6q52gr.__unittest_L25_C1() [0x427aa4]\n??:? void tmphp6q52gr.__modtest() [0x427afc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long count = 1; \n    long triangularNumber = 0; \n  \n    while (count * (count + 1) / 2 < n) { \n        count++; \n    } \n  \n    return count; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpakw55774.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmpakw55774.__unittest_L19_C1() [0x427a58]\n??:? void tmpakw55774.__modtest() [0x427ab0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = 1000000; \n    long mid = 0; \n    long ans = 0; \n    while (low <= high) { \n        mid = (low + high) / 2; \n        if (mid * (mid + 1) / 2 >= n) { \n            ans = mid; \n            high = mid - 1; \n        } \n        else\n            low = mid + 1; \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplrlc4shh.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmplrlc4shh.__unittest_L24_C1() [0x427aa8]\n??:? void tmplrlc4shh.__modtest() [0x427b00]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long count = 1; \n    long triangularNumber = 1; \n    while (count * (count + 1) / 2 < pow(10, n - 1)) { \n        count++; \n        triangularNumber = count * (count + 1) / 2; \n    } \n    return count; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long x = 1; \n    long i = 1; \n    while (true) \n    { \n        long t = (i * (i + 1)) / 2; \n        if (t > pow(10, n - 1)) \n            break; \n        x++; \n        i++; \n    } \n    return x; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7md44l0e.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427e55]\n??:? void tmp7md44l0e.__unittest_L22_C1() [0x427ac4]\n??:? void tmp7md44l0e.__modtest() [0x427bd4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa0e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430050]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e5]\n??:? runModuleUnitTests [0x42b951]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282a4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong i = 1; \n\tlong j = 1; \n\tlong count = 0; \n\twhile (count < n) \n\t{ \n\t\tj = j + 1; \n\t\tcount = 0; \n\t\tlong temp = (i * (i + 1)) / 2; \n\t\twhile (temp > 0) \n\t\t{ \n\t\t\tcount++; \n\t\t\ttemp = temp / 10; \n\t\t} \n\t\ti++; \n\t} \n\treturn j; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpr0b045a2.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmpr0b045a2.__unittest_L27_C1() [0x427aa4]\n??:? void tmpr0b045a2.__modtest() [0x427afc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong low = 1, high = n; \n\tlong mid, count, ans = 0; \n\twhile (low <= high) \n\t{ \n\t\tmid = (low + high) / 2; \n\t\tcount = (mid * (mid + 1)) / 2; \n\t\tif (count < n) \n\t\t{ \n\t\t\tans = mid; \n\t\t\tlow = mid + 1; \n\t\t} \n\t\telse\n\t\t\thigh = mid - 1; \n\t} \n\treturn ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmptpc096cu.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmptpc096cu.__unittest_L26_C1() [0x427aa4]\n??:? void tmptpc096cu.__modtest() [0x427afc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long i = 1; \n    long triangle = 0; \n    while (true) \n    { \n        triangle = (i * (i + 1)) / 2; \n        if (triangle % 10 == 0) \n        { \n            if (triangle / 10 == 0) \n                return i; \n            else if (triangle / 10 >= pow(10, n - 1)) \n                return i; \n        } \n        i++; \n    } \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpnsqkwicb.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427e95]\n??:? void tmpnsqkwicb.__unittest_L25_C1() [0x427b08]\n??:? void tmpnsqkwicb.__modtest() [0x427c18]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbbb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa4e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbe1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa25]\n??:? runModuleUnitTests [0x42b991]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282e4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n * (n + 1) / 2; \n  \n    // Do binary search to find index \n    while (low < high) \n    { \n        long mid = (low + high) / 2; \n  \n        // If mid is a triangular number \n        // with n-digits \n        if (mid * (mid + 1) / 2 >= n * pow(10, n - 1) && \n            (mid - 1) * (mid) / 2 < n * pow(10, n - 1)) \n            return mid; \n  \n        // If mid is less than n-digit \n        // triangular number \n        if (mid * (mid + 1) / 2 < n * pow(10, n - 1)) \n            low = mid + 1; \n  \n        // If mid is more than n-digit \n        // triangular number \n        else\n            high = mid; \n    } \n  \n    return -1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpdxp8zi3g.d(40): unittest failure\n----------------\n??:? _d_unittestp [0x427f4d]\n??:? void tmpdxp8zi3g.__unittest_L36_C1() [0x427bbc]\n??:? void tmpdxp8zi3g.__modtest() [0x427ccc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430148]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fc25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aadd]\n??:? runModuleUnitTests [0x42ba49]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42839c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n; \n    long mid = 0; \n    long ans = 0; \n    while (low <= high) { \n        mid = (low + high) / 2; \n        if (mid * (mid + 1) / 2 >= n) { \n            ans = mid; \n            high = mid - 1; \n        } \n        else\n            low = mid + 1; \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjxl51rph.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmpjxl51rph.__unittest_L24_C1() [0x427aa4]\n??:? void tmpjxl51rph.__modtest() [0x427afc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long i = 1; \n    long triangularNumber = 0; \n    while (true) \n    { \n        triangularNumber = (i * (i + 1)) / 2; \n        if (triangularNumber >= pow(10, n - 1) && triangularNumber < pow(10, n)) \n            break; \n        i++; \n    } \n    return i; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long i = 1; \n    long j = 1; \n    long count = 0; \n    while (count < n) \n    { \n        j = j + 1; \n        count = 0; \n        long temp = j * (j + 1) / 2; \n        while (temp > 0) \n        { \n            count = count + 1; \n            temp = temp / 10; \n        } \n        if (count == n) \n            return i; \n        i = i + 1; \n    } \n    return -1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpeh0vvi4w.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmpeh0vvi4w.__unittest_L29_C1() [0x427acc]\n??:? void tmpeh0vvi4w.__modtest() [0x427b24]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n * (n + 1) / 2; \n    long mid; \n    while (low < high) \n    { \n        mid = (low + high) / 2; \n        if (mid * (mid + 1) / 2 < n) \n            low = mid + 1; \n        else\n            high = mid; \n    } \n    return low; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpemzsoj_0.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmpemzsoj_0.__unittest_L22_C1() [0x427aac]\n??:? void tmpemzsoj_0.__modtest() [0x427b04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 0, high = n * n, mid; \n    while (low < high) \n    { \n        mid = (low + high) / 2; \n        long temp = (mid * (mid + 1)) / 2; \n        if (temp < n) \n            low = mid + 1; \n        else\n            high = mid; \n    } \n    return low - 1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpx8vvvkzu.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d6d]\n??:? void tmpx8vvvkzu.__unittest_L22_C1() [0x427a98]\n??:? void tmpx8vvvkzu.__modtest() [0x427af0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281bc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long i = 1; \n    long triangle = 0; \n    while (true) \n    { \n        triangle = (i * (i + 1)) / 2; \n        if (triangle % 10 == 0) \n        { \n            if (triangle.to!string.length == n) \n                return i; \n        } \n        i++; \n    } \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "/tmp/tmp_i64fffw.d(17): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_i64fffw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 0, high = n * (n + 1) / 2; \n    long mid, count; \n    while (low < high) \n    { \n        mid = (low + high) / 2; \n        count = 0; \n        for (long i = 1; i <= n; i++) \n            count += min(n, mid / i); \n        if (count < n) \n            low = mid + 1; \n        else\n            high = mid; \n    } \n    return low; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "/tmp/tmp2vex2xr8.d(17): Error: undefined identifier `min`, did you mean variable `mid`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2vex2xr8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong low = 0, high = n * n, mid = 0; \n\tlong ans = 0; \n\twhile (low <= high) { \n\t\tmid = (low + high) / 2; \n\t\tif (floor(sqrt(2 * mid + 0.25) - 0.5) == mid / (mid + 1)) { \n\t\t\tans = mid; \n\t\t\thigh = mid - 1; \n\t\t} \n\t\telse\n\t\t\tlow = mid + 1; \n\t} \n\treturn ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp12tngbum.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427f1d]\n??:? void tmp12tngbum.__unittest_L23_C1() [0x427c48]\n??:? void tmp12tngbum.__modtest() [0x427ca0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42be17]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42acaa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe3d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4302ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fdc9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ac81]\n??:? runModuleUnitTests [0x42bbed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42836c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong i = 1; \n\tlong tri = 0; \n\twhile (true) \n\t{ \n\t\ttri = (i * (i + 1)) / 2; \n\t\tif (tri % 10 == 0) \n\t\t\treturn i; \n\t\ti++; \n\t} \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpof54io7n.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d3d]\n??:? void tmpof54io7n.__unittest_L20_C1() [0x427a89]\n??:? void tmpof54io7n.__modtest() [0x427ac0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba63]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8f6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa89]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff38]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa15]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8cd]\n??:? runModuleUnitTests [0x42b839]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42818c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n * (n + 1) / 2; \n    long mid, count; \n  \n    while (low < high) { \n        mid = (low + high) / 2; \n        count = 0; \n        for (int i = 1; i <= n; i++) \n            count += min(mid / i, n); \n  \n        if (count < n) \n            low = mid + 1; \n        else\n            high = mid; \n    } \n  \n    return low; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "/tmp/tmp36j9r5i4.d(17): Error: undefined identifier `min`, did you mean variable `mid`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp36j9r5i4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong count = 0; \n\tlong i = 1; \n\twhile (count < n) \n\t{ \n\t\tlong triangle = (i * (i + 1)) / 2; \n\t\tlong digits = (long)log10(triangle) + 1; \n\t\tif (digits == n) \n\t\t\treturn i; \n\t\ti++; \n\t} \n\treturn -1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "/tmp/tmpsgtktlz7.d(15): Error: C style cast illegal, use `cast(long)log10(triangle)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsgtktlz7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long i = 1; \n    long triangularNumber = 0; \n    while (true) \n    { \n        triangularNumber = (i * (i + 1)) / 2; \n        if (triangularNumber >= pow(10, n - 1) && triangularNumber < pow(10, n)) \n            return i; \n        i++; \n    } \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 0, high = n * (n + 1) / 2; \n    long mid = 0; \n  \n    while (low < high) { \n        mid = (low + high) / 2; \n  \n        if (log10(mid * (mid + 1) / 2) < n - 1) \n            low = mid + 1; \n        else\n            high = mid; \n    } \n  \n    return low; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfxb7olrt.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427de5]\n??:? void tmpfxb7olrt.__unittest_L24_C1() [0x427b0c]\n??:? void tmpfxb7olrt.__modtest() [0x427b64]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb1f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9b2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb45]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42fff4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fad1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a989]\n??:? runModuleUnitTests [0x42b8f5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428234]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    // Initialize low and high for binary search \n    long low = 1, high = n * (n + 1) / 2; \n  \n    // Do binary search for floor(sqrt(number)) \n    while (low < high) { \n        long mid = (low + high) / 2; \n  \n        // If n*(n+1)/2 is smaller than mid \n        if (mid * (mid + 1) / 2 < n) \n            low = mid + 1; \n  \n        // If n*(n+1)/2 is greater than mid \n        else\n            high = mid; \n    } \n  \n    // Return the index \n    return low; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122598,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_ytytcds.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmp_ytytcds.__unittest_L29_C1() [0x427aa4]\n??:? void tmp_ytytcds.__modtest() [0x427afc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n; \n    long mid = 0; \n    long ans = 0; \n  \n    while (low <= high) { \n        mid = (low + high) / 2; \n        long x = mid * (mid + 1) / 2; \n        if (x < n) { \n            low = mid + 1; \n            ans = mid; \n        } \n        else if (x > n) \n            high = mid - 1; \n        else\n            return mid; \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbh2wgds2.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427d95]\n??:? void tmpbh2wgds2.__unittest_L28_C1() [0x427abc]\n??:? void tmpbh2wgds2.__modtest() [0x427b14]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42babb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a94e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a925]\n??:? runModuleUnitTests [0x42b891]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281e4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    // Initialize low and high for binary search \n    long low = 1, high = n * (n + 1) / 2; \n  \n    // Do binary search for floor(sqrt(n)) \n    while (low < high) \n    { \n        long mid = (low + high) / 2; \n  \n        // If n is a triangular number \n        if (mid * (mid + 1) / 2 < n) \n            low = mid + 1; \n  \n        else\n            high = mid; \n    } \n  \n    return low; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpejeq5ltt.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmpejeq5ltt.__unittest_L28_C1() [0x427aa4]\n??:? void tmpejeq5ltt.__modtest() [0x427afc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long i = 1; \n    long triangularNumber = 0; \n    while (n > triangularNumber) \n    { \n        triangularNumber = triangularNumber + i; \n        i++; \n    } \n    return i - 1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122598,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpptjlz6z8.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d35]\n??:? void tmpptjlz6z8.__unittest_L19_C1() [0x427a5c]\n??:? void tmpptjlz6z8.__modtest() [0x427ab4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba5b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8ee]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa81]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff30]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa0d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8c5]\n??:? runModuleUnitTests [0x42b831]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428184]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n * (n + 1) / 2; \n    long mid, num; \n    while (low < high) \n    { \n        mid = (low + high) / 2; \n        num = (mid * (mid + 1)) / 2; \n        if (num < n) \n            low = mid + 1; \n        else\n            high = mid; \n    } \n    return low; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122598,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxa2q1q5n.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmpxa2q1q5n.__unittest_L23_C1() [0x427aac]\n??:? void tmpxa2q1q5n.__modtest() [0x427b04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long i = 1; \n    long sum = 0; \n    while (sum < n) { \n        sum = sum + i; \n        i++; \n    } \n    return i - 1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122598,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7gw88wbh.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427d35]\n??:? void tmp7gw88wbh.__unittest_L18_C1() [0x427a5c]\n??:? void tmp7gw88wbh.__modtest() [0x427ab4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba5b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8ee]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa81]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff30]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa0d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8c5]\n??:? runModuleUnitTests [0x42b831]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428184]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n; \n    long mid; \n    long ans = 0; \n    while (low <= high) \n    { \n        mid = (low + high) / 2; \n        if (mid * (mid + 1) / 2 >= n) \n        { \n            ans = mid; \n            high = mid - 1; \n        } \n        else\n            low = mid + 1; \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122598,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpc207z06t.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmpc207z06t.__unittest_L26_C1() [0x427aa4]\n??:? void tmpc207z06t.__modtest() [0x427afc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long i = 1; \n    long tri_num = 0; \n    while (true) \n    { \n        tri_num = (i * (i + 1)) / 2; \n        if (tri_num % 10 == 0) \n        { \n            if (tri_num / 10 == 0) \n                return i; \n            else\n                i++; \n        } \n        else\n            i++; \n    } \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122612,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n * n; \n    long mid, ans = 0; \n  \n    while (low <= high) { \n        mid = (low + high) / 2; \n  \n        // Check if mid is triangular number \n        if (mid * (mid + 1) / 2 >= n) { \n            ans = mid; \n            high = mid - 1; \n        } \n        else\n            low = mid + 1; \n    } \n  \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122598,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpq2mby4gk.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmpq2mby4gk.__unittest_L27_C1() [0x427aa8]\n??:? void tmpq2mby4gk.__modtest() [0x427b00]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1; \n    long high = n; \n    long mid = 0; \n    long ans = 0; \n    while (low <= high) \n    { \n        mid = (low + high) / 2; \n        if (mid * (mid + 1) / 2 >= n * (long)log10(n)) \n        { \n            ans = mid; \n            high = mid - 1; \n        } \n        else\n            low = mid + 1; \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "/tmp/tmp51rv7k99.d(17): Error: C style cast illegal, use `cast(long)log10(n)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp51rv7k99.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long i = 1; \n    long sum = 0; \n    while (true) \n    { \n        sum = sum + i; \n        if (sum % (long)pow(10, n - 1) == 0) \n            return i; \n        i++; \n    } \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "/tmp/tmp15muprf3.d(15): Error: C style cast illegal, use `cast(long)pow(10, n - 1)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp15muprf3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong i = 1; \n\tlong triangularNumber = 0; \n\twhile (true) \n\t{ \n\t\ttriangularNumber = (i * (i + 1)) / 2; \n\t\tif (triangularNumber % 10 == 0) \n\t\t{ \n\t\t\tif (triangularNumber.toString.length == n) \n\t\t\t\treturn i; \n\t\t} \n\t\ti++; \n\t} \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "/tmp/tmpn7njhep8.d(17): Error: no property `toString` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn7njhep8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong low = 1, high = n, mid = 0; \n\tlong ans = 0; \n\twhile (low <= high) { \n\t\tmid = (low + high) / 2; \n\t\tif (mid * (mid + 1) / 2 >= n) { \n\t\t\tans = mid; \n\t\t\thigh = mid - 1; \n\t\t} \n\t\telse { \n\t\t\tlow = mid + 1; \n\t\t} \n\t} \n\treturn ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122598,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprqhkkkiw.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmprqhkkkiw.__unittest_L24_C1() [0x427aa4]\n??:? void tmprqhkkkiw.__modtest() [0x427afc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n; \n    long mid; \n    long ans = 0; \n    while (low <= high) \n    { \n        mid = (low + high) / 2; \n        if (mid * (mid + 1) / 2 >= n) \n        { \n            ans = mid; \n            high = mid - 1; \n        } \n        else\n            low = mid + 1; \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122598,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpc207z06t.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmpc207z06t.__unittest_L26_C1() [0x427aa4]\n??:? void tmpc207z06t.__modtest() [0x427afc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n; \n  \n    // Do binary search. \n    while (low <= high) { \n        long mid = (low + high) / 2; \n  \n        // If mid is a triangular number \n        // with n digits. \n        if (mid * (mid + 1) / 2 >= pow(10, n - 1)) { \n            if (mid * (mid + 1) / 2 == pow(10, n - 1)) \n                return mid; \n            high = mid - 1; \n        } \n        else\n            low = mid + 1; \n    } \n  \n    return -1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122598,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvqsgspfp.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x427ecd]\n??:? void tmpvqsgspfp.__unittest_L29_C1() [0x427b3c]\n??:? void tmpvqsgspfp.__modtest() [0x427c4c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbf3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa86]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc19]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300c8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fba5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa5d]\n??:? runModuleUnitTests [0x42b9c9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42831c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long i = 1; \n    long triangularNumber = 1; \n    while (true) \n    { \n        if (triangularNumber % (long)pow(10, n - 1) == 0) \n            return i; \n        i++; \n        triangularNumber += i; \n    } \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "/tmp/tmpt4lctvp9.d(14): Error: C style cast illegal, use `cast(long)pow(10, n - 1)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt4lctvp9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n * (n + 1) / 2; \n    long mid, count, ans = 0; \n    while (low <= high) { \n        mid = (low + high) / 2; \n        count = 0; \n        for (long i = 1; i * (i + 1) < 2 * mid; i++) \n            count += (mid - (i * (i + 1)) / 2); \n        if (count < n) { \n            ans = mid; \n            low = mid + 1; \n        } \n        else\n            high = mid - 1; \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122598,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpby4e03di.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427ddd]\n??:? void tmpby4e03di.__unittest_L26_C1() [0x427b04]\n??:? void tmpby4e03di.__modtest() [0x427b5c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb03]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a996]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb29]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]\n??:? runModuleUnitTests [0x42b8d9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42822c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong count = 0; \n\tlong i = 1; \n\tlong triangularNumber = 0; \n\twhile (count < n) \n\t{ \n\t\ttriangularNumber = triangularNumber + i; \n\t\ti++; \n\t\tcount = countDigits(triangularNumber); \n\t} \n\treturn i - 1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "/tmp/tmpcnsliivt.d(17): Error: undefined identifier `countDigits`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcnsliivt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong i = 1; \n\tlong j = 1; \n\tlong count = 0; \n\twhile (count < n) \n\t{ \n\t\tj = j + 1; \n\t\tlong temp = (i * (i + 1)) / 2; \n\t\tif (temp > 9) \n\t\t{ \n\t\t\tif (temp % 10 == 0) \n\t\t\t\tcount += 2; \n\t\t\telse\n\t\t\t\tcount += 1; \n\t\t} \n\t\telse\n\t\t\tcount += 1; \n\t\ti += 1; \n\t} \n\treturn j; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122598,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_ina1l6z.d(34): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmp_ina1l6z.__unittest_L30_C1() [0x427aa8]\n??:? void tmp_ina1l6z.__modtest() [0x427b00]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    // Initialize low and high for binary search \n    long low = 1, high = n * (n + 1) / 2; \n  \n    // Do binary search for floor(sqrt(n)) \n    while (low < high) \n    { \n        long mid = (low + high) / 2; \n  \n        // If n is a triangular number \n        if (mid * (mid + 1) / 2 < n) \n            low = mid + 1; \n  \n        else\n            high = mid; \n    } \n  \n    return low; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpejeq5ltt.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmpejeq5ltt.__unittest_L28_C1() [0x427aa4]\n??:? void tmpejeq5ltt.__modtest() [0x427afc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long count = 1; \n    long triangle = 0; \n    while (true) \n    { \n        triangle = (count * (count + 1)) / 2; \n        if (triangle >= pow(10, n - 1)) \n            break; \n        count++; \n    } \n    return count; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122598,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong i = 1; \n\tlong tri = 0; \n\twhile (true) \n\t{ \n\t\ttri = (i * (i + 1)) / 2; \n\t\tif (tri % 10 == 0) \n\t\t{ \n\t\t\tlong temp = tri; \n\t\t\twhile (temp % 10 == 0) \n\t\t\t{ \n\t\t\t\ttemp = temp / 10; \n\t\t\t} \n\t\t\tif (temp == 1) \n\t\t\t\tbreak; \n\t\t} \n\t\ti++; \n\t} \n\treturn i; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122598,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8b5ts8qc.d(34): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmp8b5ts8qc.__unittest_L29_C1() [0x427ac5]\n??:? void tmp8b5ts8qc.__modtest() [0x427afc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long i = 1; \n    long triangularNumber = 0; \n    while (true) \n    { \n        triangularNumber = (i * (i + 1)) / 2; \n        if (triangularNumber >= pow(10, n - 1) && triangularNumber < pow(10, n)) \n            return i; \n        i++; \n    } \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long i = 1; \n    long triangle = 0; \n    while (true) \n    { \n        triangle = (i * (i + 1)) / 2; \n        if (triangle % 10 == 0) \n        { \n            long temp = triangle; \n            long count = 0; \n            while (temp > 0) \n            { \n                count++; \n                temp /= 10; \n            } \n            if (count == n) \n                return i; \n        } \n        i++; \n    } \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6qbnm0q_.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmp6qbnm0q_.__unittest_L30_C1() [0x427ad1]\n??:? void tmp6qbnm0q_.__modtest() [0x427b08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    // Base case \n    if (n <= 0) \n        return 0; \n  \n    // Initialize result \n    long sum = 0; \n  \n    // Keep incrementing until \n    // sum of series becomes n \n    long i = 1; \n    while (true) \n    { \n        sum = sum + i; \n  \n        // If sum has n digits, \n        // return index \n        if (sum == n) \n            return i; \n  \n        // If sum has more than n \n        // digits, return -1 \n        if (sum > n) \n            return -1; \n  \n        i++; \n    } \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122598,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqo6d1iy9.d(41): unittest failure\n----------------\n??:? _d_unittestp [0x427d45]\n??:? void tmpqo6d1iy9.__unittest_L37_C1() [0x427a70]\n??:? void tmpqo6d1iy9.__modtest() [0x427ac8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff40]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8d5]\n??:? runModuleUnitTests [0x42b841]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428194]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 0, high = n * n, mid; \n    while (low < high) \n    { \n        mid = (low + high) / 2; \n        long digits = (long)(log10(0.5 * mid * (mid + 1)) + 1); \n        if (digits <= n) \n            low = mid + 1; \n        else\n            high = mid; \n    } \n    return low - 1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "/tmp/tmpb4kd2zy5.d(14): Error: C style cast illegal, use `cast(long)(log10(0.5 * mid * (mid + 1)) + 1)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb4kd2zy5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long i = 1; \n    long sum = 0; \n    while (true) \n    { \n        sum = sum + i; \n        if (sum % (long)pow(10, n - 1) == 0) \n            return i; \n        i++; \n    } \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "/tmp/tmp15muprf3.d(15): Error: C style cast illegal, use `cast(long)pow(10, n - 1)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp15muprf3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n; \n    long mid = 0; \n    long ans = 0; \n  \n    while (low <= high) { \n        mid = (low + high) / 2; \n  \n        // Check if the mid is triangular number \n        if (mid * (mid + 1) / 2 >= n) { \n            ans = mid; \n            high = mid - 1; \n        } \n        else\n            low = mid + 1; \n    } \n  \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122598,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3b48rx5u.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmp3b48rx5u.__unittest_L28_C1() [0x427aa4]\n??:? void tmp3b48rx5u.__modtest() [0x427afc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong low = 1, high = n, mid; \n\tlong ans = -1; \n\twhile (low <= high) \n\t{ \n\t\tmid = (low + high) / 2; \n\t\tif (mid * (mid + 1) / 2 >= n) \n\t\t{ \n\t\t\tans = mid; \n\t\t\thigh = mid - 1; \n\t\t} \n\t\telse\n\t\t\tlow = mid + 1; \n\t} \n\treturn ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122598,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpu1964ac2.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmpu1964ac2.__unittest_L25_C1() [0x427ab0]\n??:? void tmpu1964ac2.__modtest() [0x427b08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long a = 45 * n * n + 26 * n + 7; \n    long b = 2 * n * n + 2 * n + 1; \n    long c = (long)sqrt(a) - b; \n    if (c % 3 == 0) \n        return c / 3; \n    return -1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "/tmp/tmpc5a9_kqk.d(12): Error: C style cast illegal, use `cast(long)sqrt(a)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpc5a9_kqk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n; \n    long mid; \n  \n    while (low <= high) \n    { \n        mid = (low + high) / 2; \n  \n        if (mid * (mid + 1) / 2 >= n * (n + 1) / 2) \n            high = mid - 1; \n        else\n            low = mid + 1; \n    } \n  \n    return low; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122598,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpydu02lmp.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmpydu02lmp.__unittest_L25_C1() [0x427ab0]\n??:? void tmpydu02lmp.__modtest() [0x427b08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long i = 1; \n    long j = 1; \n    long count = 1; \n    while (count < n) \n    { \n        j = j + 1; \n        i = i + j; \n        count = count + 1; \n    } \n    return j; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122598,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp18ay7mqs.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427d45]\n??:? void tmp18ay7mqs.__unittest_L21_C1() [0x427a70]\n??:? void tmp18ay7mqs.__modtest() [0x427ac8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff40]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa1d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8d5]\n??:? runModuleUnitTests [0x42b841]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428194]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n\tlong l = 1, r = 1000000; \n\twhile (l <= r) \n\t{ \n\t\tlong m = (l + r) / 2; \n\t\tlong t = (m * (m + 1)) / 2; \n\t\tif (t >= n) \n\t\t\tr = m - 1; \n\t\telse\n\t\t\tl = m + 1; \n\t} \n\treturn l; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122598,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp007u5f8n.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d6d]\n??:? void tmp007u5f8n.__unittest_L22_C1() [0x427a98]\n??:? void tmp007u5f8n.__modtest() [0x427af0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281bc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long i = 1; \n    long sum = 0; \n    while (true) { \n        sum = sum + i; \n        if (sum > pow(10, n)) \n            break; \n        i++; \n    } \n    return i; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122598,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpdup7wktr.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427e3d]\n??:? void tmpdup7wktr.__unittest_L20_C1() [0x427ab0]\n??:? void tmpdup7wktr.__modtest() [0x427bc0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb63]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9f6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb89]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9cd]\n??:? runModuleUnitTests [0x42b939]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42828c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = 1000000; \n    long mid, ans = 0; \n    while (low <= high) \n    { \n        mid = (low + high) / 2; \n        if (mid * (mid + 1) / 2 >= n) \n        { \n            ans = mid; \n            high = mid - 1; \n        } \n        else\n            low = mid + 1; \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1ffm0agu.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmp1ffm0agu.__unittest_L25_C1() [0x427aa8]\n??:? void tmp1ffm0agu.__modtest() [0x427b00]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long i = 1; \n    long sum = 0; \n    while (sum <= n) \n    { \n        sum = sum + i; \n        i++; \n    } \n    return i - 2; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122598,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpsk1fmdzt.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d35]\n??:? void tmpsk1fmdzt.__unittest_L19_C1() [0x427a5c]\n??:? void tmpsk1fmdzt.__modtest() [0x427ab4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba5b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8ee]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa81]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff30]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa0d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8c5]\n??:? runModuleUnitTests [0x42b831]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428184]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    // Initialize low and high for binary search \n    long low = 1, high = n * (n + 1) / 2; \n  \n    // Do binary search for floor(sqrt(n)) \n    while (low < high) \n    { \n        long mid = (low + high) / 2; \n  \n        // If n is a triangular number \n        if (mid * (mid + 1) / 2 < n) \n            low = mid + 1; \n  \n        else\n            high = mid; \n    } \n  \n    return low; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpejeq5ltt.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmpejeq5ltt.__unittest_L28_C1() [0x427aa4]\n??:? void tmpejeq5ltt.__modtest() [0x427afc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long i = 1; \n    long sum = 0; \n    while (true) \n    { \n        sum += i; \n        if (sum >= pow(10, n - 1) && sum < pow(10, n)) \n            return i; \n        i++; \n    } \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122598,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n * (n + 1) / 2; \n    long mid, ans = -1; \n  \n    while (low <= high) { \n        mid = (low + high) / 2; \n        if (mid * (mid + 1) / 2 >= n) { \n            ans = mid; \n            high = mid - 1; \n        } \n        else\n            low = mid + 1; \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122598,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpodf48emp.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmpodf48emp.__unittest_L24_C1() [0x427ac4]\n??:? void tmpodf48emp.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n; \n    long mid; \n    long ans = 0; \n    while (low <= high) \n    { \n        mid = (low + high) / 2; \n        if (mid * (mid + 1) / 2 >= n) \n        { \n            ans = mid; \n            high = mid - 1; \n        } \n        else\n            low = mid + 1; \n    } \n    return ans; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122598,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpc207z06t.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmpc207z06t.__unittest_L26_C1() [0x427aa4]\n??:? void tmpc207z06t.__modtest() [0x427afc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long count = 0; \n    long i = 1; \n    while (count < n) \n    { \n        long triangle = (i * (i + 1)) / 2; \n        long digits = (long)(log10(triangle) + 1); \n        if (digits == n) \n            return i; \n        i++; \n    } \n    return -1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122598,
      "stdout": "",
      "stderr": "/tmp/tmp82diy4gb.d(15): Error: C style cast illegal, use `cast(long)(log10(triangle) + 1)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp82diy4gb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long i = 1; \n    while (true) \n    { \n        long t = (i * (i + 1)) / 2; \n        if (t > pow(10, n - 1)) \n            return i; \n        i++; \n    } \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122598,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyjf5ick2.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmpyjf5ick2.__unittest_L19_C1() [0x427abc]\n??:? void tmpyjf5ick2.__modtest() [0x427bcc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    // Initialize low and high for binary search \n    long low = 1, high = n * (n + 1) / 2; \n  \n    // Do binary search for floor(sqrt(number)) \n    while (low < high) \n    { \n        long mid = (low + high) / 2; \n  \n        // If n*(n+1)/2 is smaller than mid \n        if (mid * (mid + 1) / 2 < n) \n            low = mid + 1; \n  \n        // Else update high \n        else\n            high = mid; \n    } \n  \n    // Required index \n    return low; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbm63mxxl.d(34): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmpbm63mxxl.__unittest_L30_C1() [0x427aa4]\n??:? void tmpbm63mxxl.__modtest() [0x427afc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n\t\n*/\nlong find_Index(long n) \n{ \n    long low = 1, high = n, mid; \n  \n    // Do binary search to find the index \n    while (low <= high) { \n        mid = (low + high) / 2; \n  \n        // If the number of digits in mid is equal to n, \n        // then return mid \n        if (floor(log10(mid * (mid + 1) / 2)) + 1 == n) \n            return mid; \n  \n        // If the number of digits in mid is less than n, \n        // then search in the right half \n        else if (floor(log10(mid * (mid + 1) / 2)) + 1 < n) \n            low = mid + 1; \n  \n        // If the number of digits in mid is more than n, \n        // then search in the left half \n        else\n            high = mid - 1; \n    } \n  \n    // If no triangular number is found with n digits, \n    // then return -1 \n    return -1; \n} \nunittest\n{\n    alias candidate = find_Index;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 14L);\n    assert(candidate(4L) == 45L);\n}\nvoid main(){}",
      "timestamp": 1666122598,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpd_5nf92i.d(40): unittest failure\n----------------\n??:? _d_unittestp [0x427fb5]\n??:? void tmpd_5nf92i.__unittest_L36_C1() [0x427cdc]\n??:? void tmpd_5nf92i.__modtest() [0x427d34]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42be77]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ad0a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fe9d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x43034c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fe29]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ace1]\n??:? runModuleUnitTests [0x42bc4d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428404]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
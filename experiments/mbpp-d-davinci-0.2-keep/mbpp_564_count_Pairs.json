{
  "name": "mbpp_564_count_Pairs",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n\t\n*/\nlong count_Pairs(long[] arr, long n) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_564_count_Pairs.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = count_Pairs;\n\n    assert(candidate([1L, 2L, 1L], 3L) == 2L);\n    assert(candidate([1L, 1L, 1L, 1L], 4L) == 0L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L], 5L) == 10L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                ans++; \n    return ans; \n} ",
    "{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                ans++; \n    return ans; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long res = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                res++; \n    return res; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n\tlong count = 0; \n\tfor (long i = 0; i < n; i++) \n\t\tfor (long j = i + 1; j < n; j++) \n\t\t\tif (arr[i] != arr[j]) \n\t\t\t\tcount++; \n\treturn count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long ans = 0; // Initialize result \n  \n    // Consider all possible pairs \n    // and check their differences \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                ans++; \n  \n    return ans; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} \n/*\n\tWrite a python function which takes a list of integers and returns the sum of all the elements in the list.\n\t\n*/\nlong sum_of_elements(long[] arr, long n) \n{ \n    long sum = 0; \n    for (long i = 0; i < n; i++) \n        sum += arr[i]; \n  \n    return sum; \n} \n/*\n\tWrite a python function which takes a list of integers and returns the maximum element in the list.\n\t\n*/\nlong max_element(long[] arr, long n) \n{ \n    long max = arr[0]; \n    for (long i = 1; i < n; i++) \n        if (arr[i] > max) \n            max = arr[i]; \n  \n    return max; \n} \n/*\n\tWrite a python function which takes a list of integers and returns the minimum element in the list.\n\t\n*/\nlong min_element(long[] arr, long n) \n{ \n    long min = arr[0]; \n    for (long i = 1; i < n; i++) \n        if (arr[i] < min) \n            min = arr[i]; \n  \n    return min; \n} \n/*\n\tWrite a python function which takes a list of integers and returns the number of times the maximum element appears in the list.\n\t\n*/\nlong count_max_element(long[] arr, long n) \n{ \n    long max = max_element(arr, n); \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        if (arr[i] == max) \n            count++; \n  \n    return count; \n} \n/*\n\tWrite a python function which takes a list of integers and returns the number of times the minimum",
    "{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                ans++; \n    return ans; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long res = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                res++; \n    return res; \n} \n/*\n\tWrite a python function which takes a list of integers and returns a list of integers where each element is the product of all elements in the list except the element at that index.\n*/\nlong[] productExceptSelf(long[] nums) {\n    long[] result = new long[nums.length];\n    long[] t1 = new long[nums.length];\n    long[] t2 = new long[nums.length];",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n\tlong count = 0; \n\tfor (long i = 0; i < n; i++) \n\t\tfor (long j = i + 1; j < n; j++) \n\t\t\tif (arr[i] != arr[j]) \n\t\t\t\tcount++; \n\treturn count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                ans++; \n    return ans; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long ans = 0; \n  \n    // Iterate through all possible pairs \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                ans++; \n  \n    return ans; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n  \n    // Pick all elements one by one \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n\tlong count = 0; \n\tfor (long i = 0; i < n; i++) \n\t\tfor (long j = i + 1; j < n; j++) \n\t\t\tif (arr[i] != arr[j]) \n\t\t\t\tcount++; \n\treturn count; \n} ",
    "{ \n\tlong count = 0; \n\tfor (long i = 0; i < n; i++) \n\t\tfor (long j = i + 1; j < n; j++) \n\t\t\tif (arr[i] != arr[j]) \n\t\t\t\tcount++; \n\treturn count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                ans++; \n    return ans; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} \n/*\n\tWrite a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n*/\nlong count_Pairs(long[] arr, long n) \n{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} \n/*\n\tWrite a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n*/\nlong count_Pairs(long[] arr, long n) \n{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} \n/*\n\tWrite a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n*/\nlong count_Pairs(long[] arr, long n) \n{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} \n/*\n\tWrite a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n*/\nlong count_Pairs(long[] arr, long n) \n{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i +",
    "{ \n    long ans = 0; // Initialize result \n  \n    // Consider all possible pairs \n    // and check their differences \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                ans++; \n  \n    return ans; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long ans = 0; // Initialize result \n  \n    // Consider all possible pairs \n    // and check their differences \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                ans++; \n  \n    return ans; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} \n/*\n\tWrite a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n\t\n*/\nlong count_Pairs(long[] arr, long n) \n{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} \n/*\n\tWrite a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n\t\n*/\nlong count_Pairs(long[] arr, long n) \n{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} \n/*\n\tWrite a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n\t\n*/\nlong count_Pairs(long[] arr, long n) \n{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} \n/*\n\tWrite a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n\t\n*/\nlong count_Pairs(long[] arr, long n) \n{ \n    long count = 0; \n    for (long i = 0;",
    "{ \n    long count = 0; \n    long i, j; \n  \n    for (i = 0; i < n; i++) \n        for (j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long res = 0; \n    for (long i = 0; i < n - 1; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                res++; \n    return res; \n} ",
    "{ \n    long ans = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                ans++; \n    return ans; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n  \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long ans = 0; // Initialize result \n  \n    // Consider all possible pairs \n    // and check their differences \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                ans++; \n  \n    return ans; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long ans = 0; // Initialize result \n  \n    // Consider all possible pairs \n    // and check their differences \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                ans++; \n  \n    return ans; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long res = 0; \n  \n    // Pick all elements one by one \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                res++; \n  \n    return res; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long ans = 0; \n  \n    // Pick all elements one by one \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                ans++; \n  \n    return ans; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} \n/*\n\tWrite a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n\t\n*/\nlong count_Pairs(long[] arr, long n) \n{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} \n/*\n\tWrite a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n\t\n*/\nlong count_Pairs(long[] arr, long n) \n{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} \n/*\n\tWrite a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n\t\n*/\nlong count_Pairs(long[] arr, long n) \n{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} \n/*\n\tWrite a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n\t\n*/\nlong count_Pairs(long[] arr, long n) \n{ \n    long count = 0; \n    for (long i = 0;",
    "{ \n\tlong res = 0; \n\tfor (long i = 0; i < n; i++) \n\t\tfor (long j = i + 1; j < n; j++) \n\t\t\tif (arr[i] != arr[j]) \n\t\t\t\tres++; \n\treturn res; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n\tlong count = 0; \n\tfor (long i = 0; i < n; i++) \n\t\tfor (long j = i + 1; j < n; j++) \n\t\t\tif (arr[i] != arr[j]) \n\t\t\t\tcount++; \n\treturn count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n\tlong count = 0; \n\tfor (long i = 0; i < n; i++) \n\t\tfor (long j = i + 1; j < n; j++) \n\t\t\tif (arr[i] != arr[j]) \n\t\t\t\tcount++; \n\treturn count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n  \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} ",
    "{ \n    long count = 0; \n    for (long i = 0; i < n; i++) \n        for (long j = i + 1; j < n; j++) \n            if (arr[i] != arr[j]) \n                count++; \n    return count; \n} "
  ]
}
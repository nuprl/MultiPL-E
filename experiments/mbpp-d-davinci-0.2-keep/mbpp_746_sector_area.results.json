{
  "name": "mbpp_746_sector_area",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_746_sector_area.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn null;\n\treturn (a/360.0)*pi*r*r;\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517197,
      "stdout": "",
      "stderr": "/tmp/tmpucmvgg_6.d(12): Error: undefined identifier `pi`\n/tmp/tmpucmvgg_6.d(11): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!float`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpucmvgg_6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tNullable!(float) result;\n\tif (a > 360)\n\t{\n\t\tresult = Nullable!(float).init;\n\t}\n\telse\n\t{\n\t\tresult = Nullable!(float)((a / 360.0) * PI * r * r);\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpew7gqd6y.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x45b769]\n??:? void tmpew7gqd6y.__unittest_L21_C1() [0x4451ba]\n??:? void tmpew7gqd6y.__modtest() [0x459278]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad96]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x460015]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4600a4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ffa1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad6d]\n??:? runModuleUnitTests [0x46479d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c83c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360) \n\t{\n\t\treturn Nullable!(float)();\n\t}\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfiq4z_mr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmpfiq4z_mr.__unittest_L16_C1() [0x44519e]\n??:? void tmpfiq4z_mr.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360) \n\t{\n\t\treturn Nullable!(float).init;\n\t}\n\treturn (a / 360.0) * PI * r * r;\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517197,
      "stdout": "",
      "stderr": "/tmp/tmpe1xm2h6j.d(14): Error: cannot implicitly convert expression `cast(real)(cast(double)a / 360.000) * 3.14159L * cast(real)r * cast(real)r` of type `real` to `Nullable!float`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpe1xm2h6j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif(a > 360)\n\t\treturn Nullable!(float).init;\n\treturn Nullable!(float).init(r * r * a / 2.0);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517197,
      "stdout": "",
      "stderr": "/tmp/tmpyhj_684q.d(12): Error: function expected before `()`, not `Nullable(nanF, true).get()` of type `float`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyhj_684q.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\telse\n\t\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1slr8i95.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmp1slr8i95.__unittest_L15_C1() [0x44519e]\n??:? void tmp1slr8i95.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn null;\n\treturn (a / 360.0) * PI * r * r;\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517197,
      "stdout": "",
      "stderr": "/tmp/tmp9xmku7qf.d(11): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!float`\n/tmp/tmp9xmku7qf.d(12): Error: cannot implicitly convert expression `cast(real)(cast(double)a / 360.000) * 3.14159L * cast(real)r * cast(real)r` of type `real` to `Nullable!float`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9xmku7qf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4pzwnjnq.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmp4pzwnjnq.__unittest_L14_C1() [0x44519e]\n??:? void tmp4pzwnjnq.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360) \n\t{\n\t\treturn Nullable!(float)();\n\t}\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfiq4z_mr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmpfiq4z_mr.__unittest_L16_C1() [0x44519e]\n??:? void tmpfiq4z_mr.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360) \n\t{\n\t\treturn Nullable!(float)();\n\t}\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfiq4z_mr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmpfiq4z_mr.__unittest_L16_C1() [0x44519e]\n??:? void tmpfiq4z_mr.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4pzwnjnq.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmp4pzwnjnq.__unittest_L14_C1() [0x44519e]\n??:? void tmp4pzwnjnq.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif(a > 360) return null;\n\treturn (a/360.0f) * PI * r * r;\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517197,
      "stdout": "",
      "stderr": "/tmp/tmp3iw98007.d(10): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!float`\n/tmp/tmp3iw98007.d(11): Error: cannot implicitly convert expression `cast(real)(cast(float)a / 360.000F) * 3.14159L * cast(real)r * cast(real)r` of type `real` to `Nullable!float`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3iw98007.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360) \n\t{\n\t\treturn Nullable!(float)();\n\t}\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfiq4z_mr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmpfiq4z_mr.__unittest_L16_C1() [0x44519e]\n??:? void tmpfiq4z_mr.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4pzwnjnq.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmp4pzwnjnq.__unittest_L14_C1() [0x44519e]\n??:? void tmp4pzwnjnq.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4pzwnjnq.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmp4pzwnjnq.__unittest_L14_C1() [0x44519e]\n??:? void tmp4pzwnjnq.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t{\n\t\treturn Nullable!(float)();\n\t}\n\telse\n\t{\n\t\treturn Nullable!(float)((0.5 * r * r * a) / 360);\n\t}\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpr5iwt2qe.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x45b759]\n??:? void tmpr5iwt2qe.__unittest_L19_C1() [0x4451aa]\n??:? void tmpr5iwt2qe.__modtest() [0x459268]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649b7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad86]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x460005]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x460094]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad5d]\n??:? runModuleUnitTests [0x46478d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c82c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4pzwnjnq.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmp4pzwnjnq.__unittest_L14_C1() [0x44519e]\n??:? void tmp4pzwnjnq.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float).init;\n\treturn Nullable!(float).init(r * r * a / 2);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517197,
      "stdout": "",
      "stderr": "/tmp/tmpl6k536wm.d(12): Error: function expected before `()`, not `Nullable(nanF, true).get()` of type `float`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl6k536wm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\telse\n\t\treturn Nullable!(float)((a * PI * r * r) / 360);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbbiz1c2w.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmpbbiz1c2w.__unittest_L15_C1() [0x44519e]\n??:? void tmpbbiz1c2w.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360) \n\t{\n\t\treturn Nullable!(float)();\n\t}\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfiq4z_mr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmpfiq4z_mr.__unittest_L16_C1() [0x44519e]\n??:? void tmpfiq4z_mr.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t{\n\t\treturn Nullable!(float)();\n\t}\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122448,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplzx3pff6.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmplzx3pff6.__unittest_L16_C1() [0x44519e]\n??:? void tmplzx3pff6.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360) \n\t{\n\t\treturn Nullable!(float)();\n\t}\n\treturn Nullable!(float)((r * r * a) / 2);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122448,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_3rhhm3c.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x45b741]\n??:? void tmp_3rhhm3c.__unittest_L16_C1() [0x445192]\n??:? void tmp_3rhhm3c.__modtest() [0x459250]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x46499f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad6e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45ffed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46007c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff79]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad45]\n??:? runModuleUnitTests [0x464775]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c814]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float).init;\n\treturn Nullable!(float).init(r * r * a / 2);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517197,
      "stdout": "",
      "stderr": "/tmp/tmpl6k536wm.d(12): Error: function expected before `()`, not `Nullable(nanF, true).get()` of type `float`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl6k536wm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float).init;\n\treturn Nullable!(float).init(r * r * a / 2);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517197,
      "stdout": "",
      "stderr": "/tmp/tmpl6k536wm.d(12): Error: function expected before `()`, not `Nullable(nanF, true).get()` of type `float`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl6k536wm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t{\n\t\treturn Nullable!(float)();\n\t}\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122448,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplzx3pff6.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmplzx3pff6.__unittest_L16_C1() [0x44519e]\n??:? void tmplzx3pff6.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360) \n\t{\n\t\treturn Nullable!(float)();\n\t}\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfiq4z_mr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmpfiq4z_mr.__unittest_L16_C1() [0x44519e]\n??:? void tmpfiq4z_mr.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn null;\n\telse\n\t\treturn (a / 360.0) * PI * r * r;\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122447,
      "stdout": "",
      "stderr": "/tmp/tmpzswlzi6z.d(11): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!float`\n/tmp/tmpzswlzi6z.d(13): Error: cannot implicitly convert expression `cast(real)(cast(double)a / 360.000) * 3.14159L * cast(real)r * cast(real)r` of type `real` to `Nullable!float`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzswlzi6z.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\treturn Nullable!(float)(a * PI * r * r / 360);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122448,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_6k6c4md.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmp_6k6c4md.__unittest_L14_C1() [0x44519e]\n??:? void tmp_6k6c4md.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360) \n\t{\n\t\treturn Nullable!(float)();\n\t}\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfiq4z_mr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmpfiq4z_mr.__unittest_L16_C1() [0x44519e]\n??:? void tmpfiq4z_mr.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t{\n\t\treturn Nullable!(float)();\n\t}\n\telse\n\t{\n\t\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n\t}\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122448,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpurtmavqv.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmpurtmavqv.__unittest_L19_C1() [0x44519e]\n??:? void tmpurtmavqv.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360) \n\t{\n\t\treturn Nullable!(float)();\n\t}\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfiq4z_mr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmpfiq4z_mr.__unittest_L16_C1() [0x44519e]\n??:? void tmpfiq4z_mr.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\telse\n\t\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1slr8i95.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmp1slr8i95.__unittest_L15_C1() [0x44519e]\n??:? void tmp1slr8i95.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float).init;\n\treturn Nullable!(float).init(a * r * r / 2);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122447,
      "stdout": "",
      "stderr": "/tmp/tmpomlgm2pa.d(12): Error: function expected before `()`, not `Nullable(nanF, true).get()` of type `float`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpomlgm2pa.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360) \n\t{\n\t\treturn Nullable!(float)();\n\t}\n\treturn Nullable!(float)(0.5 * r * r * a * PI / 180);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122448,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpakrdbtpp.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x45b759]\n??:? void tmpakrdbtpp.__unittest_L16_C1() [0x4451a6]\n??:? void tmpakrdbtpp.__modtest() [0x459264]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649b7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad86]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x460005]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x460094]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff91]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad5d]\n??:? runModuleUnitTests [0x46478d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c82c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\treturn Nullable!(float)((a * PI * r * r) / 360);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122448,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3ysapcsq.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmp3ysapcsq.__unittest_L14_C1() [0x44519e]\n??:? void tmp3ysapcsq.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4pzwnjnq.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmp4pzwnjnq.__unittest_L14_C1() [0x44519e]\n??:? void tmp4pzwnjnq.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360) \n\t{\n\t\treturn Nullable!(float)();\n\t}\n\treturn Nullable!(float)(r * r * a / 2.0);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122448,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1la6fzb6.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x45b749]\n??:? void tmp1la6fzb6.__unittest_L16_C1() [0x445196]\n??:? void tmp1la6fzb6.__modtest() [0x459254]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649a7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad76]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fff5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x460084]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad4d]\n??:? runModuleUnitTests [0x46477d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c81c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t{\n\t\treturn Nullable!(float)();\n\t}\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122448,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplzx3pff6.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmplzx3pff6.__unittest_L16_C1() [0x44519e]\n??:? void tmplzx3pff6.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360) \n\t{\n\t\treturn Nullable!(float)();\n\t}\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfiq4z_mr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmpfiq4z_mr.__unittest_L16_C1() [0x44519e]\n??:? void tmpfiq4z_mr.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif(a > 360)\n\t\treturn Nullable!(float).init;\n\treturn Nullable!(float).init(r * r * a / 2);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122447,
      "stdout": "",
      "stderr": "/tmp/tmph3j8mnq0.d(12): Error: function expected before `()`, not `Nullable(nanF, true).get()` of type `float`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph3j8mnq0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4pzwnjnq.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmp4pzwnjnq.__unittest_L14_C1() [0x44519e]\n??:? void tmp4pzwnjnq.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif(a > 360) \n\t{\n\t\treturn Nullable!(float).init;\n\t}\n\treturn (a / 360.0) * PI * r * r;\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122447,
      "stdout": "",
      "stderr": "/tmp/tmpw_r1ia_5.d(14): Error: cannot implicitly convert expression `cast(real)(cast(double)a / 360.000) * 3.14159L * cast(real)r * cast(real)r` of type `real` to `Nullable!float`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw_r1ia_5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4pzwnjnq.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmp4pzwnjnq.__unittest_L14_C1() [0x44519e]\n??:? void tmp4pzwnjnq.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif(a > 360)\n\t\treturn Nullable!(float)();\n\telse\n\t\treturn Nullable!(float)(r * r * a / 2);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122448,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkt3ij3tk.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x45b741]\n??:? void tmpkt3ij3tk.__unittest_L15_C1() [0x445192]\n??:? void tmpkt3ij3tk.__modtest() [0x459250]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x46499f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad6e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45ffed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46007c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff79]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad45]\n??:? runModuleUnitTests [0x464775]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c814]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\telse\n\t\treturn Nullable!(float)(r * r * a / 2);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122448,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxc2lisv2.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x45b741]\n??:? void tmpxc2lisv2.__unittest_L15_C1() [0x445192]\n??:? void tmpxc2lisv2.__modtest() [0x459250]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x46499f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad6e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45ffed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46007c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff79]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad45]\n??:? runModuleUnitTests [0x464775]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c814]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360) \n\t{\n\t\treturn Nullable!(float)();\n\t}\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfiq4z_mr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmpfiq4z_mr.__unittest_L16_C1() [0x44519e]\n??:? void tmpfiq4z_mr.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360) return Nullable!(float)();\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122448,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpgjqdbt4z.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmpgjqdbt4z.__unittest_L13_C1() [0x44519e]\n??:? void tmpgjqdbt4z.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float).init;\n\treturn (float)a / 360 * PI * r * r;\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122446,
      "stdout": "",
      "stderr": "/tmp/tmpruob5ur0.d(12): Error: C style cast illegal, use `cast(float)a`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpruob5ur0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\treturn Nullable!(float)((a / 360.0f) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122448,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpo8sat8x_.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmpo8sat8x_.__unittest_L14_C1() [0x44519e]\n??:? void tmpo8sat8x_.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360) \n\t{\n\t\treturn Nullable!(float)();\n\t}\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfiq4z_mr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmpfiq4z_mr.__unittest_L16_C1() [0x44519e]\n??:? void tmpfiq4z_mr.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float).init;\n\treturn Nullable!(float).init(r * r * a / 2.0);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122447,
      "stdout": "",
      "stderr": "/tmp/tmp9ad4neiz.d(12): Error: function expected before `()`, not `Nullable(nanF, true).get()` of type `float`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9ad4neiz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360) \n\t{\n\t\treturn Nullable!(float)();\n\t}\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfiq4z_mr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmpfiq4z_mr.__unittest_L16_C1() [0x44519e]\n??:? void tmpfiq4z_mr.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4pzwnjnq.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmp4pzwnjnq.__unittest_L14_C1() [0x44519e]\n??:? void tmp4pzwnjnq.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360) \n\t{\n\t\treturn Nullable!(float)();\n\t}\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfiq4z_mr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmpfiq4z_mr.__unittest_L16_C1() [0x44519e]\n??:? void tmpfiq4z_mr.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4pzwnjnq.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmp4pzwnjnq.__unittest_L14_C1() [0x44519e]\n??:? void tmp4pzwnjnq.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360) \n\t{\n\t\treturn Nullable!(float)();\n\t}\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfiq4z_mr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmpfiq4z_mr.__unittest_L16_C1() [0x44519e]\n??:? void tmpfiq4z_mr.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif(a > 360)\n\t\treturn Nullable!(float).init;\n\treturn Nullable!(float).init(r*r*a/2);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122447,
      "stdout": "",
      "stderr": "/tmp/tmpnii_zxwu.d(12): Error: function expected before `()`, not `Nullable(nanF, true).get()` of type `float`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnii_zxwu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4pzwnjnq.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmp4pzwnjnq.__unittest_L14_C1() [0x44519e]\n??:? void tmp4pzwnjnq.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\treturn Nullable!(float)((a * PI * r * r) / 360);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122448,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3ysapcsq.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmp3ysapcsq.__unittest_L14_C1() [0x44519e]\n??:? void tmp3ysapcsq.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\telse\n\t\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1slr8i95.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmp1slr8i95.__unittest_L15_C1() [0x44519e]\n??:? void tmp1slr8i95.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float).init;\n\treturn (a / 360.0) * PI * r * r;\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122447,
      "stdout": "",
      "stderr": "/tmp/tmpwy22zhl9.d(12): Error: cannot implicitly convert expression `cast(real)(cast(double)a / 360.000) * 3.14159L * cast(real)r * cast(real)r` of type `real` to `Nullable!float`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwy22zhl9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn null;\n\telse\n\t\treturn (a * pi * r * r) / 360;\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122447,
      "stdout": "",
      "stderr": "/tmp/tmp0ywp4h_b.d(13): Error: undefined identifier `pi`\n/tmp/tmp0ywp4h_b.d(11): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!float`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0ywp4h_b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360) \n\t{\n\t\treturn Nullable!(float)();\n\t}\n\treturn Nullable!(float)((r * r * a) / 2);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122448,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_3rhhm3c.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x45b741]\n??:? void tmp_3rhhm3c.__unittest_L16_C1() [0x445192]\n??:? void tmp_3rhhm3c.__modtest() [0x459250]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x46499f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad6e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45ffed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46007c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff79]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad45]\n??:? runModuleUnitTests [0x464775]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c814]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360) \n\t{\n\t\treturn Nullable!(float)();\n\t}\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfiq4z_mr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmpfiq4z_mr.__unittest_L16_C1() [0x44519e]\n??:? void tmpfiq4z_mr.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif(a > 360)\n\t{\n\t\treturn Nullable!(float)();\n\t}\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122448,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2i96elz8.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmp2i96elz8.__unittest_L16_C1() [0x44519e]\n??:? void tmp2i96elz8.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\telse\n\t\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1slr8i95.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmp1slr8i95.__unittest_L15_C1() [0x44519e]\n??:? void tmp1slr8i95.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360) \n\t{\n\t\treturn Nullable!(float)();\n\t}\n\telse \n\t{\n\t\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n\t}\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122448,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpc2wtan3u.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmpc2wtan3u.__unittest_L19_C1() [0x44519e]\n??:? void tmpc2wtan3u.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float).init;\n\treturn Nullable!(float).init(r * r * a / 2);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517197,
      "stdout": "",
      "stderr": "/tmp/tmpl6k536wm.d(12): Error: function expected before `()`, not `Nullable(nanF, true).get()` of type `float`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl6k536wm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360) \n\t{\n\t\treturn Nullable!(float).init;\n\t}\n\treturn Nullable!(float).init(0.5f * r * r * a * PI / 180);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122447,
      "stdout": "",
      "stderr": "/tmp/tmpjobz0r9b.d(14): Error: function expected before `()`, not `Nullable(nanF, true).get()` of type `float`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjobz0r9b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\telse\n\t\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1slr8i95.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmp1slr8i95.__unittest_L15_C1() [0x44519e]\n??:? void tmp1slr8i95.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4pzwnjnq.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmp4pzwnjnq.__unittest_L14_C1() [0x44519e]\n??:? void tmp4pzwnjnq.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360) \n\t{\n\t\treturn Nullable!(float)();\n\t}\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfiq4z_mr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmpfiq4z_mr.__unittest_L16_C1() [0x44519e]\n??:? void tmpfiq4z_mr.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float).init;\n\treturn Nullable!(float).init(r * r * a / 2);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517197,
      "stdout": "",
      "stderr": "/tmp/tmpl6k536wm.d(12): Error: function expected before `()`, not `Nullable(nanF, true).get()` of type `float`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl6k536wm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360) \n\t{\n\t\treturn Nullable!(float)();\n\t}\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfiq4z_mr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmpfiq4z_mr.__unittest_L16_C1() [0x44519e]\n??:? void tmpfiq4z_mr.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4pzwnjnq.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmp4pzwnjnq.__unittest_L14_C1() [0x44519e]\n??:? void tmp4pzwnjnq.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif(a > 360)\n\t\treturn Nullable!(float).init;\n\treturn Nullable!(float).init(r * r * a / 2);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122447,
      "stdout": "",
      "stderr": "/tmp/tmph3j8mnq0.d(12): Error: function expected before `()`, not `Nullable(nanF, true).get()` of type `float`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph3j8mnq0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360) \n\t{\n\t\treturn Nullable!(float)();\n\t}\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfiq4z_mr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmpfiq4z_mr.__unittest_L16_C1() [0x44519e]\n??:? void tmpfiq4z_mr.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360) \n\t{\n\t\treturn Nullable!(float)();\n\t}\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfiq4z_mr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmpfiq4z_mr.__unittest_L16_C1() [0x44519e]\n??:? void tmpfiq4z_mr.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\treturn Nullable!(float)((a/360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122448,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9sp7n_ix.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmp9sp7n_ix.__unittest_L14_C1() [0x44519e]\n??:? void tmp9sp7n_ix.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4pzwnjnq.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmp4pzwnjnq.__unittest_L14_C1() [0x44519e]\n??:? void tmp4pzwnjnq.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif(a > 360)\n\t\treturn Nullable!(float).init;\n\treturn Nullable!(float).init(r * r * a / 2);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122447,
      "stdout": "",
      "stderr": "/tmp/tmph3j8mnq0.d(12): Error: function expected before `()`, not `Nullable(nanF, true).get()` of type `float`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph3j8mnq0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4pzwnjnq.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmp4pzwnjnq.__unittest_L14_C1() [0x44519e]\n??:? void tmp4pzwnjnq.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\treturn Nullable!(float)(a * r * r / 2);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122449,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmps8cqi7jj.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x45b741]\n??:? void tmps8cqi7jj.__unittest_L14_C1() [0x445192]\n??:? void tmps8cqi7jj.__modtest() [0x459250]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x46499f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad6e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45ffed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46007c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff79]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad45]\n??:? runModuleUnitTests [0x464775]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c814]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif(a > 360)\n\t\treturn Nullable!(float)();\n\telse\n\t\treturn Nullable!(float)((a/360.0)*PI*r*r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122449,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprc5qphis.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmprc5qphis.__unittest_L15_C1() [0x44519e]\n??:? void tmprc5qphis.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360) \n\t\treturn Nullable!(float).init;\n\treturn Nullable!(float).init(r * r * a / 2);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122448,
      "stdout": "",
      "stderr": "/tmp/tmpz624ao2z.d(12): Error: function expected before `()`, not `Nullable(nanF, true).get()` of type `float`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz624ao2z.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360) \n\t{\n\t\treturn Nullable!(float).init;\n\t}\n\treturn Nullable!(float).init(r * r * a / 2);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122448,
      "stdout": "",
      "stderr": "/tmp/tmpe_6_hlms.d(14): Error: function expected before `()`, not `Nullable(nanF, true).get()` of type `float`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpe_6_hlms.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float).init;\n\treturn (a / 360.0) * PI * r * r;\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122447,
      "stdout": "",
      "stderr": "/tmp/tmpwy22zhl9.d(12): Error: cannot implicitly convert expression `cast(real)(cast(double)a / 360.000) * 3.14159L * cast(real)r * cast(real)r` of type `real` to `Nullable!float`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwy22zhl9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif(a > 360)\n\t\treturn Nullable!(float)();\n\telse\n\t\treturn Nullable!(float)(r*r*a/360.0);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122450,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_z2blao7.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x45b749]\n??:? void tmp_z2blao7.__unittest_L15_C1() [0x445196]\n??:? void tmp_z2blao7.__modtest() [0x459254]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649a7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad76]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fff5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x460084]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff81]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad4d]\n??:? runModuleUnitTests [0x46477d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c81c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\treturn Nullable!(float)((a * PI * r * r) / 360);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122448,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3ysapcsq.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmp3ysapcsq.__unittest_L14_C1() [0x44519e]\n??:? void tmp3ysapcsq.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\telse\n\t\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1slr8i95.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmp1slr8i95.__unittest_L15_C1() [0x44519e]\n??:? void tmp1slr8i95.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360) \n\t{\n\t\treturn Nullable!(float)();\n\t}\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfiq4z_mr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmpfiq4z_mr.__unittest_L16_C1() [0x44519e]\n??:? void tmpfiq4z_mr.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t{\n\t\treturn null;\n\t}\n\treturn (a / 360.0) * PI * r * r;\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122448,
      "stdout": "",
      "stderr": "/tmp/tmpll6pfbd4.d(12): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!float`\n/tmp/tmpll6pfbd4.d(14): Error: cannot implicitly convert expression `cast(real)(cast(double)a / 360.000) * 3.14159L * cast(real)r * cast(real)r` of type `real` to `Nullable!float`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpll6pfbd4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\telse\n\t\treturn Nullable!(float)((a/360.0)*PI*r*r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122450,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpnb7mlwfz.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmpnb7mlwfz.__unittest_L15_C1() [0x44519e]\n??:? void tmpnb7mlwfz.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif(a > 360)\n\t\treturn null;\n\treturn (a / 360.0) * PI * r * r;\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122448,
      "stdout": "",
      "stderr": "/tmp/tmpkbeeyuhb.d(11): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!float`\n/tmp/tmpkbeeyuhb.d(12): Error: cannot implicitly convert expression `cast(real)(cast(double)a / 360.000) * 3.14159L * cast(real)r * cast(real)r` of type `real` to `Nullable!float`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkbeeyuhb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif(a > 360)\n\t\treturn Nullable!(float)();\n\telse\n\t\treturn Nullable!(float)((a/360.0f)*PI*r*r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122450,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4wb133_6.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmp4wb133_6.__unittest_L15_C1() [0x44519e]\n??:? void tmp4wb133_6.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif(a > 360)\n\t\treturn Nullable!(float).init;\n\treturn Nullable!(float).init(r*r*a/2);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122447,
      "stdout": "",
      "stderr": "/tmp/tmpnii_zxwu.d(12): Error: function expected before `()`, not `Nullable(nanF, true).get()` of type `float`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnii_zxwu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\treturn Nullable!(float)(a * r * r / 2);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122449,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmps8cqi7jj.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x45b741]\n??:? void tmps8cqi7jj.__unittest_L14_C1() [0x445192]\n??:? void tmps8cqi7jj.__modtest() [0x459250]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x46499f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad6e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45ffed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46007c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff79]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad45]\n??:? runModuleUnitTests [0x464775]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c814]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float).init;\n\treturn (a * r * r) / 2;\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122449,
      "stdout": "",
      "stderr": "/tmp/tmpa69_8y5y.d(12): Error: cannot implicitly convert expression `a * r * r / 2L` of type `long` to `Nullable!float`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa69_8y5y.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360) \n\t{\n\t\treturn Nullable!(float)();\n\t}\n\treturn Nullable!(float)((r * r * a) / 2);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122448,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_3rhhm3c.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x45b741]\n??:? void tmp_3rhhm3c.__unittest_L16_C1() [0x445192]\n??:? void tmp_3rhhm3c.__modtest() [0x459250]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x46499f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad6e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45ffed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46007c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff79]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad45]\n??:? runModuleUnitTests [0x464775]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c814]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif(a > 360)\n\t\treturn Nullable!(float)();\n\treturn Nullable!(float)((a/360.0f)*PI*r*r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122451,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmps6vpghea.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmps6vpghea.__unittest_L14_C1() [0x44519e]\n??:? void tmps6vpghea.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn null;\n\treturn (a / 360.0) * PI * r * r;\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517197,
      "stdout": "",
      "stderr": "/tmp/tmp9xmku7qf.d(11): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!float`\n/tmp/tmp9xmku7qf.d(12): Error: cannot implicitly convert expression `cast(real)(cast(double)a / 360.000) * 3.14159L * cast(real)r * cast(real)r` of type `real` to `Nullable!float`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9xmku7qf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4pzwnjnq.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmp4pzwnjnq.__unittest_L14_C1() [0x44519e]\n??:? void tmp4pzwnjnq.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4pzwnjnq.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmp4pzwnjnq.__unittest_L14_C1() [0x44519e]\n??:? void tmp4pzwnjnq.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif(a > 360)\n\t\treturn Nullable!(float).init;\n\telse\n\t\treturn Nullable!(float).init(0.5 * r * r * a * PI / 180);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122449,
      "stdout": "",
      "stderr": "/tmp/tmpkit1hfmq.d(13): Error: function expected before `()`, not `Nullable(nanF, true).get()` of type `float`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkit1hfmq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4pzwnjnq.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmp4pzwnjnq.__unittest_L14_C1() [0x44519e]\n??:? void tmp4pzwnjnq.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360) \n\t{\n\t\treturn Nullable!(float).init;\n\t}\n\treturn Nullable!(float).init(0.5f * r * r * a * PI / 180);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122447,
      "stdout": "",
      "stderr": "/tmp/tmpjobz0r9b.d(14): Error: function expected before `()`, not `Nullable(nanF, true).get()` of type `float`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjobz0r9b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\telse\n\t\treturn Nullable!(float)((a * PI * r * r) / 360);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbbiz1c2w.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmpbbiz1c2w.__unittest_L15_C1() [0x44519e]\n??:? void tmpbbiz1c2w.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif(a > 360)\n\t\treturn Nullable!(float).init;\n\treturn Nullable!(float).init(r*r*a/2);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122447,
      "stdout": "",
      "stderr": "/tmp/tmpnii_zxwu.d(12): Error: function expected before `()`, not `Nullable(nanF, true).get()` of type `float`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnii_zxwu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\telse\n\t\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1slr8i95.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmp1slr8i95.__unittest_L15_C1() [0x44519e]\n??:? void tmp1slr8i95.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\telse\n\t\treturn Nullable!(float)(r * r * a / 2);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122448,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxc2lisv2.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x45b741]\n??:? void tmpxc2lisv2.__unittest_L15_C1() [0x445192]\n??:? void tmpxc2lisv2.__modtest() [0x459250]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x46499f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad6e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45ffed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46007c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff79]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad45]\n??:? runModuleUnitTests [0x464775]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c814]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\telse\n\t\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1slr8i95.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmp1slr8i95.__unittest_L15_C1() [0x44519e]\n??:? void tmp1slr8i95.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\telse\n\t\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1slr8i95.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmp1slr8i95.__unittest_L15_C1() [0x44519e]\n??:? void tmp1slr8i95.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360) return Nullable!(float)();\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122448,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpgjqdbt4z.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmpgjqdbt4z.__unittest_L13_C1() [0x44519e]\n??:? void tmpgjqdbt4z.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360) \n\t{\n\t\treturn Nullable!(float)();\n\t}\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfiq4z_mr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmpfiq4z_mr.__unittest_L16_C1() [0x44519e]\n??:? void tmpfiq4z_mr.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360) \n\t{\n\t\treturn Nullable!(float)();\n\t}\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfiq4z_mr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmpfiq4z_mr.__unittest_L16_C1() [0x44519e]\n??:? void tmpfiq4z_mr.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\treturn Nullable!(float)(r * r * a / 2);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122451,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpiwr4hpvu.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x45b741]\n??:? void tmpiwr4hpvu.__unittest_L14_C1() [0x445192]\n??:? void tmpiwr4hpvu.__modtest() [0x459250]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x46499f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad6e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45ffed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46007c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff79]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad45]\n??:? runModuleUnitTests [0x464775]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c814]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\treturn Nullable!(float)((a * PI * r * r) / 360);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122448,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3ysapcsq.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmp3ysapcsq.__unittest_L14_C1() [0x44519e]\n??:? void tmp3ysapcsq.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\telse\n\t\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1slr8i95.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmp1slr8i95.__unittest_L15_C1() [0x44519e]\n??:? void tmp1slr8i95.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float).init;\n\telse\n\t\treturn Nullable!(float).init(r * r * a / 2);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122449,
      "stdout": "",
      "stderr": "/tmp/tmp7h12mb4w.d(13): Error: function expected before `()`, not `Nullable(nanF, true).get()` of type `float`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7h12mb4w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360) \n\t{\n\t\treturn Nullable!(float)();\n\t}\n\treturn Nullable!(float)((a * r * r) / 2);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122451,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpodtd5gbd.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x45b741]\n??:? void tmpodtd5gbd.__unittest_L16_C1() [0x445192]\n??:? void tmpodtd5gbd.__modtest() [0x459250]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x46499f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad6e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45ffed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46007c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff79]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad45]\n??:? runModuleUnitTests [0x464775]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c814]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\treturn Nullable!(float)((a/360.0)*PI*r*r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122451,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_qmf1dro.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmp_qmf1dro.__unittest_L14_C1() [0x44519e]\n??:? void tmp_qmf1dro.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\treturn Nullable!(float)(r * r * a / 2);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122451,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpiwr4hpvu.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x45b741]\n??:? void tmpiwr4hpvu.__unittest_L14_C1() [0x445192]\n??:? void tmpiwr4hpvu.__modtest() [0x459250]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x46499f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad6e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45ffed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46007c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff79]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad45]\n??:? runModuleUnitTests [0x464775]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c814]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn null;\n\treturn (a / 360.0) * PI * r * r;\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517197,
      "stdout": "",
      "stderr": "/tmp/tmp9xmku7qf.d(11): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!float`\n/tmp/tmp9xmku7qf.d(12): Error: cannot implicitly convert expression `cast(real)(cast(double)a / 360.000) * 3.14159L * cast(real)r * cast(real)r` of type `real` to `Nullable!float`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9xmku7qf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360) \n\t{\n\t\treturn Nullable!(float)();\n\t}\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfiq4z_mr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmpfiq4z_mr.__unittest_L16_C1() [0x44519e]\n??:? void tmpfiq4z_mr.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4pzwnjnq.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmp4pzwnjnq.__unittest_L14_C1() [0x44519e]\n??:? void tmp4pzwnjnq.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float).init;\n\treturn Nullable!(float).init(r * r * a * PI / 360);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122450,
      "stdout": "",
      "stderr": "/tmp/tmpzn9jcf7y.d(12): Error: function expected before `()`, not `Nullable(nanF, true).get()` of type `float`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzn9jcf7y.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif(a > 360)\n\t\treturn Nullable!(float)();\n\telse\n\t\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122451,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6z2ybsiz.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmp6z2ybsiz.__unittest_L15_C1() [0x44519e]\n??:? void tmp6z2ybsiz.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360) \n\t{\n\t\treturn Nullable!(float).init;\n\t}\n\treturn (a / 360.0) * PI * r * r;\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517197,
      "stdout": "",
      "stderr": "/tmp/tmpe1xm2h6j.d(14): Error: cannot implicitly convert expression `cast(real)(cast(double)a / 360.000) * 3.14159L * cast(real)r * cast(real)r` of type `real` to `Nullable!float`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpe1xm2h6j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t{\n\t\treturn Nullable!(float)();\n\t}\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122448,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplzx3pff6.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmplzx3pff6.__unittest_L16_C1() [0x44519e]\n??:? void tmplzx3pff6.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360) \n\t{\n\t\treturn Nullable!(float).init;\n\t}\n\treturn Nullable!(float).init(r * r * a / 2.0f);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122450,
      "stdout": "",
      "stderr": "/tmp/tmpcgc1ysz6.d(14): Error: function expected before `()`, not `Nullable(nanF, true).get()` of type `float`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcgc1ysz6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360) \n\t{\n\t\treturn Nullable!(float)();\n\t}\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfiq4z_mr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmpfiq4z_mr.__unittest_L16_C1() [0x44519e]\n??:? void tmpfiq4z_mr.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360) \n\t{\n\t\treturn Nullable!(float).init;\n\t}\n\treturn Nullable!(float).init(0.5f * r * r * a * PI / 180);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122447,
      "stdout": "",
      "stderr": "/tmp/tmpjobz0r9b.d(14): Error: function expected before `()`, not `Nullable(nanF, true).get()` of type `float`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjobz0r9b.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360) \n\t{\n\t\treturn Nullable!(float)();\n\t}\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfiq4z_mr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmpfiq4z_mr.__unittest_L16_C1() [0x44519e]\n??:? void tmpfiq4z_mr.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float).init;\n\treturn a * PI * r * r / 360;\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122450,
      "stdout": "",
      "stderr": "/tmp/tmplmwjhnmb.d(12): Error: cannot implicitly convert expression `cast(real)a * 3.14159L * cast(real)r * cast(real)r / 360.000L` of type `real` to `Nullable!float`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplmwjhnmb.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\telse\n\t\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1slr8i95.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmp1slr8i95.__unittest_L15_C1() [0x44519e]\n??:? void tmp1slr8i95.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float).init;\n\treturn Nullable!(float).init(r * r * a / 2.0f);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122450,
      "stdout": "",
      "stderr": "/tmp/tmp6s4r1qz3.d(12): Error: function expected before `()`, not `Nullable(nanF, true).get()` of type `float`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6s4r1qz3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360) \n\t{\n\t\treturn Nullable!(float)();\n\t}\n\treturn Nullable!(float)((a * PI * r * r) / 360);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122451,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbtcsdpcz.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmpbtcsdpcz.__unittest_L16_C1() [0x44519e]\n??:? void tmpbtcsdpcz.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\treturn Nullable!(float)(r * r * a / 2);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122451,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpiwr4hpvu.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x45b741]\n??:? void tmpiwr4hpvu.__unittest_L14_C1() [0x445192]\n??:? void tmpiwr4hpvu.__modtest() [0x459250]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x46499f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad6e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45ffed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46007c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff79]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad45]\n??:? runModuleUnitTests [0x464775]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c814]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360) \n\t{\n\t\treturn Nullable!(float)();\n\t}\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfiq4z_mr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmpfiq4z_mr.__unittest_L16_C1() [0x44519e]\n??:? void tmpfiq4z_mr.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4pzwnjnq.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmp4pzwnjnq.__unittest_L14_C1() [0x44519e]\n??:? void tmp4pzwnjnq.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif(a > 360)\n\t\treturn Nullable!(float).init;\n\treturn Nullable!(float).init(a*r*r/2);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122450,
      "stdout": "",
      "stderr": "/tmp/tmpt_639sgg.d(12): Error: function expected before `()`, not `Nullable(nanF, true).get()` of type `float`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt_639sgg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4pzwnjnq.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmp4pzwnjnq.__unittest_L14_C1() [0x44519e]\n??:? void tmp4pzwnjnq.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float).init;\n\treturn Nullable!(float).init(r * r * a / 2);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517197,
      "stdout": "",
      "stderr": "/tmp/tmpl6k536wm.d(12): Error: function expected before `()`, not `Nullable(nanF, true).get()` of type `float`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl6k536wm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360) \n\t{\n\t\treturn Nullable!(float)();\n\t}\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfiq4z_mr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmpfiq4z_mr.__unittest_L16_C1() [0x44519e]\n??:? void tmpfiq4z_mr.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4pzwnjnq.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmp4pzwnjnq.__unittest_L14_C1() [0x44519e]\n??:? void tmp4pzwnjnq.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif(a > 360)\n\t\treturn Nullable!(float)();\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122451,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpo52zln09.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmpo52zln09.__unittest_L14_C1() [0x44519e]\n??:? void tmpo52zln09.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360) \n\t{\n\t\treturn Nullable!(float)();\n\t}\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfiq4z_mr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmpfiq4z_mr.__unittest_L16_C1() [0x44519e]\n??:? void tmpfiq4z_mr.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4pzwnjnq.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmp4pzwnjnq.__unittest_L14_C1() [0x44519e]\n??:? void tmp4pzwnjnq.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\telse\n\t\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1slr8i95.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmp1slr8i95.__unittest_L15_C1() [0x44519e]\n??:? void tmp1slr8i95.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\telse\n\t\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1slr8i95.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmp1slr8i95.__unittest_L15_C1() [0x44519e]\n??:? void tmp1slr8i95.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\telse\n\t\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1slr8i95.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmp1slr8i95.__unittest_L15_C1() [0x44519e]\n??:? void tmp1slr8i95.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4pzwnjnq.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmp4pzwnjnq.__unittest_L14_C1() [0x44519e]\n??:? void tmp4pzwnjnq.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360) \n\t{\n\t\treturn Nullable!(float).init;\n\t}\n\treturn (PI * r * r * a) / 360;\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122450,
      "stdout": "",
      "stderr": "/tmp/tmpdir5h_50.d(14): Error: cannot implicitly convert expression `3.14159L * cast(real)r * cast(real)r * cast(real)a / 360.000L` of type `real` to `Nullable!float`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdir5h_50.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\treturn Nullable!(float)((a / 360.0f) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122448,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpo8sat8x_.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmpo8sat8x_.__unittest_L14_C1() [0x44519e]\n??:? void tmpo8sat8x_.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\treturn Nullable!(float)(r * r * a / 2);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122451,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpiwr4hpvu.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x45b741]\n??:? void tmpiwr4hpvu.__unittest_L14_C1() [0x445192]\n??:? void tmpiwr4hpvu.__modtest() [0x459250]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x46499f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad6e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45ffed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46007c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff79]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad45]\n??:? runModuleUnitTests [0x464775]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c814]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\telse\n\t\treturn Nullable!(float)(a * r * r / 2);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122451,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz_6_efx9.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x45b741]\n??:? void tmpz_6_efx9.__unittest_L15_C1() [0x445192]\n??:? void tmpz_6_efx9.__modtest() [0x459250]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x46499f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad6e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45ffed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46007c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff79]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad45]\n??:? runModuleUnitTests [0x464775]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c814]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif(a > 360)\n\t\treturn Nullable!(float)();\n\treturn Nullable!(float)((a / 360.0f) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122451,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmptyavbtq5.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmptyavbtq5.__unittest_L14_C1() [0x44519e]\n??:? void tmptyavbtq5.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4pzwnjnq.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmp4pzwnjnq.__unittest_L14_C1() [0x44519e]\n??:? void tmp4pzwnjnq.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360) \n\t{\n\t\treturn Nullable!(float)();\n\t}\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfiq4z_mr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmpfiq4z_mr.__unittest_L16_C1() [0x44519e]\n??:? void tmpfiq4z_mr.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif(a > 360)\n\t\treturn Nullable!(float).init;\n\treturn Nullable!(float).init(pi * r * r * a / 360);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122450,
      "stdout": "",
      "stderr": "/tmp/tmp34yuec5h.d(12): Error: undefined identifier `pi`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp34yuec5h.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn null;\n\treturn (a / 360.0) * PI * r * r;\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517197,
      "stdout": "",
      "stderr": "/tmp/tmp9xmku7qf.d(11): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!float`\n/tmp/tmp9xmku7qf.d(12): Error: cannot implicitly convert expression `cast(real)(cast(double)a / 360.000) * 3.14159L * cast(real)r * cast(real)r` of type `real` to `Nullable!float`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9xmku7qf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float).init;\n\treturn Nullable!(float).init(r * r * a * PI / 360);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122450,
      "stdout": "",
      "stderr": "/tmp/tmpzn9jcf7y.d(12): Error: function expected before `()`, not `Nullable(nanF, true).get()` of type `float`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzn9jcf7y.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360) \n\t{\n\t\treturn Nullable!(float)();\n\t}\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfiq4z_mr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmpfiq4z_mr.__unittest_L16_C1() [0x44519e]\n??:? void tmpfiq4z_mr.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif(a > 360)\n\t\treturn Nullable!(float)();\n\telse\n\t\treturn Nullable!(float)((a/360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122452,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpv6ej3v12.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmpv6ej3v12.__unittest_L15_C1() [0x44519e]\n??:? void tmpv6ej3v12.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\treturn Nullable!(float)(r * r * a / 2);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122451,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpiwr4hpvu.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x45b741]\n??:? void tmpiwr4hpvu.__unittest_L14_C1() [0x445192]\n??:? void tmpiwr4hpvu.__modtest() [0x459250]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x46499f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad6e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45ffed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46007c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff79]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad45]\n??:? runModuleUnitTests [0x464775]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c814]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4pzwnjnq.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmp4pzwnjnq.__unittest_L14_C1() [0x44519e]\n??:? void tmp4pzwnjnq.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\treturn Nullable!(float)(r * r * a / 2);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122451,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpiwr4hpvu.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x45b741]\n??:? void tmpiwr4hpvu.__unittest_L14_C1() [0x445192]\n??:? void tmpiwr4hpvu.__modtest() [0x459250]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x46499f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad6e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45ffed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46007c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff79]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad45]\n??:? runModuleUnitTests [0x464775]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c814]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4pzwnjnq.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmp4pzwnjnq.__unittest_L14_C1() [0x44519e]\n??:? void tmp4pzwnjnq.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t{\n\t\treturn Nullable!(float)();\n\t}\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122448,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplzx3pff6.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmplzx3pff6.__unittest_L16_C1() [0x44519e]\n??:? void tmplzx3pff6.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif(a > 360)\n\t\treturn Nullable!(float)();\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122451,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpo52zln09.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmpo52zln09.__unittest_L14_C1() [0x44519e]\n??:? void tmpo52zln09.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360) \n\t{\n\t\treturn Nullable!(float).init;\n\t}\n\treturn Nullable!(float).init(0.5 * r * r * a * PI / 360);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122451,
      "stdout": "",
      "stderr": "/tmp/tmpija_ogs8.d(14): Error: function expected before `()`, not `Nullable(nanF, true).get()` of type `float`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpija_ogs8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif(a > 360)\n\t\treturn Nullable!(float).init;\n\t\n\treturn Nullable!(float).init(r * r * a / 2);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122451,
      "stdout": "",
      "stderr": "/tmp/tmp70fqt03n.d(13): Error: function expected before `()`, not `Nullable(nanF, true).get()` of type `float`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp70fqt03n.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\treturn Nullable!(float)(a * r * r / 2);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122449,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmps8cqi7jj.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x45b741]\n??:? void tmps8cqi7jj.__unittest_L14_C1() [0x445192]\n??:? void tmps8cqi7jj.__modtest() [0x459250]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x46499f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad6e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45ffed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46007c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff79]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad45]\n??:? runModuleUnitTests [0x464775]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c814]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\t\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122452,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpnxx7856k.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmpnxx7856k.__unittest_L15_C1() [0x44519e]\n??:? void tmpnxx7856k.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4pzwnjnq.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmp4pzwnjnq.__unittest_L14_C1() [0x44519e]\n??:? void tmp4pzwnjnq.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4pzwnjnq.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmp4pzwnjnq.__unittest_L14_C1() [0x44519e]\n??:? void tmp4pzwnjnq.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360) \n\t{\n\t\treturn Nullable!(float)();\n\t}\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfiq4z_mr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmpfiq4z_mr.__unittest_L16_C1() [0x44519e]\n??:? void tmpfiq4z_mr.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn null;\n\telse\n\t\treturn (a / 360.0) * PI * r * r;\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122447,
      "stdout": "",
      "stderr": "/tmp/tmpzswlzi6z.d(11): Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!float`\n/tmp/tmpzswlzi6z.d(13): Error: cannot implicitly convert expression `cast(real)(cast(double)a / 360.000) * 3.14159L * cast(real)r * cast(real)r` of type `real` to `Nullable!float`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzswlzi6z.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360) \n\t{\n\t\treturn Nullable!(float)();\n\t}\n\treturn Nullable!(float)((a / 360.0f) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122452,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpt4fi_sh2.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmpt4fi_sh2.__unittest_L16_C1() [0x44519e]\n??:? void tmpt4fi_sh2.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif(a > 360)\n\t\treturn Nullable!(float).init;\n\t\n\treturn Nullable!(float).init(r * r * a / 2);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122451,
      "stdout": "",
      "stderr": "/tmp/tmp70fqt03n.d(13): Error: function expected before `()`, not `Nullable(nanF, true).get()` of type `float`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp70fqt03n.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif(a > 360)\n\t\treturn Nullable!(float).init;\n\treturn Nullable!(float).init(r * r * a / 2);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122447,
      "stdout": "",
      "stderr": "/tmp/tmph3j8mnq0.d(12): Error: function expected before `()`, not `Nullable(nanF, true).get()` of type `float`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmph3j8mnq0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif(a > 360)\n\t\treturn Nullable!(float).init;\n\telse\n\t\treturn Nullable!(float).init(r * r * a * PI / 360);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122451,
      "stdout": "",
      "stderr": "/tmp/tmpien4pnuo.d(13): Error: function expected before `()`, not `Nullable(nanF, true).get()` of type `float`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpien4pnuo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360) \n\t{\n\t\treturn Nullable!(float)();\n\t}\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfiq4z_mr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmpfiq4z_mr.__unittest_L16_C1() [0x44519e]\n??:? void tmpfiq4z_mr.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\telse\n\t\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1slr8i95.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmp1slr8i95.__unittest_L15_C1() [0x44519e]\n??:? void tmp1slr8i95.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\treturn Nullable!(float)(r * r * a / 2);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122451,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpiwr4hpvu.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x45b741]\n??:? void tmpiwr4hpvu.__unittest_L14_C1() [0x445192]\n??:? void tmpiwr4hpvu.__modtest() [0x459250]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x46499f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad6e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45ffed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46007c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff79]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad45]\n??:? runModuleUnitTests [0x464775]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c814]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t{\n\t\treturn Nullable!(float)();\n\t}\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122448,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplzx3pff6.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmplzx3pff6.__unittest_L16_C1() [0x44519e]\n??:? void tmplzx3pff6.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360) \n\t{\n\t\treturn Nullable!(float)();\n\t}\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfiq4z_mr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmpfiq4z_mr.__unittest_L16_C1() [0x44519e]\n??:? void tmpfiq4z_mr.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float).init;\n\treturn Nullable!(float).init(r * r * a / 2);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517197,
      "stdout": "",
      "stderr": "/tmp/tmpl6k536wm.d(12): Error: function expected before `()`, not `Nullable(nanF, true).get()` of type `float`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl6k536wm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\treturn Nullable!(float)(r * r * a / 2);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122451,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpiwr4hpvu.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x45b741]\n??:? void tmpiwr4hpvu.__unittest_L14_C1() [0x445192]\n??:? void tmpiwr4hpvu.__modtest() [0x459250]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x46499f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad6e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45ffed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46007c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff79]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad45]\n??:? runModuleUnitTests [0x464775]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c814]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360) \n\t{\n\t\treturn Nullable!(float).init;\n\t}\n\treturn (a / 360.0) * PI * r * r;\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517197,
      "stdout": "",
      "stderr": "/tmp/tmpe1xm2h6j.d(14): Error: cannot implicitly convert expression `cast(real)(cast(double)a / 360.000) * 3.14159L * cast(real)r * cast(real)r` of type `real` to `Nullable!float`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpe1xm2h6j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif(a > 360)\n\t\treturn Nullable!(float)();\n\telse\n\t\treturn Nullable!(float)((a/360.0f)*PI*r*r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122450,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4wb133_6.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmp4wb133_6.__unittest_L15_C1() [0x44519e]\n??:? void tmp4wb133_6.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float).init;\n\treturn r * r * a / 2;\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122451,
      "stdout": "",
      "stderr": "/tmp/tmpr8leqeok.d(12): Error: cannot implicitly convert expression `r * r * a / 2L` of type `long` to `Nullable!float`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr8leqeok.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\telse\n\t\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1slr8i95.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmp1slr8i95.__unittest_L15_C1() [0x44519e]\n??:? void tmp1slr8i95.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360) return Nullable!(float)();\n\treturn Nullable!(float)((a * PI * r * r) / 360);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122452,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmparjshv2k.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmparjshv2k.__unittest_L13_C1() [0x44519e]\n??:? void tmparjshv2k.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360) \n\t{\n\t\treturn Nullable!(float)();\n\t}\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfiq4z_mr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmpfiq4z_mr.__unittest_L16_C1() [0x44519e]\n??:? void tmpfiq4z_mr.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float).init;\n\treturn Nullable!(float).init(PI * r * r * a / 360);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122451,
      "stdout": "",
      "stderr": "/tmp/tmp4acyznrp.d(12): Error: function expected before `()`, not `Nullable(nanF, true).get()` of type `float`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4acyznrp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4pzwnjnq.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmp4pzwnjnq.__unittest_L14_C1() [0x44519e]\n??:? void tmp4pzwnjnq.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\treturn Nullable!(float)(a * r * r / 2);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122449,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmps8cqi7jj.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x45b741]\n??:? void tmps8cqi7jj.__unittest_L14_C1() [0x445192]\n??:? void tmps8cqi7jj.__modtest() [0x459250]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x46499f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad6e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45ffed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46007c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff79]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad45]\n??:? runModuleUnitTests [0x464775]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c814]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360) \n\t{\n\t\treturn Nullable!(float)();\n\t}\n\treturn Nullable!(float)((a / 360.0) * PI * r * r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1665517199,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfiq4z_mr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmpfiq4z_mr.__unittest_L16_C1() [0x44519e]\n??:? void tmpfiq4z_mr.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\n*/\nNullable!(float) sector_area(long r, long a) \n{\n\tif (a > 360)\n\t\treturn Nullable!(float)();\n\treturn Nullable!(float)((a/360.0f)*PI*r*r);\n}\nunittest\n{\n    alias candidate = sector_area;\n\n{\n        auto result = candidate(4L, 45L);\n        assert(!result.isNull && result.get == 6.283185307179586);\n}\n\n{\n        auto result = candidate(9L, 45L);\n        assert(!result.isNull && result.get == 31.808625617596654);\n}\n\n{\n        auto result = candidate(9L, 361L);\n        assert(result.isNull);\n}\n\n}\nvoid main(){}",
      "timestamp": 1666122452,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpnptw4tpu.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x45b751]\n??:? void tmpnptw4tpu.__unittest_L14_C1() [0x44519e]\n??:? void tmpnptw4tpu.__modtest() [0x45925c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x4649af]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x45ad7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x45fffd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x46008c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x45ff89]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x45ad55]\n??:? runModuleUnitTests [0x464785]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x45c824]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
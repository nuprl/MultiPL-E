{
  "name": "mbpp_277_dict_filter",
  "language": "d",
  "prompt": "import std.math;\n/*\n\n\tWrite a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\n\t\n*/\nNullable!(long[string]) dict_filter(Nullable!(long[string]) dict, long n) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_277_dict_filter.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = dict_filter;\n\n{\n        auto result = candidate([\"Cierra Vega\": 175L, \"Alden Cantrell\": 180L, \"Kierra Gentry\": 165L, \"Pierre Cox\": 190L].nullable, 170L);\n        assert(!result.isNull && result.get == [\"Cierra Vega\": 175L, \"Alden Cantrell\": 180L, \"Pierre Cox\": 190L]);\n}\n\n{\n        auto result = candidate([\"Cierra Vega\": 175L, \"Alden Cantrell\": 180L, \"Kierra Gentry\": 165L, \"Pierre Cox\": 190L].nullable, 180L);\n        assert(!result.isNull && result.get == [\"Alden Cantrell\": 180L, \"Pierre Cox\": 190L]);\n}\n\n{\n        auto result = candidate([\"Cierra Vega\": 175L, \"Alden Cantrell\": 180L, \"Kierra Gentry\": 165L, \"Pierre Cox\": 190L].nullable, 190L);\n        assert(!result.isNull && result.get == [\"Pierre Cox\": 190L]);\n}\n\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tif (dict is null)\n\t\treturn null;\n\t\n\tauto result = new long[string];\n\tforeach (key, value; dict)\n\t{\n\t\tif (value >= n)\n\t\t\tresult[key] = value;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tif (dict is null)\n\t\treturn null;\n\t\n\tauto result = new long[string];\n\tforeach (key, value; dict)\n\t{\n\t\tif (value >= n)\n\t\t\tresult[key] = value;\n\t}\n\treturn result;\n}",
    "{\n\tif (dict is null) return null;\n\tNullable!(long[string]) new_dict = new Nullable!(long[string]);\n\tforeach (key, value; dict)\n\t{\n\t\tif (value >= n)\n\t\t{\n\t\t\tnew_dict[key] = value;\n\t\t}\n\t}\n\treturn new_dict;\n}",
    "{\n\tif (dict is null)\n\t{\n\t\treturn null;\n\t}\n\telse\n\t{\n\t\tNullable!(long[string]) new_dict = new Nullable!(long[string]);\n\t\tforeach(key, value; dict)\n\t\t{\n\t\t\tif (value >= n)\n\t\t\t{\n\t\t\t\tnew_dict[key] = value;\n\t\t\t}\n\t\t}\n\t\treturn new_dict;\n\t}\n}",
    "{\n\tif (dict is null) \n\t{\n\t\treturn null;\n\t}\n\t\n\tlong[string] new_dict;\n\tforeach(key, value; dict) \n\t{\n\t\tif (value >= n) \n\t\t{\n\t\t\tnew_dict[key] = value;\n\t\t}\n\t}\n\t\n\treturn new_dict;\n}",
    "{\n\tif (dict is null) \n\t{\n\t\treturn null;\n\t}\n\t\n\tauto result = new long[string];\n\tforeach (key, value; dict) \n\t{\n\t\tif (value >= n) \n\t\t{\n\t\t\tresult[key] = value;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tif (dict is null)\n\t{\n\t\treturn null;\n\t}\n\t\n\tNullable!(long[string]) result = new long[string];\n\tforeach(key, value; dict)\n\t{\n\t\tif (value >= n)\n\t\t{\n\t\t\tresult[key] = value;\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tif(dict is null)\n\t\treturn null;\n\t\n\tauto result = new long[string];\n\tforeach(key, value; dict)\n\t{\n\t\tif(value >= n)\n\t\t\tresult[key] = value;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tif (dict is null) \n\t{\n\t\treturn null;\n\t}\n\t\n\tNullable!(long[string]) new_dict = new long[string];\n\tforeach (key, value; dict) \n\t{\n\t\tif (value >= n) \n\t\t{\n\t\t\tnew_dict[key] = value;\n\t\t}\n\t}\n\treturn new_dict;\n}",
    "{\n\tif (dict is null) \n\t{\n\t\treturn null;\n\t}\n\t\n\tlong[string] result;\n\tforeach(key, value; dict) \n\t{\n\t\tif (value >= n) \n\t\t{\n\t\t\tresult[key] = value;\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tif (dict is null) \n\t{\n\t\treturn null;\n\t}\n\t\n\tauto new_dict = new long[string];\n\tforeach (key, value; dict) \n\t{\n\t\tif (value >= n) \n\t\t{\n\t\t\tnew_dict[key] = value;\n\t\t}\n\t}\n\t\n\treturn new_dict;\n}",
    "{\n\tif(dict is null)\n\t\treturn null;\n\t\n\tauto new_dict = dict.dup;\n\tforeach(key, value; new_dict)\n\t{\n\t\tif(value < n)\n\t\t\tnew_dict.remove(key);\n\t}\n\treturn new_dict;\n}",
    "{\n\tif (dict is null) \n\t{\n\t\treturn null;\n\t}\n\t\n\tauto new_dict = new long[string];\n\t\n\tforeach (key, value; dict) \n\t{\n\t\tif (value >= n) \n\t\t{\n\t\t\tnew_dict[key] = value;\n\t\t}\n\t}\n\t\n\treturn new_dict;\n}",
    "{\n\tif (dict is null)\n\t\treturn null;\n\t\n\tNullable!(long[string]) newDict = new Nullable!(long[string]);\n\t\n\tforeach (key, value; dict)\n\t{\n\t\tif (value >= n)\n\t\t\tnewDict[key] = value;\n\t}\n\t\n\treturn newDict;\n}",
    "{\n\tif (dict is null) \n\t{\n\t\treturn null;\n\t}\n\t\n\tauto result = new long[string];\n\tforeach (key, value; dict) \n\t{\n\t\tif (value >= n) \n\t\t{\n\t\t\tresult[key] = value;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tif(dict is null)\n\t\treturn null;\n\t\n\tauto result = new long[string];\n\tforeach(key, value; dict)\n\t{\n\t\tif(value >= n)\n\t\t\tresult[key] = value;\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[string]) result;\n\tif (dict is null) return null;\n\tforeach(key, value; dict)\n\t{\n\t\tif (value >= n)\n\t\t{\n\t\t\tresult[key] = value;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tif (dict is null) \n\t{\n\t\treturn null;\n\t}\n\t\n\tauto result = new long[string];\n\tforeach (key, value; dict) \n\t{\n\t\tif (value >= n) \n\t\t{\n\t\t\tresult[key] = value;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tif (dict is null)\n\t{\n\t\treturn null;\n\t}\n\t\n\tauto result = new long[string];\n\tforeach (key, value; dict)\n\t{\n\t\tif (value >= n)\n\t\t{\n\t\t\tresult[key] = value;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tif (dict is null)\n\t\treturn null;\n\t\n\tauto result = new long[string];\n\tforeach (key, value; dict)\n\t{\n\t\tif (value >= n)\n\t\t\tresult[key] = value;\n\t}\n\treturn result;\n}"
  ]
}
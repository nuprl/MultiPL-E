{
  "name": "mbpp_606_radian_degree",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to convert degrees to radians.\n\t\n*/\nfloat radian_degree(long degree) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_606_radian_degree.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = radian_degree;\n\n    assert(candidate(90L) == 1.5707963267948966);\n    assert(candidate(60L) == 1.0471975511965976);\n    assert(candidate(120L) == 2.0943951023931953);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\treturn (degree * PI) / 180;\n}",
    "{\n\treturn degree * PI / 180;\n}",
    "{\n\treturn degree * PI / 180;\n}",
    "{\n\treturn degree * PI / 180;\n}",
    "{\n\treturn degree * PI / 180;\n}",
    "{\n\treturn degree * PI / 180.0;\n}",
    "{\n\treturn degree * PI / 180;\n}",
    "{\n\treturn degree * PI / 180;\n}",
    "{\n\treturn degree * PI / 180;\n}",
    "{\n\treturn (degree * PI) / 180;\n}",
    "{\n\treturn degree * PI / 180;\n}",
    "{\n\treturn degree * PI / 180;\n}",
    "{\n\treturn degree * PI / 180;\n}",
    "{\n\treturn degree * PI / 180;\n}",
    "{\n\treturn degree * PI / 180;\n}",
    "{\n\treturn degree * PI / 180;\n}",
    "{\n\treturn degree * PI / 180;\n}",
    "{\n\treturn degree * PI / 180;\n}",
    "{\n\treturn degree * PI / 180;\n}",
    "{\n\treturn degree * PI / 180;\n}"
  ]
}
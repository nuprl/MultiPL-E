{
  "name": "mbpp_56_checks",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to check if a given number is one less than twice its reverse.\n\t\n*/\nbool checks(long n) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_56_checks.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = checks;\n\n    assert(candidate(70L) == false);\n    assert(candidate(23L) == false);\n    assert(candidate(73L) == true);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp != 0)\n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == rev * 2 - 1;\n}",
    "{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t > 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == r * 2 - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp != 0)\n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == rev * 2 - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong num = n;\n\twhile(num > 0) \n\t{\n\t\trev = rev * 10 + num % 10;\n\t\tnum /= 10;\n\t}\n\treturn n == 2 * rev - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == rev * 2 - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == rev + 1 || n == rev - 1;\n}",
    "{\n\tauto rev = n.to!string.reverse.to!long;\n\treturn n == 2*rev - 1;\n}",
    "{\n\tif (n < 0)\n\t\treturn false;\n\t\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\t\n\treturn n == 2 * rev - 1;\n}",
    "{\n\tauto s = to!string(n);\n\tauto r = s.dup.reverse;\n\treturn n == (2*to!long(r) - 1);\n}",
    "{\n\tauto rev = n.to!string.dup.reverse;\n\treturn n == 2 * rev.to!long - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp != 0)\n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == (rev * 2) - 1);\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp > 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == rev - 1) || (n == (rev - 1) / 10);\n}",
    "{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t > 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == r * 2 - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == rev * 2 - 1;\n}",
    "{\n\tlong reverse = 0;\n\tlong temp = n;\n\twhile(temp != 0)\n\t{\n\t\treverse = reverse*10 + temp%10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == (reverse*2 - 1));\n}",
    "{\n\tlong reverse = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\treverse = reverse * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == reverse * 2 - 1;\n}",
    "{\n\tlong reverse = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\treverse = reverse * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == reverse * 2 - 1);\n}",
    "{\n\tlong r = 0;\n\tlong m = n;\n\twhile (m > 0) \n\t{\n\t\tr = r * 10 + m % 10;\n\t\tm /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}",
    "{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t > 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn (n == r * 2 + 1);\n}",
    "{\n\tlong r = 0;\n\tlong m = n;\n\twhile(m != 0) \n\t{\n\t\tr = r * 10 + m % 10;\n\t\tm /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}",
    "{\n\tlong r = n.to!string.reverse.to!long;\n\treturn n == r * 2 - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == rev * 2 - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == rev * 2 - 1;\n}",
    "{\n\tlong r = 0;\n\tlong n1 = n;\n\twhile(n1 > 0) \n\t{\n\t\tr = r * 10 + n1 % 10;\n\t\tn1 /= 10;\n\t}\n\treturn n == r * 2 - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp > 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == rev * 2 - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == (2 * rev - 1));\n}",
    "{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t > 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == r * 2 - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == (rev * 2) - 1);\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == (rev * 2) - 1);\n}",
    "{\n\tlong r = 0;\n\tlong t = n;\n\twhile(t > 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == r * 2 - 1;\n}",
    "{\n\tlong rev = 0;\n\twhile(n > 0)\n\t{\n\t\trev = rev * 10 + n % 10;\n\t\tn /= 10;\n\t}\n\treturn (n == rev - 1);\n}",
    "{\n\treturn n == 2 * reverse(n) - 1;\n}",
    "{\n\tauto s = to!string(n);\n\tauto r = s.dup.reverse;\n\treturn n == 2*to!long(r) - 1;\n}",
    "{\n\treturn n == 2 * n.reverse - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp > 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == (rev * 2) - 1;\n}",
    "{\n\treturn n == 2 * n.reverse - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp != 0)\n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n + 1 == 2 * rev);\n}",
    "{\n\treturn n == (n / 10) * 2 + 1;\n}",
    "{\n\tlong rev = n.to!string.reverse.to!long;\n\treturn n == 2*rev - 1;\n}",
    "{\n\tlong rev = 0, temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == rev + 1;\n}",
    "{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t > 0) {\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp > 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == rev * 2 - 1;\n}",
    "{\n\tauto s = to!string(n);\n\tauto r = s.dup.reverse;\n\treturn n == 2 * to!long(r) - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) {\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == rev * 2 - 1;\n}",
    "{\n\tlong r = 0;\n\tlong n1 = n;\n\twhile (n1 > 0) \n\t{\n\t\tr = r * 10 + n1 % 10;\n\t\tn1 /= 10;\n\t}\n\treturn (n == r * 2 - 1);\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == rev * 2 - 1);\n}",
    "{\n\tlong x = n;\n\tlong y = 0;\n\twhile(x > 0) \n\t{\n\t\ty = y * 10 + x % 10;\n\t\tx /= 10;\n\t}\n\treturn n == 2 * y - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp > 0)\n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp = temp / 10;\n\t}\n\treturn n == 2 * rev - 1;\n}",
    "{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t != 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == r * 2 - 1;\n}",
    "{\n\tlong rev = 0, temp = n;\n\twhile(temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == rev + 1) || (n == 2 * rev - 1);\n}",
    "{\n\treturn n == 2 * n.reversed - 1;\n}",
    "{\n\tauto rev = n.to!string.reverse;\n\treturn n == 2*rev.to!long - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp != 0)\n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == (2 * rev - 1));\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == rev * 2 - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong num = n;\n\twhile (num > 0) \n\t{\n\t\trev = rev * 10 + num % 10;\n\t\tnum /= 10;\n\t}\n\treturn (n == (2 * rev - 1));\n}",
    "{\n\tlong r = n.to!string.reverse.to!long;\n\treturn n == 2*r - 1;\n}",
    "{\n\tlong n1 = n;\n\tlong n2 = 0;\n\twhile (n1 > 0) \n\t{\n\t\tn2 = n2 * 10 + n1 % 10;\n\t\tn1 /= 10;\n\t}\n\treturn n == n2 - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp != 0)\n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == 2 * rev - 1);\n}",
    "{\n\tlong r = 0;\n\tlong m = n;\n\twhile (m > 0) {\n\t\tr = r * 10 + m % 10;\n\t\tm /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}",
    "{\n\tauto r = n.to!string.reversed;\n\treturn n == 2 * r.to!long - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == (rev * 2) - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp > 0) {\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == rev * 2 - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong m = n;\n\twhile(m > 0) {\n\t\trev = rev * 10 + m % 10;\n\t\tm /= 10;\n\t}\n\treturn n == rev * 2 - 1;\n}",
    "{\n\tauto rev = n.to!string.dup.reverse;\n\treturn n == 2*rev.to!long - 1;\n}",
    "{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t > 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == r * 2 - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == (2 * rev - 1));\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == 2 * rev - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong num = n;\n\twhile(num != 0) \n\t{\n\t\trev = rev * 10 + num % 10;\n\t\tnum /= 10;\n\t}\n\treturn n == rev * 2 - 1;\n}",
    "{\n\tlong r = n.to!string.reverse.to!long;\n\treturn n == 2*r-1;\n}",
    "{\n\treturn n == (n / 10) * 2 + 1;\n}",
    "{\n\tlong r = 0;\n\tlong temp = n;\n\twhile(temp != 0)\n\t{\n\t\tr = r * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == r * 2 - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong num = n;\n\twhile (num > 0) \n\t{\n\t\trev = rev * 10 + num % 10;\n\t\tnum /= 10;\n\t}\n\treturn (n == (rev * 2 - 1));\n}",
    "{\n\tauto rev = n.to!string.reverse;\n\treturn n == 2 * rev.to!long - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == (rev * 2 - 1));\n}",
    "{\n\tlong rev = 0;\n\tlong num = n;\n\twhile (num > 0) \n\t{\n\t\trev = rev * 10 + num % 10;\n\t\tnum /= 10;\n\t}\n\treturn (n == (rev * 2) - 1);\n}",
    "{\n\tlong r = 0;\n\tlong t = n;\n\twhile(t > 0) {\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}",
    "{\n\tlong reverse = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\treverse = reverse * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == reverse * 2 - 1;\n}",
    "{\n\tlong r = n.to!string.reverse.to!long;\n\treturn n == 2*r - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == rev - 1);\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == (rev * 2 - 1));\n}",
    "{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}",
    "{\n\tlong r = 0;\n\tlong nn = n;\n\twhile (nn > 0) \n\t{\n\t\tr = r * 10 + nn % 10;\n\t\tnn /= 10;\n\t}\n\treturn n == r * 2 - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == 2 * rev - 1;\n}",
    "{\n\tauto r = n.to!string.reverse.to!long;\n\treturn n == 2*r - 1;\n}",
    "{\n\tlong r = 0;\n\tlong n1 = n;\n\twhile(n1 > 0)\n\t{\n\t\tr = r * 10 + n1 % 10;\n\t\tn1 /= 10;\n\t}\n\treturn n == (r - 1) * 2;\n}",
    "{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t > 0) {\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == (r * 2) - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp > 0)\n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == (2 * rev - 1));\n}",
    "{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t > 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == r * 2 - 1;\n}",
    "{\n\tlong r = 0;\n\tlong nn = n;\n\twhile (nn > 0) {\n\t\tr = r * 10 + nn % 10;\n\t\tnn /= 10;\n\t}\n\treturn n == r * 2 - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == rev + 1;\n}",
    "{\n\tauto rev = n.to!string.reverse;\n\treturn n == 2 * rev.to!long - 1;\n}",
    "{\n\tlong reverse = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\treverse = reverse * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == reverse * 2 - 1);\n}",
    "{\n\tlong r = 0;\n\tlong t = n;\n\twhile(t != 0)\n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn (n == 2 * r - 1);\n}",
    "{\n\tlong rev = 0;\n\tlong num = n;\n\twhile(num > 0) \n\t{\n\t\trev = rev * 10 + num % 10;\n\t\tnum /= 10;\n\t}\n\treturn n == rev * 2 - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == (rev * 2) - 1;\n}",
    "{\n\treturn n == 2 * n.reversed - 1;\n}",
    "{\n\tauto n_str = to!string(n);\n\tauto rev_n_str = n_str.dup.reverse;\n\tauto rev_n = to!long(rev_n_str);\n\treturn n == 2*rev_n - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == (rev * 2 - 1));\n}",
    "{\n\tlong r = n.to!string.reverse.to!long;\n\treturn (n == 2*r - 1);\n}",
    "{\n\treturn n == 2 * n.reverse - 1;\n}",
    "{\n\tlong r = 0;\n\tlong t = n;\n\twhile(t > 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}",
    "{\n\treturn n == 2 * n.reverse - 1;\n}",
    "{\n\tlong r = 0;\n\tlong m = n;\n\twhile (m != 0) \n\t{\n\t\tr = r * 10 + m % 10;\n\t\tm /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == (2 * rev) - 1;\n}",
    "{\n\treturn n == 2 * n.reverse - 1;\n}",
    "{\n\tlong r = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\tr = r * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == r + r + 1);\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp > 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == rev * 2 - 1;\n}",
    "{\n\treturn n == 2 * n.reverse - 1;\n}",
    "{\n\tauto rev = to!string(n).dup.reverse;\n\treturn (n == (2 * to!long(rev) - 1));\n}",
    "{\n\tlong r = 0;\n\tlong nn = n;\n\twhile(n > 0) {\n\t\tr = r * 10 + n % 10;\n\t\tn /= 10;\n\t}\n\treturn nn == (r * 2) - 1;\n}",
    "{\n\treturn n == 2 * n.reversed - 1;\n}",
    "{\n\treturn n == 2 * n.reverse - 1;\n}",
    "{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t > 0) {\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == r * 2 - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == 2 * rev - 1;\n}",
    "{\n\tauto rev = n.to!string.reverse;\n\treturn n == 2 * rev.to!long - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong num = n;\n\twhile(num > 0) \n\t{\n\t\trev = rev * 10 + num % 10;\n\t\tnum /= 10;\n\t}\n\treturn n == rev * 2 - 1;\n}",
    "{\n\treturn n == 2 * n.reverse - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == (rev * 2 - 1));\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp > 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp = temp / 10;\n\t}\n\treturn (n + 1 == 2 * rev);\n}",
    "{\n\treturn n == 2 * n.reversed - 1;\n}",
    "{\n\tlong r = 0;\n\tlong m = n;\n\twhile (m > 0) \n\t{\n\t\tr = r * 10 + m % 10;\n\t\tm /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp > 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == (rev * 2 - 1));\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp != 0)\n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == (2 * rev - 1));\n}",
    "{\n\tlong r = 0;\n\tlong t = n;\n\twhile (t > 0) {\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == r * 2 - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp != 0)\n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == (rev * 2) - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp > 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == (2 * rev - 1));\n}",
    "{\n\tlong r = n.to!string.reverse.to!long;\n\treturn n == 2*r - 1;\n}",
    "{\n\tauto rev = n.to!string.dup.reverse;\n\treturn n == 2 * rev.to!long - 1;\n}",
    "{\n\tauto s = to!string(n);\n\tauto r = s.dup.reverse;\n\treturn n == 2*to!long(r) - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp > 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == 2 * rev - 1);\n}",
    "{\n\tlong r = 0;\n\tlong nn = n;\n\twhile (nn > 0) \n\t{\n\t\tr = r * 10 + nn % 10;\n\t\tnn /= 10;\n\t}\n\treturn (n == r * 2 - 1);\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp != 0)\n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == rev * 2 - 1;\n}",
    "{\n\tlong r = 0;\n\tlong n1 = n;\n\twhile (n1 > 0) \n\t{\n\t\tr = r * 10 + n1 % 10;\n\t\tn1 /= 10;\n\t}\n\treturn n == r * 2 - 1;\n}",
    "{\n\tlong r = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\tr = r * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == 2 * r - 1);\n}",
    "{\n\tlong rev = 0;\n\tlong num = n;\n\twhile (num > 0) \n\t{\n\t\trev = rev * 10 + num % 10;\n\t\tnum /= 10;\n\t}\n\treturn n == rev * 2 - 1;\n}",
    "{\n\tlong r = 0;\n\tlong nn = n;\n\twhile (nn != 0) {\n\t\tr = r * 10 + nn % 10;\n\t\tnn /= 10;\n\t}\n\treturn n == r * 2 - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp != 0)\n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == rev * 2 - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp > 0)\n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == rev * 2 - 1;\n}",
    "{\n\tlong r = 0, t = n;\n\twhile (t != 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == r * 2 - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == rev * 2 - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == 2 * rev - 1;\n}",
    "{\n\tauto r = n.to!string.reverse;\n\treturn n == (2 * r.to!long - 1);\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp > 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == rev * 2 - 1;\n}",
    "{\n\tlong r = 0;\n\tlong x = n;\n\twhile (x != 0) \n\t{\n\t\tr = r * 10 + x % 10;\n\t\tx /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}",
    "{\n\tauto rev = n.to!string.reverse;\n\treturn n == 2 * rev.to!long - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp > 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == rev * 2 - 1);\n}",
    "{\n\tlong reverse = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\treverse = reverse * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == reverse - 1) || (n == reverse + 1);\n}",
    "{\n\tlong r = 0;\n\tlong t = n;\n\twhile(t > 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == r * 2 - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == rev * 2 - 1);\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) {\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == rev * 2 - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n + 1 == 2 * rev);\n}",
    "{\n\tauto rev = n.to!string.reverse;\n\treturn n == 2 * rev.to!long - 1;\n}",
    "{\n\tlong reverse = 0;\n\tlong temp = n;\n\twhile(temp > 0)\n\t{\n\t\treverse = reverse * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == (reverse * 2) - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == 2 * rev - 1);\n}",
    "{\n\tlong r = n.to!string.reverse.to!long;\n\treturn n == 2*r - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp != 0)\n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == 2 * rev - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == (rev * 2 - 1));\n}",
    "{\n\tlong rev = 0;\n\tlong num = n;\n\twhile (num > 0) {\n\t\trev = rev * 10 + num % 10;\n\t\tnum /= 10;\n\t}\n\treturn n == 2 * rev - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp != 0)\n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == 2 * rev - 1);\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == 2 * rev - 1);\n}",
    "{\n\tlong rev = 0;\n\tlong num = n;\n\twhile (num > 0) \n\t{\n\t\trev = rev * 10 + num % 10;\n\t\tnum /= 10;\n\t}\n\treturn (n == (2 * rev - 1));\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == (rev * 2 - 1));\n}",
    "{\n\tauto rev = n.to!string.reverse.to!long;\n\treturn n == 2 * rev - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == rev + 1);\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == (rev * 2) - 1);\n}",
    "{\n\tauto m = n.to!string;\n\tauto r = m.dup.reverse;\n\treturn n == 2*r.to!long - 1;\n}",
    "{\n\tauto rev = n.to!string.reverse;\n\treturn n == (rev.to!long * 2) - 1;\n}",
    "{\n\treturn n == (n / 10) * 19 - 9;\n}",
    "{\n\tlong rev = 0;\n\tlong num = n;\n\twhile (num > 0) {\n\t\trev = rev * 10 + num % 10;\n\t\tnum /= 10;\n\t}\n\treturn n == 2 * rev - 1;\n}",
    "{\n\tlong r = 0;\n\tlong x = n;\n\twhile (x > 0) \n\t{\n\t\tr = r * 10 + x % 10;\n\t\tx /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}",
    "{\n\treturn n == 2 * n.reversed - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong num = n;\n\twhile(num > 0) \n\t{\n\t\trev = rev * 10 + num % 10;\n\t\tnum /= 10;\n\t}\n\treturn (n == (rev * 2) - 1);\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == rev + 1 || n == rev - 1);\n}",
    "{\n\tint rev = 0;\n\tint temp = n;\n\twhile(temp > 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == rev * 2 - 1);\n}",
    "{\n\tlong r = n.to!string.reverse.to!long;\n\treturn n == 2*r - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == 2 * rev - 1);\n}",
    "{\n\tlong r = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\tr = r * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == r + 1) || (n == r - 1);\n}",
    "{\n\tauto rev = n.to!string().reversed.to!long;\n\treturn n == rev * 2 - 1;\n}",
    "{\n\treturn n == 2 * n.reversed - 1;\n}",
    "{\n\tlong r = 0;\n\tlong x = n;\n\twhile (x != 0) {\n\t\tr = r * 10 + x % 10;\n\t\tx /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == rev * 2 - 1;\n}",
    "{\n\treturn n == (n / 10) * 19 - 9;\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp > 0)\n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == rev * 2 - 1;\n}",
    "{\n\tauto rev = n.to!string.dup.reverse;\n\treturn n == 2 * rev.to!long - 1;\n}",
    "{\n\tlong r = 0;\n\tlong t = n;\n\twhile(t > 0) \n\t{\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}",
    "{\n\tlong reverse = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\treverse = reverse * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == reverse * 2 - 1);\n}",
    "{\n\tlong r = 0;\n\tlong t = n;\n\twhile(t > 0) {\n\t\tr = r * 10 + t % 10;\n\t\tt /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}",
    "{\n\treturn n == (n / 10) * 2 - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong m = n;\n\twhile (m != 0) \n\t{\n\t\trev = rev * 10 + m % 10;\n\t\tm /= 10;\n\t}\n\treturn n == 2 * rev - 1;\n}",
    "{\n\tlong reverse = 0;\n\tlong x = n;\n\twhile (x != 0) {\n\t\treverse = reverse * 10 + x % 10;\n\t\tx /= 10;\n\t}\n\treturn n == 2 * reverse - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp > 0) {\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == 2 * rev - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) {\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn n == rev * 2 - 1;\n}",
    "{\n\tauto s = to!string(n);\n\tauto r = s.dup.reverse;\n\treturn n == 2*to!long(r) - 1;\n}",
    "{\n\tauto s = to!string(n);\n\tauto r = s.dup.reverse;\n\treturn n == 2 * to!long(r) - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == (rev * 2) - 1);\n}",
    "{\n\tauto s = to!string(n);\n\tauto r = s.dup.reverse;\n\treturn n == 2*to!long(r) - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong num = n;\n\twhile (num != 0) \n\t{\n\t\trev = rev * 10 + num % 10;\n\t\tnum /= 10;\n\t}\n\treturn (n == 2 * rev - 1);\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile (temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == (2 * rev - 1));\n}",
    "{\n\tlong r = 0;\n\tlong m = n;\n\twhile(m > 0)\n\t{\n\t\tr = r * 10 + m % 10;\n\t\tm /= 10;\n\t}\n\treturn n == 2 * r - 1;\n}",
    "{\n\tlong rev = 0;\n\tlong temp = n;\n\twhile(temp != 0) \n\t{\n\t\trev = rev * 10 + temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn (n == 2 * rev - 1);\n}"
  ]
}
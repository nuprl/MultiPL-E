{
  "name": "mbpp_397_median_numbers",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_397_median_numbers.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\tif(a > b)\n\t{\n\t\tif(b > c)\n\t\t\tmedian = b;\n\t\telse if(a > c)\n\t\t\tmedian = c;\n\t\telse\n\t\t\tmedian = a;\n\t}\n\telse\n\t{\n\t\tif(a > c)\n\t\t\tmedian = a;\n\t\telse if(b > c)\n\t\t\tmedian = c;\n\t\telse\n\t\t\tmedian = b;\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat result;\n\t\n\tif(a > b)\n\t{\n\t\tif(b > c)\n\t\t{\n\t\t\tresult = b;\n\t\t}\n\t\telse if(a > c)\n\t\t{\n\t\t\tresult = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif(a > c)\n\t\t{\n\t\t\tresult = a;\n\t\t}\n\t\telse if(b > c)\n\t\t{\n\t\t\tresult = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult = b;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse if (b > c)\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t}\n\telse\n\t{\n\t\tmedian = b;\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif (a > b)\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tif (b > c)\n\t\t\t{\n\t\t\t\tmedian = b;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmedian = c;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tif (a > c)\n\t\t\t{\n\t\t\t\tmedian = a;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmedian = c;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif (a > b) \n\t{\n\t\tif (b > c) \n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a > c) \n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse if (b > c) \n\t{\n\t\tif (a > c) \n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t}\n\telse \n\t{\n\t\tmedian = b;\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tlong[] arr = [a, b, c];\n\tsort(arr);\n\treturn arr[1];\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpp3mpax2y.d(11): Error: undefined identifier `sort`, did you mean function `sqrt`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp3mpax2y.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median = 0;\n\t\n\tif(a > b)\n\t{\n\t\tif(b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if(a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif(a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if(b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median = 0;\n\t\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median = 0;\n\tif (a > b) \n\t{\n\t\tif (b > c) \n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a > c) \n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse \n\t{\n\t\tif (a > c) \n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c) \n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\tif (a > b) \n\t{\n\t\tif (b > c) \n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a > c) \n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse \n\t{\n\t\tif (a > c) \n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c) \n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif(a > b)\n\t{\n\t\tif(b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if(a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif(a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if(b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif (a > b)\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tif (b > c)\n\t\t\t{\n\t\t\t\tmedian = b;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmedian = c;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tif (a > c)\n\t\t\t{\n\t\t\t\tmedian = a;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmedian = c;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t\tmedian = b;\n\t\telse if (a > c)\n\t\t\tmedian = c;\n\t\telse\n\t\t\tmedian = a;\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t\tmedian = a;\n\t\telse if (b > c)\n\t\t\tmedian = c;\n\t\telse\n\t\t\tmedian = b;\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat result = 0;\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tresult = b;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (a > c)\n\t\t\t{\n\t\t\t\tresult = c;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult = a;\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tresult = a;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (b > c)\n\t\t\t{\n\t\t\t\tresult = c;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult = b;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat result;\n\tif (a > b) \n\t{\n\t\tif (b > c) \n\t\t{\n\t\t\tresult = b;\n\t\t}\n\t\telse if (a > c) \n\t\t{\n\t\t\tresult = c;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult = a;\n\t\t}\n\t}\n\telse \n\t{\n\t\tif (a > c) \n\t\t{\n\t\t\tresult = a;\n\t\t}\n\t\telse if (b > c) \n\t\t{\n\t\t\tresult = c;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult = b;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\tif(a > b)\n\t{\n\t\tif(b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if(a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif(a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if(b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t\tmedian = b;\n\t\telse if (a > c)\n\t\t\tmedian = c;\n\t\telse\n\t\t\tmedian = a;\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t\tmedian = a;\n\t\telse if (b > c)\n\t\t\tmedian = c;\n\t\telse\n\t\t\tmedian = b;\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median = 0;\n\t\n\tif(a > b)\n\t{\n\t\tif(b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if(a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif(a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if(b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif(a > b)\n\t{\n\t\tif(b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if(a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif(a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if(b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tlong[] arr = [a, b, c];\n\tarr.sort();\n\treturn arr[1];\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123916,
      "stdout": "",
      "stderr": "/tmp/tmp79a284bv.d(11): Error: no property `sort` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp79a284bv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif (a > b) \n\t{\n\t\tif (a > c) \n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t}\n\telse \n\t{\n\t\tif (b > c) \n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpt0bn62b2.d(40): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmpt0bn62b2.__unittest_L36_C1() [0x427a99]\n??:? void tmpt0bn62b2.__modtest() [0x427b20]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\tif (a > b) \n\t{\n\t\tif (b > c) \n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a > c) \n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse \n\t{\n\t\tif (a > c) \n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c) \n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\treturn max(min(a, b), min(max(a, b), c));\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123916,
      "stdout": "",
      "stderr": "/tmp/tmpwel2afix.d(10): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwel2afix.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tlong[] arr = [a, b, c];\n\tsort(arr);\n\treturn arr[1];\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpp3mpax2y.d(11): Error: undefined identifier `sort`, did you mean function `sqrt`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp3mpax2y.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif(a > b)\n\t{\n\t\tif(a < c)\n\t\t\tmedian = a;\n\t\telse if(b > c)\n\t\t\tmedian = b;\n\t\telse\n\t\t\tmedian = c;\n\t}\n\telse\n\t{\n\t\tif(a > c)\n\t\t\tmedian = a;\n\t\telse if(b < c)\n\t\t\tmedian = b;\n\t\telse\n\t\t\tmedian = c;\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif (a > b) \n\t{\n\t\tif (b > c) \n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a > c) \n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse \n\t{\n\t\tif (a > c) \n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c) \n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif(a > b)\n\t{\n\t\tif(a > c)\n\t\t{\n\t\t\tif(b > c)\n\t\t\t{\n\t\t\t\tmedian = b;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmedian = c;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif(b > c)\n\t\t{\n\t\t\tif(a > c)\n\t\t\t{\n\t\t\t\tmedian = a;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmedian = c;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat result;\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tresult = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tresult = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tresult = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tresult = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult = b;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median = 0;\n\t\n\tif (a > b)\n\t{\n\t\tif (a < c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t}\n\telse if (a < b)\n\t{\n\t\tif (b < c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t}\n\telse\n\t{\n\t\tmedian = a;\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\treturn max(min(a, b), min(max(a, b), c));\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123916,
      "stdout": "",
      "stderr": "/tmp/tmpwel2afix.d(10): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwel2afix.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (a > c)\n\t\t\t{\n\t\t\t\tmedian = c;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmedian = a;\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (b > c)\n\t\t\t{\n\t\t\t\tmedian = c;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmedian = b;\n\t\t\t}\n\t\t}\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat result;\n\t\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tresult = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tresult = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tresult = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tresult = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult = b;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif (a < b)\n\t{\n\t\tif (b < c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a < c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse if (a < c)\n\t{\n\t\tmedian = a;\n\t}\n\telse if (b < c)\n\t{\n\t\tmedian = c;\n\t}\n\telse\n\t{\n\t\tmedian = b;\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif (a > b) \n\t{\n\t\tif (a > c) \n\t\t{\n\t\t\tif (b > c) \n\t\t\t{\n\t\t\t\tmedian = b;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tmedian = c;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse \n\t{\n\t\tif (b > c) \n\t\t{\n\t\t\tif (a > c) \n\t\t\t{\n\t\t\t\tmedian = a;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tmedian = c;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\treturn max(min(a, b), min(max(a, b), c));\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123916,
      "stdout": "",
      "stderr": "/tmp/tmpwel2afix.d(10): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwel2afix.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif (a < b)\n\t{\n\t\tif (b < c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a < c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a < c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b < c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median = 0.0;\n\t\n\tif(a > b)\n\t{\n\t\tif(b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(a > c)\n\t\t\t{\n\t\t\t\tmedian = c;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmedian = a;\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tif(a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(b > c)\n\t\t\t{\n\t\t\t\tmedian = c;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmedian = b;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\tlong temp;\n\t\n\tif (a > b) \n\t{\n\t\ttemp = a;\n\t\ta = b;\n\t\tb = temp;\n\t}\n\t\n\tif (b > c) \n\t{\n\t\ttemp = b;\n\t\tb = c;\n\t\tc = temp;\n\t}\n\t\n\tif (a > b) \n\t{\n\t\ttemp = a;\n\t\ta = b;\n\t\tb = temp;\n\t}\n\t\n\tmedian = b;\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif (a > b)\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tif (b > c)\n\t\t\t{\n\t\t\t\tmedian = b;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmedian = c;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tif (a > c)\n\t\t\t{\n\t\t\t\tmedian = a;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmedian = c;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif(a > b)\n\t{\n\t\tif(b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if(a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif(a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if(b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median = 0;\n\tif (a > b) \n\t{\n\t\tif (b > c) \n\t\t{\n\t\t\tmedian = b;\n\t\t} \n\t\telse if (a > c) \n\t\t{\n\t\t\tmedian = c;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t} \n\telse \n\t{\n\t\tif (a > c) \n\t\t{\n\t\t\tmedian = a;\n\t\t} \n\t\telse if (b > c) \n\t\t{\n\t\t\tmedian = c;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t\tmedian = b;\n\t\telse if (a > c)\n\t\t\tmedian = c;\n\t\telse\n\t\t\tmedian = a;\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t\tmedian = a;\n\t\telse if (b > c)\n\t\t\tmedian = c;\n\t\telse\n\t\t\tmedian = b;\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\tif (a > b) \n\t{\n\t\tif (a > c) \n\t\t{\n\t\t\tif (b > c) \n\t\t\t{\n\t\t\t\tmedian = b;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tmedian = c;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse \n\t{\n\t\tif (b > c) \n\t\t{\n\t\t\tif (a > c) \n\t\t\t{\n\t\t\t\tmedian = a;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tmedian = c;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median = 0;\n\t\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\treturn max(min(a, b), min(max(a, b), c));\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123916,
      "stdout": "",
      "stderr": "/tmp/tmpwel2afix.d(10): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwel2afix.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat result;\n\t\n\tif(a > b)\n\t{\n\t\tif(b > c)\n\t\t{\n\t\t\tresult = b;\n\t\t}\n\t\telse if(a > c)\n\t\t{\n\t\t\tresult = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif(a > c)\n\t\t{\n\t\t\tresult = a;\n\t\t}\n\t\telse if(b > c)\n\t\t{\n\t\t\tresult = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult = b;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat result;\n\t\n\tif (a > b)\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tif (b > c)\n\t\t\t{\n\t\t\t\tresult = b;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult = c;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tif (a > c)\n\t\t\t{\n\t\t\t\tresult = a;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult = c;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult = b;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\treturn b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\treturn c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\treturn a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\treturn c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn b;\n\t\t}\n\t}\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat result;\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tresult = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tresult = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tresult = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tresult = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult = b;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif (a > b)\n\t{\n\t\tif (a < c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t}\n\telse if (a < c)\n\t{\n\t\tmedian = a;\n\t}\n\telse if (b > c)\n\t{\n\t\tmedian = c;\n\t}\n\telse\n\t{\n\t\tmedian = b;\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8vqlsc68.d(46): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmp8vqlsc68.__unittest_L42_C1() [0x427ab9]\n??:? void tmp8vqlsc68.__modtest() [0x427b40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat result;\n\tlong[3] arr;\n\tarr[0] = a;\n\tarr[1] = b;\n\tarr[2] = c;\n\tsort(arr);\n\tresult = arr[1];\n\treturn result;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "/tmp/tmpbv2wbzom.d(15): Error: undefined identifier `sort`, did you mean function `sqrt`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbv2wbzom.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif(a > b)\n\t{\n\t\tif(a > c)\n\t\t{\n\t\t\tif(b > c)\n\t\t\t{\n\t\t\t\tmedian = b;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmedian = c;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif(b > c)\n\t\t{\n\t\t\tif(a > c)\n\t\t\t{\n\t\t\t\tmedian = a;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmedian = c;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tlong[] arr = [a, b, c];\n\tsort(arr);\n\treturn arr[1];\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpp3mpax2y.d(11): Error: undefined identifier `sort`, did you mean function `sqrt`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp3mpax2y.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat[] arr = [a, b, c];\n\tstd.algorithm.sort(arr);\n\treturn arr[1];\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "/tmp/tmp5njbh9u1.d(11): Error: undefined identifier `algorithm` in package `std`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5njbh9u1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif(a > b)\n\t{\n\t\tif(b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if(a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif(a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if(b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\tif (a > b) \n\t{\n\t\tif (b > c) \n\t\t{\n\t\t\tmedian = b;\n\t\t} \n\t\telse if (a > c) \n\t\t{\n\t\t\tmedian = c;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t} \n\telse \n\t{\n\t\tif (a > c) \n\t\t{\n\t\t\tmedian = a;\n\t\t} \n\t\telse if (b > c) \n\t\t{\n\t\t\tmedian = c;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median = 0;\n\t\n\tif (a > b)\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tif (b > c)\n\t\t\t{\n\t\t\t\tmedian = b;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmedian = c;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tif (a > c)\n\t\t\t{\n\t\t\t\tmedian = a;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmedian = c;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tif (a > b)\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tif (b > c)\n\t\t\t{\n\t\t\t\treturn b;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn c;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tif (a > c)\n\t\t\t{\n\t\t\t\treturn a;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn c;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn b;\n\t\t}\n\t}\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t\tmedian = b;\n\t\telse if (a > c)\n\t\t\tmedian = c;\n\t\telse\n\t\t\tmedian = a;\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t\tmedian = a;\n\t\telse if (b > c)\n\t\t\tmedian = c;\n\t\telse\n\t\t\tmedian = b;\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\treturn max(min(a, b), min(max(a, b), c));\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123916,
      "stdout": "",
      "stderr": "/tmp/tmpwel2afix.d(10): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwel2afix.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t\tmedian = b;\n\t\telse\n\t\t\tmedian = c;\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t\tmedian = a;\n\t\telse\n\t\t\tmedian = c;\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpmfnxx2pw.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmpmfnxx2pw.__unittest_L29_C1() [0x427a99]\n??:? void tmpmfnxx2pw.__modtest() [0x427b20]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\treturn max(min(a, b), min(max(a, b), c));\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123916,
      "stdout": "",
      "stderr": "/tmp/tmpwel2afix.d(10): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwel2afix.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median = 0;\n\tfloat max = 0;\n\tfloat min = 0;\n\t\n\tif(a > b)\n\t{\n\t\tmax = a;\n\t\tmin = b;\n\t}\n\telse\n\t{\n\t\tmax = b;\n\t\tmin = a;\n\t}\n\t\n\tif(c > max)\n\t{\n\t\tmedian = max;\n\t}\n\telse if(c < min)\n\t{\n\t\tmedian = min;\n\t}\n\telse\n\t{\n\t\tmedian = c;\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif(a > b)\n\t{\n\t\tif(b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if(a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif(a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if(b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\tif (a < b)\n\t{\n\t\tif (b < c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a < c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse if (a < c)\n\t{\n\t\tmedian = a;\n\t}\n\telse if (b < c)\n\t{\n\t\tmedian = c;\n\t}\n\telse\n\t{\n\t\tmedian = b;\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median = 0.0;\n\t\n\tif (a > b) \n\t{\n\t\tif (a > c) \n\t\t{\n\t\t\tif (b > c) \n\t\t\t{\n\t\t\t\tmedian = b;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tmedian = c;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse \n\t{\n\t\tif (b > c) \n\t\t{\n\t\t\tif (a > c) \n\t\t\t{\n\t\t\t\tmedian = a;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tmedian = c;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\tif(a > b)\n\t{\n\t\tif(b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if(a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif(a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if(b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat result;\n\tif (a > b) \n\t{\n\t\tif (b > c) \n\t\t{\n\t\t\tresult = b;\n\t\t}\n\t\telse if (a > c) \n\t\t{\n\t\t\tresult = c;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult = a;\n\t\t}\n\t}\n\telse \n\t{\n\t\tif (a > c) \n\t\t{\n\t\t\tresult = a;\n\t\t}\n\t\telse if (b > c) \n\t\t{\n\t\t\tresult = c;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult = b;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\tif(a > b)\n\t{\n\t\tif(b > c)\n\t\t\tmedian = b;\n\t\telse if(a > c)\n\t\t\tmedian = c;\n\t\telse\n\t\t\tmedian = a;\n\t}\n\telse\n\t{\n\t\tif(a > c)\n\t\t\tmedian = a;\n\t\telse if(b > c)\n\t\t\tmedian = c;\n\t\telse\n\t\t\tmedian = b;\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif (a > b) \n\t{\n\t\tif (b > c) \n\t\t{\n\t\t\tmedian = b;\n\t\t} \n\t\telse if (a > c) \n\t\t{\n\t\t\tmedian = c;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t} \n\telse if (a > c) \n\t{\n\t\tmedian = a;\n\t} \n\telse if (b > c) \n\t{\n\t\tmedian = c;\n\t} \n\telse \n\t{\n\t\tmedian = b;\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median = 0;\n\tfloat[] arr = [a, b, c];\n\t\n\tarr.sort();\n\t\n\tif (arr.length % 2 == 0) \n\t{\n\t\tmedian = (arr[arr.length / 2 - 1] + arr[arr.length / 2]) / 2;\n\t}\n\telse \n\t{\n\t\tmedian = arr[arr.length / 2];\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "/tmp/tmpxmd8173s.d(13): Error: no property `sort` for type `float[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxmd8173s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\tif (a > b)\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tif (b > c)\n\t\t\t{\n\t\t\t\tmedian = b;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmedian = c;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tif (a > c)\n\t\t\t{\n\t\t\t\tmedian = a;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmedian = c;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tlong[] arr = [a, b, c];\n\tsort(arr);\n\treturn arr[1];\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpp3mpax2y.d(11): Error: undefined identifier `sort`, did you mean function `sqrt`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp3mpax2y.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif(a > b)\n\t{\n\t\tif(b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if(a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif(a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if(b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat result;\n\t\n\tif (a < b) \n\t{\n\t\tif (b < c) \n\t\t{\n\t\t\tresult = b;\n\t\t} \n\t\telse if (a < c) \n\t\t{\n\t\t\tresult = c;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult = a;\n\t\t}\n\t} \n\telse if (a < c) \n\t{\n\t\tresult = a;\n\t} \n\telse if (b < c) \n\t{\n\t\tresult = c;\n\t} \n\telse \n\t{\n\t\tresult = b;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif(a < b)\n\t{\n\t\tif(b < c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if(a < c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif(a < c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if(b < c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (a > c)\n\t\t\t{\n\t\t\t\tmedian = c;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmedian = a;\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (b > c)\n\t\t\t{\n\t\t\t\tmedian = c;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmedian = b;\n\t\t\t}\n\t\t}\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat result;\n\t\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tresult = b;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (a > c)\n\t\t\t{\n\t\t\t\tresult = c;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult = a;\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tresult = a;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (b > c)\n\t\t\t{\n\t\t\t\tresult = c;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult = b;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median = 0;\n\tfloat numbers[3] = [a, b, c];\n\tsort(numbers);\n\tmedian = numbers[1];\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "/tmp/tmp7mw8wkzj.d(11): Deprecation: instead of C-style syntax, use D-style syntax `float[3] numbers`\n/tmp/tmp7mw8wkzj.d(12): Error: undefined identifier `sort`, did you mean function `sqrt`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7mw8wkzj.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat result;\n\t\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tresult = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tresult = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tresult = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tresult = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult = b;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat result;\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tresult = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tresult = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tresult = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tresult = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult = b;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t\tmedian = b;\n\t\telse if (a > c)\n\t\t\tmedian = c;\n\t\telse\n\t\t\tmedian = a;\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t\tmedian = a;\n\t\telse if (b > c)\n\t\t\tmedian = c;\n\t\telse\n\t\t\tmedian = b;\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median = 0;\n\t\n\tif(a > b)\n\t{\n\t\tif(a > c)\n\t\t{\n\t\t\tif(b > c)\n\t\t\t{\n\t\t\t\tmedian = b;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmedian = c;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif(b > c)\n\t\t{\n\t\t\tif(a > c)\n\t\t\t{\n\t\t\t\tmedian = a;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmedian = c;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tlong[] arr = [a, b, c];\n\tsort(arr);\n\treturn arr[1];\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpp3mpax2y.d(11): Error: undefined identifier `sort`, did you mean function `sqrt`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp3mpax2y.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tlong[] arr = [a, b, c];\n\tarr.sort();\n\treturn arr[1];\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123916,
      "stdout": "",
      "stderr": "/tmp/tmp79a284bv.d(11): Error: no property `sort` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp79a284bv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif(a > b)\n\t{\n\t\tif(b > c)\n\t\t\tmedian = b;\n\t\telse if(a > c)\n\t\t\tmedian = c;\n\t\telse\n\t\t\tmedian = a;\n\t}\n\telse\n\t{\n\t\tif(a > c)\n\t\t\tmedian = a;\n\t\telse if(b > c)\n\t\t\tmedian = c;\n\t\telse\n\t\t\tmedian = b;\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\tif (a > b) \n\t{\n\t\tif (b > c) \n\t\t{\n\t\t\tmedian = b;\n\t\t} \n\t\telse if (a > c) \n\t\t{\n\t\t\tmedian = c;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t} \n\telse if (a > c) \n\t{\n\t\tmedian = a;\n\t} \n\telse if (b > c) \n\t{\n\t\tmedian = c;\n\t} \n\telse \n\t{\n\t\tmedian = b;\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tlong temp;\n\tif (a > b) \n\t{\n\t\ttemp = a;\n\t\ta = b;\n\t\tb = temp;\n\t}\n\tif (b > c) \n\t{\n\t\ttemp = b;\n\t\tb = c;\n\t\tc = temp;\n\t}\n\tif (a > b) \n\t{\n\t\ttemp = a;\n\t\ta = b;\n\t\tb = temp;\n\t}\n\treturn b;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median = 0;\n\tif(a > b)\n\t{\n\t\tif(b > c)\n\t\t\tmedian = b;\n\t\telse if(a > c)\n\t\t\tmedian = c;\n\t\telse\n\t\t\tmedian = a;\n\t}\n\telse\n\t{\n\t\tif(a > c)\n\t\t\tmedian = a;\n\t\telse if(b > c)\n\t\t\tmedian = c;\n\t\telse\n\t\t\tmedian = b;\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif (a > b)\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tif (b > c)\n\t\t\t{\n\t\t\t\tmedian = b;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmedian = c;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tif (a > c)\n\t\t\t{\n\t\t\t\tmedian = a;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmedian = c;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif (a > b) \n\t{\n\t\tif (b > c) \n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a > c) \n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse \n\t{\n\t\tif (a > c) \n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c) \n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat result;\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tresult = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tresult = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tresult = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tresult = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult = b;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\tif(a > b)\n\t{\n\t\tif(b > c)\n\t\t\tmedian = b;\n\t\telse if(a > c)\n\t\t\tmedian = c;\n\t\telse\n\t\t\tmedian = a;\n\t}\n\telse\n\t{\n\t\tif(a > c)\n\t\t\tmedian = a;\n\t\telse if(b > c)\n\t\t\tmedian = c;\n\t\telse\n\t\t\tmedian = b;\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tlong[] arr = [a, b, c];\n\tsort(arr);\n\treturn arr[1];\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpp3mpax2y.d(11): Error: undefined identifier `sort`, did you mean function `sqrt`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp3mpax2y.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif (a > b)\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tif (b > c)\n\t\t\t{\n\t\t\t\tmedian = b;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmedian = c;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tif (a > c)\n\t\t\t{\n\t\t\t\tmedian = a;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmedian = c;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\tif (a > b)\n\t{\n\t\tif (a < c)\n\t\t\tmedian = a;\n\t\telse if (b > c)\n\t\t\tmedian = b;\n\t\telse\n\t\t\tmedian = c;\n\t}\n\telse if (a > c)\n\t\tmedian = a;\n\telse if (b < c)\n\t\tmedian = b;\n\telse\n\t\tmedian = c;\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat result;\n\t\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tresult = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tresult = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tresult = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tresult = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult = b;\n\t\t}\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t\tmedian = b;\n\t\telse if (a > c)\n\t\t\tmedian = c;\n\t\telse\n\t\t\tmedian = a;\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t\tmedian = a;\n\t\telse if (b > c)\n\t\t\tmedian = c;\n\t\telse\n\t\t\tmedian = b;\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tlong[] arr = [a, b, c];\n\tsort(arr);\n\treturn arr[1];\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpp3mpax2y.d(11): Error: undefined identifier `sort`, did you mean function `sqrt`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp3mpax2y.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median = 0;\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\treturn max(min(a,b), min(max(a,b),c));\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "/tmp/tmp7e2p6z_n.d(10): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7e2p6z_n.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\tif (a > b) \n\t{\n\t\tif (b > c) median = b;\n\t\telse if (a > c) median = c;\n\t\telse median = a;\n\t} \n\telse \n\t{\n\t\tif (a > c) median = a;\n\t\telse if (b > c) median = c;\n\t\telse median = b;\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif(a > b)\n\t{\n\t\tif(b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if(a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif(a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if(b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif (a > b)\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tif (b > c)\n\t\t\t{\n\t\t\t\tmedian = b;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmedian = c;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tif (a > c)\n\t\t\t{\n\t\t\t\tmedian = a;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmedian = c;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\tif(a > b)\n\t{\n\t\tif(b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if(a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif(a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if(b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif (a > b) \n\t{\n\t\tif (b > c) \n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a > c) \n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse \n\t{\n\t\tif (a > c) \n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c) \n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median = 0;\n\t\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif (a > b)\n\t{\n\t\tif (a < c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t}\n\telse if (a < c)\n\t{\n\t\tmedian = a;\n\t}\n\telse if (b > c)\n\t{\n\t\tmedian = c;\n\t}\n\telse\n\t{\n\t\tmedian = b;\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8vqlsc68.d(46): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmp8vqlsc68.__unittest_L42_C1() [0x427ab9]\n??:? void tmp8vqlsc68.__modtest() [0x427b40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\treturn max(min(a, b), min(max(a, b), c));\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123916,
      "stdout": "",
      "stderr": "/tmp/tmpwel2afix.d(10): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwel2afix.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median = 0;\n\tif (a > b)\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tif (b > c)\n\t\t\t\tmedian = b;\n\t\t\telse\n\t\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t\tmedian = a;\n\t}\n\telse\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tif (a > c)\n\t\t\t\tmedian = a;\n\t\t\telse\n\t\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t\tmedian = b;\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif(a > b)\n\t{\n\t\tif(b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if(a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif(a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if(b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat result;\n\tresult = max(a, max(b, c));\n\tresult += min(a, min(b, c));\n\tresult /= 2;\n\treturn result;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "/tmp/tmpjccjwfva.d(11): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmpjccjwfva.d(12): Error: undefined identifier `min`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjccjwfva.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median = 0;\n\tif(a > b)\n\t{\n\t\tif(b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if(a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif(a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if(b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123918,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif (a > b)\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tif (b > c)\n\t\t\t{\n\t\t\t\tmedian = b;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmedian = c;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tif (a > c)\n\t\t\t{\n\t\t\t\tmedian = a;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmedian = c;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123918,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat result;\n\tif(a > b)\n\t{\n\t\tif(b > c)\n\t\t{\n\t\t\tresult = b;\n\t\t}\n\t\telse if(a > c)\n\t\t{\n\t\t\tresult = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif(a > c)\n\t\t{\n\t\t\tresult = a;\n\t\t}\n\t\telse if(b > c)\n\t\t{\n\t\t\tresult = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult = b;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123918,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat result;\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tresult = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tresult = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tresult = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tresult = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult = b;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tlong[] arr = [a,b,c];\n\tstd.algorithm.sort(arr);\n\treturn arr[1];\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "/tmp/tmpz0vwvy91.d(11): Error: undefined identifier `algorithm` in package `std`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz0vwvy91.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\treturn max(min(a, b), min(max(a, b), c));\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123916,
      "stdout": "",
      "stderr": "/tmp/tmpwel2afix.d(10): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwel2afix.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median = 0;\n\tif (a > b)\n\t{\n\t\tif (a < c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t}\n\telse if (a < b)\n\t{\n\t\tif (b < c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t}\n\telse\n\t{\n\t\tmedian = a;\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123918,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median = 0;\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median = 0;\n\tif (a > b)\n\t{\n\t\tif (a < c)\n\t\t\tmedian = a;\n\t\telse if (b > c)\n\t\t\tmedian = b;\n\t\telse\n\t\t\tmedian = c;\n\t}\n\telse if (a < b)\n\t{\n\t\tif (b < c)\n\t\t\tmedian = b;\n\t\telse if (a > c)\n\t\t\tmedian = a;\n\t\telse\n\t\t\tmedian = c;\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123918,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t\tmedian = b;\n\t\telse if (a > c)\n\t\t\tmedian = c;\n\t\telse\n\t\t\tmedian = a;\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t\tmedian = a;\n\t\telse if (b > c)\n\t\t\tmedian = c;\n\t\telse\n\t\t\tmedian = b;\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t\tmedian = b;\n\t\telse if (c > a)\n\t\t\tmedian = a;\n\t\telse\n\t\t\tmedian = c;\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t\tmedian = a;\n\t\telse if (c > b)\n\t\t\tmedian = b;\n\t\telse\n\t\t\tmedian = c;\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123918,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\tif (a > b)\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tif (b > c)\n\t\t\t{\n\t\t\t\tmedian = b;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmedian = c;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tif (a > c)\n\t\t\t{\n\t\t\t\tmedian = a;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmedian = c;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif(a > b)\n\t{\n\t\tif(a > c)\n\t\t{\n\t\t\tif(b > c)\n\t\t\t{\n\t\t\t\tmedian = b;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmedian = c;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif(b > c)\n\t\t{\n\t\t\tif(a > c)\n\t\t\t{\n\t\t\t\tmedian = a;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmedian = c;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median = 0;\n\t\n\tif(a > b)\n\t{\n\t\tif(a > c)\n\t\t{\n\t\t\tif(b > c)\n\t\t\t{\n\t\t\t\tmedian = b;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmedian = c;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif(b > c)\n\t\t{\n\t\t\tif(a > c)\n\t\t\t{\n\t\t\t\tmedian = a;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmedian = c;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif (a > b)\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tif (b > c)\n\t\t\t{\n\t\t\t\tmedian = b;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmedian = c;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tif (a > c)\n\t\t\t{\n\t\t\t\tmedian = a;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmedian = c;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif (a > b)\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tif (b > c)\n\t\t\t\tmedian = b;\n\t\t\telse\n\t\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t\tmedian = a;\n\t}\n\telse\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tif (a > c)\n\t\t\t\tmedian = a;\n\t\t\telse\n\t\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t\tmedian = b;\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123918,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t\tmedian = b;\n\t\telse if (a > c)\n\t\t\tmedian = c;\n\t\telse\n\t\t\tmedian = a;\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t\tmedian = a;\n\t\telse if (b > c)\n\t\t\tmedian = c;\n\t\telse\n\t\t\tmedian = b;\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tlong temp;\n\tif (a > b) \n\t{\n\t\ttemp = a;\n\t\ta = b;\n\t\tb = temp;\n\t}\n\tif (a > c) \n\t{\n\t\ttemp = a;\n\t\ta = c;\n\t\tc = temp;\n\t}\n\tif (b > c) \n\t{\n\t\ttemp = b;\n\t\tb = c;\n\t\tc = temp;\n\t}\n\treturn b;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123918,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif(a < b)\n\t{\n\t\tif(b < c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if(a < c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif(a < c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if(b < c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat result;\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tresult = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tresult = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tresult = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tresult = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult = b;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat result;\n\tif (a < b)\n\t{\n\t\tif (b < c)\n\t\t{\n\t\t\tresult = b;\n\t\t}\n\t\telse if (a < c)\n\t\t{\n\t\t\tresult = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult = a;\n\t\t}\n\t}\n\telse if (a < c)\n\t{\n\t\tresult = a;\n\t}\n\telse if (b < c)\n\t{\n\t\tresult = c;\n\t}\n\telse\n\t{\n\t\tresult = b;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123918,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median = 0;\n\t\n\tif(a > b)\n\t{\n\t\tif(b > c)\n\t\t\tmedian = b;\n\t\telse if(a > c)\n\t\t\tmedian = c;\n\t\telse\n\t\t\tmedian = a;\n\t}\n\telse\n\t{\n\t\tif(a > c)\n\t\t\tmedian = a;\n\t\telse if(b > c)\n\t\t\tmedian = c;\n\t\telse\n\t\t\tmedian = b;\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123918,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif(a < b)\n\t{\n\t\tif(b < c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if(a < c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif(a < c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if(b < c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif (a > b) \n\t{\n\t\tif (b > c) \n\t\t{\n\t\t\tmedian = b;\n\t\t} \n\t\telse if (a > c) \n\t\t{\n\t\t\tmedian = c;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t} \n\telse if (a > c) \n\t{\n\t\tmedian = a;\n\t} \n\telse if (b > c) \n\t{\n\t\tmedian = c;\n\t} \n\telse \n\t{\n\t\tmedian = b;\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median = 0;\n\t\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t\tmedian = b;\n\t\telse if (a > c)\n\t\t\tmedian = c;\n\t\telse\n\t\t\tmedian = a;\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t\tmedian = a;\n\t\telse if (b > c)\n\t\t\tmedian = c;\n\t\telse\n\t\t\tmedian = b;\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123918,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tlong[] arr = [a, b, c];\n\tsort(arr);\n\treturn arr[1];\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpp3mpax2y.d(11): Error: undefined identifier `sort`, did you mean function `sqrt`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp3mpax2y.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\tif (a > b) \n\t{\n\t\tif (b > c) \n\t\t{\n\t\t\tmedian = b;\n\t\t} \n\t\telse if (a > c) \n\t\t{\n\t\t\tmedian = c;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t} \n\telse \n\t{\n\t\tif (a > c) \n\t\t{\n\t\t\tmedian = a;\n\t\t} \n\t\telse if (b > c) \n\t\t{\n\t\t\tmedian = c;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tlong[] arr = [a, b, c];\n\tsort(arr);\n\treturn arr[1];\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "/tmp/tmpp3mpax2y.d(11): Error: undefined identifier `sort`, did you mean function `sqrt`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp3mpax2y.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\tif(a > b)\n\t{\n\t\tif(b > c)\n\t\t\tmedian = b;\n\t\telse if(a > c)\n\t\t\tmedian = c;\n\t\telse\n\t\t\tmedian = a;\n\t}\n\telse\n\t{\n\t\tif(a > c)\n\t\t\tmedian = a;\n\t\telse if(b > c)\n\t\t\tmedian = c;\n\t\telse\n\t\t\tmedian = b;\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif(a > b)\n\t{\n\t\tif(b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if(a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif(a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if(b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\treturn max(min(a, b), min(max(a, b), c));\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123916,
      "stdout": "",
      "stderr": "/tmp/tmpwel2afix.d(10): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwel2afix.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tlong[3] arr = [a, b, c];\n\tsort(arr);\n\treturn arr[1];\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "/tmp/tmpwqgijodo.d(11): Error: undefined identifier `sort`, did you mean function `sqrt`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwqgijodo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (a > c)\n\t\t\t{\n\t\t\t\tmedian = c;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmedian = a;\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (b > c)\n\t\t\t{\n\t\t\t\tmedian = c;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmedian = b;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123918,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif(a > b)\n\t{\n\t\tif(b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if(a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif(a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if(b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat result;\n\t\n\tif(a > b)\n\t{\n\t\tif(b > c)\n\t\t{\n\t\t\tresult = b;\n\t\t}\n\t\telse if(a > c)\n\t\t{\n\t\t\tresult = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif(a > c)\n\t\t{\n\t\t\tresult = a;\n\t\t}\n\t\telse if(b > c)\n\t\t{\n\t\t\tresult = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult = b;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123918,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat result;\n\tresult = max(a, max(b, c));\n\tresult = min(a, min(b, c));\n\treturn result;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "/tmp/tmpq3eh6fiz.d(11): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmpq3eh6fiz.d(12): Error: undefined identifier `min`, did you mean function `main`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpq3eh6fiz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median = 0.0;\n\t\n\tif (a > b)\n\t{\n\t\tif (a < c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t}\n\telse if (a < b)\n\t{\n\t\tif (b < c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t}\n\telse\n\t{\n\t\tmedian = a;\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123918,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat result;\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tresult = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tresult = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tresult = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tresult = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult = b;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median = 0;\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif(a > b)\n\t{\n\t\tif(a > c)\n\t\t{\n\t\t\tif(b > c)\n\t\t\t{\n\t\t\t\tmedian = b;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmedian = c;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif(b > c)\n\t\t{\n\t\t\tif(a > c)\n\t\t\t{\n\t\t\t\tmedian = a;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmedian = c;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123918,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat result;\n\tif(a > b) {\n\t\tif(b > c) {\n\t\t\tresult = b;\n\t\t} else if(a > c) {\n\t\t\tresult = c;\n\t\t} else {\n\t\t\tresult = a;\n\t\t}\n\t} else {\n\t\tif(a > c) {\n\t\t\tresult = a;\n\t\t} else if(b > c) {\n\t\t\tresult = c;\n\t\t} else {\n\t\t\tresult = b;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123918,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif (a < b)\n\t{\n\t\tif (b < c)\n\t\t\tmedian = b;\n\t\telse if (a < c)\n\t\t\tmedian = c;\n\t\telse\n\t\t\tmedian = a;\n\t}\n\telse if (a < c)\n\t\tmedian = a;\n\telse if (b < c)\n\t\tmedian = c;\n\telse\n\t\tmedian = b;\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123918,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif(a > b)\n\t{\n\t\tif(a < c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if(b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif(a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if(b < c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123918,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median = 0;\n\t\n\tif (a > b)\n\t{\n\t\tif (b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a > c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1665517191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tlong[] numbers = [a, b, c];\n\tsort(numbers);\n\treturn numbers[1];\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123918,
      "stdout": "",
      "stderr": "/tmp/tmp_6mpz4cm.d(11): Error: undefined identifier `sort`, did you mean function `sqrt`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_6mpz4cm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median = 0;\n\tif (a < b)\n\t{\n\t\tif (b < c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a < c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (a < c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b < c)\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123918,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median = 0.0f;\n\t\n\tif (a > b) \n\t{\n\t\tif (b > c) \n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse if (a > c) \n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse \n\t{\n\t\tif (a > c) \n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c) \n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123918,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif (a > b) \n\t{\n\t\tif (b > c)\n\t\t\tmedian = b;\n\t\telse if (a > c)\n\t\t\tmedian = c;\n\t\telse\n\t\t\tmedian = a;\n\t}\n\telse \n\t{\n\t\tif (a > c)\n\t\t\tmedian = a;\n\t\telse if (b > c)\n\t\t\tmedian = c;\n\t\telse\n\t\t\tmedian = b;\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123918,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the median of three numbers.\n\t\n*/\nfloat median_numbers(long a, long b, long c) \n{\n\tfloat median;\n\t\n\tif (a > b)\n\t{\n\t\tif (a < c)\n\t\t{\n\t\t\tmedian = a;\n\t\t}\n\t\telse if (b > c)\n\t\t{\n\t\t\tmedian = b;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmedian = c;\n\t\t}\n\t}\n\telse if (a < c)\n\t{\n\t\tmedian = a;\n\t}\n\telse if (b > c)\n\t{\n\t\tmedian = c;\n\t}\n\telse\n\t{\n\t\tmedian = b;\n\t}\n\t\n\treturn median;\n}\nunittest\n{\n    alias candidate = median_numbers;\n\n    assert(candidate(25L, 55L, 65L) == 55.0);\n    assert(candidate(20L, 10L, 30L) == 20.0);\n    assert(candidate(15L, 45L, 75L) == 45.0);\n}\nvoid main(){}",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8vqlsc68.d(46): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmp8vqlsc68.__unittest_L42_C1() [0x427ab9]\n??:? void tmp8vqlsc68.__modtest() [0x427b40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
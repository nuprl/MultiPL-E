{
  "name": "mbpp_724_power_base_sum",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n\t\n*/\nlong power_base_sum(long base, long power) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_724_power_base_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = power_base_sum;\n\n    assert(candidate(2L, 100L) == 115L);\n    assert(candidate(8L, 10L) == 37L);\n    assert(candidate(8L, 15L) == 62L);\n    assert(candidate(3L, 3L) == 9L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tlong result = 0;\n\tlong temp = base;\n\tfor (int i = 0; i < power; i++) \n\t{\n\t\ttemp *= base;\n\t}\n\twhile (temp != 0) \n\t{\n\t\tresult += temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn result;\n}",
    "{\n\tlong result = 1;\n\tfor (int i = 0; i < power; i++)\n\t{\n\t\tresult *= base;\n\t}\n\treturn result;\n}",
    "{\n\tlong sum = 0;\n\tlong temp = base;\n\t\n\tfor(int i = 0; i < power; i++)\n\t{\n\t\ttemp *= base;\n\t}\n\t\n\twhile(temp > 0)\n\t{\n\t\tsum += temp % 10;\n\t\ttemp /= 10;\n\t}\n\t\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong result = pow(base, power);\n\twhile (result > 0)\n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong result = 0;\n\tlong temp = base;\n\t\n\tfor(int i = 1; i < power; i++)\n\t{\n\t\ttemp *= base;\n\t}\n\t\n\twhile(temp != 0)\n\t{\n\t\tresult += temp % 10;\n\t\ttemp /= 10;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong sum = 0;\n\tlong temp = base;\n\t\n\tfor (int i = 1; i < power; i++) \n\t{\n\t\ttemp *= base;\n\t}\n\t\n\twhile (temp > 0) \n\t{\n\t\tsum += temp % 10;\n\t\ttemp /= 10;\n\t}\n\t\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong temp = base;\n\t\n\tfor(int i = 1; i < power; i++)\n\t{\n\t\ttemp = temp * base;\n\t}\n\t\n\twhile(temp > 0)\n\t{\n\t\tsum += temp % 10;\n\t\ttemp /= 10;\n\t}\n\t\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong temp = pow(base, power);\n\twhile (temp)\n\t{\n\t\tsum += temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong result = pow(base, power);\n\tlong sum = 0;\n\twhile(result > 0)\n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong result = 1;\n\t\n\tfor (int i = 0; i < power; i++)\n\t{\n\t\tresult *= base;\n\t}\n\t\n\twhile (result > 0)\n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\t\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong temp = pow(base, power);\n\twhile(temp > 0)\n\t{\n\t\tsum += temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong result = pow(base, power);\n\twhile(result > 0)\n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong result = pow(base, power);\n\tlong sum = 0;\n\twhile(result > 0)\n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong result = 1;\n\tfor (int i = 0; i < power; i++)\n\t{\n\t\tresult *= base;\n\t}\n\treturn result;\n}",
    "{\n\tlong sum = 0;\n\tlong result = pow(base, power);\n\twhile(result > 0)\n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\treturn sum;\n}",
    "{\n\tlong result = 0;\n\tlong temp = pow(base, power);\n\twhile (temp > 0)\n\t{\n\t\tresult += temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn result;\n}",
    "{\n\tlong result = 1;\n\tfor (long i = 0; i < power; i++) \n\t{\n\t\tresult *= base;\n\t}\n\treturn sum(result.to!string.map!(a => a.to!long));\n}",
    "{\n\tauto result = pow(base, power);\n\treturn result.sumDigits();\n}",
    "{\n\tlong sum = 0;\n\tlong result = pow(base, power);\n\t\n\twhile(result != 0)\n\t{\n\t\tsum += result % 10;\n\t\tresult /= 10;\n\t}\n\t\n\treturn sum;\n}",
    "{\n\tlong sum = 0;\n\tlong temp = base;\n\tfor(int i = 0; i < power - 1; i++)\n\t{\n\t\ttemp = temp * base;\n\t}\n\twhile(temp != 0)\n\t{\n\t\tsum += temp % 10;\n\t\ttemp /= 10;\n\t}\n\treturn sum;\n}"
  ]
}
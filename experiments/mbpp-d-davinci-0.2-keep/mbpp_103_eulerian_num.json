{
  "name": "mbpp_103_eulerian_num",
  "language": "d",
  "prompt": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_103_eulerian_num.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tif (n == 0 || m == 0) return 1;\n\tif (n == 1 || m == 1) return n;\n\tif (n < m) return 0;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}",
    "{\n\tif (n == 0 && m == 0) return 1;\n\tif (n == 0 || m == 0) return 0;\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (m > n) return 0;\n\tif (m == n) return 1;\n\tif (m == 1) return factorial(n);\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + m * eulerian_num(n, m + 1);\n}",
    "{\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (m == 1)\n\t\treturn 1;\n\tif (n == m)\n\t\treturn 1;\n\tif (m > n)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}",
    "{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tlong result = 0;\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (n == 1)\n\t\treturn 1;\n\tif (m == 1)\n\t\treturn 1;\n\tif (n == m)\n\t\treturn 1;\n\tif (n < m)\n\t\treturn 0;\n\tif (n > m)\n\t\tresult = (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n\treturn result;\n}",
    "{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n < 0 || m < 0) return 0;\n\tif (n == 0 && m == 0) return 1;\n\tif (n == 0 || m == 0) return 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n < 0 || m < 0 || n < m)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 1 && m == 1)\n\t\treturn 1;\n\tif (n == 1 && m == 0)\n\t\treturn 0;\n\tif (m == 0)\n\t\treturn factorial(n - 1);\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n;\n\tif (n == m)\n\t\treturn 1;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}",
    "{\n\tif (n < 0 || m < 0) \n\t{\n\t\treturn 0;\n\t}\n\tif (n == 0 && m == 0) \n\t{\n\t\treturn 1;\n\t}\n\tif (n == 0 || m == 0) \n\t{\n\t\treturn 0;\n\t}\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (m > n) return 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n < 0 || m < 0) return 0;\n\tif (n == 0 || m == 0) return 1;\n\tif (n == 1 || m == 1) return n;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif(n == 0 || m == 0) return 1;\n\tif(n == 1 || m == 1) return n;\n\tif(n < m) return 0;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}",
    "{\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (n == 1) return 1;\n\tif (m == 1) return 1;\n\tif (n < m) return 0;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}",
    "{\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n;\n\tif (n < m)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (n == 1) return 1;\n\tif (m == 1) return 1;\n\tif (n < m) return 0;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}",
    "{\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (m > n)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}",
    "{\n\tif (m > n)\n\t\treturn 0;\n\tif (m == 0 || m == n)\n\t\treturn 1;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + m * eulerian_num(n, m + 1);\n}",
    "{\n\tlong result = 0;\n\t\n\tif (m == 0 || m == n) \n\t{\n\t\tresult = 1;\n\t}\n\telse if (m == 1 || m == n - 1) \n\t{\n\t\tresult = n;\n\t}\n\telse \n\t{\n\t\tresult = (n - m) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n\t}\n\t\n\treturn result;\n}",
    "{\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1)\n\t\treturn m + 1;\n\tif (m == 1)\n\t\treturn n + 1;\n\tif (n == m)\n\t\treturn factorial(n);\n\treturn (n - m + 1) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}",
    "{\n\tif (m > n) return 0;\n\tif (m == n) return 1;\n\tif (m == 0) return 1;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + m * eulerian_num(n, m - 1);\n}",
    "{\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (m > n) return 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (n == 1) return 1;\n\tif (m == 1) return 1;\n\tif (m > n) return 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tlong result = 0;\n\tif(n == m)\n\t\tresult = 1;\n\telse if(m == 1)\n\t\tresult = 1;\n\telse if(m == 0)\n\t\tresult = 0;\n\telse\n\t\tresult = (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n\treturn result;\n}",
    "{\n\tif (n < 0 || m < 0) return 0;\n\tif (n == 0 || m == 0) return 1;\n\tif (n == 1 || m == 1) return n;\n\tif (n == m) return factorial(n);\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n < 0 || m < 0) return 0;\n\tif (n == 0 || m == 0) return 1;\n\tif (n == 1 || m == 1) return n;\n\tif (n == m) return factorial(n);\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}",
    "{\n\tlong res = 0;\n\tif(n == 0)\n\t\treturn 1;\n\tif(m == 0)\n\t\treturn 0;\n\tif(n == 1)\n\t\treturn 1;\n\tif(m == 1)\n\t\treturn 1;\n\tif(n == m)\n\t\treturn 1;\n\tif(n < m)\n\t\treturn 0;\n\tif(n > m)\n\t\tres = (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n\treturn res;\n}",
    "{\n    if (n < 0 || m < 0 || n < m)\n        return 0;\n    if (n == 0 && m == 0)\n        return 1;\n    if (m == 0)\n        return 0;\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n < m)\n\t\treturn 0;\n\tif (n == m)\n\t\treturn 1;\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + m * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n < 0 || m < 0) \n\t{\n\t\treturn 0;\n\t}\n\tif (n == 0 || m == 0) \n\t{\n\t\treturn 1;\n\t}\n\tif (n == 1 || m == 1) \n\t{\n\t\treturn n;\n\t}\n\tif (n < m) \n\t{\n\t\treturn 0;\n\t}\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}",
    "{\n\tlong result = 0;\n\tif (m == 0)\n\t{\n\t\treturn 1;\n\t}\n\telse if (n == 0)\n\t{\n\t\treturn 0;\n\t}\n\telse if (m > n)\n\t{\n\t\treturn 0;\n\t}\n\telse\n\t{\n\t\tresult = (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n\t}\n\treturn result;\n}",
    "{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\tif (n == m)\n\t\treturn factorial(n);\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif(n < m)\n\t\treturn 0;\n\tif(n == m || m == 0)\n\t\treturn 1;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}",
    "{\n\tif (n < 0 || m < 0 || n < m)\n\t\treturn 0;\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (m == 1)\n\t\treturn factorial(n);\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + m * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n == 0) \n\t{\n\t\treturn 1;\n\t}\n\tif (m == 0) \n\t{\n\t\treturn 0;\n\t}\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n < 0 || m < 0 || n < m) \n\t\treturn 0;\n\tif (n == 0 || m == 0) \n\t\treturn 1;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (n == 1)\n\t\treturn 1;\n\tif (m == 1)\n\t\treturn 1;\n\tif (n < m)\n\t\treturn 0;\n\tif (n == m)\n\t\treturn 1;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}",
    "{\n\tif (n == 0 || m == 0) \n\t\treturn 1;\n\tif (n == 1 || m == 1) \n\t\treturn n;\n\tif (n < m) \n\t\treturn 0;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}",
    "{\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (m > n) return 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n < 0 || m < 0 || n < m)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\tif (n == 1 || m == 1)\n\t\treturn 1;\n\tif (n == m)\n\t\treturn factorial(n);\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n < 0 || m < 0) return 0;\n\tif (n == 0 && m == 0) return 1;\n\tif (m == 0) return 0;\n\tif (n == 0) return 1;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (n == 1)\n\t\treturn 1;\n\tif (m == 1)\n\t\treturn 1;\n\tif (n < m)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tlong result = 0;\n\tif (n == 0) \n\t{\n\t\tresult = 1;\n\t}\n\telse if (m == 0) \n\t{\n\t\tresult = 0;\n\t}\n\telse if (n == 1) \n\t{\n\t\tresult = 1;\n\t}\n\telse if (m == 1) \n\t{\n\t\tresult = 1;\n\t}\n\telse if (n == m) \n\t{\n\t\tresult = 1;\n\t}\n\telse \n\t{\n\t\tresult = (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n\t}\n\treturn result;\n}",
    "{\n\tlong result = 0;\n\tif (m == 0) \n\t{\n\t\tresult = 1;\n\t}\n\telse if (n == 0) \n\t{\n\t\tresult = 0;\n\t}\n\telse if (n == 1) \n\t{\n\t\tresult = 1;\n\t}\n\telse if (n == m) \n\t{\n\t\tresult = 1;\n\t}\n\telse \n\t{\n\t\tresult = (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n\t}\n\treturn result;\n}",
    "{\n\tlong result = 0;\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n;\n\tif (n < m)\n\t\treturn 0;\n\tif (n == m)\n\t\treturn factorial(n);\n\tif (n > m)\n\t\tresult = (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n\treturn result;\n}",
    "{\n\tlong result = 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\tif (m > n)\n\t\treturn 0;\n\tif (m == n)\n\t\treturn 1;\n\tif (m == 1)\n\t\treturn factorial(n - 1);\n\tif (m == n - 1)\n\t\treturn factorial(n) / 2;\n\tif (m == n - 2)\n\t\treturn factorial(n) / 2 * (n - 1);\n\tif (m == n - 3)\n\t\treturn factorial(n) / 2 * (n - 1) * (n - 2) / 3;\n\tif (m == n - 4)\n\t\treturn factorial(n) / 2 * (n - 1) * (n - 2) * (n - 3) / 12;\n\tif (m == n - 5)\n\t\treturn factorial(n) / 2 * (n - 1) * (n - 2) * (n - 3) * (n - 4) / 60;\n\tif (m == n - 6)\n\t\treturn factorial(n) / 2 * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) / 360;\n\tif (m == n - 7)\n\t\treturn factorial(n) / 2 * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) / 2520;\n\tif (m == n - 8)\n\t\treturn factorial(n) / 2 * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) / 20160;\n\tif (m == n - 9)\n\t\treturn factorial(n) / 2 * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7)",
    "{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (n == 1) return 1;\n\tif (m == 1) return 1;\n\tif (n < m) return 0;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}",
    "{\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1)\n\t\treturn m + 1;\n\tif (m == 1)\n\t\treturn n + 1;\n\treturn (n + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tlong result = 0;\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (m > n)\n\t\treturn 0;\n\tif (m == n)\n\t\treturn 1;\n\tfor (int i = 1; i <= m; i++)\n\t\tresult += eulerian_num(n - 1, i - 1) * (n - i + 1);\n\treturn result;\n}",
    "{\n\tif (n < 0 || m < 0) return 0;\n\tif (n == 0 || m == 0) return 1;\n\tif (n == 1 || m == 1) return n;\n\tif (n == m) return factorial(n);\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + m * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n == 1 ? m + 1 : n + 1;\n\tif (n < m)\n\t\treturn 0;\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tlong[long] factorials;\n\tfactorials[0] = 1;\n\tforeach(i; 1 .. n + 1)\n\t\tfactorials[i] = factorials[i - 1] * i;\n\t\n\tlong[long] binomials;\n\tbinomials[0] = 1;\n\tforeach(i; 1 .. n + 1)\n\t\tbinomials[i] = binomials[i - 1] * (n + 1 - i) / i;\n\t\n\tlong result = 0;\n\tforeach(i; 0 .. m + 1)\n\t\tresult += binomials[i] * factorials[n + 1] / (factorials[n + 1 - i] * factorials[i]);\n\t\n\treturn result;\n}",
    "{\n\tif (n < 0 || m < 0) \n\t{\n\t\treturn 0;\n\t}\n\tif (n == 0 && m == 0) \n\t{\n\t\treturn 1;\n\t}\n\tif (m == 0) \n\t{\n\t\treturn 0;\n\t}\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n == 0 || m == 0) \n\t\treturn 1;\n\tif (n < m) \n\t\treturn 0;\n\tif (n == m) \n\t\treturn 1;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n < 0 || m < 0 || n < m) \n\t{\n\t\treturn 0;\n\t}\n\tif (n == 0 && m == 0) \n\t{\n\t\treturn 1;\n\t}\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n == 0 || m == 0) \n\t\treturn 1;\n\tif (n == 1 || m == 1) \n\t\treturn n == 1 ? m : n;\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n == 0 || m == 0) return 1;\n\tif (n == 1 || m == 1) return n;\n\tif (n < m) return 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (m > n)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (m == 1) return 1;\n\tif (m > n) return 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}",
    "{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n;\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n == 0) \n\t{\n\t\treturn 1;\n\t}\n\tif (m == 0) \n\t{\n\t\treturn 0;\n\t}\n\tif (m > n) \n\t{\n\t\treturn 0;\n\t}\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tlong result = 0;\n\tif(n == 0)\n\t{\n\t\tresult = 1;\n\t}\n\telse if(m == 0)\n\t{\n\t\tresult = 0;\n\t}\n\telse if(n == 1)\n\t{\n\t\tresult = 1;\n\t}\n\telse if(m == 1)\n\t{\n\t\tresult = 1;\n\t}\n\telse\n\t{\n\t\tresult = (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n\t}\n\treturn result;\n}",
    "{\n\tif (n == 0 && m == 0) return 1;\n\tif (n == 0 || m == 0) return 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n;\n\tif (n < m)\n\t\treturn 0;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}",
    "{\n\tlong result = 0;\n\tif (m == 0 || m == n)\n\t\treturn 1;\n\tif (m == 1 || m == n - 1)\n\t\treturn n;\n\tif (m > n)\n\t\treturn 0;\n\t\n\tresult = eulerian_num(n - 1, m - 1) + (n - m) * eulerian_num(n - 1, m);\n\treturn result;\n}",
    "{\n\tif (n < 0 || m < 0) \n\t{\n\t\treturn 0;\n\t}\n\tif (n == 0 && m == 0) \n\t{\n\t\treturn 1;\n\t}\n\tif (m > n) \n\t{\n\t\treturn 0;\n\t}\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n == 0 && m == 0) return 1;\n\tif (n == 0 || m == 0) return 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n < 0 || m < 0 || n < m) \n\t{\n\t\treturn 0;\n\t}\n\tif (n == 0 || m == 0) \n\t{\n\t\treturn 1;\n\t}\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n == 0 || m == 0) \n\t\treturn 1;\n\tif (n == 1 || m == 1) \n\t\treturn n;\n\tif (n < m) \n\t\treturn 0;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}",
    "{\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (m > n) return 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}",
    "{\n\tlong result = 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\tif (n == m)\n\t\treturn 1;\n\tif (m == 1)\n\t\treturn 1;\n\tif (m > n)\n\t\treturn 0;\n\tresult = (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n\treturn result;\n}",
    "{\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (n == 1)\n\t\treturn 1;\n\tif (m == 1)\n\t\treturn 1;\n\tif (n < m)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}",
    "{\n\tlong result = 0;\n\tif (n == 0) \n\t{\n\t\tresult = 1;\n\t}\n\telse if (m == 0) \n\t{\n\t\tresult = 0;\n\t}\n\telse if (n == 1) \n\t{\n\t\tresult = 1;\n\t}\n\telse if (m == 1) \n\t{\n\t\tresult = 1;\n\t}\n\telse if (n < m) \n\t{\n\t\tresult = 0;\n\t}\n\telse \n\t{\n\t\tresult = (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n\t}\n\treturn result;\n}",
    "{\n\tif (m == 0 || m == n)\n\t\treturn 1;\n\tif (m == 1)\n\t\treturn n;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + m * eulerian_num(n, m - 2);\n}",
    "{\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n;\n\tif (n < m)\n\t\treturn 0;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}",
    "{\n\tlong[long] memo;\n\tauto eulerian = (n, m) {\n\t\tif (n < m) return 0;\n\t\tif (n == m) return 1;\n\t\tif (m == 0) return 1;\n\t\tif (memo[n * 100 + m] != 0) return memo[n * 100 + m];\n\t\treturn memo[n * 100 + m] = (n - m) * eulerian(n - 1, m) + (m + 1) * eulerian(n - 1, m - 1);\n\t};\n\treturn eulerian(n, m);\n}",
    "{\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (n == 1) return 1;\n\tif (m == 1) return 1;\n\tif (n < m) return 0;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}",
    "{\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1)\n\t\treturn m + 1;\n\tif (m == 1)\n\t\treturn n + 1;\n\treturn (n + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (n == 1)\n\t\treturn 1;\n\tif (m == 1)\n\t\treturn 1;\n\tif (n < m)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n < m)\n\t\treturn 0;\n\tif (n == m)\n\t\treturn 1;\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n;\n\tif (n < m)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n == 0 || m == 0) \n\t{\n\t\treturn 1;\n\t}\n\tif (m > n) \n\t{\n\t\treturn 0;\n\t}\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + m * eulerian_num(n - 1, m);\n}",
    "{\n\tlong[long] memo;\n\treturn eulerian_num_impl(n, m, memo);\n}",
    "{\n\tlong result = 0;\n\tif (n == 0 || m == 0)\n\t\treturn 1;",
    "{\n\tif (n == 0) \n\t\treturn 1;\n\tif (m == 0) \n\t\treturn 0;\n\tif (n == 1) \n\t\treturn 1;\n\tif (m == 1) \n\t\treturn 1;\n\tif (n < m) \n\t\treturn 0;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}",
    "{\n\tif (n == 0) \n\t{\n\t\treturn 1;\n\t}\n\tif (m == 0) \n\t{\n\t\treturn 0;\n\t}\n\tif (n == 1) \n\t{\n\t\treturn 1;\n\t}\n\tif (m == 1) \n\t{\n\t\treturn 1;\n\t}\n\tif (m > n) \n\t{\n\t\treturn 0;\n\t}\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n < 0 || m < 0 || n < m)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 1 && m == 1)\n\t\treturn 1;\n\tif (n == 1 && m == 0)\n\t\treturn 0;\n\tif (m == 0)\n\t\treturn 1;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n;\n\tif (n == m)\n\t\treturn factorial(n);\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}",
    "{\n\tlong result = 0;\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (n == m)\n\t\treturn 1;\n\tif (n > m)\n\t\treturn 0;\n\tif (n == 1)\n\t\treturn m;\n\tfor (long i = 0; i < n; i++)\n\t\tresult += eulerian_num(i, m - 1);\n\treturn result;\n}",
    "{\n\tlong result = 0;\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (m > n) return 0;\n\tif (m == n) return 1;\n\tfor (long i = 0; i < m; i++) \n\t{\n\t\tresult += eulerian_num(n - 1, i);\n\t}\n\treturn result;\n}",
    "{\n\tlong result = 0;\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (n == 1)\n\t\treturn 1;\n\tif (m == 1)\n\t\treturn 1;\n\tif (m > n)\n\t\treturn 0;\n\tfor (long i = 0; i <= n - m; i++)\n\t\tresult += eulerian_num(n - i, m - 1) * pow(-1, i) * factorial(n) / (factorial(i) * factorial(n - i));\n\treturn result;\n}",
    "{\n\tif(n == 0 || m == 0) {\n\t\treturn 1;\n\t}\n\tif(n == 1 || m == 1) {\n\t\treturn n;\n\t}\n\tif(n == m) {\n\t\treturn 1;\n\t}\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}",
    "{\n\tif(n == 0 || m == 0 || m > n) return 0;\n\tif(m == 1 || m == n) return 1;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}",
    "{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n < 0 || m < 0 || n < m) return 0;\n\tif (n == 0 && m == 0) return 1;\n\tif (m == 0) return 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (m == 1) return 1;\n\tif (m > n) return 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}",
    "{\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (n == 1) return 1;\n\tif (m == 1) return 1;\n\tif (n < m) return 0;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}",
    "{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n;\n\tif (n == m)\n\t\treturn factorial(n);\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n < 0 || m < 0) return 0;\n\tif (m == 0) return 1;\n\tif (n == 0) return 0;\n\tif (m == 1) return 1;\n\tif (n == m) return 1;\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (m == 0)\n\t\treturn 1;\n\tif (n == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (m > n)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n + m - 1;\n\tif (n < m)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (m > n) return 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tlong result = 0;\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (n == m)\n\t\treturn 1;\n\tif (n > m)\n\t\treturn 0;\n\tfor (long i = 0; i <= n; i++)\n\t\tresult += pow(-1, i) * eulerian_num(n - i, m - 1);\n\treturn result;\n}",
    "{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n < 0 || m < 0) return 0;\n\tif (n == 0 || m == 0) return 1;\n\tif (n == 1 || m == 1) return n;\n\tif (n == m) return factorial(n);\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n;\n\tif (n < m)\n\t\treturn 0;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}",
    "{\n\tlong[long] memo;\n\tauto eulerian = (n, m) {\n\t\tif (n < 0 || m < 0) return 0;\n\t\tif (n == 0 && m == 0) return 1;\n\t\tif (n == 0 || m == 0) return 0;\n\t\tif (memo.count(n * 100 + m)) return memo[n * 100 + m];\n\t\treturn memo[n * 100 + m] = (n - 1) * eulerian(n - 1, m) + eulerian(n - 1, m - 1);\n\t};\n\treturn eulerian(n, m);\n}",
    "{\n\tif (n < 0 || m < 0 || n < m)\n\t\treturn 0;\n\tif (m == 0 || n == m)\n\t\treturn 1;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + m * eulerian_num(n, m - 1);\n}",
    "{\n\tif (m > n) return 0;\n\tif (m == 0) return 1;\n\tif (m == 1) return n;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + m * eulerian_num(n, m - 2);\n}",
    "{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (m == 1)\n\t\treturn 1;\n\tif (m > n)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n == 0 && m == 0) return 1;\n\tif (n == 0 || m == 0) return 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (m > n)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}",
    "{\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\t\n\tif (n == 1 || m == 1)\n\t\treturn n;\n\t\n\tif (n < m)\n\t\treturn 0;\n\t\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}",
    "{\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (m > n) return 0;\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tlong result = 0;\n\tif (m == 0)\n\t\treturn 1;\n\tif (n == 0)\n\t\treturn 0;\n\tfor (long i = 0; i <= m; i++)\n\t\tresult += pow(-1, i) * comb(m, i) * eulerian_num(n - 1, m - i);\n\treturn result;\n}",
    "{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n;\n\tif (n == m)\n\t\treturn factorial(n);\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n < 0 || m < 0) return 0;\n\tif (n == 0 || m == 0) return 1;\n\tif (n == 1 || m == 1) return n;\n\tif (n == m) return factorial(n);\n\treturn eulerian_num(n - 1, m - 1) + (n - 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n;\n\tif (n < m)\n\t\treturn 0;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}",
    "{\n\tif (n < 0 || m < 0 || n < m) \n\t\treturn 0;\n\tif (n == 0 && m == 0) \n\t\treturn 1;\n\tif (n == 1 && m == 1) \n\t\treturn 1;\n\tif (m == 0) \n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n < 0 || m < 0) return 0;\n\tif (n == 0 || m == 0) return 1;\n\tif (n == 1) return m + 1;\n\tif (m == 1) return n + 1;\n\treturn (n - m) * eulerian_num(n - 1, m) + (m + 1) * eulerian_num(n - 1, m - 1);\n}",
    "{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n == 0 || m == 0) return 1;\n\tif (n == 1 || m == 1) return n;\n\tif (n < m) return 0;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}",
    "{\n\tif (n < 0 || m < 0 || n < m) return 0;\n\tif (n == 0 || m == 0) return 1;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n < 0 || m < 0 || n < m)\n\t\treturn 0;\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == m)\n\t\treturn 1;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tlong result = 0;\n\tif (m == 0 || m == n)\n\t\treturn 1;\n\tif (m == 1 || m == n - 1)\n\t\treturn n;\n\tif (m > n / 2)\n\t\tm = n - m;\n\tfor (long i = 0; i < m; i++)\n\t\tresult += eulerian_num(n - i - 1, m - i - 1);\n\treturn result;\n}",
    "{\n\tlong result = 0;\n\tif (m == 0)\n\t\tresult = 1;\n\telse if (n == 0)\n\t\tresult = 0;\n\telse if (n == 1)\n\t\tresult = 1;\n\telse if (n == m)\n\t\tresult = 1;\n\telse\n\t\tresult = (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n\treturn result;\n}",
    "{\n\tif (n < 0 || m < 0) \n\t{\n\t\treturn 0;\n\t}\n\tif (n == 0 && m == 0) \n\t{\n\t\treturn 1;\n\t}\n\tif (n == 0 || m == 0) \n\t{\n\t\treturn 0;\n\t}\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tlong res = 0;\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (n == 1)\n\t\treturn 1;\n\tif (m == 1)\n\t\treturn 1;\n\tif (m > n)\n\t\treturn 0;\n\tif (m == n)\n\t\treturn 1;\n\tfor (long i = 0; i < m; i++)\n\t{\n\t\tres += eulerian_num(n - 1, i);\n\t}\n\treturn res;\n}",
    "{\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n;\n\tif (n < m)\n\t\treturn 0;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}",
    "{\n\tif (n < 0 || m < 0 || n < m)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + m * eulerian_num(n - 1, m);\n}",
    "{\n\tlong result = 0;\n\tlong i = 0;\n\tlong j = 0;\n\tlong k = 0;\n\tlong l = 0;\n\tlong m_fact = 1;\n\tlong n_fact = 1;\n\tlong n_minus_m_fact = 1;\n\tlong m_plus_1_fact = 1;\n\t\n\tif (n < m)\n\t{\n\t\treturn 0;\n\t}\n\t\n\tfor (i = 1; i <= m; i++)\n\t{\n\t\tm_fact *= i;\n\t}\n\t\n\tfor (j = 1; j <= n; j++)\n\t{\n\t\tn_fact *= j;\n\t}\n\t\n\tfor (k = 1; k <= n - m; k++)\n\t{\n\t\tn_minus_m_fact *= k;\n\t}\n\t\n\tfor (l = 1; l <= m + 1; l++)\n\t{\n\t\tm_plus_1_fact *= l;\n\t}\n\t\n\tresult = (m_fact * n_fact) / (n_minus_m_fact * m_plus_1_fact);\n\t\n\treturn result;\n}",
    "{\n\tif (n == 0) \n\t{\n\t\treturn 1;\n\t}\n\tif (m == 0) \n\t{\n\t\treturn 0;\n\t}\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n < m)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n < 0 || m < 0) \n\t\treturn 0;\n\tif (n == 0 || m == 0) \n\t\treturn 1;\n\tif (n == 1 || m == 1) \n\t\treturn n;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (n == 1) return 1;\n\tif (m == 1) return 1;\n\tif (n == m) return 1;\n\tif (m > n) return 0;\n\treturn (n-m+1) * eulerian_num(n-1, m-1) + (m+1) * eulerian_num(n-1, m);\n}",
    "{\n\tif (n < 0 || m < 0) \n\t{\n\t\treturn 0;\n\t}\n\tif (n == 0 && m == 0) \n\t{\n\t\treturn 1;\n\t}\n\tif (m == 0) \n\t{\n\t\treturn 0;\n\t}\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (m == 0 || n == m)\n\t\treturn 1;\n\tif (m == 1)\n\t\treturn n;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}",
    "{\n\tlong i, j;\n\tlong[][] a = new long[n + 1][m + 1];\n\t\n\ta[0][0] = 1;\n\t\n\tforeach(i; 1 .. n + 1)\n\t{\n\t\tforeach(j; 0 .. m + 1)\n\t\t{\n\t\t\tif(j == 0)\n\t\t\t\ta[i][j] = a[i - 1][j] * (i - 1) / i;\n\t\t\telse\n\t\t\t\ta[i][j] = a[i - 1][j] * (i - 1) / i + a[i - 1][j - 1];\n\t\t}\n\t}\n\t\n\treturn a[n][m];\n}",
    "{\n\tlong result = 0;\n\tif (n == 0) \n\t{\n\t\treturn 1;\n\t}\n\tif (m == 0) \n\t{\n\t\treturn 0;\n\t}\n\tif (m == 1) \n\t{\n\t\treturn 1;\n\t}\n\tif (n == m) \n\t{\n\t\treturn 1;\n\t}\n\tif (m > n) \n\t{\n\t\treturn 0;\n\t}\n\tresult = eulerian_num(n - 1, m - 1) + (n - m + 1) * eulerian_num(n - 1, m);\n\treturn result;\n}",
    "{\n\tif (n < 0 || m < 0 || n < m)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + m * eulerian_num(n - 1, m);\n}",
    "{\n\tif (m > n) return 0;\n\tif (m == 0 || m == n) return 1;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + m * eulerian_num(n, m - 1);\n}",
    "{\n\tlong result = 0;\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (m == 1)\n\t\treturn 1;\n\tif (m > n)\n\t\treturn 0;\n\tif (m == n)\n\t\treturn 1;\n\tif (m < n)\n\t\treturn eulerian_num(n - 1, m - 1) + (n - m + 1) * eulerian_num(n - 1, m);\n\treturn result;\n}",
    "{\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (m > n)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}",
    "{\n\tlong result = 0;\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (m == 1)\n\t\treturn factorial(n);\n\tif (n == m)\n\t\treturn 1;\n\tif (n > m)\n\t\treturn eulerian_num(n - 1, m - 1) + (n - 1) * eulerian_num(n - 1, m);\n\treturn 0;\n}",
    "{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (m > n)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}",
    "{\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (n == 1) return 1;\n\tif (m == 1) return 1;\n\tif (n < m) return 0;\n\tif (n == m) return 1;\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n;\n\tif (n < m)\n\t\treturn 0;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}",
    "{\n\tlong[long] fact = new long[long];\n\tfact[0] = 1;\n\tforeach(i; 1 .. n + 1)\n\t\tfact[i] = fact[i - 1] * i;\n\t\n\tlong[long] binom = new long[long];\n\tbinom[0] = 1;\n\tforeach(i; 1 .. n + 1)\n\t\tbinom[i] = binom[i - 1] * (n - i + 1) / i;\n\t\n\tlong[long] eulerian = new long[long];\n\teulerian[0] = 1;\n\tforeach(i; 1 .. n + 1)\n\t\teulerian[i] = eulerian[i - 1] * (n - i + 1) / i;\n\t\n\tlong[long] eulerian_sum = new long[long];\n\teulerian_sum[0] = 1;\n\tforeach(i; 1 .. n + 1)\n\t\teulerian_sum[i] = eulerian_sum[i - 1] + eulerian[i];\n\t\n\tlong[long] eulerian_sum_pow = new long[long];\n\teulerian_sum_pow[0] = 1;\n\tforeach(i; 1 .. n + 1)\n\t\teulerian_sum_pow[i] = eulerian_sum_pow[i - 1] * eulerian_sum[i];\n\t\n\tlong[long] eulerian_sum_pow_sum = new long[long];\n\teulerian_sum_pow_sum[0] = 1;\n\tforeach(i; 1 .. n + 1)\n\t\teulerian_sum_pow_sum[i] = eulerian_sum_pow_sum[i - 1] + eulerian_sum_pow[i];\n\t\n\tlong[long] eulerian_sum_pow_sum_pow = new long[long];\n\teulerian_sum_pow_sum_pow[0] = 1;\n\tforeach(i; 1 .. n + 1)",
    "{\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (m > n)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n < 0 || m < 0) return 0;\n\tif (m == 0) return 1;\n\tif (m > n) return 0;\n\tif (m == n) return 1;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}",
    "{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}",
    "{\n\tlong result = 0;\n\tif (n == 0 || m == 0) \n\t{\n\t\tresult = 1;\n\t}\n\telse if (n == 1 || m == 1) \n\t{\n\t\tresult = n;\n\t}\n\telse if (n < m) \n\t{\n\t\tresult = 0;\n\t}\n\telse \n\t{\n\t\tresult = (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n\t}\n\treturn result;\n}",
    "{\n\tif (n < 0 || m < 0) return 0;\n\tif (n == 0 || m == 0) return 1;\n\tif (n == 1 || m == 1) return n;\n\tif (n == m) return factorial(n);\n\tif (n < m) return 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (n == 1)\n\t\treturn 1;\n\tif (m == 1)\n\t\treturn 1;\n\tif (n < m)\n\t\treturn 0;\n\tif (n == m)\n\t\treturn 1;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}",
    "{\n\tif (n < 0 || m < 0 || n < m)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 1 && m == 0)\n\t\treturn 1;\n\tif (n == 1 && m == 1)\n\t\treturn 1;\n\tif (n == m)\n\t\treturn 1;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (n == 1) return 1;\n\tif (m == 1) return 1;\n\tif (n < m) return 0;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}",
    "{\n\tlong result = 0;\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (n == 1) return 1;\n\tif (m == 1) return 1;\n\tif (m == n) return 1;\n\tif (m > n) return 0;\n\tfor (long i = 0; i <= m; i++)\n\t{\n\t\tresult += pow(-1, i) * eulerian_num(n - 1, m - i);\n\t}\n\treturn result;\n}",
    "{\n\tif (n < 0 || m < 0 || n < m) return 0;\n\tif (n == 0 && m == 0) return 1;\n\tif (n == 1 && m == 1) return 1;\n\tif (n == 1 && m == 0) return 1;\n\tif (m == 0) return 1;\n\tif (m == 1) return n;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n;\n\tif (n < m)\n\t\treturn 0;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}",
    "{\n\tif (n < 0 || m < 0 || n < m) \n\t{\n\t\treturn 0;\n\t}\n\tif (n == 0 && m == 0) \n\t{\n\t\treturn 1;\n\t}\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n < 0 || m < 0) return 0;\n\tif (n == 0 && m == 0) return 1;\n\tif (n == 0 || m == 0) return 0;\n\tif (n == 1 || m == 1) return 1;\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n < 0 || m < 0) return 0;\n\tif (n == 0 || m == 0) return 1;\n\tif (n == 1) return m + 1;\n\tif (m == 1) return n + 1;\n\tif (n == m) return 1;\n\t\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\t// n >= m\n\tif(n < m)\n\t\treturn 0;\n\t\n\tif(n == m)\n\t\treturn 1;\n\t\n\tif(m == 0)\n\t\treturn 1;\n\t\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}",
    "{\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n;\n\tif (n == m)\n\t\treturn factorial(n);\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + m * eulerian_num(n - 1, m - 1);\n}",
    "{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n < m) \n\t{\n\t\treturn 0;\n\t}\n\tif (n == m) \n\t{\n\t\treturn 1;\n\t}\n\tif (m == 0) \n\t{\n\t\treturn 1;\n\t}\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}",
    "{\n\tif (n < 0 || m < 0) \n\t{\n\t\treturn 0;\n\t}\n\tif (n == 0 && m == 0) \n\t{\n\t\treturn 1;\n\t}\n\tif (n == 0 || m == 0) \n\t{\n\t\treturn 0;\n\t}\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tlong result = 0;\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (m > n) return 0;\n\tif (m == 1) return 1;\n\tif (m == n) return 1;\n\tif (m == n - 1) return n;\n\tif (m == n - 2) return (n * (n - 1)) / 2;\n\tif (m == n - 3) return (n * (n - 1) * (n - 2)) / 6;\n\tif (m == n - 4) return (n * (n - 1) * (n - 2) * (n - 3)) / 24;\n\tif (m == n - 5) return (n * (n - 1) * (n - 2) * (n - 3) * (n - 4)) / 120;\n\tif (m == n - 6) return (n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5)) / 720;\n\tif (m == n - 7) return (n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6)) / 5040;\n\tif (m == n - 8) return (n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7)) / 40320;\n\tif (m == n - 9) return (n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8)) / 362880;\n\tif (m == n - 10) return (n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9)) / 3628800;\n\tif (m == n - 11) return (n * (",
    "{\n\tlong result = 0;\n\tif (n == 0) \n\t{\n\t\tresult = 1;\n\t}\n\telse if (m == 0) \n\t{\n\t\tresult = 0;\n\t}\n\telse if (n == 1) \n\t{\n\t\tresult = 1;\n\t}\n\telse if (m == 1) \n\t{\n\t\tresult = 1;\n\t}\n\telse if (n < m) \n\t{\n\t\tresult = 0;\n\t}\n\telse \n\t{\n\t\tresult = (m * eulerian_num(n - 1, m) + (n - m) * eulerian_num(n - 1, m - 1));\n\t}\n\treturn result;\n}",
    "{\n\tif (n < 0 || m < 0) \n\t\treturn 0;\n\tif (n == 0 || m == 0) \n\t\treturn 1;\n\tif (n < m) \n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tlong result = 0;\n\tif (n == 0 && m == 0) \n\t{\n\t\tresult = 1;\n\t}\n\telse if (n == 0 || m == 0) \n\t{\n\t\tresult = 0;\n\t}\n\telse \n\t{\n\t\tresult = (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n\t}\n\treturn result;\n}",
    "{\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (m == 1)\n\t\treturn 1;\n\tif (n == 1)\n\t\treturn 1;\n\tif (m > n)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tlong result = 0;\n\tif (m == 0)\n\t\treturn 1;\n\tif (n == 0)\n\t\treturn 0;\n\tif (m > n)\n\t\treturn 0;\n\tif (m == n)\n\t\treturn 1;\n\tif (m == 1)\n\t\treturn 1;\n\tif (m == n - 1)\n\t\treturn n;\n\tif (m == n - 2)\n\t\treturn n * (n - 1) / 2;\n\tif (m == n - 3)\n\t\treturn n * (n - 1) * (n - 2) / 6;\n\tif (m == n - 4)\n\t\treturn n * (n - 1) * (n - 2) * (n - 3) / 24;\n\tif (m == n - 5)\n\t\treturn n * (n - 1) * (n - 2) * (n - 3) * (n - 4) / 120;\n\tif (m == n - 6)\n\t\treturn n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) / 720;\n\tif (m == n - 7)\n\t\treturn n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) / 5040;\n\tif (m == n - 8)\n\t\treturn n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) / 40320;\n\tif (m == n - 9)\n\t\treturn n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) / 362880;\n\tif (m == n - 10)\n\t\treturn n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (",
    "{\n\tif(n == 0 && m == 0)\n\t\treturn 1;\n\tif(n == 0 || m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n < 0 || m < 0 || n < m)\n\t\treturn 0;\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == m)\n\t\treturn 1;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n < 0 || m < 0) return 0;\n\tif (n == 0 || m == 0) return 1;\n\tif (n == 1 || m == 1) return n;\n\tif (n == m) return 1;\n\tif (n < m) return 0;\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n < 0 || m < 0) return 0;\n\tif (n == 0 && m == 0) return 1;\n\tif (n == 0 || m == 0) return 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (m == 0)\n\t\treturn 1;\n\tif (m == 1)\n\t\treturn n;\n\tif (n == m)\n\t\treturn 1;\n\tif (n < m)\n\t\treturn 0;\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (m > n)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (m > n)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tlong result = 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\tif (n == m)\n\t\treturn 1;\n\tif (n > m)\n\t\treturn 0;\n\tif (n < m)\n\t\treturn factorial(m) / (factorial(n) * factorial(m - n)) * eulerian_num(n - 1, m - 1);\n}",
    "{\n\tif (n < 0 || m < 0) return 0;\n\tif (n == 0 || m == 0) return 1;\n\tif (n == 1 || m == 1) return n;\n\tif (n == m) return factorial(n);\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + m * eulerian_num(n - 1, m);\n}",
    "{\n\tlong result = 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\tif (n == m)\n\t\treturn 1;\n\tif (m > n)\n\t\treturn 0;\n\tfor (long i = 0; i <= n - m; i++)\n\t\tresult += eulerian_num(n - i, m - 1);\n\treturn result;\n}",
    "{\n\tlong result = 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\tif (n == m)\n\t\treturn 1;\n\tif (m > n)\n\t\treturn 0;\n\tif (m == 1)\n\t\treturn factorial(n - 1);\n\tresult += (n - m) * eulerian_num(n - 1, m - 1);\n\tresult += (m + 1) * eulerian_num(n - 1, m);\n\treturn result;\n}",
    "{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (m > n) return 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (m == 1) return 1;\n\tif (m > n) return 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}"
  ]
}
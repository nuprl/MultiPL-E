{
  "name": "mbpp_103_eulerian_num",
  "language": "d",
  "prompt": "import std.math;\n/*\n\n\tWrite a function to find the Eulerian number a(n, m).\n\t\n*/\nlong eulerian_num(long n, long m) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_103_eulerian_num.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = eulerian_num;\n\n    assert(candidate(3L, 1L) == 4L);\n    assert(candidate(4L, 1L) == 11L);\n    assert(candidate(5L, 3L) == 26L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tif (n == 0 || m == 0) return 1;\n\tif (n == 1 || m == 1) return n;\n\tif (n < m) return 0;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}",
    "{\n\tif (n == 0 && m == 0) return 1;\n\tif (n == 0 || m == 0) return 0;\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (m > n) return 0;\n\tif (m == n) return 1;\n\tif (m == 1) return factorial(n);\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + m * eulerian_num(n, m + 1);\n}",
    "{\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (m == 1)\n\t\treturn 1;\n\tif (n == m)\n\t\treturn 1;\n\tif (m > n)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}",
    "{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tlong result = 0;\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (n == 1)\n\t\treturn 1;\n\tif (m == 1)\n\t\treturn 1;\n\tif (n == m)\n\t\treturn 1;\n\tif (n < m)\n\t\treturn 0;\n\tif (n > m)\n\t\tresult = (n - m) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n\treturn result;\n}",
    "{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 0 || m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n < 0 || m < 0) return 0;\n\tif (n == 0 && m == 0) return 1;\n\tif (n == 0 || m == 0) return 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n < 0 || m < 0 || n < m)\n\t\treturn 0;\n\tif (n == 0 && m == 0)\n\t\treturn 1;\n\tif (n == 1 && m == 1)\n\t\treturn 1;\n\tif (n == 1 && m == 0)\n\t\treturn 0;\n\tif (m == 0)\n\t\treturn factorial(n - 1);\n\treturn (n - m) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n < 0 || m < 0)\n\t\treturn 0;\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n;\n\tif (n == m)\n\t\treturn 1;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1);\n}",
    "{\n\tif (n < 0 || m < 0) \n\t{\n\t\treturn 0;\n\t}\n\tif (n == 0 && m == 0) \n\t{\n\t\treturn 1;\n\t}\n\tif (n == 0 || m == 0) \n\t{\n\t\treturn 0;\n\t}\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (m > n) return 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n < 0 || m < 0) return 0;\n\tif (n == 0 || m == 0) return 1;\n\tif (n == 1 || m == 1) return n;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n}",
    "{\n\tif(n == 0 || m == 0) return 1;\n\tif(n == 1 || m == 1) return n;\n\tif(n < m) return 0;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}",
    "{\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (n == 1) return 1;\n\tif (m == 1) return 1;\n\tif (n < m) return 0;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}",
    "{\n\tif (n == 0 || m == 0)\n\t\treturn 1;\n\tif (n == 1 || m == 1)\n\t\treturn n;\n\tif (n < m)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}",
    "{\n\tif (n == 0) return 1;\n\tif (m == 0) return 0;\n\tif (n == 1) return 1;\n\tif (m == 1) return 1;\n\tif (n < m) return 0;\n\treturn (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1);\n}",
    "{\n\tif (n == 0)\n\t\treturn 1;\n\tif (m == 0)\n\t\treturn 0;\n\tif (m > n)\n\t\treturn 0;\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m);\n}",
    "{\n\tif (m > n)\n\t\treturn 0;\n\tif (m == 0 || m == n)\n\t\treturn 1;\n\treturn (n - m + 1) * eulerian_num(n, m - 1) + m * eulerian_num(n, m + 1);\n}"
  ]
}
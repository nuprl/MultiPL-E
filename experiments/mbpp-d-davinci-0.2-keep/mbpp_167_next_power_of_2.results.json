{
  "name": "mbpp_167_next_power_of_2",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_167_next_power_of_2.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p < n) \n\t{\n\t\tp <<= 1;\n\t}\n\treturn p;\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn (long)pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmpkvh37jb2.d(10): Error: C style cast illegal, use `cast(long)pow(2, ceil(log(n) / log(2)))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkvh37jb2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\tlong i = 1;\n\twhile(i < n) {\n\t\ti <<= 1;\n\t}\n\treturn i;\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn (long)pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmpkvh37jb2.d(10): Error: C style cast illegal, use `cast(long)pow(2, ceil(log(n) / log(2)))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkvh37jb2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n)/log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp98twcudm.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp98twcudm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p < n) {\n\t\tp <<= 1;\n\t}\n\treturn p;\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn long(pow(2, ceil(log(n) / log(2))));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmpjfs_uja3.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjfs_uja3.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p < n) \n\t{\n\t\tp <<= 1;\n\t}\n\treturn p;\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn 1 << (cast(int)ceil(log2(n)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\tlong result = 1;\n\twhile (result < n) \n\t{\n\t\tresult <<= 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n)/log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp98twcudm.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp98twcudm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p < n)\n\t\tp <<= 1;\n\treturn p;\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn 1 << (int)ceil(log2(n));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "/tmp/tmpsdf5lvmv.d(10): Error: C style cast illegal, use `cast(int)ceil(log2(n))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsdf5lvmv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p < n)\n\t\tp *= 2;\n\treturn p;\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn (long)pow(2, ceil(log2(n)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "/tmp/tmpdwza770s.d(10): Error: C style cast illegal, use `cast(long)pow(2, ceil(log2(n)))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdwza770s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn cast(long)pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_nf_yb7c.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x428a6d]\n??:? void tmp_nf_yb7c.__unittest_L12_C1() [0x427e7d]\n??:? void tmp_nf_yb7c.__modtest() [0x4287ec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c987]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b81a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4309ad]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430e5c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430939]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b7f1]\n??:? runModuleUnitTests [0x42c75d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428ebc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n)/log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp98twcudm.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp98twcudm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p < n)\n\t{\n\t\tp *= 2;\n\t}\n\treturn p;\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p < n) \n\t{\n\t\tp <<= 1;\n\t}\n\treturn p;\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn 1 << (int)ceil(log2(n));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "/tmp/tmpsdf5lvmv.d(10): Error: C style cast illegal, use `cast(int)ceil(log2(n))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsdf5lvmv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn cast(long)pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_nf_yb7c.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x428a6d]\n??:? void tmp_nf_yb7c.__unittest_L12_C1() [0x427e7d]\n??:? void tmp_nf_yb7c.__modtest() [0x4287ec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c987]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b81a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4309ad]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430e5c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430939]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b7f1]\n??:? runModuleUnitTests [0x42c75d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428ebc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn 1 << (cast(int) ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn 1 << (int)ceil(log2(n));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "/tmp/tmpsdf5lvmv.d(10): Error: C style cast illegal, use `cast(int)ceil(log2(n))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsdf5lvmv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n)/log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp98twcudm.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp98twcudm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n)/log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp98twcudm.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp98twcudm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn 1 << (cast(int)ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p < n)\n\t\tp <<= 1;\n\treturn p;\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn (long)pow(2, ceil(log(n)/log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "/tmp/tmp7_ik73gi.d(10): Error: C style cast illegal, use `cast(long)pow(2, ceil(log(n) / log(2)))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7_ik73gi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn 1 << (int) ceil(log2(n));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "/tmp/tmpt8nuyu76.d(10): Error: C style cast illegal, use `cast(int)ceil(log2(n))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt8nuyu76.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p < n) \n\t{\n\t\tp *= 2;\n\t}\n\treturn p;\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\tlong p = 1;\n\twhile(p < n)\n\t\tp *= 2;\n\treturn p;\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p < n)\n\t\tp <<= 1;\n\treturn p;\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p < n) \n\t{\n\t\tp <<= 1;\n\t}\n\treturn p;\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn 1 << (int)ceil(log2(n));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "/tmp/tmpsdf5lvmv.d(10): Error: C style cast illegal, use `cast(int)ceil(log2(n))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsdf5lvmv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p < n) {\n\t\tp *= 2;\n\t}\n\treturn p;\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p < n) {\n\t\tp <<= 1;\n\t}\n\treturn p;\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn cast(long)pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_nf_yb7c.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x428a6d]\n??:? void tmp_nf_yb7c.__unittest_L12_C1() [0x427e7d]\n??:? void tmp_nf_yb7c.__modtest() [0x4287ec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c987]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b81a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4309ad]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430e5c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430939]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b7f1]\n??:? runModuleUnitTests [0x42c75d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428ebc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn (long)pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmpkvh37jb2.d(10): Error: C style cast illegal, use `cast(long)pow(2, ceil(log(n) / log(2)))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkvh37jb2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn 1 << (int)ceil(log2(n));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "/tmp/tmpsdf5lvmv.d(10): Error: C style cast illegal, use `cast(int)ceil(log2(n))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsdf5lvmv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn 1L << (cast(int) ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn 1 << (cast(int)ceil(log2(n)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn 1 << (cast(int) ceil(log2(n)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn 1 << (int)ceil(log2(n));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "/tmp/tmpsdf5lvmv.d(10): Error: C style cast illegal, use `cast(int)ceil(log2(n))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsdf5lvmv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn (long)pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmpkvh37jb2.d(10): Error: C style cast illegal, use `cast(long)pow(2, ceil(log(n) / log(2)))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkvh37jb2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn 1 << (cast(int) ceil(log2(n)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn 1 << (size_t)ceil(log2(n));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "/tmp/tmpy6bffsuz.d(10): Error: C style cast illegal, use `cast(size_t)ceil(log2(n))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpy6bffsuz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn 1 << (cast(int)ceil(log2(n)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n)/log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp98twcudm.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp98twcudm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n)/log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp98twcudm.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp98twcudm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{ \n\treturn pow(2, ceil(log(n) / log(2))); \n} \nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "/tmp/tmpj0m5f9dw.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj0m5f9dw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn 1 << (int)ceil(log2(n));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "/tmp/tmpsdf5lvmv.d(10): Error: C style cast illegal, use `cast(int)ceil(log2(n))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsdf5lvmv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn (long)pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmpkvh37jb2.d(10): Error: C style cast illegal, use `cast(long)pow(2, ceil(log(n) / log(2)))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkvh37jb2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p < n)\n\t\tp *= 2;\n\treturn p;\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn 1 << (int)ceil(log2(n));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "/tmp/tmpsdf5lvmv.d(10): Error: C style cast illegal, use `cast(int)ceil(log2(n))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsdf5lvmv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p < n)\n\t\tp <<= 1;\n\treturn p;\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p < n)\n\t\tp <<= 1;\n\treturn p;\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn 1L << (cast(int)ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn 1 << (cast(int) ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn 1 << (cast(int) ceil(log2(n)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p < n) \n\t{\n\t\tp <<= 1;\n\t}\n\treturn p;\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n)/log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp98twcudm.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp98twcudm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn 1 << (cast(int)ceil(log2(n)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{ \n\tlong p = 1; \n\tif (n && !(n & (n - 1))) \n\t\treturn n; \n\twhile (p < n) \n\t\tp <<= 1; \n\treturn p; \n} \nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n)/log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp98twcudm.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp98twcudm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\tlong p = 1;\n\twhile(p < n) \n\t{\n\t\tp *= 2;\n\t}\n\treturn p;\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p < n)\n\t\tp <<= 1;\n\treturn p;\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn 1 << (cast(int)ceil(log2(n)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n)/log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp98twcudm.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp98twcudm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn cast(long)pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_nf_yb7c.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x428a6d]\n??:? void tmp_nf_yb7c.__unittest_L12_C1() [0x427e7d]\n??:? void tmp_nf_yb7c.__modtest() [0x4287ec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c987]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b81a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4309ad]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430e5c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430939]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b7f1]\n??:? runModuleUnitTests [0x42c75d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428ebc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn 1 << (long)ceil(log2(n));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "/tmp/tmp5te2f69v.d(10): Error: C style cast illegal, use `cast(long)ceil(log2(n))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5te2f69v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn (long)pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmpkvh37jb2.d(10): Error: C style cast illegal, use `cast(long)pow(2, ceil(log(n) / log(2)))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkvh37jb2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn 1L << (cast(long)ceil(log2(n)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn 1 << (int) ceil(log2(n));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "/tmp/tmpt8nuyu76.d(10): Error: C style cast illegal, use `cast(int)ceil(log2(n))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt8nuyu76.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn 1 << (cast(int)ceil(log2(n)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n)/log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp98twcudm.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp98twcudm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn (long)pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmpkvh37jb2.d(10): Error: C style cast illegal, use `cast(long)pow(2, ceil(log(n) / log(2)))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkvh37jb2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn 1 << (cast(int)ceil(log2(n)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn 1 << (cast(int) ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p < n) {\n\t\tp <<= 1;\n\t}\n\treturn p;\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n)/log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp98twcudm.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp98twcudm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n)/log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp98twcudm.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp98twcudm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p < n)\n\t\tp <<= 1;\n\treturn p;\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn 1 << (cast(int) ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn 1L << (cast(long)ceil(log2(n)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn 1 << (int)ceil(log2(n));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "/tmp/tmpsdf5lvmv.d(10): Error: C style cast illegal, use `cast(int)ceil(log2(n))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsdf5lvmv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p < n) \n\t{\n\t\tp *= 2;\n\t}\n\treturn p;\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn 1 << (int)ceil(log2(n));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "/tmp/tmpsdf5lvmv.d(10): Error: C style cast illegal, use `cast(int)ceil(log2(n))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsdf5lvmv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn cast(long)pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_nf_yb7c.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x428a6d]\n??:? void tmp_nf_yb7c.__unittest_L12_C1() [0x427e7d]\n??:? void tmp_nf_yb7c.__modtest() [0x4287ec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c987]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b81a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4309ad]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430e5c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430939]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b7f1]\n??:? runModuleUnitTests [0x42c75d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428ebc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn (long)pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmpkvh37jb2.d(10): Error: C style cast illegal, use `cast(long)pow(2, ceil(log(n) / log(2)))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkvh37jb2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn (long)pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmpkvh37jb2.d(10): Error: C style cast illegal, use `cast(long)pow(2, ceil(log(n) / log(2)))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkvh37jb2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn (long)pow(2, ceil(log(n)/log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "/tmp/tmp7_ik73gi.d(10): Error: C style cast illegal, use `cast(long)pow(2, ceil(log(n) / log(2)))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7_ik73gi.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n    return pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "/tmp/tmp1euzd7hp.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1euzd7hp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn 1 << (cast(int)ceil(log2(n)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn 1 << (cast(int) ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn 1 << (cast(int)log2(n) + 1);\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8z1djj74.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmp8z1djj74.__unittest_L12_C1() [0x427a91]\n??:? void tmp8z1djj74.__modtest() [0x427ae8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba9f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a932]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff74]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa51]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a909]\n??:? runModuleUnitTests [0x42b875]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p < n)\n\t\tp <<= 1;\n\treturn p;\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517467,
      "stdout": "",
      "stderr": "/tmp/tmp5q9jsft8.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5q9jsft8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\treturn cast(long)pow(2, ceil(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_nf_yb7c.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x428a6d]\n??:? void tmp_nf_yb7c.__unittest_L12_C1() [0x427e7d]\n??:? void tmp_nf_yb7c.__modtest() [0x4287ec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c987]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b81a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4309ad]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430e5c]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430939]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b7f1]\n??:? runModuleUnitTests [0x42c75d]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428ebc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the smallest power of 2 greater than or equal to n.\n\t\n*/\nlong next_power_of_2(long n) \n{\n\tlong p = 1;\n\twhile(p < n) \n\t\tp <<= 1;\n\treturn p;\n}\nunittest\n{\n    alias candidate = next_power_of_2;\n\n    assert(candidate(0L) == 1L);\n    assert(candidate(5L) == 8L);\n    assert(candidate(17L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
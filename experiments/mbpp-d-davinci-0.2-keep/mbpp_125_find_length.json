{
  "name": "mbpp_125_find_length",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\n*/\nlong find_length(string string) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_125_find_length.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = find_length;\n\n    assert(candidate(\"11000010001\") == 6L);\n    assert(candidate(\"10111\") == 1L);\n    assert(candidate(\"11011101100101\") == 2L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tlong length = 0;\n\tforeach(char c; string) \n\t{\n\t\tif(c == '1') \n\t\t{\n\t\t\tlength++;\n\t\t}\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '1' || c == '0')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{ \n\tlong len = 0;\n\tforeach(c; string)\n\t\tlen++;\n\treturn len;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string) \n\t{\n\t\tif (c == '1') \n\t\t{\n\t\t\tlength++;\n\t\t}\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '1')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == '1' || c == '0')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong max_length = 0;\n\tlong count_0 = 0;\n\tlong count_1 = 0;\n\t\n\tforeach(ch; string)\n\t{\n\t\tif(ch == '0')\n\t\t\tcount_0++;\n\t\telse\n\t\t\tcount_1++;\n\t\t\n\t\tif(count_0 == count_1)\n\t\t\tmax_length = max(max_length, count_0 + count_1);\n\t\telse if(count_0 > count_1)\n\t\t{\n\t\t\tcount_0 = 0;\n\t\t\tcount_1 = 0;\n\t\t}\n\t}\n\t\n\tcount_0 = 0;\n\tcount_1 = 0;\n\t\n\tforeach(ch; string)\n\t{\n\t\tif(ch == '0')\n\t\t\tcount_0++;\n\t\telse\n\t\t\tcount_1++;\n\t\t\n\t\tif(count_1 == count_0)\n\t\t\tmax_length = max(max_length, count_0 + count_1);\n\t\telse if(count_1 > count_0)\n\t\t{\n\t\t\tcount_0 = 0;\n\t\t\tcount_1 = 0;\n\t\t}\n\t}\n\t\n\treturn max_length;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '1')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == '0' || c == '1')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong count = 0;\n\tforeach(char c; string)\n\t{\n\t\tif (c == '1')\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == '1' || c == '0')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string)\n\t\tlength++;\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '1')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong len = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '1')\n\t\t\tlen++;\n\t}\n\treturn len;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '1' || c == '0')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string) \n\t{\n\t\tif(c == '0' || c == '1') \n\t\t{\n\t\t\tlength++;\n\t\t}\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == '0' || c == '1')\n\t\t{\n\t\t\tlength++;\n\t\t}\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(character; string)\n\t{\n\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == '1' || c == '0')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(ch; string)\n\t{\n\t\tif(ch == '1' || ch == '0')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == '0' || c == '1')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{ \n    long n = string.length(); \n    long max_len = 0; \n    long zeros = 0, ones = 0; \n    for (long i = 0; i < n; i++) \n    { \n        if (string[i] == '0') \n            zeros++; \n        else\n            ones++; \n        if (zeros == ones) \n            max_len = max(max_len, zeros + ones); \n        else if (zeros > ones) \n        { \n            zeros = 0; \n            ones = 0; \n        } \n    } \n    zeros = 0; \n    ones = 0; \n    for (long i = n - 1; i >= 0; i--) \n    { \n        if (string[i] == '0') \n            zeros++; \n        else\n            ones++; \n        if (zeros == ones) \n            max_len = max(max_len, zeros + ones); \n        else if (zeros < ones) \n        { \n            zeros = 0; \n            ones = 0; \n        } \n    } \n    return max_len; \n} ",
    "{\n\tlong length = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '1' || c == '0')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '0' || c == '1')\n\t\t{\n\t\t\tlength++;\n\t\t}\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '1' || c == '0')\n\t\t{\n\t\t\tlength++;\n\t\t}\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '0' || c == '1')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach (char c; string) \n\t{\n\t\tif (c == '1' || c == '0') \n\t\t{\n\t\t\tlength++;\n\t\t}\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string) \n\t{\n\t\tif(c == '1') \n\t\t{\n\t\t\tlength++;\n\t\t}\n\t}\n\treturn length;\n}",
    "{ \n    long n = string.length(); \n    long max_len = 0; \n    long zero_count = 0, one_count = 0; \n    for (long i = 0; i < n; i++) \n    { \n        if (string[i] == '0') \n            zero_count = 0; \n        else\n        { \n            one_count = 0; \n            while (i < n && string[i] == '1') \n            { \n                one_count++; \n                i++; \n            } \n            max_len = max(max_len, one_count + zero_count); \n            i--; \n        } \n    } \n    return max_len; \n} ",
    "{\n\treturn string.length;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == '0' || c == '1')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == '1' || c == '0')\n\t\t{\n\t\t\tlength++;\n\t\t}\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == '1')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == '1' || c == '0')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == '1' || c == '0')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '1')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tlong max_length = 0;\n\tlong count_0 = 0;\n\tlong count_1 = 0;\n\t\n\tforeach(ch; string)\n\t{\n\t\tif(ch == '0')\n\t\t{\n\t\t\tcount_0++;\n\t\t\tlength++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcount_1++;\n\t\t\tlength++;\n\t\t}\n\t\t\n\t\tif(count_0 == count_1)\n\t\t{\n\t\t\tmax_length = max(max_length, length);\n\t\t\tlength = 0;\n\t\t\tcount_0 = 0;\n\t\t\tcount_1 = 0;\n\t\t}\n\t}\n\t\n\treturn max_length;\n}",
    "{\n\tlong length = 0;\n\tlong max_length = 0;\n\tlong zero_count = 0;\n\tlong one_count = 0;\n\tforeach(char c; string) \n\t{\n\t\tif(c == '0') \n\t\t{\n\t\t\tzero_count++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tone_count++;\n\t\t}\n\t\tif(zero_count == one_count) \n\t\t{\n\t\t\tlength = zero_count + one_count;\n\t\t\tif(length > max_length) \n\t\t\t{\n\t\t\t\tmax_length = length;\n\t\t\t}\n\t\t}\n\t}\n\treturn max_length;\n}",
    "{ \n\tlong n = string.length; \n\tlong max_len = 0; \n\tlong zeros = 0, ones = 0; \n\tfor (long i = 0; i < n; i++) \n\t{ \n\t\tif (string[i] == '0') \n\t\t\tzeros++; \n\t\telse\n\t\t\tones++; \n\t\tif (zeros == ones) \n\t\t\tmax_len = max(max_len, zeros + ones); \n\t\telse if (zeros > ones) \n\t\t{ \n\t\t\tzeros = 0; \n\t\t\tones = 0; \n\t\t} \n\t} \n\tzeros = 0; \n\tones = 0; \n\tfor (long i = n - 1; i >= 0; i--) \n\t{ \n\t\tif (string[i] == '0') \n\t\t\tzeros++; \n\t\telse\n\t\t\tones++; \n\t\tif (zeros == ones) \n\t\t\tmax_len = max(max_len, zeros + ones); \n\t\telse if (zeros < ones) \n\t\t{ \n\t\t\tzeros = 0; \n\t\t\tones = 0; \n\t\t} \n\t} \n\treturn max_len; \n} ",
    "{\n\tlong length = 0;\n\tforeach(character; string)\n\t{\n\t\tif(character == '1' || character == '0')\n\t\t{\n\t\t\tlength++;\n\t\t}\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string) \n\t{\n\t\tif(c == '1') \n\t\t{\n\t\t\tlength++;\n\t\t}\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string)\n\t\tlength++;\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tlong count = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '0')\n\t\t\tcount++;\n\t\telse\n\t\t\tcount--;\n\t\tif(count < 0)\n\t\t{\n\t\t\tlength = max(length, count * -1);\n\t\t\tcount = 0;\n\t\t}\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == '1')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == '1' || c == '0')\n\t\t{\n\t\t\tlength++;\n\t\t}\n\t}\n\treturn length;\n}",
    "{ \n    long len = string.length; \n    long max_len = 0; \n    long zeros = 0, ones = 0; \n  \n    for (long i = 0; i < len; i++) { \n        if (string[i] == '0') \n            zeros++; \n        else\n            ones++; \n  \n        if (zeros == ones) \n            max_len = max(max_len, 2 * ones); \n  \n        else if (zeros > ones) { \n            zeros = 0; \n            ones = 0; \n        } \n    } \n  \n    zeros = 0; \n    ones = 0; \n  \n    for (long i = len - 1; i >= 0; i--) { \n        if (string[i] == '0') \n            zeros++; \n        else\n            ones++; \n  \n        if (zeros == ones) \n            max_len = max(max_len, 2 * zeros); \n  \n        else if (zeros < ones) { \n            zeros = 0; \n            ones = 0; \n        } \n    } \n  \n    return max_len; \n} ",
    "{\n\tlong length = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == '1')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '1' || c == '0')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong max_length = 0;\n\tlong count = 0;\n\tlong zero_count = 0;\n\tlong one_count = 0;\n\t\n\tforeach(char c; string)\n\t{\n\t\tif(c == '0')\n\t\t{\n\t\t\tzero_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tone_count++;\n\t\t}\n\t\t\n\t\tif(zero_count == one_count)\n\t\t{\n\t\t\tcount = zero_count + one_count;\n\t\t\tmax_length = max(count, max_length);\n\t\t}\n\t}\n\t\n\tzero_count = 0;\n\tone_count = 0;\n\t\n\tforeach_reverse(char c; string)\n\t{\n\t\tif(c == '0')\n\t\t{\n\t\t\tzero_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tone_count++;\n\t\t}\n\t\t\n\t\tif(zero_count == one_count)\n\t\t{\n\t\t\tcount = zero_count + one_count;\n\t\t\tmax_length = max(count, max_length);\n\t\t}\n\t}\n\t\n\treturn max_length;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == '0' || c == '1')\n\t\t{\n\t\t\tlength++;\n\t\t}\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == '0' || c == '1')\n\t\t{\n\t\t\tlength++;\n\t\t}\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string) \n\t{\n\t\tif(c == '1') \n\t\t{\n\t\t\tlength++;\n\t\t}\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == '1' || c == '0')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == '1' || c == '0')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong count = 0;\n\tlong max = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '0')\n\t\t\tcount++;\n\t\telse\n\t\t\tcount--;\n\t\tif(count > max)\n\t\t\tmax = count;\n\t}\n\treturn max;\n}",
    "{\n\tlong length = 0;\n\tlong max_length = 0;\n\tlong count_0 = 0;\n\tlong count_1 = 0;\n\tlong i = 0;\n\twhile (i < string.length)\n\t{\n\t\tif (string[i] == '0')\n\t\t{\n\t\t\tcount_0++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcount_1++;\n\t\t}\n\t\tif (count_0 == count_1)\n\t\t{\n\t\t\tlength = count_0 + count_1;\n\t\t\tmax_length = max(length, max_length);\n\t\t}\n\t\ti++;\n\t}\n\treturn max_length;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == '1' || c == '0')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '1' || c == '0')\n\t\t{\n\t\t\tlength++;\n\t\t}\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(character; string)\n\t{\n\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '1')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong max_diff = 0;\n\tlong count_zero = 0;\n\tlong count_one = 0;\n\t\n\tforeach(char c; string)\n\t{\n\t\tif(c == '0')\n\t\t\tcount_zero++;\n\t\telse\n\t\t\tcount_one++;\n\t\t\n\t\tmax_diff = max(max_diff, abs(count_zero - count_one));\n\t}\n\t\n\treturn max_diff;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == '0' || c == '1')\n\t\t{\n\t\t\tlength++;\n\t\t}\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tlong count = 0;\n\tlong max_count = 0;\n\t\n\tforeach(char c; string)\n\t{\n\t\tif(c == '0')\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcount--;\n\t\t}\n\t\t\n\t\tif(count == 0)\n\t\t{\n\t\t\tmax_count = max(max_count, length);\n\t\t}\n\t\telse if(count < 0)\n\t\t{\n\t\t\tcount = 0;\n\t\t\tlength = 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlength++;\n\t\t}\n\t}\n\t\n\treturn max_count;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string) \n\t{\n\t\tif(c == '1' || c == '0') \n\t\t{\n\t\t\tlength++;\n\t\t}\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '1' || c == '0')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == '1')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string) \n\t{\n\t\tif(c == '1') \n\t\t{\n\t\t\tlength++;\n\t\t}\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '1' || c == '0')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{ \n    long n = string.length(); \n    long max_len = 0; \n    long zero_count = 0, one_count = 0; \n    for (long i = 0; i < n; i++) \n    { \n        if (string[i] == '0') \n            zero_count = 0; \n        else\n        { \n            one_count++; \n            zero_count++; \n        } \n        if (one_count == zero_count) \n            max_len = max(max_len, 2*one_count); \n        else if (one_count > zero_count) \n            max_len = max(max_len, 2*zero_count); \n        else\n            max_len = max(max_len, 2*one_count); \n    } \n    return max_len; \n} ",
    "{\n\tlong length = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == '0' || c == '1')\n\t\t{\n\t\t\tlength++;\n\t\t}\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string)\n\t\tlength++;\n\treturn length;\n}",
    "{\n\tlong count = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '1')\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; string) \n\t{\n\t\tif(i == '1') \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '1' || c == '0')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == '0' || c == '1')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tfor (int i = 0; i < string.length; i++) \n\t{\n\t\tif (string[i] == '1') \n\t\t{\n\t\t\tlength++;\n\t\t}\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == '1' || c == '0')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == '1' || c == '0')\n\t\t{\n\t\t\tlength++;\n\t\t}\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '1')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(ch; string)\n\t{\n\t\tif(ch == '1')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '1' || c == '0')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(element; string)\n\t{\n\t\tif(element == '1')\n\t\t\tlength++;\n\t}\n\treturn length;\n}\nlong find_max_diff(string string) \n{\n\tlong length = find_length(string);\n\tlong max_diff = 0;\n\tlong diff = 0;\n\tforeach(element; string)\n\t{\n\t\tif(element == '1')\n\t\t\tdiff++;\n\t\telse\n\t\t\tdiff--;\n\t\tmax_diff = max(max_diff, abs(diff));\n\t}\n\treturn max_diff;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '1')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '1')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '1')\n\t\t{\n\t\t\tlength++;\n\t\t}\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '0' || c == '1')\n\t\t{\n\t\t\tlength++;\n\t\t}\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == '0' || c == '1')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == '1' || c == '0')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\treturn string.length;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == '1')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '1')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '1' || c == '0')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == '1' || c == '0')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == '1')\n\t\t{\n\t\t\tlength++;\n\t\t}\n\t}\n\treturn length;\n}",
    "{ \n    long n = string.length(); \n    long max_len = 0; \n    long zero_count = 0, one_count = 0; \n    for (long i = 0; i < n; i++) \n    { \n        if (string[i] == '0') \n            zero_count++; \n        else\n            one_count++; \n        if (zero_count == one_count) \n            max_len = max(max_len, i + 1); \n        else if (zero_count > one_count) \n        { \n            zero_count = 0; \n            one_count = 0; \n        } \n    } \n    zero_count = 0; \n    one_count = 0; \n    for (long i = n - 1; i >= 0; i--) \n    { \n        if (string[i] == '0') \n            zero_count++; \n        else\n            one_count++; \n        if (zero_count == one_count) \n            max_len = max(max_len, n - i); \n        else if (one_count > zero_count) \n        { \n            zero_count = 0; \n            one_count = 0; \n        } \n    } \n    return max_len; \n} ",
    "{\n\tlong length = 0;\n\tforeach(ch; string)\n\t{\n\t\tif(ch == '1')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong count = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '1')\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '1' || c == '0')\n\t\t{\n\t\t\tlength++;\n\t\t}\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string)\n\t\tif(c == '1')\n\t\t\tlength++;\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '1' || c == '0')\n\t\t{\n\t\t\tlength++;\n\t\t}\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '1')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == '1' || c == '0')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong len = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == '0' || c == '1')\n\t\t\tlen++;\n\t}\n\treturn len;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == '1' || c == '0')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == '0' || c == '1')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '1')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '1')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == '1')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tlong count = 0;\n\tlong max = 0;\n\tlong min = 0;\n\tlong diff = 0;\n\t\n\tforeach(char c; string)\n\t{\n\t\tif(c == '1')\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcount--;\n\t\t}\n\t\t\n\t\tif(count > max)\n\t\t{\n\t\t\tmax = count;\n\t\t}\n\t\t\n\t\tif(count < min)\n\t\t{\n\t\t\tmin = count;\n\t\t}\n\t}\n\t\n\tdiff = max - min;\n\t\n\treturn diff;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == '1' || c == '0')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string) \n\t{\n\t\tif(c == '0' || c == '1') \n\t\t{\n\t\t\tlength++;\n\t\t}\n\t}\n\treturn length;\n}",
    "{ \n    long n = string.length(); \n    long max_len = 0; \n    long zeros = 0, ones = 0; \n    for (long i = 0; i < n; i++) \n    { \n        if (string[i] == '0') \n            zeros++; \n        else\n            ones++; \n        if (zeros == ones) \n            max_len = max(max_len, zeros + ones); \n        else if (zeros > ones) \n        { \n            zeros = 0; \n            ones = 0; \n        } \n    } \n    zeros = 0; \n    ones = 0; \n    for (long i = n - 1; i >= 0; i--) \n    { \n        if (string[i] == '0') \n            zeros++; \n        else\n            ones++; \n        if (zeros == ones) \n            max_len = max(max_len, zeros + ones); \n        else if (zeros < ones) \n        { \n            zeros = 0; \n            ones = 0; \n        } \n    } \n    return max_len; \n} ",
    "{\n\tlong count = 0;\n\tfor (long i = 0; i < string.length; i++) \n\t{\n\t\tif (string[i] == '0') \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '1')\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong length = 0;\n\tlong max_length = 0;\n\tlong count_zero = 0;\n\tlong count_one = 0;\n\t\n\tforeach(char c; string)\n\t{\n\t\tif(c == '0')\n\t\t\tcount_zero++;\n\t\telse\n\t\t\tcount_one++;\n\t\t\n\t\tif(count_zero == count_one)\n\t\t{\n\t\t\tlength = count_zero + count_one;\n\t\t\tmax_length = max(length, max_length);\n\t\t}\n\t}\n\t\n\tcount_zero = 0;\n\tcount_one = 0;\n\t\n\tforeach_reverse(char c; string)\n\t{\n\t\tif(c == '0')\n\t\t\tcount_zero++;\n\t\telse\n\t\t\tcount_one++;\n\t\t\n\t\tif(count_zero == count_one)\n\t\t{\n\t\t\tlength = count_zero + count_one;\n\t\t\tmax_length = max(length, max_length);\n\t\t}\n\t}\n\t\n\treturn max_length;\n}",
    "{\n\tlong length = 0;\n\tforeach(character; string)\n\t{\n\t\tif(character == '0' || character == '1')\n\t\t{\n\t\t\tlength++;\n\t\t}\n\t}\n\treturn length;\n}",
    "{ \n    long n = string.length(); \n    long max_len = 0; \n    long zero_count = 0, one_count = 0; \n    for (long i = 0; i < n; i++) \n    { \n        if (string[i] == '0') \n            zero_count = 0; \n        else\n        { \n            one_count = 0; \n            while (i < n && string[i] == '1') \n            { \n                one_count++; \n                i++; \n            } \n            max_len = max(max_len, one_count + zero_count); \n            i--; \n        } \n    } \n    return max_len; \n} ",
    "{\n\tlong length = 0;\n\tforeach(ch; string)\n\t{\n\t\tif(ch == '1')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{ \n    long n = string.length(); \n    long result = 0; \n    long count = 0; \n  \n    for (long i = 0; i < n; i++) { \n        count = (string[i] == '0') ? -1 : 1; \n        result = max(result, count); \n        for (long j = i + 1; j < n; j++) { \n            if (string[j] == '0') \n                count += -1; \n            else\n                count += 1; \n            result = max(result, count); \n        } \n    } \n    return result; \n} ",
    "{\n\tlong length = 0;\n\tforeach(character; string)\n\t{\n\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong max_length = 0;\n\tlong count = 0;\n\tlong zero_count = 0;\n\tlong one_count = 0;\n\t\n\tforeach(char c; string) \n\t{\n\t\tif(c == '0') \n\t\t{\n\t\t\tzero_count++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tone_count++;\n\t\t}\n\t\t\n\t\tif(zero_count == one_count) \n\t\t{\n\t\t\tmax_length = max(max_length, count);\n\t\t}\n\t\telse if(zero_count > one_count) \n\t\t{\n\t\t\tzero_count = 0;\n\t\t\tone_count = 0;\n\t\t\tcount = 0;\n\t\t}\n\t\tcount++;\n\t}\n\treturn max_length;\n}",
    "{\n\tlong length = 0;\n\tforeach(ch; string)\n\t{\n\t\tif(ch == '1')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string) \n\t{\n\t\tif(c == '0' || c == '1') \n\t\t{\n\t\t\tlength++;\n\t\t}\n\t}\n\treturn length;\n}",
    "{ \n    long n = string.length(); \n    long max_len = 0; \n    long zero_count = 0, one_count = 0; \n    for (long i = 0; i < n; i++) \n    { \n        if (string[i] == '0') \n            zero_count = 0; \n        else\n        { \n            one_count = 0; \n            while (i < n && string[i] == '1') \n            { \n                one_count++; \n                i++; \n            } \n            max_len = max(max_len, one_count + zero_count); \n            i--; \n        } \n    } \n    return max_len; \n} ",
    "{\n\tlong length = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '0' || c == '1')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == '1' || c == '0')\n\t\t{\n\t\t\tlength++;\n\t\t}\n\t}\n\treturn length;\n}",
    "{\n\tlong count = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == '1')\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string) \n\t{\n\t\tif(c == '1' || c == '0') \n\t\t{\n\t\t\tlength++;\n\t\t}\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tlong max_length = 0;\n\tlong count_zero = 0;\n\tlong count_one = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '0')\n\t\t{\n\t\t\tcount_zero++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcount_one++;\n\t\t}\n\t\tif(count_zero == count_one)\n\t\t{\n\t\t\tlength = count_zero + count_one;\n\t\t\tif(length > max_length)\n\t\t\t{\n\t\t\t\tmax_length = length;\n\t\t\t}\n\t\t}\n\t}\n\treturn max_length;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '1')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(ch; string)\n\t{\n\t\tif(ch == '1' || ch == '0')\n\t\t{\n\t\t\tlength++;\n\t\t}\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '1')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '1')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\treturn string.length;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string)\n\t\tlength++;\n\treturn length;\n}",
    "{\n\tlong count = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '1')\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '1' || c == '0')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '1')\n\t\t{\n\t\t\tlength++;\n\t\t}\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '1' || c == '0')\n\t\t{\n\t\t\tlength++;\n\t\t}\n\t}\n\treturn length;\n}",
    "{\n\tlong len = string.length;\n\tlong max_len = 0;\n\tlong count_0 = 0;\n\tlong count_1 = 0;\n\t\n\tfor(long i = 0; i < len; i++) \n\t{\n\t\tif(string[i] == '0') \n\t\t{\n\t\t\tcount_0++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tcount_1++;\n\t\t}\n\t\t\n\t\tif(count_0 == count_1) \n\t\t{\n\t\t\tmax_len = max(max_len, 2 * count_0);\n\t\t}\n\t\telse if(count_0 > count_1) \n\t\t{\n\t\t\tcount_1 = 0;\n\t\t\tcount_0 = 0;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tcount_0 = 0;\n\t\t\tcount_1 = 0;\n\t\t}\n\t}\n\t\n\tcount_0 = 0;\n\tcount_1 = 0;\n\t\n\tfor(long i = len - 1; i >= 0; i--) \n\t{\n\t\tif(string[i] == '0') \n\t\t{\n\t\t\tcount_0++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tcount_1++;\n\t\t}\n\t\t\n\t\tif(count_0 == count_1) \n\t\t{\n\t\t\tmax_len = max(max_len, 2 * count_0);\n\t\t}\n\t\telse if(count_0 > count_1) \n\t\t{\n\t\t\tcount_1 = 0;\n\t\t\tcount_0 = 0;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tcount_0 = 0;\n\t\t\tcount_1 = 0;\n\t\t}\n\t}\n\t\n\treturn max_len;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '1' || c == '0')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '1' || c == '0')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(ch; string)\n\t{\n\t\tif(ch == '0' || ch == '1')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == '1' || c == '0')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == '1' || c == '0')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '1')\n\t\t{\n\t\t\tlength++;\n\t\t}\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == '1' || c == '0')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == '0' || c == '1')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong len = 0;\n\tforeach(char c; string)\n\t\tlen++;\n\treturn len;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == '1')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == '1' || c == '0')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tlong zero_count = 0;\n\tlong one_count = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '0')\n\t\t{\n\t\t\tzero_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tone_count++;\n\t\t}\n\t\t\n\t\tif(zero_count == one_count)\n\t\t{\n\t\t\tlength = max(length, zero_count + one_count);\n\t\t}\n\t}\n\t\n\tzero_count = 0;\n\tone_count = 0;\n\t\n\tforeach_reverse(char c; string)\n\t{\n\t\tif(c == '0')\n\t\t{\n\t\t\tzero_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tone_count++;\n\t\t}\n\t\t\n\t\tif(zero_count == one_count)\n\t\t{\n\t\t\tlength = max(length, zero_count + one_count);\n\t\t}\n\t}\n\t\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string) \n\t{\n\t\tif(c == '1' || c == '0') \n\t\t{\n\t\t\tlength++;\n\t\t}\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '1' || c == '0')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '1')\n\t\t{\n\t\t\tlength++;\n\t\t}\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tlong zero_count = 0;\n\tlong one_count = 0;\n\tforeach(ch; string)\n\t{\n\t\tif(ch == '0')\n\t\t\tzero_count++;\n\t\telse\n\t\t\tone_count++;\n\t\tif(zero_count == one_count)\n\t\t\tlength = max(length, zero_count + one_count);\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(character; string)\n\t{\n\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string) \n\t{\n\t\tif(c == '1' || c == '0') \n\t\t{\n\t\t\tlength++;\n\t\t}\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '1')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong max_length = 0;\n\tlong count_0 = 0;\n\tlong count_1 = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '0')\n\t\t\tcount_0++;\n\t\telse\n\t\t\tcount_1++;\n\t\t\n\t\tif(count_0 == count_1)\n\t\t\tmax_length = max(max_length, count_0 + count_1);\n\t}\n\t\n\tcount_0 = 0;\n\tcount_1 = 0;\n\tforeach_reverse(char c; string)\n\t{\n\t\tif(c == '0')\n\t\t\tcount_0++;\n\t\telse\n\t\t\tcount_1++;\n\t\t\n\t\tif(count_0 == count_1)\n\t\t\tmax_length = max(max_length, count_0 + count_1);\n\t}\n\t\n\treturn max_length;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string) \n\t{\n\t\tif(c == '1') \n\t\t{\n\t\t\tlength++;\n\t\t}\n\t}\n\treturn length;\n}",
    "{ \n\tlong n = string.length(); \n\tlong max_len = 0; \n\tlong zero_count = 0, one_count = 0; \n\tfor (long i = 0; i < n; i++) \n\t{ \n\t\tzero_count = 0; \n\t\tone_count = 0; \n\t\tfor (long j = i; j < n; j++) \n\t\t{ \n\t\t\tif (string[j] == '0') \n\t\t\t\tzero_count = zero_count + 1; \n\t\t\telse\n\t\t\t\tone_count = one_count + 1; \n\t\t\tif (zero_count == one_count) \n\t\t\t\tmax_len = max(max_len, j - i + 1); \n\t\t} \n\t} \n\treturn max_len; \n} ",
    "{\n\tlong count = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == '1')\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == '1' || c == '0')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == '1' || c == '0')\n\t\t{\n\t\t\tlength++;\n\t\t}\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '1')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tlong count = 0;\n\tlong max_count = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '0')\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcount--;\n\t\t}\n\t\tif(count > max_count)\n\t\t{\n\t\t\tmax_count = count;\n\t\t}\n\t\tif(count < 0)\n\t\t{\n\t\t\tcount = 0;\n\t\t}\n\t}\n\treturn max_count;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == '0' || c == '1')\n\t\t{\n\t\t\tlength++;\n\t\t}\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '1')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong count = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '1')\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong length = 0;\n\tlong count = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '1')\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcount--;\n\t\t}\n\t\tif(count == 0)\n\t\t{\n\t\t\tlength = max(length,cast(long)string.length);\n\t\t}\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == '1' || c == '0')\n\t\t{\n\t\t\tlength++;\n\t\t}\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == '1' || c == '0')\n\t\t{\n\t\t\tlength++;\n\t\t}\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(character; string)\n\t{\n\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '1')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string) \n\t{\n\t\tif(c == '1' || c == '0') \n\t\t{\n\t\t\tlength++;\n\t\t}\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == '1' || c == '0')\n\t\t{\n\t\t\tlength++;\n\t\t}\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == '1' || c == '0')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string) \n\t{\n\t\tif(c == '1') \n\t\t{\n\t\t\tlength++;\n\t\t}\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '1')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\treturn string.length;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string) \n\t{\n\t\tif(c == '1') \n\t\t{\n\t\t\tlength++;\n\t\t}\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string)\n\t\tlength++;\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == '0' || c == '1')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '1' || c == '0')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tlong zero_count = 0;\n\tlong one_count = 0;\n\tforeach(char c; string) \n\t{\n\t\tif(c == '0') \n\t\t{\n\t\t\tzero_count++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tone_count++;\n\t\t}\n\t\tif(zero_count == one_count) \n\t\t{\n\t\t\tlength = max(length, zero_count + one_count);\n\t\t}\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '0' || c == '1')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(ch; string)\n\t{\n\t\tif(ch == '1')\n\t\t{\n\t\t\tlength++;\n\t\t}\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tlong max_length = 0;\n\tlong count_0 = 0;\n\tlong count_1 = 0;\n\t\n\tforeach(char c; string) \n\t{\n\t\tif(c == '0') \n\t\t{\n\t\t\tcount_0++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tcount_1++;\n\t\t}\n\t\t\n\t\tif(count_0 == count_1) \n\t\t{\n\t\t\tlength = count_0 + count_1;\n\t\t\tmax_length = max(length, max_length);\n\t\t}\n\t}\n\t\n\tcount_0 = 0;\n\tcount_1 = 0;\n\t\n\tforeach_reverse(char c; string) \n\t{\n\t\tif(c == '0') \n\t\t{\n\t\t\tcount_0++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tcount_1++;\n\t\t}\n\t\t\n\t\tif(count_0 == count_1) \n\t\t{\n\t\t\tlength = count_0 + count_1;\n\t\t\tmax_length = max(length, max_length);\n\t\t}\n\t}\n\t\n\treturn max_length;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == '1' || c == '0')\n\t\t{\n\t\t\tlength++;\n\t\t}\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '0' || c == '1')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == '1' || c == '0')\n\t\t{\n\t\t\tlength++;\n\t\t}\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string)\n\t\tif(c == '1')\n\t\t\tlength++;\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '1')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '1' || c == '0')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string)\n\t\tlength++;\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == '0' || c == '1')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(c; string)\n\t{\n\t\tif(c == '1')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '1' || c == '0')\n\t\t\tlength++;\n\t}\n\treturn length;\n}",
    "{\n\tlong length = 0;\n\tforeach(char c; string)\n\t{\n\t\tif(c == '1')\n\t\t\tlength++;\n\t}\n\treturn length;\n}"
  ]
}
{
  "name": "mbpp_309_maximum",
  "language": "d",
  "prompt": "import std.math;\n/*\n\n\tWrite a python function to find the maximum of two numbers.\n\t\n*/\nlong maximum(long a, long b) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_309_maximum.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = maximum;\n\n    assert(candidate(5L, 10L) == 10L);\n    assert(candidate(-1L, -2L) == -1L);\n    assert(candidate(9L, 7L) == 9L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\treturn a > b ? a : b;\n}",
    "{\n\treturn a > b ? a : b;\n}",
    "{\n\treturn max(a, b);\n}",
    "{\n\treturn max(a, b);\n}",
    "{\n\treturn max(a, b);\n}",
    "{\n\treturn max(a, b);\n}",
    "{\n\treturn max(a, b);\n}",
    "{\n\treturn max(a, b);\n}",
    "{\n\treturn max(a, b);\n}",
    "{\n\treturn a > b ? a : b;\n}",
    "{\n\treturn max(a, b);\n}",
    "{\n\treturn max(a, b);\n}",
    "{\n\treturn max(a, b);\n}",
    "{\n\treturn max(a, b);\n}",
    "{\n\treturn max(a, b);\n}",
    "{\n\treturn max(a, b);\n}",
    "{\n\treturn max(a,b);\n}",
    "{\n\treturn max(a, b);\n}",
    "{\n\treturn max(a, b);\n}",
    "{\n\treturn max(a, b);\n}"
  ]
}
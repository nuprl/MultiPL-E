{
  "name": "mbpp_77_is_Diff",
  "language": "d",
  "prompt": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_77_is_Diff.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint s = 0;\n\twhile (n) \n\t{\n\t\ts += n % 10;\n\t\tn /= 10;\n\t\ts -= n % 10;\n\t\tn /= 10;\n\t}\n\treturn s % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    long odd_dig = 0, even_dig = 0; \n  \n    while (n != 0) { \n        odd_dig += n % 10; \n        n /= 10; \n  \n        if (n != 0) { \n            even_dig += n % 10; \n            n /= 10; \n        } \n    } \n  \n    return is_Diff(abs(odd_dig - even_dig)); \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517238,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    // Find sum of even and odd digits \n    long odd_sum = 0, even_sum = 0; \n    while (n != 0) { \n        // If digit is odd \n        if (abs(n % 10) % 2 == 1) \n            odd_sum += abs(n % 10); \n  \n        // If digit is even \n        else\n            even_sum += abs(n % 10); \n  \n        n /= 10; \n    } \n  \n    return is_Diff(abs(odd_sum - even_sum)); \n} \n  \n// Driver code \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517238,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n    if (n == 1) \n        return false; \n    long oddDigit = 0, evenDigit = 0; \n    bool isOdd = true; \n    while (n > 0) \n    { \n        if (isOdd) \n            oddDigit += n % 10; \n        else\n            evenDigit += n % 10; \n        isOdd = !isOdd; \n        n /= 10; \n    } \n    return is_Diff(abs(oddDigit - evenDigit)); \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517238,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tif (n < 0)\n\t\tn = -n;\n\tif (n < 10)\n\t\treturn false;\n\t\n\tint even = 0;\n\tint odd = 0;\n\t\n\twhile (n > 0) {\n\t\todd += n % 10;\n\t\tn /= 10;\n\t\teven += n % 10;\n\t\tn /= 10;\n\t}\n\t\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    // Find sum of even and odd digits \n    long even_sum = 0, odd_sum = 0; \n    while (n != 0) \n    { \n        even_sum += n % 10; \n        n /= 10; \n        odd_sum += n % 10; \n        n /= 10; \n    } \n  \n    // If difference is 0 or divisible by 11 then number is divisible by 11 \n    return (abs(even_sum - odd_sum) % 11 == 0); \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tlong sum_odd = 0;\n\tlong sum_even = 0;\n\tlong i = 0;\n\twhile(n > 0)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tsum_even += n % 10;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsum_odd += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(sum_even - sum_odd) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n < 0) \n        n = -n; \n  \n    if (n == 0 || n == 1) \n        return true; \n  \n    long oddDigit = 0, evenDigit = 0; \n    while (n) { \n        oddDigit += n % 10; \n        n /= 10; \n  \n        if (n) { \n            evenDigit += n % 10; \n            n /= 10; \n        } \n    } \n  \n    return is_Diff(abs(oddDigit - evenDigit)); \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517238,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    long odd_digits = 0, even_digits = 0; \n    while (n != 0) { \n        if ((n & 1) != 0) \n            odd_digits += 1; \n        else\n            even_digits += 1; \n        n = n >> 1; \n    } \n    return (abs(odd_digits - even_digits) % 3 == 0); \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmphknfzsxt.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmphknfzsxt.__unittest_L19_C1() [0x427ad9]\n??:? void tmphknfzsxt.__modtest() [0x427b24]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    int oddDigits = 0, evenDigits = 0; \n  \n    // If the number is negative, make it positive \n    if (n < 0) \n        n = -n; \n  \n    // Find sum of odd digits (For 1234 it will be 1+3 = 4) \n    while (n) { \n        // Get rightmost digit \n        int digit = n % 10; \n  \n        // If the digit is odd \n        if (digit & 1) \n            oddDigits += digit; \n  \n        // If the digit is even \n        else\n            evenDigits += digit; \n  \n        // Remove the rightmost digit \n        n /= 10; \n    } \n  \n    // If difference of sums is a multiple of 11, then number is divisible by 11 \n    return (abs(oddDigits - evenDigits) % 11 == 0); \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmph1_s86li.d(40): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmph1_s86li.__unittest_L35_C1() [0x427af1]\n??:? void tmph1_s86li.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    // Find sum of even placed and odd placed digits \n    long even_sum = 0, odd_sum = 0; \n    for (int i = 0; n != 0; i++) { \n        if (i % 2 == 0) \n            even_sum += n % 10; \n        else\n            odd_sum += n % 10; \n        n /= 10; \n    } \n  \n    return abs(even_sum - odd_sum) % 11 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd_sum = 0;\n\tint even_sum = 0;\n\tint i = 0;\n\twhile (n > 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\teven_sum += n % 10;\n\t\t}\n\t\telse \n\t\t{\n\t\t\todd_sum += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(odd_sum - even_sum) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd_sum = 0;\n\tint even_sum = 0;\n\t\n\tfor(int i = 0; i < n.length; i++)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\todd_sum += n[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\teven_sum += n[i];\n\t\t}\n\t}\n\t\n\treturn abs(odd_sum - even_sum) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517223,
      "stdout": "",
      "stderr": "/tmp/tmpsd7zns4j.d(12): Error: no property `length` for type `long`\n/tmp/tmpsd7zns4j.d(16): Error: only one index allowed to index `long`\n/tmp/tmpsd7zns4j.d(20): Error: only one index allowed to index `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsd7zns4j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n    if (n == 1) \n        return false; \n    long oddDigit = 0, evenDigit = 0; \n    bool flag = true; \n    while (n != 0) { \n        if (flag) \n            oddDigit += n % 10; \n        else\n            evenDigit += n % 10; \n        flag = !flag; \n        n /= 10; \n    } \n    return is_Diff(abs(oddDigit - evenDigit)); \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517238,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n    long odd_digits = 0;\n    long even_digits = 0;\n    long count = 0;\n    while (n > 0) \n    {\n        if (count % 2 == 0) \n        {\n            even_digits += n % 10;\n        } \n        else \n        {\n            odd_digits += n % 10;\n        }\n        n /= 10;\n        count++;\n    }\n    return abs(odd_digits - even_digits) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    // Find sum of even placed \n    // digits \n    long even_sum = 0; \n    for (long i = 0; n != 0; i++) { \n        if (i % 2 == 0) \n            even_sum += n % 10; \n        n /= 10; \n    } \n  \n    // Find sum of odd placed \n    // digits \n    long odd_sum = 0; \n    for (long i = 0; n != 0; i++) { \n        if (i % 2 != 0) \n            odd_sum += n % 10; \n        n /= 10; \n    } \n  \n    // If difference is divisible \n    // by 11, then number is \n    // divisible by 11. \n    return abs(even_sum - odd_sum) % 11 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8yaop50w.d(40): unittest failure\n----------------\n??:? _d_unittestp [0x427e25]\n??:? void tmp8yaop50w.__unittest_L35_C1() [0x427b59]\n??:? void tmp8yaop50w.__modtest() [0x427ba4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430020]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fafd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9b5]\n??:? runModuleUnitTests [0x42b921]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428274]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd = 0;\n\tint even = 0;\n\twhile (n > 0) \n\t{\n\t\tif (n % 2 == 0)\n\t\t\teven += n % 10;\n\t\telse\n\t\t\todd += n % 10;\n\t\tn /= 10;\n\t}\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpll6vmqw0.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmpll6vmqw0.__unittest_L21_C1() [0x427b0d]\n??:? void tmpll6vmqw0.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428224]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n    if (n < 0) \n        n = -n;\n    if (n < 10) \n        return false;\n    long odd_digits_sum = 0;\n    long even_digits_sum = 0;\n    while (n) \n    {\n        odd_digits_sum += n % 10;\n        n /= 100;\n        if (n) \n            even_digits_sum += n % 10;\n        n /= 100;\n    }\n    return abs(odd_digits_sum - even_digits_sum) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp048i409x.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427de5]\n??:? void tmp048i409x.__unittest_L25_C1() [0x427b19]\n??:? void tmp048i409x.__modtest() [0x427b64]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a99e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]\n??:? runModuleUnitTests [0x42b8e1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428234]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tif (n < 0)\n\t\tn = -n;\n\tif (n < 10)\n\t\treturn false;\n\tint odd = 0;\n\tint even = 0;\n\twhile (n > 0) \n\t{\n\t\todd += n % 10;\n\t\tn /= 10;\n\t\teven += n % 10;\n\t\tn /= 10;\n\t}\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tlong odd_sum = 0;\n\tlong even_sum = 0;\n\t\n\twhile(n > 0)\n\t{\n\t\todd_sum += n % 10;\n\t\tn /= 10;\n\t\t\n\t\teven_sum += n % 10;\n\t\tn /= 10;\n\t}\n\t\n\treturn abs(odd_sum - even_sum) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    // Find sum of even placed digits \n    long even_sum = 0; \n    for (long i = 0; n != 0; i++) { \n        if (i % 2 == 0) \n            even_sum += n % 10; \n        n /= 10; \n    } \n  \n    // Find sum of odd placed digits \n    long odd_sum = 0; \n    for (long i = 0; n != 0; i++) { \n        if (i % 2 != 0) \n            odd_sum += n % 10; \n        n /= 10; \n    } \n  \n    // If difference is a multiple of 11, \n    // then number is divisible by 11 \n    return abs(even_sum - odd_sum) % 11 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3qyig_o_.d(37): unittest failure\n----------------\n??:? _d_unittestp [0x427e25]\n??:? void tmp3qyig_o_.__unittest_L32_C1() [0x427b59]\n??:? void tmp3qyig_o_.__modtest() [0x427ba4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430020]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fafd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9b5]\n??:? runModuleUnitTests [0x42b921]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428274]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    // Find sum of even placed \n    // digits \n    long even_sum = 0; \n    for (long i = 0; n > 0 && i < 2; i++) { \n        even_sum += n % 10; \n        n /= 10; \n    } \n  \n    // Find sum of odd placed digits \n    long odd_sum = 0; \n    for (long i = 0; n > 0 && i < 2; i++) { \n        odd_sum += n % 10; \n        n /= 10; \n    } \n  \n    // If difference is divisible by \n    // 11, then number is divisible \n    // by 11 \n    return abs(even_sum - odd_sum) % 11 == 0; \n} \n  \n// Driver code \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpttse5gdq.d(40): unittest failure\n----------------\n??:? _d_unittestp [0x427dfd]\n??:? void tmpttse5gdq.__unittest_L34_C1() [0x427b50]\n??:? void tmpttse5gdq.__modtest() [0x427b7c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb23]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb49]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42fff8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fad5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a98d]\n??:? runModuleUnitTests [0x42b8f9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42824c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    // Find sum of even and odd digits \n    long odd_sum = 0, even_sum = 0; \n    while (n != 0) { \n        // If digit is odd \n        if (n & 1) \n            odd_sum += 1; \n  \n        // If digit is even \n        else\n            even_sum += 1; \n  \n        // Remove last digit from number \n        n = n >> 1; \n    } \n  \n    // If difference between even and odd sum \n    // is multiple of 11 then number is divisible \n    // by 11 \n    return (abs(odd_sum - even_sum) % 11 == 0); \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpdt2xigcg.d(37): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpdt2xigcg.__unittest_L32_C1() [0x427ae9]\n??:? void tmpdt2xigcg.__modtest() [0x427b34]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    int even_digits = 0, odd_digits = 0; \n    while (n != 0) { \n        if (n & 1) \n            odd_digits += n % 10; \n        else\n            even_digits += n % 10; \n        n /= 10; \n    } \n  \n    return is_Diff(abs(odd_digits - even_digits)); \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122627,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    // Find sum of even placed \n    // digits \n    long even_sum = 0; \n    for (long i = 0; n != 0; i++) { \n        if (i % 2 == 0) \n            even_sum += n % 10; \n        n /= 10; \n    } \n  \n    // Find sum of odd placed \n    // digits \n    long odd_sum = 0; \n    for (long i = 0; n != 0; i++) { \n        if (i % 2 != 0) \n            odd_sum += n % 10; \n        n /= 10; \n    } \n  \n    // If difference is divisible \n    // by 11, then number is \n    // divisible by 11 \n    return abs(even_sum - odd_sum) % 11 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjf54docw.d(40): unittest failure\n----------------\n??:? _d_unittestp [0x427e25]\n??:? void tmpjf54docw.__unittest_L35_C1() [0x427b59]\n??:? void tmpjf54docw.__modtest() [0x427ba4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430020]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fafd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9b5]\n??:? runModuleUnitTests [0x42b921]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428274]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tif (n < 0)\n\t\tn = -n;\n\tif (n < 10)\n\t\treturn false;\n\tint odd = 0;\n\tint even = 0;\n\twhile (n) {\n\t\tif (n % 2 == 0)\n\t\t\teven += n % 10;\n\t\telse\n\t\t\todd += n % 10;\n\t\tn /= 10;\n\t}\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2pl0s0r8.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427ded]\n??:? void tmp2pl0s0r8.__unittest_L24_C1() [0x427b29]\n??:? void tmp2pl0s0r8.__modtest() [0x427b70]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb13]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9a6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb39]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fac5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a97d]\n??:? runModuleUnitTests [0x42b8e9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42823c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n    if (n == 1) \n        return false; \n    long odd_dig = 0, even_dig = 0; \n    while (n != 0) { \n        if ((n & 1) != 0) \n            odd_dig += 1; \n        n = n >> 1; \n        if ((n & 1) != 0) \n            even_dig += 1; \n        n = n >> 1; \n    } \n    return is_Diff(abs(odd_dig - even_dig)); \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122612,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpf00awaia.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmpf00awaia.__unittest_L24_C1() [0x427ae2]\n??:? void tmpf00awaia.__modtest() [0x427b4c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a986]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb19]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a95d]\n??:? runModuleUnitTests [0x42b8c9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42821c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    // Find sum of even and odd digits \n    long odd_sum = 0, even_sum = 0; \n    while (n != 0) \n    { \n        // Get last digit \n        long digit = n % 10; \n  \n        // If digit is even, add to even sum \n        if (digit % 2 == 0) \n            even_sum += digit; \n  \n        // Else add to odd sum \n        else\n            odd_sum += digit; \n  \n        // Remove last digit \n        n /= 10; \n    } \n  \n    // Return true if difference is multiple of 11 \n    return abs(odd_sum - even_sum) % 11 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122612,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpq82rfaph.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427ddd]\n??:? void tmpq82rfaph.__unittest_L34_C1() [0x427b11]\n??:? void tmpq82rfaph.__modtest() [0x427b5c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb03]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a996]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb29]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]\n??:? runModuleUnitTests [0x42b8d9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42822c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n    if (n == 1) \n        return false; \n    long oddDigit = 0, evenDigit = 0; \n    bool flag = true; \n    while (n != 0) { \n        if (flag) \n            oddDigit += n % 10; \n        else\n            evenDigit += n % 10; \n        flag = !flag; \n        n /= 10; \n    } \n    return is_Diff(abs(oddDigit - evenDigit)); \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517238,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    // Find sum of even placed \n    // digits \n    long even_sum = 0; \n    for (long i = 0; n != 0; i++) { \n        if (i % 2 == 0) \n            even_sum += n % 10; \n        n /= 10; \n    } \n  \n    // Find sum of odd placed digits \n    long odd_sum = 0; \n    for (long i = 0; n != 0; i++) { \n        if (i % 2 != 0) \n            odd_sum += n % 10; \n        n /= 10; \n    } \n  \n    // If difference is a multiple of \n    // 11, then number is divisible by 11 \n    return abs(even_sum - odd_sum) % 11 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjp0s1v0y.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x427e25]\n??:? void tmpjp0s1v0y.__unittest_L33_C1() [0x427b59]\n??:? void tmpjp0s1v0y.__modtest() [0x427ba4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430020]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fafd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9b5]\n??:? runModuleUnitTests [0x42b921]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428274]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    // Find sum of even and odd digits \n    long even_sum = 0, odd_sum = 0; \n    while (n != 0) \n    { \n        // Get last digit \n        long digit = n % 10; \n  \n        // If digit is even, add it to even sum \n        if (digit % 2 == 0) \n            even_sum += digit; \n  \n        // Else add it to odd sum \n        else\n            odd_sum += digit; \n  \n        // Remove last digit \n        n /= 10; \n    } \n  \n    // Return true if difference is multiple of 11 \n    return abs(even_sum - odd_sum) % 11 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8ztihcjk.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmp8ztihcjk.__unittest_L31_C1() [0x427b01]\n??:? void tmp8ztihcjk.__modtest() [0x427b4c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a986]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb19]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a95d]\n??:? runModuleUnitTests [0x42b8c9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42821c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n < 0) \n        n = -n; \n  \n    if (n == 0 || n == 1) \n        return true; \n  \n    long odd_dig = 0, even_dig = 0; \n  \n    while (n) { \n        if (n & 1) \n            odd_dig += 1; \n        else\n            even_dig += 1; \n  \n        n = n >> 1; \n    } \n  \n    return is_Diff(abs(odd_dig - even_dig)); \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122612,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp20pklskk.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmp20pklskk.__unittest_L28_C1() [0x427ac6]\n??:? void tmp20pklskk.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    // Find sum of even placed \n    // digits \n    long even_sum = 0; \n    for (long i = 0; n != 0; i++) { \n        if (i % 2 == 0) \n            even_sum += n % 10; \n        n /= 10; \n    } \n  \n    // Find sum of odd placed digits \n    long odd_sum = 0; \n    for (long i = 0; n != 0; i++) { \n        if (i % 2 != 0) \n            odd_sum += n % 10; \n        n /= 10; \n    } \n  \n    // If difference is a multiple of \n    // 11, then number is divisible by 11 \n    return abs(even_sum - odd_sum) % 11 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjp0s1v0y.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x427e25]\n??:? void tmpjp0s1v0y.__unittest_L33_C1() [0x427b59]\n??:? void tmpjp0s1v0y.__modtest() [0x427ba4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430020]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fafd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9b5]\n??:? runModuleUnitTests [0x42b921]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428274]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd_digits = 0;\n\tint even_digits = 0;\n\t\n\twhile (n > 0) {\n\t\todd_digits += n % 10;\n\t\tn /= 10;\n\t\teven_digits += n % 10;\n\t\tn /= 10;\n\t}\n\t\n\treturn abs(odd_digits - even_digits) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd_digits = 0;\n\tint even_digits = 0;\n\tint count = 0;\n\twhile (n > 0) \n\t{\n\t\tif (count % 2 == 0) \n\t\t{\n\t\t\todd_digits += n % 10;\n\t\t} \n\t\telse \n\t\t{\n\t\t\teven_digits += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\tcount++;\n\t}\n\treturn abs(odd_digits - even_digits) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd = 0;\n\tint even = 0;\n\tint i = 0;\n\twhile (n > 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\todd += n % 10;\n\t\t} \n\t\telse \n\t\t{\n\t\t\teven += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n    long odd_digits = 0;\n    long even_digits = 0;\n    while (n > 0) {\n        odd_digits += n % 10;\n        n /= 10;\n        even_digits += n % 10;\n        n /= 10;\n    }\n    return abs(odd_digits - even_digits) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    // Find sum of even and odd digits \n    long odd_sum = 0, even_sum = 0; \n    while (n != 0) { \n        // If digit is odd, add it to odd sum \n        if ((n & 1) == 1) \n            odd_sum += n % 10; \n  \n        // If digit is even, add it to even sum \n        else\n            even_sum += n % 10; \n  \n        // Remove last digit from number \n        n = n / 10; \n    } \n  \n    // Return true if difference of even and odd sum \n    // is a multiple of 11. \n    return abs(odd_sum - even_sum) % 11 == 0; \n} \n  \n// Driver program \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppso5b7v7.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x427ddd]\n??:? void tmppso5b7v7.__unittest_L33_C1() [0x427b11]\n??:? void tmppso5b7v7.__modtest() [0x427b5c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb03]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a996]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb29]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]\n??:? runModuleUnitTests [0x42b8d9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42822c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tif (n < 0)\n\t\tn = -n;\n\tif (n < 10)\n\t\treturn false;\n\tint odd = 0;\n\tint even = 0;\n\twhile (n > 0)\n\t{\n\t\todd += n % 10;\n\t\tn /= 10;\n\t\teven += n % 10;\n\t\tn /= 10;\n\t}\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    // Find sum of even placed digits \n    long even_sum = 0; \n    for (long i = 0; n != 0; i++) { \n        if (i % 2 == 0) \n            even_sum += n % 10; \n        n /= 10; \n    } \n  \n    // Find sum of odd placed digits \n    long odd_sum = 0; \n    for (long i = 0; n != 0; i++) { \n        if (i % 2 != 0) \n            odd_sum += n % 10; \n        n /= 10; \n    } \n  \n    // If difference is multiple of 11, then \n    // number is divisible by 11 \n    return abs(even_sum - odd_sum) % 11 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122612,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5u25bwba.d(37): unittest failure\n----------------\n??:? _d_unittestp [0x427e25]\n??:? void tmp5u25bwba.__unittest_L32_C1() [0x427b59]\n??:? void tmp5u25bwba.__modtest() [0x427ba4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430020]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fafd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9b5]\n??:? runModuleUnitTests [0x42b921]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428274]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum = 0;\n\twhile (n > 0) \n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t\tsum -= n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tlong sum_even = 0;\n\tlong sum_odd = 0;\n\t\n\twhile(n > 0)\n\t{\n\t\tsum_even += n % 10;\n\t\tn /= 10;\n\t\tsum_odd += n % 10;\n\t\tn /= 10;\n\t}\n\t\n\treturn abs(sum_even - sum_odd) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122612,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum1 = 0, sum2 = 0;\n\twhile (n > 0) \n\t{\n\t\tsum1 += n % 10;\n\t\tn /= 10;\n\t\tsum2 += n % 10;\n\t\tn /= 10;\n\t}\n\treturn abs(sum1 - sum2) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    // Find sum of even placed \n    // digits \n    long even_sum = 0; \n    for (long i = 0; n != 0; i++) { \n        if (i % 2 == 0) \n            even_sum += n % 10; \n        n /= 10; \n    } \n  \n    // Find sum of odd placed \n    // digits \n    long odd_sum = 0; \n    for (long i = 0; n != 0; i++) { \n        if (i % 2 != 0) \n            odd_sum += n % 10; \n        n /= 10; \n    } \n  \n    // If difference is divisible \n    // by 11, then number is \n    // divisible by 11 \n    return abs(even_sum - odd_sum) % 11 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjf54docw.d(40): unittest failure\n----------------\n??:? _d_unittestp [0x427e25]\n??:? void tmpjf54docw.__unittest_L35_C1() [0x427b59]\n??:? void tmpjf54docw.__modtest() [0x427ba4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430020]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fafd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9b5]\n??:? runModuleUnitTests [0x42b921]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428274]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum_odd = 0;\n\tint sum_even = 0;\n\tint count = 0;\n\twhile (n > 0)\n\t{\n\t\tif (count % 2 == 0)\n\t\t{\n\t\t\tsum_even += n % 10;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsum_odd += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\tcount++;\n\t}\n\treturn abs(sum_even - sum_odd) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122612,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint diff = 0;\n\twhile (n != 0) \n\t{\n\t\tdiff += n % 10;\n\t\tn /= 10;\n\t\tdiff -= n % 10;\n\t\tn /= 10;\n\t}\n\treturn diff == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd = 0;\n\tint even = 0;\n\twhile (n > 0) \n\t{\n\t\todd += n % 10;\n\t\tn /= 10;\n\t\tif (n > 0) \n\t\t{\n\t\t\teven += n % 10;\n\t\t\tn /= 10;\n\t\t}\n\t}\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    // Find sum of even placed digits \n    long even_sum = 0; \n    for (long i = 0; n != 0; i++) { \n        if (i % 2 == 0) \n            even_sum += n % 10; \n        n /= 10; \n    } \n  \n    // Find sum of odd placed digits \n    long odd_sum = 0; \n    for (long i = 0; n != 0; i++) { \n        if (i % 2 != 0) \n            odd_sum += n % 10; \n        n /= 10; \n    } \n  \n    // If difference is divisible by 11, \n    // then number is divisible by 11 \n    return abs(even_sum - odd_sum) % 11 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpi_q9q4u4.d(37): unittest failure\n----------------\n??:? _d_unittestp [0x427e25]\n??:? void tmpi_q9q4u4.__unittest_L32_C1() [0x427b59]\n??:? void tmpi_q9q4u4.__modtest() [0x427ba4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430020]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fafd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9b5]\n??:? runModuleUnitTests [0x42b921]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428274]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint s = 0;\n\twhile (n) \n\t{\n\t\ts += n % 10;\n\t\tn /= 10;\n\t\ts -= n % 10;\n\t\tn /= 10;\n\t}\n\treturn s % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    // Find sum of even and odd digits \n    long oddSum = 0, evenSum = 0; \n    while (n != 0) { \n        // If digit is odd \n        if ((n & 1) == 1) \n            oddSum += 1; \n  \n        // If digit is even \n        else\n            evenSum += 1; \n  \n        // Right shift by 1 \n        n = n >> 1; \n    } \n  \n    // If difference is divisible by 11, \n    // then number is divisible by 11 \n    return (abs(oddSum - evenSum) % 11 == 0); \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmptjtu3xld.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmptjtu3xld.__unittest_L31_C1() [0x427af1]\n??:? void tmptjtu3xld.__modtest() [0x427b3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tlong sum_odd = 0;\n\tlong sum_even = 0;\n\tlong i = 0;\n\twhile(n != 0)\n\t{\n\t\tif(i%2 == 0)\n\t\t{\n\t\t\tsum_even += n%10;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsum_odd += n%10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(sum_even - sum_odd) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum_even = 0;\n\tint sum_odd = 0;\n\tint i = 0;\n\twhile (n > 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\tsum_even += n % 10;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tsum_odd += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(sum_even - sum_odd) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum_even = 0;\n\tint sum_odd = 0;\n\tint i = 0;\n\twhile (n > 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\tsum_even += n % 10;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tsum_odd += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(sum_even - sum_odd) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    // Find sum of even placed \n    // digits \n    long even_sum = 0; \n    for (long i = 0; n != 0; i++) { \n        if (i % 2 == 0) \n            even_sum += n % 10; \n        n /= 10; \n    } \n  \n    // Find sum of odd placed digits \n    long odd_sum = 0; \n    for (long i = 0; n != 0; i++) { \n        if (i % 2 != 0) \n            odd_sum += n % 10; \n        n /= 10; \n    } \n  \n    // If difference is divisible by \n    // 11, then number is divisible \n    // by 11 \n    return abs(even_sum - odd_sum) % 11 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpg9vtrx3f.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427e25]\n??:? void tmpg9vtrx3f.__unittest_L34_C1() [0x427b59]\n??:? void tmpg9vtrx3f.__modtest() [0x427ba4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430020]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fafd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9b5]\n??:? runModuleUnitTests [0x42b921]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428274]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n < 0) \n        n = -n; \n  \n    if (n == 0 || n == 1) \n        return true; \n  \n    long odd_dig = 0, even_dig = 0; \n  \n    while (n) { \n        if (n & 1) \n            odd_dig += 1; \n        else\n            even_dig += 1; \n  \n        n >>= 1; \n    } \n  \n    return is_Diff(abs(odd_dig - even_dig)); \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpv9243cb4.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmpv9243cb4.__unittest_L28_C1() [0x427abe]\n??:? void tmpv9243cb4.__modtest() [0x427b28]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    long oddDigitsSum = 0, evenDigitsSum = 0; \n    while (n != 0) \n    { \n        oddDigitsSum += n % 10; \n        n /= 10; \n        evenDigitsSum += n % 10; \n        n /= 10; \n    } \n    return (abs(oddDigitsSum - evenDigitsSum) % 11 == 0); \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum = 0;\n\tint diff = 0;\n\twhile (n != 0) \n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t\tdiff -= n % 10;\n\t\tn /= 10;\n\t}\n\treturn (abs(sum + diff) % 11 == 0);\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    int oddDigit = 0, evenDigit = 0; \n  \n    while (n != 0) { \n        oddDigit += n % 10; \n        n /= 10; \n  \n        if (n != 0) { \n            evenDigit += n % 10; \n            n /= 10; \n        } \n    } \n  \n    return is_Diff(abs(oddDigit - evenDigit)); \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122628,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum1 = 0;\n\tint sum2 = 0;\n\tint i = 0;\n\twhile (n > 0)\n\t{\n\t\tif (i % 2 == 0)\n\t\t{\n\t\t\tsum1 += n % 10;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsum2 += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(sum1 - sum2) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    // Find sum of even placed digits \n    long even_sum = 0; \n    for (long i = 0; n != 0; i++) { \n        if (i % 2 == 0) \n            even_sum += n % 10; \n        n /= 10; \n    } \n  \n    // Find sum of odd placed digits \n    long odd_sum = 0; \n    for (long i = 0; n != 0; i++) { \n        if (i % 2 != 0) \n            odd_sum += n % 10; \n        n /= 10; \n    } \n  \n    // If difference is a multiple of 11, \n    // then number is divisible by 11 \n    return abs(even_sum - odd_sum) % 11 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3qyig_o_.d(37): unittest failure\n----------------\n??:? _d_unittestp [0x427e25]\n??:? void tmp3qyig_o_.__unittest_L32_C1() [0x427b59]\n??:? void tmp3qyig_o_.__modtest() [0x427ba4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430020]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fafd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9b5]\n??:? runModuleUnitTests [0x42b921]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428274]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd_digits = 0;\n\tint even_digits = 0;\n\twhile (n > 0) {\n\t\tif (n % 2 == 0) {\n\t\t\teven_digits += n % 10;\n\t\t} else {\n\t\t\todd_digits += n % 10;\n\t\t}\n\t\tn /= 10;\n\t}\n\treturn abs(odd_digits - even_digits) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpm9amc_05.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmpm9amc_05.__unittest_L21_C1() [0x427b0d]\n??:? void tmpm9amc_05.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428224]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    // Find sum of even placed \n    // digits \n    long even_sum = 0; \n    long odd_sum = 0; \n  \n    // Traverse from right \n    long i = 0; \n    while (n != 0) { \n        // If digit is odd \n        if (i % 2 == 0) \n            even_sum += n % 10; \n        else\n            odd_sum += n % 10; \n  \n        // Remove last digit \n        n /= 10; \n        i++; \n    } \n  \n    // Return true if difference \n    // is multiple of 11. \n    return abs(even_sum - odd_sum) % 11 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint s = 0;\n\tint d = 0;\n\twhile (n > 0) \n\t{\n\t\ts += n % 10;\n\t\tn /= 10;\n\t\td += n % 10;\n\t\tn /= 10;\n\t}\n\treturn abs(s - d) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum_odd = 0;\n\tint sum_even = 0;\n\tint i = 0;\n\twhile (n > 0) {\n\t\tif (i % 2 == 0) {\n\t\t\tsum_odd += n % 10;\n\t\t}\n\t\telse {\n\t\t\tsum_even += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(sum_odd - sum_even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    // Find sum of even placed digits \n    long even_sum = 0; \n    for (long i = 0; n != 0; i++) { \n        if (i % 2 == 0) \n            even_sum += n % 10; \n        n /= 10; \n    } \n  \n    // Find sum of odd placed digits \n    long odd_sum = 0; \n    for (long i = 0; n != 0; i++) { \n        if (i % 2 != 0) \n            odd_sum += n % 10; \n        n /= 10; \n    } \n  \n    // If difference is divisible by 11, then number is divisible by 11 \n    return abs(even_sum - odd_sum) % 11 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2dkf8y1_.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427e25]\n??:? void tmp2dkf8y1_.__unittest_L31_C1() [0x427b59]\n??:? void tmp2dkf8y1_.__modtest() [0x427ba4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430020]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fafd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9b5]\n??:? runModuleUnitTests [0x42b921]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428274]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum = 0;\n\tint sum1 = 0;\n\tint sum2 = 0;\n\tint sum3 = 0;\n\tint sum4 = 0;\n\tint sum5 = 0;\n\tint sum6 = 0;\n\tint sum7 = 0;\n\tint sum8 = 0;\n\tint sum9 = 0;\n\tint sum10 = 0;\n\tint sum11 = 0;\n\tint sum12 = 0;\n\tint sum13 = 0;\n\tint sum14 = 0;\n\tint sum15 = 0;\n\tint sum16 = 0;\n\tint sum17 = 0;\n\tint sum18 = 0;\n\tint sum19 = 0;\n\tint sum20 = 0;\n\tint sum21 = 0;\n\tint sum22 = 0;\n\tint sum23 = 0;\n\tint sum24 = 0;\n\tint sum25 = 0;\n\tint sum26 = 0;\n\tint sum27 = 0;\n\tint sum28 = 0;\n\tint sum29 = 0;\n\tint sum30 = 0;\n\tint sum31 = 0;\n\tint sum32 = 0;\n\tint sum33 = 0;\n\tint sum34 = 0;\n\tint sum35 = 0;\n\tint sum36 = 0;\n\tint sum37 = 0;\n\tint sum38 = 0;\n\tint sum39 = 0;\n\tint sum40 = 0;\n\tint sum41 = 0;\n\tint sum42 = 0;\n\tint sum43 = 0;\n\tint sum44 = 0;\n\tint sum45 = 0;\n\tint sum46 = 0;\n\tint sum47 = 0;\n\tint sum48 = 0;\n\tint sum49 = 0;\n\tint sum50 = 0;\n\tint sum51 = 0;\n\tint sum52 = 0;\n\tint sum53 = 0;\n\tint sum54 = 0;\n\tint sum55 = 0;\n\tint sum56 = 0;\n\tint sum57 = 0;\n\tint sum58 = 0;\n\tint sum59 = 0;\n\tint sum60 = 0;\n\tint sum61 = 0;\n\tint sum62 = 0;\n\tint sum63 = 0\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "/tmp/tmpuh_b6u1z.d(73): Error: semicolon expected, not `unittest`\n/tmp/tmpuh_b6u1z.d(73): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuh_b6u1z.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    long oddDigitsSum = 0, evenDigitsSum = 0; \n    while (n != 0) { \n        oddDigitsSum += n % 10; \n        n /= 10; \n        evenDigitsSum += n % 10; \n        n /= 10; \n    } \n    return abs(oddDigitsSum - evenDigitsSum) % 11 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    // Find sum of even and odd digits \n    long odd_sum = 0, even_sum = 0; \n    while (n != 0) { \n        // If digit is odd \n        if (abs(n) % 2 == 1) \n            odd_sum += (n % 10); \n  \n        // If digit is even \n        else\n            even_sum += (n % 10); \n  \n        n = n / 10; \n    } \n  \n    // If difference is divisible by 11, \n    // then number is divisible by 11 \n    return ((odd_sum - even_sum) % 11 == 0); \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpmg_2p67d.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427de5]\n??:? void tmpmg_2p67d.__unittest_L30_C1() [0x427b19]\n??:? void tmpmg_2p67d.__modtest() [0x427b64]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a99e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]\n??:? runModuleUnitTests [0x42b8e1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428234]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd = 0;\n\tint even = 0;\n\tint i = 0;\n\twhile (n > 0)\n\t{\n\t\tif (i % 2 == 0)\n\t\t{\n\t\t\teven += n % 10;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    // Find sum of even and odd digits \n    long odd_sum = 0, even_sum = 0; \n    while (n != 0) { \n        // If digit is odd, add it to odd sum \n        if ((n & 1) != 0) \n            odd_sum += n % 10; \n  \n        // If digit is even, add it to even sum \n        else\n            even_sum += n % 10; \n  \n        n = n / 10; \n    } \n  \n    // If difference is multiple of 11, \n    // then number is divisible by 11 \n    return (abs(odd_sum - even_sum) % 11 == 0); \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0b1ym1vo.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmp0b1ym1vo.__unittest_L30_C1() [0x427b09]\n??:? void tmp0b1ym1vo.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428224]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd = 0;\n\tint even = 0;\n\tint i = 0;\n\twhile (n > 0) {\n\t\tif (i % 2 == 0) {\n\t\t\todd += n % 10;\n\t\t} else {\n\t\t\teven += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd_digits = 0;\n\tint even_digits = 0;\n\twhile (n > 0) {\n\t\tif (n % 2 == 0) {\n\t\t\teven_digits += n % 10;\n\t\t} else {\n\t\t\todd_digits += n % 10;\n\t\t}\n\t\tn /= 10;\n\t}\n\treturn abs(odd_digits - even_digits) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpm9amc_05.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmpm9amc_05.__unittest_L21_C1() [0x427b0d]\n??:? void tmpm9amc_05.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428224]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n < 0) \n        n = -n; \n  \n    if (n == 0 || n == 1) \n        return true; \n  \n    long oddDigit = 0, evenDigit = 0; \n  \n    while (n) \n    { \n        oddDigit += n % 10; \n        n /= 10; \n  \n        if (n) \n        { \n            evenDigit += n % 10; \n            n /= 10; \n        } \n    } \n  \n    return is_Diff(abs(oddDigit - evenDigit)); \n} \n  \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122628,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    // Find sum of even and odd digits \n    long odd_sum = 0, even_sum = 0; \n    while (n != 0) { \n        // If digit is odd, add it to odd sum \n        if (n & 1) \n            odd_sum += n % 10; \n  \n        // If digit is even, add it to even sum \n        else\n            even_sum += n % 10; \n  \n        // Remove last digit from number \n        n = n / 10; \n    } \n  \n    // Return true if difference of even and odd sums \n    // is a multiple of 11. \n    return (abs(odd_sum - even_sum) % 11 == 0); \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6pokxq9p.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmp6pokxq9p.__unittest_L31_C1() [0x427b09]\n??:? void tmp6pokxq9p.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428224]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    // Find sum of even and odd digits \n    long odd_sum = 0, even_sum = 0; \n    while (n != 0) \n    { \n        // If digit is odd \n        if (n & 1) \n            odd_sum += n % 10; \n  \n        // If digit is even \n        else\n            even_sum += n % 10; \n  \n        n /= 10; \n    } \n  \n    return is_Diff(abs(odd_sum - even_sum)); \n} \n  \n// Driver code \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122628,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    int evenSum = 0, oddSum = 0; \n    while (n != 0) { \n        evenSum += n % 10; \n        n /= 10; \n  \n        if (n != 0) { \n            oddSum += n % 10; \n            n /= 10; \n        } \n    } \n  \n    return (abs(evenSum - oddSum) % 11 == 0); \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd = 0, even = 0;\n\twhile (n > 0) \n\t{\n\t\todd += n % 10;\n\t\tn /= 10;\n\t\teven += n % 10;\n\t\tn /= 10;\n\t}\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd = 0, even = 0;\n\twhile (n > 0) \n\t{\n\t\todd += n % 10;\n\t\tn /= 10;\n\t\teven += n % 10;\n\t\tn /= 10;\n\t}\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    // Find sum of even placed \n    // digits \n    long even_sum = 0; \n    for (long i = 0; n != 0; i++) { \n        if (i % 2 == 0) \n            even_sum += n % 10; \n        n /= 10; \n    } \n  \n    // Find sum of odd placed \n    // digits \n    long odd_sum = 0; \n    for (long i = 0; n != 0; i++) { \n        if (i % 2 != 0) \n            odd_sum += n % 10; \n        n /= 10; \n    } \n  \n    // If difference is divisible \n    // by 11, then number is \n    // divisible by 11 \n    return abs(even_sum - odd_sum) % 11 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjf54docw.d(40): unittest failure\n----------------\n??:? _d_unittestp [0x427e25]\n??:? void tmpjf54docw.__unittest_L35_C1() [0x427b59]\n??:? void tmpjf54docw.__modtest() [0x427ba4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430020]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fafd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9b5]\n??:? runModuleUnitTests [0x42b921]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428274]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum_even = 0;\n\tint sum_odd = 0;\n\tint i = 0;\n\twhile(n > 0)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tsum_even += n % 10;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsum_odd += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(sum_even - sum_odd) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    // Find sum of even placed digits \n    long even_sum = 0; \n    for (long i = 0; n > 0; i++) { \n        if (i % 2 == 0) \n            even_sum += n % 10; \n        n /= 10; \n    } \n  \n    // Find sum of odd placed digits \n    long odd_sum = 0; \n    for (long i = 0; n > 0; i++) { \n        if (i % 2 != 0) \n            odd_sum += n % 10; \n        n /= 10; \n    } \n  \n    // If difference is multiple of 11, then \n    // number is divisible by 11 \n    return abs(even_sum - odd_sum) % 11 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjk9q78zp.d(37): unittest failure\n----------------\n??:? _d_unittestp [0x427e25]\n??:? void tmpjk9q78zp.__unittest_L32_C1() [0x427b59]\n??:? void tmpjk9q78zp.__modtest() [0x427ba4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430020]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fafd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9b5]\n??:? runModuleUnitTests [0x42b921]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428274]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n < 0) \n        n = -n; \n  \n    // Find sum of even and odd digits \n    long even_digits = 0, odd_digits = 0; \n    while (n > 0) \n    { \n        odd_digits += n % 10; \n        n = n / 10; \n  \n        even_digits += n % 10; \n        n = n / 10; \n    } \n  \n    // If difference is multiple of 11, then \n    // difference is divisible by 11 \n    return (abs(odd_digits - even_digits) % 11 == 0); \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum_odd = 0;\n\tint sum_even = 0;\n\tint i = 0;\n\twhile(n > 0)\n\t{\n\t\tif(i % 2 == 0)\n\t\t{\n\t\t\tsum_even += n % 10;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsum_odd += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(sum_even - sum_odd) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tif (n < 0) return is_Diff(-n);\n\tif (n < 10) return false;\n\treturn (n % 11 == 0);\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    int oddDigitsSum = 0; \n    int evenDigitsSum = 0; \n    int count = 0; \n  \n    while (n > 0) { \n        if (count % 2 == 0) \n            evenDigitsSum += n % 10; \n        else\n            oddDigitsSum += n % 10; \n        n /= 10; \n        count++; \n    } \n  \n    return abs(oddDigitsSum - evenDigitsSum) % 11 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    // Find sum of even and odd digits \n    long oddSum = 0, evenSum = 0; \n    while (n != 0) \n    { \n        // Sum of even digits \n        if ((n & 1) == 0) \n            evenSum += n % 10; \n  \n        // Sum of odd digits \n        else\n            oddSum += n % 10; \n  \n        n /= 10; \n    } \n  \n    // If difference is divisible by 11, \n    // then number is divisible by 11 \n    return abs(oddSum - evenSum) % 11 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpy0uczjau.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmpy0uczjau.__unittest_L31_C1() [0x427b09]\n??:? void tmpy0uczjau.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428224]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum_odd = 0;\n\tint sum_even = 0;\n\tint i = 0;\n\twhile(n)\n\t{\n\t\tif(i%2 == 0)\n\t\t\tsum_even += n%10;\n\t\telse\n\t\t\tsum_odd += n%10;\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(sum_even - sum_odd)%11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    // Find sum of even placed digits \n    long even_sum = 0; \n    for (long i = 0; n != 0; i++) { \n        if (i % 2 == 0) \n            even_sum += n % 10; \n        n /= 10; \n    } \n  \n    // Find sum of odd placed digits \n    long odd_sum = 0; \n    for (long i = 0; n != 0; i++) { \n        if (i % 2 != 0) \n            odd_sum += n % 10; \n        n /= 10; \n    } \n  \n    // If difference is a multiple of 11, \n    // then number is divisible by 11 \n    return abs(even_sum - odd_sum) % 11 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3qyig_o_.d(37): unittest failure\n----------------\n??:? _d_unittestp [0x427e25]\n??:? void tmp3qyig_o_.__unittest_L32_C1() [0x427b59]\n??:? void tmp3qyig_o_.__modtest() [0x427ba4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430020]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fafd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9b5]\n??:? runModuleUnitTests [0x42b921]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428274]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    // Find sum of even placed digits \n    long even_sum = 0; \n    for (int i = 0; n != 0; i++) { \n        if (i % 2 == 0) \n            even_sum += n % 10; \n        n /= 10; \n    } \n  \n    // Find sum of odd placed digits \n    long odd_sum = 0; \n    for (int i = 0; n != 0; i++) { \n        if (i % 2 != 0) \n            odd_sum += n % 10; \n        n /= 10; \n    } \n  \n    return abs(even_sum - odd_sum) % 11 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvbcx17yu.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427e1d]\n??:? void tmpvbcx17yu.__unittest_L30_C1() [0x427b55]\n??:? void tmpvbcx17yu.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42826c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sumEven = 0;\n\tint sumOdd = 0;\n\tint i = 0;\n\twhile (n > 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\tsumEven += n % 10;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tsumOdd += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(sumEven - sumOdd) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum1 = 0;\n\tint sum2 = 0;\n\twhile (n) \n\t{\n\t\tsum1 += n % 10;\n\t\tn /= 10;\n\t\tsum2 += n % 10;\n\t\tn /= 10;\n\t}\n\treturn abs(sum1 - sum2) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    // Find sum of even and odd digits \n    long odd_sum = 0, even_sum = 0; \n    while (n != 0) { \n        // If digit is odd, add it to odd sum \n        if (n & 1) \n            odd_sum += n % 10; \n  \n        // If digit is even, add it to even sum \n        else\n            even_sum += n % 10; \n  \n        // Remove last digit from number \n        n /= 10; \n    } \n  \n    // Return true if difference of even and odd sums \n    // is a multiple of 11. \n    return (abs(odd_sum - even_sum) % 11 == 0); \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpwpu7if3b.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmpwpu7if3b.__unittest_L31_C1() [0x427b09]\n??:? void tmpwpu7if3b.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428224]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    long oddDigit = 0, evenDigit = 0; \n  \n    bool isOdd = true; \n    while (n != 0) { \n        long rem = n % 10; \n        if (isOdd) \n            oddDigit += rem; \n        else\n            evenDigit += rem; \n  \n        isOdd = !isOdd; \n        n /= 10; \n    } \n  \n    return abs(oddDigit - evenDigit) % 11 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    // Find sum of even digits \n    long even_sum = 0; \n    long odd_sum = 0; \n  \n    // Traverse given number \n    while (n != 0) { \n        // If digit is even, add it to even sum \n        if ((n % 10) % 2 == 0) \n            even_sum += n % 10; \n  \n        // If digit is odd, add it to odd sum \n        else\n            odd_sum += n % 10; \n  \n        n = n / 10; \n    } \n  \n    // Return true if difference is multiple of 11. \n    return abs(even_sum - odd_sum) % 11 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpv9bmnyus.d(37): unittest failure\n----------------\n??:? _d_unittestp [0x427ddd]\n??:? void tmpv9bmnyus.__unittest_L32_C1() [0x427b15]\n??:? void tmpv9bmnyus.__modtest() [0x427b60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb03]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a996]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb29]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]\n??:? runModuleUnitTests [0x42b8d9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42822c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n < 0) \n        n = -n; \n  \n    if (n == 0 || n == 1) \n        return true; \n  \n    int d1 = n % 10; \n    n = n / 10; \n  \n    int d2 = n % 10; \n    n = n / 10; \n  \n    if (d1 == d2) \n        return false; \n  \n    return is_Diff(n - (d1 - d2)); \n} \n  \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd_digits = 0;\n\tint even_digits = 0;\n\t\n\twhile (n > 0) \n\t{\n\t\todd_digits += n % 10;\n\t\tn /= 10;\n\t\teven_digits += n % 10;\n\t\tn /= 10;\n\t}\n\t\n\treturn abs(odd_digits - even_digits) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    // Find sum of even placed \n    // digits \n    long even_sum = 0; \n    for (long i = 0; n != 0; i++) { \n        if (i % 2 == 0) \n            even_sum += n % 10; \n        n /= 10; \n    } \n  \n    // Find sum of odd placed \n    // digits \n    long odd_sum = 0; \n    for (long i = 0; n != 0; i++) { \n        if (i % 2 != 0) \n            odd_sum += n % 10; \n        n /= 10; \n    } \n  \n    // If difference is divisible \n    // by 11, then number is \n    // divisible by 11 \n    return abs(even_sum - odd_sum) % 11 == 0; \n} \n  \n// Driver code \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6vwcjw5e.d(42): unittest failure\n----------------\n??:? _d_unittestp [0x427e25]\n??:? void tmp6vwcjw5e.__unittest_L37_C1() [0x427b59]\n??:? void tmp6vwcjw5e.__modtest() [0x427ba4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430020]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fafd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9b5]\n??:? runModuleUnitTests [0x42b921]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428274]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum = 0;\n\tint sum1 = 0;\n\tint sum2 = 0;\n\tint i = 0;\n\twhile (n > 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\tsum1 += n % 10;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tsum2 += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\tsum = sum1 - sum2;\n\tif (abs(sum) % 11 == 0) \n\t{\n\t\treturn true;\n\t}\n\telse \n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    long oddDigit = 0, evenDigit = 0; \n    bool isOdd = true; \n    while (n != 0) { \n        long rem = n % 10; \n        if (isOdd) \n            oddDigit += rem; \n        else\n            evenDigit += rem; \n  \n        isOdd = !isOdd; \n        n /= 10; \n    } \n  \n    return abs(oddDigit - evenDigit) % 11 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint even_sum = 0;\n\tint odd_sum = 0;\n\tint i = 0;\n\twhile (n > 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\teven_sum += n % 10;\n\t\t}\n\t\telse \n\t\t{\n\t\t\todd_sum += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(even_sum - odd_sum) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint even = 0;\n\tint odd = 0;\n\tint i = 0;\n\twhile (n > 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\teven += n % 10;\n\t\t}\n\t\telse \n\t\t{\n\t\t\todd += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(even - odd) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    // Find sum of even placed and odd placed digits \n    long even_sum = 0, odd_sum = 0; \n    while (n != 0) { \n        // Get the last digit \n        long digit = n % 10; \n  \n        // Update even and odd sums \n        if (digit % 2 == 0) \n            even_sum += digit; \n        else\n            odd_sum += digit; \n  \n        // Remove the last digit \n        n /= 10; \n    } \n  \n    // Return true if difference is a multiple of 11 \n    return abs(even_sum - odd_sum) % 11 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpls8m816_.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427ddd]\n??:? void tmpls8m816_.__unittest_L31_C1() [0x427b11]\n??:? void tmpls8m816_.__modtest() [0x427b5c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb03]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a996]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb29]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]\n??:? runModuleUnitTests [0x42b8d9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42822c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    // Initialize first digit and second digit \n    long d1 = n % 10; \n    n = n / 10; \n    long d2 = n % 10; \n    n = n / 10; \n  \n    // Initialize the difference \n    long diff = d1 - d2; \n  \n    // Initialize the sum \n    long sum = d1 + d2; \n  \n    // Traverse the remaining digits \n    while (n > 0) \n    { \n        // Update first digit \n        d1 = d2; \n  \n        // Update second digit \n        d2 = n % 10; \n  \n        // Update the difference and sum \n        diff = diff + d1 - d2; \n        sum = sum + d1 + d2; \n  \n        // Update n \n        n = n / 10; \n    } \n  \n    // If difference is divisible by 11, \n    // then sum must also be divisible by 11 \n    return (diff % 11 == 0) && (sum % 11 == 0); \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpnmha3pzy.d(50): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmpnmha3pzy.__unittest_L45_C1() [0x427b21]\n??:? void tmpnmha3pzy.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428224]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n < 0) \n        n = -n; \n  \n    if (n == 0 || n == 1) \n        return true; \n  \n    long oddDigit = 0, evenDigit = 0; \n  \n    while (n) \n    { \n        oddDigit += n % 10; \n        n /= 10; \n  \n        if (n) \n        { \n            evenDigit += n % 10; \n            n /= 10; \n        } \n    } \n  \n    return is_Diff(abs(oddDigit - evenDigit)); \n} \n  \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122628,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    // Find sum of even placed \n    // digits \n    long even_sum = 0; \n    for (long i = 0; n != 0; i++) { \n        if (i % 2 == 0) \n            even_sum += n % 10; \n        n /= 10; \n    } \n  \n    // Find sum of odd placed \n    // digits \n    long odd_sum = 0; \n    for (long i = 0; n != 0; i++) { \n        if (i % 2 != 0) \n            odd_sum += n % 10; \n        n /= 10; \n    } \n  \n    return abs(even_sum - odd_sum) % 11 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3qnyugi0.d(37): unittest failure\n----------------\n??:? _d_unittestp [0x427e25]\n??:? void tmp3qnyugi0.__unittest_L32_C1() [0x427b59]\n??:? void tmp3qnyugi0.__modtest() [0x427ba4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430020]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fafd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9b5]\n??:? runModuleUnitTests [0x42b921]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428274]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tlong odd_digits = 0;\n\tlong even_digits = 0;\n\t\n\twhile (n > 0) \n\t{\n\t\todd_digits += n % 10;\n\t\tn /= 10;\n\t\t\n\t\teven_digits += n % 10;\n\t\tn /= 10;\n\t}\n\t\n\treturn abs(odd_digits - even_digits) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint even_sum = 0;\n\tint odd_sum = 0;\n\tint i = 0;\n\twhile (n > 0)\n\t{\n\t\tif (i % 2 == 0)\n\t\t\teven_sum += n % 10;\n\t\telse\n\t\t\todd_sum += n % 10;\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(even_sum - odd_sum) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n    if (n == 1) \n        return false; \n    int even_digits = 0, odd_digits = 0; \n    while (n != 0) { \n        if ((n & 1) == 0) \n            even_digits += n % 10; \n        else\n            odd_digits += n % 10; \n        n /= 10; \n    } \n    return is_Diff(abs(odd_digits - even_digits)); \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122628,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    // Find sum of even placed digits \n    long even_sum = 0; \n    for (long i = 0; n != 0; i++) { \n        if (i % 2 == 0) \n            even_sum += n % 10; \n        n /= 10; \n    } \n  \n    // Find sum of odd placed digits \n    long odd_sum = 0; \n    for (long i = 0; n != 0; i++) { \n        if (i % 2 != 0) \n            odd_sum += n % 10; \n        n /= 10; \n    } \n  \n    return abs(even_sum - odd_sum) % 11 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplbjf7yu1.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427e25]\n??:? void tmplbjf7yu1.__unittest_L30_C1() [0x427b59]\n??:? void tmplbjf7yu1.__modtest() [0x427ba4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430020]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fafd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9b5]\n??:? runModuleUnitTests [0x42b921]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428274]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    long oddDigitsSum = 0, evenDigitsSum = 0; \n  \n    // Find sum of odd digits \n    while (n) { \n        oddDigitsSum += n % 10; \n        n /= 10; \n  \n        evenDigitsSum += n % 10; \n        n /= 10; \n    } \n  \n    return abs(oddDigitsSum - evenDigitsSum) % 11 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint s = 0;\n\twhile (n) \n\t{\n\t\ts += n % 10;\n\t\tn /= 10;\n\t\ts -= n % 10;\n\t\tn /= 10;\n\t}\n\treturn s % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint s = 0;\n\twhile (n != 0) \n\t{\n\t\ts += n % 10;\n\t\tn /= 10;\n\t\ts -= n % 10;\n\t\tn /= 10;\n\t}\n\treturn s % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum = 0;\n\tint sum2 = 0;\n\tint i = 0;\n\twhile (n > 0) \n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t\tsum2 += n % 10;\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(sum - sum2) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    // Find sum of even placed \n    // digits \n    long even_sum = 0; \n    for (long i = 0; n != 0; i++) { \n        if (i % 2 == 0) \n            even_sum += n % 10; \n        n /= 10; \n    } \n  \n    // Find sum of odd placed digits \n    long odd_sum = 0; \n    for (long i = 0; n != 0; i++) { \n        if (i % 2 != 0) \n            odd_sum += n % 10; \n        n /= 10; \n    } \n  \n    // If difference is divisible by \n    // 11, then number is divisible \n    // by 11 \n    return abs(even_sum - odd_sum) % 11 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpg9vtrx3f.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427e25]\n??:? void tmpg9vtrx3f.__unittest_L34_C1() [0x427b59]\n??:? void tmpg9vtrx3f.__modtest() [0x427ba4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430020]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fafd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9b5]\n??:? runModuleUnitTests [0x42b921]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428274]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\tint m = 0;\n\tint o = 0;\n\tint p = 0;\n\tint q = 0;\n\tint r = 0;\n\tint s = 0;\n\tint t = 0;\n\tint u = 0;\n\tint v = 0;\n\tint w = 0;\n\tint x = 0;\n\tint y = 0;\n\tint z = 0;\n\tint a = 0;\n\tint b = 0;\n\tint c = 0;\n\tint d = 0;\n\tint e = 0;\n\tint f = 0;\n\tint g = 0;\n\tint h = 0;\n\tint ii = 0;\n\tint jj = 0;\n\tint kk = 0;\n\tint ll = 0;\n\tint mm = 0;\n\tint nn = 0;\n\tint oo = 0;\n\tint pp = 0;\n\tint qq = 0;\n\tint rr = 0;\n\tint ss = 0;\n\tint tt = 0;\n\tint uu = 0;\n\tint vv = 0;\n\tint ww = 0;\n\tint xx = 0;\n\tint yy = 0;\n\tint zz = 0;\n\tint aa = 0;\n\tint bb = 0;\n\tint cc = 0;\n\tint dd = 0;\n\tint ee = 0;\n\tint ff = 0;\n\tint gg = 0;\n\tint hh = 0;\n\tint iii = 0;\n\tint jjj = 0;\n\tint kkk = 0;\n\tint lll = 0;\n\tint mmm = 0;\n\tint nnn = 0;\n\tint ooo = 0;\n\tint ppp = 0;\n\tint qqq = 0;\n\tint rrr = 0;\n\tint sss = 0;\n\tint ttt = 0;\n\tint uuu = 0;\n\tint vvv = 0;\n\tint www = 0;\n\tint xxx = 0;\n\tint yyy = 0;\n\t\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "/tmp/tmp7wzp34ns.d(78): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7wzp34ns.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    // Find sum of even placed \n    // digits \n    long even_sum = 0; \n    for (long i = 0; n != 0; i++) \n    { \n        if (i % 2 == 0) \n            even_sum += n % 10; \n        n /= 10; \n    } \n  \n    // Find sum of odd placed \n    // digits \n    long odd_sum = 0; \n    for (long i = 0; n != 0; i++) \n    { \n        if (i % 2 == 1) \n            odd_sum += n % 10; \n        n /= 10; \n    } \n  \n    // If difference is a multiple \n    // of 11, then number is \n    // divisible by 11 \n    return abs(even_sum - odd_sum) % 11 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9e62q75t.d(42): unittest failure\n----------------\n??:? _d_unittestp [0x427e25]\n??:? void tmp9e62q75t.__unittest_L37_C1() [0x427b59]\n??:? void tmp9e62q75t.__modtest() [0x427ba4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430020]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fafd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9b5]\n??:? runModuleUnitTests [0x42b921]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428274]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    // Find sum of even placed \n    // digits \n    long even_sum = 0; \n    for (long i = 0; n != 0; i++) { \n        if (i % 2 == 0) \n            even_sum += n % 10; \n        n /= 10; \n    } \n  \n    // Find sum of odd placed \n    // digits \n    long odd_sum = 0; \n    for (long i = 0; n != 0; i++) { \n        if (i % 2 != 0) \n            odd_sum += n % 10; \n        n /= 10; \n    } \n  \n    // If difference is divisible \n    // by 11, then number is \n    // divisible by 11 \n    return abs(even_sum - odd_sum) % 11 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjf54docw.d(40): unittest failure\n----------------\n??:? _d_unittestp [0x427e25]\n??:? void tmpjf54docw.__unittest_L35_C1() [0x427b59]\n??:? void tmpjf54docw.__modtest() [0x427ba4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430020]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fafd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9b5]\n??:? runModuleUnitTests [0x42b921]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428274]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    // Find sum of even and odd digits \n    long even_sum = 0, odd_sum = 0; \n    while (n != 0) \n    { \n        even_sum += n % 10; \n        n /= 10; \n        odd_sum += n % 10; \n        n /= 10; \n    } \n  \n    // If difference is 0 or multiple of 11, then number is divisible by 11 \n    return (abs(even_sum - odd_sum) % 11 == 0); \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint s = 0;\n\twhile (n > 0) \n\t{\n\t\ts += n % 10;\n\t\tn /= 10;\n\t\ts -= n % 10;\n\t\tn /= 10;\n\t}\n\treturn s % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    // Find sum of even placed digits \n    long even_sum = 0; \n    for (int i = 0; n != 0; i++) { \n        if (i % 2 == 0) \n            even_sum += n % 10; \n        n /= 10; \n    } \n  \n    // Find sum of odd placed digits \n    long odd_sum = 0; \n    for (int i = 0; n != 0; i++) { \n        if (i % 2 != 0) \n            odd_sum += n % 10; \n        n /= 10; \n    } \n  \n    // If difference is a multiple of 11, \n    // then number is divisible by 11 \n    return abs(even_sum - odd_sum) % 11 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpm0ve93r_.d(37): unittest failure\n----------------\n??:? _d_unittestp [0x427e1d]\n??:? void tmpm0ve93r_.__unittest_L32_C1() [0x427b55]\n??:? void tmpm0ve93r_.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42826c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n < 0) \n        n = -n; \n  \n    if (n == 0 || n == 1) \n        return true; \n  \n    int d1 = n % 10; \n    n = n / 10; \n    int d2 = n % 10; \n    n = n / 10; \n  \n    if (d1 < d2) \n        return is_Diff(n - (d1 + d2)); \n    else\n        return is_Diff(n + (d1 - d2)); \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122629,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum1 = 0, sum2 = 0;\n\twhile (n > 0) \n\t{\n\t\tsum1 += n % 10;\n\t\tn /= 10;\n\t\tsum2 += n % 10;\n\t\tn /= 10;\n\t}\n\treturn abs(sum1 - sum2) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd_sum = 0;\n\tint even_sum = 0;\n\tint i = 0;\n\twhile (n > 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\teven_sum += n % 10;\n\t\t} \n\t\telse \n\t\t{\n\t\t\todd_sum += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(odd_sum - even_sum) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n < 0) \n        n = -n; \n  \n    if (n == 0 || n == 1) \n        return true; \n  \n    long oddDigit = 0, evenDigit = 0; \n    while (n) \n    { \n        oddDigit += n % 10; \n        n /= 10; \n  \n        if (n) \n        { \n            evenDigit += n % 10; \n            n /= 10; \n        } \n    } \n  \n    return is_Diff(abs(oddDigit - evenDigit)); \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122629,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    // Find sum of even placed and odd placed digits \n    long even_sum = 0, odd_sum = 0; \n    while (n != 0) { \n        even_sum += n % 10; \n        n /= 10; \n        odd_sum += n % 10; \n        n /= 10; \n    } \n  \n    // If difference is divisible by 11, then number is divisible by 11 \n    return abs(even_sum - odd_sum) % 11 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd_digits = 0;\n\tint even_digits = 0;\n\twhile(n > 0) {\n\t\tif(n % 2 == 0) {\n\t\t\teven_digits += n % 10;\n\t\t} else {\n\t\t\todd_digits += n % 10;\n\t\t}\n\t\tn /= 10;\n\t}\n\treturn abs(odd_digits - even_digits) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxvlestif.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmpxvlestif.__unittest_L21_C1() [0x427b0d]\n??:? void tmpxvlestif.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428224]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    // Find sum of even placed \n    // digits \n    long even_sum = 0; \n    for (long i = 0; n != 0; i++) { \n        if (i % 2 == 0) \n            even_sum += n % 10; \n        n /= 10; \n    } \n  \n    // Find sum of odd placed digits \n    long odd_sum = 0; \n    for (long i = 0; n != 0; i++) { \n        if (i % 2 != 0) \n            odd_sum += n % 10; \n        n /= 10; \n    } \n  \n    // If difference is divisible by \n    // 11, then number is divisible \n    // by 11 \n    return abs(even_sum - odd_sum) % 11 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpg9vtrx3f.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427e25]\n??:? void tmpg9vtrx3f.__unittest_L34_C1() [0x427b59]\n??:? void tmpg9vtrx3f.__modtest() [0x427ba4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430020]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fafd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9b5]\n??:? runModuleUnitTests [0x42b921]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428274]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd_sum = 0;\n\tint even_sum = 0;\n\tint digit = 0;\n\twhile(n > 0)\n\t{\n\t\tdigit = n % 10;\n\t\tif(digit % 2 == 0)\n\t\t\teven_sum += digit;\n\t\telse\n\t\t\todd_sum += digit;\n\t\tn /= 10;\n\t}\n\treturn abs(odd_sum - even_sum) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpp9syy6r8.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpp9syy6r8.__unittest_L23_C1() [0x427af1]\n??:? void tmpp9syy6r8.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n    if (n < 0) \n        n = -n;\n    if (n < 10) \n        return false;\n    long odd = 0, even = 0;\n    while (n > 0) \n    {\n        if (n % 2 == 0) \n            even += n % 10;\n        else \n            odd += n % 10;\n        n /= 10;\n    }\n    return is_Diff(abs(odd - even));\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0zqhy3y9.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427de5]\n??:? void tmp0zqhy3y9.__unittest_L24_C1() [0x427b19]\n??:? void tmp0zqhy3y9.__modtest() [0x427b64]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a99e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]\n??:? runModuleUnitTests [0x42b8e1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428234]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd_digits = 0;\n\tint even_digits = 0;\n\twhile(n > 0) \n\t{\n\t\todd_digits += n % 10;\n\t\tn /= 10;\n\t\teven_digits += n % 10;\n\t\tn /= 10;\n\t}\n\treturn abs(odd_digits - even_digits) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n    if (n == 1) \n        return false; \n    long oddDigit = 0, evenDigit = 0; \n    bool isOdd = true; \n    while (n > 0) { \n        if (isOdd) \n            oddDigit += n % 10; \n        else\n            evenDigit += n % 10; \n        isOdd = !isOdd; \n        n /= 10; \n    } \n    return is_Diff(abs(oddDigit - evenDigit)); \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122629,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n    long odd_digits = 0;\n    long even_digits = 0;\n    long digit = 0;\n    long count = 0;\n    while (n > 0) {\n        digit = n % 10;\n        if (count % 2 == 0) {\n            even_digits += digit;\n        } else {\n            odd_digits += digit;\n        }\n        count += 1;\n        n /= 10;\n    }\n    return abs(odd_digits - even_digits) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n    if (n == 1) \n        return false; \n  \n    long odd_dig = 0, even_dig = 0; \n  \n    while (n != 0) { \n  \n        // If odd digit is found \n        if (n & 1) \n            odd_dig += 1; \n  \n        // If even digit is found \n        else\n            even_dig += 1; \n  \n        n = n >> 1; \n    } \n  \n    return is_Diff(abs(odd_dig - even_dig)); \n} \n  \n// Driver code \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpx5wpbpx_.d(37): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmpx5wpbpx_.__unittest_L33_C1() [0x427abe]\n??:? void tmpx5wpbpx_.__modtest() [0x427b28]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum = 0;\n\tint sum1 = 0;\n\tint sum2 = 0;\n\tint sum3 = 0;\n\tint sum4 = 0;\n\tint sum5 = 0;\n\tint sum6 = 0;\n\tint sum7 = 0;\n\tint sum8 = 0;\n\tint sum9 = 0;\n\tint sum10 = 0;\n\tint sum11 = 0;\n\tint sum12 = 0;\n\tint sum13 = 0;\n\tint sum14 = 0;\n\tint sum15 = 0;\n\tint sum16 = 0;\n\tint sum17 = 0;\n\tint sum18 = 0;\n\tint sum19 = 0;\n\tint sum20 = 0;\n\tint sum21 = 0;\n\tint sum22 = 0;\n\tint sum23 = 0;\n\tint sum24 = 0;\n\tint sum25 = 0;\n\tint sum26 = 0;\n\tint sum27 = 0;\n\tint sum28 = 0;\n\tint sum29 = 0;\n\tint sum30 = 0;\n\tint sum31 = 0;\n\tint sum32 = 0;\n\tint sum33 = 0;\n\tint sum34 = 0;\n\tint sum35 = 0;\n\tint sum36 = 0;\n\tint sum37 = 0;\n\tint sum38 = 0;\n\tint sum39 = 0;\n\tint sum40 = 0;\n\tint sum41 = 0;\n\tint sum42 = 0;\n\tint sum43 = 0;\n\tint sum44 = 0;\n\tint sum45 = 0;\n\tint sum46 = 0;\n\tint sum47 = 0;\n\tint sum48 = 0;\n\tint sum49 = 0;\n\tint sum50 = 0;\n\tint sum51 = 0;\n\tint sum52 = 0;\n\tint sum53 = 0;\n\tint sum54 = 0;\n\tint sum55 = 0;\n\tint sum56 = 0;\n\tint sum57 = 0;\n\tint sum58 = 0;\n\tint sum59 = 0;\n\tint sum60 = 0;\n\tint sum61 = 0;\n\tint sum62 = 0;\n\tint sum63 = 0\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "/tmp/tmpuh_b6u1z.d(73): Error: semicolon expected, not `unittest`\n/tmp/tmpuh_b6u1z.d(73): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuh_b6u1z.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    // Find sum of even placed \n    // digits \n    long even_sum = 0; \n    for (long i = 0; n != 0; i++) { \n        if (i % 2 == 0) \n            even_sum += n % 10; \n        n /= 10; \n    } \n  \n    // Find sum of odd placed digits \n    long odd_sum = 0; \n    for (long i = 0; n != 0; i++) { \n        if (i % 2 != 0) \n            odd_sum += n % 10; \n        n /= 10; \n    } \n  \n    // If difference is a multiple of \n    // 11, then number is divisible by 11 \n    return abs(even_sum - odd_sum) % 11 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjp0s1v0y.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x427e25]\n??:? void tmpjp0s1v0y.__unittest_L33_C1() [0x427b59]\n??:? void tmpjp0s1v0y.__modtest() [0x427ba4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430020]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fafd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9b5]\n??:? runModuleUnitTests [0x42b921]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428274]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint even = 0;\n\tint odd = 0;\n\tint i = 0;\n\twhile (n > 0) \n\t{\n\t\tif (i % 2 == 0)\n\t\t\teven += n % 10;\n\t\telse\n\t\t\todd += n % 10;\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(even - odd) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n < 0) \n        n = -n; \n  \n    if (n == 0 || n == 1) \n        return true; \n  \n    long odd_dig = 0, even_dig = 0; \n  \n    while (n > 0) { \n        odd_dig += n % 10; \n        n = n / 10; \n  \n        if (n > 0) { \n            even_dig += n % 10; \n            n = n / 10; \n        } \n    } \n  \n    return is_Diff(abs(odd_dig - even_dig)); \n} \n  \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122629,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    int oddDigSum = 0, evenDigSum = 0; \n  \n    // If the number is negative, make it positive \n    if (n < 0) \n        n = -n; \n  \n    // Find sum of odd digits \n    while (n) { \n        oddDigSum += n % 10; \n        n /= 10; \n        evenDigSum += n % 10; \n        n /= 10; \n    } \n  \n    return (abs(oddDigSum - evenDigSum) % 11 == 0); \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum = 0;\n\tint sum_odd = 0;\n\tint sum_even = 0;\n\tint i = 0;\n\twhile (n > 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\tsum_even += n % 10;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tsum_odd += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(sum_even - sum_odd) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    // Find sum of even digits \n    // (Note that we start from index 0 and \n    // increment it by 2) \n    int even_digits = 0; \n    for (int i = 0; n > 0; i += 2) { \n        even_digits += n % 10; \n        n /= 10; \n    } \n  \n    // Find sum of odd digits \n    // (Note that we start from index 1 and \n    // increment it by 2) \n    int odd_digits = 0; \n    for (int i = 1; n > 0; i += 2) { \n        odd_digits += n % 10; \n        n /= 10; \n    } \n  \n    // If difference is a multiple of 11, \n    // then number is divisible by 11 \n    return abs(even_digits - odd_digits) % 11 == 0; \n} \n  \n// Driver code \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvqgiqdpy.d(41): unittest failure\n----------------\n??:? _d_unittestp [0x427ded]\n??:? void tmpvqgiqdpy.__unittest_L36_C1() [0x427b29]\n??:? void tmpvqgiqdpy.__modtest() [0x427b70]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb13]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9a6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb39]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fac5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a97d]\n??:? runModuleUnitTests [0x42b8e9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42823c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    long oddDigitsSum = 0; \n    long evenDigitsSum = 0; \n    long count = 0; \n    while (n > 0) { \n        if (count % 2 == 0) \n            oddDigitsSum += n % 10; \n        else\n            evenDigitsSum += n % 10; \n        n /= 10; \n        count++; \n    } \n    return abs(oddDigitsSum - evenDigitsSum) % 11 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum = 0;\n\tint sum1 = 0;\n\tint sum2 = 0;\n\tint i = 0;\n\twhile (n != 0) {\n\t\tif (i % 2 == 0) {\n\t\t\tsum1 += n % 10;\n\t\t}\n\t\telse {\n\t\t\tsum2 += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\tsum = sum1 - sum2;\n\tif (sum % 11 == 0) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd = 0;\n\tint even = 0;\n\t\n\twhile(n > 0)\n\t{\n\t\todd += n % 10;\n\t\tn /= 10;\n\t\t\n\t\teven += n % 10;\n\t\tn /= 10;\n\t}\n\t\n\treturn (odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    // Find sum of even placed \n    // digits \n    long even_sum = 0; \n    for (long i = 0; n != 0; i++) { \n        if (i % 2 == 0) \n            even_sum += n % 10; \n        n /= 10; \n    } \n  \n    // Find sum of odd placed \n    // digits \n    long odd_sum = 0; \n    for (long i = 0; n != 0; i++) { \n        if (i % 2 != 0) \n            odd_sum += n % 10; \n        n /= 10; \n    } \n  \n    // If difference is divisible \n    // by 11, then number is \n    // divisible by 11 \n    return abs(even_sum - odd_sum) % 11 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjf54docw.d(40): unittest failure\n----------------\n??:? _d_unittestp [0x427e25]\n??:? void tmpjf54docw.__unittest_L35_C1() [0x427b59]\n??:? void tmpjf54docw.__modtest() [0x427ba4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430020]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fafd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9b5]\n??:? runModuleUnitTests [0x42b921]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428274]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    // Find sum of even placed digits \n    long even_sum = 0; \n    for (long i = 0; n != 0; i++) { \n        if (i % 2 == 0) \n            even_sum += n % 10; \n        n /= 10; \n    } \n  \n    // Find sum of odd placed digits \n    long odd_sum = 0; \n    for (long i = 0; n != 0; i++) { \n        if (i % 2 != 0) \n            odd_sum += n % 10; \n        n /= 10; \n    } \n  \n    // If difference is a multiple of 11, \n    // then number is divisible by 11 \n    return abs(even_sum - odd_sum) % 11 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3qyig_o_.d(37): unittest failure\n----------------\n??:? _d_unittestp [0x427e25]\n??:? void tmp3qyig_o_.__unittest_L32_C1() [0x427b59]\n??:? void tmp3qyig_o_.__modtest() [0x427ba4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430020]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fafd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9b5]\n??:? runModuleUnitTests [0x42b921]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428274]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum_even = 0;\n\tint sum_odd = 0;\n\tint i = 0;\n\twhile (n > 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\tsum_even += n % 10;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tsum_odd += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(sum_even - sum_odd) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n    if (n < 0) \n        n = -n;\n    if (n < 10) \n        return false;\n    long odd = 0;\n    long even = 0;\n    while (n > 0) {\n        if (n % 2 == 0) \n            even += n % 10;\n        else \n            odd += n % 10;\n        n /= 10;\n    }\n    return is_Diff(abs(odd - even));\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpshb1hgh_.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427de5]\n??:? void tmpshb1hgh_.__unittest_L24_C1() [0x427b19]\n??:? void tmpshb1hgh_.__modtest() [0x427b64]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a99e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]\n??:? runModuleUnitTests [0x42b8e1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428234]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    // Find sum of even placed \n    // digits \n    long even_sum = 0; \n    for (long i = 0; n != 0; i++) { \n        if (i % 2 == 0) \n            even_sum += n % 10; \n        n /= 10; \n    } \n  \n    // Find sum of odd placed \n    // digits \n    long odd_sum = 0; \n    for (long i = 0; n != 0; i++) { \n        if (i % 2 != 0) \n            odd_sum += n % 10; \n        n /= 10; \n    } \n  \n    // If difference is a multiple \n    // of 11, then number is divisible \n    // by 11 \n    return abs(even_sum - odd_sum) % 11 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122615,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjwqzv5s3.d(40): unittest failure\n----------------\n??:? _d_unittestp [0x427e25]\n??:? void tmpjwqzv5s3.__unittest_L35_C1() [0x427b59]\n??:? void tmpjwqzv5s3.__modtest() [0x427ba4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430020]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fafd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9b5]\n??:? runModuleUnitTests [0x42b921]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428274]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum = 0;\n\tint sum2 = 0;\n\tint i = 0;\n\twhile (n != 0) \n\t{\n\t\tif (i % 2 == 0)\n\t\t\tsum += n % 10;\n\t\telse\n\t\t\tsum2 += n % 10;\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(sum - sum2) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    int even_sum = 0, odd_sum = 0; \n    while (n != 0) { \n        if (n & 1) \n            odd_sum += 1; \n        else\n            even_sum += 1; \n        n >>= 1; \n    } \n    return abs(odd_sum - even_sum) % 3 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122615,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1bd7fqxs.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427d85]\n??:? void tmp1bd7fqxs.__unittest_L19_C1() [0x427ac1]\n??:? void tmp1bd7fqxs.__modtest() [0x427b08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281d4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd = 0, even = 0;\n\twhile (n > 0) {\n\t\tif (n % 2 == 0) {\n\t\t\teven += n % 10;\n\t\t} else {\n\t\t\todd += n % 10;\n\t\t}\n\t\tn /= 10;\n\t}\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122615,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpea44gabc.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmpea44gabc.__unittest_L20_C1() [0x427b0d]\n??:? void tmpea44gabc.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428224]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    // Find sum of even and odd digits \n    long odd_sum = 0, even_sum = 0; \n    while (n != 0) { \n        // If digit is odd \n        if ((n & 1) == 1) \n            odd_sum += n % 10; \n  \n        // If digit is even \n        else\n            even_sum += n % 10; \n  \n        n = n / 10; \n    } \n  \n    return abs(odd_sum - even_sum) % 11 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122615,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpftz3tgdo.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x427ddd]\n??:? void tmpftz3tgdo.__unittest_L28_C1() [0x427b11]\n??:? void tmpftz3tgdo.__modtest() [0x427b5c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb03]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a996]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb29]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]\n??:? runModuleUnitTests [0x42b8d9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42822c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    // Find sum of even and odd digits \n    long odd_sum = 0, even_sum = 0; \n    while (n != 0) { \n        // if digit is odd \n        if (n & 1) \n            odd_sum += 1; \n  \n        // if digit is even \n        else\n            even_sum += 1; \n  \n        // Right shift by 1 \n        n = n >> 1; \n    } \n  \n    // If difference is divisible by 11, \n    // then number is divisible by 11 \n    return is_Diff(abs(odd_sum - even_sum)); \n} \n  \n// Driver program \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122615,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfkbtiaeh.d(37): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmpfkbtiaeh.__unittest_L33_C1() [0x427ab2]\n??:? void tmpfkbtiaeh.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd = 0;\n\tint even = 0;\n\tint count = 0;\n\twhile(n > 0) \n\t{\n\t\tif(count % 2 == 0) \n\t\t{\n\t\t\todd += n % 10;\n\t\t}\n\t\telse \n\t\t{\n\t\t\teven += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\tcount++;\n\t}\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd = 0, even = 0;\n\twhile (n > 0) \n\t{\n\t\todd += n % 10;\n\t\tn /= 10;\n\t\teven += n % 10;\n\t\tn /= 10;\n\t}\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum_odd = 0;\n\tint sum_even = 0;\n\tint i = 0;\n\twhile (n > 0) {\n\t\tif (i % 2 == 0) {\n\t\t\tsum_even += n % 10;\n\t\t} else {\n\t\t\tsum_odd += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(sum_odd - sum_even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    // Find sum of even and odd digits \n    long even_sum = 0, odd_sum = 0; \n    while (n != 0) { \n        // if digit is odd \n        if (n & 1) \n            odd_sum += n % 10; \n  \n        // if digit is even \n        else\n            even_sum += n % 10; \n  \n        n = n / 10; \n    } \n  \n    return abs(odd_sum - even_sum) % 11 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122615,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpajjcytg0.d(33): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmpajjcytg0.__unittest_L28_C1() [0x427b09]\n??:? void tmpajjcytg0.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428224]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    // Find sum of even placed digits \n    long even_sum = 0; \n    for (long i = 0; n != 0; i++) { \n        if (i % 2 == 0) \n            even_sum += n % 10; \n        n /= 10; \n    } \n  \n    // Find sum of odd placed digits \n    long odd_sum = 0; \n    for (long i = 0; n != 0; i++) { \n        if (i % 2 != 0) \n            odd_sum += n % 10; \n        n /= 10; \n    } \n  \n    return abs(even_sum - odd_sum) % 11 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmplbjf7yu1.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427e25]\n??:? void tmplbjf7yu1.__unittest_L30_C1() [0x427b59]\n??:? void tmplbjf7yu1.__modtest() [0x427ba4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430020]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fafd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9b5]\n??:? runModuleUnitTests [0x42b921]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428274]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tlong odd_sum = 0;\n\tlong even_sum = 0;\n\tlong temp = n;\n\tint i = 0;\n\twhile (temp > 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\todd_sum += temp % 10;\n\t\t} \n\t\telse \n\t\t{\n\t\t\teven_sum += temp % 10;\n\t\t}\n\t\ttemp /= 10;\n\t\ti++;\n\t}\n\treturn abs(odd_sum - even_sum) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tlong sum_even = 0;\n\tlong sum_odd = 0;\n\t\n\twhile (n > 0) \n\t{\n\t\tsum_even += n % 10;\n\t\tn /= 10;\n\t\tsum_odd += n % 10;\n\t\tn /= 10;\n\t}\n\t\n\treturn abs(sum_even - sum_odd) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    long oddDigitsSum = 0, evenDigitsSum = 0; \n  \n    // If the number is negative, make it positive \n    if (n < 0) \n        n = -n; \n  \n    // Find sum of odd digits \n    while (n) { \n        // If digit is odd \n        if (n & 1) \n            oddDigitsSum += 1; \n  \n        // Right shift by 1 \n        n = n >> 1; \n  \n        // If digit is even \n        if (n & 1) \n            evenDigitsSum += 1; \n  \n        // Right shift by 1 \n        n = n >> 1; \n    } \n  \n    // Return true if difference is a multiple of 11 \n    return ((oddDigitsSum - evenDigitsSum) % 11 == 0); \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122615,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfq_hnzzh.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmpfq_hnzzh.__unittest_L35_C1() [0x427a92]\n??:? void tmpfq_hnzzh.__modtest() [0x427ae4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint even = 0;\n\tint odd = 0;\n\tint i = 0;\n\twhile (n > 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\teven += n % 10;\n\t\t} \n\t\telse \n\t\t{\n\t\t\todd += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(even - odd) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    // Find sum of even and odd digits \n    long even_sum = 0, odd_sum = 0; \n    while (n != 0) { \n        even_sum += n % 10; \n        n = n / 10; \n        odd_sum += n % 10; \n        n = n / 10; \n    } \n  \n    // If difference is 0 or multiple of 11, \n    // then number is divisible by 11 \n    return (abs(even_sum - odd_sum) % 11 == 0); \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint s = 0;\n\twhile (n > 0) {\n\t\ts += n % 10;\n\t\tn /= 10;\n\t\ts -= n % 10;\n\t\tn /= 10;\n\t}\n\treturn s % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint s = 0;\n\twhile (n > 0) \n\t{\n\t\ts += n % 10;\n\t\tn /= 10;\n\t\ts -= n % 10;\n\t\tn /= 10;\n\t}\n\treturn s % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd = 0;\n\tint even = 0;\n\tint i = 0;\n\twhile (n != 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\teven += n % 10;\n\t\t} \n\t\telse \n\t\t{\n\t\t\todd += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd = 0;\n\tint even = 0;\n\twhile (n > 0) \n\t{\n\t\tif (n % 2 == 0)\n\t\t\teven += n % 10;\n\t\telse\n\t\t\todd += n % 10;\n\t\tn /= 10;\n\t}\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpll6vmqw0.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmpll6vmqw0.__unittest_L21_C1() [0x427b0d]\n??:? void tmpll6vmqw0.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428224]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    // Find sum of even and odd digits \n    long even_sum = 0, odd_sum = 0; \n    while (n != 0) { \n        // Get last digit \n        long digit = n % 10; \n  \n        // If digit is even, add it to even sum \n        if (digit % 2 == 0) \n            even_sum += digit; \n  \n        // If digit is odd, add it to odd sum \n        else\n            odd_sum += digit; \n  \n        // Remove last digit \n        n = n / 10; \n    } \n  \n    // Return true if difference is a multiple of 11 \n    return abs(even_sum - odd_sum) % 11 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122615,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpsmgq9wll.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x427ddd]\n??:? void tmpsmgq9wll.__unittest_L33_C1() [0x427b11]\n??:? void tmpsmgq9wll.__modtest() [0x427b5c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb03]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a996]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb29]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]\n??:? runModuleUnitTests [0x42b8d9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42822c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    long oddDigit = 0, evenDigit = 0; \n  \n    bool isOdd = true; \n    while (n != 0) { \n        long rem = n % 10; \n        if (isOdd) \n            oddDigit += rem; \n        else\n            evenDigit += rem; \n  \n        isOdd = !isOdd; \n        n /= 10; \n    } \n  \n    return abs(oddDigit - evenDigit) % 11 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    long odd_digits = 0, even_digits = 0; \n  \n    // If the number is negative, make it positive \n    if (n < 0) \n        n = -n; \n  \n    // Find sum of odd digits (digits at odd places from right) \n    while (n) { \n        odd_digits += n % 10; \n        n /= 100; \n    } \n  \n    // Find sum of even digits (digits at even places from right) \n    n = n / 10; \n    while (n) { \n        even_digits += n % 10; \n        n /= 100; \n    } \n  \n    // If difference is a multiple of 11, then number is divisible by 11 \n    return (abs(odd_digits - even_digits) % 11 == 0); \n} \n  \n// Driver code \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122615,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzrmlbv_d.d(38): unittest failure\n----------------\n??:? _d_unittestp [0x427df5]\n??:? void tmpzrmlbv_d.__unittest_L33_C1() [0x427b29]\n??:? void tmpzrmlbv_d.__modtest() [0x427b74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb1b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9ae]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb41]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42fff0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42facd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a985]\n??:? runModuleUnitTests [0x42b8f1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428244]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd = 0;\n\tint even = 0;\n\twhile (n > 0) \n\t{\n\t\todd += n % 10;\n\t\tn /= 10;\n\t\teven += n % 10;\n\t\tn /= 10;\n\t}\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum = 0;\n\tint sum1 = 0;\n\tint sum2 = 0;\n\tint i = 0;\n\twhile (n != 0)\n\t{\n\t\tif (i % 2 == 0)\n\t\t{\n\t\t\tsum1 += n % 10;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsum2 += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\tsum = sum1 - sum2;\n\tif (sum % 11 == 0)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    // Find sum of even and odd digits \n    long odd_sum = 0, even_sum = 0; \n    while (n != 0) \n    { \n        // Add last digit to odd sum \n        odd_sum += n % 10; \n  \n        // Remove last digit \n        n /= 10; \n  \n        // Add last digit to even sum \n        even_sum += n % 10; \n  \n        // Remove last digit \n        n /= 10; \n    } \n  \n    // Return true if difference is multiple of 11. \n    return abs(odd_sum - even_sum) % 11 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    // Find sum of even and odd digits \n    long even_sum = 0, odd_sum = 0; \n    while (n != 0) \n    { \n        even_sum += n % 10; \n        n /= 10; \n  \n        odd_sum += n % 10; \n        n /= 10; \n    } \n  \n    // If difference is 0 or multiple of 11, then number is divisible by 11 \n    return (abs(even_sum - odd_sum) % 11 == 0); \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint even = 0;\n\tint odd = 0;\n\tint i = 0;\n\twhile (n) \n\t{\n\t\tif (i % 2 == 0)\n\t\t\teven += n % 10;\n\t\telse\n\t\t\todd += n % 10;\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(even - odd) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint even = 0;\n\tint odd = 0;\n\twhile (n > 0) \n\t{\n\t\tif (n % 2 == 0) \n\t\t{\n\t\t\teven += n % 10;\n\t\t}\n\t\telse \n\t\t{\n\t\t\todd += n % 10;\n\t\t}\n\t\tn /= 10;\n\t}\n\treturn abs(even - odd) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122615,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0vokugup.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmp0vokugup.__unittest_L25_C1() [0x427b0d]\n??:? void tmp0vokugup.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428224]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n    if (n == 1) \n        return false; \n    long oddDigit = 0, evenDigit = 0; \n    bool flag = true; \n    while (n > 0) { \n        if (flag) { \n            oddDigit += n % 10; \n            flag = false; \n        } \n        else { \n            evenDigit += n % 10; \n            flag = true; \n        } \n        n /= 10; \n    } \n    return is_Diff(abs(oddDigit - evenDigit)); \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122630,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tif (n < 0)\n\t\tn = -n;\n\tif (n < 10)\n\t\treturn false;\n\tint odd = 0;\n\tint even = 0;\n\twhile (n > 0)\n\t{\n\t\todd += n % 10;\n\t\tn /= 10;\n\t\teven += n % 10;\n\t\tn /= 10;\n\t}\n\treturn abs(odd - even) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum = 0;\n\tint sum1 = 0;\n\tint sum2 = 0;\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\tint m = 0;\n\tint n1 = 0;\n\tint o = 0;\n\tint p = 0;\n\tint q = 0;\n\tint r = 0;\n\tint s = 0;\n\tint t = 0;\n\tint u = 0;\n\tint v = 0;\n\tint w = 0;\n\tint x = 0;\n\tint y = 0;\n\tint z = 0;\n\tint aa = 0;\n\tint bb = 0;\n\tint cc = 0;\n\tint dd = 0;\n\tint ee = 0;\n\tint ff = 0;\n\tint gg = 0;\n\tint hh = 0;\n\tint ii = 0;\n\tint jj = 0;\n\tint kk = 0;\n\tint ll = 0;\n\tint mm = 0;\n\tint nn = 0;\n\tint oo = 0;\n\tint pp = 0;\n\tint qq = 0;\n\tint rr = 0;\n\tint ss = 0;\n\tint tt = 0;\n\tint uu = 0;\n\tint vv = 0;\n\tint ww = 0;\n\tint xx = 0;\n\tint yy = 0;\n\tint zz = 0;\n\tint aaa = 0;\n\tint bbb = 0;\n\tint ccc = 0;\n\tint ddd = 0;\n\tint eee = 0;\n\tint fff = 0;\n\tint ggg = 0;\n\tint hhh = 0;\n\tint iii = 0;\n\tint jjj = 0;\n\tint kkk = 0;\n\tint lll = 0;\n\tint mmm = 0;\n\tint nnn = 0;\n\tint ooo = 0;\n\tint ppp = 0;\n\tint qqq = 0;\n\tint rrr = 0;\n\tint sss = 0;\n\tint ttt = 0;\n\t\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122615,
      "stdout": "",
      "stderr": "/tmp/tmpombghq_p.d(77): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpombghq_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n < 0) \n        n = -n; \n  \n    if (n == 0 || n == 1) \n        return true; \n  \n    int d1 = n % 10; \n    n = n / 10; \n    int d2 = n % 10; \n    n = n / 10; \n  \n    if (d1 < d2) \n        return is_Diff(n - (d1 + d2)); \n    else\n        return is_Diff(n + (d1 - d2)); \n} \n  \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122630,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint s = 0;\n\twhile (n) \n\t{\n\t\ts += n % 10;\n\t\tn /= 10;\n\t\ts -= n % 10;\n\t\tn /= 10;\n\t}\n\treturn s % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517224,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint odd_digits = 0;\n\tint even_digits = 0;\n\tint i = 0;\n\twhile (n != 0) {\n\t\tif (i % 2 == 0) {\n\t\t\teven_digits += n % 10;\n\t\t} else {\n\t\t\todd_digits += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(odd_digits - even_digits) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    int oddDigit = 0, evenDigit = 0; \n  \n    while (n != 0) { \n        evenDigit += n % 10; \n        n /= 10; \n  \n        oddDigit += n % 10; \n        n /= 10; \n    } \n  \n    return abs(oddDigit - evenDigit) % 11 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum = 0;\n\tint diff = 0;\n\tint i = 0;\n\twhile (n > 0) \n\t{\n\t\tif (i % 2 == 0) \n\t\t{\n\t\t\tsum += n % 10;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tdiff += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn abs(sum - diff) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint even = 0;\n\tint odd = 0;\n\tfor (int i = 0; i < n.length; i++)\n\t{\n\t\tif (i % 2 == 0)\n\t\t{\n\t\t\teven += n[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd += n[i];\n\t\t}\n\t}\n\treturn abs(even - odd) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122615,
      "stdout": "",
      "stderr": "/tmp/tmp6ya3keho.d(11): Error: no property `length` for type `long`\n/tmp/tmp6ya3keho.d(15): Error: only one index allowed to index `long`\n/tmp/tmp6ya3keho.d(19): Error: only one index allowed to index `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6ya3keho.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint l = n.length;\n\tint sum1 = 0;\n\tint sum2 = 0;\n\tfor (int i = 0; i < l; i++)\n\t{\n\t\tif (i % 2 == 0)\n\t\t{\n\t\t\tsum1 += n[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsum2 += n[i];\n\t\t}\n\t}\n\treturn abs(sum1 - sum2) % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122615,
      "stdout": "",
      "stderr": "/tmp/tmptvrrttaa.d(9): Error: no property `length` for type `long`\n/tmp/tmptvrrttaa.d(16): Error: only one index allowed to index `long`\n/tmp/tmptvrrttaa.d(20): Error: only one index allowed to index `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptvrrttaa.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n < 0) \n        n = -n; \n  \n    if (n == 0 || n == 1) \n        return true; \n  \n    long odd_dig = 0, even_dig = 0; \n  \n    while (n) { \n        if (n & 1) \n            odd_dig++; \n        else\n            even_dig++; \n  \n        n >>= 1; \n    } \n  \n    return is_Diff(abs(odd_dig - even_dig)); \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122615,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpnn7ig0t2.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmpnn7ig0t2.__unittest_L28_C1() [0x427abe]\n??:? void tmpnn7ig0t2.__modtest() [0x427b28]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    // Find sum of even digits \n    long even_sum = 0; \n    while (n > 0) { \n        even_sum += n % 10; \n        n = n / 10; \n        if (n > 0) \n            even_sum -= n % 10; \n        n = n / 10; \n    } \n  \n    return (even_sum % 11 == 0); \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    // Find sum of even and odd digits \n    long odd_sum = 0, even_sum = 0; \n    while (n != 0) { \n        // If digit is odd \n        if (abs(n) % 2 == 1) \n            odd_sum += n % 10; \n  \n        // If digit is even \n        else\n            even_sum += n % 10; \n  \n        n /= 10; \n    } \n  \n    // If difference is multiple of 11, \n    // then number is divisible by 11 \n    return (odd_sum - even_sum) % 11 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122615,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9wm4bi2p.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427de5]\n??:? void tmp9wm4bi2p.__unittest_L30_C1() [0x427b19]\n??:? void tmp9wm4bi2p.__modtest() [0x427b64]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a99e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]\n??:? runModuleUnitTests [0x42b8e1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428234]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint s = 0;\n\twhile (n > 0) \n\t{\n\t\ts += n % 10;\n\t\tn /= 10;\n\t\ts -= n % 10;\n\t\tn /= 10;\n\t}\n\treturn s % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    long oddDigitsSum = 0, evenDigitsSum = 0; \n    while (n != 0) { \n        if ((n & 1) != 0) \n            oddDigitsSum += n % 10; \n        else\n            evenDigitsSum += n % 10; \n        n /= 10; \n    } \n    return abs(oddDigitsSum - evenDigitsSum) % 11 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122615,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqro830io.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpqro830io.__unittest_L19_C1() [0x427afd]\n??:? void tmpqro830io.__modtest() [0x427b48]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baeb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a97e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa9d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a955]\n??:? runModuleUnitTests [0x42b8c1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428214]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n < 0) \n        n = -n; \n  \n    if (n == 0 || n == 1) \n        return true; \n  \n    long oddDigit = 0, evenDigit = 0; \n  \n    while (n) { \n        oddDigit += n % 10; \n        n /= 10; \n  \n        if (n) { \n            evenDigit += n % 10; \n            n /= 10; \n        } \n    } \n  \n    return is_Diff(abs(oddDigit - evenDigit)); \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122630,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    long oddDigitsSum = 0, evenDigitsSum = 0; \n  \n    // If the number is negative, make it positive \n    if (n < 0) \n        n = -n; \n  \n    // Find sum of odd digits \n    while (n) { \n        oddDigitsSum += n % 10; \n        n /= 10; \n  \n        evenDigitsSum += n % 10; \n        n /= 10; \n    } \n  \n    return abs(oddDigitsSum - evenDigitsSum) % 11 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    long oddDigit = 0, evenDigit = 0; \n  \n    bool isOdd = true; \n    while (n != 0) { \n        long rem = n % 10; \n        if (isOdd) \n            oddDigit += rem; \n        else\n            evenDigit += rem; \n  \n        isOdd = !isOdd; \n        n /= 10; \n    } \n    return abs(oddDigit - evenDigit) % 11 == 0; \n} \n  \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122615,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    // Find sum of even and odd digits \n    long even_sum = 0, odd_sum = 0; \n    while (n != 0) \n    { \n        // Get last digit \n        long digit = n % 10; \n        // If even digit, add to even sum \n        if (digit % 2 == 0) \n            even_sum += digit; \n        // If odd digit, add to odd sum \n        else\n            odd_sum += digit; \n        // Remove last digit \n        n /= 10; \n    } \n    // Return true if difference is multiple of 11 \n    return abs(even_sum - odd_sum) % 11 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122615,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6_egjkgo.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmp6_egjkgo.__unittest_L27_C1() [0x427b01]\n??:? void tmp6_egjkgo.__modtest() [0x427b4c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a986]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb19]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a95d]\n??:? runModuleUnitTests [0x42b8c9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42821c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    long oddDigit = 0, evenDigit = 0; \n  \n    bool isOdd = true; \n    while (n != 0) { \n        long rem = n % 10; \n        if (isOdd) \n            oddDigit += rem; \n        else\n            evenDigit += rem; \n  \n        isOdd = !isOdd; \n        n /= 10; \n    } \n  \n    return abs(oddDigit - evenDigit) % 11 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n  \n    // Find sum of even placed \n    // digits (from right to left) \n    long even_sum = 0; \n    for (long i = 0; n > 0; i++) { \n        if (i % 2 == 0) \n            even_sum += n % 10; \n        n /= 10; \n    } \n  \n    // Find sum of odd placed digits \n    // (from right to left) \n    long odd_sum = 0; \n    for (long i = 0; n > 0; i++) { \n        if (i % 2 == 1) \n            odd_sum += n % 10; \n        n /= 10; \n    } \n  \n    // If difference is a multiple of 11, \n    // then number is divisible by 11 \n    return abs(even_sum - odd_sum) % 11 == 0; \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122616,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpkd_1moeb.d(39): unittest failure\n----------------\n??:? _d_unittestp [0x427e25]\n??:? void tmpkd_1moeb.__unittest_L34_C1() [0x427b59]\n??:? void tmpkd_1moeb.__modtest() [0x427ba4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430020]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fafd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9b5]\n??:? runModuleUnitTests [0x42b921]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428274]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{\n\tint sum = 0;\n\twhile (n) \n\t{\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t\tsum -= n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum % 11 == 0;\n}\nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122616,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    if (n == 0) \n        return true; \n    if (n == 1) \n        return false; \n    long odd_dig = 0, even_dig = 0; \n    while (n != 0) { \n        if ((n & 1) != 0) \n            odd_dig += 1; \n        n = n >> 1; \n        if ((n & 1) != 0) \n            even_dig += 1; \n        n = n >> 1; \n    } \n    return is_Diff(abs(odd_dig - even_dig)); \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122612,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpf00awaia.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427dcd]\n??:? void tmpf00awaia.__unittest_L24_C1() [0x427ae2]\n??:? void tmpf00awaia.__modtest() [0x427b4c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baf3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a986]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb19]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faa5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a95d]\n??:? runModuleUnitTests [0x42b8c9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42821c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to find whether a number is divisible by 11.\n\t\n*/\nbool is_Diff(long n) \n{ \n    // Find sum of even and odd digits \n    long even_sum = 0, odd_sum = 0; \n    while (n != 0) { \n        even_sum += n % 10; \n        n /= 10; \n        odd_sum += n % 10; \n        n /= 10; \n    } \n  \n    // If difference is 0 or divisible by 11 then number is divisible by 11 \n    return (even_sum - odd_sum == 0 || (even_sum - odd_sum) % 11 == 0); \n} \nunittest\n{\n    alias candidate = is_Diff;\n\n    assert(candidate(12345L) == false);\n    assert(candidate(1212112L) == true);\n    assert(candidate(1212L) == false);\n}\nvoid main(){}",
      "timestamp": 1666122616,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
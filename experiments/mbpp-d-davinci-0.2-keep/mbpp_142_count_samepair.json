{
  "name": "mbpp_142_count_samepair",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to count number items that are identical in the same position of three given lists.\n\t\n*/\nlong count_samepair(long[] list1, long[] list2, long[] list3) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_142_count_samepair.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = count_samepair;\n\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L], [2L, 2L, 3L, 1L, 2L, 6L, 7L, 9L], [2L, 1L, 3L, 1L, 2L, 6L, 7L, 9L]) == 3L);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L], [2L, 2L, 3L, 1L, 2L, 6L, 7L, 8L], [2L, 1L, 3L, 1L, 2L, 6L, 7L, 8L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 2L, 6L, 7L, 8L], [2L, 2L, 3L, 1L, 2L, 6L, 7L, 8L], [2L, 1L, 3L, 1L, 2L, 6L, 7L, 8L]) == 5L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tlong count = 0;\n\tforeach(i, item; list1)\n\t{\n\t\tif(list2[i] == item && list3[i] == item)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tfor (int i = 0; i < list1.length; i++)\n\t{\n\t\tif (list1[i] == list2[i] && list2[i] == list3[i])\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\t\n\tforeach(i, item; list1)\n\t{\n\t\tif(item == list2[i] && item == list3[i])\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\t\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i, item; list1)\n\t{\n\t\tif(item == list2[i] && item == list3[i])\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach (i; 0 .. list1.length)\n\t{\n\t\tif (list1[i] == list2[i] && list2[i] == list3[i])\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tif(list1[i] == list2[i] && list2[i] == list3[i])\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i, item; list1)\n\t{\n\t\tif(item == list2[i] && item == list3[i])\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0..list1.length)\n\t{\n\t\tif(list1[i] == list2[i] && list2[i] == list3[i])\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach (i, item; list1)\n\t{\n\t\tif (list2[i] == item && list3[i] == item)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i, item; list1)\n\t{\n\t\tif(list2[i] == item && list3[i] == item)\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i, elem; list1)\n\t{\n\t\tif(elem == list2[i] && elem == list3[i])\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i, item; list1)\n\t{\n\t\tif(list2[i] == item && list3[i] == item)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i, e; list1)\n\t{\n\t\tif(e == list2[i] && e == list3[i])\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tif(list1[i] == list2[i] && list2[i] == list3[i])\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i, item; list1)\n\t{\n\t\tif(item == list2[i] && item == list3[i])\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i, item; list1)\n\t{\n\t\tif(list2[i] == item && list3[i] == item)\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i, item; list1)\n\t{\n\t\tif(list2[i] == item && list3[i] == item)\n\t\t\tcount++;\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i, item; list1)\n\t{\n\t\tif(list2[i] == item && list3[i] == item)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i, item; list1)\n\t{\n\t\tif(item == list2[i] && item == list3[i])\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
    "{\n\tlong count = 0;\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tif(list1[i] == list2[i] && list2[i] == list3[i])\n\t\t\tcount++;\n\t}\n\treturn count;\n}"
  ]
}
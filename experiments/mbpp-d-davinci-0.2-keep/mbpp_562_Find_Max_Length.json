{
  "name": "mbpp_562_Find_Max_Length",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the length of the longest sublists.\n\t\n*/\nlong Find_Max_Length(long[][] lst) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_562_Find_Max_Length.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = Find_Max_Length;\n\n    assert(candidate([[1L], [1L, 4L], [5L, 6L, 7L, 8L]]) == 4L);\n    assert(candidate([[0L, 1L], [2L, 2L], [3L, 2L, 1L]]) == 3L);\n    assert(candidate([[7L], [22L, 23L], [13L, 14L, 15L], [10L, 20L, 30L, 40L, 50L]]) == 5L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tlong max = 0;\n\tforeach(i; lst)\n\t{\n\t\tif(i.length > max)\n\t\t\tmax = i.length;\n\t}\n\treturn max;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(i; 0 .. lst.length)\n\t{\n\t\tif(lst[i].length > max_len)\n\t\t{\n\t\t\tmax_len = lst[i].length;\n\t\t}\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(i; lst)\n\t{\n\t\tif(i.length > max_len)\n\t\t{\n\t\t\tmax_len = i.length;\n\t\t}\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(i; 0 .. lst.length)\n\t{\n\t\tif(lst[i].length > max_len)\n\t\t{\n\t\t\tmax_len = lst[i].length;\n\t\t}\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(i; lst)\n\t{\n\t\tmax_len = max(max_len, i.length);\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(sub_list; lst)\n\t{\n\t\tif(sub_list.length > max_length)\n\t\t{\n\t\t\tmax_length = sub_list.length;\n\t\t}\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(sublist; lst)\n\t{\n\t\tmax_len = max(max_len, sublist.length);\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(l; lst)\n\t{\n\t\tmax_length = max(max_length, l.length);\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max = 0;\n\tforeach(sublist; lst)\n\t{\n\t\tif(sublist.length > max)\n\t\t\tmax = sublist.length;\n\t}\n\treturn max;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(sublist; lst)\n\t{\n\t\tmax_length = max(max_length, sublist.length);\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(l; lst)\n\t{\n\t\tmax_len = max(max_len, l.length);\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; lst)\n\t{\n\t\tif(i.length > max)\n\t\t{\n\t\t\tmax = i.length;\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(long[] sublist; lst)\n\t{\n\t\tif(sublist.length > max_len)\n\t\t\tmax_len = sublist.length;\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max_length = 0;\n\tfor (long i = 0; i < lst.length; i++) \n\t{\n\t\tif (lst[i].length > max_length) \n\t\t{\n\t\t\tmax_length = lst[i].length;\n\t\t}\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; lst)\n\t{\n\t\tif(i.length > max)\n\t\t\tmax = i.length;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; lst)\n\t{\n\t\tif(i.length > max)\n\t\t\tmax = i.length;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; lst)\n\t{\n\t\tif(i.length > max)\n\t\t{\n\t\t\tmax = i.length;\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; lst)\n\t{\n\t\tif(i.length > max)\n\t\t\tmax = i.length;\n\t}\n\treturn max;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(long[] sublist; lst)\n\t{\n\t\tif(sublist.length > max_length)\n\t\t{\n\t\t\tmax_length = sublist.length;\n\t\t}\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(long[] sublist; lst)\n\t{\n\t\tif(sublist.length > max_length)\n\t\t{\n\t\t\tmax_length = sublist.length;\n\t\t}\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(l; lst)\n\t{\n\t\tmax_len = max(max_len, l.length);\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(i; lst)\n\t{\n\t\tif (i.length > max_len)\n\t\t{\n\t\t\tmax_len = i.length;\n\t\t}\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(l; lst) \n\t{\n\t\tif(l.length > max_length) \n\t\t{\n\t\t\tmax_length = l.length;\n\t\t}\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(sublist; lst)\n\t{\n\t\tmax_length = max(max_length, sublist.length);\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; lst)\n\t{\n\t\tmax = max(max, i.length);\n\t}\n\treturn max;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(sublist; lst)\n\t{\n\t\tmax_length = max(max_length, sublist.length);\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(sublist; lst) \n\t{\n\t\tif(sublist.length > max_length) \n\t\t{\n\t\t\tmax_length = sublist.length;\n\t\t}\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(i; lst)\n\t{\n\t\tmax_length = max(max_length, i.length);\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(i; lst)\n\t{\n\t\tif(i.length > max_len)\n\t\t\tmax_len = i.length;\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(sublist; lst) \n\t{\n\t\tmax_length = max(max_length, sublist.length);\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; lst) \n\t{\n\t\tmax = max(max, i.length);\n\t}\n\treturn max;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(long[] sublist; lst)\n\t{\n\t\tif(sublist.length > max_len)\n\t\t\tmax_len = sublist.length;\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(long[] sublist; lst)\n\t{\n\t\tif(sublist.length > max_length)\n\t\t{\n\t\t\tmax_length = sublist.length;\n\t\t}\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(i; lst)\n\t{\n\t\tif(max_len < i.length)\n\t\t{\n\t\t\tmax_len = i.length;\n\t\t}\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(sublist; lst)\n\t{\n\t\tmax_len = max(max_len, sublist.length);\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; lst)\n\t{\n\t\tif(i.length > max)\n\t\t{\n\t\t\tmax = i.length;\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(long[] sublist; lst)\n\t{\n\t\tif(sublist.length > max_length)\n\t\t{\n\t\t\tmax_length = sublist.length;\n\t\t}\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(sublist; lst)\n\t{\n\t\tmax_length = max(max_length, sublist.length);\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(i; 0 .. lst.length)\n\t{\n\t\tif(lst[i].length > max_len)\n\t\t{\n\t\t\tmax_len = lst[i].length;\n\t\t}\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(long[] sublist; lst)\n\t{\n\t\tif(sublist.length > max_length)\n\t\t{\n\t\t\tmax_length = sublist.length;\n\t\t}\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(sublist; lst) \n\t{\n\t\tmax_length = max(max_length, sublist.length);\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(i; lst)\n\t{\n\t\tmax_length = max(max_length, i.length);\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; lst)\n\t{\n\t\tif(i.length > max)\n\t\t{\n\t\t\tmax = i.length;\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(sublist; lst) \n\t{\n\t\tmax_length = max(max_length, sublist.length);\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max = 0;\n\tforeach(long[] sublist; lst) \n\t{\n\t\tif(sublist.length > max) \n\t\t{\n\t\t\tmax = sublist.length;\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(long[] sublist; lst)\n\t{\n\t\tmax_len = max(max_len, sublist.length);\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(sublist; lst) \n\t{\n\t\tmax_length = max(max_length, sublist.length);\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(sublist; lst) \n\t{\n\t\tmax_len = max(max_len, sublist.length);\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(l; lst)\n\t{\n\t\tmax_length = max(max_length, l.length);\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; lst)\n\t{\n\t\tif(i.length > max)\n\t\t\tmax = i.length;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; lst)\n\t{\n\t\tif(i.length > max)\n\t\t{\n\t\t\tmax = i.length;\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(sublist; lst)\n\t{\n\t\tmax_len = max(max_len, sublist.length);\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(i; lst)\n\t{\n\t\tif(i.length > max_len)\n\t\t{\n\t\t\tmax_len = i.length;\n\t\t}\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max = 0;\n\tforeach(long[] sublist; lst)\n\t{\n\t\tif(sublist.length > max)\n\t\t{\n\t\t\tmax = sublist.length;\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; lst)\n\t{\n\t\tif(i.length > max)\n\t\t{\n\t\t\tmax = i.length;\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; lst) \n\t{\n\t\tmax = max(max, i.length);\n\t}\n\treturn max;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(sublist; lst)\n\t{\n\t\tmax_len = max(max_len, sublist.length);\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(lst_; lst)\n\t{\n\t\tmax_length = max(max_length, lst_.length);\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(sublst; lst)\n\t{\n\t\tmax_len = max(max_len, sublst.length);\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; lst)\n\t{\n\t\tif(max < i.length)\n\t\t\tmax = i.length;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; lst)\n\t{\n\t\tif(i.length > max)\n\t\t\tmax = i.length;\n\t}\n\treturn max;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(sublst; lst)\n\t{\n\t\tmax_len = max(max_len, sublst.length);\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(sublist; lst)\n\t{\n\t\tmax_len = max(max_len, sublist.length);\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(sublist; lst) \n\t{\n\t\tmax_len = max(max_len, sublist.length);\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(i; lst)\n\t{\n\t\tmax_len = max(max_len, i.length);\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(i; lst)\n\t{\n\t\tmax_len = max(max_len, i.length);\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(i; lst)\n\t{\n\t\tif(max_length < i.length)\n\t\t{\n\t\t\tmax_length = i.length;\n\t\t}\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(i; lst)\n\t{\n\t\tmax_len = max(max_len, i.length);\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; lst)\n\t{\n\t\tif(i.length > max)\n\t\t\tmax = i.length;\n\t}\n\treturn max;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(i; lst)\n\t{\n\t\tif(i.length > max_len)\n\t\t{\n\t\t\tmax_len = i.length;\n\t\t}\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(sublist; lst)\n\t{\n\t\tmax_len = max(max_len, sublist.length);\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(i; lst)\n\t{\n\t\tmax_len = max(max_len, i.length);\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(sublist; lst)\n\t{\n\t\tif(sublist.length > max_len)\n\t\t\tmax_len = sublist.length;\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(sublist; lst) \n\t{\n\t\tmax_length = max(max_length, sublist.length);\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; lst)\n\t{\n\t\tif(i.length > max)\n\t\t{\n\t\t\tmax = i.length;\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(sublist; lst) \n\t{\n\t\tmax_length = max(max_length, sublist.length);\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(i; 0 .. lst.length)\n\t{\n\t\tif(lst[i].length > max_len)\n\t\t{\n\t\t\tmax_len = lst[i].length;\n\t\t}\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(sublist; lst)\n\t{\n\t\tmax_length = max(max_length, sublist.length);\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(long[] sublist; lst)\n\t{\n\t\tmax_len = max(max_len, sublist.length);\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(i; lst)\n\t{\n\t\tmax_length = max(max_length, i.length);\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(i; lst)\n\t{\n\t\tif(i.length > max_length)\n\t\t{\n\t\t\tmax_length = i.length;\n\t\t}\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; lst)\n\t{\n\t\tif(i.length > max)\n\t\t\tmax = i.length;\n\t}\n\treturn max;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(i; 0 .. lst.length)\n\t{\n\t\tif (lst[i].length > max_length)\n\t\t{\n\t\t\tmax_length = lst[i].length;\n\t\t}\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(i; 0 .. lst.length)\n\t{\n\t\tif(lst[i].length > max_len)\n\t\t{\n\t\t\tmax_len = lst[i].length;\n\t\t}\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(i; lst)\n\t{\n\t\tif(max_length < i.length)\n\t\t{\n\t\t\tmax_length = i.length;\n\t\t}\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; lst)\n\t{\n\t\tif(i.length > max)\n\t\t\tmax = i.length;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(sublist; lst)\n\t{\n\t\tif(sublist.length > max)\n\t\t\tmax = sublist.length;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; lst)\n\t{\n\t\tif(i.length > max)\n\t\t\tmax = i.length;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; lst)\n\t{\n\t\tif(i.length > max)\n\t\t{\n\t\t\tmax = i.length;\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; lst)\n\t{\n\t\tif(max < i.length)\n\t\t\tmax = i.length;\n\t}\n\treturn max;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(sublist; lst)\n\t{\n\t\tif(sublist.length > max_length)\n\t\t{\n\t\t\tmax_length = sublist.length;\n\t\t}\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(i; lst)\n\t{\n\t\tmax_length = max(max_length, i.length);\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(i; lst)\n\t{\n\t\tmax_length = max(max_length, i.length);\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max = 0;\n\tforeach (i; lst)\n\t{\n\t\tif (i.length > max)\n\t\t\tmax = i.length;\n\t}\n\treturn max;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(long[] sublist; lst)\n\t{\n\t\tmax_length = max(max_length, sublist.length);\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; lst)\n\t{\n\t\tif(i.length > max)\n\t\t{\n\t\t\tmax = i.length;\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(i; lst)\n\t{\n\t\tmax_length = max(max_length, i.length);\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max = 0;\n\tforeach(long[] sublist; lst)\n\t{\n\t\tmax = max(max, sublist.length);\n\t}\n\treturn max;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(i; 0..lst.length)\n\t{\n\t\tmax_len = max(max_len, lst[i].length);\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(i; 0 .. lst.length)\n\t{\n\t\tif(lst[i].length > max_len)\n\t\t\tmax_len = lst[i].length;\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; lst) \n\t{\n\t\tif(max < i.length) \n\t\t{\n\t\t\tmax = i.length;\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(long[] sublist; lst)\n\t{\n\t\tmax_len = max(max_len, sublist.length);\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max = 0;\n\tforeach(long[] sublst; lst)\n\t{\n\t\tif (sublst.length > max)\n\t\t\tmax = sublst.length;\n\t}\n\treturn max;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(i; lst)\n\t{\n\t\tif(i.length > max_len)\n\t\t{\n\t\t\tmax_len = i.length;\n\t\t}\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max = 0;\n\tforeach(l; lst)\n\t{\n\t\tif(l.length > max)\n\t\t\tmax = l.length;\n\t}\n\treturn max;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(i; lst)\n\t{\n\t\tif(i.length > max_length)\n\t\t{\n\t\t\tmax_length = i.length;\n\t\t}\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(l; lst)\n\t{\n\t\tmax_length = max(max_length, l.length);\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(sublist; lst) \n\t{\n\t\tmax_length = max(max_length, sublist.length);\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; lst)\n\t{\n\t\tif(i.length > max)\n\t\t{\n\t\t\tmax = i.length;\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; lst)\n\t{\n\t\tif(i.length > max)\n\t\t\tmax = i.length;\n\t}\n\treturn max;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(i; lst) \n\t{\n\t\tif(i.length > max_length) \n\t\t{\n\t\t\tmax_length = i.length;\n\t\t}\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(i; lst)\n\t{\n\t\tif(i.length > max_len)\n\t\t{\n\t\t\tmax_len = i.length;\n\t\t}\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(sublist; lst) \n\t{\n\t\tmax_len = max(max_len, sublist.length);\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; lst)\n\t{\n\t\tif(i.length > max)\n\t\t\tmax = i.length;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; lst)\n\t{\n\t\tif(max < i.length)\n\t\t{\n\t\t\tmax = i.length;\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; lst)\n\t{\n\t\tif(i.length > max)\n\t\t\tmax = i.length;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(long[] sublist; lst)\n\t{\n\t\tmax = max(max, sublist.length);\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; lst)\n\t{\n\t\tif(i.length > max)\n\t\t\tmax = i.length;\n\t}\n\treturn max;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(sublist; lst)\n\t{\n\t\tmax_length = max(max_length, sublist.length);\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(i; lst)\n\t{\n\t\tmax_length = max(max_length, i.length);\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(sublist; lst)\n\t{\n\t\tif(sublist.length > max_length)\n\t\t{\n\t\t\tmax_length = sublist.length;\n\t\t}\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(long[] sublist; lst)\n\t{\n\t\tmax_length = max(max_length, sublist.length);\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; lst)\n\t{\n\t\tif(i.length > max)\n\t\t\tmax = i.length;\n\t}\n\treturn max;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(long[] sublist; lst)\n\t{\n\t\tif(sublist.length > max_length)\n\t\t{\n\t\t\tmax_length = sublist.length;\n\t\t}\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(i; lst)\n\t{\n\t\tmax_length = max(max_length, i.length);\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(i; lst)\n\t{\n\t\tmax_length = max(max_length, i.length);\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(sublist; lst) \n\t{\n\t\tmax_length = max(max_length, sublist.length);\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(sublist; lst)\n\t{\n\t\tif(sublist.length > max_length)\n\t\t{\n\t\t\tmax_length = sublist.length;\n\t\t}\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(i; 0 .. lst.length)\n\t{\n\t\tmax_len = max(max_len, lst[i].length);\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(i; lst)\n\t{\n\t\tmax_len = max(max_len, i.length);\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(l; lst)\n\t{\n\t\tmax_length = max(max_length, l.length);\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(sublist; lst)\n\t{\n\t\tif(sublist.length > max_length)\n\t\t{\n\t\t\tmax_length = sublist.length;\n\t\t}\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(i; lst) \n\t{\n\t\tif(i.length > max_len) \n\t\t{\n\t\t\tmax_len = i.length;\n\t\t}\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(i; 0 .. lst.length)\n\t{\n\t\tif(lst[i].length > max_len)\n\t\t{\n\t\t\tmax_len = lst[i].length;\n\t\t}\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; lst)\n\t{\n\t\tif(i.length > max)\n\t\t{\n\t\t\tmax = i.length;\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(sublist; lst)\n\t{\n\t\tmax_length = max(max_length, sublist.length);\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(i; lst) \n\t{\n\t\tmax_length = max(max_length, i.length);\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(long[] sublist; lst)\n\t{\n\t\tmax_length = max(max_length, sublist.length);\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(long[] sub_lst; lst)\n\t{\n\t\tmax_len = max(max_len, sub_lst.length);\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(i; lst)\n\t{\n\t\tif(i.length > max_len)\n\t\t{\n\t\t\tmax_len = i.length;\n\t\t}\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(long[] sublist; lst)\n\t{\n\t\tif(sublist.length > max_length)\n\t\t{\n\t\t\tmax_length = sublist.length;\n\t\t}\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(sublist; lst)\n\t{\n\t\tmax_length = max(max_length, sublist.length);\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(i; lst)\n\t{\n\t\tmax_length = max(max_length, i.length);\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(l; lst)\n\t{\n\t\tmax_len = max(max_len, l.length);\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max = 0;\n\tforeach(l; lst)\n\t{\n\t\tif(l.length > max)\n\t\t{\n\t\t\tmax = l.length;\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(i; lst)\n\t{\n\t\tmax_length = max(max_length, i.length);\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(sublist; lst)\n\t{\n\t\tmax_length = max(max_length, sublist.length);\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; lst)\n\t{\n\t\tmax = max(max, i.length);\n\t}\n\treturn max;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(i; lst)\n\t{\n\t\tmax_len = max(max_len, i.length);\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; lst)\n\t{\n\t\tif(i.length > max)\n\t\t\tmax = i.length;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; lst)\n\t{\n\t\tif(i.length > max)\n\t\t{\n\t\t\tmax = i.length;\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(i; 0..lst.length)\n\t{\n\t\tif(lst[i].length > max_len)\n\t\t{\n\t\t\tmax_len = lst[i].length;\n\t\t}\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(i; lst)\n\t{\n\t\tif(i.length > max_len)\n\t\t{\n\t\t\tmax_len = i.length;\n\t\t}\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(i; lst)\n\t{\n\t\tif(i.length > max_length)\n\t\t{\n\t\t\tmax_length = i.length;\n\t\t}\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; lst)\n\t{\n\t\tif(max < i.length)\n\t\t{\n\t\t\tmax = i.length;\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(i; lst)\n\t{\n\t\tmax_len = max(max_len, i.length);\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(i; lst)\n\t{\n\t\tmax_length = max(max_length, i.length);\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; lst)\n\t{\n\t\tif(i.length > max)\n\t\t{\n\t\t\tmax = i.length;\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(sublist; lst)\n\t{\n\t\tmax_len = max(max_len, sublist.length);\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(i; 0 .. lst.length)\n\t{\n\t\tmax_len = max(max_len, lst[i].length);\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; lst)\n\t{\n\t\tif(i.length > max)\n\t\t\tmax = i.length;\n\t}\n\treturn max;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; lst)\n\t{\n\t\tif(i.length > max)\n\t\t{\n\t\t\tmax = i.length;\n\t\t}\n\t}\n\treturn max;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(sublist; lst)\n\t{\n\t\tmax_length = max(max_length, sublist.length);\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max = 0;\n\tforeach(long[] sublist; lst)\n\t{\n\t\tmax = max(max, sublist.length);\n\t}\n\treturn max;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(i; lst)\n\t{\n\t\tmax_len = max(max_len, i.length);\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(sublist; lst)\n\t{\n\t\tif(sublist.length > max_len)\n\t\t\tmax_len = sublist.length;\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(l; lst)\n\t{\n\t\tmax_length = max(max_length, l.length);\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(i; lst)\n\t{\n\t\tif(i.length > max_len)\n\t\t\tmax_len = i.length;\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(i; 0 .. lst.length)\n\t{\n\t\tmax_len = max(max_len, lst[i].length);\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(sublist; lst) \n\t{\n\t\tmax_len = max(max_len, sublist.length);\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(i; 0 .. lst.length)\n\t{\n\t\tif(lst[i].length > max_len)\n\t\t\tmax_len = lst[i].length;\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max = 0;\n\tforeach(long[] sublist; lst)\n\t{\n\t\tmax = max(max, sublist.length);\n\t}\n\treturn max;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(long[] sublist; lst)\n\t{\n\t\tmax_length = max(max_length, sublist.length);\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(l; lst)\n\t{\n\t\tmax_len = max(max_len, l.length);\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(sublist; lst)\n\t{\n\t\tmax_length = max(max_length, sublist.length);\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; lst)\n\t{\n\t\tif(i.length > max)\n\t\t\tmax = i.length;\n\t}\n\treturn max;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(i; lst) \n\t{\n\t\tif(max_length < i.length) \n\t\t{\n\t\t\tmax_length = i.length;\n\t\t}\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(i; lst)\n\t{\n\t\tmax_length = max(max_length, i.length);\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(i; lst)\n\t{\n\t\tif(i.length > max_len)\n\t\t{\n\t\t\tmax_len = i.length;\n\t\t}\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(i; lst)\n\t{\n\t\tmax_len = max(max_len, i.length);\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(i; 0 .. lst.length)\n\t{\n\t\tif (lst[i].length > max_len)\n\t\t{\n\t\t\tmax_len = lst[i].length;\n\t\t}\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(i; lst)\n\t{\n\t\tmax_len = max(max_len, i.length);\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(sublist; lst)\n\t{\n\t\tif (sublist.length > max_len)\n\t\t{\n\t\t\tmax_len = sublist.length;\n\t\t}\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(sublist; lst)\n\t{\n\t\tmax_length = max(max_length, sublist.length);\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(sublist; lst)\n\t{\n\t\tmax_length = max(max_length, sublist.length);\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(i; lst)\n\t{\n\t\tmax_len = max(max_len, i.length);\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(long[] sublist; lst) \n\t{\n\t\tmax_length = max(max_length, sublist.length);\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max = 0;\n\tforeach(long[] sublist; lst)\n\t{\n\t\tif(sublist.length > max)\n\t\t\tmax = sublist.length;\n\t}\n\treturn max;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(i; 0 .. lst.length)\n\t{\n\t\tmax_len = max(max_len, lst[i].length);\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(i; 0 .. lst.length)\n\t{\n\t\tif(lst[i].length > max_length)\n\t\t{\n\t\t\tmax_length = lst[i].length;\n\t\t}\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; lst)\n\t{\n\t\tif(i.length > max)\n\t\t\tmax = i.length;\n\t}\n\treturn max;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(l; lst) \n\t{\n\t\tmax_length = max(max_length, l.length);\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; lst)\n\t{\n\t\tif(i.length > max)\n\t\t\tmax = i.length;\n\t}\n\treturn max;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(sublist; lst)\n\t{\n\t\tmax_length = max(max_length, sublist.length);\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(l; lst)\n\t{\n\t\tmax_length = max(max_length, l.length);\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(l; lst)\n\t{\n\t\tmax_len = max(max_len, l.length);\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(i; 0 .. lst.length)\n\t{\n\t\tif(lst[i].length > max_length)\n\t\t{\n\t\t\tmax_length = lst[i].length;\n\t\t}\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max_length = 0;\n\tforeach(sublist; lst)\n\t{\n\t\tif(sublist.length > max_length)\n\t\t{\n\t\t\tmax_length = sublist.length;\n\t\t}\n\t}\n\treturn max_length;\n}",
    "{\n\tlong max_len = 0;\n\tforeach(sublst; lst)\n\t{\n\t\tmax_len = max(max_len, sublst.length);\n\t}\n\treturn max_len;\n}",
    "{\n\tlong max = 0;\n\tforeach(i; lst) \n\t{\n\t\tmax = max(max, i.length);\n\t}\n\treturn max;\n}"
  ]
}
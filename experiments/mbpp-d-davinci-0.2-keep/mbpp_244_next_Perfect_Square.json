{
  "name": "mbpp_244_next_Perfect_Square",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\n*/\nlong next_Perfect_Square(long N) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_244_next_Perfect_Square.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = next_Perfect_Square;\n\n    assert(candidate(35L) == 36L);\n    assert(candidate(6L) == 9L);\n    assert(candidate(9L) == 16L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tlong i = 1;\n\twhile(i * i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile(i*i <= N)\n\t\ti++;\n\treturn i*i;\n}",
    "{\n\tlong x = 1;\n\twhile(x*x < N)\n\t{\n\t\tx++;\n\t}\n\treturn x*x;\n}",
    "{\n\tlong i = 1;\n\twhile (i*i < N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N)\n\t\ti++;\n\treturn i * i;\n}",
    "{\n\tlong next_Perfect_Square = (long)ceil(sqrt(N));\n\treturn next_Perfect_Square * next_Perfect_Square;\n}",
    "{\n\tlong i = 1;\n\twhile(i*i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile(i*i < N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile(i * i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile(i*i < N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile(i*i < N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile(i * i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile(i*i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile(i*i < N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N)\n\t\ti++;\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile(i * i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile(i * i <= N)\n\t\ti++;\n\treturn i * i;\n}",
    "{\n\tlong sqrt_N = (long)sqrt(N);\n\treturn (sqrt_N + 1) * (sqrt_N + 1);\n}",
    "{\n\tlong sqrt_N = (long)sqrt(N);\n\treturn (sqrt_N + 1) * (sqrt_N + 1);\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong sqrt_N = cast(long)sqrt(N);\n\treturn (sqrt_N + 1) * (sqrt_N + 1);\n}",
    "{\n\tlong i = 1;\n\twhile (i * i < N)\n\t\ti++;\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile(i*i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile(i*i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N) \n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile (i * i < N) \n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N)\n\t\ti++;\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile(i * i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong i = 0;\n\twhile (i * i < N)\n\t\ti++;\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile (i < N)\n\t{\n\t\ti = i + 1;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong sqrt_N = cast(long)sqrt(N);\n\treturn (sqrt_N + 1) * (sqrt_N + 1);\n}",
    "{\n\tlong sqrtN = cast(long)sqrt(N);\n\treturn (sqrtN + 1) * (sqrtN + 1);\n}",
    "{\n\tlong sqrt_N = sqrt(N);\n\treturn (sqrt_N + 1) * (sqrt_N + 1);\n}",
    "{\n\treturn cast(long)(ceil(sqrt(N)) + 1) * cast(long)(ceil(sqrt(N)) + 1);\n}",
    "{\n\tlong sqrt_N = (long)sqrt(N);\n\tif(sqrt_N * sqrt_N == N)\n\t\treturn (sqrt_N + 1) * (sqrt_N + 1);\n\telse\n\t\treturn (sqrt_N + 1) * (sqrt_N + 1);\n}",
    "{\n\treturn cast(long)(ceil(sqrt(N))+1)*cast(long)(ceil(sqrt(N))+1);\n}",
    "{\n\tlong i = 1;\n\twhile(i*i<N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile(true)\n\t{\n\t\tif(i*i > N)\n\t\t\treturn i*i;\n\t\telse\n\t\t\ti++;\n\t}\n}",
    "{\n\tlong i = 1;\n\twhile(i*i < N)\n\t\ti++;\n\treturn i*i;\n}",
    "{\n\tlong sqrt_N = (long)sqrt(N);\n\tif (sqrt_N * sqrt_N == N)\n\t\treturn (sqrt_N + 1) * (sqrt_N + 1);\n\telse\n\t\treturn (sqrt_N + 1) * (sqrt_N + 1);\n}",
    "{\n\tlong next_Perfect_Square = 0;\n\tlong sqrt_N = (long)sqrt(N);\n\tif(sqrt_N * sqrt_N == N)\n\t{\n\t\tnext_Perfect_Square = (sqrt_N + 1) * (sqrt_N + 1);\n\t}\n\telse\n\t{\n\t\tnext_Perfect_Square = (sqrt_N + 1) * (sqrt_N + 1);\n\t}\n\treturn next_Perfect_Square;\n}",
    "{\n\tlong i = 1;\n\twhile(i*i < N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong sqrt_N = cast(long)sqrt(N);\n\treturn (sqrt_N + 1) * (sqrt_N + 1);\n}",
    "{\n\tlong next_Perfect_Square = N;\n\twhile(true)\n\t{\n\t\tif(next_Perfect_Square == (long)sqrt(next_Perfect_Square))\n\t\t{\n\t\t\treturn next_Perfect_Square;\n\t\t}\n\t\tnext_Perfect_Square++;\n\t}\n}",
    "{\n\tlong i = 1;\n\twhile (i < N)\n\t{\n\t\ti = i + 1;\n\t}\n\treturn i;\n}",
    "{\n\tlong i = 1;\n\twhile(i*i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile(i * i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile (i*i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong n = (long)sqrt(N);\n\treturn (n+1)*(n+1);\n}",
    "{\n\tlong i = 1;\n\twhile(i*i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile(i*i < N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile(i*i < N)\n\t\ti++;\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N)\n\t\ti++;\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile(i*i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong sqrt_N = cast(long)sqrt(N);\n\t\n\tif(sqrt_N * sqrt_N == N)\n\t\treturn (sqrt_N + 1) * (sqrt_N + 1);\n\telse\n\t\treturn (sqrt_N + 1) * (sqrt_N + 1);\n}",
    "{\n\treturn cast(long) ceil(sqrt(N)) + 1;\n}",
    "{\n\tlong i = 1;\n\twhile(i*i < N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N)\n\t\ti++;\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\tlong j = 1;\n\twhile (i < N)\n\t{\n\t\ti = i + j;\n\t\tj = j + 2;\n\t}\n\treturn i;\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile (i < N) \n\t{\n\t\ti *= 2;\n\t}\n\treturn i;\n}",
    "{\n\tlong sqrtN = cast(long)sqrt(N);\n\treturn (sqrtN + 1) * (sqrtN + 1);\n}",
    "{\n\tlong sqrtN = cast(long)sqrt(N);\n\treturn (sqrtN + 1) * (sqrtN + 1);\n}",
    "{\n\tlong i = 1;\n\twhile(i*i < N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile(i*i <= N)\n\t\ti++;\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile(i*i < N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\treturn (long) ceil(sqrt(N)) * (long) ceil(sqrt(N));\n}",
    "{\n\tlong sqrt_N = cast(long)sqrt(N);\n\tlong next_Perfect_Square = (sqrt_N + 1) * (sqrt_N + 1);\n\treturn next_Perfect_Square;\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N) \n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong result = 0;\n\tlong sqrt_N = (long)sqrt(N);\n\tif(sqrt_N*sqrt_N == N)\n\t{\n\t\tresult = (sqrt_N+1)*(sqrt_N+1);\n\t}\n\telse\n\t{\n\t\tresult = (sqrt_N+1)*(sqrt_N+1);\n\t}\n\treturn result;\n}",
    "{\n\tlong i = 1;\n\twhile(i*i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile(i * i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong x = (long)sqrt(N);\n\treturn (x+1)*(x+1);\n}",
    "{\n\tlong sqrt_N = sqrt(N);\n\tif (sqrt_N * sqrt_N == N)\n\t\treturn (sqrt_N + 1) * (sqrt_N + 1);\n\telse\n\t\treturn (sqrt_N + 1) * (sqrt_N + 1);\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N)\n\t\ti++;\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile(i*i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong temp = sqrt(N);\n\tif(temp * temp == N)\n\t\treturn (temp + 1) * (temp + 1);\n\telse\n\t\treturn (temp + 2) * (temp + 2);\n}",
    "{\n\tlong i = 1;\n\twhile(i*i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile(i * i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\treturn (long)ceil(sqrt(N)) * (long)ceil(sqrt(N));\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N)\n\t\ti++;\n\treturn i * i;\n}",
    "{\n\tlong sqrt_N = (long)sqrt(N);\n\tif (sqrt_N * sqrt_N == N)\n\t\treturn (sqrt_N + 1) * (sqrt_N + 1);\n\telse\n\t\treturn (sqrt_N + 1) * (sqrt_N + 1);\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N) \n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong sqrtN = cast(long)sqrt(N);\n\tif (sqrtN * sqrtN == N)\n\t\treturn N;\n\telse\n\t\treturn (sqrtN + 1) * (sqrtN + 1);\n}",
    "{\n\tlong sqrt_N = cast(long)sqrt(N);\n\treturn (sqrt_N + 1) * (sqrt_N + 1);\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N) \n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong i = N;\n\twhile(true)\n\t{\n\t\tif(i*i > N)\n\t\t\treturn i;\n\t\ti++;\n\t}\n}",
    "{\n\tlong i = 1;\n\twhile(i*i < N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile(i*i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N)\n\t\ti++;\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile(i*i <= N)\n\t\ti++;\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile(i*i < N)\n\t\ti++;\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N) \n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile(true)\n\t{\n\t\tif(i*i > N)\n\t\t\treturn i*i;\n\t\ti++;\n\t}\n}",
    "{\n\tlong i = 1;\n\twhile(i*i < N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong sqrt_N = cast(long)sqrt(N);\n\treturn (sqrt_N + 1) * (sqrt_N + 1);\n}",
    "{\n\treturn cast(long)ceil(sqrt(N)) * cast(long)ceil(sqrt(N));\n}",
    "{\n\tlong n = (long)sqrt(N);\n\tif (n * n == N)\n\t\treturn (n + 1) * (n + 1);\n\telse\n\t\treturn -1;\n}",
    "{\n\treturn cast(long)ceil(sqrt(N))*cast(long)ceil(sqrt(N));\n}",
    "{\n\tlong i = 1;\n\twhile(i*i < N)\n\t\ti++;\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N)\n\t\ti++;\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N)\n\t\ti++;\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile(i*i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile(true)\n\t{\n\t\tif(i*i > N)\n\t\t\treturn i*i;\n\t\ti++;\n\t}\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile(i*i < N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile(i * i < N)\n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\treturn cast(long)(ceil(sqrt(N)) * sqrt(N));\n}",
    "{\n\tlong sqrtN = (long)sqrt(N);\n\treturn (sqrtN + 1) * (sqrtN + 1);\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\treturn cast(long)ceil(sqrt(N)) * cast(long)ceil(sqrt(N));\n}",
    "{\n\tlong i = 1;\n\twhile(i * i <= N)\n\t\ti++;\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile(true)\n\t{\n\t\tif(i*i > N)\n\t\t{\n\t\t\treturn i*i;\n\t\t}\n\t\ti++;\n\t}\n}",
    "{\n\tlong result = 0;\n\tlong square = 0;\n\tlong i = 1;\n\twhile(square < N)\n\t{\n\t\tsquare = i * i;\n\t\ti++;\n\t}\n\tresult = square;\n\treturn result;\n}",
    "{\n\tlong i = 1;\n\twhile(i*i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N) \n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\treturn cast(long)(ceil(sqrt(N)) + 1) * cast(long)(ceil(sqrt(N)) + 1);\n}",
    "{\n\tlong i = 1;\n\twhile(i*i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong n = (long)sqrt(N);\n\treturn (n+1)*(n+1);\n}",
    "{\n\tlong i = 1;\n\twhile(i*i < N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile (i * i < N)\n\t\ti++;\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile (i*i < N) \n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong n = (long)sqrt(N);\n\treturn (n+1)*(n+1);\n}",
    "{\n\tlong i = 1;\n\twhile(i*i < N)\n\t\ti++;\n\treturn i*i;\n}",
    "{\n\tlong x = N;\n\twhile(true)\n\t{\n\t\tif(x*x > N)\n\t\t\treturn x;\n\t\tx++;\n\t}\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N) \n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile(i*i < N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile(i*i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile(i*i < N)\n\t\ti++;\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile (i*i < N) \n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile(i*i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N)\n\t\ti++;\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile(i * i < N)\n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile(i*i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong root = (long)sqrt(N);\n\treturn (root+1)*(root+1);\n}",
    "{\n\tlong i = 1;\n\twhile(i*i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N) \n\t{\n\t\ti += 1;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile (i*i <= N) \n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong sqrt_N = (long)sqrt(N);\n\tif (sqrt_N * sqrt_N == N)\n\t\treturn (sqrt_N + 1) * (sqrt_N + 1);\n\telse\n\t\treturn (sqrt_N + 1) * (sqrt_N + 1);\n}",
    "{\n\tlong i = 1;\n\twhile(i * i < N)\n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile(i*i < N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile (i*i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong sqrt_N = cast(long)sqrt(N);\n\treturn (sqrt_N + 1) * (sqrt_N + 1);\n}",
    "{\n\tlong result = 0;\n\tlong i = 1;\n\twhile(result < N)\n\t{\n\t\tresult = i * i;\n\t\ti++;\n\t}\n\treturn result;\n}",
    "{\n\tlong i = 1;\n\twhile(i*i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile (i * i < N)\n\t\ti++;\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile(i*i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile(i*i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile(i*i < N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile (i*i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile(i*i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile(i * i < N)\n\t\ti++;\n\treturn i * i;\n}",
    "{\n\tlong sqrt_N = (long)sqrt(N);\n\tif (sqrt_N * sqrt_N == N)\n\t\treturn (sqrt_N + 1) * (sqrt_N + 1);\n\telse\n\t\treturn (sqrt_N + 1) * (sqrt_N + 1);\n}",
    "{\n\tlong i;\n\tfor (i = N; ; i++) \n\t{\n\t\tif (i == sqrt(i) * sqrt(i)) \n\t\t{\n\t\t\treturn i;\n\t\t}\n\t}\n}",
    "{\n\tlong i = 1;\n\twhile(i*i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile(i*i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\treturn cast(long)ceil(sqrt(N)) * cast(long)ceil(sqrt(N));\n}",
    "{\n\tlong i = 1;\n\twhile (i * i < N) \n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{ \n    long i = 1; \n    while (i * i <= N) \n        i++; \n    return i * i; \n} ",
    "{\n\tlong i = 1;\n\twhile(i*i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong sqrtN = cast(long)sqrt(N);\n\treturn (sqrtN+1)*(sqrtN+1);\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N)\n\t\ti++;\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile(i*i < N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile (i * i < N)\n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong next_Perfect_Square = N;\n\twhile(true)\n\t{\n\t\tif(next_Perfect_Square % sqrt(next_Perfect_Square) == 0)\n\t\t\treturn next_Perfect_Square;\n\t\telse\n\t\t\tnext_Perfect_Square++;\n\t}\n}",
    "{\n\tlong sqrt_N = sqrt(N);\n\tif (sqrt_N * sqrt_N == N)\n\t\treturn (sqrt_N + 1) * (sqrt_N + 1);\n\telse\n\t\treturn (sqrt_N + 1) * (sqrt_N + 1);\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong sqrtN = (long)sqrt(N);\n\treturn (sqrtN + 1) * (sqrtN + 1);\n}",
    "{\n\treturn cast(long)ceil(sqrt(N)) * cast(long)ceil(sqrt(N));\n}",
    "{\n\tlong i = 1;\n\twhile (i*i < N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile(i*i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N) \n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong i = 1;\n\twhile(i*i < N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong sqrt_N = (long)sqrt(N);\n\tif(sqrt_N * sqrt_N == N)\n\t\treturn (sqrt_N + 1) * (sqrt_N + 1);\n\telse\n\t\treturn (sqrt_N + 1) * (sqrt_N + 1);\n}",
    "{\n\tlong i = 1;\n\twhile(i*i < N)\n\t\ti++;\n\treturn i*i;\n}",
    "{\n\tlong i = 1;\n\twhile(true)\n\t{\n\t\tif(i*i > N)\n\t\t\treturn i*i;\n\t\ti++;\n\t}\n}",
    "{\n\treturn cast(long)ceil(sqrt(N)) * cast(long)ceil(sqrt(N));\n}",
    "{\n\tlong i = 1;\n\twhile(true)\n\t{\n\t\tif(i*i > N)\n\t\t\treturn i*i;\n\t\ti++;\n\t}\n}",
    "{\n\tlong i = 1;\n\twhile (i * i <= N)\n\t\ti++;\n\treturn i * i;\n}",
    "{\n\tlong next_Perfect_Square = N;\n\twhile(!is_Perfect_Square(next_Perfect_Square))\n\t{\n\t\tnext_Perfect_Square++;\n\t}\n\treturn next_Perfect_Square;\n}",
    "{\n\tlong i = 0;\n\twhile (i * i < N)\n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\treturn cast(long)ceil(sqrt(N)) + 1;\n}",
    "{\n\tlong i = 1;\n\twhile(i*i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong sqrtN = cast(long)sqrt(N);\n\treturn (sqrtN + 1) * (sqrtN + 1);\n}",
    "{\n\treturn cast(long)ceil(sqrt(N)) * cast(long)ceil(sqrt(N));\n}",
    "{\n\tlong square = 0;\n\tlong i = 1;\n\twhile(square < N)\n\t{\n\t\tsquare = i * i;\n\t\ti++;\n\t}\n\treturn square;\n}",
    "{\n\tlong sqrt_N = sqrt(N);\n\tif (sqrt_N * sqrt_N == N)\n\t\treturn (sqrt_N + 1) * (sqrt_N + 1);\n\telse\n\t\treturn (sqrt_N + 1) * (sqrt_N + 1);\n}",
    "{\n\tlong i = 1;\n\twhile (i * i < N) \n\t{\n\t\ti++;\n\t}\n\treturn i * i;\n}",
    "{\n\tlong sqrt_N = cast(long) sqrt(N);\n\treturn (sqrt_N + 1) * (sqrt_N + 1);\n}",
    "{\n\tlong i = 1;\n\twhile(i*i <= N)\n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong sqrtN = cast(long)sqrt(N);\n\treturn (sqrtN + 1) * (sqrtN + 1);\n}",
    "{\n\tlong i = 1;\n\twhile (i*i <= N) \n\t{\n\t\ti++;\n\t}\n\treturn i*i;\n}",
    "{\n\tlong sqrt_N = (long)sqrt(N);\n\treturn (sqrt_N + 1) * (sqrt_N + 1);\n}",
    "{\n\tlong next_Perfect_Square = 0;\n\tlong i = 1;\n\twhile (next_Perfect_Square < N)\n\t{\n\t\tnext_Perfect_Square = i * i;\n\t\ti++;\n\t}\n\treturn next_Perfect_Square;\n}"
  ]
}
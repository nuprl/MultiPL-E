{
  "name": "mbpp_554_Split",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function which takes a list of integers and only returns the odd ones.\n\t\n*/\nlong[] Split(long[] list) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_554_Split.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = Split;\n\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L]) == [1L, 3L, 5L]);\n    assert(candidate([10L, 11L, 12L, 13L]) == [11L, 13L]);\n    assert(candidate([7L, 8L, 9L, 1L]) == [7L, 9L, 1L]);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tlong[] odd = new long[];\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tif(list[i] % 2 != 0)\n\t\t{\n\t\t\todd ~= list[i];\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odds = new long[0];\n\tforeach(int i; list)\n\t{\n\t\tif(i%2 == 1)\n\t\t{\n\t\t\todds ~= i;\n\t\t}\n\t}\n\treturn odds;\n}",
    "{\n\tlong[] odds = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todds ~= i;\n\t\t}\n\t}\n\treturn odds;\n}",
    "{\n\tlong[] result;\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\treturn list.filter!(x => x % 2 == 1);\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(long i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[list.length];\n\tint count = 0;\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd[count] = i;\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn odd[0..count];\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(long i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[list.length];\n\tint j = 0;\n\tfor (int i = 0; i < list.length; i++)\n\t{\n\t\tif (list[i] % 2 != 0)\n\t\t{\n\t\t\todd[j] = list[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[list.length];\n\tint j = 0;\n\tfor (int i = 0; i < list.length; i++)\n\t{\n\t\tif (list[i] % 2 != 0)\n\t\t{\n\t\t\todd[j] = list[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(long i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(int i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(long i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(long i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(i; 0 .. list.length)\n\t{\n\t\tif(list[i] % 2 != 0)\n\t\t{\n\t\t\todd ~= list[i];\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t\todd ~= i;\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(int i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(long i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(long i; list)\n\t{\n\t\tif (i % 2 == 1)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[list.length];\n\tint j = 0;\n\tfor(int i = 0; i < list.length; i++)\n\t{\n\t\tif(list[i] % 2 != 0)\n\t\t{\n\t\t\todd[j] = list[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(item; list)\n\t{\n\t\tif(item % 2 != 0)\n\t\t{\n\t\t\todd ~= item;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] result;\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] odd = new long[list.length];\n\tint j = 0;\n\tfor (int i = 0; i < list.length; i++) \n\t{\n\t\tif (list[i] % 2 != 0) \n\t\t{\n\t\t\todd[j] = list[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odds = new long[0];\n\tforeach(long i; list)\n\t{\n\t\tif (i % 2 != 0)\n\t\t{\n\t\t\todds ~= i;\n\t\t}\n\t}\n\treturn odds;\n}",
    "{\n\tlong[] odd = new long[list.length];\n\tint count = 0;\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\todd[count] = i;\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn odd[0..count];\n}",
    "{\n\tlong[] oddList = new long[list.length];\n\tint j = 0;\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\toddList[j] = i;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn oddList;\n}",
    "{\n\tlong[] odd = new long[list.length];\n\tint i = 0;\n\tforeach(long l; list)\n\t{\n\t\tif(l % 2 == 1)\n\t\t{\n\t\t\todd[i] = l;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[list.length];\n\tint j = 0;\n\tfor (int i = 0; i < list.length; i++)\n\t{\n\t\tif (list[i] % 2 != 0)\n\t\t{\n\t\t\todd[j] = list[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(long x; list)\n\t{\n\t\tif(x % 2 == 1)\n\t\t{\n\t\t\tresult ~= x;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] odd = new long[list.length];\n\tint j = 0;\n\tfor (int i = 0; i < list.length; i++)\n\t{\n\t\tif (list[i] % 2 != 0)\n\t\t{\n\t\t\todd[j] = list[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach (long i; list)\n\t{\n\t\tif (i % 2 != 0)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] oddList = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\toddList ~= i;\n\t\t}\n\t}\n\treturn oddList;\n}",
    "{\n\tlong[] odd = new long[list.length];\n\tint j = 0;\n\tfor (int i = 0; i < list.length; i++)\n\t{\n\t\tif (list[i] % 2 != 0)\n\t\t{\n\t\t\todd[j] = list[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd_list;\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd_list ~= i;\n\t\t}\n\t}\n\treturn odd_list;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(long i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tauto oddList = new long[](0);\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\toddList ~= i;\n\t\t}\n\t}\n\treturn oddList;\n}",
    "{\n\tlong[] result = new long[];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] odd_list;\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd_list ~= i;\n\t\t}\n\t}\n\treturn odd_list;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t\tresult ~= i;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(long i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] oddList;\n\tforeach(item; list)\n\t{\n\t\tif(item % 2 != 0)\n\t\t{\n\t\t\toddList ~= item;\n\t\t}\n\t}\n\treturn oddList;\n}",
    "{\n\tauto odd = new long[];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(int i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[list.length];\n\tint j = 0;\n\tfor (int i = 0; i < list.length; i++)\n\t{\n\t\tif (list[i] % 2 != 0)\n\t\t{\n\t\t\todd[j] = list[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] oddList = new long[0];\n\tforeach(long i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\toddList ~= i;\n\t\t}\n\t}\n\treturn oddList;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(long i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tauto odd = new long[];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(long i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tfor (int i = 0; i < list.length; i++)\n\t{\n\t\tif (list[i] % 2 == 1)\n\t\t{\n\t\t\todd ~= list[i];\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(long i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t\todd ~= i;\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odds = new long[0];\n\tforeach(long i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\todds ~= i;\n\t\t}\n\t}\n\treturn odds;\n}",
    "{\n\tlong[] oddList = new long[0];\n\tforeach(long i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\toddList ~= i;\n\t\t}\n\t}\n\treturn oddList;\n}",
    "{\n\tlong[] odd = new long[list.length];\n\tint j = 0;\n\tfor (int i = 0; i < list.length; i++)\n\t{\n\t\tif (list[i] % 2 != 0)\n\t\t{\n\t\t\todd[j] = list[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] oddList = new long[0];\n\tforeach(long i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\toddList ~= i;\n\t\t}\n\t}\n\treturn oddList;\n}",
    "{\n\tlong[] odd = new long[list.length];\n\tint j = 0;\n\tfor (int i = 0; i < list.length; i++)\n\t{\n\t\tif (list[i] % 2 == 1)\n\t\t{\n\t\t\todd[j] = list[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] result;\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\treturn list.filter!(x => x % 2 == 1);\n}",
    "{\n\tlong[] odds = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todds ~= i;\n\t\t}\n\t}\n\treturn odds;\n}",
    "{\n\tlong[] result;\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[list.length];\n\tint count = 0;\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd[count] = i;\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn odd[0..count];\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] oddList = new long[0];\n\tforeach(long i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\toddList ~= i;\n\t\t}\n\t}\n\treturn oddList;\n}",
    "{\n\tlong[] odd = new long[list.length];\n\tint j = 0;\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd[j] = i;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[list.length];\n\tint j = 0;\n\tfor (int i = 0; i < list.length; i++)\n\t{\n\t\tif (list[i] % 2 != 0)\n\t\t{\n\t\t\todd[j] = list[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(i; list) \n\t{\n\t\tif(i % 2 == 1) \n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] result = new long[list.length];\n\tint i = 0;\n\tforeach(long x; list)\n\t{\n\t\tif(x % 2 == 1)\n\t\t{\n\t\t\tresult[i] = x;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn result[0..i];\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(long i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] oddList = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\toddList ~= i;\n\t\t}\n\t}\n\treturn oddList;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odds = new long[0];\n\tforeach(long i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todds ~= i;\n\t\t}\n\t}\n\treturn odds;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odds = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\todds ~= i;\n\t\t}\n\t}\n\treturn odds;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd_list = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\todd_list ~= i;\n\t\t}\n\t}\n\treturn odd_list;\n}",
    "{\n\tlong[] oddList = new long[list.length];\n\tint j = 0;\n\tfor (int i = 0; i < list.length; i++)\n\t{\n\t\tif (list[i] % 2 != 0)\n\t\t{\n\t\t\toddList[j] = list[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn oddList;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[list.length];\n\tint j = 0;\n\tfor (int i = 0; i < list.length; i++)\n\t{\n\t\tif (list[i] % 2 != 0)\n\t\t{\n\t\t\todd[j] = list[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odds;\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todds ~= i;\n\t\t}\n\t}\n\treturn odds;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tauto result = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(i;list)\n\t{\n\t\tif(i%2 != 0)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[list.length];\n\tint j = 0;\n\tfor (int i = 0; i < list.length; i++)\n\t{\n\t\tif (list[i] % 2 == 1)\n\t\t{\n\t\t\todd[j] = list[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(i; list) \n\t{\n\t\tif(i % 2 != 0) \n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] oddList;\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\toddList ~= i;\n\t\t}\n\t}\n\treturn oddList;\n}",
    "{\n\tlong[] result;\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(long i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[list.length];\n\tint j = 0;\n\tfor (int i = 0; i < list.length; i++)\n\t{\n\t\tif (list[i] % 2 != 0)\n\t\t{\n\t\t\todd[j] = list[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(int i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[list.length];\n\tint j = 0;\n\tfor (int i = 0; i < list.length; i++)\n\t{\n\t\tif (list[i] % 2 != 0)\n\t\t{\n\t\t\todd[j] = list[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] oddList = new long[0];\n\tforeach(long i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\toddList ~= i;\n\t\t}\n\t}\n\treturn oddList;\n}",
    "{\n\tlong[] odd = new long[list.length];\n\tint j = 0;\n\tfor(int i = 0; i < list.length; i++)\n\t{\n\t\tif(list[i] % 2 != 0)\n\t\t{\n\t\t\todd[j] = list[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] result;\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] newList = new long[list.length];\n\tint j = 0;\n\tfor (int i = 0; i < list.length; i++)\n\t{\n\t\tif (list[i] % 2 == 1)\n\t\t{\n\t\t\tnewList[j] = list[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn newList;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(int i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] oddList;\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\toddList ~= i;\n\t\t}\n\t}\n\treturn oddList;\n}",
    "{\n\tlong[] odd = new long[list.length];\n\tint j = 0;\n\tfor (int i = 0; i < list.length; i++)\n\t{\n\t\tif (list[i] % 2 != 0)\n\t\t{\n\t\t\todd[j] = list[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] oddList = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\toddList ~= i;\n\t\t}\n\t}\n\treturn oddList;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[list.length];\n\tint j = 0;\n\tfor (int i = 0; i < list.length; i++)\n\t{\n\t\tif (list[i] % 2 == 1)\n\t\t{\n\t\t\todd[j] = list[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(long i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] ret = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\tret ~= i;\n\t\t}\n\t}\n\treturn ret;\n}",
    "{\n\tlong[] result;\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(long i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(item;list)\n\t{\n\t\tif(item % 2 != 0)\n\t\t{\n\t\t\todd ~= item;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] result;\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(int i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(long x; list)\n\t{\n\t\tif(x % 2 == 1)\n\t\t\todd ~= x;\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif (i % 2 != 0)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(long i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach (i; list) \n\t{\n\t\tif (i % 2 != 0) \n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[list.length];\n\tint j = 0;\n\tfor (int i = 0; i < list.length; i++)\n\t{\n\t\tif (list[i] % 2 != 0)\n\t\t{\n\t\t\todd[j] = list[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(long i; list) \n\t{\n\t\tif(i % 2 == 1) \n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] odds = new long[0];\n\tforeach(long i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\todds ~= i;\n\t\t}\n\t}\n\treturn odds;\n}",
    "{\n\tlong[] oddList = new long[0];\n\tforeach(long item; list)\n\t{\n\t\tif(item % 2 != 0)\n\t\t{\n\t\t\toddList ~= item;\n\t\t}\n\t}\n\treturn oddList;\n}",
    "{\n\tlong[] oddList = new long[list.length];\n\tint oddListIndex = 0;\n\t\n\tforeach(long item; list)\n\t{\n\t\tif(item % 2 == 1)\n\t\t{\n\t\t\toddList[oddListIndex] = item;\n\t\t\toddListIndex++;\n\t\t}\n\t}\n\t\n\treturn oddList[0..oddListIndex];\n}",
    "{\n\tlong[] oddList = new long[0];\n\tforeach(long i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\toddList ~= i;\n\t\t}\n\t}\n\treturn oddList;\n}",
    "{\n\tlong[] odd = new long[list.length];\n\tint j = 0;\n\tfor (int i = 0; i < list.length; i++)\n\t{\n\t\tif (list[i] % 2 != 0)\n\t\t{\n\t\t\todd[j] = list[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[list.length];\n\tint j = 0;\n\tfor (int i = 0; i < list.length; i++)\n\t{\n\t\tif (list[i] % 2 == 1)\n\t\t{\n\t\t\todd[j] = list[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(var i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] odds = new long[0];\n\tforeach(long i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\todds ~= i;\n\t\t}\n\t}\n\treturn odds;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(long i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] oddList = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\toddList ~= i;\n\t\t}\n\t}\n\treturn oddList;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] newList;\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\tnewList ~= i;\n\t\t}\n\t}\n\treturn newList;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(long i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] oddList = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\toddList ~= i;\n\t\t}\n\t}\n\treturn oddList;\n}",
    "{\n\treturn list.filter!(x => x % 2 == 1);\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] result = new long[list.length];\n\tint count = 0;\n\tforeach(int i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\tresult[count] = i;\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn result[0..count];\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(i; list) \n\t{\n\t\tif(i % 2 == 1) \n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[list.length];\n\tint j = 0;\n\tfor (int i = 0; i < list.length; i++) {\n\t\tif (list[i] % 2 != 0) {\n\t\t\todd[j] = list[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[list.length];\n\tint j = 0;\n\tfor (int i = 0; i < list.length; i++)\n\t{\n\t\tif (list[i] % 2 == 1)\n\t\t{\n\t\t\todd[j] = list[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(long i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] result;\n\tforeach (i; list)\n\t{\n\t\tif (i % 2 == 1)\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(long i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t\tresult ~= i;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] result = new long[list.length];\n\tint j = 0;\n\tfor (int i = 0; i < list.length; i++)\n\t{\n\t\tif (list[i] % 2 != 0)\n\t\t{\n\t\t\tresult[j] = list[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] odd = new long[];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(long i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] odds = new long[0];\n\tforeach(long i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todds ~= i;\n\t\t}\n\t}\n\treturn odds;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(i;list)\n\t{\n\t\tif(i%2==1)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(long i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t\todd ~= i;\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(int i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t\todd ~= i;\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(long i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif (i % 2 != 0)\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] odd = new long[list.length];\n\tint j = 0;\n\tfor (int i = 0; i < list.length; i++)\n\t{\n\t\tif (list[i] % 2 != 0)\n\t\t{\n\t\t\todd[j] = list[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i%2 != 0)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[list.length];\n\tint i = 0;\n\tforeach(long x; list)\n\t{\n\t\tif(x % 2 == 1)\n\t\t{\n\t\t\todd[i] = x;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] oddList = new long[0];\n\tforeach(long i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\toddList ~= i;\n\t\t}\n\t}\n\treturn oddList;\n}",
    "{\n\tlong[] oddList = new long[list.length];\n\tint oddListIndex = 0;\n\t\n\tforeach(long num; list)\n\t{\n\t\tif(num % 2 != 0)\n\t\t{\n\t\t\toddList[oddListIndex] = num;\n\t\t\toddListIndex++;\n\t\t}\n\t}\n\t\n\treturn oddList;\n}",
    "{\n\tlong[] oddList = new long[0];\n\tforeach(long i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\toddList ~= i;\n\t\t}\n\t}\n\treturn oddList;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(long i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] result;\n\tforeach(i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\tresult ~= i;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(long i; list)\n\t{\n\t\tif(i % 2 == 1)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(long i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(long i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}",
    "{\n\tauto odd = new long[](list.length);\n\tint j = 0;\n\tfor (int i = 0; i < list.length; i++)\n\t{\n\t\tif (list[i] % 2 != 0)\n\t\t{\n\t\t\todd[j] = list[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn odd[0..j];\n}",
    "{\n\tlong[] odd = new long[0];\n\tforeach(long i; list)\n\t{\n\t\tif(i % 2 != 0)\n\t\t{\n\t\t\todd ~= i;\n\t\t}\n\t}\n\treturn odd;\n}"
  ]
}
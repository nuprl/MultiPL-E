{
  "name": "mbpp_83_get_Char",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\n\t\n*/\nstring get_Char(string strr) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_83_get_Char.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = get_Char;\n\n    assert(candidate(\"abc\") == \"f\");\n    assert(candidate(\"gfg\") == \"t\");\n    assert(candidate(\"ab\") == \"c\");\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tint sum = 0;\n\tforeach(c; strr)\n\t{\n\t\tsum += c;\n\t}\n\treturn chr(sum % 26 + 65);\n}",
    "{\n\tint sum = 0;\n\tforeach(c;strr)\n\t{\n\t\tsum += c;\n\t}\n\treturn chr(sum % 26 + 65);\n}",
    "{\n\tint sum = 0;\n\tforeach(char c; strr)\n\t{\n\t\tsum += c;\n\t}\n\treturn to!string(sum % 26);\n}",
    "{\n\tint sum = 0;\n\tforeach(immutable char; strr)\n\t{\n\t\tsum += cast(int)char;\n\t}\n\treturn cast(char)(sum % 26 + 97);\n}",
    "{\n\tint sum = 0;\n\tforeach(c;strr)\n\t{\n\t\tsum += c;\n\t}\n\treturn chr(sum%26 + 97);\n}",
    "{\n\tint sum = 0;\n\tforeach(c;strr)\n\t{\n\t\tsum += c;\n\t}\n\treturn chr(sum%26 + 97);\n}",
    "{\n\tint sum = 0;\n\tforeach(i;strr)\n\t{\n\t\tsum += i;\n\t}\n\treturn cast(char)(sum % 26 + 97);\n}",
    "{\n\tint sum = 0;\n\tforeach(char ch; strr)\n\t{\n\t\tsum += ch;\n\t}\n\treturn cast(char)(sum % 26);\n}",
    "{\n\tint sum = 0;\n\tforeach(c; strr)\n\t{\n\t\tsum += c;\n\t}\n\treturn chr(sum % 26 + 97);\n}",
    "{\n\tint sum = 0;\n\tforeach(char ch; strr)\n\t{\n\t\tsum += ch;\n\t}\n\treturn to!string(sum % 26);\n}",
    "{\n\tint sum = 0;\n\tforeach(ch; strr)\n\t{\n\t\tsum += ch;\n\t}\n\treturn chr(sum % 26);\n}",
    "{\n\tint sum = 0;\n\tforeach(immutable char; strr)\n\t{\n\t\tsum += cast(int)char;\n\t}\n\treturn cast(string)sum;\n}",
    "{\n\tint sum = 0;\n\tforeach(ch; strr)\n\t{\n\t\tsum += ch;\n\t}\n\treturn chr(sum % 26 + 65);\n}",
    "{\n\tint sum = 0;\n\tforeach(c; strr)\n\t{\n\t\tsum += c;\n\t}\n\treturn chr(sum % 26 + 65);\n}",
    "{\n\tint sum = 0;\n\tforeach(c; strr)\n\t{\n\t\tsum += c;\n\t}\n\treturn chr(sum % 26 + 97);\n}",
    "{\n\tint sum = 0;\n\tforeach(c; strr)\n\t{\n\t\tsum += c;\n\t}\n\treturn chr(sum % 26 + 97);\n}",
    "{\n\tint sum = 0;\n\tforeach(c; strr)\n\t{\n\t\tsum += c;\n\t}\n\treturn chr(sum % 26 + 97);\n}",
    "{\n\tint sum = 0;\n\tforeach(c; strr)\n\t{\n\t\tsum += c;\n\t}\n\treturn chr(sum % 26 + 65);\n}",
    "{\n\tint sum = 0;\n\tforeach(c; strr)\n\t{\n\t\tsum += c;\n\t}\n\treturn chr(sum % 26 + 97);\n}",
    "{\n\tint sum = 0;\n\tforeach(c; strr)\n\t{\n\t\tsum += c;\n\t}\n\treturn chr(sum % 26 + 97);\n}"
  ]
}
{
  "name": "mbpp_97_frequency_lists",
  "language": "d",
  "prompt": "import std.math;\n/*\n\n\tWrite a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\n\t\n*/\nNullable!(long[long]) frequency_lists(long[][] list1) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_97_frequency_lists.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = frequency_lists;\n\n{\n        auto result = candidate([[1L, 2L, 3L, 2L], [4L, 5L, 6L, 2L], [7L, 8L, 9L, 5L]]);\n        assert(!result.isNull && result.get == [1L: 1L, 2L: 3L, 3L: 1L, 4L: 1L, 5L: 2L, 6L: 1L, 7L: 1L, 8L: 1L, 9L: 1L]);\n}\n\n{\n        auto result = candidate([[1L, 2L, 3L, 4L], [5L, 6L, 7L, 8L], [9L, 10L, 11L, 12L]]);\n        assert(!result.isNull && result.get == [1L: 1L, 2L: 1L, 3L: 1L, 4L: 1L, 5L: 1L, 6L: 1L, 7L: 1L, 8L: 1L, 9L: 1L, 10L: 1L, 11L: 1L, 12L: 1L]);\n}\n\n{\n        auto result = candidate([[20L, 30L, 40L, 17L], [18L, 16L, 14L, 13L], [10L, 20L, 30L, 40L]]);\n        assert(!result.isNull && result.get == [20L: 2L, 30L: 2L, 40L: 2L, 17L: 1L, 18L: 1L, 16L: 1L, 14L: 1L, 13L: 1L, 10L: 1L]);\n}\n\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tNullable!(long[long]) result;\n\tlong[long] freq;\n\tlong i, j;\n\t\n\tforeach (list; list1) \n\t{\n\t\tforeach (elem; list) \n\t\t{\n\t\t\tif (elem in freq) \n\t\t\t{\n\t\t\t\tfreq[elem] += 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tfreq[elem] = 1;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tresult = freq;\n\t\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\tresult.isValid = false;\n\tif (list1.length == 0)\n\t\treturn result;\n\t\n\tresult.isValid = true;\n\tresult.value = new long[list1.length];\n\t\n\tforeach (i, v; list1)\n\t{\n\t\tresult.value[i] = v.length;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result = null;\n\t\n\tif(list1.length > 0)\n\t{\n\t\tresult = new long[long][long](list1.length);\n\t\t\n\t\tforeach(long[] list2; list1)\n\t\t{\n\t\t\tforeach(long item; list2)\n\t\t\t{\n\t\t\t\tif(result[item] is null)\n\t\t\t\t{\n\t\t\t\t\tresult[item] = new long[long](1);\n\t\t\t\t\tresult[item][0] = 1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tresult[item][0]++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[long] result;\n\tforeach(list; list1)\n\t{\n\t\tforeach(item; list)\n\t\t{\n\t\t\tif(result.count(item) == 0)\n\t\t\t{\n\t\t\t\tresult[item] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[item]++;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] freq = null;\n\tforeach(long[] list; list1)\n\t{\n\t\tforeach(long element; list)\n\t\t{\n\t\t\tif(freq is null)\n\t\t\t{\n\t\t\t\tfreq = [element:1];\n\t\t\t}\n\t\t\telse if(freq.count(element) == 0)\n\t\t\t{\n\t\t\t\tfreq[element] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfreq[element] += 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn freq;\n}",
    "{\n\tlong[long] freq = null;\n\tforeach(list; list1)\n\t{\n\t\tforeach(elem; list)\n\t\t{\n\t\t\tif(freq is null)\n\t\t\t\tfreq = [elem:1];\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(elem in freq)\n\t\t\t\t\tfreq[elem]++;\n\t\t\t\telse\n\t\t\t\t\tfreq[elem] = 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn freq;\n}",
    "{\n\tNullable!(long[long]) result;\n\tlong[long] freq;\n\tlong[long] temp;\n\tlong i;\n\tlong j;\n\tlong k;\n\tlong count;\n\t\n\tresult = Nullable!(long[long])();\n\tfreq = [];\n\ttemp = [];\n\t\n\tfor (i = 0; i < list1.length; i++)\n\t{\n\t\ttemp = list1[i];\n\t\tfor (j = 0; j < temp.length; j++)\n\t\t{\n\t\t\tcount = 0;\n\t\t\tfor (k = 0; k < temp.length; k++)\n\t\t\t{\n\t\t\t\tif (temp[j] == temp[k])\n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfreq ~= count;\n\t\t}\n\t}\n\t\n\tresult.value = freq;\n\treturn result;\n}",
    "{\n\tlong[long] result;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result.count(element) == 0)\n\t\t\t{\n\t\t\t\tresult[element] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[element] += 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result = null;\n\tlong[long] freq = new long[list1.length];\n\tforeach(i, list; list1)\n\t{\n\t\tforeach(j, element; list)\n\t\t{\n\t\t\tfreq[element]++;\n\t\t}\n\t}\n\tresult = freq;\n\treturn result;\n}",
    "{\n\tlong[long] freq;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(freq.count(element))\n\t\t\t{\n\t\t\t\tfreq[element]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfreq[element] = 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn freq;\n}",
    "{\n\tlong[long] freq;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(freq.count(element) == 0)\n\t\t\t\tfreq[element] = 1;\n\t\t\telse\n\t\t\t\tfreq[element] += 1;\n\t\t}\n\t}\n\treturn freq;\n}",
    "{\n\tlong[long] result;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result.count(element) == 0)\n\t\t\t{\n\t\t\t\tresult[element] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[element]++;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result = null;\n\t\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result is null)\n\t\t\t{\n\t\t\t\tresult = [element:1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(element in result)\n\t\t\t\t{\n\t\t\t\t\tresult[element]++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tresult[element] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result = Nullable!(long[long])();\n\tif(list1.length == 0)\n\t{\n\t\treturn result;\n\t}\n\t\n\tlong[long] temp = new long[list1.length];\n\tforeach(i, item; list1)\n\t{\n\t\ttemp[i] = item.length;\n\t}\n\t\n\tlong max = max(temp);\n\t\n\tresult.value = new long[max];\n\t\n\tforeach(i, item; list1)\n\t{\n\t\tforeach(j, item2; item)\n\t\t{\n\t\t\tresult.value[item2]++;\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tauto result = new long[long][long](list1.length);\n\tforeach(i, list; list1)\n\t{\n\t\tforeach(j, element; list)\n\t\t{\n\t\t\tresult[i][element]++;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] freq;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tfreq[element]++;\n\t\t}\n\t}\n\treturn freq;\n}",
    "{\n\tlong[long] result;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result.count(element) == 0)\n\t\t\t{\n\t\t\t\tresult[element] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[element] += 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] freq = null;\n\tforeach(long[] list2; list1)\n\t{\n\t\tforeach(long element; list2)\n\t\t{\n\t\t\tif(freq is null)\n\t\t\t{\n\t\t\t\tfreq = [element : 1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(element in freq)\n\t\t\t\t{\n\t\t\t\t\tfreq[element]++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tfreq[element] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn freq;\n}",
    "{\n\tlong[long] result;\n\tforeach (list; list1)\n\t{\n\t\tforeach (element; list)\n\t\t{\n\t\t\tif (element in result)\n\t\t\t{\n\t\t\t\tresult[element]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[element] = 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] freq;\n\tforeach(list; list1)\n\t{\n\t\tforeach(item; list)\n\t\t{\n\t\t\tif(freq.count(item) == 0)\n\t\t\t{\n\t\t\t\tfreq[item] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfreq[item]++;\n\t\t\t}\n\t\t}\n\t}\n\treturn freq;\n}",
    "{\n\tlong[long] result;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result.count(element) == 0)\n\t\t\t{\n\t\t\t\tresult[element] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[element]++;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] freq;\n\tforeach(list; list1)\n\t{\n\t\tforeach(elem; list)\n\t\t{\n\t\t\tif(freq.count(elem))\n\t\t\t{\n\t\t\t\tfreq[elem]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfreq[elem] = 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn freq;\n}",
    "{\n\tNullable!(long[long]) result = Nullable!(long[long])();\n\t\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result.isNull)\n\t\t\t{\n\t\t\t\tresult.set(long[long](element, 1));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(element in result.get)\n\t\t\t\t{\n\t\t\t\t\tresult.get[element]++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tresult.get[element] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[long] freq = null;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(freq is null)\n\t\t\t{\n\t\t\t\tfreq = [element: 1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(element in freq)\n\t\t\t\t{\n\t\t\t\t\tfreq[element]++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tfreq[element] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn freq;\n}",
    "{\n\tlong[long] result = null;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result is null)\n\t\t\t{\n\t\t\t\tresult = [element:1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(result.count(element) > 0)\n\t\t\t\t{\n\t\t\t\t\tresult[element]++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tresult[element] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] result = null;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result is null)\n\t\t\t{\n\t\t\t\tresult = [element:1];\n\t\t\t}\n\t\t\telse if(element in result)\n\t\t\t{\n\t\t\t\tresult[element] += 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[element] = 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result = null;\n\t\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result is null)\n\t\t\t{\n\t\t\t\tresult = [element: 1];\n\t\t\t}\n\t\t\telse if(element in result)\n\t\t\t{\n\t\t\t\tresult[element]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[element] = 1;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[long] result;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(element in result)\n\t\t\t{\n\t\t\t\tresult[element]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[element] = 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] result = null;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result is null)\n\t\t\t{\n\t\t\t\tresult = [element:1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(result.count(element) > 0)\n\t\t\t\t{\n\t\t\t\t\tresult[element] += 1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tresult[element] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] freq = null;\n\tforeach(long[] list; list1)\n\t{\n\t\tforeach(long element; list)\n\t\t{\n\t\t\tif(freq is null)\n\t\t\t{\n\t\t\t\tfreq = [element : 1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(element in freq)\n\t\t\t\t{\n\t\t\t\t\tfreq[element]++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tfreq[element] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn freq;\n}",
    "{\n\tlong[long] result;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result.count(element))\n\t\t\t{\n\t\t\t\tresult[element]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[element] = 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] freq;\n\tforeach(long[] list; list1)\n\t{\n\t\tforeach(long elem; list)\n\t\t{\n\t\t\tfreq[elem]++;\n\t\t}\n\t}\n\treturn freq;\n}",
    "{\n\tNullable!(long[long]) result;\n\tauto list2 = list1.flatten;\n\tauto list3 = list2.sort;\n\tauto list4 = list3.uniq;\n\tforeach(i; 0 .. list4.length)\n\t{\n\t\tresult[list4[i]] = list3.count(list4[i]);\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] result;\n\tforeach(i; list1) \n\t{\n\t\tforeach(j; i) \n\t\t{\n\t\t\tif(result.count(j) == 0) \n\t\t\t{\n\t\t\t\tresult[j] = 1;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[j] += 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] freq;\n\tforeach(list; list1)\n\t{\n\t\tforeach(item; list)\n\t\t{\n\t\t\tif(freq.count(item) == 0)\n\t\t\t{\n\t\t\t\tfreq[item] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfreq[item]++;\n\t\t\t}\n\t\t}\n\t}\n\treturn freq;\n}",
    "{\n\tif(list1.length == 0)\n\t\treturn null;\n\tlong[long] result;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(element in result)\n\t\t\t\tresult[element]++;\n\t\t\telse\n\t\t\t\tresult[element] = 1;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] result;\n\tforeach(item; list1)\n\t{\n\t\tforeach(i; item)\n\t\t{\n\t\t\tif(result.count(i) == 0)\n\t\t\t{\n\t\t\t\tresult[i] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[i] += 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] frequency;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(element in frequency)\n\t\t\t{\n\t\t\t\tfrequency[element]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfrequency[element] = 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn frequency;\n}",
    "{\n\tlong[long] result;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tresult[element]++;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] result;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result.count(element))\n\t\t\t{\n\t\t\t\tresult[element]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[element] = 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] result;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tresult[element]++;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\tresult.init();\n\t\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result.isNull)\n\t\t\t{\n\t\t\t\tresult.value = [element:1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(result.value.count(element))\n\t\t\t\t{\n\t\t\t\t\tresult.value[element]++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tresult.value[element] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] freq;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(freq.count(element))\n\t\t\t{\n\t\t\t\tfreq[element]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfreq[element] = 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn freq;\n}",
    "{\n\tlong[long] result;\n\tforeach (list; list1)\n\t{\n\t\tforeach (element; list)\n\t\t{\n\t\t\tif (element in result)\n\t\t\t{\n\t\t\t\tresult[element]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[element] = 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] freq_dict;\n\tforeach(long[] list; list1)\n\t{\n\t\tforeach(long element; list)\n\t\t{\n\t\t\tif(freq_dict.count(element) == 0)\n\t\t\t\tfreq_dict[element] = 1;\n\t\t\telse\n\t\t\t\tfreq_dict[element] += 1;\n\t\t}\n\t}\n\treturn freq_dict;\n}",
    "{\n\tlong[long] result;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result.count(element) == 0)\n\t\t\t{\n\t\t\t\tresult[element] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[element] += 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] freq = null;\n\tforeach(long[] list; list1)\n\t{\n\t\tforeach(long element; list)\n\t\t{\n\t\t\tif(freq is null)\n\t\t\t{\n\t\t\t\tfreq = [element : 1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(element in freq)\n\t\t\t\t{\n\t\t\t\t\tfreq[element]++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tfreq[element] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn freq;\n}",
    "{\n\tNullable!(long[long]) result;\n\tlong[long] temp;\n\tlong i;\n\tlong j;\n\tlong k;\n\tlong count;\n\t\n\tresult = Nullable!(long[long])();\n\ttemp = [];\n\t\n\tforeach(i; 0 .. list1.length)\n\t{\n\t\tforeach(j; 0 .. list1[i].length)\n\t\t{\n\t\t\tcount = 0;\n\t\t\tforeach(k; 0 .. list1[i].length)\n\t\t\t{\n\t\t\t\tif(list1[i][j] == list1[i][k])\n\t\t\t\t{\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttemp ~= count;\n\t\t}\n\t}\n\t\n\tresult.set(temp);\n\t\n\treturn result;\n}",
    "{\n\tlong[long] result;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result.count(element))\n\t\t\t\tresult[element]++;\n\t\t\telse\n\t\t\t\tresult[element] = 1;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] freq = null;\n\tforeach(elem; list1)\n\t{\n\t\tforeach(elem2; elem)\n\t\t{\n\t\t\tif(freq is null)\n\t\t\t{\n\t\t\t\tfreq = [elem2:1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(elem2 in freq)\n\t\t\t\t{\n\t\t\t\t\tfreq[elem2]++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tfreq[elem2] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn freq;\n}",
    "{\n\tNullable!(long[long]) result;\n\tresult.init(long[long](0));\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result.get.length == 0)\n\t\t\t{\n\t\t\t\tresult.get ~= element;\n\t\t\t\tresult.get ~= 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbool found = false;\n\t\t\t\tfor(int i = 0; i < result.get.length; i += 2)\n\t\t\t\t{\n\t\t\t\t\tif(result.get[i] == element)\n\t\t\t\t\t{\n\t\t\t\t\t\tresult.get[i + 1] += 1;\n\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(!found)\n\t\t\t\t{\n\t\t\t\t\tresult.get ~= element;\n\t\t\t\t\tresult.get ~= 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\t\n\tif (list1.length == 0)\n\t{\n\t\treturn null;\n\t}\n\t\n\tresult = new long[long][long](list1.length);\n\t\n\tforeach (list; list1)\n\t{\n\t\tforeach (item; list)\n\t\t{\n\t\t\tif (result[item] is null)\n\t\t\t{\n\t\t\t\tresult[item] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[item] += 1;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[long] freq;\n\tforeach(element; list1)\n\t{\n\t\tforeach(e; element)\n\t\t{\n\t\t\tif(freq.count(e) == 0)\n\t\t\t{\n\t\t\t\tfreq[e] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfreq[e] += 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn freq;\n}",
    "{\n\tlong[long] result = null;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result is null)\n\t\t\t\tresult = [element:1];\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(element in result)\n\t\t\t\t\tresult[element]++;\n\t\t\t\telse\n\t\t\t\t\tresult[element] = 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] result = null;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result.byKey(element) is null)\n\t\t\t{\n\t\t\t\tresult[element] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[element] += 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\tif(list1.length == 0)\n\t{\n\t\tresult = null;\n\t\treturn result;\n\t}\n\t\n\tlong[long] freq;\n\tforeach(long[] list2; list1)\n\t{\n\t\tforeach(long element; list2)\n\t\t{\n\t\t\tif(element in freq)\n\t\t\t{\n\t\t\t\tfreq[element]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfreq[element] = 1;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tresult = freq;\n\treturn result;\n}",
    "{\n\tlong[long] result;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result.count(element) == 0)\n\t\t\t{\n\t\t\t\tresult[element] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[element] += 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] dict;\n\tforeach(list; list1)\n\t{\n\t\tforeach(item; list)\n\t\t{\n\t\t\tif(dict.count(item))\n\t\t\t{\n\t\t\t\tdict[item]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdict[item] = 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn dict;\n}",
    "{\n\tNullable!(long[long]) result;\n\tlong[long] temp;\n\tlong[long] temp2;\n\tlong[long] temp3;\n\tlong[long] temp4;\n\tlong[long] temp5;\n\tlong[long] temp6;\n\tlong[long] temp7;\n\tlong[long] temp8;\n\tlong[long] temp9;\n\tlong[long] temp10;\n\tlong[long] temp11;\n\tlong[long] temp12;\n\tlong[long] temp13;\n\tlong[long] temp14;\n\tlong[long] temp15;\n\tlong[long] temp16;\n\tlong[long] temp17;\n\tlong[long] temp18;\n\tlong[long] temp19;\n\tlong[long] temp20;\n\tlong[long] temp21;\n\tlong[long] temp22;\n\tlong[long] temp23;\n\tlong[long] temp24;\n\tlong[long] temp25;\n\tlong[long] temp26;\n\tlong[long] temp27;\n\tlong[long] temp28;\n\tlong[long] temp29;\n\tlong[long] temp30;\n\tlong[long] temp31;\n\tlong[long] temp32;\n\tlong[long] temp33;\n\tlong[long] temp34;\n\tlong[long] temp35;\n\tlong[long] temp36;\n\tlong[long] temp37;\n\tlong[long] temp38;\n\tlong[long] temp39;\n\tlong[long] temp40;\n\tlong[long] temp41;\n\tlong[long] temp42;\n\tlong[long] temp43;\n\tlong[long] temp44;\n\tlong[long] temp45;\n\tlong[long] temp46;\n\tlong[long] temp47;\n\tlong[long] temp48;\n\tlong[long] temp49;\n\tlong[long] temp50;\n\tlong[long] temp51;\n\tlong[long] temp52;\n\tlong[long] temp53;\n\tlong[long] temp54;\n\tlong[long] temp55;\n\tlong[",
    "{\n\tNullable!(long[long]) result;\n\tlong[long] freq;\n\tlong[long] temp;\n\tlong i;\n\tlong j;\n\t\n\tfreq = new long[list1.length];\n\ttemp = new long[list1.length];\n\t\n\tfor (i = 0; i < list1.length; i++)\n\t{\n\t\tfor (j = 0; j < list1[i].length; j++)\n\t\t{\n\t\t\ttemp[list1[i][j]]++;\n\t\t}\n\t}\n\t\n\tfor (i = 0; i < temp.length; i++)\n\t{\n\t\tif (temp[i] != 0)\n\t\t{\n\t\t\tfreq[i] = temp[i];\n\t\t}\n\t}\n\t\n\tresult = freq;\n\treturn result;\n}",
    "{\n\tlong[long] result;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result.count(element))\n\t\t\t{\n\t\t\t\tresult[element]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[element] = 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] result;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(element in result)\n\t\t\t{\n\t\t\t\tresult[element]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[element] = 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] result;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result.count(element) == 0)\n\t\t\t{\n\t\t\t\tresult[element] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[element]++;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] freq;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tfreq[element]++;\n\t\t}\n\t}\n\treturn freq;\n}",
    "{\n\tNullable!(long[long]) result;\n\tlong[long] temp;\n\tlong[long] temp2;\n\tlong i;\n\tlong j;\n\tlong k;\n\tlong l;\n\tlong m;\n\tlong n;\n\tlong o;\n\tlong p;\n\tlong q;\n\tlong r;\n\tlong s;\n\tlong t;\n\tlong u;\n\tlong v;\n\tlong w;\n\tlong x;\n\tlong y;\n\tlong z;\n\t\n\tresult = Nullable!(long[long])();\n\t\n\ttemp = [];\n\t\n\tfor(i = 0; i < list1.length; i++)\n\t{\n\t\tfor(j = 0; j < list1[i].length; j++)\n\t\t{\n\t\t\ttemp ~= list1[i][j];\n\t\t}\n\t}\n\t\n\ttemp2 = [];\n\t\n\tfor(k = 0; k < temp.length; k++)\n\t{\n\t\tfor(l = 0; l < temp.length; l++)\n\t\t{\n\t\t\tif(temp[k] == temp[l])\n\t\t\t{\n\t\t\t\ttemp2 ~= temp[k];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor(m = 0; m < temp2.length; m++)\n\t{\n\t\tfor(n = 0; n < temp2.length; n++)\n\t\t{\n\t\t\tif(temp2[m] == temp2[n])\n\t\t\t{\n\t\t\t\ttemp2[n] = 0;\n\t\t\t}\n\t\t}\n\t}\n\t\n\ttemp = [];\n\t\n\tfor(o = 0; o < temp2.length; o++)\n\t{\n\t\tif(temp2[o] != 0)\n\t\t{\n\t\t\ttemp ~= temp2[o];\n\t\t}\n\t}\n\t\n\tfor(p = 0; p < temp.length; p++)\n\t{\n\t\tfor(q = 0; q < temp.length; q++)\n\t\t{\n\t\t\tif(temp[",
    "{\n\tNullable!(long[long]) result;\n\t\n\tresult.isValid = true;\n\t\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result.value.length == 0)\n\t\t\t{\n\t\t\t\tresult.value ~= element;\n\t\t\t\tresult.value ~= 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbool found = false;\n\t\t\t\tfor(int i = 0; i < result.value.length; i+=2)\n\t\t\t\t{\n\t\t\t\t\tif(result.value[i] == element)\n\t\t\t\t\t{\n\t\t\t\t\t\tresult.value[i+1]++;\n\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(!found)\n\t\t\t\t{\n\t\t\t\t\tresult.value ~= element;\n\t\t\t\t\tresult.value ~= 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[long] freq;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(freq.count(element) == 0)\n\t\t\t{\n\t\t\t\tfreq[element] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfreq[element] += 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn freq;\n}",
    "{\n\tlong[long] freq;\n\tforeach(long[] list; list1)\n\t{\n\t\tforeach(long element; list)\n\t\t{\n\t\t\tif(freq.count(element) == 0)\n\t\t\t{\n\t\t\t\tfreq[element] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfreq[element]++;\n\t\t\t}\n\t\t}\n\t}\n\treturn freq;\n}",
    "{\n\tlong[long] result;\n\tforeach(list; list1)\n\t{\n\t\tforeach(item; list)\n\t\t{\n\t\t\tif(result.count(item) == 0)\n\t\t\t{\n\t\t\t\tresult[item] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[item]++;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] result;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result.count(element))\n\t\t\t{\n\t\t\t\tresult[element] += 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[element] = 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] result;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tresult[element]++;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] freq = new long[long];\n\tforeach(l; list1)\n\t{\n\t\tforeach(e; l)\n\t\t{\n\t\t\tif(freq.count(e))\n\t\t\t\tfreq[e]++;\n\t\t\telse\n\t\t\t\tfreq[e] = 1;\n\t\t}\n\t}\n\treturn freq;\n}",
    "{\n\tlong[long] freq = null;\n\tforeach(long[] sublist; list1)\n\t{\n\t\tforeach(long elem; sublist)\n\t\t{\n\t\t\tif(freq is null)\n\t\t\t{\n\t\t\t\tfreq = [elem:1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(elem in freq)\n\t\t\t\t{\n\t\t\t\t\tfreq[elem]++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tfreq[elem] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn freq;\n}",
    "{\n\tNullable!(long[long]) result;\n\tlong[long] freq;\n\tlong i, j;\n\t\n\tfreq = new long[list1.length];\n\tforeach(i, list1)\n\t{\n\t\tforeach(j, list1[i])\n\t\t{\n\t\t\tfreq[j]++;\n\t\t}\n\t}\n\t\n\tresult = freq;\n\treturn result;\n}",
    "{\n\tlong[long] result;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result.count(element) == 0)\n\t\t\t{\n\t\t\t\tresult[element] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[element] += 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\tlong[long] freq;\n\t\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(freq.count(element) == 0)\n\t\t\t{\n\t\t\t\tfreq[element] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfreq[element]++;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tresult = freq;\n\treturn result;\n}",
    "{\n\tlong[long] result;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result.count(element) == 0)\n\t\t\t{\n\t\t\t\tresult[element] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[element] += 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] freq;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(freq.count(element))\n\t\t\t{\n\t\t\t\tfreq[element]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfreq[element] = 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn freq;\n}",
    "{\n\tlong[long] result;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result.count(element) == 0)\n\t\t\t{\n\t\t\t\tresult[element] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[element] += 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\tlong[long] freq;\n\tlong[long] temp;\n\tlong i,j;\n\t\n\tfreq = new long[list1.length];\n\ttemp = new long[list1.length];\n\t\n\tfor(i = 0; i < list1.length; i++)\n\t{\n\t\tfor(j = 0; j < list1[i].length; j++)\n\t\t{\n\t\t\ttemp[list1[i][j]]++;\n\t\t}\n\t}\n\t\n\tfor(i = 0; i < temp.length; i++)\n\t{\n\t\tif(temp[i] != 0)\n\t\t{\n\t\t\tfreq[i] = temp[i];\n\t\t}\n\t}\n\t\n\tresult = freq;\n\treturn result;\n}",
    "{\n\tlong[long] result;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result.count(element) == 0)\n\t\t\t{\n\t\t\t\tresult[element] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[element] += 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] freq;\n\tforeach(list; list1)\n\t{\n\t\tforeach(elem; list)\n\t\t{\n\t\t\tfreq[elem]++;\n\t\t}\n\t}\n\treturn freq;\n}",
    "{\n\tNullable!(long[long]) result;\n\tresult.isValid = false;\n\tresult.value = null;\n\t\n\tif (list1.length == 0)\n\t\treturn result;\n\t\t\n\tlong[long] freq;\n\tfreq.length = 0;\n\t\n\tforeach (list; list1)\n\t{\n\t\tforeach (item; list)\n\t\t{\n\t\t\tbool found = false;\n\t\t\tforeach (i; 0 .. freq.length)\n\t\t\t{\n\t\t\t\tif (freq[i][0] == item)\n\t\t\t\t{\n\t\t\t\t\tfound = true;\n\t\t\t\t\tfreq[i][1]++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!found)\n\t\t\t{\n\t\t\t\tfreq ~= [item, 1];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tresult.isValid = true;\n\tresult.value = freq;\n\treturn result;\n}",
    "{\n\tlong[long] freq;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(element in freq)\n\t\t\t{\n\t\t\t\tfreq[element]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfreq[element] = 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn freq;\n}",
    "{\n\tNullable!(long[long]) result = null;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result is null)\n\t\t\t{\n\t\t\t\tresult = [element:1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(element in result)\n\t\t\t\t{\n\t\t\t\t\tresult[element]++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tresult[element] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\tresult.init();\n\t\n\tforeach(long[] list; list1)\n\t{\n\t\tforeach(long element; list)\n\t\t{\n\t\t\tif(result.isNull)\n\t\t\t{\n\t\t\t\tresult.set(new long[long](1));\n\t\t\t\tresult.get[element] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(element in result.get)\n\t\t\t\t{\n\t\t\t\t\tresult.get[element]++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tresult.get[element] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] result;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result.count(element))\n\t\t\t{\n\t\t\t\tresult[element]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[element] = 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] result = null;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result is null)\n\t\t\t{\n\t\t\t\tresult = [element:1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(result.count(element) == 0)\n\t\t\t\t{\n\t\t\t\t\tresult[element] = 1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tresult[element] += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\t\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result.isNull)\n\t\t\t{\n\t\t\t\tresult = Nullable!(long[long])([element: 1]);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(result.get.containsKey(element))\n\t\t\t\t{\n\t\t\t\t\tresult.get[element]++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tresult.get[element] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\tlong[long] freq;\n\tlong[long] keys;\n\tlong[long] values;\n\tlong i;\n\tlong j;\n\tlong k;\n\tlong l;\n\tlong m;\n\tlong n;\n\tlong o;\n\tlong p;\n\tlong q;\n\tlong r;\n\tlong s;\n\tlong t;\n\tlong u;\n\tlong v;\n\tlong w;\n\tlong x;\n\tlong y;\n\tlong z;\n\tlong aa;\n\tlong ab;\n\tlong ac;\n\tlong ad;\n\tlong ae;\n\tlong af;\n\tlong ag;\n\tlong ah;\n\tlong ai;\n\tlong aj;\n\tlong ak;\n\tlong al;\n\tlong am;\n\tlong an;\n\tlong ao;\n\tlong ap;\n\tlong aq;\n\tlong ar;\n\tlong as;\n\tlong at;\n\tlong au;\n\tlong av;\n\tlong aw;\n\tlong ax;\n\tlong ay;\n\tlong az;\n\tlong ba;\n\tlong bb;\n\tlong bc;\n\tlong bd;\n\tlong be;\n\tlong bf;\n\tlong bg;\n\tlong bh;\n\tlong bi;\n\tlong bj;\n\tlong bk;\n\tlong bl;\n\tlong bm;\n\tlong bn;\n\tlong bo;\n\tlong bp;\n\tlong bq;\n\tlong br;\n\tlong bs;\n\tlong bt;\n\tlong bu;\n\tlong bv;\n\tlong bw;\n\tlong bx;\n\tlong by;\n\tlong bz;\n\tlong ca;\n\tlong cb;\n\tlong cc;\n\tlong cd;\n\tlong ce;\n\tlong cf;\n\tlong cg;\n\tlong ch;\n\tlong ci;\n\tlong cj;\n\tlong ck;\n\tlong cl;\n\tlong cm;\n\tlong cn;\n\tlong co;\n\tlong cp;\n\tlong cq;\n\tlong cr;\n\tlong",
    "{\n\tNullable!(long[long]) result;\n\tresult.init();\n\t\n\tforeach(list; list1)\n\t{\n\t\tforeach(item; list)\n\t\t{\n\t\t\tif(result.isNull)\n\t\t\t{\n\t\t\t\tresult.set(item, 1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(result.get(item) is null)\n\t\t\t\t{\n\t\t\t\t\tresult.set(item, 1);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tresult.set(item, result.get(item) + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[long] freq = null;\n\tforeach(long[] list; list1)\n\t{\n\t\tforeach(long item; list)\n\t\t{\n\t\t\tif(freq is null)\n\t\t\t{\n\t\t\t\tfreq = [item:1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(freq.count(item) == 0)\n\t\t\t\t{\n\t\t\t\t\tfreq[item] = 1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tfreq[item] += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn freq;\n}",
    "{\n\tNullable!(long[long]) result;\n\t\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result is null)\n\t\t\t{\n\t\t\t\tresult = [element: 1];\n\t\t\t}\n\t\t\telse if(element in result)\n\t\t\t{\n\t\t\t\tresult[element] += 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[element] = 1;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result = null;\n\tlong[long] result_dict = new long[long];\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result_dict.count(element) == 0)\n\t\t\t{\n\t\t\t\tresult_dict[element] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult_dict[element] += 1;\n\t\t\t}\n\t\t}\n\t}\n\tresult = result_dict;\n\treturn result;\n}",
    "{\n\tlong[long] result;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result.count(element) == 0)\n\t\t\t{\n\t\t\t\tresult[element] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[element] = result[element] + 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] freq = new long[long];\n\tforeach(i; list1)\n\t{\n\t\tforeach(j; i)\n\t\t{\n\t\t\tif(freq.count(j) == 0)\n\t\t\t{\n\t\t\t\tfreq[j] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfreq[j] += 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn freq;\n}",
    "{\n\tlong[long] dict;\n\tforeach(long[] list; list1)\n\t{\n\t\tforeach(long element; list)\n\t\t{\n\t\t\tif(element in dict)\n\t\t\t{\n\t\t\t\tdict[element]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdict[element] = 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn dict;\n}",
    "{\n\tNullable!(long[long]) result;\n\t\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result.isNull)\n\t\t\t{\n\t\t\t\tresult = Nullable!(long[long])([element:1]);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(element in result.get)\n\t\t\t\t{\n\t\t\t\t\tresult.get[element]++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tresult.get[element] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[long] result;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result.count(element) == 0)\n\t\t\t{\n\t\t\t\tresult[element] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[element] += 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\tlong[] temp;\n\tlong[] temp2;\n\tlong temp3;\n\tlong temp4;\n\tlong temp5;\n\tlong temp6;\n\tlong temp7;\n\tlong temp8;\n\tlong temp9;\n\tlong temp10;\n\tlong temp11;\n\tlong temp12;\n\tlong temp13;\n\tlong temp14;\n\tlong temp15;\n\tlong temp16;\n\tlong temp17;\n\tlong temp18;\n\tlong temp19;\n\tlong temp20;\n\tlong temp21;\n\tlong temp22;\n\tlong temp23;\n\tlong temp24;\n\tlong temp25;\n\tlong temp26;\n\tlong temp27;\n\tlong temp28;\n\tlong temp29;\n\tlong temp30;\n\tlong temp31;\n\tlong temp32;\n\tlong temp33;\n\tlong temp34;\n\tlong temp35;\n\tlong temp36;\n\tlong temp37;\n\tlong temp38;\n\tlong temp39;\n\tlong temp40;\n\tlong temp41;\n\tlong temp42;\n\tlong temp43;\n\tlong temp44;\n\tlong temp45;\n\tlong temp46;\n\tlong temp47;\n\tlong temp48;\n\tlong temp49;\n\tlong temp50;\n\tlong temp51;\n\tlong temp52;\n\tlong temp53;\n\tlong temp54;\n\tlong temp55;\n\tlong temp56;\n\tlong temp57;\n\tlong temp58;\n\tlong temp59;\n\tlong temp60;\n\tlong temp61;\n\tlong temp62;\n\tlong temp63;\n\tlong temp64;\n\tlong temp65;\n\tlong temp66;\n\tlong temp67;\n\tlong temp68;\n\tlong temp69;\n\tlong temp70;\n\tlong temp71;\n\tlong temp72;\n\tlong temp73;\n\tlong temp74;\n\tlong temp75;\n\tlong temp76;\n\tlong temp77;\n\tlong temp78;\n\tlong temp79;\n\tlong temp80;\n\tlong temp81;\n\tlong temp82;\n\tlong temp83",
    "{\n\tlong[long] frequency;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(element in frequency)\n\t\t\t{\n\t\t\t\tfrequency[element]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfrequency[element] = 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn frequency;\n}",
    "{\n\tlong[long] freq;\n\tforeach(list; list1)\n\t{\n\t\tforeach(elem; list)\n\t\t{\n\t\t\tif(freq.count(elem) == 0)\n\t\t\t{\n\t\t\t\tfreq[elem] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfreq[elem] += 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn freq;\n}",
    "{\n\tlong[long] frequency;\n\tforeach(long[] list; list1)\n\t{\n\t\tforeach(long element; list)\n\t\t{\n\t\t\tif(element in frequency)\n\t\t\t{\n\t\t\t\tfrequency[element]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfrequency[element] = 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn frequency;\n}",
    "{\n\tlong[long] freq;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(freq.count(element) == 0)\n\t\t\t{\n\t\t\t\tfreq[element] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfreq[element]++;\n\t\t\t}\n\t\t}\n\t}\n\treturn freq;\n}",
    "{\n\tNullable!(long[long]) result;\n\tresult.init();\n\t\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result.isNull)\n\t\t\t{\n\t\t\t\tresult.set(new long[long]);\n\t\t\t}\n\t\t\t\n\t\t\tif(element in result.get)\n\t\t\t{\n\t\t\t\tresult.get[element]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.get[element] = 1;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\t\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result.isNull)\n\t\t\t{\n\t\t\t\tresult = Nullable!(long[long])(new long[long](element, 1));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(result.get.length == 0)\n\t\t\t\t{\n\t\t\t\t\tresult.get ~= element;\n\t\t\t\t\tresult.get ~= 1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tbool found = false;\n\t\t\t\t\tfor(int i = 0; i < result.get.length; i += 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(result.get[i] == element)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tresult.get[i + 1] += 1;\n\t\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(!found)\n\t\t\t\t\t{\n\t\t\t\t\t\tresult.get ~= element;\n\t\t\t\t\t\tresult.get ~= 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[long] result;\n\tforeach(list; list1)\n\t{\n\t\tforeach(item; list)\n\t\t{\n\t\t\tif(result.count(item) == 0)\n\t\t\t{\n\t\t\t\tresult[item] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[item] += 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] result;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result.count(element))\n\t\t\t{\n\t\t\t\tresult[element]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[element] = 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] freq;\n\tforeach(long[] list; list1)\n\t{\n\t\tforeach(long element; list)\n\t\t{\n\t\t\tif(freq.count(element))\n\t\t\t{\n\t\t\t\tfreq[element]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfreq[element] = 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn freq;\n}",
    "{\n\tlong[long] freq;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tfreq[element]++;\n\t\t}\n\t}\n\treturn freq;\n}",
    "{\n\tlong[long] result;\n\tforeach(list; list1)\n\t{\n\t\tforeach(item; list)\n\t\t{\n\t\t\tif(result.count(item) == 0)\n\t\t\t{\n\t\t\t\tresult[item] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[item] += 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] result;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result.count(element) == 0)\n\t\t\t{\n\t\t\t\tresult[element] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[element] += 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] freq = null;\n\tforeach(list; list1)\n\t{\n\t\tforeach(item; list)\n\t\t{\n\t\t\tif(freq is null)\n\t\t\t{\n\t\t\t\tfreq = [item:1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(freq.count(item) > 0)\n\t\t\t\t{\n\t\t\t\t\tfreq[item] += 1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tfreq[item] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn freq;\n}",
    "{\n\tlong[long] frequency = null;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(frequency is null)\n\t\t\t{\n\t\t\t\tfrequency = [element: 1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(element in frequency)\n\t\t\t\t{\n\t\t\t\t\tfrequency[element] += 1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tfrequency[element] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn frequency;\n}",
    "{\n\tlong[long] result;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result.count(element))\n\t\t\t{\n\t\t\t\tresult[element]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[element] = 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tauto result = new long[long][long](list1.length);\n\tforeach(i, list; list1)\n\t{\n\t\tforeach(j, element; list)\n\t\t{\n\t\t\tresult[i][element]++;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\tresult.isValid = true;\n\tresult.value = new long[list1.length];\n\t\n\tforeach(i, list; list1)\n\t{\n\t\tforeach(j, item; list)\n\t\t{\n\t\t\tresult.value[i] += item;\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[long] result;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result.count(element) == 0)\n\t\t\t{\n\t\t\t\tresult[element] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[element]++;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\tlong[long] freq;\n\tlong[long] temp;\n\tlong[long] temp2;\n\tlong i;\n\tlong j;\n\tlong k;\n\tlong l;\n\tlong m;\n\tlong n;\n\tlong o;\n\tlong p;\n\tlong q;\n\tlong r;\n\tlong s;\n\tlong t;\n\tlong u;\n\tlong v;\n\tlong w;\n\tlong x;\n\tlong y;\n\tlong z;\n\tlong aa;\n\tlong ab;\n\tlong ac;\n\tlong ad;\n\tlong ae;\n\tlong af;\n\tlong ag;\n\tlong ah;\n\tlong ai;\n\tlong aj;\n\tlong ak;\n\tlong al;\n\tlong am;\n\tlong an;\n\tlong ao;\n\tlong ap;\n\tlong aq;\n\tlong ar;\n\tlong as;\n\tlong at;\n\tlong au;\n\tlong av;\n\tlong aw;\n\tlong ax;\n\tlong ay;\n\tlong az;\n\tlong ba;\n\tlong bb;\n\tlong bc;\n\tlong bd;\n\tlong be;\n\tlong bf;\n\tlong bg;\n\tlong bh;\n\tlong bi;\n\tlong bj;\n\tlong bk;\n\tlong bl;\n\tlong bm;\n\tlong bn;\n\tlong bo;\n\tlong bp;\n\tlong bq;\n\tlong br;\n\tlong bs;\n\tlong bt;\n\tlong bu;\n\tlong bv;\n\tlong bw;\n\tlong bx;\n\tlong by;\n\tlong bz;\n\tlong ca;\n\tlong cb;\n\tlong cc;\n\tlong cd;\n\tlong ce;\n\tlong cf;\n\tlong cg;\n\tlong ch;\n\tlong ci;\n\tlong cj;\n\tlong ck;\n\tlong cl;\n\tlong cm;\n\tlong cn;\n\tlong co;\n\tlong cp;\n\tlong cq;\n\tlong cr;\n\t",
    "{\n\tlong[long] freq = null;\n\tforeach(long[] list; list1)\n\t{\n\t\tforeach(long element; list)\n\t\t{\n\t\t\tif(freq is null)\n\t\t\t\tfreq = [element:1];\n\t\t\telse if(element in freq)\n\t\t\t\tfreq[element]++;\n\t\t\telse\n\t\t\t\tfreq[element] = 1;\n\t\t}\n\t}\n\treturn freq;\n}",
    "{\n\tlong[long] result;\n\tforeach(list; list1) \n\t{\n\t\tforeach(element; list) \n\t\t{\n\t\t\tif(element in result) \n\t\t\t{\n\t\t\t\tresult[element]++;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[element] = 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] freq = new long[long];\n\tforeach(long[] list; list1)\n\t{\n\t\tforeach(long elem; list)\n\t\t{\n\t\t\tfreq[elem]++;\n\t\t}\n\t}\n\treturn freq;\n}",
    "{\n\tlong[long] freq;\n\tforeach(list; list1)\n\t{\n\t\tforeach(item; list)\n\t\t{\n\t\t\tfreq[item]++;\n\t\t}\n\t}\n\treturn freq;\n}",
    "{\n\tlong[long] result;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result.count(element) == 0)\n\t\t\t{\n\t\t\t\tresult[element] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[element] += 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] result;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result.count(element))\n\t\t\t{\n\t\t\t\tresult[element]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[element] = 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] result;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(element in result)\n\t\t\t{\n\t\t\t\tresult[element]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[element] = 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] freq;\n\tforeach(list; list1)\n\t{\n\t\tforeach(elem; list)\n\t\t{\n\t\t\tfreq[elem]++;\n\t\t}\n\t}\n\treturn freq;\n}",
    "{\n\tlong[long] result;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result.count(element))\n\t\t\t{\n\t\t\t\tresult[element]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[element] = 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] result;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result.count(element) == 0)\n\t\t\t{\n\t\t\t\tresult[element] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[element] += 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] result;\n\tforeach(list; list1) \n\t{\n\t\tforeach(element; list) \n\t\t{\n\t\t\tif(result.count(element)) \n\t\t\t{\n\t\t\t\tresult[element]++;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[element] = 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] result;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result.count(element) == 0)\n\t\t\t{\n\t\t\t\tresult[element] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[element] += 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] result;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result.count(element))\n\t\t\t{\n\t\t\t\tresult[element]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[element] = 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] result;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result.count(element))\n\t\t\t{\n\t\t\t\tresult[element]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[element] = 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] freq = null;\n\tforeach(long[] list; list1)\n\t{\n\t\tforeach(long i; list)\n\t\t{\n\t\t\tif(freq is null)\n\t\t\t{\n\t\t\t\tfreq = [i:1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(i in freq)\n\t\t\t\t{\n\t\t\t\t\tfreq[i]++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tfreq[i] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn freq;\n}",
    "{\n\tlong[long] result;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result.count(element))\n\t\t\t{\n\t\t\t\tresult[element]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[element] = 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] result;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result.count(element))\n\t\t\t{\n\t\t\t\tresult[element]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[element] = 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] result;\n\tforeach (list; list1) \n\t{\n\t\tforeach (element; list) \n\t\t{\n\t\t\tif (result.count(element) == 0) \n\t\t\t{\n\t\t\t\tresult[element] = 1;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[element] += 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] freq = null;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(freq is null)\n\t\t\t{\n\t\t\t\tfreq = [element : 1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(element in freq)\n\t\t\t\t{\n\t\t\t\t\tfreq[element] += 1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tfreq[element] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn freq;\n}",
    "{\n\tlong[long] frequency = null;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(frequency is null)\n\t\t\t{\n\t\t\t\tfrequency = [element : 1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(element in frequency)\n\t\t\t\t{\n\t\t\t\t\tfrequency[element] += 1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tfrequency[element] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn frequency;\n}",
    "{\n\tlong[long] freq;\n\tforeach(element; list1)\n\t{\n\t\tforeach(e; element)\n\t\t{\n\t\t\tif(freq.count(e) == 0)\n\t\t\t{\n\t\t\t\tfreq[e] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfreq[e]++;\n\t\t\t}\n\t\t}\n\t}\n\treturn freq;\n}",
    "{\n\tlong[long] frequency;\n\tforeach(long[] list; list1)\n\t{\n\t\tforeach(long element; list)\n\t\t{\n\t\t\tfrequency[element]++;\n\t\t}\n\t}\n\treturn frequency;\n}",
    "{\n\tauto result = Nullable!(long[long])();\n\tresult.init();\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result.isNull)\n\t\t\t{\n\t\t\t\tresult.set(long[long](element, 1));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(result.get.length == 0)\n\t\t\t\t{\n\t\t\t\t\tresult.get ~= element;\n\t\t\t\t\tresult.get ~= 1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tbool found = false;\n\t\t\t\t\tfor(int i = 0; i < result.get.length; i += 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(result.get[i] == element)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tresult.get[i + 1]++;\n\t\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(!found)\n\t\t\t\t\t{\n\t\t\t\t\t\tresult.get ~= element;\n\t\t\t\t\t\tresult.get ~= 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\t\n\tif (list1.length == 0)\n\t\treturn result;\n\t\n\tresult = new long[long](list1.length);\n\t\n\tforeach (list; list1)\n\t\tforeach (element; list)\n\t\t\tresult[element]++;\n\t\n\treturn result;\n}",
    "{\n\tlong[long] result;\n\tforeach (list; list1)\n\t{\n\t\tforeach (element; list)\n\t\t{\n\t\t\tif (result.count(element))\n\t\t\t{\n\t\t\t\tresult[element]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[element] = 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tauto list2 = list1.flatten;\n\tauto list3 = list2.dup;\n\tauto list4 = list2.dup;\n\t\n\tauto list5 = list2.dup;\n\tauto list6 = list2.dup;\n\t\n\tauto list7 = list2.dup;\n\tauto list8 = list2.dup;\n\t\n\tauto list9 = list2.dup;\n\tauto list10 = list2.dup;\n\t\n\tauto list11 = list2.dup;\n\tauto list12 = list2.dup;\n\t\n\tauto list13 = list2.dup;\n\tauto list14 = list2.dup;\n\t\n\tauto list15 = list2.dup;\n\tauto list16 = list2.dup;\n\t\n\tauto list17 = list2.dup;\n\tauto list18 = list2.dup;\n\t\n\tauto list19 = list2.dup;\n\tauto list20 = list2.dup;\n\t\n\tauto list21 = list2.dup;\n\tauto list22 = list2.dup;\n\t\n\tauto list23 = list2.dup;\n\tauto list24 = list2.dup;\n\t\n\tauto list25 = list2.dup;\n\tauto list26 = list2.dup;\n\t\n\tauto list27 = list2.dup;\n\tauto list28 = list2.dup;\n\t\n\tauto list29 = list2.dup;\n\tauto list30 = list2.dup;\n\t\n\tauto list31 = list2.dup;\n\tauto list32 = list2.dup;\n\t\n\tauto list33 = list2.dup;\n\tauto list34 = list2.dup;\n\t\n\tauto list35 = list2.dup;\n\tauto list36 = list2.dup;\n\t\n\tauto list37 = list2.dup;\n\tauto list38 = list2.dup;\n\t\n\tauto list39 = list2.dup;\n\tauto list40 = list2.dup;\n\t\n\tauto list",
    "{\n\tNullable!(long[long]) result;\n\t\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result is null)\n\t\t\t{\n\t\t\t\tresult = [element : 1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(element in result)\n\t\t\t\t{\n\t\t\t\t\tresult[element]++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tresult[element] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result = Nullable!(long[long])();\n\tresult.init = true;\n\t\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(!result.value.contains(element))\n\t\t\t{\n\t\t\t\tresult.value[element] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.value[element]++;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tauto result = Nullable!(long[long])();\n\tif (list1.length == 0) \n\t{\n\t\treturn result;\n\t}\n\t\n\tresult.value = long[long](list1.length);\n\tforeach (list; list1) \n\t{\n\t\tforeach (element; list) \n\t\t{\n\t\t\tif (result.value.count(element) == 0) \n\t\t\t{\n\t\t\t\tresult.value[element] = 1;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tresult.value[element] += 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] result;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result.count(element) == 0)\n\t\t\t{\n\t\t\t\tresult[element] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[element] += 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\t\n\tforeach(list; list1)\n\t{\n\t\tforeach(num; list)\n\t\t{\n\t\t\tif(result.isNull)\n\t\t\t{\n\t\t\t\tresult = Nullable!(long[long])([num:1]);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(result.get.keys.canFind(num))\n\t\t\t\t{\n\t\t\t\t\tresult.get[num]++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tresult.get[num] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result = Nullable!(long[long])(null);\n\t\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result.isNull)\n\t\t\t{\n\t\t\t\tresult.set(long[long](element, 1));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(result.get.length == 0)\n\t\t\t\t{\n\t\t\t\t\tresult.get ~= element;\n\t\t\t\t\tresult.get ~= 1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tbool found = false;\n\t\t\t\t\tforeach(i, e; result.get)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(e == element)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tresult.get[i+1]++;\n\t\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(!found)\n\t\t\t\t\t{\n\t\t\t\t\t\tresult.get ~= element;\n\t\t\t\t\t\tresult.get ~= 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[long] result;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result.count(element) == 0)\n\t\t\t{\n\t\t\t\tresult[element] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[element] += 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\tlong[long] freq;\n\tlong i,j;\n\t\n\tforeach(list; list1)\n\t{\n\t\tforeach(item; list)\n\t\t{\n\t\t\tfreq[item]++;\n\t\t}\n\t}\n\t\n\tresult = freq;\n\treturn result;\n}",
    "{\n\tlong[long] result = null;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result is null)\n\t\t\t{\n\t\t\t\tresult = [element: 1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(element in result)\n\t\t\t\t{\n\t\t\t\t\tresult[element] += 1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tresult[element] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] frequency;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tfrequency[element]++;\n\t\t}\n\t}\n\treturn frequency;\n}",
    "{\n\tNullable!(long[long]) result;\n\t\n\tif(list1.length == 0)\n\t{\n\t\treturn null;\n\t}\n\t\n\tlong[long] temp;\n\t\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(temp.length == 0)\n\t\t\t{\n\t\t\t\ttemp ~= element;\n\t\t\t\ttemp ~= 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbool found = false;\n\t\t\t\tforeach(i, j; temp)\n\t\t\t\t{\n\t\t\t\t\tif(i == element)\n\t\t\t\t\t{\n\t\t\t\t\t\ttemp[j] = temp[j] + 1;\n\t\t\t\t\t\tfound = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(!found)\n\t\t\t\t{\n\t\t\t\t\ttemp ~= element;\n\t\t\t\t\ttemp ~= 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tresult = temp;\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\tlong[long] freq;\n\tlong[long] temp;\n\tlong[long] temp2;\n\tlong[long] temp3;\n\tlong[long] temp4;\n\tlong[long] temp5;\n\tlong[long] temp6;\n\tlong[long] temp7;\n\tlong[long] temp8;\n\tlong[long] temp9;\n\tlong[long] temp10;\n\tlong[long] temp11;\n\tlong[long] temp12;\n\tlong[long] temp13;\n\tlong[long] temp14;\n\tlong[long] temp15;\n\tlong[long] temp16;\n\tlong[long] temp17;\n\tlong[long] temp18;\n\tlong[long] temp19;\n\tlong[long] temp20;\n\tlong[long] temp21;\n\tlong[long] temp22;\n\tlong[long] temp23;\n\tlong[long] temp24;\n\tlong[long] temp25;\n\tlong[long] temp26;\n\tlong[long] temp27;\n\tlong[long] temp28;\n\tlong[long] temp29;\n\tlong[long] temp30;\n\tlong[long] temp31;\n\tlong[long] temp32;\n\tlong[long] temp33;\n\tlong[long] temp34;\n\tlong[long] temp35;\n\tlong[long] temp36;\n\tlong[long] temp37;\n\tlong[long] temp38;\n\tlong[long] temp39;\n\tlong[long] temp40;\n\tlong[long] temp41;\n\tlong[long] temp42;\n\tlong[long] temp43;\n\tlong[long] temp44;\n\tlong[long] temp45;\n\tlong[long] temp46;\n\tlong[long] temp47;\n\tlong[long] temp48;\n\tlong[long] temp49;\n\tlong[long] temp50;\n\tlong[long] temp51;\n\tlong[long] temp52;\n\tlong[long] temp53;\n\tlong[long] temp54;\n\tlong[",
    "{\n\tlong[long] freq = new long[long];\n\tforeach(long[] list; list1)\n\t{\n\t\tforeach(long item; list)\n\t\t{\n\t\t\tfreq[item]++;\n\t\t}\n\t}\n\treturn freq;\n}",
    "{\n\tNullable!(long[long]) result;\n\t\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result.isNull)\n\t\t\t{\n\t\t\t\tresult = Nullable!(long[long])([element : 1]);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(result.get.byKey(element).isNull)\n\t\t\t\t{\n\t\t\t\t\tresult.get[element] = 1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tresult.get[element] += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[long] result;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(element in result)\n\t\t\t{\n\t\t\t\tresult[element]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[element] = 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tauto result = new long[long][long](list1.length);\n\tforeach(i, list; list1)\n\t{\n\t\tforeach(j, element; list)\n\t\t{\n\t\t\tif(element in result[i])\n\t\t\t{\n\t\t\t\tresult[i][element]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[i][element] = 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] freq;\n\tforeach (list; list1) \n\t{\n\t\tforeach (element; list) \n\t\t{\n\t\t\tfreq[element]++;\n\t\t}\n\t}\n\treturn freq;\n}",
    "{\n\tNullable!(long[long]) result;\n\tlong[long] freq;\n\tlong i;\n\t\n\tfreq = new long[long](list1.length);\n\t\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tfreq[element]++;\n\t\t}\n\t}\n\t\n\tforeach(element; freq)\n\t{\n\t\tif(element != 0)\n\t\t{\n\t\t\tresult = freq;\n\t\t\treturn result;\n\t\t}\n\t}\n\t\n\treturn null;\n}",
    "{\n\tlong[long] result;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result.count(element) == 0)\n\t\t\t{\n\t\t\t\tresult[element] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[element]++;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] result;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result.count(element))\n\t\t\t{\n\t\t\t\tresult[element]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[element] = 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] freq;\n\tforeach(list; list1)\n\t{\n\t\tforeach(item; list)\n\t\t{\n\t\t\tif(freq.count(item) == 0)\n\t\t\t{\n\t\t\t\tfreq[item] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfreq[item] += 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn freq;\n}",
    "{\n\tNullable!(long[long]) result;\n\t\n\tforeach(list; list1)\n\t{\n\t\tforeach(item; list)\n\t\t{\n\t\t\tif(result is null)\n\t\t\t{\n\t\t\t\tresult = [item:1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(result.get(item) is null)\n\t\t\t\t{\n\t\t\t\t\tresult[item] = 1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tresult[item] += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[long] freq;\n\tforeach(item; list1)\n\t{\n\t\tforeach(i; item)\n\t\t{\n\t\t\tif(freq.count(i))\n\t\t\t{\n\t\t\t\tfreq[i]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfreq[i] = 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn freq;\n}",
    "{\n\tNullable!(long[long]) result;\n\tlong[long] freq;\n\tlong[long] temp;\n\tlong[long] temp2;\n\tlong i;\n\tlong j;\n\tlong k;\n\tlong l;\n\tlong m;\n\tlong n;\n\tlong o;\n\tlong p;\n\tlong q;\n\tlong r;\n\tlong s;\n\tlong t;\n\tlong u;\n\tlong v;\n\tlong w;\n\tlong x;\n\tlong y;\n\tlong z;\n\t\n\tfreq = new long[0];\n\t\n\tfor(i = 0; i < list1.length; i++)\n\t{\n\t\tfor(j = 0; j < list1[i].length; j++)\n\t\t{\n\t\t\ttemp = new long[freq.length + 1];\n\t\t\tfor(k = 0; k < freq.length; k++)\n\t\t\t{\n\t\t\t\ttemp[k] = freq[k];\n\t\t\t}\n\t\t\ttemp[freq.length] = list1[i][j];\n\t\t\tfreq = temp;\n\t\t}\n\t}\n\t\n\ttemp2 = new long[freq.length];\n\tfor(l = 0; l < freq.length; l++)\n\t{\n\t\ttemp2[l] = 0;\n\t}\n\t\n\tfor(m = 0; m < freq.length; m++)\n\t{\n\t\tfor(n = 0; n < freq.length; n++)\n\t\t{\n\t\t\tif(freq[m] == freq[n])\n\t\t\t{\n\t\t\t\ttemp2[m] = temp2[m] + 1;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tresult = new Nullable!(long[long])();\n\tresult.set(freq);\n\tresult.set(temp2);\n\t\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\tresult.init();\n\t\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result.isNull)\n\t\t\t{\n\t\t\t\tresult.set(long[long](element, 1));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(element in result.get)\n\t\t\t\t{\n\t\t\t\t\tresult.get[element]++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tresult.get[element] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\tif (list1.length == 0)\n\t\treturn result;\n\t\n\tresult.init(list1.length);\n\t\n\tforeach (list; list1)\n\t{\n\t\tforeach (elem; list)\n\t\t{\n\t\t\tif (result.get(elem) is null)\n\t\t\t\tresult.set(elem, 1);\n\t\t\telse\n\t\t\t\tresult.set(elem, result.get(elem) + 1);\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tauto result = new long[long][long](list1.length);\n\tforeach(i, list; list1)\n\t{\n\t\tforeach(j, element; list)\n\t\t{\n\t\t\tif(result[i].length == 0)\n\t\t\t{\n\t\t\t\tresult[i] ~= element;\n\t\t\t\tresult[i] ~= 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbool found = false;\n\t\t\t\tforeach(k, element2; result[i])\n\t\t\t\t{\n\t\t\t\t\tif(k % 2 == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(element == element2)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tresult[i][k+1]++;\n\t\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(!found)\n\t\t\t\t{\n\t\t\t\t\tresult[i] ~= element;\n\t\t\t\t\tresult[i] ~= 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] result;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result.count(element) == 0)\n\t\t\t{\n\t\t\t\tresult[element] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[element] += 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] frequency;\n\tforeach(list; list1) \n\t{\n\t\tforeach(element; list) \n\t\t{\n\t\t\tif(frequency.count(element) == 0) \n\t\t\t{\n\t\t\t\tfrequency[element] = 1;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tfrequency[element] += 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn frequency;\n}",
    "{\n\tlong[long] freq = null;\n\tforeach(long[] list; list1)\n\t{\n\t\tforeach(long element; list)\n\t\t{\n\t\t\tif(freq is null)\n\t\t\t{\n\t\t\t\tfreq = [element : 1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(element in freq)\n\t\t\t\t{\n\t\t\t\t\tfreq[element]++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tfreq[element] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn freq;\n}",
    "{\n\tNullable!(long[long]) result;\n\tresult.isValid = true;\n\t\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result.value.length == 0)\n\t\t\t{\n\t\t\t\tresult.value ~= element;\n\t\t\t\tresult.value ~= 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbool found = false;\n\t\t\t\tforeach(i, value; result.value)\n\t\t\t\t{\n\t\t\t\t\tif(i % 2 == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(value == element)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tresult.value[i + 1]++;\n\t\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(!found)\n\t\t\t\t{\n\t\t\t\t\tresult.value ~= element;\n\t\t\t\t\tresult.value ~= 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] result;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result.count(element) == 0)\n\t\t\t{\n\t\t\t\tresult[element] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[element] += 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] result;\n\tforeach(item; list1)\n\t{\n\t\tforeach(subitem; item)\n\t\t{\n\t\t\tresult[subitem]++;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\tif(list1.length == 0)\n\t{\n\t\treturn result;\n\t}\n\t\n\tresult = new long[long](list1.length);\n\t\n\tforeach(i, list; list1)\n\t{\n\t\tforeach(j, element; list)\n\t\t{\n\t\t\tresult[element]++;\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\tresult.init;\n\t\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result.get.count(element) == 0)\n\t\t\t{\n\t\t\t\tresult.get[element] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.get[element] += 1;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[long] freq;\n\tforeach(list; list1)\n\t{\n\t\tforeach(item; list)\n\t\t{\n\t\t\tfreq[item]++;\n\t\t}\n\t}\n\treturn freq;\n}",
    "{\n\tlong[long] frequency;\n\tforeach(element; list1) \n\t{\n\t\tforeach(elem; element) \n\t\t{\n\t\t\tif(frequency.count(elem) == 0) \n\t\t\t{\n\t\t\t\tfrequency[elem] = 1;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tfrequency[elem] += 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn frequency;\n}",
    "{\n\tlong[long] freq = null;\n\tforeach(list; list1)\n\t{\n\t\tforeach(elem; list)\n\t\t{\n\t\t\tif(freq is null)\n\t\t\t{\n\t\t\t\tfreq = [elem : 1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(elem in freq)\n\t\t\t\t{\n\t\t\t\t\tfreq[elem]++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tfreq[elem] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn freq;\n}",
    "{\n\tNullable!(long[long]) result;\n\t\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result.isNull)\n\t\t\t{\n\t\t\t\tresult = Nullable!(long[long])([element:1]);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(result.get.containsKey(element))\n\t\t\t\t{\n\t\t\t\t\tresult.get[element]++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tresult.get[element] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\tresult.init();\n\t\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result.isNull)\n\t\t\t{\n\t\t\t\tresult.set(long[long](element, 1));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(result.get.length == 0)\n\t\t\t\t{\n\t\t\t\t\tresult.get ~= element;\n\t\t\t\t\tresult.get ~= 1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tbool found = false;\n\t\t\t\t\tfor(int i = 0; i < result.get.length; i += 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(result.get[i] == element)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tresult.get[i + 1]++;\n\t\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(!found)\n\t\t\t\t\t{\n\t\t\t\t\t\tresult.get ~= element;\n\t\t\t\t\t\tresult.get ~= 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[long] freq = new long[long];\n\tforeach(long[] list2; list1)\n\t{\n\t\tforeach(long element; list2)\n\t\t{\n\t\t\tfreq[element]++;\n\t\t}\n\t}\n\treturn freq;\n}",
    "{\n\tlong[long] freq = new long[long];\n\tforeach(list; list1)\n\t{\n\t\tforeach(elem; list)\n\t\t{\n\t\t\tfreq[elem]++;\n\t\t}\n\t}\n\treturn freq;\n}",
    "{\n\tNullable!(long[long]) result;\n\tresult.init;\n\t\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result.isNull)\n\t\t\t{\n\t\t\t\tresult.init;\n\t\t\t\tresult.set(element, 1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(result.get(element) is null)\n\t\t\t\t{\n\t\t\t\t\tresult.set(element, 1);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tresult.set(element, result.get(element) + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tlong[long] result = new long[long];\n\tforeach(long[] list; list1)\n\t{\n\t\tforeach(long element; list)\n\t\t{\n\t\t\tresult[element]++;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\t\n\tforeach(i; 0..list1.length)\n\t{\n\t\tforeach(j; 0..list1[i].length)\n\t\t{\n\t\t\tif(result.isNull)\n\t\t\t{\n\t\t\t\tresult = Nullable!(long[long])([list1[i][j]:1]);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(result.get.count(list1[i][j]) == 0)\n\t\t\t\t{\n\t\t\t\t\tresult.get[list1[i][j]] = 1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tresult.get[list1[i][j]] += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[long] freq = new long[long];\n\tforeach(long[] list2; list1)\n\t{\n\t\tforeach(long elem; list2)\n\t\t{\n\t\t\tfreq[elem]++;\n\t\t}\n\t}\n\treturn freq;\n}",
    "{\n\tlong[long] result;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(element in result)\n\t\t\t{\n\t\t\t\tresult[element]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[element] = 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tNullable!(long[long]) result;\n\t\n\tif (list1.length == 0)\n\t{\n\t\tresult = null;\n\t}\n\telse\n\t{\n\t\tlong[long] freq_dict;\n\t\tforeach (long[] list; list1)\n\t\t{\n\t\t\tforeach (long element; list)\n\t\t\t{\n\t\t\t\tif (element in freq_dict)\n\t\t\t\t{\n\t\t\t\t\tfreq_dict[element]++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tfreq_dict[element] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tresult = freq_dict;\n\t}\n\treturn result;\n}",
    "{\n\tauto result = new long[long][long](list1.length);\n\t\n\tforeach(i, list; list1)\n\t{\n\t\tforeach(j, element; list)\n\t\t{\n\t\t\tresult[i][element]++;\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[long] freq;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(freq.count(element))\n\t\t\t{\n\t\t\t\tfreq[element]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfreq[element] = 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn freq;\n}",
    "{\n\tlong[long] result;\n\tforeach(list; list1)\n\t{\n\t\tforeach(elem; list)\n\t\t{\n\t\t\tif(elem in result)\n\t\t\t{\n\t\t\t\tresult[elem]++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[elem] = 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n\tauto result = new Nullable!(long[long]);\n\tif (list1.length == 0) \n\t{\n\t\tresult.setNull();\n\t\treturn result;\n\t}\n\t\n\tauto dict = new long[long];\n\tforeach(list; list1) \n\t{\n\t\tforeach(element; list) \n\t\t{\n\t\t\tif (element in dict) \n\t\t\t{\n\t\t\t\tdict[element] += 1;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tdict[element] = 1;\n\t\t\t}\n\t\t}\n\t}\n\tresult.set(dict);\n\treturn result;\n}",
    "{\n\tlong[long] freq;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(freq.count(element) == 0)\n\t\t\t{\n\t\t\t\tfreq[element] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfreq[element]++;\n\t\t\t}\n\t\t}\n\t}\n\treturn freq;\n}",
    "{\n\tlong[long] freq = null;\n\tforeach(long[] list; list1)\n\t{\n\t\tforeach(long element; list)\n\t\t{\n\t\t\tif(freq is null)\n\t\t\t{\n\t\t\t\tfreq = [element:1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(freq.keys.canFind(element))\n\t\t\t\t{\n\t\t\t\t\tfreq[element]++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tfreq[element] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn freq;\n}",
    "{\n\tlong[long] result;\n\tforeach(list; list1)\n\t{\n\t\tforeach(element; list)\n\t\t{\n\t\t\tif(result.count(element) == 0)\n\t\t\t{\n\t\t\t\tresult[element] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[element] += 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}"
  ]
}
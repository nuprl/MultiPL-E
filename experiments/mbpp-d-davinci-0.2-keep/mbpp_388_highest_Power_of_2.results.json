{
  "name": "mbpp_388_highest_Power_of_2",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_388_highest_Power_of_2.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p <= n) \n\t{\n\t\tp *= 2;\n\t}\n\treturn p / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\treturn pow(2, floor(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmp1nftb6su.d(10): Error: cannot implicitly convert expression `pow(2, floor(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1nftb6su.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\treturn pow(2, floor(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmp1nftb6su.d(10): Error: cannot implicitly convert expression `pow(2, floor(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1nftb6su.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong res = 1;\n\twhile (res <= n) \n\t{\n\t\tres *= 2;\n\t}\n\treturn res / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{ \n    long p = (long)log2(n); \n    return (long)pow(2, p);  \n} \nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmpofhm35f8.d(10): Error: C style cast illegal, use `cast(long)log2(n)`\n/tmp/tmpofhm35f8.d(11): Error: C style cast illegal, use `cast(long)pow(2, p)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpofhm35f8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{ \n\t// Initialize result \n\tlong p = (long)log2(n); \n\treturn (long)pow(2, p); \n} \nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmp3er201li.d(11): Error: C style cast illegal, use `cast(long)log2(n)`\n/tmp/tmp3er201li.d(12): Error: C style cast illegal, use `cast(long)pow(2, p)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3er201li.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{ \n\t// Initialize the result \n\tlong res = 1; \n\t\n\t// Keep multiplying res with 2 while it is smaller \n\t// than or equal to x \n\twhile (res <= n) \n\t\tres = res << 1; \n\t\n\treturn res>>1; \n} \nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{ \n    long p = (long)log2(n); \n    return (long)pow(2, p);  \n} \nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmpofhm35f8.d(10): Error: C style cast illegal, use `cast(long)log2(n)`\n/tmp/tmpofhm35f8.d(11): Error: C style cast illegal, use `cast(long)pow(2, p)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpofhm35f8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = (long)log2(n);\n\treturn (long)pow(2, p);\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmp6qffmn_6.d(10): Error: C style cast illegal, use `cast(long)log2(n)`\n/tmp/tmp6qffmn_6.d(11): Error: C style cast illegal, use `cast(long)pow(2, p)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6qffmn_6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p <= n) \n\t{\n\t\tp *= 2;\n\t}\n\treturn p / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\treturn cast(long)pow(2, cast(long)log2(n));\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong result = 0;\n\twhile (n > 1) \n\t{\n\t\tn = n >> 1;\n\t\tresult++;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpm6wot8vk.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427d35]\n??:? void tmpm6wot8vk.__unittest_L18_C1() [0x427a58]\n??:? void tmpm6wot8vk.__modtest() [0x427ab4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba5b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8ee]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa81]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff30]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa0d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8c5]\n??:? runModuleUnitTests [0x42b831]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428184]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 0;\n\twhile (pow(2,p) <= n) \n\t{\n\t\tp++;\n\t}\n\treturn pow(2,p-1);\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{ \n    long p = (long)log2(n); \n    return (long)pow(2, p);  \n} \nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmpofhm35f8.d(10): Error: C style cast illegal, use `cast(long)log2(n)`\n/tmp/tmpofhm35f8.d(11): Error: C style cast illegal, use `cast(long)pow(2, p)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpofhm35f8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{ \n    long p = (long)log2(n); \n    return (long)pow(2, p);  \n} \nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmpofhm35f8.d(10): Error: C style cast illegal, use `cast(long)log2(n)`\n/tmp/tmpofhm35f8.d(11): Error: C style cast illegal, use `cast(long)pow(2, p)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpofhm35f8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong res = 1;\n\twhile (res <= n) \n\t{\n\t\tres *= 2;\n\t}\n\treturn res / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p <= n) \n\t{\n\t\tp *= 2;\n\t}\n\treturn p / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p <= n) \n\t{\n\t\tp *= 2;\n\t}\n\treturn p / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong res = 0;\n\twhile (n > 0) \n\t{\n\t\tn >>= 1;\n\t\tres += 1;\n\t}\n\treturn res;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpo014paem.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427d2d]\n??:? void tmpo014paem.__unittest_L18_C1() [0x427a50]\n??:? void tmpo014paem.__modtest() [0x427aac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff28]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa05]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8bd]\n??:? runModuleUnitTests [0x42b829]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42817c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong res = 1;\n\twhile (res < n) \n\t{\n\t\tres *= 2;\n\t}\n\treturn res / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmphoa1ro_r.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d35]\n??:? void tmphoa1ro_r.__unittest_L17_C1() [0x427aa2]\n??:? void tmphoa1ro_r.__modtest() [0x427ab8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba5b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8ee]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa81]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff30]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa0d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8c5]\n??:? runModuleUnitTests [0x42b831]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428184]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong res = 1;\n\twhile (res <= n) \n\t{\n\t\tres *= 2;\n\t}\n\treturn res / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{ \n    long p = (long)log2(n); \n    return (long)pow(2, p);  \n} \nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmpofhm35f8.d(10): Error: C style cast illegal, use `cast(long)log2(n)`\n/tmp/tmpofhm35f8.d(11): Error: C style cast illegal, use `cast(long)pow(2, p)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpofhm35f8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\treturn pow(2, floor(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmp1nftb6su.d(10): Error: cannot implicitly convert expression `pow(2, floor(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1nftb6su.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p <= n)\n\t{\n\t\tp *= 2;\n\t}\n\treturn p / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong res = 1;\n\twhile (res <= n) \n\t{\n\t\tres *= 2;\n\t}\n\treturn res / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong res = 1;\n\twhile (res <= n) \n\t{\n\t\tres *= 2;\n\t}\n\treturn res / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p <= n) \n\t{\n\t\tp *= 2;\n\t}\n\treturn p / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p <= n) \n\t{\n\t\tp *= 2;\n\t}\n\treturn p / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{ \n    long p = (long)log2(n); \n    return (long)pow(2, p);  \n} \nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmpofhm35f8.d(10): Error: C style cast illegal, use `cast(long)log2(n)`\n/tmp/tmpofhm35f8.d(11): Error: C style cast illegal, use `cast(long)pow(2, p)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpofhm35f8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{ \n    long p = (long)log2(n); \n    return (long)pow(2, p);  \n} \nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmpofhm35f8.d(10): Error: C style cast illegal, use `cast(long)log2(n)`\n/tmp/tmpofhm35f8.d(11): Error: C style cast illegal, use `cast(long)pow(2, p)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpofhm35f8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p <= n) \n\t{\n\t\tp *= 2;\n\t}\n\treturn p / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{ \n    long p = (long)log2(n); \n    return (long)pow(2, p);  \n} \nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmpofhm35f8.d(10): Error: C style cast illegal, use `cast(long)log2(n)`\n/tmp/tmpofhm35f8.d(11): Error: C style cast illegal, use `cast(long)pow(2, p)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpofhm35f8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p <= n) \n\t{\n\t\tp *= 2;\n\t}\n\treturn p / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p <= n) \n\t{\n\t\tp *= 2;\n\t}\n\treturn p / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\treturn pow(2, floor(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmp1nftb6su.d(10): Error: cannot implicitly convert expression `pow(2, floor(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1nftb6su.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong res = 1;\n\twhile(res <= n)\n\t{\n\t\tres <<= 1;\n\t}\n\treturn res >> 1;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong highest_power = 0;\n\tlong power = 1;\n\twhile (power <= n) \n\t{\n\t\thighest_power = power;\n\t\tpower *= 2;\n\t}\n\treturn highest_power;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{ \n\t// Initialize the result \n\tlong res = 1; \n\t\n\t// Keep multiplying res with 2 while it is smaller \n\t// than or equal to x \n\twhile (res <= n) \n\t\tres = res << 1; \n\t\n\treturn res>>1; \n} \nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p < n)\n\t\tp *= 2;\n\treturn p / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123438,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6s50rxte.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427d35]\n??:? void tmp6s50rxte.__unittest_L15_C1() [0x427aa2]\n??:? void tmp6s50rxte.__modtest() [0x427ab8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba5b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8ee]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa81]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff30]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa0d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8c5]\n??:? runModuleUnitTests [0x42b831]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428184]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{ \n    long p = (long)log2(n); \n    return (long)pow(2, p);  \n} \nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmpofhm35f8.d(10): Error: C style cast illegal, use `cast(long)log2(n)`\n/tmp/tmpofhm35f8.d(11): Error: C style cast illegal, use `cast(long)pow(2, p)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpofhm35f8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p <= n)\n\t\tp *= 2;\n\treturn p / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{ \n\tlong p = (long)log2(n); \n\treturn (long)pow(2, p); \n} \nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123438,
      "stdout": "",
      "stderr": "/tmp/tmpkwa9w4mn.d(10): Error: C style cast illegal, use `cast(long)log2(n)`\n/tmp/tmpkwa9w4mn.d(11): Error: C style cast illegal, use `cast(long)pow(2, p)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkwa9w4mn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{ \n    long p = (long)log2(n); \n    return (long)pow(2, p);  \n} \nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmpofhm35f8.d(10): Error: C style cast illegal, use `cast(long)log2(n)`\n/tmp/tmpofhm35f8.d(11): Error: C style cast illegal, use `cast(long)pow(2, p)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpofhm35f8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong res = 1;\n\twhile (res <= n) \n\t{\n\t\tres *= 2;\n\t}\n\treturn res / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\treturn (long)pow(2, floor(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123438,
      "stdout": "",
      "stderr": "/tmp/tmpr6w1968q.d(10): Error: C style cast illegal, use `cast(long)pow(2, floor(log(n) / log(2)))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr6w1968q.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong res = 1;\n\twhile (res <= n) \n\t\tres <<= 1;\n\treturn res >> 1;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\treturn pow(2, floor(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmp1nftb6su.d(10): Error: cannot implicitly convert expression `pow(2, floor(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1nftb6su.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong res = 1;\n\twhile (res <= n) \n\t{\n\t\tres *= 2;\n\t}\n\treturn res / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p <= n) \n\t{\n\t\tp *= 2;\n\t}\n\treturn p / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong res = 1;\n\twhile (res <= n) \n\t{\n\t\tres *= 2;\n\t}\n\treturn res / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{ \n    long p = (long)log2(n); \n    return (long)pow(2, p);  \n} \nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmpofhm35f8.d(10): Error: C style cast illegal, use `cast(long)log2(n)`\n/tmp/tmpofhm35f8.d(11): Error: C style cast illegal, use `cast(long)pow(2, p)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpofhm35f8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n    return (long)pow(2, floor(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123438,
      "stdout": "",
      "stderr": "/tmp/tmphcq303wg.d(10): Error: C style cast illegal, use `cast(long)pow(2, floor(log(n) / log(2)))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphcq303wg.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p <= n) \n\t{\n\t\tp *= 2;\n\t}\n\treturn p / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{ \n    long p = (long)log2(n); \n    return (long)pow(2, p);  \n} \nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmpofhm35f8.d(10): Error: C style cast illegal, use `cast(long)log2(n)`\n/tmp/tmpofhm35f8.d(11): Error: C style cast illegal, use `cast(long)pow(2, p)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpofhm35f8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{ \n    long p = (long)log2(n); \n    return (long)pow(2, p);  \n} \nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmpofhm35f8.d(10): Error: C style cast illegal, use `cast(long)log2(n)`\n/tmp/tmpofhm35f8.d(11): Error: C style cast illegal, use `cast(long)pow(2, p)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpofhm35f8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p <= n) \n\t{\n\t\tp *= 2;\n\t}\n\treturn p / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p <= n) \n\t{\n\t\tp *= 2;\n\t}\n\treturn p / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{ \n    long p = (long)log2(n); \n    return (long)pow(2, p);  \n} \nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmpofhm35f8.d(10): Error: C style cast illegal, use `cast(long)log2(n)`\n/tmp/tmpofhm35f8.d(11): Error: C style cast illegal, use `cast(long)pow(2, p)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpofhm35f8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\treturn pow(2, floor(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmp1nftb6su.d(10): Error: cannot implicitly convert expression `pow(2, floor(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1nftb6su.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p <= n) \n\t{\n\t\tp *= 2;\n\t}\n\treturn p / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\treturn pow(2, floor(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmp1nftb6su.d(10): Error: cannot implicitly convert expression `pow(2, floor(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1nftb6su.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{ \n\tlong p = (long)log2(n); \n\treturn (long)pow(2, p); \n} \nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123438,
      "stdout": "",
      "stderr": "/tmp/tmpkwa9w4mn.d(10): Error: C style cast illegal, use `cast(long)log2(n)`\n/tmp/tmpkwa9w4mn.d(11): Error: C style cast illegal, use `cast(long)pow(2, p)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkwa9w4mn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p <= n) \n\t{\n\t\tp *= 2;\n\t}\n\treturn p / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p <= n) \n\t{\n\t\tp *= 2;\n\t}\n\treturn p / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\treturn pow(2, floor(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmp1nftb6su.d(10): Error: cannot implicitly convert expression `pow(2, floor(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1nftb6su.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong res = 1;\n\twhile (res <= n) \n\t{\n\t\tres *= 2;\n\t}\n\treturn res / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{ \n    long p = (long)log2(n); \n    return (long)pow(2, p);  \n} \nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmpofhm35f8.d(10): Error: C style cast illegal, use `cast(long)log2(n)`\n/tmp/tmpofhm35f8.d(11): Error: C style cast illegal, use `cast(long)pow(2, p)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpofhm35f8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p < n) \n\t{\n\t\tp *= 2;\n\t}\n\treturn p / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123438,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpoz7q_6g7.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d35]\n??:? void tmpoz7q_6g7.__unittest_L17_C1() [0x427aa2]\n??:? void tmpoz7q_6g7.__modtest() [0x427ab8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba5b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8ee]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa81]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff30]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa0d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8c5]\n??:? runModuleUnitTests [0x42b831]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428184]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p <= n) \n\t{\n\t\tp *= 2;\n\t}\n\treturn p / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong res = 1;\n\twhile (res <= n) \n\t{\n\t\tres *= 2;\n\t}\n\treturn res / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{ \n\t// Initialize the result \n\tlong res = 1; \n\t\n\t// Keep multiplying res with 2 while it is smaller than or equal to n. \n\twhile (res <= n) \n\t\tres = res << 1; \n\t\n\treturn res>>1; \n} \nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p < n) \n\t{\n\t\tp *= 2;\n\t}\n\treturn p / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123438,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpoz7q_6g7.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d35]\n??:? void tmpoz7q_6g7.__unittest_L17_C1() [0x427aa2]\n??:? void tmpoz7q_6g7.__modtest() [0x427ab8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba5b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8ee]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa81]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff30]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa0d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8c5]\n??:? runModuleUnitTests [0x42b831]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428184]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p <= n) \n\t{\n\t\tp *= 2;\n\t}\n\treturn p / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{ \n    long p = (long)log2(n); \n    return (long)pow(2, p);  \n} \nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmpofhm35f8.d(10): Error: C style cast illegal, use `cast(long)log2(n)`\n/tmp/tmpofhm35f8.d(11): Error: C style cast illegal, use `cast(long)pow(2, p)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpofhm35f8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{ \n\treturn (long)pow(2, floor(log2(n))); \n} \nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123438,
      "stdout": "",
      "stderr": "/tmp/tmpnyhegl2p.d(10): Error: C style cast illegal, use `cast(long)pow(2, floor(log2(n)))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnyhegl2p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\treturn pow(2, floor(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmp1nftb6su.d(10): Error: cannot implicitly convert expression `pow(2, floor(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1nftb6su.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\treturn cast(long)pow(2, cast(long)log2(n));\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong i = 1;\n\twhile(i < n)\n\t{\n\t\ti *= 2;\n\t}\n\treturn i / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123438,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzhy03pl1.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d35]\n??:? void tmpzhy03pl1.__unittest_L17_C1() [0x427aa2]\n??:? void tmpzhy03pl1.__modtest() [0x427ab8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba5b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8ee]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa81]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff30]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa0d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8c5]\n??:? runModuleUnitTests [0x42b831]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428184]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{ \n    long p = (long)log2(n); \n    return (long)pow(2, p);  \n} \nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmpofhm35f8.d(10): Error: C style cast illegal, use `cast(long)log2(n)`\n/tmp/tmpofhm35f8.d(11): Error: C style cast illegal, use `cast(long)pow(2, p)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpofhm35f8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong res = 1;\n\twhile (res <= n) \n\t{\n\t\tres = res << 1;\n\t}\n\treturn res >> 1;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong res = 1;\n\twhile (res <= n)\n\t\tres <<= 1;\n\treturn res >> 1;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\treturn pow(2, floor(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmp1nftb6su.d(10): Error: cannot implicitly convert expression `pow(2, floor(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1nftb6su.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong res = 1;\n\twhile (res <= n) \n\t{\n\t\tres *= 2;\n\t}\n\treturn res / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p <= n) \n\t{\n\t\tp <<= 1;\n\t}\n\treturn p >> 1;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n    long p = 1;\n    while (p <= n) \n\t{\n        p *= 2;\n    }\n    return p / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong res = 1;\n\twhile (res <= n) \n\t{\n\t\tres *= 2;\n\t}\n\treturn res / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p <= n) \n\t{\n\t\tp *= 2;\n\t}\n\treturn p / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p <= n)\n\t{\n\t\tp *= 2;\n\t}\n\treturn p / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\treturn pow(2, ceil(log(n) / log(2)) - 1);\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123438,
      "stdout": "",
      "stderr": "/tmp/tmp74cd1ct1.d(10): Error: cannot implicitly convert expression `pow(2, ceil(log(cast(real)n) / log(2.00000L)) - 1.00000L)` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp74cd1ct1.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile(p <= n)\n\t\tp = p << 1;\n\treturn p >> 1;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p <= n) \n\t{\n\t\tp *= 2;\n\t}\n\treturn p / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong res = 1;\n\twhile (res <= n) \n\t{\n\t\tres *= 2;\n\t}\n\treturn res / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{ \n    long p = (long)log2(n); \n    return (long)pow(2, p);  \n} \nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmpofhm35f8.d(10): Error: C style cast illegal, use `cast(long)log2(n)`\n/tmp/tmpofhm35f8.d(11): Error: C style cast illegal, use `cast(long)pow(2, p)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpofhm35f8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p <= n)\n\t{\n\t\tp *= 2;\n\t}\n\treturn p / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong res = 1;\n\twhile (res <= n) \n\t{\n\t\tres *= 2;\n\t}\n\treturn res/2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p <= n)\n\t{\n\t\tp <<= 1;\n\t}\n\treturn p >> 1;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{ \n    long p = (long)log2(n); \n    return (long)pow(2, p);  \n} \nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmpofhm35f8.d(10): Error: C style cast illegal, use `cast(long)log2(n)`\n/tmp/tmpofhm35f8.d(11): Error: C style cast illegal, use `cast(long)pow(2, p)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpofhm35f8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p <= n) \n\t{\n\t\tp *= 2;\n\t}\n\treturn p / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\treturn pow(2, floor(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmp1nftb6su.d(10): Error: cannot implicitly convert expression `pow(2, floor(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1nftb6su.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong result = 1;\n\twhile (result <= n) \n\t{\n\t\tresult *= 2;\n\t}\n\treturn result / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{ \n    long p = (long)log2(n); \n    return (long)pow(2, p);  \n} \nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmpofhm35f8.d(10): Error: C style cast illegal, use `cast(long)log2(n)`\n/tmp/tmpofhm35f8.d(11): Error: C style cast illegal, use `cast(long)pow(2, p)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpofhm35f8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p <= n) \n\t{\n\t\tp *= 2;\n\t}\n\treturn p / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong res = 1;\n\twhile (res <= n) \n\t\tres <<= 1;\n\treturn res >> 1;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p <= n)\n\t{\n\t\tp *= 2;\n\t}\n\treturn p / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\treturn pow(2, floor(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmp1nftb6su.d(10): Error: cannot implicitly convert expression `pow(2, floor(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1nftb6su.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p <= n) \n\t{\n\t\tp *= 2;\n\t}\n\treturn p / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{ \n    long p = (long)log2(n); \n    return (long)pow(2, p);  \n} \nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmpofhm35f8.d(10): Error: C style cast illegal, use `cast(long)log2(n)`\n/tmp/tmpofhm35f8.d(11): Error: C style cast illegal, use `cast(long)pow(2, p)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpofhm35f8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong i = 1;\n\twhile (i < n) \n\t{\n\t\ti *= 2;\n\t}\n\treturn i / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123438,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp91v3fube.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d35]\n??:? void tmp91v3fube.__unittest_L17_C1() [0x427aa2]\n??:? void tmp91v3fube.__modtest() [0x427ab8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba5b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8ee]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa81]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff30]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa0d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8c5]\n??:? runModuleUnitTests [0x42b831]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428184]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong res = 1;\n\twhile (res <= n) \n\t{\n\t\tres *= 2;\n\t}\n\treturn res / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p <= n) \n\t{\n\t\tp *= 2;\n\t}\n\treturn p / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{ \n    long p = (long)log2(n); \n    return (long)pow(2, p);  \n} \nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmpofhm35f8.d(10): Error: C style cast illegal, use `cast(long)log2(n)`\n/tmp/tmpofhm35f8.d(11): Error: C style cast illegal, use `cast(long)pow(2, p)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpofhm35f8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{ \n    long p = (long)log2(n); \n    return (long)pow(2, p);  \n} \nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmpofhm35f8.d(10): Error: C style cast illegal, use `cast(long)log2(n)`\n/tmp/tmpofhm35f8.d(11): Error: C style cast illegal, use `cast(long)pow(2, p)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpofhm35f8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{ \n    long p = (long)log2(n); \n    return (long)pow(2, p);  \n} \nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmpofhm35f8.d(10): Error: C style cast illegal, use `cast(long)log2(n)`\n/tmp/tmpofhm35f8.d(11): Error: C style cast illegal, use `cast(long)pow(2, p)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpofhm35f8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong res = 1;\n\twhile (res <= n) \n\t{\n\t\tres *= 2;\n\t}\n\treturn res / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{ \n    long p = (long)log2(n); \n    return (long)pow(2, p);  \n} \nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmpofhm35f8.d(10): Error: C style cast illegal, use `cast(long)log2(n)`\n/tmp/tmpofhm35f8.d(11): Error: C style cast illegal, use `cast(long)pow(2, p)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpofhm35f8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p <= n) \n\t{\n\t\tp *= 2;\n\t}\n\treturn p / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{ \n\t// Initialize the result \n\tlong res = 1; \n\t\n\t// Keep multiplying x with 2 while \n\t// it is smaller than or equal to n. \n\twhile (res <= n) \n\t\tres = res << 1; \n\t\n\treturn res >> 1; \n} \nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong res = 1;\n\twhile (res <= n) \n\t{\n\t\tres *= 2;\n\t}\n\treturn res / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{ \n    long p = (long)log2(n); \n    return (long)pow(2, p);  \n} \nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmpofhm35f8.d(10): Error: C style cast illegal, use `cast(long)log2(n)`\n/tmp/tmpofhm35f8.d(11): Error: C style cast illegal, use `cast(long)pow(2, p)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpofhm35f8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong res = 1;\n\twhile (res <= n) \n\t{\n\t\tres <<= 1;\n\t}\n\treturn res >> 1;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p <= n) \n\t{\n\t\tp *= 2;\n\t}\n\treturn p / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{ \n    long p = (long)log2(n); \n    return (long)pow(2, p);  \n} \nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmpofhm35f8.d(10): Error: C style cast illegal, use `cast(long)log2(n)`\n/tmp/tmpofhm35f8.d(11): Error: C style cast illegal, use `cast(long)pow(2, p)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpofhm35f8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\treturn pow(2, floor(log(n)/log(2)));\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123438,
      "stdout": "",
      "stderr": "/tmp/tmpnk5yc5ud.d(10): Error: cannot implicitly convert expression `pow(2, floor(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnk5yc5ud.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p <= n) \n\t{\n\t\tp *= 2;\n\t}\n\treturn p / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong i = 1;\n\twhile (i < n) \n\t{\n\t\ti *= 2;\n\t}\n\treturn i / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123438,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp91v3fube.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d35]\n??:? void tmp91v3fube.__unittest_L17_C1() [0x427aa2]\n??:? void tmp91v3fube.__modtest() [0x427ab8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba5b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8ee]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa81]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff30]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa0d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8c5]\n??:? runModuleUnitTests [0x42b831]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428184]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\treturn pow(2, floor(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmp1nftb6su.d(10): Error: cannot implicitly convert expression `pow(2, floor(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1nftb6su.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{ \n    long p = (long)log2(n); \n    return (long)pow(2, p);  \n} \nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmpofhm35f8.d(10): Error: C style cast illegal, use `cast(long)log2(n)`\n/tmp/tmpofhm35f8.d(11): Error: C style cast illegal, use `cast(long)pow(2, p)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpofhm35f8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p <= n) \n\t{\n\t\tp *= 2;\n\t}\n\treturn p / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p <= n) \n\t{\n\t\tp *= 2;\n\t}\n\treturn p / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\treturn pow(2, floor(log(n)/log(2)));\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123438,
      "stdout": "",
      "stderr": "/tmp/tmpnk5yc5ud.d(10): Error: cannot implicitly convert expression `pow(2, floor(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnk5yc5ud.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p <= n) \n\t{\n\t\tp *= 2;\n\t}\n\treturn p / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{ \n    long p = (long)log2(n); \n    return (long)pow(2, p);  \n} \nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmpofhm35f8.d(10): Error: C style cast illegal, use `cast(long)log2(n)`\n/tmp/tmpofhm35f8.d(11): Error: C style cast illegal, use `cast(long)pow(2, p)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpofhm35f8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{ \n    long p = (long)log2(n); \n    return (long)pow(2, p);  \n} \nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmpofhm35f8.d(10): Error: C style cast illegal, use `cast(long)log2(n)`\n/tmp/tmpofhm35f8.d(11): Error: C style cast illegal, use `cast(long)pow(2, p)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpofhm35f8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p <= n) \n\t{\n\t\tp *= 2;\n\t}\n\treturn p / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p <= n) {\n\t\tp *= 2;\n\t}\n\treturn p / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{ \n    long p = (long)log2(n); \n    return (long)pow(2, p);  \n} \nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmpofhm35f8.d(10): Error: C style cast illegal, use `cast(long)log2(n)`\n/tmp/tmpofhm35f8.d(11): Error: C style cast illegal, use `cast(long)pow(2, p)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpofhm35f8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong res = 1;\n\twhile (res <= n) \n\t{\n\t\tres *= 2;\n\t}\n\treturn res / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong result = 1;\n\twhile (result <= n)\n\t{\n\t\tresult *= 2;\n\t}\n\treturn result / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong res = 1;\n\twhile (res <= n) \n\t{\n\t\tres = res << 1;\n\t}\n\treturn res >> 1;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p <= n) \n\t\tp *= 2;\n\treturn p / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p <= n) \n\t{\n\t\tp *= 2;\n\t}\n\treturn p / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{ \n    long p = (long)log2(n); \n    return (long)pow(2, p);  \n} \nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmpofhm35f8.d(10): Error: C style cast illegal, use `cast(long)log2(n)`\n/tmp/tmpofhm35f8.d(11): Error: C style cast illegal, use `cast(long)pow(2, p)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpofhm35f8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p <= n) \n\t{\n\t\tp *= 2;\n\t}\n\treturn p / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\treturn pow(2, floor(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmp1nftb6su.d(10): Error: cannot implicitly convert expression `pow(2, floor(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1nftb6su.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\treturn pow(2, floor(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmp1nftb6su.d(10): Error: cannot implicitly convert expression `pow(2, floor(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1nftb6su.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong res = 1;\n\twhile (res <= n) \n\t{\n\t\tres <<= 1;\n\t}\n\treturn res >> 1;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\treturn pow(2, floor(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmp1nftb6su.d(10): Error: cannot implicitly convert expression `pow(2, floor(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1nftb6su.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\treturn pow(2, floor(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmp1nftb6su.d(10): Error: cannot implicitly convert expression `pow(2, floor(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1nftb6su.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p <= n) \n\t{\n\t\tp *= 2;\n\t}\n\treturn p / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{ \n    long p = (long)log2(n); \n    return (long)pow(2, p);  \n} \nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmpofhm35f8.d(10): Error: C style cast illegal, use `cast(long)log2(n)`\n/tmp/tmpofhm35f8.d(11): Error: C style cast illegal, use `cast(long)pow(2, p)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpofhm35f8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{ \n    long p = (long)log2(n); \n    return (long)pow(2, p);  \n} \nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmpofhm35f8.d(10): Error: C style cast illegal, use `cast(long)log2(n)`\n/tmp/tmpofhm35f8.d(11): Error: C style cast illegal, use `cast(long)pow(2, p)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpofhm35f8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p <= n) \n\t{\n\t\tp *= 2;\n\t}\n\treturn p / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong res = 1;\n\twhile (res <= n) \n\t{\n\t\tres *= 2;\n\t}\n\treturn res / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\treturn pow(2, floor(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmp1nftb6su.d(10): Error: cannot implicitly convert expression `pow(2, floor(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1nftb6su.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong res = 1;\n\twhile (res <= n) \n\t{\n\t\tres *= 2;\n\t}\n\treturn res / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{ \n    long p = (long)log2(n); \n    return (long)pow(2, p);  \n} \nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmpofhm35f8.d(10): Error: C style cast illegal, use `cast(long)log2(n)`\n/tmp/tmpofhm35f8.d(11): Error: C style cast illegal, use `cast(long)pow(2, p)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpofhm35f8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong res = 1;\n\twhile (res <= n) \n\t\tres <<= 1;\n\treturn res >> 1;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong res = 1;\n\twhile (res <= n) \n\t{\n\t\tres *= 2;\n\t}\n\treturn res / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tif(n < 1)\n\t\treturn 0;\n\t\n\tlong result = 1;\n\t\n\twhile(result <= n)\n\t\tresult <<= 1;\n\t\n\treturn result >> 1;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{ \n\tlong p = (long)log2(n); \n\treturn (long)pow(2, p); \n} \nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123438,
      "stdout": "",
      "stderr": "/tmp/tmpkwa9w4mn.d(10): Error: C style cast illegal, use `cast(long)log2(n)`\n/tmp/tmpkwa9w4mn.d(11): Error: C style cast illegal, use `cast(long)pow(2, p)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkwa9w4mn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p <= n) \n\t{\n\t\tp *= 2;\n\t}\n\treturn p / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong res = 1;\n\twhile (res <= n) \n\t{\n\t\tres *= 2;\n\t}\n\treturn res / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{ \n    long p = (long)log2(n); \n    return (long)pow(2, p);  \n} \nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmpofhm35f8.d(10): Error: C style cast illegal, use `cast(long)log2(n)`\n/tmp/tmpofhm35f8.d(11): Error: C style cast illegal, use `cast(long)pow(2, p)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpofhm35f8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong res = 1;\n\twhile (res <= n) \n\t{\n\t\tres *= 2;\n\t}\n\treturn res / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p <= n) \n\t{\n\t\tp *= 2;\n\t}\n\treturn p / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p <= n) \n\t{\n\t\tp *= 2;\n\t}\n\treturn p / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\treturn pow(2, floor(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmp1nftb6su.d(10): Error: cannot implicitly convert expression `pow(2, floor(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1nftb6su.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p <= n) {\n\t\tp *= 2;\n\t}\n\treturn p / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p <= n) \n\t{\n\t\tp *= 2;\n\t}\n\treturn p / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong res = 1;\n\twhile (res <= n) \n\t\tres <<= 1;\n\treturn res >> 1;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\treturn pow(2, floor(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmp1nftb6su.d(10): Error: cannot implicitly convert expression `pow(2, floor(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1nftb6su.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p <= n) \n\t{\n\t\tp *= 2;\n\t}\n\treturn p / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{ \n    long p = (long)log2(n); \n    return (long)pow(2, p);  \n} \nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmpofhm35f8.d(10): Error: C style cast illegal, use `cast(long)log2(n)`\n/tmp/tmpofhm35f8.d(11): Error: C style cast illegal, use `cast(long)pow(2, p)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpofhm35f8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p <= n) {\n\t\tp *= 2;\n\t}\n\treturn p / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p <= n) \n\t{\n\t\tp *= 2;\n\t}\n\treturn p / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong res = 1;\n\twhile (res < n) \n\t{\n\t\tres *= 2;\n\t}\n\treturn res / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmphoa1ro_r.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d35]\n??:? void tmphoa1ro_r.__unittest_L17_C1() [0x427aa2]\n??:? void tmphoa1ro_r.__modtest() [0x427ab8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba5b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a8ee]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa81]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff30]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa0d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8c5]\n??:? runModuleUnitTests [0x42b831]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428184]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong res = 1;\n\twhile (res <= n) \n\t{\n\t\tres <<= 1;\n\t}\n\treturn res >> 1;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong res = 1;\n\twhile (res <= n)\n\t\tres <<= 1;\n\treturn res >> 1;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{ \n    long p = (long)log2(n); \n    return (long)pow(2, p);  \n} \nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmpofhm35f8.d(10): Error: C style cast illegal, use `cast(long)log2(n)`\n/tmp/tmpofhm35f8.d(11): Error: C style cast illegal, use `cast(long)pow(2, p)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpofhm35f8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong result = 0;\n\twhile (n > 1) \n\t{\n\t\tn >>= 1;\n\t\tresult++;\n\t}\n\treturn 1 << result;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong res = 1;\n\twhile (res <= n) \n\t{\n\t\tres *= 2;\n\t}\n\treturn res / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong res = 1;\n\twhile (res <= n) \n\t{\n\t\tres *= 2;\n\t}\n\treturn res / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\treturn pow(2, floor(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmp1nftb6su.d(10): Error: cannot implicitly convert expression `pow(2, floor(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1nftb6su.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{ \n    long p = (long)log2(n); \n    return (long)pow(2, p);  \n} \nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmpofhm35f8.d(10): Error: C style cast illegal, use `cast(long)log2(n)`\n/tmp/tmpofhm35f8.d(11): Error: C style cast illegal, use `cast(long)pow(2, p)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpofhm35f8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{ \n\tlong p = (long)log2(n); \n\treturn (long)pow(2, p); \n} \nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123438,
      "stdout": "",
      "stderr": "/tmp/tmpkwa9w4mn.d(10): Error: C style cast illegal, use `cast(long)log2(n)`\n/tmp/tmpkwa9w4mn.d(11): Error: C style cast illegal, use `cast(long)pow(2, p)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkwa9w4mn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p <= n)\n\t{\n\t\tp *= 2;\n\t}\n\treturn p / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\treturn (long)pow(2, floor(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123438,
      "stdout": "",
      "stderr": "/tmp/tmpr6w1968q.d(10): Error: C style cast illegal, use `cast(long)pow(2, floor(log(n) / log(2)))`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr6w1968q.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{ \n    long p = (long)log2(n); \n    return (long)pow(2, p);  \n} \nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmpofhm35f8.d(10): Error: C style cast illegal, use `cast(long)log2(n)`\n/tmp/tmpofhm35f8.d(11): Error: C style cast illegal, use `cast(long)pow(2, p)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpofhm35f8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p <= n) \n\t{\n\t\tp *= 2;\n\t}\n\treturn p / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p <= n)\n\t\tp *= 2;\n\treturn p / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{ \n\tlong p = (long)log2(n); \n\treturn (long)pow(2, p); \n} \nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123438,
      "stdout": "",
      "stderr": "/tmp/tmpkwa9w4mn.d(10): Error: C style cast illegal, use `cast(long)log2(n)`\n/tmp/tmpkwa9w4mn.d(11): Error: C style cast illegal, use `cast(long)pow(2, p)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkwa9w4mn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong p = 1;\n\twhile (p <= n) \n\t{\n\t\tp *= 2;\n\t}\n\treturn p / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong res = 1;\n\twhile (res <= n) \n\t{\n\t\tres *= 2;\n\t}\n\treturn res / 2;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\treturn pow(2, floor(log2(n)));\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123438,
      "stdout": "",
      "stderr": "/tmp/tmp0_psmcpz.d(10): Error: cannot implicitly convert expression `pow(2, floor(log2(cast(real)n)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0_psmcpz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{ \n    long p = (long)log2(n); \n    return (long)pow(2, p);  \n} \nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmpofhm35f8.d(10): Error: C style cast illegal, use `cast(long)log2(n)`\n/tmp/tmpofhm35f8.d(11): Error: C style cast illegal, use `cast(long)pow(2, p)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpofhm35f8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\treturn pow(2, floor(log(n) / log(2)));\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmp1nftb6su.d(10): Error: cannot implicitly convert expression `pow(2, floor(log(cast(real)n) / log(2.00000L)))` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1nftb6su.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong res = 1;\n\twhile (res <= n) \n\t\tres <<= 1;\n\treturn res >> 1;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{ \n    long p = (long)log2(n); \n    return (long)pow(2, p);  \n} \nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmpofhm35f8.d(10): Error: C style cast illegal, use `cast(long)log2(n)`\n/tmp/tmpofhm35f8.d(11): Error: C style cast illegal, use `cast(long)pow(2, p)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpofhm35f8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{ \n    long p = (long)log2(n); \n    return (long)pow(2, p);  \n} \nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1665517529,
      "stdout": "",
      "stderr": "/tmp/tmpofhm35f8.d(10): Error: C style cast illegal, use `cast(long)log2(n)`\n/tmp/tmpofhm35f8.d(11): Error: C style cast illegal, use `cast(long)pow(2, p)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpofhm35f8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the highest power of 2 that is less than or equal to n.\n\t\n*/\nlong highest_Power_of_2(long n) \n{\n\tlong res = 1;\n\twhile (res <= n) \n\t{\n\t\tres <<= 1;\n\t}\n\treturn res >> 1;\n}\nunittest\n{\n    alias candidate = highest_Power_of_2;\n\n    assert(candidate(10L) == 8L);\n    assert(candidate(19L) == 16L);\n    assert(candidate(32L) == 32L);\n}\nvoid main(){}",
      "timestamp": 1666123438,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_459_remove_uppercase",
  "language": "d",
  "prompt": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_459_remove_uppercase.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(char c; str1)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(!isupper(c))\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmp9jh7pebp.d(12): Error: undefined identifier `isupper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9jh7pebp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpzlr8ax_p.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzlr8ax_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpzlr8ax_p.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzlr8ax_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpzlr8ax_p.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzlr8ax_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpzlr8ax_p.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzlr8ax_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpzlr8ax_p.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzlr8ax_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile (i < str1.length) \n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z') \n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmprqpu7bdf.d(15): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprqpu7bdf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpzlr8ax_p.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzlr8ax_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2;\n\tforeach(c; str1)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++) {\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z') {\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpv2fa2jf7.d(12): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv2fa2jf7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpzlr8ax_p.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzlr8ax_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t\tstr2 += str1[i];\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpu2tj9d9e.d(13): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu2tj9d9e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpzlr8ax_p.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzlr8ax_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpzlr8ax_p.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzlr8ax_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring result = \"\";\n\tforeach(c; str1) \n\t{\n\t\tif(!isupper(c)) \n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123010,
      "stdout": "",
      "stderr": "/tmp/tmpgucv6c3z.d(12): Error: undefined identifier `isupper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgucv6c3z.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2;\n\tfor(int i = 0; i < str1.length; i++)\n\t{\n\t\tif(str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123010,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2;\n\tforeach(c; str1)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpzlr8ax_p.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzlr8ax_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2;\n\tforeach(c; str1)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123009,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpzlr8ax_p.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzlr8ax_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++) {\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z') {\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpv2fa2jf7.d(12): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv2fa2jf7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpzlr8ax_p.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzlr8ax_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpzlr8ax_p.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzlr8ax_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2;\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123009,
      "stdout": "",
      "stderr": "/tmp/tmpn_xs2n2s.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn_xs2n2s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor(int i = 0; i < str1.length; i++)\n\t{\n\t\tif(str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123009,
      "stdout": "",
      "stderr": "/tmp/tmp7u1dq612.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7u1dq612.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c >= 'A' && c <= 'Z')\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123011,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2;\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123009,
      "stdout": "",
      "stderr": "/tmp/tmpn_xs2n2s.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn_xs2n2s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2;\n\tfor (int i = 0; i < str1.length; i++) \n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z') \n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123009,
      "stdout": "",
      "stderr": "/tmp/tmpa15qcbkh.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa15qcbkh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2;\n\tforeach(c; str1)\n\t{\n\t\tif(c.isLower)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123010,
      "stdout": "",
      "stderr": "/tmp/tmp68fw9fdr.d(12): Error: no property `isLower` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp68fw9fdr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2;\n\tforeach(c; str1)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123009,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2;\n\tforeach(c; str1)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123009,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpzlr8ax_p.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzlr8ax_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpzlr8ax_p.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzlr8ax_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpzlr8ax_p.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzlr8ax_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++) \n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z') \n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpiv_rb943.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiv_rb943.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++) \n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z') \n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpiv_rb943.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiv_rb943.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2;\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123009,
      "stdout": "",
      "stderr": "/tmp/tmpn_xs2n2s.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn_xs2n2s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpzlr8ax_p.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzlr8ax_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring result = \"\";\n\tforeach(char c; str1)\n\t{\n\t\tif(!isupper(c))\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123010,
      "stdout": "",
      "stderr": "/tmp/tmpdsfmkce9.d(12): Error: undefined identifier `isupper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdsfmkce9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++) \n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z') \n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpiv_rb943.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiv_rb943.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(!isupper(c))\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmp9jh7pebp.d(12): Error: undefined identifier `isupper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9jh7pebp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++) \n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z') \n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpiv_rb943.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiv_rb943.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2;\n\tfor (int i = 0; i < str1.length; i++) \n\t{\n\t\tif (str1[i] < 'A' || str1[i] > 'Z') \n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123011,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2;\n\tforeach(c; str1)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123009,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpzlr8ax_p.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzlr8ax_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++) \n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z') \n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpiv_rb943.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiv_rb943.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tint i;\n\tstring str2;\n\tfor(i=0;i<str1.length;i++)\n\t{\n\t\tif(str1[i]>='a' && str1[i]<='z')\n\t\t{\n\t\t\tstr2+=str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123010,
      "stdout": "",
      "stderr": "/tmp/tmpss2dpmm0.d(15): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpss2dpmm0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring result;\n\tforeach(c; str1)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123011,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring result = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(!isUpper(c))\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123009,
      "stdout": "",
      "stderr": "/tmp/tmptyc5v29a.d(12): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptyc5v29a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t\tstr2 += str1[i];\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpu2tj9d9e.d(13): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu2tj9d9e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++) \n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z') \n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpiv_rb943.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiv_rb943.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++) \n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z') \n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpiv_rb943.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiv_rb943.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile(i < str1.length)\n\t{\n\t\tif(str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123010,
      "stdout": "",
      "stderr": "/tmp/tmp4rnt_ulf.d(15): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4rnt_ulf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++) \n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z') \n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpiv_rb943.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiv_rb943.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring result = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123009,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpzlr8ax_p.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzlr8ax_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1) \n\t{\n\t\tif(c >= 'a' && c <= 'z') \n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123009,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t\tstr2 += str1[i];\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpu2tj9d9e.d(13): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu2tj9d9e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t\tstr2 += str1[i];\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpu2tj9d9e.d(13): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu2tj9d9e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring result = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(!isupper(c))\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123009,
      "stdout": "",
      "stderr": "/tmp/tmp11leixt5.d(12): Error: undefined identifier `isupper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp11leixt5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2;\n\tforeach(c; str1)\n\t{\n\t\tif(!isUpper(c))\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123010,
      "stdout": "",
      "stderr": "/tmp/tmpjmpoupbc.d(12): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjmpoupbc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c >= 'A' && c <= 'Z')\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123011,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpzlr8ax_p.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzlr8ax_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t\tstr2 += str1[i];\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpu2tj9d9e.d(13): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu2tj9d9e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++) {\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z') {\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpv2fa2jf7.d(12): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv2fa2jf7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1) \n\t{\n\t\tif(c >= 'a' && c <= 'z') \n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123009,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++) \n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z') \n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpiv_rb943.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiv_rb943.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpzlr8ax_p.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzlr8ax_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\treturn str1.toLowerCase();\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123010,
      "stdout": "",
      "stderr": "/tmp/tmp37ncl7fu.d(9): Error: no property `toLowerCase` for type `string`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp37ncl7fu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++) \n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z') \n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123009,
      "stdout": "",
      "stderr": "/tmp/tmpb40thj43.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb40thj43.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2;\n\t\n\tforeach(c; str1)\n\t{\n\t\tif(!isupper(c))\n\t\t\tstr2 ~= c;\n\t}\n\t\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123010,
      "stdout": "",
      "stderr": "/tmp/tmpn65xmkid.d(13): Error: undefined identifier `isupper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn65xmkid.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++) \n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z') \n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpiv_rb943.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiv_rb943.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpzlr8ax_p.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzlr8ax_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(!isUpper(c))\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123009,
      "stdout": "",
      "stderr": "/tmp/tmp8dqbou16.d(12): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8dqbou16.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++) \n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z') \n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpiv_rb943.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiv_rb943.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2;\n\tfor(int i = 0; i < str1.length; i++)\n\t{\n\t\tif(str1[i] >= 'a' && str1[i] <= 'z')\n\t\t\tstr2 ~= str1[i];\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123011,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1) \n\t{\n\t\tif(c >= 'a' && c <= 'z') \n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123009,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpzlr8ax_p.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzlr8ax_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t\tstr2 += str1[i];\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpu2tj9d9e.d(13): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu2tj9d9e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2;\n\tforeach(c; str1)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123009,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpzlr8ax_p.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzlr8ax_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpzlr8ax_p.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzlr8ax_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++) \n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z') \n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpiv_rb943.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiv_rb943.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++) \n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z') \n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpiv_rb943.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiv_rb943.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpzlr8ax_p.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzlr8ax_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpzlr8ax_p.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzlr8ax_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2;\n\t\n\tforeach(c; str1)\n\t{\n\t\tif(c.isUpper)\n\t\t{\n\t\t\tstr2 ~= c.toLower;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\t\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123010,
      "stdout": "",
      "stderr": "/tmp/tmpfxb1_9zz.d(13): Error: no property `isUpper` for type `immutable(char)`\n/tmp/tmpfxb1_9zz.d(15): Error: no property `toLower` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfxb1_9zz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring result = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c.isUpper)\n\t\t\tcontinue;\n\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123010,
      "stdout": "",
      "stderr": "/tmp/tmptexbv6wy.d(12): Error: no property `isUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptexbv6wy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpzlr8ax_p.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzlr8ax_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpzlr8ax_p.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzlr8ax_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2;\n\tforeach(c; str1)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2;\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123009,
      "stdout": "",
      "stderr": "/tmp/tmpn_xs2n2s.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn_xs2n2s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2;\n\tforeach(c; str1)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c.isUpper)\n\t\t\tcontinue;\n\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123010,
      "stdout": "",
      "stderr": "/tmp/tmp57bvkjc9.d(12): Error: no property `isUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp57bvkjc9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++) {\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z') {\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpv2fa2jf7.d(12): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv2fa2jf7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring result = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(!isUpper(c))\n\t\t{\n\t\t\tresult ~= c;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123010,
      "stdout": "",
      "stderr": "/tmp/tmpb2jbpyme.d(12): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb2jbpyme.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2;\n\tfor(int i = 0; i < str1.length; i++)\n\t{\n\t\tif(str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 ~= str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123010,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring result = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(!isUpper(c))\n\t\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123009,
      "stdout": "",
      "stderr": "/tmp/tmptyc5v29a.d(12): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptyc5v29a.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123010,
      "stdout": "",
      "stderr": "/tmp/tmpbcx7jq65.d(18): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbcx7jq65.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpzlr8ax_p.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzlr8ax_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++) \n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z') \n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpiv_rb943.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiv_rb943.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++) \n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z') \n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpiv_rb943.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiv_rb943.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpzlr8ax_p.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzlr8ax_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(!isupper(c))\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123010,
      "stdout": "",
      "stderr": "/tmp/tmpqxpr6fxk.d(12): Error: undefined identifier `isupper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqxpr6fxk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2;\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123009,
      "stdout": "",
      "stderr": "/tmp/tmpn_xs2n2s.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn_xs2n2s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2;\n\tint i;\n\tfor (i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123009,
      "stdout": "",
      "stderr": "/tmp/tmpb1srm423.d(15): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb1srm423.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpzlr8ax_p.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzlr8ax_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor(int i = 0; i < str1.length; i++)\n\t{\n\t\tif(str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123009,
      "stdout": "",
      "stderr": "/tmp/tmp7u1dq612.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7u1dq612.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++) \n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z') \n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpiv_rb943.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiv_rb943.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++) \n\t{\n\t\tif (isupper(str1[i])) \n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123010,
      "stdout": "",
      "stderr": "/tmp/tmp474orrv5.d(12): Error: undefined identifier `isupper`\n/tmp/tmp474orrv5.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp474orrv5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpzlr8ax_p.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzlr8ax_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpzlr8ax_p.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzlr8ax_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpzlr8ax_p.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzlr8ax_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2;\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123009,
      "stdout": "",
      "stderr": "/tmp/tmpn_xs2n2s.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn_xs2n2s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++) {\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z') {\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpv2fa2jf7.d(12): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv2fa2jf7.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpzlr8ax_p.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzlr8ax_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring result = \"\";\n\tint i = 0;\n\twhile(i < str1.length)\n\t{\n\t\tif(str1[i] >= 'A' && str1[i] <= 'Z')\n\t\t{\n\t\t\tresult += str1[i];\n\t\t}\n\t\ti++;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123010,
      "stdout": "",
      "stderr": "/tmp/tmpcmm5kc39.d(15): Error: slice `result` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcmm5kc39.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(!isupper(c))\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123010,
      "stdout": "",
      "stderr": "/tmp/tmpqxpr6fxk.d(12): Error: undefined identifier `isupper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqxpr6fxk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2;\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123009,
      "stdout": "",
      "stderr": "/tmp/tmpn_xs2n2s.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn_xs2n2s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpzlr8ax_p.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzlr8ax_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpzlr8ax_p.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzlr8ax_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2;\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123009,
      "stdout": "",
      "stderr": "/tmp/tmpn_xs2n2s.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn_xs2n2s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1) \n\t{\n\t\tif(c >= 'a' && c <= 'z') \n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123009,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2;\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123009,
      "stdout": "",
      "stderr": "/tmp/tmpn_xs2n2s.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn_xs2n2s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t\tstr2 += str1[i];\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpu2tj9d9e.d(13): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu2tj9d9e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c.isLower)\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123009,
      "stdout": "",
      "stderr": "/tmp/tmp0919ttc5.d(12): Error: no property `isLower` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0919ttc5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpzlr8ax_p.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzlr8ax_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile (i < str1.length) \n\t{\n\t\tif (str1[i] < 'A' || str1[i] > 'Z') \n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123010,
      "stdout": "",
      "stderr": "/tmp/tmpguntct_r.d(15): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpguntct_r.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2;\n\tforeach(char c; str1)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123011,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpzlr8ax_p.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzlr8ax_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2;\n\tforeach(c; str1)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2;\n\tfor (int i = 0; i < str1.length; i++) \n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z') \n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123009,
      "stdout": "",
      "stderr": "/tmp/tmpa15qcbkh.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa15qcbkh.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2;\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123009,
      "stdout": "",
      "stderr": "/tmp/tmpn_xs2n2s.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn_xs2n2s.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tint i = 0;\n\twhile (i < str1.length) \n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z') \n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmprqpu7bdf.d(15): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmprqpu7bdf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpzlr8ax_p.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzlr8ax_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpzlr8ax_p.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzlr8ax_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(!isupper(c))\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmp9jh7pebp.d(12): Error: undefined identifier `isupper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9jh7pebp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpzlr8ax_p.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzlr8ax_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t\tstr2 += str1[i];\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpu2tj9d9e.d(13): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu2tj9d9e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(!isUpper(c))\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123009,
      "stdout": "",
      "stderr": "/tmp/tmp8dqbou16.d(12): Error: undefined identifier `isUpper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8dqbou16.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++) \n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z') \n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpiv_rb943.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiv_rb943.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2;\n\tint i;\n\tfor(i=0;i<str1.length;i++)\n\t{\n\t\tif(str1[i]>='a' && str1[i]<='z')\n\t\t{\n\t\t\tstr2+=str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123009,
      "stdout": "",
      "stderr": "/tmp/tmpwkhz_m3g.d(15): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwkhz_m3g.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpzlr8ax_p.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzlr8ax_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpzlr8ax_p.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzlr8ax_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2;\n\tforeach(c; str1)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++) \n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z') \n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpiv_rb943.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiv_rb943.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpzlr8ax_p.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzlr8ax_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++) \n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z') \n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpiv_rb943.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiv_rb943.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++) \n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z') \n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpiv_rb943.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiv_rb943.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpzlr8ax_p.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzlr8ax_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpzlr8ax_p.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzlr8ax_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2;\n\tforeach(c; str1)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor(int i = 0; i < str1.length; i++)\n\t{\n\t\tif(str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123009,
      "stdout": "",
      "stderr": "/tmp/tmp7u1dq612.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7u1dq612.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2;\n\tforeach(c; str1)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2;\n\tint i = 0;\n\twhile (i < str1.length) \n\t{\n\t\tif (str1[i] >= 'A' && str1[i] <= 'Z') \n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t\ti++;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123011,
      "stdout": "",
      "stderr": "/tmp/tmpe56nrz4y.d(15): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpe56nrz4y.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpzlr8ax_p.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzlr8ax_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++) \n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z') \n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpiv_rb943.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiv_rb943.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpzlr8ax_p.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzlr8ax_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2;\n\tforeach(c; str1)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2;\n\tforeach(c; str1)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123009,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++) \n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z') \n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpiv_rb943.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiv_rb943.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpzlr8ax_p.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzlr8ax_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2;\n\tint i;\n\tfor (i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123009,
      "stdout": "",
      "stderr": "/tmp/tmpb1srm423.d(15): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb1srm423.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring result;\n\tforeach(c; str1)\n\t{\n\t\tif(c.isUpper)\n\t\t\tcontinue;\n\t\tresult ~= c;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123011,
      "stdout": "",
      "stderr": "/tmp/tmppsjzetku.d(12): Error: no property `isUpper` for type `immutable(char)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppsjzetku.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpzlr8ax_p.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzlr8ax_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(!isupper(c))\n\t\t\tstr2 ~= c;\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmp9jh7pebp.d(12): Error: undefined identifier `isupper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9jh7pebp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2;\n\tforeach(c; str1)\n\t{\n\t\tif(c >= 'a' && c <= 'z')\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123009,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpzlr8ax_p.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzlr8ax_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpzlr8ax_p.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzlr8ax_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor(int i = 0; i < str1.length; i++)\n\t{\n\t\tif(str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123009,
      "stdout": "",
      "stderr": "/tmp/tmp7u1dq612.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7u1dq612.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tforeach(c; str1)\n\t{\n\t\tif(!isupper(c))\n\t\t{\n\t\t\tstr2 ~= c;\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1666123010,
      "stdout": "",
      "stderr": "/tmp/tmpqxpr6fxk.d(12): Error: undefined identifier `isupper`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqxpr6fxk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a function to remove uppercase substrings from a given string.\n\t\n*/\nstring remove_uppercase(string str1) \n{\n\tstring str2 = \"\";\n\tfor (int i = 0; i < str1.length; i++)\n\t{\n\t\tif (str1[i] >= 'a' && str1[i] <= 'z')\n\t\t{\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;\n}\nunittest\n{\n    alias candidate = remove_uppercase;\n\n    assert(candidate(\"cAstyoUrFavoRitETVshoWs\") == \"cstyoravoitshos\");\n    assert(candidate(\"wAtchTheinTernEtrAdIo\") == \"wtchheinerntrdo\");\n    assert(candidate(\"VoicESeaRchAndreComMendaTionS\") == \"oiceachndreomendaion\");\n}\nvoid main(){}",
      "timestamp": 1665517406,
      "stdout": "",
      "stderr": "/tmp/tmpzlr8ax_p.d(14): Error: slice `str2` is not mutable\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzlr8ax_p.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
{
  "name": "mbpp_558_digit_distance_nums",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_558_digit_distance_nums.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 || n2 > 0)\n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tlong n1_digits = n1.digits;\n\tlong n2_digits = n2.digits;\n\tlong n1_len = n1_digits.length;\n\tlong n2_len = n2_digits.length;\n\tlong max_len = max(n1_len, n2_len);\n\t\n\tfor (int i = 0; i < max_len; i++) {\n\t\tlong n1_digit = 0;\n\t\tlong n2_digit = 0;\n\t\tif (i < n1_len) {\n\t\t\tn1_digit = n1_digits[i];\n\t\t}\n\t\tif (i < n2_len) {\n\t\t\tn2_digit = n2_digits[i];\n\t\t}\n\t\tsum += abs(n1_digit - n2_digit);\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "/tmp/tmp29g37kkc.d(11): Error: no property `digits` for type `long`\n/tmp/tmp29g37kkc.d(12): Error: no property `digits` for type `long`\n/tmp/tmp29g37kkc.d(13): Error: no property `length` for type `long`\n/tmp/tmp29g37kkc.d(14): Error: no property `length` for type `long`\n/tmp/tmp29g37kkc.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp29g37kkc.d(21): Error: only one index allowed to index `long`\n/tmp/tmp29g37kkc.d(24): Error: only one index allowed to index `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp29g37kkc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 || n2 > 0)\n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tforeach(d1; n1.digits)\n\t{\n\t\tforeach(d2; n2.digits)\n\t\t{\n\t\t\tsum += abs(d1 - d2);\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "/tmp/tmp4ewg2l0z.d(11): Error: no property `digits` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4ewg2l0z.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 || n2 > 0) \n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tlong n1_digits = n1.toString().length;\n\tlong n2_digits = n2.toString().length;\n\tlong max_digits = max(n1_digits, n2_digits);\n\t\n\tfor (long i = 0; i < max_digits; i++)\n\t{\n\t\tlong n1_digit = n1_digits > i ? n1.toString()[i] : '0';\n\t\tlong n2_digit = n2_digits > i ? n2.toString()[i] : '0';\n\t\tsum += abs(n1_digit - n2_digit);\n\t}\n\t\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "/tmp/tmplwso1ewp.d(11): Error: no property `toString` for type `long`\n/tmp/tmplwso1ewp.d(12): Error: no property `toString` for type `long`\n/tmp/tmplwso1ewp.d(13): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmplwso1ewp.d(17): Error: no property `toString` for type `long`\n/tmp/tmplwso1ewp.d(18): Error: no property `toString` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplwso1ewp.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 || n2 > 0) \n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong result = 0;\n\twhile (n1 > 0 || n2 > 0) \n\t{\n\t\tresult += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 && n2 > 0) \n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile(n1 > 0 || n2 > 0) \n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\t\n\twhile (n1 > 0 || n2 > 0)\n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\t\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tlong n1_digits = n1.toString().length;\n\tlong n2_digits = n2.toString().length;\n\t\n\tif (n1_digits > n2_digits)\n\t{\n\t\tlong diff = n1_digits - n2_digits;\n\t\tn2 = n2 * pow(10, diff);\n\t}\n\telse if (n2_digits > n1_digits)\n\t{\n\t\tlong diff = n2_digits - n1_digits;\n\t\tn1 = n1 * pow(10, diff);\n\t}\n\t\n\twhile (n1 > 0)\n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\t\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "/tmp/tmppg5bryps.d(11): Error: no property `toString` for type `long`\n/tmp/tmppg5bryps.d(12): Error: no property `toString` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppg5bryps.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tlong n1_copy = n1;\n\tlong n2_copy = n2;\n\tlong n1_digit = 0;\n\tlong n2_digit = 0;\n\t\n\twhile (n1_copy > 0)\n\t{\n\t\tn1_digit = n1_copy % 10;\n\t\tn2_digit = n2_copy % 10;\n\t\tsum += abs(n1_digit - n2_digit);\n\t\tn1_copy /= 10;\n\t\tn2_copy /= 10;\n\t}\n\t\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tlong n1_digits = n1.digits();\n\tlong n2_digits = n2.digits();\n\tlong n1_len = n1_digits.length;\n\tlong n2_len = n2_digits.length;\n\tlong max_len = max(n1_len, n2_len);\n\tforeach(i; 0..max_len)\n\t{\n\t\tif(i < n1_len && i < n2_len)\n\t\t{\n\t\t\tsum += abs(n1_digits[i] - n2_digits[i]);\n\t\t}\n\t\telse if(i < n1_len)\n\t\t{\n\t\t\tsum += abs(n1_digits[i]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsum += abs(n2_digits[i]);\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "/tmp/tmp8u7oqs81.d(11): Error: no property `digits` for type `long`\n/tmp/tmp8u7oqs81.d(12): Error: no property `digits` for type `long`\n/tmp/tmp8u7oqs81.d(13): Error: no property `length` for type `long`\n/tmp/tmp8u7oqs81.d(14): Error: no property `length` for type `long`\n/tmp/tmp8u7oqs81.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp8u7oqs81.d(20): Error: only one index allowed to index `long`\n/tmp/tmp8u7oqs81.d(20): Error: only one index allowed to index `long`\n/tmp/tmp8u7oqs81.d(24): Error: only one index allowed to index `long`\n/tmp/tmp8u7oqs81.d(28): Error: only one index allowed to index `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8u7oqs81.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tforeach(d1; n1.digits)\n\t\tforeach(d2; n2.digits)\n\t\t\tsum += abs(d1 - d2);\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "/tmp/tmpodubg4kw.d(11): Error: no property `digits` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpodubg4kw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 || n2 > 0)\n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile(n1 > 0 || n2 > 0)\n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tforeach(i; 0 .. max(n1.length, n2.length)) \n\t{\n\t\tsum += abs(n1[i] - n2[i]);\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "/tmp/tmpm98cxcz4.d(11): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpm98cxcz4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tforeach(d1; to!string(n1))\n\t{\n\t\tforeach(d2; to!string(n2))\n\t\t{\n\t\t\tsum += abs(d1 - d2);\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "/tmp/tmppa3i0y9r.d(11): Error: template instance `to!string` template `to` is not defined, did you mean No?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppa3i0y9r.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tlong n1_copy = n1;\n\tlong n2_copy = n2;\n\twhile(n1_copy != 0) \n\t{\n\t\tsum += abs(n1_copy % 10 - n2_copy % 10);\n\t\tn1_copy /= 10;\n\t\tn2_copy /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tauto digits1 = to!string(n1).map!(a => a.to!long).array;\n\tauto digits2 = to!string(n2).map!(a => a.to!long).array;\n\t\n\tlong sum = 0;\n\t\n\tforeach(i, digit1; digits1)\n\t{\n\t\tsum += abs(digit1 - digits2[i]);\n\t}\n\t\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123458,
      "stdout": "",
      "stderr": "/tmp/tmpu9hpwoir.d(10): Error: template instance `to!string` template `to` is not defined, did you mean No?\n/tmp/tmpu9hpwoir.d(11): Error: template instance `to!string` template `to` is not defined, did you mean No?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu9hpwoir.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tforeach(digit1, digit2; zip(n1.digits, n2.digits))\n\t{\n\t\tsum += abs(digit1 - digit2);\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123458,
      "stdout": "",
      "stderr": "/tmp/tmpykb0q82r.d(11): Error: undefined identifier `zip`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpykb0q82r.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tlong n1_digits = n1.digits;\n\tlong n2_digits = n2.digits;\n\tlong n1_length = n1_digits.length;\n\tlong n2_length = n2_digits.length;\n\tlong n1_digit;\n\tlong n2_digit;\n\tlong n1_digit_index;\n\tlong n2_digit_index;\n\tlong n1_digit_index_max = n1_length - 1;\n\tlong n2_digit_index_max = n2_length - 1;\n\tlong n1_digit_index_min = 0;\n\tlong n2_digit_index_min = 0;\n\tlong n1_digit_index_diff;\n\tlong n2_digit_index_diff;\n\tlong n1_digit_index_diff_abs;\n\tlong n2_digit_index_diff_abs;\n\tlong n1_digit_index_diff_abs_max;\n\tlong n2_digit_index_diff_abs_max;\n\tlong n1_digit_index_diff_abs_min;\n\tlong n2_digit_index_diff_abs_min;\n\tlong n1_digit_index_diff_abs_min_max;\n\tlong n2_digit_index_diff_abs_min_max;\n\tlong n1_digit_index_diff_abs_min_max_diff;\n\tlong n2_digit_index_diff_abs_min_max_diff;\n\tlong n1_digit_index_diff_abs_min_max_diff_abs;\n\tlong n2_digit_index_diff_abs_min_max_diff_abs;\n\tlong n1_digit_index_diff_abs_min_max_diff_abs_max;\n\tlong n2_digit_index_diff_abs_min_max_diff_abs_max;\n\tlong n1_digit_index_diff_abs_min_max_diff_abs_max_diff;\n\tlong n2_digit_index_diff_abs_min_max_diff_abs_max_diff;\n\tlong\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123458,
      "stdout": "",
      "stderr": "/tmp/tmpfjrtl3zz.d(42): Error: no identifier for declarator `long`\n/tmp/tmpfjrtl3zz.d(42): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfjrtl3zz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile(n1 > 0 || n2 > 0)\n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong distance = 0;\n\tlong n1_digits = 0;\n\tlong n2_digits = 0;\n\t\n\twhile (n1 != 0)\n\t{\n\t\tn1_digits++;\n\t\tn1 /= 10;\n\t}\n\t\n\twhile (n2 != 0)\n\t{\n\t\tn2_digits++;\n\t\tn2 /= 10;\n\t}\n\t\n\tif (n1_digits > n2_digits)\n\t{\n\t\tdistance = n1_digits - n2_digits;\n\t}\n\telse\n\t{\n\t\tdistance = n2_digits - n1_digits;\n\t}\n\t\n\treturn distance;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp39npjoxq.d(41): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmp39npjoxq.__unittest_L37_C1() [0x427abd]\n??:? void tmp39npjoxq.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tforeach(i; zip(n1.digits, n2.digits))\n\t\tsum += abs(i[0] - i[1]);\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123458,
      "stdout": "",
      "stderr": "/tmp/tmpf8vskaq0.d(11): Error: undefined identifier `zip`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf8vskaq0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tlong n1_digits = n1.digits();\n\tlong n2_digits = n2.digits();\n\tlong n1_len = n1_digits.length;\n\tlong n2_len = n2_digits.length;\n\tlong n1_i = 0;\n\tlong n2_i = 0;\n\twhile (n1_i < n1_len && n2_i < n2_len) {\n\t\tsum += abs(n1_digits[n1_i] - n2_digits[n2_i]);\n\t\tn1_i++;\n\t\tn2_i++;\n\t}\n\twhile (n1_i < n1_len) {\n\t\tsum += n1_digits[n1_i];\n\t\tn1_i++;\n\t}\n\twhile (n2_i < n2_len) {\n\t\tsum += n2_digits[n2_i];\n\t\tn2_i++;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123458,
      "stdout": "",
      "stderr": "/tmp/tmp4de59tyd.d(11): Error: no property `digits` for type `long`\n/tmp/tmp4de59tyd.d(12): Error: no property `digits` for type `long`\n/tmp/tmp4de59tyd.d(13): Error: no property `length` for type `long`\n/tmp/tmp4de59tyd.d(14): Error: no property `length` for type `long`\n/tmp/tmp4de59tyd.d(18): Error: only one index allowed to index `long`\n/tmp/tmp4de59tyd.d(18): Error: only one index allowed to index `long`\n/tmp/tmp4de59tyd.d(23): Error: only one index allowed to index `long`\n/tmp/tmp4de59tyd.d(27): Error: only one index allowed to index `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4de59tyd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 || n2 > 0) \n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 || n2 > 0) \n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile(n1 > 0 || n2 > 0)\n\t{\n\t\tsum += abs(n1%10 - n2%10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tif (n1 < 0 || n2 < 0)\n\t\treturn -1;\n\telse\n\t{\n\t\twhile (n1 > 0 || n2 > 0)\n\t\t{\n\t\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\t\tn1 /= 10;\n\t\t\tn2 /= 10;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 || n2 > 0)\n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tlong n1_copy = n1;\n\tlong n2_copy = n2;\n\twhile(n1_copy > 0)\n\t{\n\t\tsum += abs(n1_copy % 10 - n2_copy % 10);\n\t\tn1_copy /= 10;\n\t\tn2_copy /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 && n2 > 0) \n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tforeach(i; zip(n1.to!string, n2.to!string))\n\t\tsum += abs(i[0] - i[1]);\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123458,
      "stdout": "",
      "stderr": "/tmp/tmpvd52s69_.d(11): Error: undefined identifier `zip`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvd52s69_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\t\n\tauto n1_digits = to!(string)(n1);\n\tauto n2_digits = to!(string)(n2);\n\t\n\tif (n1_digits.length < n2_digits.length)\n\t{\n\t\tauto temp = n1_digits;\n\t\tn1_digits = n2_digits;\n\t\tn2_digits = temp;\n\t}\n\t\n\tfor (size_t i = 0; i < n1_digits.length; i++)\n\t{\n\t\tif (i < n2_digits.length)\n\t\t{\n\t\t\tsum += abs(n1_digits[i] - n2_digits[i]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsum += n1_digits[i];\n\t\t}\n\t}\n\t\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123458,
      "stdout": "",
      "stderr": "/tmp/tmp9lu_ihwx.d(12): Error: template instance `to!string` template `to` is not defined, did you mean No?\n/tmp/tmp9lu_ihwx.d(13): Error: template instance `to!string` template `to` is not defined, did you mean No?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9lu_ihwx.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tlong n1_copy = n1;\n\tlong n2_copy = n2;\n\twhile (n1_copy > 0)\n\t{\n\t\tsum += abs(n1_copy % 10 - n2_copy % 10);\n\t\tn1_copy /= 10;\n\t\tn2_copy /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tlong n1_digits = n1.digits();\n\tlong n2_digits = n2.digits();\n\tlong max_digits = max(n1_digits, n2_digits);\n\t\n\tforeach(i; 0 .. max_digits)\n\t{\n\t\tlong n1_digit = n1.digits(i);\n\t\tlong n2_digit = n2.digits(i);\n\t\t\n\t\tsum += abs(n1_digit - n2_digit);\n\t}\n\t\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123458,
      "stdout": "",
      "stderr": "/tmp/tmpbo0k1ug6.d(11): Error: no property `digits` for type `long`\n/tmp/tmpbo0k1ug6.d(12): Error: no property `digits` for type `long`\n/tmp/tmpbo0k1ug6.d(13): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmpbo0k1ug6.d(17): Error: no property `digits` for type `long`\n/tmp/tmpbo0k1ug6.d(18): Error: no property `digits` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbo0k1ug6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\t\n\twhile(n1 > 0 || n2 > 0)\n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tlong n1_digits = n1.digits;\n\tlong n2_digits = n2.digits;\n\t\n\tif (n1_digits > n2_digits)\n\t{\n\t\tlong diff = n1_digits - n2_digits;\n\t\tn2 = n2 * (10 ^ diff);\n\t}\n\telse if (n2_digits > n1_digits)\n\t{\n\t\tlong diff = n2_digits - n1_digits;\n\t\tn1 = n1 * (10 ^ diff);\n\t}\n\t\n\twhile (n1 > 0)\n\t{\n\t\tlong n1_digit = n1 % 10;\n\t\tlong n2_digit = n2 % 10;\n\t\tsum += abs(n1_digit - n2_digit);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\t\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123458,
      "stdout": "",
      "stderr": "/tmp/tmpu6kqnfe_.d(11): Error: no property `digits` for type `long`\n/tmp/tmpu6kqnfe_.d(12): Error: no property `digits` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu6kqnfe_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tforeach(d1; n1.digits)\n\t{\n\t\tforeach(d2; n2.digits)\n\t\t{\n\t\t\tsum += abs(d1 - d2);\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "/tmp/tmp4ewg2l0z.d(11): Error: no property `digits` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4ewg2l0z.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tlong n1_copy = n1;\n\tlong n2_copy = n2;\n\twhile(n1_copy > 0)\n\t{\n\t\tsum += abs(n1_copy % 10 - n2_copy % 10);\n\t\tn1_copy /= 10;\n\t\tn2_copy /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong result = 0;\n\tlong n1_digits = n1.digits;\n\tlong n2_digits = n2.digits;\n\tlong n1_len = n1_digits.length;\n\tlong n2_len = n2_digits.length;\n\tlong min_len = min(n1_len, n2_len);\n\tlong max_len = max(n1_len, n2_len);\n\tlong i = 0;\n\twhile (i < min_len) {\n\t\tresult += abs(n1_digits[i] - n2_digits[i]);\n\t\ti++;\n\t}\n\twhile (i < max_len) {\n\t\tif (n1_len > n2_len) {\n\t\t\tresult += n1_digits[i];\n\t\t} else {\n\t\t\tresult += n2_digits[i];\n\t\t}\n\t\ti++;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123458,
      "stdout": "",
      "stderr": "/tmp/tmp36v29i6e.d(11): Error: no property `digits` for type `long`\n/tmp/tmp36v29i6e.d(12): Error: no property `digits` for type `long`\n/tmp/tmp36v29i6e.d(13): Error: no property `length` for type `long`\n/tmp/tmp36v29i6e.d(14): Error: no property `length` for type `long`\n/tmp/tmp36v29i6e.d(15): Error: undefined identifier `min`, did you mean function `main`?\n/tmp/tmp36v29i6e.d(16): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp36v29i6e.d(19): Error: only one index allowed to index `long`\n/tmp/tmp36v29i6e.d(19): Error: only one index allowed to index `long`\n/tmp/tmp36v29i6e.d(24): Error: only one index allowed to index `long`\n/tmp/tmp36v29i6e.d(26): Error: only one index allowed to index `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp36v29i6e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tforeach(i; zip(n1.digits, n2.digits))\n\t{\n\t\tsum += abs(i[0] - i[1]);\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123458,
      "stdout": "",
      "stderr": "/tmp/tmpv3qnryzn.d(11): Error: undefined identifier `zip`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv3qnryzn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tforeach(i; zip(n1.digits, n2.digits))\n\t{\n\t\tsum += abs(i[0] - i[1]);\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123458,
      "stdout": "",
      "stderr": "/tmp/tmpv3qnryzn.d(11): Error: undefined identifier `zip`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv3qnryzn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tforeach(d1, d2; zip(n1.digits, n2.digits))\n\t{\n\t\tsum += abs(d1 - d2);\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123458,
      "stdout": "",
      "stderr": "/tmp/tmp4jfgh6fy.d(11): Error: undefined identifier `zip`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4jfgh6fy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tforeach(i; zip(n1.digits, n2.digits))\n\t\tsum += abs(i[0] - i[1]);\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123458,
      "stdout": "",
      "stderr": "/tmp/tmpf8vskaq0.d(11): Error: undefined identifier `zip`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf8vskaq0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 || n2 > 0) \n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\t\n\twhile (n1 > 0 && n2 > 0)\n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\t\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 || n2 > 0) \n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tlong n = n1 > n2 ? n1 : n2;\n\twhile(n > 0) {\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\t\n\twhile (n1 > 0 || n2 > 0)\n\t{\n\t\tlong d1 = n1 % 10;\n\t\tlong d2 = n2 % 10;\n\t\t\n\t\tsum += abs(d1 - d2);\n\t\t\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\t\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tlong n1_digits = n1.digits;\n\tlong n2_digits = n2.digits;\n\tlong n1_len = n1_digits.length;\n\tlong n2_len = n2_digits.length;\n\tlong len = max(n1_len, n2_len);\n\t\n\tforeach(i; 0..len)\n\t{\n\t\tlong n1_digit = 0;\n\t\tlong n2_digit = 0;\n\t\tif(i < n1_len)\n\t\t{\n\t\t\tn1_digit = n1_digits[i];\n\t\t}\n\t\tif(i < n2_len)\n\t\t{\n\t\t\tn2_digit = n2_digits[i];\n\t\t}\n\t\tsum += abs(n1_digit - n2_digit);\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123458,
      "stdout": "",
      "stderr": "/tmp/tmpcq6wjcai.d(11): Error: no property `digits` for type `long`\n/tmp/tmpcq6wjcai.d(12): Error: no property `digits` for type `long`\n/tmp/tmpcq6wjcai.d(13): Error: no property `length` for type `long`\n/tmp/tmpcq6wjcai.d(14): Error: no property `length` for type `long`\n/tmp/tmpcq6wjcai.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmpcq6wjcai.d(23): Error: only one index allowed to index `long`\n/tmp/tmpcq6wjcai.d(27): Error: only one index allowed to index `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcq6wjcai.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tlong n1_copy = n1;\n\tlong n2_copy = n2;\n\twhile (n1_copy != 0 || n2_copy != 0) \n\t{\n\t\tsum += abs(n1_copy % 10 - n2_copy % 10);\n\t\tn1_copy /= 10;\n\t\tn2_copy /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tlong n1_digits = n1.digits();\n\tlong n2_digits = n2.digits();\n\t\n\tif (n1_digits > n2_digits)\n\t{\n\t\tlong diff = n1_digits - n2_digits;\n\t\tn2 = n2 * pow(10, diff);\n\t}\n\telse if (n1_digits < n2_digits)\n\t{\n\t\tlong diff = n2_digits - n1_digits;\n\t\tn1 = n1 * pow(10, diff);\n\t}\n\t\n\twhile (n1 > 0)\n\t{\n\t\tlong n1_digit = n1 % 10;\n\t\tlong n2_digit = n2 % 10;\n\t\t\n\t\tsum += abs(n1_digit - n2_digit);\n\t\t\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\t\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123458,
      "stdout": "",
      "stderr": "/tmp/tmppvepd_zc.d(11): Error: no property `digits` for type `long`\n/tmp/tmppvepd_zc.d(12): Error: no property `digits` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppvepd_zc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tlong n1_digits = 0;\n\tlong n2_digits = 0;\n\tlong n1_digit = 0;\n\tlong n2_digit = 0;\n\t\n\tif (n1 < 0)\n\t\tn1 = -n1;\n\tif (n2 < 0)\n\t\tn2 = -n2;\n\t\n\tn1_digits = log10(n1) + 1;\n\tn2_digits = log10(n2) + 1;\n\t\n\twhile (n1_digits > 0 || n2_digits > 0)\n\t{\n\t\tif (n1_digits > 0)\n\t\t{\n\t\t\tn1_digit = n1 % 10;\n\t\t\tn1 /= 10;\n\t\t\tn1_digits--;\n\t\t}\n\t\telse\n\t\t\tn1_digit = 0;\n\t\t\n\t\tif (n2_digits > 0)\n\t\t{\n\t\t\tn2_digit = n2 % 10;\n\t\t\tn2 /= 10;\n\t\t\tn2_digits--;\n\t\t}\n\t\telse\n\t\t\tn2_digit = 0;\n\t\t\n\t\tsum += abs(n1_digit - n2_digit);\n\t}\n\t\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpwx1a0_3g.d(21): Error: cannot implicitly convert expression `log10(cast(real)n1) + 1.00000L` of type `real` to `long`\n/tmp/tmpwx1a0_3g.d(22): Error: cannot implicitly convert expression `log10(cast(real)n2) + 1.00000L` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwx1a0_3g.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile(n1 > 0 || n2 > 0) \n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tlong n1_digits = n1.digits();\n\tlong n2_digits = n2.digits();\n\tlong n1_len = n1_digits.length;\n\tlong n2_len = n2_digits.length;\n\tlong max_len = max(n1_len, n2_len);\n\tforeach(i; 0..max_len) {\n\t\tlong n1_digit = 0;\n\t\tlong n2_digit = 0;\n\t\tif(i < n1_len) {\n\t\t\tn1_digit = n1_digits[i];\n\t\t}\n\t\tif(i < n2_len) {\n\t\t\tn2_digit = n2_digits[i];\n\t\t}\n\t\tsum += abs(n1_digit - n2_digit);\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpblq0evag.d(11): Error: no property `digits` for type `long`\n/tmp/tmpblq0evag.d(12): Error: no property `digits` for type `long`\n/tmp/tmpblq0evag.d(13): Error: no property `length` for type `long`\n/tmp/tmpblq0evag.d(14): Error: no property `length` for type `long`\n/tmp/tmpblq0evag.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmpblq0evag.d(20): Error: only one index allowed to index `long`\n/tmp/tmpblq0evag.d(23): Error: only one index allowed to index `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpblq0evag.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 || n2 > 0) {\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 || n2 > 0) \n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong result = 0;\n\twhile (n1 > 0 || n2 > 0) {\n\t\tresult += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tforeach(d1; n1.digits)\n\t\tforeach(d2; n2.digits)\n\t\t\tsum += abs(d1 - d2);\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "/tmp/tmpodubg4kw.d(11): Error: no property `digits` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpodubg4kw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tlong n1_digits = n1.digits();\n\tlong n2_digits = n2.digits();\n\tlong n1_len = n1_digits.length;\n\tlong n2_len = n2_digits.length;\n\tlong max_len = max(n1_len, n2_len);\n\tlong min_len = min(n1_len, n2_len);\n\tfor (long i = 0; i < max_len; i++)\n\t{\n\t\tif (i < min_len)\n\t\t{\n\t\t\tsum += abs(n1_digits[i] - n2_digits[i]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (n1_len > n2_len)\n\t\t\t{\n\t\t\t\tsum += n1_digits[i];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tsum += n2_digits[i];\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpei5fkqqs.d(11): Error: no property `digits` for type `long`\n/tmp/tmpei5fkqqs.d(12): Error: no property `digits` for type `long`\n/tmp/tmpei5fkqqs.d(13): Error: no property `length` for type `long`\n/tmp/tmpei5fkqqs.d(14): Error: no property `length` for type `long`\n/tmp/tmpei5fkqqs.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmpei5fkqqs.d(16): Error: undefined identifier `min`, did you mean function `main`?\n/tmp/tmpei5fkqqs.d(21): Error: only one index allowed to index `long`\n/tmp/tmpei5fkqqs.d(21): Error: only one index allowed to index `long`\n/tmp/tmpei5fkqqs.d(27): Error: only one index allowed to index `long`\n/tmp/tmpei5fkqqs.d(31): Error: only one index allowed to index `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpei5fkqqs.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tforeach(d1; n1.to!string.split(\"\"))\n\t{\n\t\tforeach(d2; n2.to!string.split(\"\"))\n\t\t{\n\t\t\tsum += abs(d1.to!long - d2.to!long);\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpa07drg18.d(11): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa07drg18.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\t\n\twhile (n1 > 0 || n2 > 0)\n\t{\n\t\tlong d1 = n1 % 10;\n\t\tlong d2 = n2 % 10;\n\t\t\n\t\tsum += abs(d1 - d2);\n\t\t\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\t\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 || n2 > 0) \n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 != 0 || n2 != 0)\n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 || n2 > 0) {\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile(n1 != 0 || n2 != 0)\n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tlong n1_digits = 0;\n\tlong n2_digits = 0;\n\t\n\tif (n1 > n2)\n\t{\n\t\tn1_digits = n1;\n\t\tn2_digits = n2;\n\t}\n\telse\n\t{\n\t\tn1_digits = n2;\n\t\tn2_digits = n1;\n\t}\n\t\n\twhile (n1_digits > 0)\n\t{\n\t\tsum += abs(n1_digits % 10 - n2_digits % 10);\n\t\tn1_digits /= 10;\n\t\tn2_digits /= 10;\n\t}\n\t\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 || n2 > 0)\n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tlong n1_digits = n1.to!string().length;\n\tlong n2_digits = n2.to!string().length;\n\tlong n1_digits_left = n1_digits;\n\tlong n2_digits_left = n2_digits;\n\t\n\twhile (n1_digits_left > 0 || n2_digits_left > 0)\n\t{\n\t\tlong n1_digit = n1_digits_left > 0 ? n1 % 10 : 0;\n\t\tlong n2_digit = n2_digits_left > 0 ? n2 % 10 : 0;\n\t\t\n\t\tsum += abs(n1_digit - n2_digit);\n\t\t\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t\t\n\t\tn1_digits_left--;\n\t\tn2_digits_left--;\n\t}\n\t\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmp9cll7p5m.d(11): Error: no property `to` for type `long`\n/tmp/tmp9cll7p5m.d(12): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9cll7p5m.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile(n1 > 0 || n2 > 0)\n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile(n1 > 0 && n2 > 0)\n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 || n2 > 0) {\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong result = 0;\n\tlong n1_digits = 0;\n\tlong n2_digits = 0;\n\tlong n1_digit = 0;\n\tlong n2_digit = 0;\n\t\n\tif(n1 < 0)\n\t\tn1 = -n1;\n\tif(n2 < 0)\n\t\tn2 = -n2;\n\t\n\tn1_digits = log10(n1) + 1;\n\tn2_digits = log10(n2) + 1;\n\t\n\tif(n1_digits > n2_digits)\n\t{\n\t\tn2 = n2 * pow(10, n1_digits - n2_digits);\n\t}\n\telse if(n2_digits > n1_digits)\n\t{\n\t\tn1 = n1 * pow(10, n2_digits - n1_digits);\n\t}\n\t\n\twhile(n1 != 0)\n\t{\n\t\tn1_digit = n1 % 10;\n\t\tn2_digit = n2 % 10;\n\t\tresult += abs(n1_digit - n2_digit);\n\t\tn1 = n1 / 10;\n\t\tn2 = n2 / 10;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpl17t7f7z.d(21): Error: cannot implicitly convert expression `log10(cast(real)n1) + 1.00000L` of type `real` to `long`\n/tmp/tmpl17t7f7z.d(22): Error: cannot implicitly convert expression `log10(cast(real)n2) + 1.00000L` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl17t7f7z.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 || n2 > 0)\n\t{\n\t\tsum += abs((n1 % 10) - (n2 % 10));\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tlong n1_digits = n1.digits();\n\tlong n2_digits = n2.digits();\n\tlong max_digits = max(n1_digits, n2_digits);\n\t\n\tforeach(i; 0..max_digits)\n\t{\n\t\tlong n1_digit = n1.digit(i);\n\t\tlong n2_digit = n2.digit(i);\n\t\t\n\t\tsum += abs(n1_digit - n2_digit);\n\t}\n\t\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpf26u3i9u.d(11): Error: no property `digits` for type `long`\n/tmp/tmpf26u3i9u.d(12): Error: no property `digits` for type `long`\n/tmp/tmpf26u3i9u.d(13): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmpf26u3i9u.d(17): Error: no property `digit` for type `long`\n/tmp/tmpf26u3i9u.d(18): Error: no property `digit` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf26u3i9u.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tlong n1_digits = n1.digits();\n\tlong n2_digits = n2.digits();\n\tlong n1_length = n1_digits.length;\n\tlong n2_length = n2_digits.length;\n\tlong n1_digit;\n\tlong n2_digit;\n\tlong diff;\n\t\n\tif (n1_length > n2_length)\n\t{\n\t\tfor (long i = 0; i < n1_length; i++)\n\t\t{\n\t\t\tn1_digit = n1_digits[i];\n\t\t\tif (i < n2_length)\n\t\t\t{\n\t\t\t\tn2_digit = n2_digits[i];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tn2_digit = 0;\n\t\t\t}\n\t\t\tdiff = abs(n1_digit - n2_digit);\n\t\t\tsum += diff;\n\t\t}\n\t}\n\telse\n\t{\n\t\tfor (long i = 0; i < n2_length; i++)\n\t\t{\n\t\t\tn2_digit = n2_digits[i];\n\t\t\tif (i < n1_length)\n\t\t\t{\n\t\t\t\tn1_digit = n1_digits[i];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tn1_digit = 0;\n\t\t\t}\n\t\t\tdiff = abs(n1_digit - n2_digit);\n\t\t\tsum += diff;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmplnaqddst.d(11): Error: no property `digits` for type `long`\n/tmp/tmplnaqddst.d(12): Error: no property `digits` for type `long`\n/tmp/tmplnaqddst.d(13): Error: no property `length` for type `long`\n/tmp/tmplnaqddst.d(14): Error: no property `length` for type `long`\n/tmp/tmplnaqddst.d(23): Error: only one index allowed to index `long`\n/tmp/tmplnaqddst.d(26): Error: only one index allowed to index `long`\n/tmp/tmplnaqddst.d(40): Error: only one index allowed to index `long`\n/tmp/tmplnaqddst.d(43): Error: only one index allowed to index `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplnaqddst.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tforeach(i; zip(n1.digits, n2.digits))\n\t{\n\t\tsum += abs(i[0] - i[1]);\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123458,
      "stdout": "",
      "stderr": "/tmp/tmpv3qnryzn.d(11): Error: undefined identifier `zip`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv3qnryzn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tlong n1_digits = log10(n1) + 1;\n\tlong n2_digits = log10(n2) + 1;\n\tlong max_digits = max(n1_digits, n2_digits);\n\t\n\tfor (int i = 0; i < max_digits; i++)\n\t{\n\t\tlong n1_digit = n1 % 10;\n\t\tlong n2_digit = n2 % 10;\n\t\tsum += abs(n1_digit - n2_digit);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpnuqt79xt.d(11): Error: cannot implicitly convert expression `log10(cast(real)n1) + 1.00000L` of type `real` to `long`\n/tmp/tmpnuqt79xt.d(12): Error: cannot implicitly convert expression `log10(cast(real)n2) + 1.00000L` of type `real` to `long`\n/tmp/tmpnuqt79xt.d(13): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnuqt79xt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile(n1 > 0 || n2 > 0)\n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 || n2 > 0) {\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 || n2 > 0) \n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tforeach(d1; n1.digits)\n\t{\n\t\tforeach(d2; n2.digits)\n\t\t{\n\t\t\tsum += abs(d1 - d2);\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "/tmp/tmp4ewg2l0z.d(11): Error: no property `digits` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4ewg2l0z.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 || n2 > 0)\n\t{\n\t\tsum += abs((n1 % 10) - (n2 % 10));\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 || n2 > 0) \n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tlong n1_copy = n1;\n\tlong n2_copy = n2;\n\twhile(n1_copy > 0)\n\t{\n\t\tsum += abs(n1_copy % 10 - n2_copy % 10);\n\t\tn1_copy /= 10;\n\t\tn2_copy /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\treturn abs(n1 - n2);\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp20850atp.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmp20850atp.__unittest_L12_C1() [0x427aaf]\n??:? void tmp20850atp.__modtest() [0x427b00]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 || n2 > 0) \n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 || n2 > 0)\n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\t\n\twhile(n1 > 0 || n2 > 0)\n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\t\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile(n1 > 0 || n2 > 0)\n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong result = 0;\n\tlong n1_digits = n1;\n\tlong n2_digits = n2;\n\t\n\twhile (n1_digits != 0 && n2_digits != 0) {\n\t\tresult += abs((n1_digits % 10) - (n2_digits % 10));\n\t\tn1_digits /= 10;\n\t\tn2_digits /= 10;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile(n1 > 0 || n2 > 0)\n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tlong n1_digits = log10(n1) + 1;\n\tlong n2_digits = log10(n2) + 1;\n\tlong n1_digits_remaining = n1_digits;\n\tlong n2_digits_remaining = n2_digits;\n\twhile (n1_digits_remaining > 0 && n2_digits_remaining > 0) {\n\t\tlong n1_digit = n1 % 10;\n\t\tlong n2_digit = n2 % 10;\n\t\tsum += abs(n1_digit - n2_digit);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t\tn1_digits_remaining--;\n\t\tn2_digits_remaining--;\n\t}\n\twhile (n1_digits_remaining > 0) {\n\t\tlong n1_digit = n1 % 10;\n\t\tsum += abs(n1_digit);\n\t\tn1 /= 10;\n\t\tn1_digits_remaining--;\n\t}\n\twhile (n2_digits_remaining > 0) {\n\t\tlong n2_digit = n2 % 10;\n\t\tsum += abs(n2_digit);\n\t\tn2 /= 10;\n\t\tn2_digits_remaining--;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpb_o70us6.d(11): Error: cannot implicitly convert expression `log10(cast(real)n1) + 1.00000L` of type `real` to `long`\n/tmp/tmpb_o70us6.d(12): Error: cannot implicitly convert expression `log10(cast(real)n2) + 1.00000L` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb_o70us6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 || n2 > 0)\n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 || n2 > 0) \n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tlong n1_digits = n1.digits;\n\tlong n2_digits = n2.digits;\n\t\n\tif (n1_digits > n2_digits)\n\t{\n\t\tlong diff = n1_digits - n2_digits;\n\t\tn2 = n2 * pow(10, diff);\n\t}\n\telse if (n2_digits > n1_digits)\n\t{\n\t\tlong diff = n2_digits - n1_digits;\n\t\tn1 = n1 * pow(10, diff);\n\t}\n\t\n\twhile (n1 > 0)\n\t{\n\t\tlong n1_digit = n1 % 10;\n\t\tlong n2_digit = n2 % 10;\n\t\tsum += abs(n1_digit - n2_digit);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\t\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmp8wci7j75.d(11): Error: no property `digits` for type `long`\n/tmp/tmp8wci7j75.d(12): Error: no property `digits` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8wci7j75.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tint n1_len = n1.length;\n\tint n2_len = n2.length;\n\tint max_len = max(n1_len, n2_len);\n\tint min_len = min(n1_len, n2_len);\n\tint diff = max_len - min_len;\n\t\n\tif(n1_len > n2_len)\n\t{\n\t\tfor(int i = 0; i < diff; i++)\n\t\t{\n\t\t\tn2 = n2.insert(0, \"0\");\n\t\t}\n\t}\n\telse if(n2_len > n1_len)\n\t{\n\t\tfor(int i = 0; i < diff; i++)\n\t\t{\n\t\t\tn1 = n1.insert(0, \"0\");\n\t\t}\n\t}\n\t\n\tfor(int i = 0; i < max_len; i++)\n\t{\n\t\tsum += abs(n1[i] - n2[i]);\n\t}\n\t\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmp7g1g3z93.d(11): Error: no property `length` for type `long`\n/tmp/tmp7g1g3z93.d(12): Error: no property `length` for type `long`\n/tmp/tmp7g1g3z93.d(13): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmp7g1g3z93.d(14): Error: undefined identifier `min`, did you mean function `main`?\n/tmp/tmp7g1g3z93.d(21): Error: no property `insert` for type `long`\n/tmp/tmp7g1g3z93.d(28): Error: no property `insert` for type `long`\n/tmp/tmp7g1g3z93.d(34): Error: only one index allowed to index `long`\n/tmp/tmp7g1g3z93.d(34): Error: only one index allowed to index `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp7g1g3z93.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tforeach(i; 0 .. max(n1.digits, n2.digits))\n\t{\n\t\tsum += abs(n1.digits[i] - n2.digits[i]);\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpmx1nrl0e.d(11): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmx1nrl0e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tforeach(d1; n1.digits)\n\t\tforeach(d2; n2.digits)\n\t\t\tsum += abs(d1 - d2);\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "/tmp/tmpodubg4kw.d(11): Error: no property `digits` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpodubg4kw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\t\n\twhile (n1 > 0 || n2 > 0)\n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\t\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 || n2 > 0) \n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong result = 0;\n\tauto n1_digits = to!string(n1);\n\tauto n2_digits = to!string(n2);\n\t\n\tif (n1_digits.length > n2_digits.length)\n\t{\n\t\tn2_digits = n2_digits.dup.insert(0, n1_digits.length - n2_digits.length, '0');\n\t}\n\telse if (n2_digits.length > n1_digits.length)\n\t{\n\t\tn1_digits = n1_digits.dup.insert(0, n2_digits.length - n1_digits.length, '0');\n\t}\n\t\n\tfor (int i = 0; i < n1_digits.length; i++)\n\t{\n\t\tresult += abs(n1_digits[i] - n2_digits[i]);\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpp003v_7_.d(11): Error: template instance `to!string` template `to` is not defined, did you mean No?\n/tmp/tmpp003v_7_.d(12): Error: template instance `to!string` template `to` is not defined, did you mean No?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp003v_7_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 || n2 > 0) \n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tforeach(d1; n1.digits)\n\t{\n\t\tforeach(d2; n2.digits)\n\t\t{\n\t\t\tsum += abs(d1 - d2);\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "/tmp/tmp4ewg2l0z.d(11): Error: no property `digits` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4ewg2l0z.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\t\n\twhile (n1 > 0 || n2 > 0)\n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\t\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tauto n1_digits = to!string(n1);\n\tauto n2_digits = to!string(n2);\n\tforeach(i, n1_digit; n1_digits)\n\t{\n\t\tsum += abs(n1_digit - n2_digits[i]);\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmp_otz5828.d(11): Error: template instance `to!string` template `to` is not defined, did you mean No?\n/tmp/tmp_otz5828.d(12): Error: template instance `to!string` template `to` is not defined, did you mean No?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_otz5828.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 || n2 > 0) {\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tlong n1_digits = 0;\n\tlong n2_digits = 0;\n\tlong n1_digit = 0;\n\tlong n2_digit = 0;\n\t\n\tif (n1 < 0)\n\t{\n\t\tn1 = -n1;\n\t}\n\t\n\tif (n2 < 0)\n\t{\n\t\tn2 = -n2;\n\t}\n\t\n\tif (n1 == 0)\n\t{\n\t\tn1_digits = 1;\n\t}\n\telse\n\t{\n\t\tn1_digits = floor(log10(n1)) + 1;\n\t}\n\t\n\tif (n2 == 0)\n\t{\n\t\tn2_digits = 1;\n\t}\n\telse\n\t{\n\t\tn2_digits = floor(log10(n2)) + 1;\n\t}\n\t\n\twhile (n1_digits > 0 || n2_digits > 0)\n\t{\n\t\tn1_digit = n1 % 10;\n\t\tn2_digit = n2 % 10;\n\t\t\n\t\tsum += abs(n1_digit - n2_digit);\n\t\t\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t\t\n\t\tn1_digits--;\n\t\tn2_digits--;\n\t}\n\t\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpr74bbf_j.d(32): Error: cannot implicitly convert expression `floor(log10(cast(real)n1)) + 1.00000L` of type `real` to `long`\n/tmp/tmpr74bbf_j.d(41): Error: cannot implicitly convert expression `floor(log10(cast(real)n2)) + 1.00000L` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr74bbf_j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tlong n1_digits = 0;\n\tlong n2_digits = 0;\n\t\n\twhile (n1 > 0)\n\t{\n\t\tn1_digits++;\n\t\tn1 /= 10;\n\t}\n\t\n\twhile (n2 > 0)\n\t{\n\t\tn2_digits++;\n\t\tn2 /= 10;\n\t}\n\t\n\tif (n1_digits > n2_digits)\n\t{\n\t\tn2 *= pow(10, n1_digits - n2_digits);\n\t}\n\telse if (n2_digits > n1_digits)\n\t{\n\t\tn1 *= pow(10, n2_digits - n1_digits);\n\t}\n\t\n\twhile (n1 > 0)\n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\t\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmps0nqr21n.d(48): unittest failure\n----------------\n??:? _d_unittestp [0x427f65]\n??:? void tmps0nqr21n.__unittest_L44_C1() [0x427bb9]\n??:? void tmps0nqr21n.__modtest() [0x427ce8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42ab1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fcb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430160]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fc3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aaf5]\n??:? runModuleUnitTests [0x42ba61]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4283b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tforeach(d1; to!string(n1))\n\t{\n\t\tforeach(d2; to!string(n2))\n\t\t{\n\t\t\tsum += abs(d1 - d2);\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "/tmp/tmppa3i0y9r.d(11): Error: template instance `to!string` template `to` is not defined, did you mean No?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppa3i0y9r.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tforeach(i; zip(n1.digits, n2.digits))\n\t{\n\t\tsum += abs(i[0] - i[1]);\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123458,
      "stdout": "",
      "stderr": "/tmp/tmpv3qnryzn.d(11): Error: undefined identifier `zip`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv3qnryzn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\treturn abs(n1 - n2);\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp20850atp.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmp20850atp.__unittest_L12_C1() [0x427aaf]\n??:? void tmp20850atp.__modtest() [0x427b00]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 || n2 > 0)\n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tlong n = max(n1, n2);\n\twhile(n > 0) \n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn /= 10;\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpkkmubml4.d(11): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkkmubml4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 || n2 > 0) \n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile(n1 > 0 || n2 > 0)\n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tlong n1_copy = n1;\n\tlong n2_copy = n2;\n\twhile(n1_copy != 0 || n2_copy != 0) \n\t{\n\t\tsum += abs((n1_copy % 10) - (n2_copy % 10));\n\t\tn1_copy /= 10;\n\t\tn2_copy /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile(n1 != 0 || n2 != 0)\n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile(n1 > 0 || n2 > 0)\n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 || n2 > 0)\n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tlong n1_copy = n1;\n\tlong n2_copy = n2;\n\twhile(n1_copy > 0)\n\t{\n\t\tsum += abs(n1_copy % 10 - n2_copy % 10);\n\t\tn1_copy /= 10;\n\t\tn2_copy /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tlong n1_digits = n1.digits();\n\tlong n2_digits = n2.digits();\n\tlong n1_len = n1_digits.length;\n\tlong n2_len = n2_digits.length;\n\tlong max_len = max(n1_len, n2_len);\n\tlong min_len = min(n1_len, n2_len);\n\t\n\tfor (long i = 0; i < min_len; i++) \n\t{\n\t\tsum += abs(n1_digits[i] - n2_digits[i]);\n\t}\n\t\n\tif (n1_len > n2_len) \n\t{\n\t\tfor (long i = min_len; i < max_len; i++) \n\t\t{\n\t\t\tsum += n1_digits[i];\n\t\t}\n\t}\n\telse \n\t{\n\t\tfor (long i = min_len; i < max_len; i++) \n\t\t{\n\t\t\tsum += n2_digits[i];\n\t\t}\n\t}\n\t\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpg5dxjve4.d(11): Error: no property `digits` for type `long`\n/tmp/tmpg5dxjve4.d(12): Error: no property `digits` for type `long`\n/tmp/tmpg5dxjve4.d(13): Error: no property `length` for type `long`\n/tmp/tmpg5dxjve4.d(14): Error: no property `length` for type `long`\n/tmp/tmpg5dxjve4.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmpg5dxjve4.d(16): Error: undefined identifier `min`, did you mean function `main`?\n/tmp/tmpg5dxjve4.d(20): Error: only one index allowed to index `long`\n/tmp/tmpg5dxjve4.d(20): Error: only one index allowed to index `long`\n/tmp/tmpg5dxjve4.d(27): Error: only one index allowed to index `long`\n/tmp/tmpg5dxjve4.d(34): Error: only one index allowed to index `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpg5dxjve4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tforeach(d1; n1.digits)\n\t\tforeach(d2; n2.digits)\n\t\t\tsum += abs(d1 - d2);\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "/tmp/tmpodubg4kw.d(11): Error: no property `digits` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpodubg4kw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tlong n1_copy = n1;\n\tlong n2_copy = n2;\n\t\n\twhile(n1_copy > 0)\n\t{\n\t\tsum += abs(n1_copy % 10 - n2_copy % 10);\n\t\tn1_copy /= 10;\n\t\tn2_copy /= 10;\n\t}\n\t\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile(n1 > 0 || n2 > 0)\n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tlong n1_digits = log10(n1) + 1;\n\tlong n2_digits = log10(n2) + 1;\n\t\n\tif (n1_digits != n2_digits)\n\t{\n\t\treturn -1;\n\t}\n\t\n\twhile (n1 != 0 && n2 != 0)\n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\t\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpczit3u11.d(11): Error: cannot implicitly convert expression `log10(cast(real)n1) + 1.00000L` of type `real` to `long`\n/tmp/tmpczit3u11.d(12): Error: cannot implicitly convert expression `log10(cast(real)n2) + 1.00000L` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpczit3u11.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong n1_digits = n1.digits;\n\tlong n2_digits = n2.digits;\n\tlong n1_len = n1_digits.length;\n\tlong n2_len = n2_digits.length;\n\tlong diff = 0;\n\tif (n1_len == n2_len)\n\t{\n\t\tfor (long i = 0; i < n1_len; i++)\n\t\t{\n\t\t\tdiff += abs(n1_digits[i] - n2_digits[i]);\n\t\t}\n\t}\n\telse\n\t{\n\t\tlong n1_digits_rev = n1_digits.reverse;\n\t\tlong n2_digits_rev = n2_digits.reverse;\n\t\tlong n1_digits_rev_len = n1_digits_rev.length;\n\t\tlong n2_digits_rev_len = n2_digits_rev.length;\n\t\tif (n1_len > n2_len)\n\t\t{\n\t\t\tfor (long i = 0; i < n2_len; i++)\n\t\t\t{\n\t\t\t\tdiff += abs(n1_digits_rev[i] - n2_digits_rev[i]);\n\t\t\t}\n\t\t\tfor (long i = n2_len; i < n1_len; i++)\n\t\t\t{\n\t\t\t\tdiff += n1_digits_rev[i];\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (long i = 0; i < n1_len; i++)\n\t\t\t{\n\t\t\t\tdiff += abs(n1_digits_rev[i] - n2_digits_rev[i]);\n\t\t\t}\n\t\t\tfor (long i = n1_len; i < n2_len; i++)\n\t\t\t{\n\t\t\t\tdiff += n2_digits_rev[i];\n\t\t\t}\n\t\t}\n\t}\n\treturn diff;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpu_cwsw_n.d(10): Error: no property `digits` for type `long`\n/tmp/tmpu_cwsw_n.d(11): Error: no property `digits` for type `long`\n/tmp/tmpu_cwsw_n.d(12): Error: no property `length` for type `long`\n/tmp/tmpu_cwsw_n.d(13): Error: no property `length` for type `long`\n/tmp/tmpu_cwsw_n.d(19): Error: only one index allowed to index `long`\n/tmp/tmpu_cwsw_n.d(19): Error: only one index allowed to index `long`\n/tmp/tmpu_cwsw_n.d(24): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(long)`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T t) if (isTuple!T)`\n/tmp/tmpu_cwsw_n.d(25): Error: template `std.typecons.reverse` cannot deduce function from argument types `!()(long)`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 || n2 > 0)\n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tlong n1_copy = n1;\n\tlong n2_copy = n2;\n\twhile (n1_copy != 0 || n2_copy != 0)\n\t{\n\t\tsum += abs((n1_copy % 10) - (n2_copy % 10));\n\t\tn1_copy /= 10;\n\t\tn2_copy /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile(n1 > 0 || n2 > 0)\n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tforeach(d1; n1.digits)\n\t{\n\t\tforeach(d2; n2.digits)\n\t\t{\n\t\t\tsum += abs(d1 - d2);\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "/tmp/tmp4ewg2l0z.d(11): Error: no property `digits` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4ewg2l0z.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tforeach(i; 0 .. max(n1.digits, n2.digits))\n\t{\n\t\tsum += abs(n1.digits[i] - n2.digits[i]);\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpmx1nrl0e.d(11): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmx1nrl0e.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 || n2 > 0) \n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tlong n1_digits = n1.digits();\n\tlong n2_digits = n2.digits();\n\tlong n1_len = n1_digits.length;\n\tlong n2_len = n2_digits.length;\n\tlong max_len = max(n1_len, n2_len);\n\tforeach(i; 0 .. max_len)\n\t{\n\t\tlong n1_digit = (i < n1_len) ? n1_digits[i] : 0;\n\t\tlong n2_digit = (i < n2_len) ? n2_digits[i] : 0;\n\t\tsum += abs(n1_digit - n2_digit);\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpqfwr7_h9.d(11): Error: no property `digits` for type `long`\n/tmp/tmpqfwr7_h9.d(12): Error: no property `digits` for type `long`\n/tmp/tmpqfwr7_h9.d(13): Error: no property `length` for type `long`\n/tmp/tmpqfwr7_h9.d(14): Error: no property `length` for type `long`\n/tmp/tmpqfwr7_h9.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmpqfwr7_h9.d(18): Error: only one index allowed to index `long`\n/tmp/tmpqfwr7_h9.d(19): Error: only one index allowed to index `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqfwr7_h9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tforeach(d1; n1.digits)\n\t{\n\t\tforeach(d2; n2.digits)\n\t\t{\n\t\t\tsum += abs(d1 - d2);\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "/tmp/tmp4ewg2l0z.d(11): Error: no property `digits` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4ewg2l0z.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 || n2 > 0)\n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tforeach(d1; n1.digits)\n\t{\n\t\tforeach(d2; n2.digits)\n\t\t{\n\t\t\tsum += abs(d1 - d2);\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "/tmp/tmp4ewg2l0z.d(11): Error: no property `digits` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4ewg2l0z.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tlong n1_digits = n1.to!string().length;\n\tlong n2_digits = n2.to!string().length;\n\t\n\tif (n1_digits > n2_digits)\n\t{\n\t\tfor (long i = 0; i < n1_digits; i++)\n\t\t{\n\t\t\tlong n1_digit = n1 % 10;\n\t\t\tlong n2_digit = n2 % 10;\n\t\t\t\n\t\t\tsum += abs(n1_digit - n2_digit);\n\t\t\t\n\t\t\tn1 /= 10;\n\t\t\tn2 /= 10;\n\t\t}\n\t}\n\telse\n\t{\n\t\tfor (long i = 0; i < n2_digits; i++)\n\t\t{\n\t\t\tlong n1_digit = n1 % 10;\n\t\t\tlong n2_digit = n2 % 10;\n\t\t\t\n\t\t\tsum += abs(n1_digit - n2_digit);\n\t\t\t\n\t\t\tn1 /= 10;\n\t\t\tn2 /= 10;\n\t\t}\n\t}\n\t\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpmyoq15_9.d(11): Error: no property `to` for type `long`\n/tmp/tmpmyoq15_9.d(12): Error: no property `to` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmyoq15_9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 || n2 > 0) \n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\t\n\tforeach(d1; n1.digits)\n\t{\n\t\tforeach(d2; n2.digits)\n\t\t{\n\t\t\tsum += abs(d1 - d2);\n\t\t}\n\t}\n\t\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpl9xnt6re.d(12): Error: no property `digits` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl9xnt6re.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\t\n\twhile(n1 > 0 || n2 > 0)\n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\t\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile(n1 > 0 || n2 > 0)\n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 || n2 > 0) \n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 || n2 > 0) {\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 || n2 > 0) \n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\t\n\twhile(n1 > 0 || n2 > 0)\n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\t\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tforeach(d1; n1.digits)\n\t{\n\t\tforeach(d2; n2.digits)\n\t\t{\n\t\t\tsum += abs(d1 - d2);\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "/tmp/tmp4ewg2l0z.d(11): Error: no property `digits` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4ewg2l0z.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 && n2 > 0) \n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tforeach (i; 0 .. max(n1.length, n2.length)) \n\t{\n\t\tsum += abs(n1[i] - n2[i]);\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpoi86uayr.d(11): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpoi86uayr.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 || n2 > 0)\n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong result = 0;\n\twhile (n1 > 0 || n2 > 0)\n\t{\n\t\tresult += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tlong n1_digits = 0;\n\tlong n2_digits = 0;\n\tlong n1_digit = 0;\n\tlong n2_digit = 0;\n\t\n\tif (n1 < 0)\n\t\tn1 = -n1;\n\tif (n2 < 0)\n\t\tn2 = -n2;\n\t\n\tn1_digits = log10(n1) + 1;\n\tn2_digits = log10(n2) + 1;\n\t\n\twhile (n1_digits > 0 && n2_digits > 0)\n\t{\n\t\tn1_digit = n1 % 10;\n\t\tn2_digit = n2 % 10;\n\t\t\n\t\tsum += abs(n1_digit - n2_digit);\n\t\t\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t\t\n\t\tn1_digits--;\n\t\tn2_digits--;\n\t}\n\t\n\twhile (n1_digits > 0)\n\t{\n\t\tn1_digit = n1 % 10;\n\t\t\n\t\tsum += n1_digit;\n\t\t\n\t\tn1 /= 10;\n\t\t\n\t\tn1_digits--;\n\t}\n\t\n\twhile (n2_digits > 0)\n\t{\n\t\tn2_digit = n2 % 10;\n\t\t\n\t\tsum += n2_digit;\n\t\t\n\t\tn2 /= 10;\n\t\t\n\t\tn2_digits--;\n\t}\n\t\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpattaakqc.d(21): Error: cannot implicitly convert expression `log10(cast(real)n1) + 1.00000L` of type `real` to `long`\n/tmp/tmpattaakqc.d(22): Error: cannot implicitly convert expression `log10(cast(real)n2) + 1.00000L` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpattaakqc.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 || n2 > 0) \n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 || n2 > 0)\n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile(n1 > 0 || n2 > 0)\n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 || n2 > 0) \n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tlong n1_digits = n1.digits;\n\tlong n2_digits = n2.digits;\n\t\n\tif (n1_digits > n2_digits)\n\t{\n\t\tn2 = n2.padLeft(n1_digits);\n\t}\n\telse if (n2_digits > n1_digits)\n\t{\n\t\tn1 = n1.padLeft(n2_digits);\n\t}\n\t\n\tforeach (i, digit; n1.digits)\n\t{\n\t\tsum += abs(digit - n2.digits[i]);\n\t}\n\t\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpyzwkzqz6.d(11): Error: no property `digits` for type `long`\n/tmp/tmpyzwkzqz6.d(12): Error: no property `digits` for type `long`\n/tmp/tmpyzwkzqz6.d(16): Error: no property `padLeft` for type `long`\n/tmp/tmpyzwkzqz6.d(20): Error: no property `padLeft` for type `long`\n/tmp/tmpyzwkzqz6.d(23): Error: no property `digits` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpyzwkzqz6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tforeach (i; zip(n1.digits, n2.digits))\n\t{\n\t\tsum += abs(i[0] - i[1]);\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpv6acfd5l.d(11): Error: undefined identifier `zip`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv6acfd5l.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 || n2 > 0)\n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile(n1 > 0 || n2 > 0) \n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 || n2 > 0) \n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 || n2 > 0) \n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 || n2 > 0)\n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tlong n1_copy = n1;\n\tlong n2_copy = n2;\n\twhile (n1_copy != 0 || n2_copy != 0) \n\t{\n\t\tsum += abs(n1_copy % 10 - n2_copy % 10);\n\t\tn1_copy /= 10;\n\t\tn2_copy /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong result = 0;\n\twhile (n1 != 0 || n2 != 0) {\n\t\tresult += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 || n2 > 0) \n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 || n2 > 0) \n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tlong n1_digits = n1.digits();\n\tlong n2_digits = n2.digits();\n\t\n\tforeach(i; 0..max(n1_digits, n2_digits))\n\t{\n\t\tlong n1_digit = n1_digits > i ? n1.digits[i] : 0;\n\t\tlong n2_digit = n2_digits > i ? n2.digits[i] : 0;\n\t\tsum += abs(n1_digit - n2_digit);\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmp_mqqvn61.d(11): Error: no property `digits` for type `long`\n/tmp/tmp_mqqvn61.d(12): Error: no property `digits` for type `long`\n/tmp/tmp_mqqvn61.d(14): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_mqqvn61.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tforeach(i; zip(n1.digits, n2.digits))\n\t{\n\t\tsum += abs(i[0] - i[1]);\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123458,
      "stdout": "",
      "stderr": "/tmp/tmpv3qnryzn.d(11): Error: undefined identifier `zip`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv3qnryzn.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong result = 0;\n\tlong n1_digits = 0;\n\tlong n2_digits = 0;\n\tlong n1_temp = n1;\n\tlong n2_temp = n2;\n\t\n\twhile(n1_temp > 0)\n\t{\n\t\tn1_digits++;\n\t\tn1_temp /= 10;\n\t}\n\twhile(n2_temp > 0)\n\t{\n\t\tn2_digits++;\n\t\tn2_temp /= 10;\n\t}\n\t\n\tif(n1_digits > n2_digits)\n\t{\n\t\tn2_temp = n2;\n\t\tn2 = n1;\n\t\tn1 = n2_temp;\n\t}\n\t\n\twhile(n1 > 0)\n\t{\n\t\tresult += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tint sum = 0;\n\twhile (n1 > 0 || n2 > 0) \n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 != 0 || n2 != 0) \n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile(n1 != 0 || n2 != 0)\n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 || n2 > 0)\n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tlong n1_digits = n1.digits;\n\tlong n2_digits = n2.digits;\n\tlong n1_len = n1_digits.length;\n\tlong n2_len = n2_digits.length;\n\tlong max_len = max(n1_len, n2_len);\n\t\n\tfor (long i = 0; i < max_len; i++)\n\t{\n\t\tlong n1_digit = 0;\n\t\tlong n2_digit = 0;\n\t\t\n\t\tif (i < n1_len)\n\t\t{\n\t\t\tn1_digit = n1_digits[i];\n\t\t}\n\t\t\n\t\tif (i < n2_len)\n\t\t{\n\t\t\tn2_digit = n2_digits[i];\n\t\t}\n\t\t\n\t\tsum += abs(n1_digit - n2_digit);\n\t}\n\t\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpclmdlogu.d(11): Error: no property `digits` for type `long`\n/tmp/tmpclmdlogu.d(12): Error: no property `digits` for type `long`\n/tmp/tmpclmdlogu.d(13): Error: no property `length` for type `long`\n/tmp/tmpclmdlogu.d(14): Error: no property `length` for type `long`\n/tmp/tmpclmdlogu.d(15): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmpclmdlogu.d(24): Error: only one index allowed to index `long`\n/tmp/tmpclmdlogu.d(29): Error: only one index allowed to index `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpclmdlogu.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile(n1 > 0 || n2 > 0)\n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tlong n1_digits = n1.digits();\n\tlong n2_digits = n2.digits();\n\t\n\tforeach(i; 0..max(n1_digits, n2_digits))\n\t{\n\t\tlong n1_digit = n1.digit(i);\n\t\tlong n2_digit = n2.digit(i);\n\t\tsum += abs(n1_digit - n2_digit);\n\t}\n\t\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmp2gpg6ndw.d(11): Error: no property `digits` for type `long`\n/tmp/tmp2gpg6ndw.d(12): Error: no property `digits` for type `long`\n/tmp/tmp2gpg6ndw.d(14): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2gpg6ndw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tforeach(d1; n1.digits)\n\t\tforeach(d2; n2.digits)\n\t\t\tsum += abs(d1 - d2);\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517492,
      "stdout": "",
      "stderr": "/tmp/tmpodubg4kw.d(11): Error: no property `digits` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpodubg4kw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tlong n1_copy = n1;\n\tlong n2_copy = n2;\n\twhile(n1_copy != 0 || n2_copy != 0)\n\t{\n\t\tsum += abs(n1_copy % 10 - n2_copy % 10);\n\t\tn1_copy /= 10;\n\t\tn2_copy /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile(n1 > 0 || n2 > 0)\n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 || n2 > 0) \n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 || n2 > 0) \n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tforeach(d1, d2; zip(n1.digits, n2.digits))\n\t{\n\t\tsum += abs(d1 - d2);\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123458,
      "stdout": "",
      "stderr": "/tmp/tmp4jfgh6fy.d(11): Error: undefined identifier `zip`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4jfgh6fy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\t\n\tforeach(i; 0 .. max(n1.length, n2.length))\n\t{\n\t\tif(i < n1.length && i < n2.length)\n\t\t{\n\t\t\tsum += abs(n1[i] - n2[i]);\n\t\t}\n\t\telse if(i < n1.length)\n\t\t{\n\t\t\tsum += n1[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsum += n2[i];\n\t\t}\n\t}\n\t\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpt4duvf53.d(12): Error: undefined identifier `max`, did you mean function `fmax`?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpt4duvf53.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 || n2 > 0)\n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 || n2 > 0) \n\t{\n\t\tsum += abs((n1 % 10) - (n2 % 10));\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile(n1 > 0 || n2 > 0)\n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\t\n\twhile(n1 > 0 || n2 > 0) \n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\t\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile(n1 > 0 || n2 > 0)\n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 || n2 > 0) \n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tlong n1_copy = n1;\n\tlong n2_copy = n2;\n\twhile(n1_copy != 0 || n2_copy != 0)\n\t{\n\t\tsum += abs(n1_copy % 10 - n2_copy % 10);\n\t\tn1_copy /= 10;\n\t\tn2_copy /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 || n2 > 0) {\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong n1_digits = n1.digits();\n\tlong n2_digits = n2.digits();\n\tlong max_digits = max(n1_digits, n2_digits);\n\tlong sum = 0;\n\tfor (long i = 0; i < max_digits; i++) \n\t{\n\t\tlong n1_digit = n1.digit(i);\n\t\tlong n2_digit = n2.digit(i);\n\t\tsum += abs(n1_digit - n2_digit);\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "/tmp/tmpgxn82ws2.d(10): Error: no property `digits` for type `long`\n/tmp/tmpgxn82ws2.d(11): Error: no property `digits` for type `long`\n/tmp/tmpgxn82ws2.d(12): Error: undefined identifier `max`, did you mean function `fmax`?\n/tmp/tmpgxn82ws2.d(16): Error: no property `digit` for type `long`\n/tmp/tmpgxn82ws2.d(17): Error: no property `digit` for type `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgxn82ws2.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tlong n1_copy = n1;\n\tlong n2_copy = n2;\n\twhile(n1_copy != 0 || n2_copy != 0)\n\t{\n\t\tsum += abs(n1_copy % 10 - n2_copy % 10);\n\t\tn1_copy /= 10;\n\t\tn2_copy /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile (n1 > 0 || n2 > 0)\n\t{\n\t\tsum += abs(n1 % 10 - n2 % 10);\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1665517493,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\tlong n1_copy = n1;\n\tlong n2_copy = n2;\n\twhile (n1_copy > 0)\n\t{\n\t\tsum += abs(n1_copy % 10 - n2_copy % 10);\n\t\tn1_copy /= 10;\n\t\tn2_copy /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123459,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a python function to find the sum of the per-digit difference between two integers.\n\t\n*/\nlong digit_distance_nums(long n1, long n2) \n{\n\tlong sum = 0;\n\twhile(n1 > 0 || n2 > 0)\n\t{\n\t\tsum += abs((n1 % 10) - (n2 % 10));\n\t\tn1 /= 10;\n\t\tn2 /= 10;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digit_distance_nums;\n\n    assert(candidate(1L, 2L) == 1L);\n    assert(candidate(23L, 56L) == 6L);\n    assert(candidate(123L, 256L) == 7L);\n}\nvoid main(){}",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_228_all_Bits_Set_In_The_Given_Range",
  "language": "d",
  "prompt": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_228_all_Bits_Set_In_The_Given_Range.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = pow(2, r - l + 1) - 1;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6c3nk0gu.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmp6c3nk0gu.__unittest_L12_C1() [0x427ab2]\n??:? void tmp6c3nk0gu.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong i;\n\tfor (i = l; i <= r; i++) \n\t{\n\t\tif ((n & (1 << i)) == 0) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcxwbon5g.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d6d]\n??:? void tmpcxwbon5g.__unittest_L19_C1() [0x427a86]\n??:? void tmpcxwbon5g.__modtest() [0x427aec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281bc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = pow(2, r - l + 1) - 1;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6c3nk0gu.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmp6c3nk0gu.__unittest_L12_C1() [0x427ab2]\n??:? void tmp6c3nk0gu.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int num = (1 << (r - l + 1)) - 1; \n    num = num << (l - 1); \n    return ((num & n) == num); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "/tmp/tmphonit5cd.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmphonit5cd.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphonit5cd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong i = 0;\n\tlong j = 0;\n\tlong k = 0;\n\tlong m = 0;\n\tlong p = 0;\n\tlong q = 0;\n\tlong z = 0;\n\tlong x = 0;\n\tlong y = 0;\n\tlong a = 0;\n\tlong b = 0;\n\tlong c = 0;\n\tlong d = 0;\n\tlong e = 0;\n\tlong f = 0;\n\tlong g = 0;\n\tlong h = 0;\n\tlong o = 0;\n\tlong s = 0;\n\tlong t = 0;\n\tlong u = 0;\n\tlong v = 0;\n\tlong w = 0;\n\tlong x1 = 0;\n\tlong y1 = 0;\n\tlong z1 = 0;\n\tlong a1 = 0;\n\tlong b1 = 0;\n\tlong c1 = 0;\n\tlong d1 = 0;\n\tlong e1 = 0;\n\tlong f1 = 0;\n\tlong g1 = 0;\n\tlong h1 = 0;\n\tlong o1 = 0;\n\tlong s1 = 0;\n\tlong t1 = 0;\n\tlong u1 = 0;\n\tlong v1 = 0;\n\tlong w1 = 0;\n\tlong x2 = 0;\n\tlong y2 = 0;\n\tlong z2 = 0;\n\tlong a2 = 0;\n\tlong b2 = 0;\n\tlong c2 = 0;\n\tlong d2 = 0;\n\tlong e2 = 0;\n\tlong f2 = 0;\n\tlong g2 = 0;\n\tlong h2 = 0;\n\tlong o2 = 0;\n\tlong s2 = 0;\n\tlong t2 = 0;\n\tlong u2 = 0;\n\tlong v2 = 0;\n\tlong w2 = 0;\n\tlong x3 = 0;\n\tlong y3 = 0;\n\tlong z3 = 0;\n\tlong a3 = 0;\n\tlong b3 = 0;\n\tlong c3 = 0;\n\tlong d3 = 0;\n\tlong e3 = 0;\n\tlong f3 = 0;\n\tlong g3\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "/tmp/tmpqpw3svkd.d(76): Error: semicolon expected, not `unittest`\n/tmp/tmpqpw3svkd.d(76): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqpw3svkd.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long mask = (1 << r) - 1; \n    mask = mask ^ ((1 << (l - 1)) - 1); \n    return ((n & mask) == mask); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "/tmp/tmpfjst25wt.d(9): Error: use `long` for a 64 bit integer instead of `long long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfjst25wt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = pow(2, r - l + 1) - 1;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6c3nk0gu.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmp6c3nk0gu.__unittest_L12_C1() [0x427ab2]\n??:? void tmp6c3nk0gu.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long i = 0; \n    long num = 0; \n    long count = 0; \n    long max = 0; \n    long min = 0; \n    long temp = 0; \n    long temp1 = 0; \n    long temp2 = 0; \n    long temp3 = 0; \n    long temp4 = 0; \n    long temp5 = 0; \n    long temp6 = 0; \n    long temp7 = 0; \n    long temp8 = 0; \n    long temp9 = 0; \n    long temp10 = 0; \n    long temp11 = 0; \n    long temp12 = 0; \n    long temp13 = 0; \n    long temp14 = 0; \n    long temp15 = 0; \n    long temp16 = 0; \n    long temp17 = 0; \n    long temp18 = 0; \n    long temp19 = 0; \n    long temp20 = 0; \n    long temp21 = 0; \n    long temp22 = 0; \n    long temp23 = 0; \n    long temp24 = 0; \n    long temp25 = 0; \n    long temp26 = 0; \n    long temp27 = 0; \n    long temp28 = 0; \n    long temp29 = 0; \n    long temp30 = 0; \n    long temp31 = 0; \n    long temp32 = 0; \n    long temp33 = 0; \n    long temp34 = 0; \n    long temp35 = 0; \n    long temp36 = 0; \n    long temp37 = 0; \n    long temp38 = 0; \n    long temp39 = 0; \n    long temp40 = 0; \n    long temp41 = 0; \n    long temp42 = 0; \n    long temp43 = 0; \n    long temp44 = 0; \n    long temp45 = 0; \n    long temp46 = 0; \n    long temp47 = 0; \n    long temp48 = 0; \n    long temp49 = 0; \n    long temp50 = 0; \n    long temp51 = 0; \n   \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "/tmp/tmp1vu0st1z.d(67): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1vu0st1z.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = pow(2, r-l+1) - 1;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpst7xl052.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmpst7xl052.__unittest_L12_C1() [0x427ab2]\n??:? void tmpst7xl052.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong long int mask = (1 << (r - l + 1)) - 1;\n\tmask = mask << (l - 1);\n\treturn (n & mask) == mask;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "/tmp/tmpu7q3n9i0.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpu7q3n9i0.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu7q3n9i0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong mask = (1 << (r - l + 1)) - 1;\n\tmask = mask << (l - 1);\n\treturn (n & mask) == mask;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5y1ge507.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d6d]\n??:? void tmp5y1ge507.__unittest_L13_C1() [0x427a86]\n??:? void tmp5y1ge507.__modtest() [0x427aec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281bc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\treturn (n >> r) & ((1 << (l - r + 1)) - 1) == 0;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "/tmp/tmpbrycusb9.d(9): Error: `(1 << l - r + 1) - 1 == 0` must be parenthesized when next to operator `&`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpbrycusb9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong long mask = (1 << (r - l + 1)) - 1;\n\tmask = mask << (l - 1);\n\treturn (n & mask) == mask;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "/tmp/tmpjofe1bgt.d(9): Error: use `long` for a 64 bit integer instead of `long long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjofe1bgt.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long mask = (1 << r) - 1; \n    mask = mask ^ ((1 << (l - 1)) - 1); \n    return ((n & mask) == mask); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmptx7gai46.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmptx7gai46.__unittest_L13_C1() [0x427a7e]\n??:? void tmptx7gai46.__modtest() [0x427ae4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = 1;\n\tfor (long i = l; i <= r; i++) \n\t{\n\t\tif ((n & (x << i)) == 0) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpu2z69m36.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmpu2z69m36.__unittest_L19_C1() [0x427a82]\n??:? void tmpu2z69m36.__modtest() [0x427ae8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = pow(2, r - l + 1) - 1;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6c3nk0gu.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmp6c3nk0gu.__unittest_L12_C1() [0x427ab2]\n??:? void tmp6c3nk0gu.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = pow(2, r - l + 1) - 1;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6c3nk0gu.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmp6c3nk0gu.__unittest_L12_C1() [0x427ab2]\n??:? void tmp6c3nk0gu.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = pow(2,r-l+1)-1; \n    x = x << (l-1); \n    return ((n & x) == x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzsrxoq7n.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpzsrxoq7n.__unittest_L13_C1() [0x427aca]\n??:? void tmpzsrxoq7n.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = (1 << (r - l + 1)) - 1;\n\tx = x << (l - 1);\n\treturn (x & n) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpri5pjd8g.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d75]\n??:? void tmpri5pjd8g.__unittest_L13_C1() [0x427a92]\n??:? void tmpri5pjd8g.__modtest() [0x427af8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba9b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a92e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a905]\n??:? runModuleUnitTests [0x42b871]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281c4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong long int x = pow(2, r - l + 1) - 1;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "/tmp/tmpv8ev8j9f.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpv8ev8j9f.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv8ev8j9f.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tif (l > r) \n\t{\n\t\treturn false;\n\t}\n\t\n\tlong mask = (1 << (r - l + 1)) - 1;\n\tmask = mask << l;\n\t\n\treturn (n & mask) == mask;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpwk31imyk.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d5d]\n??:? void tmpwk31imyk.__unittest_L19_C1() [0x427a7a]\n??:? void tmpwk31imyk.__modtest() [0x427ae0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba83]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a916]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faa9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff58]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa35]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8ed]\n??:? runModuleUnitTests [0x42b859]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ac]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong long int x = pow(2, r - l + 1) - 1;\n\treturn ((n >> l) & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "/tmp/tmpj7vmqrk5.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpj7vmqrk5.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj7vmqrk5.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long num = pow(2, r - l + 1) - 1; \n    return (num & n) == num; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpydsjq5cg.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e55]\n??:? void tmpydsjq5cg.__unittest_L12_C1() [0x427ab6]\n??:? void tmpydsjq5cg.__modtest() [0x427bd4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa0e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430050]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e5]\n??:? runModuleUnitTests [0x42b951]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282a4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n\tlong x = pow(2, r - l + 1) - 1; \n\treturn ((n >> l) & x) == x; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpx5n4_q5x.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e55]\n??:? void tmpx5n4_q5x.__unittest_L12_C1() [0x427aba]\n??:? void tmpx5n4_q5x.__modtest() [0x427bd8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa0e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430050]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e5]\n??:? runModuleUnitTests [0x42b951]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282a4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = (1 << (r - l + 1)) - 1; \n    x = x << (l - 1); \n    return ((x & n) == x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "/tmp/tmpwib0gyp_.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpwib0gyp_.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwib0gyp_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long max_ele = pow(2, r - l + 1) - 1; \n    long temp = n >> l; \n    return (temp & max_ele) == max_ele; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8gaymx6i.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427e55]\n??:? void tmp8gaymx6i.__unittest_L13_C1() [0x427aba]\n??:? void tmp8gaymx6i.__modtest() [0x427bd8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa0e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430050]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e5]\n??:? runModuleUnitTests [0x42b951]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282a4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = pow(2, r - l + 1) - 1;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6c3nk0gu.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmp6c3nk0gu.__unittest_L12_C1() [0x427ab2]\n??:? void tmp6c3nk0gu.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = pow(2, r - l + 1) - 1;\n\tx = x << l - 1;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1q6_6arq.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmp1q6_6arq.__unittest_L13_C1() [0x427aca]\n??:? void tmp1q6_6arq.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong m = (1 << r) - 1;\n\tm = m - ((1 << (l - 1)) - 1);\n\treturn (n & m) == m;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpw7b4v9ba.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmpw7b4v9ba.__unittest_L13_C1() [0x427a7e]\n??:? void tmpw7b4v9ba.__modtest() [0x427ae4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong mask = (1 << (r - l + 1)) - 1;\n\tmask = mask << (l - 1);\n\treturn (n & mask) == mask;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5y1ge507.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d6d]\n??:? void tmp5y1ge507.__unittest_L13_C1() [0x427a86]\n??:? void tmp5y1ge507.__modtest() [0x427aec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281bc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = pow(2, r - l + 1) - 1; \n    return ((n >> l) & x) == x; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "/tmp/tmpustbnuc9.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpustbnuc9.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpustbnuc9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = pow(2, r - l + 1) - 1;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6c3nk0gu.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmp6c3nk0gu.__unittest_L12_C1() [0x427ab2]\n??:? void tmp6c3nk0gu.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = pow(2, r - l + 1) - 1;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6c3nk0gu.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmp6c3nk0gu.__unittest_L12_C1() [0x427ab2]\n??:? void tmp6c3nk0gu.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\t// Write your code here\n\tlong long int count = 0;\n\tfor (long long int i = l; i <= r; i++)\n\t{\n\t\tif ((n & (1 << i)) == 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\tif (count == r - l + 1)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "/tmp/tmp3zp42wt_.d(10): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp3zp42wt_.d(10): Error: no identifier for declarator `long`\n/tmp/tmp3zp42wt_.d(11): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp3zp42wt_.d(11): Error: no identifier for declarator `long`\n/tmp/tmp3zp42wt_.d(11): Error: found `i` when expecting `.` following int\n/tmp/tmp3zp42wt_.d(11): Error: found `=` when expecting identifier following `int`.\n/tmp/tmp3zp42wt_.d(11): Error: found `l` when expecting `;` following `for` condition\n/tmp/tmp3zp42wt_.d(11): Error: expression expected, not `;`\n/tmp/tmp3zp42wt_.d(11): Error: found `i` when expecting `)`\n/tmp/tmp3zp42wt_.d(11): Error: found `<=` instead of statement\n/tmp/tmp3zp42wt_.d(11): Error: found `)` when expecting `;` following statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3zp42wt_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = (1 << (r - l + 1)) - 1; \n    x = x << (l - 1); \n    return ((n & x) == x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "/tmp/tmpa17r7udo.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpa17r7udo.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa17r7udo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = (1 << (r - l + 1)) - 1;\n\tx = x << (l - 1);\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpgw76cnjq.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d6d]\n??:? void tmpgw76cnjq.__unittest_L13_C1() [0x427a86]\n??:? void tmpgw76cnjq.__modtest() [0x427aec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281bc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong mask = (1 << (r - l + 1)) - 1;\n\tmask = mask << l;\n\treturn (n & mask) == mask;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8dpmze6s.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d55]\n??:? void tmp8dpmze6s.__unittest_L13_C1() [0x427a72]\n??:? void tmp8dpmze6s.__modtest() [0x427ad8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a90e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faa1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff50]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8e5]\n??:? runModuleUnitTests [0x42b851]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281a4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long num = (1 << r) - 1; \n    num = num - ((1 << (l - 1)) - 1); \n    return ((num & n) == num); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "/tmp/tmpzkbsyp2l.d(9): Error: use `long` for a 64 bit integer instead of `long long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzkbsyp2l.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong long mask = (1 << (r - l + 1)) - 1;\n\tmask = mask << l;\n\treturn (n & mask) == mask;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "/tmp/tmp1aipu5yl.d(9): Error: use `long` for a 64 bit integer instead of `long long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1aipu5yl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int mask = (1 << r) - 1; \n    mask = mask ^ ((1 << (l - 1)) - 1); \n    return ((n & mask) == mask); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "/tmp/tmptvhfv2h8.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmptvhfv2h8.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmptvhfv2h8.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = pow(2, r - l + 1) - 1;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6c3nk0gu.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmp6c3nk0gu.__unittest_L12_C1() [0x427ab2]\n??:? void tmp6c3nk0gu.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long max = (1 << r) - 1; \n    long min = (1 << (l - 1)) - 1; \n  \n    return (n | max) == max && (n | min) == n; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprof1z9n5.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x427d75]\n??:? void tmprof1z9n5.__unittest_L14_C1() [0x427a92]\n??:? void tmprof1z9n5.__modtest() [0x427af8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba9b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a92e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a905]\n??:? runModuleUnitTests [0x42b871]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281c4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    // To check if all bits are set in the given range \n    // we need to check if the bits in the range are \n    // set or not. \n    // So, we need to create a number which has all \n    // bits set in the given range. \n    // We can create a number which has all bits set \n    // in the given range by using the formula \n    // ((1 << r) - 1) XOR ((1 << (l - 1)) - 1) \n    long num = ((1 << r) - 1) ^ ((1 << (l - 1)) - 1); \n  \n    // Now, we need to check if all bits in the given \n    // range are set or not. \n    // We can check it by ANDing the number with the \n    // given number. \n    // If all bits in the given range are set then the \n    // AND of the number and the given number will be \n    // equal to the number. \n    return ((num & n) == num); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp65njzys4.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmp65njzys4.__unittest_L28_C1() [0x427a82]\n??:? void tmp65njzys4.__modtest() [0x427ae8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int mask = (1 << (r - l + 1)) - 1; \n    mask = mask << (l - 1); \n    return ((n & mask) == mask); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "/tmp/tmppax3s_xo.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmppax3s_xo.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppax3s_xo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = (1 << (r - l + 1)) - 1; \n    x = x << l; \n    return ((n & x) == x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "/tmp/tmpvceshvby.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpvceshvby.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvceshvby.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = pow(2, r - l + 1) - 1;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6c3nk0gu.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmp6c3nk0gu.__unittest_L12_C1() [0x427ab2]\n??:? void tmp6c3nk0gu.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = (1 << (r - l + 1)) - 1; \n    x = x << (l - 1); \n    return ((x & n) == x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "/tmp/tmpwib0gyp_.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpwib0gyp_.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwib0gyp_.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = (1 << r) - (1 << l);\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4mesm8rn.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmp4mesm8rn.__unittest_L12_C1() [0x427a6a]\n??:? void tmp4mesm8rn.__modtest() [0x427ad0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = pow(2, r - l + 1) - 1;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6c3nk0gu.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmp6c3nk0gu.__unittest_L12_C1() [0x427ab2]\n??:? void tmp6c3nk0gu.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\treturn (n & ((1 << r) - 1)) == ((1 << l) - 1);\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2i3o_hrt.d(15): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmp2i3o_hrt.__unittest_L11_C1() [0x427a7e]\n??:? void tmp2i3o_hrt.__modtest() [0x427ae4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = pow(2, r - l + 1) - 1;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6c3nk0gu.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmp6c3nk0gu.__unittest_L12_C1() [0x427ab2]\n??:? void tmp6c3nk0gu.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = (1 << r) - 1;\n\tlong y = (1 << l) - 1;\n\tlong z = x - y;\n\treturn (n & z) == z;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpgmp5819r.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmpgmp5819r.__unittest_L14_C1() [0x427a82]\n??:? void tmpgmp5819r.__modtest() [0x427ae8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = pow(2, r - l + 1) - 1;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6c3nk0gu.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmp6c3nk0gu.__unittest_L12_C1() [0x427ab2]\n??:? void tmp6c3nk0gu.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = pow(2, r - l + 1); \n    return (n & (x - 1)) == (x - 1); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpk2cgtym9.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e55]\n??:? void tmpk2cgtym9.__unittest_L12_C1() [0x427aba]\n??:? void tmpk2cgtym9.__modtest() [0x427bd8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa0e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430050]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e5]\n??:? runModuleUnitTests [0x42b951]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282a4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = pow(2, r - l + 1) - 1;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6c3nk0gu.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmp6c3nk0gu.__unittest_L12_C1() [0x427ab2]\n??:? void tmp6c3nk0gu.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int num = pow(2, r - l + 1) - 1; \n    num = num << (l - 1); \n    return ((num & n) == num); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "/tmp/tmpsihndvq0.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpsihndvq0.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsihndvq0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = pow(2, r - l + 1) - 1; \n    long long int y = x << (l - 1); \n    return (n & y) == y; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "/tmp/tmpco_cwgbq.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpco_cwgbq.d(9): Error: no identifier for declarator `long`\n/tmp/tmpco_cwgbq.d(10): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpco_cwgbq.d(10): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpco_cwgbq.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long num = pow(2, r - l + 1) - 1; \n    return ((num << l) & n) == num; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpg831brvk.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e55]\n??:? void tmpg831brvk.__unittest_L12_C1() [0x427aba]\n??:? void tmpg831brvk.__modtest() [0x427bd8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa0e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430050]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e5]\n??:? runModuleUnitTests [0x42b951]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282a4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long max_num = (1 << (r - l + 1)) - 1; \n    long mask = max_num << (l - 1); \n    return (n & mask) == mask; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6u8d94hu.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d6d]\n??:? void tmp6u8d94hu.__unittest_L13_C1() [0x427a86]\n??:? void tmp6u8d94hu.__modtest() [0x427aec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281bc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    if ((n & x) == x) \n        return true; \n    return false; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "/tmp/tmp33j2djgk.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp33j2djgk.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp33j2djgk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long num = pow(2, r - l + 1) - 1; \n    return (n & num) == num; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1r0yhclv.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmp1r0yhclv.__unittest_L12_C1() [0x427ab2]\n??:? void tmp1r0yhclv.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    return !(n & x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "/tmp/tmp3_kdt1uw.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp3_kdt1uw.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3_kdt1uw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong mask = (1 << (r - l + 1)) - 1;\n\tmask = mask << (l - 1);\n\treturn (n & mask) == mask;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5y1ge507.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d6d]\n??:? void tmp5y1ge507.__unittest_L13_C1() [0x427a86]\n??:? void tmp5y1ge507.__modtest() [0x427aec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281bc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    return !(n & x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\t// Write your code here\n\t\n\tlong x = pow(2, r - l + 1) - 1;\n\t\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpccqcadzl.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmpccqcadzl.__unittest_L15_C1() [0x427ab2]\n??:? void tmpccqcadzl.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = pow(2, r - l + 1) - 1;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6c3nk0gu.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmp6c3nk0gu.__unittest_L12_C1() [0x427ab2]\n??:? void tmp6c3nk0gu.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = (1 << (r - l + 1)) - 1; \n    x = x << (l - 1); \n    return ((n & x) == x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "/tmp/tmpa17r7udo.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpa17r7udo.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa17r7udo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong mask = (1 << (r - l + 1)) - 1;\n\tmask = mask << (l - 1);\n\treturn (n & mask) == mask;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5y1ge507.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d6d]\n??:? void tmp5y1ge507.__unittest_L13_C1() [0x427a86]\n??:? void tmp5y1ge507.__modtest() [0x427aec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281bc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = pow(2, r - l + 1) - 1;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6c3nk0gu.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmp6c3nk0gu.__unittest_L12_C1() [0x427ab2]\n??:? void tmp6c3nk0gu.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = pow(2, r - l + 1) - 1;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6c3nk0gu.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmp6c3nk0gu.__unittest_L12_C1() [0x427ab2]\n??:? void tmp6c3nk0gu.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = (1 << (r - l + 1)) - 1;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpgcv79p1v.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmpgcv79p1v.__unittest_L12_C1() [0x427a6a]\n??:? void tmpgcv79p1v.__modtest() [0x427ad0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = pow(2, r - l + 1) - 1;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6c3nk0gu.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmp6c3nk0gu.__unittest_L12_C1() [0x427ab2]\n??:? void tmp6c3nk0gu.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = (1 << (r - l + 1)) - 1;\n\tx = x << (l - 1);\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpgw76cnjq.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d6d]\n??:? void tmpgw76cnjq.__unittest_L13_C1() [0x427a86]\n??:? void tmpgw76cnjq.__modtest() [0x427aec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281bc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long num = pow(2, r - l + 1) - 1; \n    return ((n >> l) & num) == num; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprc41iar_.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e55]\n??:? void tmprc41iar_.__unittest_L12_C1() [0x427aba]\n??:? void tmprc41iar_.__modtest() [0x427bd8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa0e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430050]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e5]\n??:? runModuleUnitTests [0x42b951]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282a4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    return ((n & x) == x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "/tmp/tmpqgwrx21v.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpqgwrx21v.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqgwrx21v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = pow(2, r - l + 1) - 1; \n    return ((n >> l) & x) == x; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "/tmp/tmpustbnuc9.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpustbnuc9.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpustbnuc9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = (1 << r) - 1; \n    x = x ^ ((1 << (l - 1)) - 1); \n    return ((x & n) == x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjlq4w66c.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmpjlq4w66c.__unittest_L13_C1() [0x427a82]\n??:? void tmpjlq4w66c.__modtest() [0x427ae8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = pow(2, r - l + 1) - 1;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6c3nk0gu.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmp6c3nk0gu.__unittest_L12_C1() [0x427ab2]\n??:? void tmp6c3nk0gu.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    return ((n & x) == x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "/tmp/tmpqgwrx21v.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpqgwrx21v.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqgwrx21v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = pow(2, r - l + 1) - 1;\n\treturn (n & (x << (l - 1))) == 0;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long num = (1 << (r - l + 1)) - 1; \n    num = num << (l - 1); \n    return (n & num) == num; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9h1r5ntk.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d6d]\n??:? void tmp9h1r5ntk.__unittest_L13_C1() [0x427a86]\n??:? void tmp9h1r5ntk.__modtest() [0x427aec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281bc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long x = (1 << (r - l + 1)) - 1; \n    x = x << (l - 1); \n    return ((n & x) == x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "/tmp/tmpiakc1i4i.d(9): Error: use `long` for a 64 bit integer instead of `long long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiakc1i4i.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n\tlong num = pow(2, r - l + 1) - 1; \n\tnum = num << (l - 1); \n\treturn ((num & n) == num); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1gpi7_7r.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmp1gpi7_7r.__unittest_L13_C1() [0x427aca]\n??:? void tmp1gpi7_7r.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong mask = (1 << (r - l + 1)) - 1;\n\tmask = mask << l;\n\treturn (n & mask) == mask;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8dpmze6s.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d55]\n??:? void tmp8dpmze6s.__unittest_L13_C1() [0x427a72]\n??:? void tmp8dpmze6s.__modtest() [0x427ad8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a90e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faa1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff50]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8e5]\n??:? runModuleUnitTests [0x42b851]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281a4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    return !(n & x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "/tmp/tmp3_kdt1uw.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp3_kdt1uw.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3_kdt1uw.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long num = (1 << (r - l + 1)) - 1; \n    num = num << (l - 1); \n    return ((num & n) == num); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "/tmp/tmpw7a41ljl.d(9): Error: use `long` for a 64 bit integer instead of `long long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw7a41ljl.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long num = pow(2, r - l + 1) - 1; \n    num = num << (l - 1); \n    return (num & n) == num; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp7xvlb3yh.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmp7xvlb3yh.__unittest_L13_C1() [0x427aca]\n??:? void tmp7xvlb3yh.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long max = (1 << (r - l + 1)) - 1; \n    long mask = max << (l - 1); \n    return (n & mask) == mask; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppf28qf1w.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d6d]\n??:? void tmppf28qf1w.__unittest_L13_C1() [0x427a86]\n??:? void tmppf28qf1w.__modtest() [0x427aec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281bc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long num = pow(2, r - l + 1) - 1; \n    return ((n >> l) & num) == num; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprc41iar_.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e55]\n??:? void tmprc41iar_.__unittest_L12_C1() [0x427aba]\n??:? void tmprc41iar_.__modtest() [0x427bd8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa0e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430050]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e5]\n??:? runModuleUnitTests [0x42b951]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282a4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = (1 << r) - 1; \n    x = x ^ ((1 << (l - 1)) - 1); \n    return ((n & x) == 0); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int num = 1; \n    num = num << (r - l + 1); \n    num = num - 1; \n    num = num << (l - 1); \n    return ((num & n) == num); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "/tmp/tmp_m0ev5r4.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp_m0ev5r4.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_m0ev5r4.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    return ((n & x) == x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "/tmp/tmpqgwrx21v.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpqgwrx21v.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqgwrx21v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = pow(2, r - l + 1) - 1;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6c3nk0gu.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmp6c3nk0gu.__unittest_L12_C1() [0x427ab2]\n??:? void tmp6c3nk0gu.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = pow(2, r - l + 1) - 1;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6c3nk0gu.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmp6c3nk0gu.__unittest_L12_C1() [0x427ab2]\n??:? void tmp6c3nk0gu.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = pow(2, r - l + 1) - 1; \n    return ((n >> l) & x) == x; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "/tmp/tmpustbnuc9.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpustbnuc9.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpustbnuc9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = (1 << (r - l + 1)) - 1;\n\treturn (n & (x << (l - 1))) == (x << (l - 1));\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpi1z98jp7.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427d75]\n??:? void tmpi1z98jp7.__unittest_L12_C1() [0x427a8e]\n??:? void tmpi1z98jp7.__modtest() [0x427af4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba9b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a92e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a905]\n??:? runModuleUnitTests [0x42b871]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281c4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = (1 << (r - l + 1)) - 1; \n    x = x << (l - 1); \n    if ((n & x) == x) \n        return true; \n    else\n        return false; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "/tmp/tmpttqin2hm.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpttqin2hm.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpttqin2hm.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = pow(2, r - l + 1) - 1;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6c3nk0gu.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmp6c3nk0gu.__unittest_L12_C1() [0x427ab2]\n??:? void tmp6c3nk0gu.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong l_shifted = l;\n\tlong r_shifted = r;\n\t\n\tl_shifted = l_shifted << (64 - r);\n\tr_shifted = r_shifted << (64 - r);\n\t\n\tlong mask = l_shifted ^ r_shifted;\n\t\n\treturn (n & mask) == mask;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp76daa8kr.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmp76daa8kr.__unittest_L19_C1() [0x427a6a]\n??:? void tmp76daa8kr.__modtest() [0x427ad0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = pow(2, r - l + 1) - 1;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6c3nk0gu.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmp6c3nk0gu.__unittest_L12_C1() [0x427ab2]\n??:? void tmp6c3nk0gu.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long max = (1 << r) - 1; \n    long min = (1 << (l - 1)) - 1; \n    long mask = max - min; \n    return ((n & mask) == mask); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyc3lucyf.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x427d6d]\n??:? void tmpyc3lucyf.__unittest_L14_C1() [0x427a86]\n??:? void tmpyc3lucyf.__modtest() [0x427aec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281bc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong m = (1 << (r - l + 1)) - 1;\n\treturn (n & (m << l)) == (m << l);\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyfml45iw.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmpyfml45iw.__unittest_L12_C1() [0x427a82]\n??:? void tmpyfml45iw.__modtest() [0x427ae8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = pow(2, r - l + 1) - 1;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6c3nk0gu.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmp6c3nk0gu.__unittest_L12_C1() [0x427ab2]\n??:? void tmp6c3nk0gu.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long num = pow(2, r - l + 1) - 1; \n    return ((num << l) & n) == num; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpg831brvk.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e55]\n??:? void tmpg831brvk.__unittest_L12_C1() [0x427aba]\n??:? void tmpg831brvk.__modtest() [0x427bd8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa0e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430050]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e5]\n??:? runModuleUnitTests [0x42b951]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282a4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    if ((n & x) == x) \n        return true; \n    return false; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "/tmp/tmp33j2djgk.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmp33j2djgk.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp33j2djgk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    return (n & x) == x; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmperxqjpst.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmperxqjpst.__unittest_L13_C1() [0x427aca]\n??:? void tmperxqjpst.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = pow(2, r - l + 1) - 1;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6c3nk0gu.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmp6c3nk0gu.__unittest_L12_C1() [0x427ab2]\n??:? void tmp6c3nk0gu.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long num = pow(2, r) - pow(2, l - 1); \n    return ((num & n) == num); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmperqb_hx2.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmperqb_hx2.__unittest_L12_C1() [0x427aca]\n??:? void tmperqb_hx2.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = (1 << (r - l + 1)) - 1;\n\tx = x << (l - 1);\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpgw76cnjq.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d6d]\n??:? void tmpgw76cnjq.__unittest_L13_C1() [0x427a86]\n??:? void tmpgw76cnjq.__modtest() [0x427aec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281bc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int mask = (1 << (r - l + 1)) - 1; \n    mask = mask << (l - 1); \n    return ((n & mask) == mask); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "/tmp/tmppax3s_xo.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmppax3s_xo.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppax3s_xo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = pow(2, r - l + 1) - 1;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6c3nk0gu.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmp6c3nk0gu.__unittest_L12_C1() [0x427ab2]\n??:? void tmp6c3nk0gu.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = pow(2, r - l + 1) - 1;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6c3nk0gu.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmp6c3nk0gu.__unittest_L12_C1() [0x427ab2]\n??:? void tmp6c3nk0gu.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long i = 0; \n    long j = 0; \n    long k = 0; \n    long m = 0; \n  \n    // Find the number of bits in the given number \n    i = log2(n) + 1; \n  \n    // Find the number of bits in the range \n    j = log2(r - l + 1) + 1; \n  \n    // Find the number of bits in the range \n    // which are not in the given number \n    k = j - i; \n  \n    // Find the number of bits in the range \n    // which are in the given number \n    m = j - k; \n  \n    // If the number of bits in the range \n    // which are in the given number is \n    // equal to the number of bits in the \n    // range then all the bits are set in \n    // the given range \n    if (m == j) \n        return true; \n    else\n        return false; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "/tmp/tmpj7rbn4ts.d(15): Error: cannot implicitly convert expression `log2(cast(real)n) + 1.00000L` of type `real` to `long`\n/tmp/tmpj7rbn4ts.d(18): Error: cannot implicitly convert expression `log2(cast(real)(r - l + 1L)) + 1.00000L` of type `real` to `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj7rbn4ts.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    return !(x & n); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = pow(2, r - l + 1) - 1;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6c3nk0gu.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmp6c3nk0gu.__unittest_L12_C1() [0x427ab2]\n??:? void tmp6c3nk0gu.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = pow(2, r - l + 1) - 1;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6c3nk0gu.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmp6c3nk0gu.__unittest_L12_C1() [0x427ab2]\n??:? void tmp6c3nk0gu.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long num = pow(2, r - l + 1) - 1; \n    return ((n >> l) & num) == num; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "/tmp/tmp1b6vkk6k.d(9): Error: use `long` for a 64 bit integer instead of `long long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1b6vkk6k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long num = (1 << (r - l + 1)) - 1; \n    num = num << (l - 1); \n    return ((num & n) == num); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpsk5exgxv.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d75]\n??:? void tmpsk5exgxv.__unittest_L13_C1() [0x427a92]\n??:? void tmpsk5exgxv.__modtest() [0x427af8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba9b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a92e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a905]\n??:? runModuleUnitTests [0x42b871]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281c4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = pow(2, r - l + 1) - 1;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6c3nk0gu.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmp6c3nk0gu.__unittest_L12_C1() [0x427ab2]\n??:? void tmp6c3nk0gu.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    return ((n & x) == x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_bh47n12.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmp_bh47n12.__unittest_L13_C1() [0x427aca]\n??:? void tmp_bh47n12.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\treturn (n & ((1 << r) - 1)) == ((1 << l) - 1);\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2i3o_hrt.d(15): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmp2i3o_hrt.__unittest_L11_C1() [0x427a7e]\n??:? void tmp2i3o_hrt.__modtest() [0x427ae4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong mask = (1 << (r - l + 1)) - 1;\n\tmask = mask << (l - 1);\n\treturn (n & mask) == mask;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5y1ge507.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d6d]\n??:? void tmp5y1ge507.__unittest_L13_C1() [0x427a86]\n??:? void tmp5y1ge507.__modtest() [0x427aec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281bc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    return !(n & x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = pow(2, r - l + 1) - 1;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6c3nk0gu.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmp6c3nk0gu.__unittest_L12_C1() [0x427ab2]\n??:? void tmp6c3nk0gu.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\t// Write your code here\n\tlong mask = (1 << (r - l + 1)) - 1;\n\tmask = mask << (l - 1);\n\treturn (n & mask) == mask;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpvpzhozsr.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x427d6d]\n??:? void tmpvpzhozsr.__unittest_L14_C1() [0x427a86]\n??:? void tmpvpzhozsr.__modtest() [0x427aec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281bc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = pow(2, r - l + 1) - 1;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6c3nk0gu.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmp6c3nk0gu.__unittest_L12_C1() [0x427ab2]\n??:? void tmp6c3nk0gu.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = (1 << r) - 1;\n\tx = x ^ ((1 << (l - 1)) - 1);\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpd_1ff302.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmpd_1ff302.__unittest_L13_C1() [0x427a7e]\n??:? void tmpd_1ff302.__modtest() [0x427ae4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong mask = (1 << (r - l + 1)) - 1;\n\tmask = mask << (l - 1);\n\treturn (n & mask) == mask;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5y1ge507.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d6d]\n??:? void tmp5y1ge507.__unittest_L13_C1() [0x427a86]\n??:? void tmp5y1ge507.__modtest() [0x427aec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281bc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n\tlong long num = pow(2, r - l + 1) - 1; \n\tnum = num << (l - 1); \n\treturn ((num & n) == num); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "/tmp/tmpmbrwi61d.d(9): Error: use `long` for a 64 bit integer instead of `long long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpmbrwi61d.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = (1 << r) - 1; \n    x = x ^ ((1 << (l - 1)) - 1); \n    return ((x & n) == x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjlq4w66c.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmpjlq4w66c.__unittest_L13_C1() [0x427a82]\n??:? void tmpjlq4w66c.__modtest() [0x427ae8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\treturn (n & ((1 << (r - l + 1)) - 1) << l) == 0;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbc9xs5wn.d(15): unittest failure\n----------------\n??:? _d_unittestp [0x427d55]\n??:? void tmpbc9xs5wn.__unittest_L11_C1() [0x427a72]\n??:? void tmpbc9xs5wn.__modtest() [0x427ad8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a90e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faa1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff50]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8e5]\n??:? runModuleUnitTests [0x42b851]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281a4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    return (n & x) == x; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmperxqjpst.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmperxqjpst.__unittest_L13_C1() [0x427aca]\n??:? void tmperxqjpst.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = (1 << (r - l + 1)) - 1; \n    x = x << (l - 1); \n    return ((n & x) == x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "/tmp/tmpa17r7udo.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpa17r7udo.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa17r7udo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int mask = (1 << (r - l + 1)) - 1; \n    mask = mask << (l - 1); \n    return ((n & mask) == mask); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "/tmp/tmppax3s_xo.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmppax3s_xo.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppax3s_xo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n    long x = pow(2, r - l + 1) - 1;\n    return (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpaorarnh3.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmpaorarnh3.__unittest_L12_C1() [0x427ab2]\n??:? void tmpaorarnh3.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    return !(n & x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int num = pow(2, r - l + 1) - 1; \n    return (n & num) == num; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "/tmp/tmpsbu6k6cv.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpsbu6k6cv.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsbu6k6cv.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = n;\n\tfor (long i = l; i <= r; i++) \n\t{\n\t\tif ((x & (1 << i)) == 0) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpr44jz50c.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmpr44jz50c.__unittest_L19_C1() [0x427a7e]\n??:? void tmpr44jz50c.__modtest() [0x427ae4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong long int x = (1 << (r - l + 1)) - 1;\n\tx <<= l - 1;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "/tmp/tmpvrfc3ja6.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpvrfc3ja6.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvrfc3ja6.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    return !(n & x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long num = pow(2, r - l + 1) - 1; \n    return (n & num) == num; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp1r0yhclv.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmp1r0yhclv.__unittest_L12_C1() [0x427ab2]\n??:? void tmp1r0yhclv.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    // To check if all bits are set in the given range \n    // we can use the following formula \n    // (2^(r-l+1))-1 \n    // which will give us a number with all bits set \n    // in the given range \n    long num = (1 << (r - l + 1)) - 1; \n  \n    // Now we can check if all bits are set in the given \n    // range or not by ANDing the number with the given \n    // number and checking if the result is equal to the \n    // number itself \n    return ((num << l) & n) == (num << l); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpihdpis98.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmpihdpis98.__unittest_L22_C1() [0x427a82]\n??:? void tmpihdpis98.__modtest() [0x427ae8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = pow(2, r - l + 1) - 1;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6c3nk0gu.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmp6c3nk0gu.__unittest_L12_C1() [0x427ab2]\n??:? void tmp6c3nk0gu.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong long int mask = (1 << (r - l + 1)) - 1;\n\tmask = mask << (l - 1);\n\treturn (n & mask) == mask;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "/tmp/tmpu7q3n9i0.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpu7q3n9i0.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu7q3n9i0.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong mask = (1 << (r - l + 1)) - 1;\n\tmask = mask << l;\n\treturn (n & mask) == mask;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8dpmze6s.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d55]\n??:? void tmp8dpmze6s.__unittest_L13_C1() [0x427a72]\n??:? void tmp8dpmze6s.__modtest() [0x427ad8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a90e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faa1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff50]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8e5]\n??:? runModuleUnitTests [0x42b851]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281a4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = pow(2, r - l + 1) - 1;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6c3nk0gu.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmp6c3nk0gu.__unittest_L12_C1() [0x427ab2]\n??:? void tmp6c3nk0gu.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\treturn (n & ((1 << (r - l + 1)) - 1) << l) == 0;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbc9xs5wn.d(15): unittest failure\n----------------\n??:? _d_unittestp [0x427d55]\n??:? void tmpbc9xs5wn.__unittest_L11_C1() [0x427a72]\n??:? void tmpbc9xs5wn.__modtest() [0x427ad8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a90e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faa1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff50]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8e5]\n??:? runModuleUnitTests [0x42b851]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281a4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    return !(x & n); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = pow(2, r - l + 1) - 1;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6c3nk0gu.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmp6c3nk0gu.__unittest_L12_C1() [0x427ab2]\n??:? void tmp6c3nk0gu.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = pow(2, r - l + 1) - 1;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6c3nk0gu.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmp6c3nk0gu.__unittest_L12_C1() [0x427ab2]\n??:? void tmp6c3nk0gu.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = pow(2, r - l + 1) - 1; \n    return (n & (x << (l - 1))) == 0; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = (1 << (r - l + 1)) - 1;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpgcv79p1v.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmpgcv79p1v.__unittest_L12_C1() [0x427a6a]\n??:? void tmpgcv79p1v.__modtest() [0x427ad0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tfor (long i = l; i <= r; ++i) \n\t{\n\t\tif (!(n & (1 << i))) \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxbnswpx7.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmpxbnswpx7.__unittest_L18_C1() [0x427a7e]\n??:? void tmpxbnswpx7.__modtest() [0x427ae4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n\tlong x = pow(2, r - l + 1) - 1; \n\tx = x << (l - 1); \n\treturn ((n & x) == x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp299gc98i.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmp299gc98i.__unittest_L13_C1() [0x427aca]\n??:? void tmp299gc98i.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\treturn (n & ((1 << r) - 1)) == ((1 << r) - 1);\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyryrkkam.d(15): unittest failure\n----------------\n??:? _d_unittestp [0x427d55]\n??:? void tmpyryrkkam.__unittest_L11_C1() [0x427a6e]\n??:? void tmpyryrkkam.__modtest() [0x427ad4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a90e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faa1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff50]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8e5]\n??:? runModuleUnitTests [0x42b851]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281a4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong count = 0;\n\tfor (long i = l; i <= r; i++)\n\t{\n\t\tif (n & (1 << i))\n\t\t\tcount++;\n\t}\n\treturn count == r - l + 1;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpocarj_oh.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427d7d]\n??:? void tmpocarj_oh.__unittest_L17_C1() [0x427a9a]\n??:? void tmpocarj_oh.__modtest() [0x427b00]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281cc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = pow(2, r - l + 1) - 1;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6c3nk0gu.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmp6c3nk0gu.__unittest_L12_C1() [0x427ab2]\n??:? void tmp6c3nk0gu.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long mask = (1 << r) - 1; \n    mask = mask - ((1 << (l - 1)) - 1); \n    return ((n & mask) == mask); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpupuqi9gz.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmpupuqi9gz.__unittest_L13_C1() [0x427a7e]\n??:? void tmpupuqi9gz.__modtest() [0x427ae4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    return ((n & x) == x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_bh47n12.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmp_bh47n12.__unittest_L13_C1() [0x427aca]\n??:? void tmp_bh47n12.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = pow(2, r - l + 1) - 1;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6c3nk0gu.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmp6c3nk0gu.__unittest_L12_C1() [0x427ab2]\n??:? void tmp6c3nk0gu.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    return ((n & x) == x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "/tmp/tmpqgwrx21v.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpqgwrx21v.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqgwrx21v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = (1 << r) - 1;\n\tx = x ^ ((1 << (l - 1)) - 1);\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpd_1ff302.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmpd_1ff302.__unittest_L13_C1() [0x427a7e]\n??:? void tmpd_1ff302.__modtest() [0x427ae4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long num = pow(2, r - l + 1) - 1; \n    return (num & n) == num; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpydsjq5cg.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e55]\n??:? void tmpydsjq5cg.__unittest_L12_C1() [0x427ab6]\n??:? void tmpydsjq5cg.__modtest() [0x427bd4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa0e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430050]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e5]\n??:? runModuleUnitTests [0x42b951]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282a4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int mask = (1 << (r - l + 1)) - 1; \n    mask = mask << (l - 1); \n    return ((n & mask) == mask); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "/tmp/tmppax3s_xo.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmppax3s_xo.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppax3s_xo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long num = pow(2, r - l + 1) - 1; \n    return ((num << l) & n) == 0; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4nowxxoq.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmp4nowxxoq.__unittest_L12_C1() [0x427ab2]\n??:? void tmp4nowxxoq.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long max = (1 << r) - 1; \n    long min = (1 << l) - 1; \n    long mask = max - min; \n    return ((n & mask) == mask); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpf1srmpt9.d(18): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmpf1srmpt9.__unittest_L14_C1() [0x427a82]\n??:? void tmpf1srmpt9.__modtest() [0x427ae8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong mask = (1 << (r - l + 1)) - 1;\n\tmask = mask << (l - 1);\n\treturn (n & mask) == mask;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5y1ge507.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d6d]\n??:? void tmp5y1ge507.__unittest_L13_C1() [0x427a86]\n??:? void tmp5y1ge507.__modtest() [0x427aec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281bc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = (1 << (r - l + 1)) - 1; \n    x = x << (l - 1); \n    return ((n & x) == x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "/tmp/tmpa17r7udo.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpa17r7udo.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa17r7udo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong mask = (1 << (r - l + 1)) - 1;\n\tmask = mask << (l - 1);\n\treturn (n & mask) == mask;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5y1ge507.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d6d]\n??:? void tmp5y1ge507.__unittest_L13_C1() [0x427a86]\n??:? void tmp5y1ge507.__modtest() [0x427aec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281bc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long max = (1 << (r - l + 1)) - 1; \n    return ((n >> l) & max) == max; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprmm_9tv_.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427d55]\n??:? void tmprmm_9tv_.__unittest_L12_C1() [0x427a72]\n??:? void tmprmm_9tv_.__modtest() [0x427ad8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a90e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faa1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff50]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8e5]\n??:? runModuleUnitTests [0x42b851]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281a4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    return ((n & x) == x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "/tmp/tmpqgwrx21v.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpqgwrx21v.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqgwrx21v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong mask = (1 << (r - l + 1)) - 1;\n\tmask = mask << (l - 1);\n\treturn (n & mask) == mask;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5y1ge507.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d6d]\n??:? void tmp5y1ge507.__unittest_L13_C1() [0x427a86]\n??:? void tmp5y1ge507.__modtest() [0x427aec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281bc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long x = (1 << r) - 1; \n    x = x ^ ((1 << (l - 1)) - 1); \n    return ((x & n) == x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjlq4w66c.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmpjlq4w66c.__unittest_L13_C1() [0x427a82]\n??:? void tmpjlq4w66c.__modtest() [0x427ae8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = pow(2, r - l + 1) - 1;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6c3nk0gu.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmp6c3nk0gu.__unittest_L12_C1() [0x427ab2]\n??:? void tmp6c3nk0gu.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = pow(2, r - l + 1) - 1;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6c3nk0gu.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmp6c3nk0gu.__unittest_L12_C1() [0x427ab2]\n??:? void tmp6c3nk0gu.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = pow(2, r - l + 1) - 1;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6c3nk0gu.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmp6c3nk0gu.__unittest_L12_C1() [0x427ab2]\n??:? void tmp6c3nk0gu.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long num = pow(2, r - l + 1) - 1; \n    long mask = num << (l - 1); \n    return (n & mask) == mask; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpf5apd_4d.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427e65]\n??:? void tmpf5apd_4d.__unittest_L13_C1() [0x427aca]\n??:? void tmpf5apd_4d.__modtest() [0x427be8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa1e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbb1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430060]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9f5]\n??:? runModuleUnitTests [0x42b961]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = (1 << (r - l + 1)) - 1;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpgcv79p1v.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427d4d]\n??:? void tmpgcv79p1v.__unittest_L12_C1() [0x427a6a]\n??:? void tmpgcv79p1v.__modtest() [0x427ad0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a906]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fa99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff48]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8dd]\n??:? runModuleUnitTests [0x42b849]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42819c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong long mask = (1 << (r - l + 1)) - 1;\n\tmask <<= l - 1;\n\treturn (n & mask) == mask;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "/tmp/tmpj41pxdvz.d(9): Error: use `long` for a 64 bit integer instead of `long long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj41pxdvz.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long num = (1 << r) - (1 << (l - 1)); \n    return ((num & n) == num); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp4gnix4ai.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427d65]\n??:? void tmp4gnix4ai.__unittest_L12_C1() [0x427a7e]\n??:? void tmp4gnix4ai.__modtest() [0x427ae4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba8b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a91e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff60]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa3d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8f5]\n??:? runModuleUnitTests [0x42b861]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281b4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = pow(2, r - l + 1) - 1;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6c3nk0gu.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmp6c3nk0gu.__unittest_L12_C1() [0x427ab2]\n??:? void tmp6c3nk0gu.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long i; \n    for (i = l; i <= r; i++) \n        if (!(n & (1 << i))) \n            return false; \n    return true; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpo6x49t98.d(19): unittest failure\n----------------\n??:? _d_unittestp [0x427d6d]\n??:? void tmpo6x49t98.__unittest_L15_C1() [0x427a86]\n??:? void tmpo6x49t98.__modtest() [0x427aec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281bc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = (1 << (r-l+1)) - 1;\n\tx = x << l;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmptopf_uew.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d55]\n??:? void tmptopf_uew.__unittest_L13_C1() [0x427a72]\n??:? void tmptopf_uew.__modtest() [0x427ad8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a90e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faa1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff50]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8e5]\n??:? runModuleUnitTests [0x42b851]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281a4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = (1 << (r - l + 1)) - 1; \n    x = x << (l - 1); \n    return ((n & x) == x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "/tmp/tmpa17r7udo.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpa17r7udo.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpa17r7udo.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = pow(2, r - l + 1) - 1; \n    x = x << (l - 1); \n    return ((n & x) == x); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "/tmp/tmpqgwrx21v.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpqgwrx21v.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqgwrx21v.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = pow(2, r - l + 1) - 1;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6c3nk0gu.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmp6c3nk0gu.__unittest_L12_C1() [0x427ab2]\n??:? void tmp6c3nk0gu.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = pow(2, r - l + 1) - 1; \n    long long int y = x << (l - 1); \n    return ((n & y) == y); \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "/tmp/tmphfh1qivk.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmphfh1qivk.d(9): Error: no identifier for declarator `long`\n/tmp/tmphfh1qivk.d(10): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmphfh1qivk.d(10): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmphfh1qivk.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong mask = (1 << (r - l + 1)) - 1;\n\tmask = mask << (l - 1);\n\treturn (n & mask) == mask;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5y1ge507.d(17): unittest failure\n----------------\n??:? _d_unittestp [0x427d6d]\n??:? void tmp5y1ge507.__unittest_L13_C1() [0x427a86]\n??:? void tmp5y1ge507.__modtest() [0x427aec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281bc]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = pow(2, r - l + 1) - 1;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6c3nk0gu.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmp6c3nk0gu.__unittest_L12_C1() [0x427ab2]\n??:? void tmp6c3nk0gu.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = pow(2, r - l + 1) - 1;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6c3nk0gu.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmp6c3nk0gu.__unittest_L12_C1() [0x427ab2]\n??:? void tmp6c3nk0gu.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = pow(2, r - l + 1) - 1;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6c3nk0gu.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmp6c3nk0gu.__unittest_L12_C1() [0x427ab2]\n??:? void tmp6c3nk0gu.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int x = pow(2, r - l + 1) - 1; \n    return ((n >> l) & x) == x; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "/tmp/tmpustbnuc9.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpustbnuc9.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpustbnuc9.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long num = pow(2, r - l + 1) - 1; \n    return ((num << l) & n) == num; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpg831brvk.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e55]\n??:? void tmpg831brvk.__unittest_L12_C1() [0x427aba]\n??:? void tmpg831brvk.__modtest() [0x427bd8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa0e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430050]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e5]\n??:? runModuleUnitTests [0x42b951]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282a4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long int num = pow(2, r) - pow(2, l - 1); \n    return (num & n) == num; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "/tmp/tmpwnzc22qy.d(9): Error: use `long` for a 64 bit integer instead of `long long`\n/tmp/tmpwnzc22qy.d(9): Error: no identifier for declarator `long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwnzc22qy.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong i = 0;\n\tlong j = 0;\n\tlong k = 0;\n\tlong m = 0;\n\tlong p = 0;\n\tlong q = 0;\n\tlong s = 0;\n\tlong t = 0;\n\tlong u = 0;\n\tlong v = 0;\n\tlong w = 0;\n\tlong x = 0;\n\tlong y = 0;\n\tlong z = 0;\n\tlong aa = 0;\n\tlong bb = 0;\n\tlong cc = 0;\n\tlong dd = 0;\n\tlong ee = 0;\n\tlong ff = 0;\n\tlong gg = 0;\n\tlong hh = 0;\n\tlong ii = 0;\n\tlong jj = 0;\n\tlong kk = 0;\n\tlong ll = 0;\n\tlong mm = 0;\n\tlong nn = 0;\n\tlong oo = 0;\n\tlong pp = 0;\n\tlong qq = 0;\n\tlong rr = 0;\n\tlong ss = 0;\n\tlong tt = 0;\n\tlong uu = 0;\n\tlong vv = 0;\n\tlong ww = 0;\n\tlong xx = 0;\n\tlong yy = 0;\n\tlong zz = 0;\n\tlong aaa = 0;\n\tlong bbb = 0;\n\tlong ccc = 0;\n\tlong ddd = 0;\n\tlong eee = 0;\n\tlong fff = 0;\n\tlong ggg = 0;\n\tlong hhh = 0;\n\tlong iii = 0;\n\tlong jjj = 0;\n\tlong kkk = 0;\n\tlong lll = 0;\n\tlong mmm = 0;\n\tlong nnn = 0;\n\tlong ooo = 0;\n\tlong ppp = 0;\n\tlong qqq = 0;\n\tlong rrr = 0;\n\tlong sss = 0;\n\tlong ttt = 0;\n\tlong uuu = 0;\n\tlong vvv = 0;\n\tlong www = 0;\n\tlong xxx = 0;\n\tlong yyy = 0;\n\tlong zzz = 0;\n\tlong aaaa = 0\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "/tmp/tmpj0rufv1j.d(76): Error: semicolon expected, not `unittest`\n/tmp/tmpj0rufv1j.d(76): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj0rufv1j.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long num = pow(2, r - l + 1) - 1; \n    return ((n >> l) & num) == num; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprc41iar_.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e55]\n??:? void tmprc41iar_.__unittest_L12_C1() [0x427aba]\n??:? void tmprc41iar_.__modtest() [0x427bd8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa0e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430050]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e5]\n??:? runModuleUnitTests [0x42b951]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282a4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = pow(2, r - l + 1) - 1;\n\treturn ((n >> l) & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpityqyzve.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e55]\n??:? void tmpityqyzve.__unittest_L12_C1() [0x427aba]\n??:? void tmpityqyzve.__modtest() [0x427bd8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa0e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fba1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430050]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb2d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e5]\n??:? runModuleUnitTests [0x42b951]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282a4]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{\n\tlong x = pow(2, r - l + 1) - 1;\n\treturn (n & x) == x;\n}\nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1665517591,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6c3nk0gu.d(16): unittest failure\n----------------\n??:? _d_unittestp [0x427e4d]\n??:? void tmp6c3nk0gu.__unittest_L12_C1() [0x427ab2]\n??:? void tmp6c3nk0gu.__modtest() [0x427bd0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb73]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa06]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb99]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430048]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb25]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9dd]\n??:? runModuleUnitTests [0x42b949]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42829c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long x = pow(2, r - l + 1) - 1; \n    return (n & (x << (l - 1))) == 0; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "/tmp/tmp6qdkvt6c.d(9): Error: use `long` for a 64 bit integer instead of `long long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6qdkvt6c.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\n/*\n\n\tWrite a python function to check whether all the bits are unset in the given range or not.\n\t\n*/\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) \n{ \n    long long num = pow(2, r - l + 1) - 1; \n    return ((num << l) & n) == num; \n} \nunittest\n{\n    alias candidate = all_Bits_Set_In_The_Given_Range;\n\n    assert(candidate(4L, 1L, 2L) == true);\n    assert(candidate(17L, 2L, 4L) == true);\n    assert(candidate(39L, 4L, 6L) == false);\n}\nvoid main(){}",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "/tmp/tmp3hoavi8w.d(9): Error: use `long` for a 64 bit integer instead of `long long`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3hoavi8w.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
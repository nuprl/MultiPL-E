{
  "name": "mbpp_108_merge_sorted_list",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to merge three lists into a single sorted list.\n\t\n*/\nlong[] merge_sorted_list(long[] num1, long[] num2, long[] num3) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_108_merge_sorted_list.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = merge_sorted_list;\n\n    assert(candidate([25L, 24L, 15L, 4L, 5L, 29L, 110L], [19L, 20L, 11L, 56L, 25L, 233L, 154L], [24L, 26L, 54L, 48L]) == [4L, 5L, 11L, 15L, 19L, 20L, 24L, 24L, 25L, 25L, 26L, 29L, 48L, 54L, 56L, 110L, 154L, 233L]);\n    assert(candidate([1L, 3L, 5L, 6L, 8L, 9L], [2L, 5L, 7L, 11L], [1L, 4L, 7L, 8L, 12L]) == [1L, 1L, 2L, 3L, 4L, 5L, 5L, 6L, 7L, 7L, 8L, 8L, 9L, 11L, 12L]);\n    assert(candidate([18L, 14L, 10L, 9L, 8L, 7L, 9L, 3L, 2L, 4L, 1L], [25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L], [12L, 74L, 9L, 50L, 61L, 41L]) == [1L, 2L, 3L, 4L, 7L, 8L, 9L, 9L, 9L, 10L, 12L, 14L, 14L, 18L, 22L, 25L, 25L, 35L, 41L, 50L, 58L, 61L, 65L, 74L, 75L, 85L]);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tlong[] result;\n\tlong[] temp;\n\tlong[] temp2;\n\tlong[] temp3;\n\t\n\ttemp = num1 ~ num2;\n\ttemp2 = temp ~ num3;\n\ttemp3 = temp2.sort();\n\t\n\tresult = temp3;\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[3];\n\tint i = 0, j = 0, k = 0, l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\ttemp[0] = num1[i];\n\t\ttemp[1] = num2[j];\n\t\ttemp[2] = num3[k];\n\t\tresult[l++] = min(temp);\n\t\tif (result[l - 1] == num1[i])\n\t\t\ti++;\n\t\telse if (result[l - 1] == num2[j])\n\t\t\tj++;\n\t\telse\n\t\t\tk++;\n\t}\n\twhile (i < num1.length)\n\t\tresult[l++] = num1[i++];\n\twhile (j < num2.length)\n\t\tresult[l++] = num2[j++];\n\twhile (k < num3.length)\n\t\tresult[l++] = num3[k++];\n\treturn result;\n}",
    "{\n\tlong[] merged_list = new long[num1.length + num2.length + num3.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\twhile(i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\tif(num1[i] < num2[j] && num1[i] < num3[k])\n\t\t{\n\t\t\tmerged_list[l] = num1[i];\n\t\t\ti++;\n\t\t\tl++;\n\t\t}\n\t\telse if(num2[j] < num1[i] && num2[j] < num3[k])\n\t\t{\n\t\t\tmerged_list[l] = num2[j];\n\t\t\tj++;\n\t\t\tl++;\n\t\t}\n\t\telse if(num3[k] < num1[i] && num3[k] < num2[j])\n\t\t{\n\t\t\tmerged_list[l] = num3[k];\n\t\t\tk++;\n\t\t\tl++;\n\t\t}\n\t}\n\tif(i == num1.length)\n\t{\n\t\twhile(j < num2.length && k < num3.length)\n\t\t{\n\t\t\tif(num2[j] < num3[k])\n\t\t\t{\n\t\t\t\tmerged_list[l] = num2[j];\n\t\t\t\tj++;\n\t\t\t\tl++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmerged_list[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t\tl++;\n\t\t\t}\n\t\t}\n\t\tif(j == num2.length)\n\t\t{\n\t\t\twhile(k < num3.length)\n\t\t\t{\n\t\t\t\tmerged_list[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t\tl++;\n\t\t\t}\n\t\t}\n\t\telse\n\t",
    "{\n\tlong[] result;\n\tlong[] temp;\n\t\n\tresult = num1;\n\ttemp = num2;\n\t\n\tforeach(i; 0 .. num2.length)\n\t{\n\t\tresult ~= temp[i];\n\t}\n\t\n\ttemp = num3;\n\t\n\tforeach(i; 0 .. num3.length)\n\t{\n\t\tresult ~= temp[i];\n\t}\n\t\n\tresult.sort;\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] nums = [num1, num2, num3];\n\tlong[] nums_index = [0, 0, 0];\n\tlong[] nums_length = [num1.length, num2.length, num3.length];\n\t\n\tforeach(i; 0 .. result.length)\n\t{\n\t\tlong min_index = 0;\n\t\tforeach(j; 1 .. nums.length)\n\t\t{\n\t\t\tif(nums_index[j] < nums_length[j] && nums[j][nums_index[j]] < nums[min_index][nums_index[min_index]])\n\t\t\t{\n\t\t\t\tmin_index = j;\n\t\t\t}\n\t\t}\n\t\tresult[i] = nums[min_index][nums_index[min_index]];\n\t\tnums_index[min_index]++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\t\n\tint i = 0, j = 0, k = 0, l = 0;\n\t\n\twhile (i < num1.length && j < num2.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile (i < num1.length) \n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile (j < num2.length) \n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\t\n\twhile (i < temp.length && j < num3.length) \n\t{\n\t\tif (temp[i] < num3[j]) \n\t\t{\n\t\t\tresult[k] = temp[i];\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult[k] = num3[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile (i < temp.length) \n\t{\n\t\tresult[k] = temp[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile (j < num3.length) \n\t{\n\t\tresult[k] = num3[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tlong[] temp;\n\tlong[] temp2;\n\tlong[] temp3;\n\tlong[] temp4;\n\tlong[] temp5;\n\tlong[] temp6;\n\tlong[] temp7;\n\tlong[] temp8;\n\tlong[] temp9;\n\tlong[] temp10;\n\tlong[] temp11;\n\tlong[] temp12;\n\tlong[] temp13;\n\tlong[] temp14;\n\tlong[] temp15;\n\tlong[] temp16;\n\tlong[] temp17;\n\tlong[] temp18;\n\tlong[] temp19;\n\tlong[] temp20;\n\tlong[] temp21;\n\tlong[] temp22;\n\tlong[] temp23;\n\tlong[] temp24;\n\tlong[] temp25;\n\tlong[] temp26;\n\tlong[] temp27;\n\tlong[] temp28;\n\tlong[] temp29;\n\tlong[] temp30;\n\tlong[] temp31;\n\tlong[] temp32;\n\tlong[] temp33;\n\tlong[] temp34;\n\tlong[] temp35;\n\tlong[] temp36;\n\tlong[] temp37;\n\tlong[] temp38;\n\tlong[] temp39;\n\tlong[] temp40;\n\tlong[] temp41;\n\tlong[] temp42;\n\tlong[] temp43;\n\tlong[] temp44;\n\tlong[] temp45;\n\tlong[] temp46;\n\tlong[] temp47;\n\tlong[] temp48;\n\tlong[] temp49;\n\tlong[] temp50;\n\tlong[] temp51;\n\tlong[] temp52;\n\tlong[] temp53;\n\tlong[] temp54;\n\tlong[] temp55;\n\tlong[] temp56;\n\tlong[] temp57;\n\tlong[] temp58;\n\tlong[] temp59;\n\tlong[] temp60;\n\tlong[] temp61;\n\tlong[] temp62;\n\tlong[] temp63;\n\tlong[] temp64;\n\tlong[] temp65;\n\tlong[] temp66;\n\tlong[] temp67;\n\tlong[] temp68;\n\tlong[] temp69;\n\tlong[] temp70;\n\tlong[] temp71;\n\tlong[] temp72;\n",
    "{\n\tauto num1_len = num1.length;\n\tauto num2_len = num2.length;\n\tauto num3_len = num3.length;\n\t\n\tauto num1_index = 0;\n\tauto num2_index = 0;\n\tauto num3_index = 0;\n\t\n\tlong[] result;\n\t\n\twhile(num1_index < num1_len && num2_index < num2_len && num3_index < num3_len)\n\t{\n\t\tif(num1[num1_index] < num2[num2_index] && num1[num1_index] < num3[num3_index])\n\t\t{\n\t\t\tresult ~= num1[num1_index];\n\t\t\tnum1_index++;\n\t\t}\n\t\telse if(num2[num2_index] < num1[num1_index] && num2[num2_index] < num3[num3_index])\n\t\t{\n\t\t\tresult ~= num2[num2_index];\n\t\t\tnum2_index++;\n\t\t}\n\t\telse if(num3[num3_index] < num1[num1_index] && num3[num3_index] < num2[num2_index])\n\t\t{\n\t\t\tresult ~= num3[num3_index];\n\t\t\tnum3_index++;\n\t\t}\n\t}\n\t\n\twhile(num1_index < num1_len)\n\t{\n\t\tresult ~= num1[num1_index];\n\t\tnum1_index++;\n\t}\n\t\n\twhile(num2_index < num2_len)\n\t{\n\t\tresult ~= num2[num2_index];\n\t\tnum2_index++;\n\t}\n\t\n\twhile(num3_index < num3_len)\n\t{\n\t\tresult ~= num3[num3_index];\n\t\tnum3_index++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] merged_list = new long[num1.length + num2.length + num3.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\t\n\twhile(i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\tif(num1[i] < num2[j] && num1[i] < num3[k])\n\t\t{\n\t\t\tmerged_list[l++] = num1[i++];\n\t\t}\n\t\telse if(num2[j] < num1[i] && num2[j] < num3[k])\n\t\t{\n\t\t\tmerged_list[l++] = num2[j++];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmerged_list[l++] = num3[k++];\n\t\t}\n\t}\n\t\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\tmerged_list[l++] = num1[i++];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmerged_list[l++] = num2[j++];\n\t\t}\n\t}\n\t\n\twhile(i < num1.length && k < num3.length)\n\t{\n\t\tif(num1[i] < num3[k])\n\t\t{\n\t\t\tmerged_list[l++] = num1[i++];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmerged_list[l++] = num3[k++];\n\t\t}\n\t}\n\t\n\twhile(j < num2.length && k < num3.length)\n\t{\n\t\tif(num2[j] < num3[k])\n\t\t{\n\t\t\tmerged_list[l++] = num2[j++];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmer",
    "{\n\tlong[] merged_list = new long[num1.length + num2.length + num3.length];\n\tlong[] temp_list = new long[merged_list.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\t\n\twhile(i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\tif(num1[i] <= num2[j] && num1[i] <= num3[k])\n\t\t{\n\t\t\ttemp_list[l] = num1[i];\n\t\t\ti++;\n\t\t\tl++;\n\t\t}\n\t\telse if(num2[j] <= num1[i] && num2[j] <= num3[k])\n\t\t{\n\t\t\ttemp_list[l] = num2[j];\n\t\t\tj++;\n\t\t\tl++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp_list[l] = num3[k];\n\t\t\tk++;\n\t\t\tl++;\n\t\t}\n\t}\n\t\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] <= num2[j])\n\t\t{\n\t\t\ttemp_list[l] = num1[i];\n\t\t\ti++;\n\t\t\tl++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp_list[l] = num2[j];\n\t\t\tj++;\n\t\t\tl++;\n\t\t}\n\t}\n\t\n\twhile(i < num1.length && k < num3.length)\n\t{\n\t\tif(num1[i] <= num3[k])\n\t\t{\n\t\t\ttemp_list[l] = num1[i];\n\t\t\ti++;\n\t\t\tl++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp_list[l] = num3[k];\n\t\t\tk++;\n\t\t\tl++;\n\t\t}\n",
    "{\n\tauto nums = num1 ~ num2 ~ num3;\n\tnums.sort;\n\treturn nums;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0, l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j] && num1[i] < num3[k]) \n\t\t{\n\t\t\tresult[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (num2[j] < num1[i] && num2[j] < num3[k]) \n\t\t{\n\t\t\tresult[l] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult[l] = num3[k];\n\t\t\tk++;\n\t\t}\n\t\tl++;\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0, l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num1[i++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num2[j++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[l++] = num1[i++];\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[l++] = num2[j++];\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[l++] = num3[k++];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tlong[] temp;\n\tlong[] temp2;\n\tlong[] temp3;\n\tlong[] temp4;\n\tlong[] temp5;\n\tlong[] temp6;\n\tlong[] temp7;\n\tlong[] temp8;\n\tlong[] temp9;\n\tlong[] temp10;\n\tlong[] temp11;\n\tlong[] temp12;\n\tlong[] temp13;\n\tlong[] temp14;\n\tlong[] temp15;\n\tlong[] temp16;\n\tlong[] temp17;\n\tlong[] temp18;\n\tlong[] temp19;\n\tlong[] temp20;\n\tlong[] temp21;\n\tlong[] temp22;\n\tlong[] temp23;\n\tlong[] temp24;\n\tlong[] temp25;\n\tlong[] temp26;\n\tlong[] temp27;\n\tlong[] temp28;\n\tlong[] temp29;\n\tlong[] temp30;\n\tlong[] temp31;\n\tlong[] temp32;\n\tlong[] temp33;\n\tlong[] temp34;\n\tlong[] temp35;\n\tlong[] temp36;\n\tlong[] temp37;\n\tlong[] temp38;\n\tlong[] temp39;\n\tlong[] temp40;\n\tlong[] temp41;\n\tlong[] temp42;\n\tlong[] temp43;\n\tlong[] temp44;\n\tlong[] temp45;\n\tlong[] temp46;\n\tlong[] temp47;\n\tlong[] temp48;\n\tlong[] temp49;\n\tlong[] temp50;\n\tlong[] temp51;\n\tlong[] temp52;\n\tlong[] temp53;\n\tlong[] temp54;\n\tlong[] temp55;\n\tlong[] temp56;\n\tlong[] temp57;\n\tlong[] temp58;\n\tlong[] temp59;\n\tlong[] temp60;\n\tlong[] temp61;\n\tlong[] temp62;\n\tlong[] temp63;\n\tlong[] temp64;\n\tlong[] temp65;\n\tlong[] temp66;\n\tlong[] temp67;\n\tlong[] temp68;\n\tlong[] temp69;\n\tlong[] temp70;\n\tlong[] temp71;\n\tlong[] temp72;\n",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0, l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j] && num1[i] < num3[k]) \n\t\t{\n\t\t\tresult[l++] = num1[i++];\n\t\t} \n\t\telse if (num2[j] < num1[i] && num2[j] < num3[k]) \n\t\t{\n\t\t\tresult[l++] = num2[j++];\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult[l++] = num3[k++];\n\t\t}\n\t}\n\twhile (i < num1.length && j < num2.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tresult[l++] = num1[i++];\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult[l++] = num2[j++];\n\t\t}\n\t}\n\twhile (i < num1.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num3[k]) \n\t\t{\n\t\t\tresult[l++] = num1[i++];\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult[l++] = num3[k++];\n\t\t}\n\t}\n\twhile (j < num2.length && k < num3.length) \n\t{\n\t\tif (num2[j] < num3[k]) \n\t\t{\n\t\t\tresult[l++] = num2[j++];\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult[l++] = num3[k++];\n\t\t}\n\t}\n\twhile (i < num1.",
    "{\n\tlong[] result;\n\tresult.length = num1.length + num2.length + num3.length;\n\t\n\tlong[] temp = num1 ~ num2 ~ num3;\n\ttemp.sort;\n\t\n\treturn temp;\n}",
    "{\n\tlong[] result;\n\tlong[] temp;\n\tint i;\n\tint j;\n\tint k;\n\tint l;\n\t\n\tresult = new long[num1.length + num2.length + num3.length];\n\t\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\tl = 0;\n\t\n\twhile (i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\tif (num1[i] < num2[j])\n\t\t{\n\t\t\tif (num1[i] < num3[k])\n\t\t\t{\n\t\t\t\tresult[l] = num1[i];\n\t\t\t\ti++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (num2[j] < num3[k])\n\t\t\t{\n\t\t\t\tresult[l] = num2[j];\n\t\t\t\tj++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile (i < num1.length && j < num2.length)\n\t{\n\t\tif (num1[i] < num2[j])\n\t\t{\n\t\t\tresult[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[l] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile (i < num1.length && k < num3.length)\n\t{\n\t\tif (num1[i] < num3[k])\n\t\t{\n\t\t\tresult[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\t\n\twhile(i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\tif(num1[i] <= num2[j] && num1[i] <= num3[k])\n\t\t{\n\t\t\tresult[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if(num2[j] <= num1[i] && num2[j] <= num3[k])\n\t\t{\n\t\t\tresult[l] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[l] = num3[k];\n\t\t\tk++;\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] <= num2[j])\n\t\t{\n\t\t\tresult[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[l] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile(i < num1.length && k < num3.length)\n\t{\n\t\tif(num1[i] <= num3[k])\n\t\t{\n\t\t\tresult[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[l] = num3[k];\n\t\t\tk++;\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile(j < num2.length && k < num3.length)\n\t{\n\t\tif(num2[j] <= num3[k])\n\t\t{\n\t\t\tresult[l] = num2[j];\n\t",
    "{\n\tlong[] result;\n\t\n\tresult = num1 ~ num2 ~ num3;\n\tresult.sort;\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\t\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < num1.length)\n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num2.length)\n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\t\n\twhile(i < temp.length && j < num3.length)\n\t{\n\t\tif(temp[i] < num3[j])\n\t\t{\n\t\t\tresult[k] = temp[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[k] = num3[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < temp.length)\n\t{\n\t\tresult[k] = temp[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num3.length)\n\t{\n\t\tresult[k] = num3[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[3];\n\tlong[] index = new long[3];\n\tlong[] min = new long[3];\n\t\n\tindex[0] = 0;\n\tindex[1] = 0;\n\tindex[2] = 0;\n\t\n\tfor (long i = 0; i < result.length; i++)\n\t{\n\t\ttemp[0] = num1[index[0]];\n\t\ttemp[1] = num2[index[1]];\n\t\ttemp[2] = num3[index[2]];\n\t\t\n\t\tmin = minElement(temp);\n\t\t\n\t\tif (min[0] == 0)\n\t\t{\n\t\t\tresult[i] = num1[index[0]];\n\t\t\tindex[0]++;\n\t\t}\n\t\telse if (min[0] == 1)\n\t\t{\n\t\t\tresult[i] = num2[index[1]];\n\t\t\tindex[1]++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[i] = num3[index[2]];\n\t\t\tindex[2]++;\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j] && num1[i] < num3[k]) \n\t\t{\n\t\t\tresult[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (num2[j] < num1[i] && num2[j] < num3[k]) \n\t\t{\n\t\t\tresult[l] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult[l] = num3[k];\n\t\t\tk++;\n\t\t}\n\t\tl++;\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[3];\n\tint index = 0;\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile(i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\ttemp[0] = num1[i];\n\t\ttemp[1] = num2[j];\n\t\ttemp[2] = num3[k];\n\t\ttemp.sort();\n\t\tresult[index] = temp[0];\n\t\tif(temp[0] == num1[i])\n\t\t\ti++;\n\t\telse if(temp[0] == num2[j])\n\t\t\tj++;\n\t\telse\n\t\t\tk++;\n\t\tindex++;\n\t}\n\twhile(i < num1.length)\n\t{\n\t\tresult[index] = num1[i];\n\t\ti++;\n\t\tindex++;\n\t}\n\twhile(j < num2.length)\n\t{\n\t\tresult[index] = num2[j];\n\t\tj++;\n\t\tindex++;\n\t}\n\twhile(k < num3.length)\n\t{\n\t\tresult[index] = num3[k];\n\t\tk++;\n\t\tindex++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tlong[] temp;\n\t\n\ttemp = num1 ~ num2;\n\tresult = temp ~ num3;\n\t\n\tresult.sort();\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\tlong[] temp2 = new long[num1.length + num2.length + num3.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\t\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < num1.length)\n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num2.length)\n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\t\n\twhile(i < temp.length && j < num3.length)\n\t{\n\t\tif(temp[i] < num3[j])\n\t\t{\n\t\t\ttemp2[k] = temp[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp2[k] = num3[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < temp.length)\n\t{\n\t\ttemp2[k] = temp[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num3.length)\n\t{\n\t\ttemp2[k] = num3[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\treturn temp2;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\t\n\t//merge num1 and num2\n\tint i = 0, j = 0, k = 0;\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\ttemp[k++] = num1[i++];\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[k++] = num2[j++];\n\t\t}\n\t}\n\t\n\twhile(i < num1.length)\n\t{\n\t\ttemp[k++] = num1[i++];\n\t}\n\t\n\twhile(j < num2.length)\n\t{\n\t\ttemp[k++] = num2[j++];\n\t}\n\t\n\t//merge temp and num3\n\ti = 0; j = 0; k = 0;\n\twhile(i < temp.length && j < num3.length)\n\t{\n\t\tif(temp[i] < num3[j])\n\t\t{\n\t\t\tresult[k++] = temp[i++];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[k++] = num3[j++];\n\t\t}\n\t}\n\t\n\twhile(i < temp.length)\n\t{\n\t\tresult[k++] = temp[i++];\n\t}\n\t\n\twhile(j < num3.length)\n\t{\n\t\tresult[k++] = num3[j++];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong i = 0, j = 0, k = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult ~= num1[i];\n\t\t\t\ti++;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult ~= num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult ~= num2[j];\n\t\t\t\tj++;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult ~= num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult ~= num1[i];\n\t\ti++;\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult ~= num2[j];\n\t\tj++;\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult ~= num3[k];\n\t\tk++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] nums = new long[num1.length + num2.length + num3.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tnums[l] = num1[i];\n\t\t\t\ti++;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tnums[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tnums[l] = num2[j];\n\t\t\t\tj++;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tnums[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\tl++;\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tnums[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tnums[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tnums[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\treturn nums;\n}",
    "{\n\tlong[] result;\n\t\n\tresult = num1 ~ num2 ~ num3;\n\tresult.sort;\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[3];\n\tlong[] index = new long[3];\n\tlong[] size = new long[3];\n\tsize[0] = num1.length;\n\tsize[1] = num2.length;\n\tsize[2] = num3.length;\n\tindex[0] = 0;\n\tindex[1] = 0;\n\tindex[2] = 0;\n\tlong i = 0;\n\twhile(i < result.length)\n\t{\n\t\ttemp[0] = num1[index[0]];\n\t\ttemp[1] = num2[index[1]];\n\t\ttemp[2] = num3[index[2]];\n\t\tlong min = min(temp);\n\t\tif(min == temp[0])\n\t\t{\n\t\t\tresult[i] = temp[0];\n\t\t\tindex[0]++;\n\t\t}\n\t\telse if(min == temp[1])\n\t\t{\n\t\t\tresult[i] = temp[1];\n\t\t\tindex[1]++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[i] = temp[2];\n\t\t\tindex[2]++;\n\t\t}\n\t\ti++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] nums = new long[num1.length + num2.length + num3.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\twhile(i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\tif(num1[i] < num3[k])\n\t\t\t{\n\t\t\t\tnums[l] = num1[i];\n\t\t\t\ti++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tnums[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(num2[j] < num3[k])\n\t\t\t{\n\t\t\t\tnums[l] = num2[j];\n\t\t\t\tj++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tnums[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\tl++;\n\t}\n\twhile(i < num1.length)\n\t{\n\t\tnums[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\twhile(j < num2.length)\n\t{\n\t\tnums[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\twhile(k < num3.length)\n\t{\n\t\tnums[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\treturn nums;\n}",
    "{\n\tlong[] result;\n\tlong[] temp;\n\tlong[] temp2;\n\tint i;\n\tint j;\n\tint k;\n\tint l;\n\tint m;\n\tint n;\n\tint o;\n\tint p;\n\tint q;\n\tint r;\n\t\n\tresult = new long[num1.length + num2.length + num3.length];\n\t\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\tl = 0;\n\tm = 0;\n\tn = 0;\n\to = 0;\n\tp = 0;\n\tq = 0;\n\tr = 0;\n\t\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j] && num1[i] < num3[k]) \n\t\t{\n\t\t\tresult[l] = num1[i];\n\t\t\ti++;\n\t\t\tl++;\n\t\t}\n\t\telse if (num2[j] < num1[i] && num2[j] < num3[k]) \n\t\t{\n\t\t\tresult[l] = num2[j];\n\t\t\tj++;\n\t\t\tl++;\n\t\t}\n\t\telse if (num3[k] < num1[i] && num3[k] < num2[j]) \n\t\t{\n\t\t\tresult[l] = num3[k];\n\t\t\tk++;\n\t\t\tl++;\n\t\t}\n\t}\n\t\n\tif (i == num1.length) \n\t{\n\t\ttemp = new long[num2.length - j + num3.length - k];\n\t\t\n\t\twhile (j < num2.length && k < num3.length) \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\ttemp[m] = num2[j];\n\t\t\t\tj++;\n\t\t\t\tm++;\n\t\t\t}\n\t\t\telse if (",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\t\n\twhile(i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\tif(num1[i] < num2[j] && num1[i] < num3[k])\n\t\t{\n\t\t\tresult[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if(num2[j] < num1[i] && num2[j] < num3[k])\n\t\t{\n\t\t\tresult[l] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[l] = num3[k];\n\t\t\tk++;\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile(i < num1.length)\n\t{\n\t\tresult[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\t\n\twhile(j < num2.length)\n\t{\n\t\tresult[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\t\n\twhile(k < num3.length)\n\t{\n\t\tresult[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[3];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\ttemp[0] = num1[i];\n\t\ttemp[1] = num2[j];\n\t\ttemp[2] = num3[k];\n\t\ttemp.sort();\n\t\tresult[l] = temp[0];\n\t\tif (temp[0] == num1[i]) \n\t\t{\n\t\t\ti++;\n\t\t} \n\t\telse if (temp[0] == num2[j]) \n\t\t{\n\t\t\tj++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tk++;\n\t\t}\n\t\tl++;\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tlong[] temp;\n\tlong[] temp2;\n\tlong[] temp3;\n\tlong[] temp4;\n\tlong[] temp5;\n\tlong[] temp6;\n\tlong[] temp7;\n\tlong[] temp8;\n\tlong[] temp9;\n\tlong[] temp10;\n\tlong[] temp11;\n\tlong[] temp12;\n\tlong[] temp13;\n\tlong[] temp14;\n\tlong[] temp15;\n\tlong[] temp16;\n\tlong[] temp17;\n\tlong[] temp18;\n\tlong[] temp19;\n\tlong[] temp20;\n\tlong[] temp21;\n\tlong[] temp22;\n\tlong[] temp23;\n\tlong[] temp24;\n\tlong[] temp25;\n\tlong[] temp26;\n\tlong[] temp27;\n\tlong[] temp28;\n\tlong[] temp29;\n\tlong[] temp30;\n\tlong[] temp31;\n\tlong[] temp32;\n\tlong[] temp33;\n\tlong[] temp34;\n\tlong[] temp35;\n\tlong[] temp36;\n\tlong[] temp37;\n\tlong[] temp38;\n\tlong[] temp39;\n\tlong[] temp40;\n\tlong[] temp41;\n\tlong[] temp42;\n\tlong[] temp43;\n\tlong[] temp44;\n\tlong[] temp45;\n\tlong[] temp46;\n\tlong[] temp47;\n\tlong[] temp48;\n\tlong[] temp49;\n\tlong[] temp50;\n\tlong[] temp51;\n\tlong[] temp52;\n\tlong[] temp53;\n\tlong[] temp54;\n\tlong[] temp55;\n\tlong[] temp56;\n\tlong[] temp57;\n\tlong[] temp58;\n\tlong[] temp59;\n\tlong[] temp60;\n\tlong[] temp61;\n\tlong[] temp62;\n\tlong[] temp63;\n\tlong[] temp64;\n\tlong[] temp65;\n\tlong[] temp66;\n\tlong[] temp67;\n\tlong[] temp68;\n\tlong[] temp69;\n\tlong[] temp70;\n\tlong[] temp71;\n\tlong[] temp72;\n",
    "{\n\tlong[] result;\n\tlong[] temp;\n\tlong[] temp2;\n\tlong[] temp3;\n\tlong[] temp4;\n\tlong[] temp5;\n\tlong[] temp6;\n\tlong[] temp7;\n\tlong[] temp8;\n\tlong[] temp9;\n\tlong[] temp10;\n\tlong[] temp11;\n\tlong[] temp12;\n\tlong[] temp13;\n\tlong[] temp14;\n\tlong[] temp15;\n\tlong[] temp16;\n\tlong[] temp17;\n\tlong[] temp18;\n\tlong[] temp19;\n\tlong[] temp20;\n\tlong[] temp21;\n\tlong[] temp22;\n\tlong[] temp23;\n\tlong[] temp24;\n\tlong[] temp25;\n\tlong[] temp26;\n\tlong[] temp27;\n\tlong[] temp28;\n\tlong[] temp29;\n\tlong[] temp30;\n\tlong[] temp31;\n\tlong[] temp32;\n\tlong[] temp33;\n\tlong[] temp34;\n\tlong[] temp35;\n\tlong[] temp36;\n\tlong[] temp37;\n\tlong[] temp38;\n\tlong[] temp39;\n\tlong[] temp40;\n\tlong[] temp41;\n\tlong[] temp42;\n\tlong[] temp43;\n\tlong[] temp44;\n\tlong[] temp45;\n\tlong[] temp46;\n\tlong[] temp47;\n\tlong[] temp48;\n\tlong[] temp49;\n\tlong[] temp50;\n\tlong[] temp51;\n\tlong[] temp52;\n\tlong[] temp53;\n\tlong[] temp54;\n\tlong[] temp55;\n\tlong[] temp56;\n\tlong[] temp57;\n\tlong[] temp58;\n\tlong[] temp59;\n\tlong[] temp60;\n\tlong[] temp61;\n\tlong[] temp62;\n\tlong[] temp63;\n\tlong[] temp64;\n\tlong[] temp65;\n\tlong[] temp66;\n\tlong[] temp67;\n\tlong[] temp68;\n\tlong[] temp69;\n\tlong[] temp70;\n\tlong[] temp71;\n\tlong[] temp72;\n",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\tlong[] temp2 = new long[num1.length + num2.length + num3.length];\n\t\n\t// merge first two lists\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < num1.length)\n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num2.length)\n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\t// merge third list\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\twhile(i < temp.length && j < num3.length)\n\t{\n\t\tif(temp[i] < num3[j])\n\t\t{\n\t\t\ttemp2[k] = temp[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp2[k] = num3[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < temp.length)\n\t{\n\t\ttemp2[k] = temp[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num3.length)\n\t{\n\t\ttemp2[k] = num3[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\treturn temp2;\n",
    "{\n\tlong[] num = new long[num1.length + num2.length + num3.length];\n\tlong[] num_sorted = new long[num1.length + num2.length + num3.length];\n\t\n\tforeach(i, n; num1)\n\t\tnum[i] = n;\n\t\n\tforeach(i, n; num2)\n\t\tnum[num1.length + i] = n;\n\t\n\tforeach(i, n; num3)\n\t\tnum[num1.length + num2.length + i] = n;\n\t\n\tsort(num);\n\t\n\tforeach(i, n; num)\n\t\tnum_sorted[i] = n;\n\t\n\treturn num_sorted;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\t\n\tlong[] temp = new long[num1.length + num2.length];\n\t\n\tlong i = 0;\n\tlong j = 0;\n\tlong k = 0;\n\t\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < num1.length)\n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num2.length)\n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\t\n\twhile(i < temp.length && j < num3.length)\n\t{\n\t\tif(temp[i] < num3[j])\n\t\t{\n\t\t\tresult[k] = temp[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[k] = num3[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < temp.length)\n\t{\n\t\tresult[k] = temp[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num3.length)\n\t{\n\t\tresult[k] = num3[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[3];\n\tlong[] index = new long[3];\n\tlong[] min = new long[3];\n\tlong[] max = new long[3];\n\tlong[] min_index = new long[3];\n\tlong[] max_index = new long[3];\n\tlong[] temp_index = new long[3];\n\tlong[] temp_min = new long[3];\n\tlong[] temp_max = new long[3];\n\tlong[] temp_min_index = new long[3];\n\tlong[] temp_max_index = new long[3];\n\t\n\tlong[] temp_min_index_ = new long[3];\n\tlong[] temp_max_index_ = new long[3];\n\t\n\tlong[] temp_min_index__ = new long[3];\n\tlong[] temp_max_index__ = new long[3];\n\t\n\tlong[] temp_min_index___ = new long[3];\n\tlong[] temp_max_index___ = new long[3];\n\t\n\tlong[] temp_min_index____ = new long[3];\n\tlong[] temp_max_index____ = new long[3];\n\t\n\tlong[] temp_min_index_____ = new long[3];\n\tlong[] temp_max_index_____ = new long[3];\n\t\n\tlong[] temp_min_index______ = new long[3];\n\tlong[] temp_max_index______ = new long[3];\n\t\n\tlong[] temp_min_index_______ = new long[3];\n\tlong[] temp_max_index_______ = new long[3];\n\t\n\tlong[] temp_min_index________ = new long[3];\n\tlong[] temp_max_index________ = new long[3];\n\t\n\tlong[] temp_min_index_________ = new long[3];\n\tlong[] temp_max_index_________ = new long[3];\n\t\n\tlong[] temp_min_index__________ = new long[3];\n\tlong[] temp_max_index__________ = new long[3];\n\t\n",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\tlong[] temp2 = new long[num1.length + num2.length + num3.length];\n\t\n\t// merge num1 and num2\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile (i < num1.length && j < num2.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile (i < num1.length) \n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile (j < num2.length) \n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\t// merge temp and num3\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\twhile (i < temp.length && j < num3.length) \n\t{\n\t\tif (temp[i] < num3[j]) \n\t\t{\n\t\t\ttemp2[k] = temp[i];\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ttemp2[k] = num3[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile (i < temp.length) \n\t{\n\t\ttemp2[k] = temp[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile (j < num3.length) \n\t{\n\t\ttemp2[k] = num3[j];\n\t\tj++;\n\t\t",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\tlong[] temp1 = new long[num1.length + num3.length];\n\tlong[] temp2 = new long[num2.length + num3.length];\n\t\n\ttemp = merge_sorted_list(num1, num2);\n\ttemp1 = merge_sorted_list(num1, num3);\n\ttemp2 = merge_sorted_list(num2, num3);\n\t\n\tresult = merge_sorted_list(temp, temp1);\n\tresult = merge_sorted_list(result, temp2);\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j] && num1[i] < num3[k]) \n\t\t{\n\t\t\tresult[l] = num1[i];\n\t\t\ti++;\n\t\t} \n\t\telse if (num2[j] < num1[i] && num2[j] < num3[k]) \n\t\t{\n\t\t\tresult[l] = num2[j];\n\t\t\tj++;\n\t\t} \n\t\telse if (num3[k] < num1[i] && num3[k] < num2[j]) \n\t\t{\n\t\t\tresult[l] = num3[k];\n\t\t\tk++;\n\t\t}\n\t\tl++;\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[3];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\ttemp[0] = num1[i];\n\t\ttemp[1] = num2[j];\n\t\ttemp[2] = num3[k];\n\t\tresult[l++] = temp.min;\n\t\tif (temp.min == num1[i]) \n\t\t{\n\t\t\ti++;\n\t\t}\n\t\telse if (temp.min == num2[j]) \n\t\t{\n\t\t\tj++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tk++;\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[l++] = num1[i++];\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[l++] = num2[j++];\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[l++] = num3[k++];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[3];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\ttemp[0] = num1[i];\n\t\ttemp[1] = num2[j];\n\t\ttemp[2] = num3[k];\n\t\ttemp.sort();\n\t\tresult[l] = temp[0];\n\t\tif (temp[0] == num1[i]) \n\t\t{\n\t\t\ti++;\n\t\t} \n\t\telse if (temp[0] == num2[j]) \n\t\t{\n\t\t\tj++;\n\t\t} \n\t\telse if (temp[0] == num3[k]) \n\t\t{\n\t\t\tk++;\n\t\t}\n\t\tl++;\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[3];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\ttemp[0] = num1[i];\n\t\ttemp[1] = num2[j];\n\t\ttemp[2] = num3[k];\n\t\ttemp.sort();\n\t\tresult[l] = temp[0];\n\t\tif (temp[0] == num1[i]) \n\t\t{\n\t\t\ti++;\n\t\t} \n\t\telse if (temp[0] == num2[j]) \n\t\t{\n\t\t\tj++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tk++;\n\t\t}\n\t\tl++;\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\t\n\tresult = num1 ~ num2 ~ num3;\n\t\n\tresult.sort();\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\t\n\tint i = 0, j = 0, k = 0, l = 0;\n\t\n\twhile(i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\tif(num1[i] < num3[k])\n\t\t\t{\n\t\t\t\tresult[l++] = num1[i++];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(num2[j] < num3[k])\n\t\t\t{\n\t\t\t\tresult[l++] = num2[j++];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t}\n\t\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\tresult[l++] = num1[i++];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[l++] = num2[j++];\n\t\t}\n\t}\n\t\n\twhile(i < num1.length && k < num3.length)\n\t{\n\t\tif(num1[i] < num3[k])\n\t\t{\n\t\t\tresult[l++] = num1[i++];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[l++] = num3[k++];\n\t\t}\n\t}\n\t\n\twhile(j < num2.length && k < num3.length)\n\t{\n\t\tif(num2[j] < num3[k])\n\t\t{\n\t\t\tresult[l++] = num2[",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[3];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\t\n\twhile(i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\ttemp[0] = num1[i];\n\t\ttemp[1] = num2[j];\n\t\ttemp[2] = num3[k];\n\t\t\n\t\tsort(temp);\n\t\t\n\t\tif(temp[0] == num1[i])\n\t\t{\n\t\t\tresult[l] = temp[0];\n\t\t\ti++;\n\t\t}\n\t\telse if(temp[0] == num2[j])\n\t\t{\n\t\t\tresult[l] = temp[0];\n\t\t\tj++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[l] = temp[0];\n\t\t\tk++;\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile(i < num1.length)\n\t{\n\t\tresult[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\t\n\twhile(j < num2.length)\n\t{\n\t\tresult[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\t\n\twhile(k < num3.length)\n\t{\n\t\tresult[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] merged_list = new long[num1.length + num2.length + num3.length];\n\tlong[] temp_list = new long[num1.length + num2.length];\n\tlong[] temp_list2 = new long[num1.length + num2.length + num3.length];\n\tlong[] temp_list3 = new long[num1.length + num2.length + num3.length];\n\t\n\t//merge first two lists\n\tfor (int i = 0; i < num1.length; i++)\n\t{\n\t\ttemp_list[i] = num1[i];\n\t}\n\tfor (int i = 0; i < num2.length; i++)\n\t{\n\t\ttemp_list[i + num1.length] = num2[i];\n\t}\n\t\n\t//sort the merged list\n\ttemp_list.sort();\n\t\n\t//merge the third list\n\tfor (int i = 0; i < temp_list.length; i++)\n\t{\n\t\ttemp_list2[i] = temp_list[i];\n\t}\n\tfor (int i = 0; i < num3.length; i++)\n\t{\n\t\ttemp_list2[i + temp_list.length] = num3[i];\n\t}\n\t\n\t//sort the merged list\n\ttemp_list2.sort();\n\t\n\t//remove duplicates\n\tint j = 0;\n\tfor (int i = 0; i < temp_list2.length; i++)\n\t{\n\t\tif (i == 0)\n\t\t{\n\t\t\ttemp_list3[j] = temp_list2[i];\n\t\t\tj++;\n\t\t}\n\t\telse if (temp_list2[i] != temp_list2[i - 1])\n\t\t{\n\t\t\ttemp_list3[j] = temp_list2[i];\n\t\t\tj++;\n\t\t}\n\t}\n\t\n\t//copy the list to the final merged list\n\tfor (int i = 0; i < temp_list3.length; i++)\n\t{\n\t\tmerged_list[",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\t\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < num1.length)\n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num2.length)\n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\t\n\twhile(i < temp.length && j < num3.length)\n\t{\n\t\tif(temp[i] < num3[j])\n\t\t{\n\t\t\tresult[k] = temp[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[k] = num3[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < temp.length)\n\t{\n\t\tresult[k] = temp[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num3.length)\n\t{\n\t\tresult[k] = num3[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tlong[] temp;\n\tlong[] temp2;\n\tlong[] temp3;\n\tlong[] temp4;\n\tlong[] temp5;\n\tlong[] temp6;\n\tlong[] temp7;\n\tlong[] temp8;\n\tlong[] temp9;\n\tlong[] temp10;\n\tlong[] temp11;\n\tlong[] temp12;\n\tlong[] temp13;\n\tlong[] temp14;\n\tlong[] temp15;\n\tlong[] temp16;\n\tlong[] temp17;\n\tlong[] temp18;\n\tlong[] temp19;\n\tlong[] temp20;\n\tlong[] temp21;\n\tlong[] temp22;\n\tlong[] temp23;\n\tlong[] temp24;\n\tlong[] temp25;\n\tlong[] temp26;\n\tlong[] temp27;\n\tlong[] temp28;\n\tlong[] temp29;\n\tlong[] temp30;\n\tlong[] temp31;\n\tlong[] temp32;\n\tlong[] temp33;\n\tlong[] temp34;\n\tlong[] temp35;\n\tlong[] temp36;\n\tlong[] temp37;\n\tlong[] temp38;\n\tlong[] temp39;\n\tlong[] temp40;\n\tlong[] temp41;\n\tlong[] temp42;\n\tlong[] temp43;\n\tlong[] temp44;\n\tlong[] temp45;\n\tlong[] temp46;\n\tlong[] temp47;\n\tlong[] temp48;\n\tlong[] temp49;\n\tlong[] temp50;\n\tlong[] temp51;\n\tlong[] temp52;\n\tlong[] temp53;\n\tlong[] temp54;\n\tlong[] temp55;\n\tlong[] temp56;\n\tlong[] temp57;\n\tlong[] temp58;\n\tlong[] temp59;\n\tlong[] temp60;\n\tlong[] temp61;\n\tlong[] temp62;\n\tlong[] temp63;\n\tlong[] temp64;\n\tlong[] temp65;\n\tlong[] temp66;\n\tlong[] temp67;\n\tlong[] temp68;\n\tlong[] temp69;\n\tlong[] temp70;\n\tlong[] temp71;\n\tlong[] temp72;\n",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\t\n\t// merge num1 and num2\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile (i < num1.length && j < num2.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile (i < num1.length) \n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile (j < num2.length) \n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\t// merge temp and num3\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\twhile (i < temp.length && j < num3.length) \n\t{\n\t\tif (temp[i] < num3[j]) \n\t\t{\n\t\t\tresult[k] = temp[i];\n\t\t\ti++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult[k] = num3[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile (i < temp.length) \n\t{\n\t\tresult[k] = temp[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile (j < num3.length) \n\t{\n\t\tresult[k] = num3[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tlong[] temp;\n\tlong[] temp2;\n\tlong[] temp3;\n\tlong[] temp4;\n\tlong[] temp5;\n\tlong[] temp6;\n\tlong[] temp7;\n\tlong[] temp8;\n\tlong[] temp9;\n\tlong[] temp10;\n\tlong[] temp11;\n\tlong[] temp12;\n\tlong[] temp13;\n\tlong[] temp14;\n\tlong[] temp15;\n\tlong[] temp16;\n\tlong[] temp17;\n\tlong[] temp18;\n\tlong[] temp19;\n\tlong[] temp20;\n\tlong[] temp21;\n\tlong[] temp22;\n\tlong[] temp23;\n\tlong[] temp24;\n\tlong[] temp25;\n\tlong[] temp26;\n\tlong[] temp27;\n\tlong[] temp28;\n\tlong[] temp29;\n\tlong[] temp30;\n\tlong[] temp31;\n\tlong[] temp32;\n\tlong[] temp33;\n\tlong[] temp34;\n\tlong[] temp35;\n\tlong[] temp36;\n\tlong[] temp37;\n\tlong[] temp38;\n\tlong[] temp39;\n\tlong[] temp40;\n\tlong[] temp41;\n\tlong[] temp42;\n\tlong[] temp43;\n\tlong[] temp44;\n\tlong[] temp45;\n\tlong[] temp46;\n\tlong[] temp47;\n\tlong[] temp48;\n\tlong[] temp49;\n\tlong[] temp50;\n\tlong[] temp51;\n\tlong[] temp52;\n\tlong[] temp53;\n\tlong[] temp54;\n\tlong[] temp55;\n\tlong[] temp56;\n\tlong[] temp57;\n\tlong[] temp58;\n\tlong[] temp59;\n\tlong[] temp60;\n\tlong[] temp61;\n\tlong[] temp62;\n\tlong[] temp63;\n\tlong[] temp64;\n\tlong[] temp65;\n\tlong[] temp66;\n\tlong[] temp67;\n\tlong[] temp68;\n\tlong[] temp69;\n\tlong[] temp70;\n\tlong[] temp71;\n\tlong[] temp72;\n",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\t\n\tlong[] temp = new long[num1.length + num2.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\t\n\twhile (i < num1.length && j < num2.length)\n\t{\n\t\tif (num1[i] < num2[j])\n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile (i < num1.length)\n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile (j < num2.length)\n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\t\n\twhile (i < temp.length && j < num3.length)\n\t{\n\t\tif (temp[i] < num3[j])\n\t\t{\n\t\t\tresult[k] = temp[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[k] = num3[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile (i < temp.length)\n\t{\n\t\tresult[k] = temp[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile (j < num3.length)\n\t{\n\t\tresult[k] = num3[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = [];\n\tlong[] temp = [];\n\t\n\ttemp ~= num1;\n\ttemp ~= num2;\n\ttemp ~= num3;\n\t\n\tresult = temp.sort();\n\t\n\treturn result;\n}",
    "{\n\tauto nums = num1 ~ num2 ~ num3;\n\tnums.sort;\n\treturn nums;\n}",
    "{\n\tlong[] result;\n\tresult.length = num1.length + num2.length + num3.length;\n\t\n\tint i = 0, j = 0, k = 0, l = 0;\n\t\n\twhile(i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\tif(num1[i] < num3[k])\n\t\t\t{\n\t\t\t\tresult[l] = num1[i];\n\t\t\t\ti++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(num2[j] < num3[k])\n\t\t\t{\n\t\t\t\tresult[l] = num2[j];\n\t\t\t\tj++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile(i < num1.length)\n\t{\n\t\tresult[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\t\n\twhile(j < num2.length)\n\t{\n\t\tresult[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\t\n\twhile(k < num3.length)\n\t{\n\t\tresult[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\t\n\tlong[] a = num1;\n\tlong[] b = num2;\n\tlong[] c = num3;\n\t\n\tlong[] temp = new long[3];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\t\n\tint m = 0;\n\t\n\twhile (i < a.length && j < b.length && k < c.length) \n\t{\n\t\ttemp[0] = a[i];\n\t\ttemp[1] = b[j];\n\t\ttemp[2] = c[k];\n\t\t\n\t\tlong min = minElement(temp);\n\t\t\n\t\tif (min == a[i]) \n\t\t{\n\t\t\tresult[m] = a[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (min == b[j]) \n\t\t{\n\t\t\tresult[m] = b[j];\n\t\t\tj++;\n\t\t}\n\t\telse if (min == c[k]) \n\t\t{\n\t\t\tresult[m] = c[k];\n\t\t\tk++;\n\t\t}\n\t\tm++;\n\t}\n\t\n\twhile (i < a.length) \n\t{\n\t\tresult[m] = a[i];\n\t\ti++;\n\t\tm++;\n\t}\n\t\n\twhile (j < b.length) \n\t{\n\t\tresult[m] = b[j];\n\t\tj++;\n\t\tm++;\n\t}\n\t\n\twhile (k < c.length) \n\t{\n\t\tresult[m] = c[k];\n\t\tk++;\n\t\tm++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] nums = new long[num1.length + num2.length + num3.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\twhile(i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\tif(num1[i] < num3[k])\n\t\t\t{\n\t\t\t\tnums[l] = num1[i];\n\t\t\t\ti++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tnums[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(num2[j] < num3[k])\n\t\t\t{\n\t\t\t\tnums[l] = num2[j];\n\t\t\t\tj++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tnums[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\tl++;\n\t}\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\tnums[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnums[l] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tl++;\n\t}\n\twhile(i < num1.length && k < num3.length)\n\t{\n\t\tif(num1[i] < num3[k])\n\t\t{\n\t\t\tnums[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnums[l] = num3[k];\n\t\t\tk++;\n\t\t}\n\t\t",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0, l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num1[i++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num2[j++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[l++] = num1[i++];\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[l++] = num2[j++];\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[l++] = num3[k++];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\tlong[] temp2 = new long[num1.length + num2.length + num3.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\t\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < num1.length)\n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num2.length)\n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\t\n\twhile(i < temp.length && j < num3.length)\n\t{\n\t\tif(temp[i] < num3[j])\n\t\t{\n\t\t\ttemp2[k] = temp[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp2[k] = num3[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < temp.length)\n\t{\n\t\ttemp2[k] = temp[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num3.length)\n\t{\n\t\ttemp2[k] = num3[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\treturn temp2;\n}",
    "{\n\tlong[] result;\n\tlong[] temp;\n\tlong[] temp1;\n\tlong[] temp2;\n\tlong[] temp3;\n\tlong[] temp4;\n\tlong[] temp5;\n\tlong[] temp6;\n\tlong[] temp7;\n\tlong[] temp8;\n\tlong[] temp9;\n\tlong[] temp10;\n\tlong[] temp11;\n\tlong[] temp12;\n\tlong[] temp13;\n\tlong[] temp14;\n\tlong[] temp15;\n\tlong[] temp16;\n\tlong[] temp17;\n\tlong[] temp18;\n\tlong[] temp19;\n\tlong[] temp20;\n\tlong[] temp21;\n\tlong[] temp22;\n\tlong[] temp23;\n\tlong[] temp24;\n\tlong[] temp25;\n\tlong[] temp26;\n\tlong[] temp27;\n\tlong[] temp28;\n\tlong[] temp29;\n\tlong[] temp30;\n\tlong[] temp31;\n\tlong[] temp32;\n\tlong[] temp33;\n\tlong[] temp34;\n\tlong[] temp35;\n\tlong[] temp36;\n\tlong[] temp37;\n\tlong[] temp38;\n\tlong[] temp39;\n\tlong[] temp40;\n\tlong[] temp41;\n\tlong[] temp42;\n\tlong[] temp43;\n\tlong[] temp44;\n\tlong[] temp45;\n\tlong[] temp46;\n\tlong[] temp47;\n\tlong[] temp48;\n\tlong[] temp49;\n\tlong[] temp50;\n\tlong[] temp51;\n\tlong[] temp52;\n\tlong[] temp53;\n\tlong[] temp54;\n\tlong[] temp55;\n\tlong[] temp56;\n\tlong[] temp57;\n\tlong[] temp58;\n\tlong[] temp59;\n\tlong[] temp60;\n\tlong[] temp61;\n\tlong[] temp62;\n\tlong[] temp63;\n\tlong[] temp64;\n\tlong[] temp65;\n\tlong[] temp66;\n\tlong[] temp67;\n\tlong[] temp68;\n\tlong[] temp69;\n\tlong[] temp70;\n\tlong[] temp71;\n",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\t\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t\tk++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t\tk++;\n\t\t}\n\t}\n\t\n\twhile(i < num1.length)\n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num2.length)\n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\t\n\twhile(i < temp.length && j < num3.length)\n\t{\n\t\tif(temp[i] < num3[j])\n\t\t{\n\t\t\tresult[k] = temp[i];\n\t\t\ti++;\n\t\t\tk++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[k] = num3[j];\n\t\t\tj++;\n\t\t\tk++;\n\t\t}\n\t}\n\t\n\twhile(i < temp.length)\n\t{\n\t\tresult[k] = temp[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num3.length)\n\t{\n\t\tresult[k] = num3[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\twhile(i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif(num1[i] < num2[j] && num1[i] < num3[k]) \n\t\t{\n\t\t\tresult[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if(num2[j] < num1[i] && num2[j] < num3[k]) \n\t\t{\n\t\t\tresult[l] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult[l] = num3[k];\n\t\t\tk++;\n\t\t}\n\t\tl++;\n\t}\n\twhile(i < num1.length) \n\t{\n\t\tresult[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\twhile(j < num2.length) \n\t{\n\t\tresult[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\twhile(k < num3.length) \n\t{\n\t\tresult[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0, l = 0;\n\twhile(i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif(num1[i] < num2[j] && num1[i] < num3[k]) \n\t\t{\n\t\t\tresult[l++] = num1[i++];\n\t\t}\n\t\telse if(num2[j] < num1[i] && num2[j] < num3[k]) \n\t\t{\n\t\t\tresult[l++] = num2[j++];\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult[l++] = num3[k++];\n\t\t}\n\t}\n\twhile(i < num1.length) \n\t{\n\t\tresult[l++] = num1[i++];\n\t}\n\twhile(j < num2.length) \n\t{\n\t\tresult[l++] = num2[j++];\n\t}\n\twhile(k < num3.length) \n\t{\n\t\tresult[l++] = num3[k++];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\t\n\tresult = num1.dup;\n\tresult ~= num2;\n\tresult ~= num3;\n\t\n\tresult.sort;\n\t\n\treturn result;\n}",
    "{\n\tlong[] nums = new long[num1.length + num2.length + num3.length];\n\tlong[] nums_sorted = new long[nums.length];\n\t\n\tint i = 0;\n\tforeach(long n; num1)\n\t{\n\t\tnums[i] = n;\n\t\ti++;\n\t}\n\t\n\tforeach(long n; num2)\n\t{\n\t\tnums[i] = n;\n\t\ti++;\n\t}\n\t\n\tforeach(long n; num3)\n\t{\n\t\tnums[i] = n;\n\t\ti++;\n\t}\n\t\n\tnums_sorted = sort(nums);\n\t\n\treturn nums_sorted;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\t\n\twhile (i < num1.length && j < num2.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile (i < num1.length) \n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile (j < num2.length) \n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\t\n\twhile (i < temp.length && j < num3.length) \n\t{\n\t\tif (temp[i] < num3[j]) \n\t\t{\n\t\t\tresult[k] = temp[i];\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult[k] = num3[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile (i < temp.length) \n\t{\n\t\tresult[k] = temp[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile (j < num3.length) \n\t{\n\t\tresult[k] = num3[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[3];\n\t\n\tforeach(i; 0 .. num1.length)\n\t{\n\t\tresult[i] = num1[i];\n\t}\n\t\n\tforeach(i; 0 .. num2.length)\n\t{\n\t\tresult[i + num1.length] = num2[i];\n\t}\n\t\n\tforeach(i; 0 .. num3.length)\n\t{\n\t\tresult[i + num1.length + num2.length] = num3[i];\n\t}\n\t\n\tforeach(i; 0 .. result.length)\n\t{\n\t\tforeach(j; i + 1 .. result.length)\n\t\t{\n\t\t\tif(result[i] > result[j])\n\t\t\t{\n\t\t\t\ttemp[0] = result[i];\n\t\t\t\tresult[i] = result[j];\n\t\t\t\tresult[j] = temp[0];\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\t\n\tint i = 0, j = 0, k = 0, l = 0;\n\t\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t\ttemp[k++] = num1[i++];\n\t\telse\n\t\t\ttemp[k++] = num2[j++];\n\t}\n\t\n\twhile(i < num1.length)\n\t\ttemp[k++] = num1[i++];\n\t\t\n\twhile(j < num2.length)\n\t\ttemp[k++] = num2[j++];\n\t\t\n\ti = 0;\n\tj = 0;\n\t\n\twhile(i < temp.length && j < num3.length)\n\t{\n\t\tif(temp[i] < num3[j])\n\t\t\tresult[l++] = temp[i++];\n\t\telse\n\t\t\tresult[l++] = num3[j++];\n\t}\n\t\n\twhile(i < temp.length)\n\t\tresult[l++] = temp[i++];\n\t\t\n\twhile(j < num3.length)\n\t\tresult[l++] = num3[j++];\n\t\t\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tlong[] temp;\n\tlong[] temp2;\n\tlong[] temp3;\n\tlong[] temp4;\n\tlong[] temp5;\n\tlong[] temp6;\n\tlong[] temp7;\n\tlong[] temp8;\n\tlong[] temp9;\n\tlong[] temp10;\n\tlong[] temp11;\n\tlong[] temp12;\n\tlong[] temp13;\n\tlong[] temp14;\n\tlong[] temp15;\n\tlong[] temp16;\n\tlong[] temp17;\n\tlong[] temp18;\n\tlong[] temp19;\n\tlong[] temp20;\n\tlong[] temp21;\n\tlong[] temp22;\n\tlong[] temp23;\n\tlong[] temp24;\n\tlong[] temp25;\n\tlong[] temp26;\n\tlong[] temp27;\n\tlong[] temp28;\n\tlong[] temp29;\n\tlong[] temp30;\n\tlong[] temp31;\n\tlong[] temp32;\n\tlong[] temp33;\n\tlong[] temp34;\n\tlong[] temp35;\n\tlong[] temp36;\n\tlong[] temp37;\n\tlong[] temp38;\n\tlong[] temp39;\n\tlong[] temp40;\n\tlong[] temp41;\n\tlong[] temp42;\n\tlong[] temp43;\n\tlong[] temp44;\n\tlong[] temp45;\n\tlong[] temp46;\n\tlong[] temp47;\n\tlong[] temp48;\n\tlong[] temp49;\n\tlong[] temp50;\n\tlong[] temp51;\n\tlong[] temp52;\n\tlong[] temp53;\n\tlong[] temp54;\n\tlong[] temp55;\n\tlong[] temp56;\n\tlong[] temp57;\n\tlong[] temp58;\n\tlong[] temp59;\n\tlong[] temp60;\n\tlong[] temp61;\n\tlong[] temp62;\n\tlong[] temp63;\n\tlong[] temp64;\n\tlong[] temp65;\n\tlong[] temp66;\n\tlong[] temp67;\n\tlong[] temp68;\n\tlong[] temp69;\n\tlong[] temp70;\n\tlong[] temp71;\n\tlong[] temp72;\n",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[3];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\twhile(i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\ttemp[0] = num1[i];\n\t\ttemp[1] = num2[j];\n\t\ttemp[2] = num3[k];\n\t\ttemp.sort();\n\t\tresult[l] = temp[0];\n\t\tif(temp[0] == num1[i])\n\t\t\ti++;\n\t\telse if(temp[0] == num2[j])\n\t\t\tj++;\n\t\telse\n\t\t\tk++;\n\t\tl++;\n\t}\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\ttemp[0] = num1[i];\n\t\ttemp[1] = num2[j];\n\t\ttemp.sort();\n\t\tresult[l] = temp[0];\n\t\tif(temp[0] == num1[i])\n\t\t\ti++;\n\t\telse\n\t\t\tj++;\n\t\tl++;\n\t}\n\twhile(i < num1.length && k < num3.length)\n\t{\n\t\ttemp[0] = num1[i];\n\t\ttemp[1] = num3[k];\n\t\ttemp.sort();\n\t\tresult[l] = temp[0];\n\t\tif(temp[0] == num1[i])\n\t\t\ti++;\n\t\telse\n\t\t\tk++;\n\t\tl++;\n\t}\n\twhile(j < num2.length && k < num3.length)\n\t{\n\t\ttemp[0] = num2[j];\n\t\ttemp[1] = num3[k];\n\t\ttemp.sort();\n\t\tresult[l] = temp[0];\n\t\tif(temp[0] == num2[j])\n\t\t\tj++;\n\t\t",
    "{\n\tlong[] result;\n\tlong[] temp;\n\t\n\tresult = num1 ~ num2 ~ num3;\n\ttemp = result.dup;\n\t\n\tsort(result);\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0, l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j] && num1[i] < num3[k]) \n\t\t{\n\t\t\tresult[l++] = num1[i++];\n\t\t} \n\t\telse if (num2[j] < num1[i] && num2[j] < num3[k]) \n\t\t{\n\t\t\tresult[l++] = num2[j++];\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult[l++] = num3[k++];\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[l++] = num1[i++];\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[l++] = num2[j++];\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[l++] = num3[k++];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length + num3.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\t\n\twhile (i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\tif (num1[i] <= num2[j] && num1[i] <= num3[k])\n\t\t{\n\t\t\ttemp[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (num2[j] <= num1[i] && num2[j] <= num3[k])\n\t\t{\n\t\t\ttemp[l] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[l] = num3[k];\n\t\t\tk++;\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile (i < num1.length && j < num2.length)\n\t{\n\t\tif (num1[i] <= num2[j])\n\t\t{\n\t\t\ttemp[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[l] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile (i < num1.length && k < num3.length)\n\t{\n\t\tif (num1[i] <= num3[k])\n\t\t{\n\t\t\ttemp[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[l] = num3[k];\n\t\t\tk++;\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile (j < num2.length && k < num3.length)\n\t{\n\t\tif (num2[j] <= num",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[3];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\twhile(i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\ttemp[0] = num1[i];\n\t\ttemp[1] = num2[j];\n\t\ttemp[2] = num3[k];\n\t\ttemp.sort();\n\t\tresult[l] = temp[0];\n\t\tif(temp[0] == num1[i])\n\t\t{\n\t\t\ti++;\n\t\t}\n\t\telse if(temp[0] == num2[j])\n\t\t{\n\t\t\tj++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tk++;\n\t\t}\n\t\tl++;\n\t}\n\twhile(i < num1.length)\n\t{\n\t\tresult[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\twhile(j < num2.length)\n\t{\n\t\tresult[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\twhile(k < num3.length)\n\t{\n\t\tresult[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\t\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < num1.length)\n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num2.length)\n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\t\n\twhile(i < temp.length && j < num3.length)\n\t{\n\t\tif(temp[i] < num3[j])\n\t\t{\n\t\t\tresult[k] = temp[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[k] = num3[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < temp.length)\n\t{\n\t\tresult[k] = temp[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num3.length)\n\t{\n\t\tresult[k] = num3[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] tmp = new long[3];\n\tlong[] tmp_index = new long[3];\n\tlong[] index = new long[3];\n\tlong[] min_index = new long[3];\n\tlong min_value = 0;\n\tlong min_value_index = 0;\n\tlong i = 0;\n\tlong j = 0;\n\tlong k = 0;\n\tlong l = 0;\n\t\n\tfor (i = 0; i < num1.length; i++)\n\t{\n\t\tresult[i] = num1[i];\n\t}\n\t\n\tfor (i = 0; i < num2.length; i++)\n\t{\n\t\tresult[i + num1.length] = num2[i];\n\t}\n\t\n\tfor (i = 0; i < num3.length; i++)\n\t{\n\t\tresult[i + num1.length + num2.length] = num3[i];\n\t}\n\t\n\tfor (i = 0; i < 3; i++)\n\t{\n\t\ttmp[i] = result[i];\n\t\ttmp_index[i] = i;\n\t\tindex[i] = i;\n\t}\n\t\n\tfor (i = 0; i < 3; i++)\n\t{\n\t\tmin_value = tmp[i];\n\t\tmin_value_index = i;\n\t\tfor (j = i; j < 3; j++)\n\t\t{\n\t\t\tif (tmp[j] < min_value)\n\t\t\t{\n\t\t\t\tmin_value = tmp[j];\n\t\t\t\tmin_value_index = j;\n\t\t\t}\n\t\t}\n\t\t\n\t\ttmp[min_value_index] = tmp[i];\n\t\ttmp[i] = min_value;\n\t\t\n\t\tmin_index[i] = tmp_index[min_value_index];\n\t\ttmp_index[min_value_index] = tmp_index[i];\n\t\ttmp_index[i] = min_index[i];",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] tmp = new long[3];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\twhile(i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\ttmp[0] = num1[i];\n\t\ttmp[1] = num2[j];\n\t\ttmp[2] = num3[k];\n\t\ttmp.sort();\n\t\tresult[l] = tmp[0];\n\t\tif(tmp[0] == num1[i])\n\t\t\ti++;\n\t\telse if(tmp[0] == num2[j])\n\t\t\tj++;\n\t\telse\n\t\t\tk++;\n\t\tl++;\n\t}\n\tif(i == num1.length)\n\t{\n\t\twhile(j < num2.length && k < num3.length)\n\t\t{\n\t\t\ttmp[0] = num2[j];\n\t\t\ttmp[1] = num3[k];\n\t\t\ttmp.sort();\n\t\t\tresult[l] = tmp[0];\n\t\t\tif(tmp[0] == num2[j])\n\t\t\t\tj++;\n\t\t\telse\n\t\t\t\tk++;\n\t\t\tl++;\n\t\t}\n\t\tif(j == num2.length)\n\t\t{\n\t\t\twhile(k < num3.length)\n\t\t\t{\n\t\t\t\tresult[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t\tl++;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\twhile(j < num2.length)\n\t\t\t{\n\t\t\t\tresult[l] = num2[j];\n\t\t\t\tj++;\n\t\t\t\tl++;\n\t\t\t}\n\t\t}\n\t}\n\telse if(j == num2.length)\n\t{\n\t\twhile(i < num1.length && k < num",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\t\n\tint i = 0, j = 0, k = 0, l = 0;\n\t\n\twhile(i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\tif(num1[i] < num2[j] && num1[i] < num3[k])\n\t\t{\n\t\t\tresult[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if(num2[j] < num1[i] && num2[j] < num3[k])\n\t\t{\n\t\t\tresult[l] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[l] = num3[k];\n\t\t\tk++;\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile(i < num1.length)\n\t{\n\t\tresult[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\t\n\twhile(j < num2.length)\n\t{\n\t\tresult[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\t\n\twhile(k < num3.length)\n\t{\n\t\tresult[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0, l = 0;\n\twhile(i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\tif(num1[i] < num3[k])\n\t\t\t{\n\t\t\t\tresult[l] = num1[i];\n\t\t\t\ti++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(num2[j] < num3[k])\n\t\t\t{\n\t\t\t\tresult[l] = num2[j];\n\t\t\t\tj++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\tl++;\n\t}\n\twhile(i < num1.length)\n\t{\n\t\tresult[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\twhile(j < num2.length)\n\t{\n\t\tresult[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\twhile(k < num3.length)\n\t{\n\t\tresult[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tlong[] nums = [num1, num2, num3];\n\tforeach(long[] num; nums)\n\t{\n\t\tresult ~= num;\n\t}\n\tresult.sort;\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[3];\n\tlong[] temp_index = new long[3];\n\tlong[] temp_length = new long[3];\n\tlong[] temp_length_index = new long[3];\n\tlong[] temp_length_index_value = new long[3];\n\tlong[] temp_length_index_value_index = new long[3];\n\tlong[] temp_length_index_value_index_value = new long[3];\n\tlong[] temp_length_index_value_index_value_index = new long[3];\n\tlong[] temp_length_index_value_index_value_index_value = new long[3];\n\tlong[] temp_length_index_value_index_value_index_value_index = new long[3];\n\tlong[] temp_length_index_value_index_value_index_value_index_value = new long[3];\n\tlong[] temp_length_index_value_index_value_index_value_index_value_index = new long[3];\n\tlong[] temp_length_index_value_index_value_index_value_index_value_index_value = new long[3];\n\tlong[] temp_length_index_value_index_value_index_value_index_value_index_value_index = new long[3];\n\tlong[] temp_length_index_value_index_value_index_value_index_value_index_value_index_value = new long[3];\n\tlong[] temp_length_index_value_index_value_index_value_index_value_index_value_index_value_index = new long[3];\n\tlong[] temp_length_index_value_index_value_index_value_index_value_index_value_index_value_index_value = new long[3];\n\tlong[] temp_length_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index = new long[3];\n\tlong[] temp_length_index_value_index_",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length + num3.length];\n\tlong[] temp2 = new long[num1.length + num2.length + num3.length];\n\tlong[] temp3 = new long[num1.length + num2.length + num3.length];\n\tlong[] temp4 = new long[num1.length + num2.length + num3.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\t\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t\tk++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t\tk++;\n\t\t}\n\t}\n\t\n\twhile(i < num1.length)\n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num2.length)\n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\t\n\twhile(i < temp.length && j < num3.length)\n\t{\n\t\tif(temp[i] < num3[j])\n\t\t{\n\t\t\ttemp2[k] = temp[i];\n\t\t\ti++;\n\t\t\tk++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp2[k] = num3[j];\n\t\t\tj++;\n\t\t\tk++;\n\t\t}\n\t}\n\t\n\twhile(i < temp.length)\n\t{\n\t\ttemp2[k] = temp[",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] tmp = new long[3];\n\tint i = 0, j = 0, k = 0, l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\ttmp[0] = num1[i];\n\t\ttmp[1] = num2[j];\n\t\ttmp[2] = num3[k];\n\t\ttmp.sort;\n\t\tresult[l++] = tmp[0];\n\t\tif (tmp[0] == num1[i])\n\t\t\ti++;\n\t\telse if (tmp[0] == num2[j])\n\t\t\tj++;\n\t\telse\n\t\t\tk++;\n\t}\n\twhile (i < num1.length)\n\t\tresult[l++] = num1[i++];\n\twhile (j < num2.length)\n\t\tresult[l++] = num2[j++];\n\twhile (k < num3.length)\n\t\tresult[l++] = num3[k++];\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\t\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num1[i++];\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num2[j++];\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t}\n\t\n\twhile (i < num1.length && j < num2.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tresult[l++] = num1[i++];\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult[l++] = num2[j++];\n\t\t}\n\t}\n\t\n\twhile (i < num1.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num3[k]) \n\t\t{\n\t\t\tresult[l++] = num1[i++];\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult[l++] = num3[k++];\n\t\t}\n\t}\n\t\n\twhile (j < num2.length && k < num3.length) \n\t{\n\t\tif (num2[j]",
    "{\n\tlong[] result = [];\n\t\n\tforeach(n; num1)\n\t{\n\t\tresult ~= n;\n\t}\n\t\n\tforeach(n; num2)\n\t{\n\t\tresult ~= n;\n\t}\n\t\n\tforeach(n; num3)\n\t{\n\t\tresult ~= n;\n\t}\n\t\n\tresult.sort;\n\t\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tlong[] temp;\n\tlong[] temp1;\n\tlong[] temp2;\n\tlong[] temp3;\n\tlong[] temp4;\n\tlong[] temp5;\n\tlong[] temp6;\n\tlong[] temp7;\n\tlong[] temp8;\n\tlong[] temp9;\n\tlong[] temp10;\n\tlong[] temp11;\n\tlong[] temp12;\n\tlong[] temp13;\n\tlong[] temp14;\n\tlong[] temp15;\n\tlong[] temp16;\n\tlong[] temp17;\n\tlong[] temp18;\n\tlong[] temp19;\n\tlong[] temp20;\n\tlong[] temp21;\n\tlong[] temp22;\n\tlong[] temp23;\n\tlong[] temp24;\n\tlong[] temp25;\n\tlong[] temp26;\n\tlong[] temp27;\n\tlong[] temp28;\n\tlong[] temp29;\n\tlong[] temp30;\n\tlong[] temp31;\n\tlong[] temp32;\n\tlong[] temp33;\n\tlong[] temp34;\n\tlong[] temp35;\n\tlong[] temp36;\n\tlong[] temp37;\n\tlong[] temp38;\n\tlong[] temp39;\n\tlong[] temp40;\n\tlong[] temp41;\n\tlong[] temp42;\n\tlong[] temp43;\n\tlong[] temp44;\n\tlong[] temp45;\n\tlong[] temp46;\n\tlong[] temp47;\n\tlong[] temp48;\n\tlong[] temp49;\n\tlong[] temp50;\n\tlong[] temp51;\n\tlong[] temp52;\n\tlong[] temp53;\n\tlong[] temp54;\n\tlong[] temp55;\n\tlong[] temp56;\n\tlong[] temp57;\n\tlong[] temp58;\n\tlong[] temp59;\n\tlong[] temp60;\n\tlong[] temp61;\n\tlong[] temp62;\n\tlong[] temp63;\n\tlong[] temp64;\n\tlong[] temp65;\n\tlong[] temp66;\n\tlong[] temp67;\n\tlong[] temp68;\n\tlong[] temp69;\n\tlong[] temp70;\n\tlong[] temp71;\n",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[3];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\twhile(i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\ttemp[0] = num1[i];\n\t\ttemp[1] = num2[j];\n\t\ttemp[2] = num3[k];\n\t\ttemp.sort();\n\t\tresult[l] = temp[0];\n\t\tif(temp[0] == num1[i])\n\t\t{\n\t\t\ti++;\n\t\t}\n\t\telse if(temp[0] == num2[j])\n\t\t{\n\t\t\tj++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tk++;\n\t\t}\n\t\tl++;\n\t}\n\twhile(i < num1.length)\n\t{\n\t\tresult[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\twhile(j < num2.length)\n\t{\n\t\tresult[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\twhile(k < num3.length)\n\t{\n\t\tresult[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0, l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num1[i++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num2[j++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[l++] = num1[i++];\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[l++] = num2[j++];\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[l++] = num3[k++];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tlong[] temp;\n\tlong[] temp1;\n\tlong[] temp2;\n\tlong[] temp3;\n\tlong[] temp4;\n\tlong[] temp5;\n\tlong[] temp6;\n\tlong[] temp7;\n\tlong[] temp8;\n\tlong[] temp9;\n\tlong[] temp10;\n\tlong[] temp11;\n\tlong[] temp12;\n\tlong[] temp13;\n\tlong[] temp14;\n\tlong[] temp15;\n\tlong[] temp16;\n\tlong[] temp17;\n\tlong[] temp18;\n\tlong[] temp19;\n\tlong[] temp20;\n\tlong[] temp21;\n\tlong[] temp22;\n\tlong[] temp23;\n\tlong[] temp24;\n\tlong[] temp25;\n\tlong[] temp26;\n\tlong[] temp27;\n\tlong[] temp28;\n\tlong[] temp29;\n\tlong[] temp30;\n\tlong[] temp31;\n\tlong[] temp32;\n\tlong[] temp33;\n\tlong[] temp34;\n\tlong[] temp35;\n\tlong[] temp36;\n\tlong[] temp37;\n\tlong[] temp38;\n\tlong[] temp39;\n\tlong[] temp40;\n\tlong[] temp41;\n\tlong[] temp42;\n\tlong[] temp43;\n\tlong[] temp44;\n\tlong[] temp45;\n\tlong[] temp46;\n\tlong[] temp47;\n\tlong[] temp48;\n\tlong[] temp49;\n\tlong[] temp50;\n\tlong[] temp51;\n\tlong[] temp52;\n\tlong[] temp53;\n\tlong[] temp54;\n\tlong[] temp55;\n\tlong[] temp56;\n\tlong[] temp57;\n\tlong[] temp58;\n\tlong[] temp59;\n\tlong[] temp60;\n\tlong[] temp61;\n\tlong[] temp62;\n\tlong[] temp63;\n\tlong[] temp64;\n\tlong[] temp65;\n\tlong[] temp66;\n\tlong[] temp67;\n\tlong[] temp68;\n\tlong[] temp69;\n\tlong[] temp70;\n\tlong[] temp71;\n",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0, l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num1[i++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num2[j++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[l++] = num1[i++];\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[l++] = num2[j++];\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[l++] = num3[k++];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] merged_list = new long[num1.length + num2.length + num3.length];\n\tlong i = 0, j = 0, k = 0, l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tmerged_list[l++] = num1[i++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tmerged_list[l++] = num3[k++];\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tmerged_list[l++] = num2[j++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tmerged_list[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tmerged_list[l++] = num1[i++];\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tmerged_list[l++] = num2[j++];\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tmerged_list[l++] = num3[k++];\n\t}\n\treturn merged_list;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[3];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint index = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\ttemp[0] = num1[i];\n\t\ttemp[1] = num2[j];\n\t\ttemp[2] = num3[k];\n\t\ttemp.sort();\n\t\tresult[index++] = temp[0];\n\t\tif (temp[0] == num1[i])\n\t\t\ti++;\n\t\telse if (temp[0] == num2[j])\n\t\t\tj++;\n\t\telse\n\t\t\tk++;\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[index++] = num1[i++];\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[index++] = num2[j++];\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[index++] = num3[k++];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\t\n\tint i = 0, j = 0, k = 0, l = 0;\n\t\n\twhile (i < num1.length && j < num2.length) {\n\t\tif (num1[i] < num2[j]) {\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t} else {\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile (i < num1.length) {\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile (j < num2.length) {\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\t\n\twhile (i < temp.length && j < num3.length) {\n\t\tif (temp[i] < num3[j]) {\n\t\t\tresult[k] = temp[i];\n\t\t\ti++;\n\t\t} else {\n\t\t\tresult[k] = num3[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile (i < temp.length) {\n\t\tresult[k] = temp[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile (j < num3.length) {\n\t\tresult[k] = num3[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] nums = [num1, num2, num3];\n\tlong[] indices = [0, 0, 0];\n\t\n\tforeach(i; 0 .. result.length) \n\t{\n\t\tlong min_index = 0;\n\t\tlong min_value = nums[0][indices[0]];\n\t\tforeach(j; 1 .. nums.length) \n\t\t{\n\t\t\tif(indices[j] < nums[j].length && nums[j][indices[j]] < min_value) \n\t\t\t{\n\t\t\t\tmin_index = j;\n\t\t\t\tmin_value = nums[j][indices[j]];\n\t\t\t}\n\t\t}\n\t\tresult[i] = min_value;\n\t\tindices[min_index]++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[3];\n\tauto i = 0;\n\tauto j = 0;\n\tauto k = 0;\n\tauto l = 0;\n\twhile(i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\ttemp[0] = num1[i];\n\t\ttemp[1] = num2[j];\n\t\ttemp[2] = num3[k];\n\t\tsort(temp);\n\t\tresult[l] = temp[0];\n\t\tif(temp[0] == num1[i])\n\t\t\ti++;\n\t\telse if(temp[0] == num2[j])\n\t\t\tj++;\n\t\telse\n\t\t\tk++;\n\t\tl++;\n\t}\n\twhile(i < num1.length)\n\t{\n\t\tresult[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\twhile(j < num2.length)\n\t{\n\t\tresult[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\twhile(k < num3.length)\n\t{\n\t\tresult[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tlong[] temp;\n\tlong[] temp2;\n\tlong[] temp3;\n\tlong[] temp4;\n\tlong[] temp5;\n\tlong[] temp6;\n\tlong[] temp7;\n\tlong[] temp8;\n\tlong[] temp9;\n\tlong[] temp10;\n\tlong[] temp11;\n\tlong[] temp12;\n\tlong[] temp13;\n\tlong[] temp14;\n\tlong[] temp15;\n\tlong[] temp16;\n\tlong[] temp17;\n\tlong[] temp18;\n\tlong[] temp19;\n\tlong[] temp20;\n\tlong[] temp21;\n\tlong[] temp22;\n\tlong[] temp23;\n\tlong[] temp24;\n\tlong[] temp25;\n\tlong[] temp26;\n\tlong[] temp27;\n\tlong[] temp28;\n\tlong[] temp29;\n\tlong[] temp30;\n\tlong[] temp31;\n\tlong[] temp32;\n\tlong[] temp33;\n\tlong[] temp34;\n\tlong[] temp35;\n\tlong[] temp36;\n\tlong[] temp37;\n\tlong[] temp38;\n\tlong[] temp39;\n\tlong[] temp40;\n\tlong[] temp41;\n\tlong[] temp42;\n\tlong[] temp43;\n\tlong[] temp44;\n\tlong[] temp45;\n\tlong[] temp46;\n\tlong[] temp47;\n\tlong[] temp48;\n\tlong[] temp49;\n\tlong[] temp50;\n\tlong[] temp51;\n\tlong[] temp52;\n\tlong[] temp53;\n\tlong[] temp54;\n\tlong[] temp55;\n\tlong[] temp56;\n\tlong[] temp57;\n\tlong[] temp58;\n\tlong[] temp59;\n\tlong[] temp60;\n\tlong[] temp61;\n\tlong[] temp62;\n\tlong[] temp63;\n\tlong[] temp64;\n\tlong[] temp65;\n\tlong[] temp66;\n\tlong[] temp67;\n\tlong[] temp68;\n\tlong[] temp69;\n\tlong[] temp70;\n\tlong[] temp71;\n\tlong[] temp72;\n",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0;\n\t\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult ~= num1[i];\n\t\t\t\ti++;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tresult ~= num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult ~= num2[j];\n\t\t\t\tj++;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tresult ~= num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t}\n\t\n\twhile (i < num1.length) \n\t{\n\t\tresult ~= num1[i];\n\t\ti++;\n\t}\n\t\n\twhile (j < num2.length) \n\t{\n\t\tresult ~= num2[j];\n\t\tj++;\n\t}\n\t\n\twhile (k < num3.length) \n\t{\n\t\tresult ~= num3[k];\n\t\tk++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[3];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\t\n\twhile(i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\ttemp[0] = num1[i];\n\t\ttemp[1] = num2[j];\n\t\ttemp[2] = num3[k];\n\t\t\n\t\tsort(temp);\n\t\t\n\t\tresult[l] = temp[0];\n\t\t\n\t\tif(temp[0] == num1[i])\n\t\t{\n\t\t\ti++;\n\t\t}\n\t\telse if(temp[0] == num2[j])\n\t\t{\n\t\t\tj++;\n\t\t}\n\t\telse if(temp[0] == num3[k])\n\t\t{\n\t\t\tk++;\n\t\t}\n\t\t\n\t\tl++;\n\t}\n\t\n\twhile(i < num1.length)\n\t{\n\t\tresult[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\t\n\twhile(j < num2.length)\n\t{\n\t\tresult[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\t\n\twhile(k < num3.length)\n\t{\n\t\tresult[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tauto result = new long[];\n\tauto it1 = num1.front;\n\tauto it2 = num2.front;\n\tauto it3 = num3.front;\n\twhile (it1 !is null && it2 !is null && it3 !is null) \n\t{\n\t\tif (it1.value < it2.value && it1.value < it3.value) \n\t\t{\n\t\t\tresult ~= it1.value;\n\t\t\tit1 = it1.next;\n\t\t}\n\t\telse if (it2.value < it1.value && it2.value < it3.value) \n\t\t{\n\t\t\tresult ~= it2.value;\n\t\t\tit2 = it2.next;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult ~= it3.value;\n\t\t\tit3 = it3.next;\n\t\t}\n\t}\n\twhile (it1 !is null) \n\t{\n\t\tresult ~= it1.value;\n\t\tit1 = it1.next;\n\t}\n\twhile (it2 !is null) \n\t{\n\t\tresult ~= it2.value;\n\t\tit2 = it2.next;\n\t}\n\twhile (it3 !is null) \n\t{\n\t\tresult ~= it3.value;\n\t\tit3 = it3.next;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l] = num1[i];\n\t\t\t\ti++;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l] = num2[j];\n\t\t\t\tj++;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile (i < num1.length) \n\t{\n\t\tresult[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\t\n\twhile (j < num2.length) \n\t{\n\t\tresult[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\t\n\twhile (k < num3.length) \n\t{\n\t\tresult[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\twhile(i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\tif(num1[i] < num2[j] && num1[i] < num3[k])\n\t\t{\n\t\t\tresult[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if(num2[j] < num1[i] && num2[j] < num3[k])\n\t\t{\n\t\t\tresult[l] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[l] = num3[k];\n\t\t\tk++;\n\t\t}\n\t\tl++;\n\t}\n\twhile(i < num1.length)\n\t{\n\t\tresult[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\twhile(j < num2.length)\n\t{\n\t\tresult[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\twhile(k < num3.length)\n\t{\n\t\tresult[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tlong[] temp;\n\tlong[] temp2;\n\tlong[] temp3;\n\t\n\ttemp = num1 ~ num2;\n\ttemp2 = temp ~ num3;\n\t\n\ttemp3 = temp2.sort();\n\t\n\treturn temp3;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length + num3.length];\n\tlong[] temp1 = new long[num1.length + num2.length + num3.length];\n\tlong[] temp2 = new long[num1.length + num2.length + num3.length];\n\tlong[] temp3 = new long[num1.length + num2.length + num3.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\tint m = 0;\n\tint n = 0;\n\tint o = 0;\n\t\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t\tk++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t\tk++;\n\t\t}\n\t}\n\t\n\twhile(i < num1.length)\n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num2.length)\n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\twhile(l < k && m < num3.length)\n\t{\n\t\tif(temp[l] < num3[m])\n\t\t{\n\t\t\ttemp1[n] = temp[l];\n\t\t\tl++;\n\t\t\tn++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp1[n] = num3[m];\n\t\t\tm++;\n\t\t\tn++;\n\t\t}\n\t}\n\t\n\twhile(l < k)\n\t{\n\t\ttemp1[n] = temp[l];\n",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\t\n\tlong[] nums = [num1, num2, num3];\n\t\n\tlong[][] sorted_nums = new long[nums.length][];\n\t\n\tforeach(i, n; nums)\n\t{\n\t\tsorted_nums[i] = n.dup.sort();\n\t}\n\t\n\tlong[] min_index = new long[nums.length];\n\t\n\tforeach(i; 0 .. result.length)\n\t{\n\t\tlong min = long.max;\n\t\tlong min_index_value = -1;\n\t\t\n\t\tforeach(j; 0 .. nums.length)\n\t\t{\n\t\t\tif(min_index[j] < sorted_nums[j].length)\n\t\t\t{\n\t\t\t\tif(sorted_nums[j][min_index[j]] < min)\n\t\t\t\t{\n\t\t\t\t\tmin = sorted_nums[j][min_index[j]];\n\t\t\t\t\tmin_index_value = j;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif(min_index_value != -1)\n\t\t{\n\t\t\tresult[i] = min;\n\t\t\tmin_index[min_index_value]++;\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[3];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\ttemp[0] = num1[i];\n\t\ttemp[1] = num2[j];\n\t\ttemp[2] = num3[k];\n\t\ttemp.sort();\n\t\tresult[l++] = temp[0];\n\t\tif (temp[0] == num1[i])\n\t\t\ti++;\n\t\telse if (temp[0] == num2[j])\n\t\t\tj++;\n\t\telse\n\t\t\tk++;\n\t}\n\twhile (i < num1.length)\n\t\tresult[l++] = num1[i++];\n\twhile (j < num2.length)\n\t\tresult[l++] = num2[j++];\n\twhile (k < num3.length)\n\t\tresult[l++] = num3[k++];\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\twhile(i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\tif(num1[i] < num2[j] && num1[i] < num3[k])\n\t\t{\n\t\t\tresult[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if(num2[j] < num1[i] && num2[j] < num3[k])\n\t\t{\n\t\t\tresult[l] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\telse if(num3[k] < num1[i] && num3[k] < num2[j])\n\t\t{\n\t\t\tresult[l] = num3[k];\n\t\t\tk++;\n\t\t}\n\t\tl++;\n\t}\n\twhile(i < num1.length)\n\t{\n\t\tresult[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\twhile(j < num2.length)\n\t{\n\t\tresult[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\twhile(k < num3.length)\n\t{\n\t\tresult[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\t\n\twhile(i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\tif(num1[i] < num2[j] && num1[i] < num3[k])\n\t\t{\n\t\t\tresult[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if(num2[j] < num1[i] && num2[j] < num3[k])\n\t\t{\n\t\t\tresult[l] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[l] = num3[k];\n\t\t\tk++;\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile(i < num1.length)\n\t{\n\t\tresult[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\t\n\twhile(j < num2.length)\n\t{\n\t\tresult[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\t\n\twhile(k < num3.length)\n\t{\n\t\tresult[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[3];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\t\n\twhile (i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\ttemp[0] = num1[i];\n\t\ttemp[1] = num2[j];\n\t\ttemp[2] = num3[k];\n\t\t\n\t\tsort(temp);\n\t\t\n\t\tresult[l] = temp[0];\n\t\t\n\t\tif (temp[0] == num1[i])\n\t\t\ti++;\n\t\telse if (temp[0] == num2[j])\n\t\t\tj++;\n\t\telse\n\t\t\tk++;\n\t\t\t\n\t\tl++;\n\t}\n\t\n\twhile (i < num1.length)\n\t{\n\t\tresult[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\t\n\twhile (j < num2.length)\n\t{\n\t\tresult[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\t\n\twhile (k < num3.length)\n\t{\n\t\tresult[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[3];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\t\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\ttemp[0] = num1[i];\n\t\ttemp[1] = num2[j];\n\t\ttemp[2] = num3[k];\n\t\t\n\t\tsort(temp);\n\t\t\n\t\tresult[l] = temp[0];\n\t\t\n\t\tif (temp[0] == num1[i]) \n\t\t{\n\t\t\ti++;\n\t\t}\n\t\telse if (temp[0] == num2[j]) \n\t\t{\n\t\t\tj++;\n\t\t}\n\t\telse if (temp[0] == num3[k]) \n\t\t{\n\t\t\tk++;\n\t\t}\n\t\t\n\t\tl++;\n\t}\n\t\n\twhile (i < num1.length) \n\t{\n\t\tresult[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\t\n\twhile (j < num2.length) \n\t{\n\t\tresult[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\t\n\twhile (k < num3.length) \n\t{\n\t\tresult[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\t\n\twhile (i < num1.length && j < num2.length)\n\t{\n\t\tif (num1[i] < num2[j])\n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile (i < num1.length)\n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile (j < num2.length)\n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\t\n\twhile (i < temp.length && j < num3.length)\n\t{\n\t\tif (temp[i] < num3[j])\n\t\t{\n\t\t\tresult[k] = temp[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[k] = num3[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile (i < temp.length)\n\t{\n\t\tresult[k] = temp[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile (j < num3.length)\n\t{\n\t\tresult[k] = num3[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tlong[] temp;\n\tlong[] temp2;\n\tlong[] temp3;\n\tlong[] temp4;\n\tlong[] temp5;\n\tlong[] temp6;\n\tlong[] temp7;\n\tlong[] temp8;\n\tlong[] temp9;\n\tlong[] temp10;\n\tlong[] temp11;\n\tlong[] temp12;\n\tlong[] temp13;\n\tlong[] temp14;\n\tlong[] temp15;\n\tlong[] temp16;\n\tlong[] temp17;\n\tlong[] temp18;\n\tlong[] temp19;\n\tlong[] temp20;\n\tlong[] temp21;\n\tlong[] temp22;\n\tlong[] temp23;\n\tlong[] temp24;\n\tlong[] temp25;\n\tlong[] temp26;\n\tlong[] temp27;\n\tlong[] temp28;\n\tlong[] temp29;\n\tlong[] temp30;\n\tlong[] temp31;\n\tlong[] temp32;\n\tlong[] temp33;\n\tlong[] temp34;\n\tlong[] temp35;\n\tlong[] temp36;\n\tlong[] temp37;\n\tlong[] temp38;\n\tlong[] temp39;\n\tlong[] temp40;\n\tlong[] temp41;\n\tlong[] temp42;\n\tlong[] temp43;\n\tlong[] temp44;\n\tlong[] temp45;\n\tlong[] temp46;\n\tlong[] temp47;\n\tlong[] temp48;\n\tlong[] temp49;\n\tlong[] temp50;\n\tlong[] temp51;\n\tlong[] temp52;\n\tlong[] temp53;\n\tlong[] temp54;\n\tlong[] temp55;\n\tlong[] temp56;\n\tlong[] temp57;\n\tlong[] temp58;\n\tlong[] temp59;\n\tlong[] temp60;\n\tlong[] temp61;\n\tlong[] temp62;\n\tlong[] temp63;\n\tlong[] temp64;\n\tlong[] temp65;\n\tlong[] temp66;\n\tlong[] temp67;\n\tlong[] temp68;\n\tlong[] temp69;\n\tlong[] temp70;\n\tlong[] temp71;\n\tlong[] temp72;\n",
    "{\n\tlong[] result;\n\tint i = 0, j = 0, k = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult ~= num1[i];\n\t\t\t\ti++;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tresult ~= num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult ~= num2[j];\n\t\t\t\tj++;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tresult ~= num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult ~= num1[i];\n\t\ti++;\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult ~= num2[j];\n\t\tj++;\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult ~= num3[k];\n\t\tk++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tlong[] temp;\n\tlong[] temp2;\n\tint i;\n\tint j;\n\tint k;\n\tint l;\n\tint m;\n\tint n;\n\tint o;\n\t\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\tl = 0;\n\tm = 0;\n\tn = 0;\n\to = 0;\n\t\n\ttemp = new long[num1.length + num2.length];\n\ttemp2 = new long[num3.length + temp.length];\n\tresult = new long[temp2.length];\n\t\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t\tk++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t\tk++;\n\t\t}\n\t}\n\t\n\twhile(i < num1.length)\n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num2.length)\n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\twhile(l < temp.length && m < num3.length)\n\t{\n\t\tif(temp[l] < num3[m])\n\t\t{\n\t\t\ttemp2[n] = temp[l];\n\t\t\tl++;\n\t\t\tn++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp2[n] = num3[m];\n\t\t\tm++;\n\t\t\tn++;\n\t\t}\n\t}\n\t\n\twhile(l < temp.length)\n\t{\n\t\ttemp2[n] = temp[l];\n\t\tl++;\n\t\tn++;\n\t}\n\t\n\twhile(m < num3.length",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[3];\n\tlong[] index = new long[3];\n\tlong[] min = new long[3];\n\t\n\tfor (int i = 0; i < num1.length; i++)\n\t{\n\t\tresult[i] = num1[i];\n\t}\n\tfor (int i = 0; i < num2.length; i++)\n\t{\n\t\tresult[i + num1.length] = num2[i];\n\t}\n\tfor (int i = 0; i < num3.length; i++)\n\t{\n\t\tresult[i + num1.length + num2.length] = num3[i];\n\t}\n\t\n\tfor (int i = 0; i < 3; i++)\n\t{\n\t\ttemp[i] = result[i];\n\t}\n\t\n\tfor (int i = 0; i < 3; i++)\n\t{\n\t\tmin[i] = min(temp);\n\t\tindex[i] = indexOf(temp, min[i]);\n\t\ttemp[index[i]] = long.max;\n\t}\n\t\n\tfor (int i = 0; i < 3; i++)\n\t{\n\t\tresult[i] = min[i];\n\t}\n\t\n\tfor (int i = 3; i < result.length; i++)\n\t{\n\t\tfor (int j = 0; j < 3; j++)\n\t\t{\n\t\t\tif (index[j] < num1.length + num2.length + num3.length)\n\t\t\t{\n\t\t\t\ttemp[j] = result[index[j]];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttemp[j] = long.max;\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor (int j = 0; j < 3; j++)\n\t\t{\n\t\t\tmin[j] = min(temp);\n\t\t\tindex[j] = indexOf(temp, min[j]);\n\t\t\ttemp[index",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] nums = [num1, num2, num3];\n\t\n\tlong[] nums_sorted = nums.sort!((a, b) => a.length < b.length);\n\t\n\tlong[] nums_sorted_reversed = nums_sorted.reverse;\n\t\n\tlong[] nums_sorted_reversed_sorted = nums_sorted_reversed.sort!((a, b) => a.length < b.length);\n\t\n\tlong[] nums_sorted_reversed_sorted_reversed = nums_sorted_reversed_sorted.reverse;\n\t\n\tlong[] nums_sorted_reversed_sorted_reversed_sorted = nums_sorted_reversed_sorted_reversed.sort!((a, b) => a.length < b.length);\n\t\n\tlong[] nums_sorted_reversed_sorted_reversed_sorted_reversed = nums_sorted_reversed_sorted_reversed_sorted.reverse;\n\t\n\tlong[] nums_sorted_reversed_sorted_reversed_sorted_reversed_sorted = nums_sorted_reversed_sorted_reversed_sorted_reversed.sort!((a, b) => a.length < b.length);\n\t\n\tlong[] nums_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed = nums_sorted_reversed_sorted_reversed_sorted_reversed_sorted.reverse;\n\t\n\tlong[] nums_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted = nums_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed.sort!((a, b) => a.",
    "{\n\tlong[] result;\n\tlong[] temp;\n\tlong[] temp2;\n\tlong[] temp3;\n\tint i;\n\tint j;\n\tint k;\n\tint l;\n\tint m;\n\tint n;\n\tint o;\n\t\n\ttemp = num1;\n\ttemp2 = num2;\n\ttemp3 = num3;\n\t\n\tresult = new long[num1.length + num2.length + num3.length];\n\t\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\tl = 0;\n\tm = 0;\n\tn = 0;\n\to = 0;\n\t\n\twhile(i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\tif(temp[i] < temp2[j] && temp[i] < temp3[k])\n\t\t{\n\t\t\tresult[l] = temp[i];\n\t\t\ti++;\n\t\t\tl++;\n\t\t}\n\t\telse if(temp2[j] < temp[i] && temp2[j] < temp3[k])\n\t\t{\n\t\t\tresult[l] = temp2[j];\n\t\t\tj++;\n\t\t\tl++;\n\t\t}\n\t\telse if(temp3[k] < temp[i] && temp3[k] < temp2[j])\n\t\t{\n\t\t\tresult[l] = temp3[k];\n\t\t\tk++;\n\t\t\tl++;\n\t\t}\n\t\telse if(temp[i] == temp2[j] && temp[i] < temp3[k])\n\t\t{\n\t\t\tresult[l] = temp[i];\n\t\t\ti++;\n\t\t\tl++;\n\t\t}\n\t\telse if(temp[i] == temp3[k] && temp[i] < temp2[j])\n\t\t{\n\t\t\tresult[l] = temp[i];\n\t\t\ti++;\n\t\t\tl++;\n\t\t}\n\t\telse if(temp2[j] == temp3[k] && temp2[j]",
    "{\n\tlong[] nums = new long[num1.length + num2.length + num3.length];\n\t\n\tint i = 0, j = 0, k = 0, l = 0;\n\t\n\twhile(i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\tif(num1[i] < num3[k])\n\t\t\t{\n\t\t\t\tnums[l++] = num1[i++];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tnums[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(num2[j] < num3[k])\n\t\t\t{\n\t\t\t\tnums[l++] = num2[j++];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tnums[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t}\n\t\n\twhile(i < num1.length)\n\t{\n\t\tnums[l++] = num1[i++];\n\t}\n\t\n\twhile(j < num2.length)\n\t{\n\t\tnums[l++] = num2[j++];\n\t}\n\t\n\twhile(k < num3.length)\n\t{\n\t\tnums[l++] = num3[k++];\n\t}\n\t\n\treturn nums;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\t\n\tint i = 0, j = 0, k = 0, l = 0;\n\t\n\twhile(i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\tif(num1[i] < num2[j] && num1[i] < num3[k])\n\t\t{\n\t\t\tresult[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if(num2[j] < num1[i] && num2[j] < num3[k])\n\t\t{\n\t\t\tresult[l] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[l] = num3[k];\n\t\t\tk++;\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile(i < num1.length)\n\t{\n\t\tresult[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\t\n\twhile(j < num2.length)\n\t{\n\t\tresult[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\t\n\twhile(k < num3.length)\n\t{\n\t\tresult[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\t\n\twhile (i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\tif (num1[i] < num2[j] && num1[i] < num3[k])\n\t\t{\n\t\t\tresult[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (num2[j] < num1[i] && num2[j] < num3[k])\n\t\t{\n\t\t\tresult[l] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[l] = num3[k];\n\t\t\tk++;\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile (i < num1.length)\n\t{\n\t\tresult[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\t\n\twhile (j < num2.length)\n\t{\n\t\tresult[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\t\n\twhile (k < num3.length)\n\t{\n\t\tresult[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\tlong[] temp2 = new long[num1.length + num2.length + num3.length];\n\t\n\t//merge num1 and num2\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile (i < num1.length && j < num2.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\twhile (i < num1.length) \n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\twhile (j < num2.length) \n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\t//merge temp and num3\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\twhile (i < temp.length && j < num3.length) \n\t{\n\t\tif (temp[i] < num3[j]) \n\t\t{\n\t\t\ttemp2[k] = temp[i];\n\t\t\ti++;\n\t\t} \n\t\telse \n\t\t{\n\t\t\ttemp2[k] = num3[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\twhile (i < temp.length) \n\t{\n\t\ttemp2[k] = temp[i];\n\t\ti++;\n\t\tk++;\n\t}\n\twhile (j < num3.length) \n\t{\n\t\ttemp2[k] = num3[j];\n\t\tj++;\n\t\tk++;\n\t",
    "{\n\tlong[] result;\n\tlong[] temp;\n\tlong[] temp2;\n\tlong[] temp3;\n\tlong[] temp4;\n\tlong[] temp5;\n\tlong[] temp6;\n\tlong[] temp7;\n\tlong[] temp8;\n\tlong[] temp9;\n\tlong[] temp10;\n\tlong[] temp11;\n\tlong[] temp12;\n\tlong[] temp13;\n\tlong[] temp14;\n\tlong[] temp15;\n\tlong[] temp16;\n\tlong[] temp17;\n\tlong[] temp18;\n\tlong[] temp19;\n\tlong[] temp20;\n\tlong[] temp21;\n\tlong[] temp22;\n\tlong[] temp23;\n\tlong[] temp24;\n\tlong[] temp25;\n\tlong[] temp26;\n\tlong[] temp27;\n\tlong[] temp28;\n\tlong[] temp29;\n\tlong[] temp30;\n\tlong[] temp31;\n\tlong[] temp32;\n\tlong[] temp33;\n\tlong[] temp34;\n\tlong[] temp35;\n\tlong[] temp36;\n\tlong[] temp37;\n\tlong[] temp38;\n\tlong[] temp39;\n\tlong[] temp40;\n\tlong[] temp41;\n\tlong[] temp42;\n\tlong[] temp43;\n\tlong[] temp44;\n\tlong[] temp45;\n\tlong[] temp46;\n\tlong[] temp47;\n\tlong[] temp48;\n\tlong[] temp49;\n\tlong[] temp50;\n\tlong[] temp51;\n\tlong[] temp52;\n\tlong[] temp53;\n\tlong[] temp54;\n\tlong[] temp55;\n\tlong[] temp56;\n\tlong[] temp57;\n\tlong[] temp58;\n\tlong[] temp59;\n\tlong[] temp60;\n\tlong[] temp61;\n\tlong[] temp62;\n\tlong[] temp63;\n\tlong[] temp64;\n\tlong[] temp65;\n\tlong[] temp66;\n\tlong[] temp67;\n\tlong[] temp68;\n\tlong[] temp69;\n\tlong[] temp70;\n\tlong[] temp71;\n\tlong[] temp72;\n",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[3];\n\tint index = 0;\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\ttemp[0] = num1[i];\n\t\ttemp[1] = num2[j];\n\t\ttemp[2] = num3[k];\n\t\ttemp.sort();\n\t\tresult[index++] = temp[0];\n\t\tif (temp[0] == num1[i]) \n\t\t{\n\t\t\ti++;\n\t\t} \n\t\telse if (temp[0] == num2[j]) \n\t\t{\n\t\t\tj++;\n\t\t} \n\t\telse if (temp[0] == num3[k]) \n\t\t{\n\t\t\tk++;\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[index++] = num1[i++];\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[index++] = num2[j++];\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[index++] = num3[k++];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[3];\n\tlong[] index = new long[3];\n\tlong[] min = new long[3];\n\tlong[] max = new long[3];\n\tlong[] min_index = new long[3];\n\tlong[] max_index = new long[3];\n\t\n\t// find min and max\n\ttemp[0] = num1[0];\n\ttemp[1] = num2[0];\n\ttemp[2] = num3[0];\n\tmin = temp.min();\n\tmax = temp.max();\n\t\n\t// find min and max index\n\tfor (int i = 0; i < 3; i++)\n\t{\n\t\tif (temp[i] == min)\n\t\t{\n\t\t\tmin_index[i] = i;\n\t\t}\n\t\tif (temp[i] == max)\n\t\t{\n\t\t\tmax_index[i] = i;\n\t\t}\n\t}\n\t\n\t// find index\n\tfor (int i = 0; i < 3; i++)\n\t{\n\t\tif (min_index[i] != 0 && max_index[i] != 0)\n\t\t{\n\t\t\tindex[i] = i;\n\t\t}\n\t}\n\t\n\t// merge\n\tfor (int i = 0; i < result.length; i++)\n\t{\n\t\tif (i < num1.length)\n\t\t{\n\t\t\tresult[i] = num1[i];\n\t\t}\n\t\telse if (i < num1.length + num2.length)\n\t\t{\n\t\t\tresult[i] = num2[i - num1.length];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[i] = num3[i - num1.length - num2.length];\n\t\t}\n\t}\n\t\n\t// sort\n\tresult.sort();\n\t\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tlong[] temp;\n\tlong[] temp2;\n\tlong[] temp3;\n\tlong[] temp4;\n\tlong[] temp5;\n\tlong[] temp6;\n\tlong[] temp7;\n\tlong[] temp8;\n\tlong[] temp9;\n\tlong[] temp10;\n\tlong[] temp11;\n\tlong[] temp12;\n\tlong[] temp13;\n\tlong[] temp14;\n\tlong[] temp15;\n\tlong[] temp16;\n\tlong[] temp17;\n\tlong[] temp18;\n\tlong[] temp19;\n\tlong[] temp20;\n\tlong[] temp21;\n\tlong[] temp22;\n\tlong[] temp23;\n\tlong[] temp24;\n\tlong[] temp25;\n\tlong[] temp26;\n\tlong[] temp27;\n\tlong[] temp28;\n\tlong[] temp29;\n\tlong[] temp30;\n\tlong[] temp31;\n\tlong[] temp32;\n\tlong[] temp33;\n\tlong[] temp34;\n\tlong[] temp35;\n\tlong[] temp36;\n\tlong[] temp37;\n\tlong[] temp38;\n\tlong[] temp39;\n\tlong[] temp40;\n\tlong[] temp41;\n\tlong[] temp42;\n\tlong[] temp43;\n\tlong[] temp44;\n\tlong[] temp45;\n\tlong[] temp46;\n\tlong[] temp47;\n\tlong[] temp48;\n\tlong[] temp49;\n\tlong[] temp50;\n\tlong[] temp51;\n\tlong[] temp52;\n\tlong[] temp53;\n\tlong[] temp54;\n\tlong[] temp55;\n\tlong[] temp56;\n\tlong[] temp57;\n\tlong[] temp58;\n\tlong[] temp59;\n\tlong[] temp60;\n\tlong[] temp61;\n\tlong[] temp62;\n\tlong[] temp63;\n\tlong[] temp64;\n\tlong[] temp65;\n\tlong[] temp66;\n\tlong[] temp67;\n\tlong[] temp68;\n\tlong[] temp69;\n\tlong[] temp70;\n\tlong[] temp71;\n\tlong[] temp72;\n",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\tlong[] temp2 = new long[num1.length + num2.length + num3.length];\n\t\n\ttemp = merge_sorted_list(num1, num2);\n\ttemp2 = merge_sorted_list(temp, num3);\n\t\n\treturn temp2;\n}",
    "{\n\tlong[] result;\n\tlong[] temp;\n\tlong[] temp2;\n\tlong[] temp3;\n\tlong[] temp4;\n\tlong[] temp5;\n\tlong[] temp6;\n\tlong[] temp7;\n\tlong[] temp8;\n\tlong[] temp9;\n\tlong[] temp10;\n\tlong[] temp11;\n\tlong[] temp12;\n\tlong[] temp13;\n\tlong[] temp14;\n\tlong[] temp15;\n\tlong[] temp16;\n\tlong[] temp17;\n\tlong[] temp18;\n\tlong[] temp19;\n\tlong[] temp20;\n\tlong[] temp21;\n\tlong[] temp22;\n\tlong[] temp23;\n\tlong[] temp24;\n\tlong[] temp25;\n\tlong[] temp26;\n\tlong[] temp27;\n\tlong[] temp28;\n\tlong[] temp29;\n\tlong[] temp30;\n\tlong[] temp31;\n\tlong[] temp32;\n\tlong[] temp33;\n\tlong[] temp34;\n\tlong[] temp35;\n\tlong[] temp36;\n\tlong[] temp37;\n\tlong[] temp38;\n\tlong[] temp39;\n\tlong[] temp40;\n\tlong[] temp41;\n\tlong[] temp42;\n\tlong[] temp43;\n\tlong[] temp44;\n\tlong[] temp45;\n\tlong[] temp46;\n\tlong[] temp47;\n\tlong[] temp48;\n\tlong[] temp49;\n\tlong[] temp50;\n\tlong[] temp51;\n\tlong[] temp52;\n\tlong[] temp53;\n\tlong[] temp54;\n\tlong[] temp55;\n\tlong[] temp56;\n\tlong[] temp57;\n\tlong[] temp58;\n\tlong[] temp59;\n\tlong[] temp60;\n\tlong[] temp61;\n\tlong[] temp62;\n\tlong[] temp63;\n\tlong[] temp64;\n\tlong[] temp65;\n\tlong[] temp66;\n\tlong[] temp67;\n\tlong[] temp68;\n\tlong[] temp69;\n\tlong[] temp70;\n\tlong[] temp71;\n\tlong[] temp72;\n",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] <= num2[j] && num1[i] <= num3[k]) \n\t\t{\n\t\t\tresult[i + j + k] = num1[i];\n\t\t\ti++;\n\t\t} \n\t\telse if (num2[j] <= num1[i] && num2[j] <= num3[k]) \n\t\t{\n\t\t\tresult[i + j + k] = num2[j];\n\t\t\tj++;\n\t\t} \n\t\telse if (num3[k] <= num1[i] && num3[k] <= num2[j]) \n\t\t{\n\t\t\tresult[i + j + k] = num3[k];\n\t\t\tk++;\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[i + j + k] = num1[i];\n\t\ti++;\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[i + j + k] = num2[j];\n\t\tj++;\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[i + j + k] = num3[k];\n\t\tk++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\t\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < num1.length)\n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num2.length)\n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\t\n\twhile(i < temp.length && j < num3.length)\n\t{\n\t\tif(temp[i] < num3[j])\n\t\t{\n\t\t\tresult[k] = temp[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[k] = num3[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < temp.length)\n\t{\n\t\tresult[k] = temp[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num3.length)\n\t{\n\t\tresult[k] = num3[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tlong[] temp;\n\tlong[] temp2;\n\tlong[] temp3;\n\tint i;\n\tint j;\n\tint k;\n\tint l;\n\tint m;\n\tint n;\n\tint o;\n\tint p;\n\tint q;\n\tint r;\n\tint s;\n\tint t;\n\tint u;\n\tint v;\n\tint w;\n\tint x;\n\tint y;\n\tint z;\n\t\n\ttemp = new long[num1.length + num2.length];\n\ttemp2 = new long[num1.length + num2.length];\n\ttemp3 = new long[num1.length + num2.length + num3.length];\n\t\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\tl = 0;\n\tm = 0;\n\tn = 0;\n\to = 0;\n\tp = 0;\n\tq = 0;\n\tr = 0;\n\ts = 0;\n\tt = 0;\n\tu = 0;\n\tv = 0;\n\tw = 0;\n\tx = 0;\n\ty = 0;\n\tz = 0;\n\t\n\twhile (i < num1.length && j < num2.length)\n\t{\n\t\tif (num1[i] < num2[j])\n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile (i < num1.length)\n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile (j < num2.length)\n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\twhile (l < temp.length && m < num3.length)\n\t{\n\t\tif (temp[l] < num",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong i = 0, j = 0, k = 0, l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j] && num1[i] < num3[k]) \n\t\t{\n\t\t\tresult[l++] = num1[i++];\n\t\t}\n\t\telse if (num2[j] < num1[i] && num2[j] < num3[k]) \n\t\t{\n\t\t\tresult[l++] = num2[j++];\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult[l++] = num3[k++];\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[l++] = num1[i++];\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[l++] = num2[j++];\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[l++] = num3[k++];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] nums = new long[num1.length + num2.length + num3.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\t\n\twhile(i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\tif(num1[i] < num3[k])\n\t\t\t{\n\t\t\t\tnums[l] = num1[i];\n\t\t\t\ti++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tnums[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(num2[j] < num3[k])\n\t\t\t{\n\t\t\t\tnums[l] = num2[j];\n\t\t\t\tj++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tnums[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\tnums[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnums[l] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile(i < num1.length && k < num3.length)\n\t{\n\t\tif(num1[i] < num3[k])\n\t\t{\n\t\t\tnums[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnums[l] = num3[k];\n\t\t\tk",
    "{\n\tlong[] result;\n\t\n\tresult = num1.dup;\n\tresult ~= num2;\n\tresult ~= num3;\n\t\n\tresult.sort;\n\t\n\treturn result;\n}",
    "{\n\tauto num1_len = num1.length;\n\tauto num2_len = num2.length;\n\tauto num3_len = num3.length;\n\tauto total_len = num1_len + num2_len + num3_len;\n\t\n\tlong[] result = new long[total_len];\n\t\n\tauto i = 0;\n\tauto j = 0;\n\tauto k = 0;\n\tauto l = 0;\n\t\n\twhile (i < num1_len && j < num2_len && k < num3_len) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l] = num1[i];\n\t\t\t\ti++;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l] = num2[j];\n\t\t\t\tj++;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile (i < num1_len && j < num2_len) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tresult[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult[l] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile (i < num1_len && k < num3_len) \n\t{\n\t\tif (num1[i] < num3[k]) ",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[3];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\t\n\twhile(i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\ttemp[0] = num1[i];\n\t\ttemp[1] = num2[j];\n\t\ttemp[2] = num3[k];\n\t\t\n\t\tsort(temp);\n\t\t\n\t\tresult[l++] = temp[0];\n\t\t\n\t\tif(temp[0] == num1[i])\n\t\t\ti++;\n\t\telse if(temp[0] == num2[j])\n\t\t\tj++;\n\t\telse if(temp[0] == num3[k])\n\t\t\tk++;\n\t}\n\t\n\twhile(i < num1.length)\n\t{\n\t\tresult[l++] = num1[i++];\n\t}\n\t\n\twhile(j < num2.length)\n\t{\n\t\tresult[l++] = num2[j++];\n\t}\n\t\n\twhile(k < num3.length)\n\t{\n\t\tresult[l++] = num3[k++];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[3];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\ttemp[0] = num1[i];\n\t\ttemp[1] = num2[j];\n\t\ttemp[2] = num3[k];\n\t\tsort(temp);\n\t\tresult[l++] = temp[0];\n\t\tif (temp[0] == num1[i])\n\t\t\ti++;\n\t\telse if (temp[0] == num2[j])\n\t\t\tj++;\n\t\telse\n\t\t\tk++;\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[l++] = num1[i++];\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[l++] = num2[j++];\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[l++] = num3[k++];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult ~= num1[i];\n\t\t\t\ti++;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult ~= num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult ~= num2[j];\n\t\t\t\tj++;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult ~= num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult ~= num1[i];\n\t\ti++;\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult ~= num2[j];\n\t\tj++;\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult ~= num3[k];\n\t\tk++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tlong[] temp;\n\tlong[] temp1;\n\tlong[] temp2;\n\tlong[] temp3;\n\tlong[] temp4;\n\tlong[] temp5;\n\tlong[] temp6;\n\tlong[] temp7;\n\tlong[] temp8;\n\tlong[] temp9;\n\tlong[] temp10;\n\tlong[] temp11;\n\tlong[] temp12;\n\tlong[] temp13;\n\tlong[] temp14;\n\tlong[] temp15;\n\tlong[] temp16;\n\tlong[] temp17;\n\tlong[] temp18;\n\tlong[] temp19;\n\tlong[] temp20;\n\tlong[] temp21;\n\tlong[] temp22;\n\tlong[] temp23;\n\tlong[] temp24;\n\tlong[] temp25;\n\tlong[] temp26;\n\tlong[] temp27;\n\tlong[] temp28;\n\tlong[] temp29;\n\tlong[] temp30;\n\tlong[] temp31;\n\tlong[] temp32;\n\tlong[] temp33;\n\tlong[] temp34;\n\tlong[] temp35;\n\tlong[] temp36;\n\tlong[] temp37;\n\tlong[] temp38;\n\tlong[] temp39;\n\tlong[] temp40;\n\tlong[] temp41;\n\tlong[] temp42;\n\tlong[] temp43;\n\tlong[] temp44;\n\tlong[] temp45;\n\tlong[] temp46;\n\tlong[] temp47;\n\tlong[] temp48;\n\tlong[] temp49;\n\tlong[] temp50;\n\tlong[] temp51;\n\tlong[] temp52;\n\tlong[] temp53;\n\tlong[] temp54;\n\tlong[] temp55;\n\tlong[] temp56;\n\tlong[] temp57;\n\tlong[] temp58;\n\tlong[] temp59;\n\tlong[] temp60;\n\tlong[] temp61;\n\tlong[] temp62;\n\tlong[] temp63;\n\tlong[] temp64;\n\tlong[] temp65;\n\tlong[] temp66;\n\tlong[] temp67;\n\tlong[] temp68;\n\tlong[] temp69;\n\tlong[] temp70;\n\tlong[] temp71;\n",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0, l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num1[i++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num2[j++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[l++] = num1[i++];\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[l++] = num2[j++];\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[l++] = num3[k++];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0, l = 0;\n\twhile(i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\tif(num1[i] < num3[k])\n\t\t\t{\n\t\t\t\tresult[l++] = num1[i++];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(num2[j] < num3[k])\n\t\t\t{\n\t\t\t\tresult[l++] = num2[j++];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t}\n\twhile(i < num1.length)\n\t{\n\t\tresult[l++] = num1[i++];\n\t}\n\twhile(j < num2.length)\n\t{\n\t\tresult[l++] = num2[j++];\n\t}\n\twhile(k < num3.length)\n\t{\n\t\tresult[l++] = num3[k++];\n\t}\n\treturn result;\n}",
    "{\n\tauto num1_len = num1.length;\n\tauto num2_len = num2.length;\n\tauto num3_len = num3.length;\n\t\n\tauto num_len = num1_len + num2_len + num3_len;\n\t\n\tlong[] num = new long[num_len];\n\t\n\tauto i = 0;\n\tauto j = 0;\n\tauto k = 0;\n\t\n\tfor (auto l = 0; l < num_len; l++) \n\t{\n\t\tif (i < num1_len && j < num2_len && k < num3_len) \n\t\t{\n\t\t\tif (num1[i] < num2[j] && num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tnum[l] = num1[i];\n\t\t\t\ti++;\n\t\t\t}\n\t\t\telse if (num2[j] < num1[i] && num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tnum[l] = num2[j];\n\t\t\t\tj++;\n\t\t\t}\n\t\t\telse if (num3[k] < num1[i] && num3[k] < num2[j]) \n\t\t\t{\n\t\t\t\tnum[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\telse if (i < num1_len && j < num2_len) \n\t\t{\n\t\t\tif (num1[i] < num2[j]) \n\t\t\t{\n\t\t\t\tnum[l] = num1[i];\n\t\t\t\ti++;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tnum[l] = num2[j];\n\t\t\t\tj++;\n\t\t\t}\n\t\t}\n\t\telse if (i < num1_len && k < num3_len) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\twhile(i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif(num1[i] < num2[j]) \n\t\t{\n\t\t\tif(num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num1[i++];\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif(num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num2[j++];\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t}\n\twhile(i < num1.length) \n\t{\n\t\tresult[l++] = num1[i++];\n\t}\n\twhile(j < num2.length) \n\t{\n\t\tresult[l++] = num2[j++];\n\t}\n\twhile(k < num3.length) \n\t{\n\t\tresult[l++] = num3[k++];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\t\n\twhile (i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\tif (num1[i] < num2[j])\n\t\t{\n\t\t\tif (num1[i] < num3[k])\n\t\t\t{\n\t\t\t\tresult[l] = num1[i];\n\t\t\t\ti++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (num2[j] < num3[k])\n\t\t\t{\n\t\t\t\tresult[l] = num2[j];\n\t\t\t\tj++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile (i < num1.length && j < num2.length)\n\t{\n\t\tif (num1[i] < num2[j])\n\t\t{\n\t\t\tresult[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[l] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile (i < num1.length && k < num3.length)\n\t{\n\t\tif (num1[i] < num3[k])\n\t\t{\n\t\t\tresult[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[l] = num3[k];\n\t\t\tk++;\n\t\t}\n\t\tl",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\t\n\tint i = 0, j = 0, k = 0, l = 0;\n\t\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num1[i++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num2[j++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t}\n\t\n\twhile (i < num1.length) \n\t{\n\t\tresult[l++] = num1[i++];\n\t}\n\t\n\twhile (j < num2.length) \n\t{\n\t\tresult[l++] = num2[j++];\n\t}\n\t\n\twhile (k < num3.length) \n\t{\n\t\tresult[l++] = num3[k++];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[3];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\ttemp[0] = num1[i];\n\t\ttemp[1] = num2[j];\n\t\ttemp[2] = num3[k];\n\t\ttemp.sort();\n\t\tresult[l] = temp[0];\n\t\tif (temp[0] == num1[i])\n\t\t{\n\t\t\ti++;\n\t\t}\n\t\telse if (temp[0] == num2[j])\n\t\t{\n\t\t\tj++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tk++;\n\t\t}\n\t\tl++;\n\t}\n\twhile (i < num1.length)\n\t{\n\t\tresult[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\twhile (j < num2.length)\n\t{\n\t\tresult[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\twhile (k < num3.length)\n\t{\n\t\tresult[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\t\n\tlong[] nums = new long[3];\n\tnums[0] = num1[0];\n\tnums[1] = num2[0];\n\tnums[2] = num3[0];\n\t\n\tlong[] index = new long[3];\n\tindex[0] = 0;\n\tindex[1] = 0;\n\tindex[2] = 0;\n\t\n\tfor (long i = 0; i < result.length; i++) \n\t{\n\t\tlong min_index = minIndex(nums);\n\t\tresult[i] = nums[min_index];\n\t\t\n\t\tif (min_index == 0) \n\t\t{\n\t\t\tindex[0]++;\n\t\t\tif (index[0] < num1.length) \n\t\t\t{\n\t\t\t\tnums[0] = num1[index[0]];\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tnums[0] = long.max;\n\t\t\t}\n\t\t}\n\t\telse if (min_index == 1) \n\t\t{\n\t\t\tindex[1]++;\n\t\t\tif (index[1] < num2.length) \n\t\t\t{\n\t\t\t\tnums[1] = num2[index[1]];\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tnums[1] = long.max;\n\t\t\t}\n\t\t}\n\t\telse if (min_index == 2) \n\t\t{\n\t\t\tindex[2]++;\n\t\t\tif (index[2] < num3.length) \n\t\t\t{\n\t\t\t\tnums[2] = num3[index[2]];\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tnums[2] = long.max;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] tmp = new long[num1.length + num2.length];\n\t\n\tint i = 0, j = 0, k = 0, l = 0;\n\t\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\ttmp[k++] = num1[i++];\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttmp[k++] = num2[j++];\n\t\t}\n\t}\n\t\n\twhile(i < num1.length)\n\t{\n\t\ttmp[k++] = num1[i++];\n\t}\n\t\n\twhile(j < num2.length)\n\t{\n\t\ttmp[k++] = num2[j++];\n\t}\n\t\n\ti = 0;\n\tj = 0;\n\t\n\twhile(i < tmp.length && j < num3.length)\n\t{\n\t\tif(tmp[i] < num3[j])\n\t\t{\n\t\t\tresult[l++] = tmp[i++];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[l++] = num3[j++];\n\t\t}\n\t}\n\t\n\twhile(i < tmp.length)\n\t{\n\t\tresult[l++] = tmp[i++];\n\t}\n\t\n\twhile(j < num3.length)\n\t{\n\t\tresult[l++] = num3[j++];\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] nums = [num1, num2, num3];\n\tlong[] indices = [0, 0, 0];\n\t\n\tforeach(i; 0 .. result.length)\n\t{\n\t\tlong min = long.max;\n\t\tlong min_index = -1;\n\t\tforeach(j; 0 .. nums.length)\n\t\t{\n\t\t\tif(indices[j] < nums[j].length && nums[j][indices[j]] < min)\n\t\t\t{\n\t\t\t\tmin = nums[j][indices[j]];\n\t\t\t\tmin_index = j;\n\t\t\t}\n\t\t}\n\t\t\n\t\tresult[i] = min;\n\t\tindices[min_index]++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length + num3.length];\n\tlong[] temp2 = new long[num1.length + num2.length + num3.length];\n\tlong[] temp3 = new long[num1.length + num2.length + num3.length];\n\t\n\tfor(int i = 0; i < num1.length; i++)\n\t{\n\t\ttemp[i] = num1[i];\n\t}\n\tfor(int i = 0; i < num2.length; i++)\n\t{\n\t\ttemp2[i] = num2[i];\n\t}\n\tfor(int i = 0; i < num3.length; i++)\n\t{\n\t\ttemp3[i] = num3[i];\n\t}\n\t\n\tresult = temp.merge(temp2).merge(temp3);\n\t\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tlong[] temp;\n\t\n\ttemp = num1 ~ num2;\n\tresult = temp ~ num3;\n\t\n\tresult.sort();\n\t\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tlong[] nums = [num1, num2, num3];\n\tforeach(num; nums)\n\t{\n\t\tif(num.length == 0)\n\t\t\tcontinue;\n\t\tresult ~= num;\n\t}\n\tresult.sort;\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0, l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j] && num1[i] < num3[k]) \n\t\t{\n\t\t\tresult[l++] = num1[i++];\n\t\t} \n\t\telse if (num2[j] < num1[i] && num2[j] < num3[k]) \n\t\t{\n\t\t\tresult[l++] = num2[j++];\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult[l++] = num3[k++];\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[l++] = num1[i++];\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[l++] = num2[j++];\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[l++] = num3[k++];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\twhile(i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\tif(num1[i] < num3[k])\n\t\t\t{\n\t\t\t\tresult[l] = num1[i];\n\t\t\t\ti++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(num2[j] < num3[k])\n\t\t\t{\n\t\t\t\tresult[l] = num2[j];\n\t\t\t\tj++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\tresult[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[l] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile(i < num1.length && k < num3.length)\n\t{\n\t\tif(num1[i] < num3[k])\n\t\t{\n\t\t\tresult[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[l] = num3[k];\n\t\t\tk++;\n\t\t}\n\t\tl++;\n\t}",
    "{\n\tlong[] result;\n\tint i = 0, j = 0, k = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] <= num2[j] && num1[i] <= num3[k]) \n\t\t{\n\t\t\tresult ~= num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (num2[j] <= num1[i] && num2[j] <= num3[k]) \n\t\t{\n\t\t\tresult ~= num2[j];\n\t\t\tj++;\n\t\t}\n\t\telse if (num3[k] <= num1[i] && num3[k] <= num2[j]) \n\t\t{\n\t\t\tresult ~= num3[k];\n\t\t\tk++;\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult ~= num1[i];\n\t\ti++;\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult ~= num2[j];\n\t\tj++;\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult ~= num3[k];\n\t\tk++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult ~= num1[i++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult ~= num3[k++];\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult ~= num2[j++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult ~= num3[k++];\n\t\t\t}\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult ~= num1[i++];\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult ~= num2[j++];\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult ~= num3[k++];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] merged_list = new long[num1.length + num2.length + num3.length];\n\tlong[] temp_list = new long[num1.length + num2.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\t\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\ttemp_list[k] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp_list[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < num1.length)\n\t{\n\t\ttemp_list[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num2.length)\n\t{\n\t\ttemp_list[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\t\n\twhile(i < temp_list.length && j < num3.length)\n\t{\n\t\tif(temp_list[i] < num3[j])\n\t\t{\n\t\t\tmerged_list[k] = temp_list[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmerged_list[k] = num3[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < temp_list.length)\n\t{\n\t\tmerged_list[k] = temp_list[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num3.length)\n\t{\n\t\tmerged_list[k] = num3[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\treturn merged_list",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[3];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\t\n\twhile(i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\ttemp[0] = num1[i];\n\t\ttemp[1] = num2[j];\n\t\ttemp[2] = num3[k];\n\t\t\n\t\ttemp.sort();\n\t\t\n\t\tresult[l] = temp[0];\n\t\t\n\t\tif(temp[0] == num1[i])\n\t\t{\n\t\t\ti++;\n\t\t}\n\t\telse if(temp[0] == num2[j])\n\t\t{\n\t\t\tj++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tk++;\n\t\t}\n\t\t\n\t\tl++;\n\t}\n\t\n\twhile(i < num1.length)\n\t{\n\t\tresult[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\t\n\twhile(j < num2.length)\n\t{\n\t\tresult[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\t\n\twhile(k < num3.length)\n\t{\n\t\tresult[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tresult.length = num1.length + num2.length + num3.length;\n\t\n\tlong[] temp;\n\ttemp.length = result.length;\n\t\n\tlong i = 0;\n\tlong j = 0;\n\tlong k = 0;\n\tlong l = 0;\n\t\n\twhile (i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\tif (num1[i] < num2[j])\n\t\t{\n\t\t\tif (num1[i] < num3[k])\n\t\t\t{\n\t\t\t\ttemp[l] = num1[i];\n\t\t\t\ti++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttemp[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (num2[j] < num3[k])\n\t\t\t{\n\t\t\t\ttemp[l] = num2[j];\n\t\t\t\tj++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttemp[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile (i < num1.length && j < num2.length)\n\t{\n\t\tif (num1[i] < num2[j])\n\t\t{\n\t\t\ttemp[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[l] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile (i < num1.length && k < num3.length)\n\t{\n\t\tif (num1[i] < num3[k])\n\t\t{\n\t\t\ttemp[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[l",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0, l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num1[i++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num2[j++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[l++] = num1[i++];\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[l++] = num2[j++];\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[l++] = num3[k++];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] merged_list = new long[num1.length + num2.length + num3.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] <= num2[j] && num1[i] <= num3[k]) \n\t\t{\n\t\t\tmerged_list[l] = num1[i];\n\t\t\ti++;\n\t\t} \n\t\telse if (num2[j] <= num1[i] && num2[j] <= num3[k]) \n\t\t{\n\t\t\tmerged_list[l] = num2[j];\n\t\t\tj++;\n\t\t} \n\t\telse if (num3[k] <= num1[i] && num3[k] <= num2[j]) \n\t\t{\n\t\t\tmerged_list[l] = num3[k];\n\t\t\tk++;\n\t\t}\n\t\tl++;\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tmerged_list[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tmerged_list[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tmerged_list[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\treturn merged_list;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[3];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\t\n\twhile(i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\ttemp[0] = num1[i];\n\t\ttemp[1] = num2[j];\n\t\ttemp[2] = num3[k];\n\t\t\n\t\ttemp.sort();\n\t\t\n\t\tresult[i + j + k] = temp[0];\n\t\t\n\t\tif(temp[0] == num1[i])\n\t\t\ti++;\n\t\telse if(temp[0] == num2[j])\n\t\t\tj++;\n\t\telse\n\t\t\tk++;\n\t}\n\t\n\twhile(i < num1.length)\n\t{\n\t\tresult[i + j + k] = num1[i];\n\t\ti++;\n\t}\n\t\n\twhile(j < num2.length)\n\t{\n\t\tresult[i + j + k] = num2[j];\n\t\tj++;\n\t}\n\t\n\twhile(k < num3.length)\n\t{\n\t\tresult[i + j + k] = num3[k];\n\t\tk++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0, l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num1[i++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num2[j++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[l++] = num1[i++];\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[l++] = num2[j++];\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[l++] = num3[k++];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tlong[] temp;\n\t\n\tif (num1.length == 0)\n\t{\n\t\tif (num2.length == 0)\n\t\t{\n\t\t\tresult = num3;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (num3.length == 0)\n\t\t\t{\n\t\t\t\tresult = num2;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult = num2 ~ num3;\n\t\t\t\tresult.sort;\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (num2.length == 0)\n\t\t{\n\t\t\tif (num3.length == 0)\n\t\t\t{\n\t\t\t\tresult = num1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult = num1 ~ num3;\n\t\t\t\tresult.sort;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (num3.length == 0)\n\t\t\t{\n\t\t\t\tresult = num1 ~ num2;\n\t\t\t\tresult.sort;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttemp = num1 ~ num2;\n\t\t\t\tresult = temp ~ num3;\n\t\t\t\tresult.sort;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tlong[] temp;\n\t\n\ttemp = num1 ~ num2;\n\tresult = temp ~ num3;\n\t\n\tresult.sort();\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\t\n\tint i = 0, j = 0, k = 0, l = 0;\n\t\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < num1.length)\n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num2.length)\n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\ti = 0;\n\tj = 0;\n\t\n\twhile(i < temp.length && j < num3.length)\n\t{\n\t\tif(temp[i] < num3[j])\n\t\t{\n\t\t\tresult[l] = temp[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[l] = num3[j];\n\t\t\tj++;\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile(i < temp.length)\n\t{\n\t\tresult[l] = temp[i];\n\t\ti++;\n\t\tl++;\n\t}\n\t\n\twhile(j < num3.length)\n\t{\n\t\tresult[l] = num3[j];\n\t\tj++;\n\t\tl++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\t\n\tint i = 0, j = 0, k = 0;\n\tint index = 0;\n\t\n\twhile(i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\tif(num1[i] < num3[k])\n\t\t\t{\n\t\t\t\tresult[index] = num1[i];\n\t\t\t\ti++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[index] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(num2[j] < num3[k])\n\t\t\t{\n\t\t\t\tresult[index] = num2[j];\n\t\t\t\tj++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[index] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\tindex++;\n\t}\n\t\n\twhile(i < num1.length)\n\t{\n\t\tresult[index] = num1[i];\n\t\ti++;\n\t\tindex++;\n\t}\n\t\n\twhile(j < num2.length)\n\t{\n\t\tresult[index] = num2[j];\n\t\tj++;\n\t\tindex++;\n\t}\n\t\n\twhile(k < num3.length)\n\t{\n\t\tresult[index] = num3[k];\n\t\tk++;\n\t\tindex++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\t\n\twhile (i < num1.length && j < num2.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile (i < num1.length) \n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile (j < num2.length) \n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\t\n\twhile (i < temp.length && j < num3.length) \n\t{\n\t\tif (temp[i] < num3[j]) \n\t\t{\n\t\t\tresult[k] = temp[i];\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult[k] = num3[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile (i < temp.length) \n\t{\n\t\tresult[k] = temp[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile (j < num3.length) \n\t{\n\t\tresult[k] = num3[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tresult.length = num1.length + num2.length + num3.length;\n\t\n\tlong[] temp;\n\ttemp.length = num1.length + num2.length;\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\t\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < num1.length)\n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num2.length)\n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\t\n\twhile(i < temp.length && j < num3.length)\n\t{\n\t\tif(temp[i] < num3[j])\n\t\t{\n\t\t\tresult[k] = temp[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[k] = num3[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < temp.length)\n\t{\n\t\tresult[k] = temp[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num3.length)\n\t{\n\t\tresult[k] = num3[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\tlong[] temp2 = new long[num1.length + num2.length + num3.length];\n\t\n\t// merge num1 and num2 into temp\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\twhile (i < num1.length && j < num2.length)\n\t{\n\t\tif (num1[i] < num2[j])\n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile (i < num1.length)\n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile (j < num2.length)\n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\t// merge temp and num3 into result\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\twhile (i < temp.length && j < num3.length)\n\t{\n\t\tif (temp[i] < num3[j])\n\t\t{\n\t\t\tresult[k] = temp[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[k] = num3[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile (i < temp.length)\n\t{\n\t\tresult[k] = temp[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile (j < num3.length)\n\t{\n\t\tresult[k] = num3[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\treturn",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[3];\n\tlong[] index = new long[3];\n\tlong[] min = new long[3];\n\tlong[] max = new long[3];\n\tlong[] min_index = new long[3];\n\tlong[] max_index = new long[3];\n\tlong[] min_value = new long[3];\n\tlong[] max_value = new long[3];\n\tlong[] min_value_index = new long[3];\n\tlong[] max_value_index = new long[3];\n\tlong[] min_value_index_temp = new long[3];\n\tlong[] max_value_index_temp = new long[3];\n\tlong[] min_value_temp = new long[3];\n\tlong[] max_value_temp = new long[3];\n\tlong[] min_temp = new long[3];\n\tlong[] max_temp = new long[3];\n\tlong[] min_index_temp = new long[3];\n\tlong[] max_index_temp = new long[3];\n\tlong[] min_index_temp_temp = new long[3];\n\tlong[] max_index_temp_temp = new long[3];\n\tlong[] min_temp_temp = new long[3];\n\tlong[] max_temp_temp = new long[3];\n\tlong[] min_temp_temp_temp = new long[3];\n\tlong[] max_temp_temp_temp = new long[3];\n\tlong[] min_temp_temp_temp_temp = new long[3];\n\tlong[] max_temp_temp_temp_temp = new long[3];\n\tlong[] min_temp_temp_temp_temp_temp = new long[3];\n\tlong[] max_temp_temp_temp_temp_temp = new long[3];\n\tlong[] min_temp_temp_temp_temp_temp_temp = new long[3];\n\tlong[] max_temp_temp_temp_temp_temp_temp = new long[3];\n\tlong[] min_temp_temp_temp_temp_temp_",
    "{\n\tlong[] nums = new long[num1.length + num2.length + num3.length];\n\tlong[] nums1 = num1;\n\tlong[] nums2 = num2;\n\tlong[] nums3 = num3;\n\tlong[] nums4 = nums;\n\t\n\tforeach(i; 0 .. nums.length)\n\t{\n\t\tif(i < nums1.length)\n\t\t{\n\t\t\tnums4[i] = nums1[i];\n\t\t}\n\t\telse if(i < nums1.length + nums2.length)\n\t\t{\n\t\t\tnums4[i] = nums2[i - nums1.length];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnums4[i] = nums3[i - nums1.length - nums2.length];\n\t\t}\n\t}\n\t\n\tforeach(i; 0 .. nums.length)\n\t{\n\t\tforeach(j; i .. nums.length)\n\t\t{\n\t\t\tif(nums4[i] > nums4[j])\n\t\t\t{\n\t\t\t\tlong temp = nums4[i];\n\t\t\t\tnums4[i] = nums4[j];\n\t\t\t\tnums4[j] = temp;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn nums4;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\tlong[] temp2 = new long[num1.length + num2.length + num3.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\tint m = 0;\n\t\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < num1.length)\n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num2.length)\n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\twhile(l < temp.length && m < num3.length)\n\t{\n\t\tif(temp[l] < num3[m])\n\t\t{\n\t\t\ttemp2[k] = temp[l];\n\t\t\tl++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp2[k] = num3[m];\n\t\t\tm++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(l < temp.length)\n\t{\n\t\ttemp2[k] = temp[l];\n\t\tl++;\n\t\tk++;\n\t}\n\t\n\twhile(m < num3.length)\n\t{\n\t\ttemp2[k] = num3[m];\n\t\tm++;\n\t\tk++;\n\t}\n\t\n\treturn temp2;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[3];\n\tlong[] temp_index = new long[3];\n\t\n\ttemp_index[0] = 0;\n\ttemp_index[1] = 0;\n\ttemp_index[2] = 0;\n\t\n\tfor (long i = 0; i < result.length; i++) {\n\t\ttemp[0] = num1[temp_index[0]];\n\t\ttemp[1] = num2[temp_index[1]];\n\t\ttemp[2] = num3[temp_index[2]];\n\t\t\n\t\tlong min_index = min_element(temp);\n\t\tresult[i] = temp[min_index];\n\t\t\n\t\tif (min_index == 0) {\n\t\t\ttemp_index[0]++;\n\t\t}\n\t\telse if (min_index == 1) {\n\t\t\ttemp_index[1]++;\n\t\t}\n\t\telse if (min_index == 2) {\n\t\t\ttemp_index[2]++;\n\t\t}\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\t\n\twhile(i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\tif(num1[i] < num2[j] && num1[i] < num3[k])\n\t\t{\n\t\t\tresult[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if(num2[j] < num1[i] && num2[j] < num3[k])\n\t\t{\n\t\t\tresult[l] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[l] = num3[k];\n\t\t\tk++;\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile(i < num1.length)\n\t{\n\t\tresult[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\t\n\twhile(j < num2.length)\n\t{\n\t\tresult[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\t\n\twhile(k < num3.length)\n\t{\n\t\tresult[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\t\n\tint i = 0, j = 0, k = 0, l = 0;\n\t\n\twhile(i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\tif(num1[i] < num3[k])\n\t\t\t{\n\t\t\t\tresult[l++] = num1[i++];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(num2[j] < num3[k])\n\t\t\t{\n\t\t\t\tresult[l++] = num2[j++];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t}\n\t\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\tresult[l++] = num1[i++];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[l++] = num2[j++];\n\t\t}\n\t}\n\t\n\twhile(i < num1.length && k < num3.length)\n\t{\n\t\tif(num1[i] < num3[k])\n\t\t{\n\t\t\tresult[l++] = num1[i++];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[l++] = num3[k++];\n\t\t}\n\t}\n\t\n\twhile(j < num2.length && k < num3.length)\n\t{\n\t\tif(num2[j] < num3[k])\n\t\t{\n\t\t\tresult[l++] = num2[",
    "{\n\tlong[] result;\n\tlong[] temp;\n\tlong[] temp2;\n\tlong[] temp3;\n\tlong[] temp4;\n\tlong[] temp5;\n\tlong[] temp6;\n\tlong[] temp7;\n\tlong[] temp8;\n\tlong[] temp9;\n\tlong[] temp10;\n\tlong[] temp11;\n\tlong[] temp12;\n\tlong[] temp13;\n\tlong[] temp14;\n\tlong[] temp15;\n\tlong[] temp16;\n\tlong[] temp17;\n\tlong[] temp18;\n\tlong[] temp19;\n\tlong[] temp20;\n\tlong[] temp21;\n\tlong[] temp22;\n\tlong[] temp23;\n\tlong[] temp24;\n\tlong[] temp25;\n\tlong[] temp26;\n\tlong[] temp27;\n\tlong[] temp28;\n\tlong[] temp29;\n\tlong[] temp30;\n\tlong[] temp31;\n\tlong[] temp32;\n\tlong[] temp33;\n\tlong[] temp34;\n\tlong[] temp35;\n\tlong[] temp36;\n\tlong[] temp37;\n\tlong[] temp38;\n\tlong[] temp39;\n\tlong[] temp40;\n\tlong[] temp41;\n\tlong[] temp42;\n\tlong[] temp43;\n\tlong[] temp44;\n\tlong[] temp45;\n\tlong[] temp46;\n\tlong[] temp47;\n\tlong[] temp48;\n\tlong[] temp49;\n\tlong[] temp50;\n\tlong[] temp51;\n\tlong[] temp52;\n\tlong[] temp53;\n\tlong[] temp54;\n\tlong[] temp55;\n\tlong[] temp56;\n\tlong[] temp57;\n\tlong[] temp58;\n\tlong[] temp59;\n\tlong[] temp60;\n\tlong[] temp61;\n\tlong[] temp62;\n\tlong[] temp63;\n\tlong[] temp64;\n\tlong[] temp65;\n\tlong[] temp66;\n\tlong[] temp67;\n\tlong[] temp68;\n\tlong[] temp69;\n\tlong[] temp70;\n\tlong[] temp71;\n\tlong[] temp72;\n",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\t\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < num1.length)\n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num2.length)\n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\t\n\twhile(i < temp.length && j < num3.length)\n\t{\n\t\tif(temp[i] < num3[j])\n\t\t{\n\t\t\tresult[k] = temp[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[k] = num3[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < temp.length)\n\t{\n\t\tresult[k] = temp[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num3.length)\n\t{\n\t\tresult[k] = num3[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[3];\n\tlong[] index = new long[3];\n\tlong[] min = new long[3];\n\tlong[] max = new long[3];\n\t\n\tindex[0] = 0;\n\tindex[1] = 0;\n\tindex[2] = 0;\n\t\n\tmin[0] = num1[0];\n\tmin[1] = num2[0];\n\tmin[2] = num3[0];\n\t\n\tmax[0] = num1[num1.length - 1];\n\tmax[1] = num2[num2.length - 1];\n\tmax[2] = num3[num3.length - 1];\n\t\n\tlong[] min_max = minmax(min);\n\t\n\tlong min_value = min_max[0];\n\tlong max_value = min_max[1];\n\t\n\tlong i = 0;\n\t\n\twhile(min_value <= max_value)\n\t{\n\t\tif(index[0] < num1.length && num1[index[0]] == min_value)\n\t\t{\n\t\t\tresult[i] = num1[index[0]];\n\t\t\tindex[0]++;\n\t\t}\n\t\t\n\t\tif(index[1] < num2.length && num2[index[1]] == min_value)\n\t\t{\n\t\t\tresult[i] = num2[index[1]];\n\t\t\tindex[1]++;\n\t\t}\n\t\t\n\t\tif(index[2] < num3.length && num3[index[2]] == min_value)\n\t\t{\n\t\t\tresult[i] = num3[index[2]];\n\t\t\tindex[2]++;\n\t\t}\n\t\t\n\t\ti++;\n\t\t\n\t\ttemp[0] = num1[index[0]];\n\t\ttemp[1] = num2[index[1]];\n\t\ttemp[2] = num3[index[2]];\n\t\t\n\t",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\tif (num1[i] < num2[j])\n\t\t{\n\t\t\tif (num1[i] < num3[k])\n\t\t\t{\n\t\t\t\tresult ~= num1[i];\n\t\t\t\ti++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (num2[j] < num3[k])\n\t\t\t{\n\t\t\t\tresult ~= num2[j];\n\t\t\t\tj++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult ~= num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t}\n\t\n\twhile (i < num1.length)\n\t{\n\t\tresult ~= num1[i];\n\t\ti++;\n\t}\n\t\n\twhile (j < num2.length)\n\t{\n\t\tresult ~= num2[j];\n\t\tj++;\n\t}\n\t\n\twhile (k < num3.length)\n\t{\n\t\tresult ~= num3[k];\n\t\tk++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[3];\n\tlong[] index = new long[3];\n\tlong[] min = new long[3];\n\tlong[] min_index = new long[3];\n\tlong[] max = new long[3];\n\tlong[] max_index = new long[3];\n\tlong[] min_value = new long[3];\n\tlong[] max_value = new long[3];\n\tlong[] min_value_index = new long[3];\n\tlong[] max_value_index = new long[3];\n\tlong[] min_value_index_temp = new long[3];\n\tlong[] max_value_index_temp = new long[3];\n\tlong[] min_value_temp = new long[3];\n\tlong[] max_value_temp = new long[3];\n\tlong[] min_temp = new long[3];\n\tlong[] max_temp = new long[3];\n\tlong[] min_index_temp = new long[3];\n\tlong[] max_index_temp = new long[3];\n\tlong[] min_index_temp_temp = new long[3];\n\tlong[] max_index_temp_temp = new long[3];\n\tlong[] min_temp_temp = new long[3];\n\tlong[] max_temp_temp = new long[3];\n\tlong[] min_temp_temp_temp = new long[3];\n\tlong[] max_temp_temp_temp = new long[3];\n\tlong[] min_temp_temp_temp_temp = new long[3];\n\tlong[] max_temp_temp_temp_temp = new long[3];\n\tlong[] min_temp_temp_temp_temp_temp = new long[3];\n\tlong[] max_temp_temp_temp_temp_temp = new long[3];\n\tlong[] min_temp_temp_temp_temp_temp_temp = new long[3];\n\tlong[] max_temp_temp_temp_temp_temp_temp = new long[3];\n\tlong[] min_temp_temp_temp_temp_temp_",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\t\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j] && num1[i] < num3[k]) \n\t\t{\n\t\t\tresult[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (num2[j] < num1[i] && num2[j] < num3[k]) \n\t\t{\n\t\t\tresult[l] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult[l] = num3[k];\n\t\t\tk++;\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile (i < num1.length) \n\t{\n\t\tresult[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\t\n\twhile (j < num2.length) \n\t{\n\t\tresult[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\t\n\twhile (k < num3.length) \n\t{\n\t\tresult[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] nums = num1 ~ num2 ~ num3;\n\treturn nums.sort;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[3];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\twhile(i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\ttemp[0] = num1[i];\n\t\ttemp[1] = num2[j];\n\t\ttemp[2] = num3[k];\n\t\ttemp.sort();\n\t\tresult[l] = temp[0];\n\t\tif(temp[0] == num1[i])\n\t\t{\n\t\t\ti++;\n\t\t}\n\t\telse if(temp[0] == num2[j])\n\t\t{\n\t\t\tj++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tk++;\n\t\t}\n\t\tl++;\n\t}\n\twhile(i < num1.length)\n\t{\n\t\tresult[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\twhile(j < num2.length)\n\t{\n\t\tresult[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\twhile(k < num3.length)\n\t{\n\t\tresult[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\t\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l] = num1[i];\n\t\t\t\ti++;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l] = num2[j];\n\t\t\t\tj++;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile (i < num1.length) \n\t{\n\t\tresult[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\t\n\twhile (j < num2.length) \n\t{\n\t\tresult[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\t\n\twhile (k < num3.length) \n\t{\n\t\tresult[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = [];\n\tlong[] list = [num1, num2, num3];\n\tforeach(long[] nums; list)\n\t{\n\t\tforeach(long num; nums)\n\t\t{\n\t\t\tresult ~= num;\n\t\t}\n\t}\n\tsort(result);\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length + num3.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\twhile(i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\tif(num1[i] < num3[k])\n\t\t\t{\n\t\t\t\ttemp[l] = num1[i];\n\t\t\t\ti++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttemp[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(num2[j] < num3[k])\n\t\t\t{\n\t\t\t\ttemp[l] = num2[j];\n\t\t\t\tj++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttemp[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\tl++;\n\t}\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\ttemp[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[l] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tl++;\n\t}\n\twhile(i < num1.length && k < num3.length)\n\t{\n\t\tif(num1[i] < num3[k])\n\t\t{\n\t\t\ttemp[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[l] = num3[",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0, l = 0;\n\twhile(i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\tif(num1[i] < num3[k])\n\t\t\t{\n\t\t\t\tresult[l++] = num1[i++];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(num2[j] < num3[k])\n\t\t\t{\n\t\t\t\tresult[l++] = num2[j++];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t}\n\twhile(i < num1.length)\n\t{\n\t\tresult[l++] = num1[i++];\n\t}\n\twhile(j < num2.length)\n\t{\n\t\tresult[l++] = num2[j++];\n\t}\n\twhile(k < num3.length)\n\t{\n\t\tresult[l++] = num3[k++];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] nums = new long[num1.length + num2.length + num3.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\t\n\twhile (i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\tif (num1[i] < num2[j])\n\t\t{\n\t\t\tif (num1[i] < num3[k])\n\t\t\t{\n\t\t\t\tnums[l] = num1[i];\n\t\t\t\ti++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tnums[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (num2[j] < num3[k])\n\t\t\t{\n\t\t\t\tnums[l] = num2[j];\n\t\t\t\tj++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tnums[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile (i < num1.length)\n\t{\n\t\tnums[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\t\n\twhile (j < num2.length)\n\t{\n\t\tnums[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\t\n\twhile (k < num3.length)\n\t{\n\t\tnums[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\t\n\treturn nums;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\t\n\tint i = 0, j = 0, k = 0;\n\t\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult ~= num1[i];\n\t\t\t\ti++;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tresult ~= num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult ~= num2[j];\n\t\t\t\tj++;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tresult ~= num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t}\n\t\n\twhile (i < num1.length) \n\t{\n\t\tresult ~= num1[i];\n\t\ti++;\n\t}\n\t\n\twhile (j < num2.length) \n\t{\n\t\tresult ~= num2[j];\n\t\tj++;\n\t}\n\t\n\twhile (k < num3.length) \n\t{\n\t\tresult ~= num3[k];\n\t\tk++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result;\n\t\n\tresult = num1 ~ num2 ~ num3;\n\tresult.sort;\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\t\n\tlong[] nums = [num1, num2, num3];\n\t\n\tlong[] indices = new long[nums.length];\n\t\n\tlong index = 0;\n\t\n\twhile(true)\n\t{\n\t\tlong min_index = -1;\n\t\tlong min_value = long.max;\n\t\t\n\t\tfor(long i = 0; i < nums.length; i++)\n\t\t{\n\t\t\tif(indices[i] < nums[i].length && nums[i][indices[i]] < min_value)\n\t\t\t{\n\t\t\t\tmin_index = i;\n\t\t\t\tmin_value = nums[i][indices[i]];\n\t\t\t}\n\t\t}\n\t\t\n\t\tif(min_index == -1)\n\t\t\tbreak;\n\t\t\n\t\tresult[index++] = min_value;\n\t\tindices[min_index]++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\t\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < num1.length)\n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num2.length)\n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\t\n\twhile(i < temp.length && j < num3.length)\n\t{\n\t\tif(temp[i] < num3[j])\n\t\t{\n\t\t\tresult[k] = temp[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[k] = num3[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < temp.length)\n\t{\n\t\tresult[k] = temp[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num3.length)\n\t{\n\t\tresult[k] = num3[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\t\n\twhile(i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\tif(num1[i] < num2[j] && num1[i] < num3[k])\n\t\t{\n\t\t\tresult[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if(num2[j] < num1[i] && num2[j] < num3[k])\n\t\t{\n\t\t\tresult[l] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[l] = num3[k];\n\t\t\tk++;\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\tresult[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[l] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile(i < num1.length && k < num3.length)\n\t{\n\t\tif(num1[i] < num3[k])\n\t\t{\n\t\t\tresult[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[l] = num3[k];\n\t\t\tk++;\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile(j < num2.length && k < num3.length)\n\t{\n\t\tif(num2[j] < num3[k])\n\t\t{\n\t\t\tresult[l] = num2[j];\n\t",
    "{\n\tlong[] result;\n\tlong[] temp;\n\tlong[] temp2;\n\t\n\ttemp = num1 ~ num2;\n\ttemp2 = temp ~ num3;\n\tresult = sort(temp2);\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\t\n\tlong[] nums = [num1, num2, num3];\n\t\n\tlong[] indices = new long[nums.length];\n\t\n\tlong[] min_indices = new long[nums.length];\n\t\n\tlong[] min_values = new long[nums.length];\n\t\n\tfor (long i = 0; i < nums.length; i++)\n\t{\n\t\tmin_indices[i] = i;\n\t\tmin_values[i] = nums[i][0];\n\t}\n\t\n\tlong min_index = min_indices[0];\n\t\n\tlong min_value = min_values[0];\n\t\n\tfor (long i = 1; i < nums.length; i++)\n\t{\n\t\tif (min_values[i] < min_value)\n\t\t{\n\t\t\tmin_index = min_indices[i];\n\t\t\tmin_value = min_values[i];\n\t\t}\n\t}\n\t\n\tlong result_index = 0;\n\t\n\twhile (true)\n\t{\n\t\tresult[result_index] = min_value;\n\t\t\n\t\tresult_index++;\n\t\t\n\t\tindices[min_index]++;\n\t\t\n\t\tif (indices[min_index] >= nums[min_index].length)\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\t\n\t\tmin_values[min_index] = nums[min_index][indices[min_index]];\n\t\t\n\t\tmin_index = min_indices[0];\n\t\t\n\t\tmin_value = min_values[0];\n\t\t\n\t\tfor (long i = 1; i < nums.length; i++)\n\t\t{\n\t\t\tif (min_values[i] < min_value)\n\t\t\t{\n\t\t\t\tmin_index = min_indices[i];\n\t\t\t\tmin_value = min_values[i];\n\t\t\t}\n\t",
    "{\n\tlong[] result;\n\tlong[] temp;\n\tlong[] temp2;\n\tlong[] temp3;\n\tlong[] temp4;\n\tlong[] temp5;\n\tlong[] temp6;\n\tlong[] temp7;\n\tlong[] temp8;\n\tlong[] temp9;\n\tlong[] temp10;\n\tlong[] temp11;\n\tlong[] temp12;\n\tlong[] temp13;\n\tlong[] temp14;\n\tlong[] temp15;\n\tlong[] temp16;\n\tlong[] temp17;\n\tlong[] temp18;\n\tlong[] temp19;\n\tlong[] temp20;\n\tlong[] temp21;\n\tlong[] temp22;\n\tlong[] temp23;\n\tlong[] temp24;\n\tlong[] temp25;\n\tlong[] temp26;\n\tlong[] temp27;\n\tlong[] temp28;\n\tlong[] temp29;\n\tlong[] temp30;\n\tlong[] temp31;\n\tlong[] temp32;\n\tlong[] temp33;\n\tlong[] temp34;\n\tlong[] temp35;\n\tlong[] temp36;\n\tlong[] temp37;\n\tlong[] temp38;\n\tlong[] temp39;\n\tlong[] temp40;\n\tlong[] temp41;\n\tlong[] temp42;\n\tlong[] temp43;\n\tlong[] temp44;\n\tlong[] temp45;\n\tlong[] temp46;\n\tlong[] temp47;\n\tlong[] temp48;\n\tlong[] temp49;\n\tlong[] temp50;\n\tlong[] temp51;\n\tlong[] temp52;\n\tlong[] temp53;\n\tlong[] temp54;\n\tlong[] temp55;\n\tlong[] temp56;\n\tlong[] temp57;\n\tlong[] temp58;\n\tlong[] temp59;\n\tlong[] temp60;\n\tlong[] temp61;\n\tlong[] temp62;\n\tlong[] temp63;\n\tlong[] temp64;\n\tlong[] temp65;\n\tlong[] temp66;\n\tlong[] temp67;\n\tlong[] temp68;\n\tlong[] temp69;\n\tlong[] temp70;\n\tlong[] temp71;\n\tlong[] temp72;\n",
    "{\n\tlong[] result;\n\tresult.length = num1.length + num2.length + num3.length;\n\t\n\tlong[] temp;\n\ttemp.length = num1.length + num2.length;\n\t\n\tlong[] temp2;\n\ttemp2.length = num1.length + num2.length + num3.length;\n\t\n\tlong i = 0;\n\tlong j = 0;\n\tlong k = 0;\n\t\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < num1.length)\n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num2.length)\n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\t\n\twhile(i < temp.length && j < num3.length)\n\t{\n\t\tif(temp[i] < num3[j])\n\t\t{\n\t\t\ttemp2[k] = temp[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp2[k] = num3[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < temp.length)\n\t{\n\t\ttemp2[k] = temp[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num3.length)\n\t{\n\t\ttemp2[k] = num3[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\t",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] nums = [num1, num2, num3];\n\t\n\tlong[] min_num = new long[3];\n\tlong[] min_num_index = new long[3];\n\t\n\tfor (long i = 0; i < nums.length; i++)\n\t{\n\t\tmin_num[i] = nums[i][0];\n\t\tmin_num_index[i] = 0;\n\t}\n\t\n\tlong min_index;\n\tlong min_value;\n\t\n\tfor (long i = 0; i < result.length; i++)\n\t{\n\t\tmin_index = 0;\n\t\tmin_value = min_num[0];\n\t\tfor (long j = 1; j < min_num.length; j++)\n\t\t{\n\t\t\tif (min_num[j] < min_value)\n\t\t\t{\n\t\t\t\tmin_value = min_num[j];\n\t\t\t\tmin_index = j;\n\t\t\t}\n\t\t}\n\t\t\n\t\tresult[i] = min_value;\n\t\tmin_num_index[min_index]++;\n\t\tif (min_num_index[min_index] < nums[min_index].length)\n\t\t{\n\t\t\tmin_num[min_index] = nums[min_index][min_num_index[min_index]];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmin_num[min_index] = long.max;\n\t\t}\n\t}\n\t\n\treturn result;\n}"
  ]
}
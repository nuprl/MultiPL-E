{
  "name": "mbpp_108_merge_sorted_list",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to merge three lists into a single sorted list.\n\t\n*/\nlong[] merge_sorted_list(long[] num1, long[] num2, long[] num3) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_108_merge_sorted_list.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = merge_sorted_list;\n\n    assert(candidate([25L, 24L, 15L, 4L, 5L, 29L, 110L], [19L, 20L, 11L, 56L, 25L, 233L, 154L], [24L, 26L, 54L, 48L]) == [4L, 5L, 11L, 15L, 19L, 20L, 24L, 24L, 25L, 25L, 26L, 29L, 48L, 54L, 56L, 110L, 154L, 233L]);\n    assert(candidate([1L, 3L, 5L, 6L, 8L, 9L], [2L, 5L, 7L, 11L], [1L, 4L, 7L, 8L, 12L]) == [1L, 1L, 2L, 3L, 4L, 5L, 5L, 6L, 7L, 7L, 8L, 8L, 9L, 11L, 12L]);\n    assert(candidate([18L, 14L, 10L, 9L, 8L, 7L, 9L, 3L, 2L, 4L, 1L], [25L, 35L, 22L, 85L, 14L, 65L, 75L, 25L, 58L], [12L, 74L, 9L, 50L, 61L, 41L]) == [1L, 2L, 3L, 4L, 7L, 8L, 9L, 9L, 9L, 10L, 12L, 14L, 14L, 18L, 22L, 25L, 25L, 35L, 41L, 50L, 58L, 61L, 65L, 74L, 75L, 85L]);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "completions": [
    "{\n\tlong[] result;\n\tlong[] temp;\n\tlong[] temp2;\n\tlong[] temp3;\n\t\n\ttemp = num1 ~ num2;\n\ttemp2 = temp ~ num3;\n\ttemp3 = temp2.sort();\n\t\n\tresult = temp3;\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[3];\n\tint i = 0, j = 0, k = 0, l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\ttemp[0] = num1[i];\n\t\ttemp[1] = num2[j];\n\t\ttemp[2] = num3[k];\n\t\tresult[l++] = min(temp);\n\t\tif (result[l - 1] == num1[i])\n\t\t\ti++;\n\t\telse if (result[l - 1] == num2[j])\n\t\t\tj++;\n\t\telse\n\t\t\tk++;\n\t}\n\twhile (i < num1.length)\n\t\tresult[l++] = num1[i++];\n\twhile (j < num2.length)\n\t\tresult[l++] = num2[j++];\n\twhile (k < num3.length)\n\t\tresult[l++] = num3[k++];\n\treturn result;\n}",
    "{\n\tlong[] merged_list = new long[num1.length + num2.length + num3.length];\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\twhile(i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\tif(num1[i] < num2[j] && num1[i] < num3[k])\n\t\t{\n\t\t\tmerged_list[l] = num1[i];\n\t\t\ti++;\n\t\t\tl++;\n\t\t}\n\t\telse if(num2[j] < num1[i] && num2[j] < num3[k])\n\t\t{\n\t\t\tmerged_list[l] = num2[j];\n\t\t\tj++;\n\t\t\tl++;\n\t\t}\n\t\telse if(num3[k] < num1[i] && num3[k] < num2[j])\n\t\t{\n\t\t\tmerged_list[l] = num3[k];\n\t\t\tk++;\n\t\t\tl++;\n\t\t}\n\t}\n\tif(i == num1.length)\n\t{\n\t\twhile(j < num2.length && k < num3.length)\n\t\t{\n\t\t\tif(num2[j] < num3[k])\n\t\t\t{\n\t\t\t\tmerged_list[l] = num2[j];\n\t\t\t\tj++;\n\t\t\t\tl++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmerged_list[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t\tl++;\n\t\t\t}\n\t\t}\n\t\tif(j == num2.length)\n\t\t{\n\t\t\twhile(k < num3.length)\n\t\t\t{\n\t\t\t\tmerged_list[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t\tl++;\n\t\t\t}\n\t\t}\n\t\telse\n\t",
    "{\n\tlong[] result;\n\tlong[] temp;\n\t\n\tresult = num1;\n\ttemp = num2;\n\t\n\tforeach(i; 0 .. num2.length)\n\t{\n\t\tresult ~= temp[i];\n\t}\n\t\n\ttemp = num3;\n\t\n\tforeach(i; 0 .. num3.length)\n\t{\n\t\tresult ~= temp[i];\n\t}\n\t\n\tresult.sort;\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] nums = [num1, num2, num3];\n\tlong[] nums_index = [0, 0, 0];\n\tlong[] nums_length = [num1.length, num2.length, num3.length];\n\t\n\tforeach(i; 0 .. result.length)\n\t{\n\t\tlong min_index = 0;\n\t\tforeach(j; 1 .. nums.length)\n\t\t{\n\t\t\tif(nums_index[j] < nums_length[j] && nums[j][nums_index[j]] < nums[min_index][nums_index[min_index]])\n\t\t\t{\n\t\t\t\tmin_index = j;\n\t\t\t}\n\t\t}\n\t\tresult[i] = nums[min_index][nums_index[min_index]];\n\t\tnums_index[min_index]++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\t\n\tint i = 0, j = 0, k = 0, l = 0;\n\t\n\twhile (i < num1.length && j < num2.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile (i < num1.length) \n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile (j < num2.length) \n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\t\n\twhile (i < temp.length && j < num3.length) \n\t{\n\t\tif (temp[i] < num3[j]) \n\t\t{\n\t\t\tresult[k] = temp[i];\n\t\t\ti++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult[k] = num3[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile (i < temp.length) \n\t{\n\t\tresult[k] = temp[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile (j < num3.length) \n\t{\n\t\tresult[k] = num3[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tlong[] temp;\n\tlong[] temp2;\n\tlong[] temp3;\n\tlong[] temp4;\n\tlong[] temp5;\n\tlong[] temp6;\n\tlong[] temp7;\n\tlong[] temp8;\n\tlong[] temp9;\n\tlong[] temp10;\n\tlong[] temp11;\n\tlong[] temp12;\n\tlong[] temp13;\n\tlong[] temp14;\n\tlong[] temp15;\n\tlong[] temp16;\n\tlong[] temp17;\n\tlong[] temp18;\n\tlong[] temp19;\n\tlong[] temp20;\n\tlong[] temp21;\n\tlong[] temp22;\n\tlong[] temp23;\n\tlong[] temp24;\n\tlong[] temp25;\n\tlong[] temp26;\n\tlong[] temp27;\n\tlong[] temp28;\n\tlong[] temp29;\n\tlong[] temp30;\n\tlong[] temp31;\n\tlong[] temp32;\n\tlong[] temp33;\n\tlong[] temp34;\n\tlong[] temp35;\n\tlong[] temp36;\n\tlong[] temp37;\n\tlong[] temp38;\n\tlong[] temp39;\n\tlong[] temp40;\n\tlong[] temp41;\n\tlong[] temp42;\n\tlong[] temp43;\n\tlong[] temp44;\n\tlong[] temp45;\n\tlong[] temp46;\n\tlong[] temp47;\n\tlong[] temp48;\n\tlong[] temp49;\n\tlong[] temp50;\n\tlong[] temp51;\n\tlong[] temp52;\n\tlong[] temp53;\n\tlong[] temp54;\n\tlong[] temp55;\n\tlong[] temp56;\n\tlong[] temp57;\n\tlong[] temp58;\n\tlong[] temp59;\n\tlong[] temp60;\n\tlong[] temp61;\n\tlong[] temp62;\n\tlong[] temp63;\n\tlong[] temp64;\n\tlong[] temp65;\n\tlong[] temp66;\n\tlong[] temp67;\n\tlong[] temp68;\n\tlong[] temp69;\n\tlong[] temp70;\n\tlong[] temp71;\n\tlong[] temp72;\n",
    "{\n\tauto num1_len = num1.length;\n\tauto num2_len = num2.length;\n\tauto num3_len = num3.length;\n\t\n\tauto num1_index = 0;\n\tauto num2_index = 0;\n\tauto num3_index = 0;\n\t\n\tlong[] result;\n\t\n\twhile(num1_index < num1_len && num2_index < num2_len && num3_index < num3_len)\n\t{\n\t\tif(num1[num1_index] < num2[num2_index] && num1[num1_index] < num3[num3_index])\n\t\t{\n\t\t\tresult ~= num1[num1_index];\n\t\t\tnum1_index++;\n\t\t}\n\t\telse if(num2[num2_index] < num1[num1_index] && num2[num2_index] < num3[num3_index])\n\t\t{\n\t\t\tresult ~= num2[num2_index];\n\t\t\tnum2_index++;\n\t\t}\n\t\telse if(num3[num3_index] < num1[num1_index] && num3[num3_index] < num2[num2_index])\n\t\t{\n\t\t\tresult ~= num3[num3_index];\n\t\t\tnum3_index++;\n\t\t}\n\t}\n\t\n\twhile(num1_index < num1_len)\n\t{\n\t\tresult ~= num1[num1_index];\n\t\tnum1_index++;\n\t}\n\t\n\twhile(num2_index < num2_len)\n\t{\n\t\tresult ~= num2[num2_index];\n\t\tnum2_index++;\n\t}\n\t\n\twhile(num3_index < num3_len)\n\t{\n\t\tresult ~= num3[num3_index];\n\t\tnum3_index++;\n\t}\n\t\n\treturn result;\n}",
    "{\n\tlong[] merged_list = new long[num1.length + num2.length + num3.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\t\n\twhile(i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\tif(num1[i] < num2[j] && num1[i] < num3[k])\n\t\t{\n\t\t\tmerged_list[l++] = num1[i++];\n\t\t}\n\t\telse if(num2[j] < num1[i] && num2[j] < num3[k])\n\t\t{\n\t\t\tmerged_list[l++] = num2[j++];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmerged_list[l++] = num3[k++];\n\t\t}\n\t}\n\t\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\tmerged_list[l++] = num1[i++];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmerged_list[l++] = num2[j++];\n\t\t}\n\t}\n\t\n\twhile(i < num1.length && k < num3.length)\n\t{\n\t\tif(num1[i] < num3[k])\n\t\t{\n\t\t\tmerged_list[l++] = num1[i++];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmerged_list[l++] = num3[k++];\n\t\t}\n\t}\n\t\n\twhile(j < num2.length && k < num3.length)\n\t{\n\t\tif(num2[j] < num3[k])\n\t\t{\n\t\t\tmerged_list[l++] = num2[j++];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmer",
    "{\n\tlong[] merged_list = new long[num1.length + num2.length + num3.length];\n\tlong[] temp_list = new long[merged_list.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\t\n\twhile(i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\tif(num1[i] <= num2[j] && num1[i] <= num3[k])\n\t\t{\n\t\t\ttemp_list[l] = num1[i];\n\t\t\ti++;\n\t\t\tl++;\n\t\t}\n\t\telse if(num2[j] <= num1[i] && num2[j] <= num3[k])\n\t\t{\n\t\t\ttemp_list[l] = num2[j];\n\t\t\tj++;\n\t\t\tl++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp_list[l] = num3[k];\n\t\t\tk++;\n\t\t\tl++;\n\t\t}\n\t}\n\t\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] <= num2[j])\n\t\t{\n\t\t\ttemp_list[l] = num1[i];\n\t\t\ti++;\n\t\t\tl++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp_list[l] = num2[j];\n\t\t\tj++;\n\t\t\tl++;\n\t\t}\n\t}\n\t\n\twhile(i < num1.length && k < num3.length)\n\t{\n\t\tif(num1[i] <= num3[k])\n\t\t{\n\t\t\ttemp_list[l] = num1[i];\n\t\t\ti++;\n\t\t\tl++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp_list[l] = num3[k];\n\t\t\tk++;\n\t\t\tl++;\n\t\t}\n",
    "{\n\tauto nums = num1 ~ num2 ~ num3;\n\tnums.sort;\n\treturn nums;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0, l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j] && num1[i] < num3[k]) \n\t\t{\n\t\t\tresult[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if (num2[j] < num1[i] && num2[j] < num3[k]) \n\t\t{\n\t\t\tresult[l] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult[l] = num3[k];\n\t\t\tk++;\n\t\t}\n\t\tl++;\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[l] = num1[i];\n\t\ti++;\n\t\tl++;\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[l] = num2[j];\n\t\tj++;\n\t\tl++;\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[l] = num3[k];\n\t\tk++;\n\t\tl++;\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0, l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tif (num1[i] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num1[i++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t} \n\t\telse \n\t\t{\n\t\t\tif (num2[j] < num3[k]) \n\t\t\t{\n\t\t\t\tresult[l++] = num2[j++];\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tresult[l++] = num3[k++];\n\t\t\t}\n\t\t}\n\t}\n\twhile (i < num1.length) \n\t{\n\t\tresult[l++] = num1[i++];\n\t}\n\twhile (j < num2.length) \n\t{\n\t\tresult[l++] = num2[j++];\n\t}\n\twhile (k < num3.length) \n\t{\n\t\tresult[l++] = num3[k++];\n\t}\n\treturn result;\n}",
    "{\n\tlong[] result;\n\tlong[] temp;\n\tlong[] temp2;\n\tlong[] temp3;\n\tlong[] temp4;\n\tlong[] temp5;\n\tlong[] temp6;\n\tlong[] temp7;\n\tlong[] temp8;\n\tlong[] temp9;\n\tlong[] temp10;\n\tlong[] temp11;\n\tlong[] temp12;\n\tlong[] temp13;\n\tlong[] temp14;\n\tlong[] temp15;\n\tlong[] temp16;\n\tlong[] temp17;\n\tlong[] temp18;\n\tlong[] temp19;\n\tlong[] temp20;\n\tlong[] temp21;\n\tlong[] temp22;\n\tlong[] temp23;\n\tlong[] temp24;\n\tlong[] temp25;\n\tlong[] temp26;\n\tlong[] temp27;\n\tlong[] temp28;\n\tlong[] temp29;\n\tlong[] temp30;\n\tlong[] temp31;\n\tlong[] temp32;\n\tlong[] temp33;\n\tlong[] temp34;\n\tlong[] temp35;\n\tlong[] temp36;\n\tlong[] temp37;\n\tlong[] temp38;\n\tlong[] temp39;\n\tlong[] temp40;\n\tlong[] temp41;\n\tlong[] temp42;\n\tlong[] temp43;\n\tlong[] temp44;\n\tlong[] temp45;\n\tlong[] temp46;\n\tlong[] temp47;\n\tlong[] temp48;\n\tlong[] temp49;\n\tlong[] temp50;\n\tlong[] temp51;\n\tlong[] temp52;\n\tlong[] temp53;\n\tlong[] temp54;\n\tlong[] temp55;\n\tlong[] temp56;\n\tlong[] temp57;\n\tlong[] temp58;\n\tlong[] temp59;\n\tlong[] temp60;\n\tlong[] temp61;\n\tlong[] temp62;\n\tlong[] temp63;\n\tlong[] temp64;\n\tlong[] temp65;\n\tlong[] temp66;\n\tlong[] temp67;\n\tlong[] temp68;\n\tlong[] temp69;\n\tlong[] temp70;\n\tlong[] temp71;\n\tlong[] temp72;\n",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tint i = 0, j = 0, k = 0, l = 0;\n\twhile (i < num1.length && j < num2.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num2[j] && num1[i] < num3[k]) \n\t\t{\n\t\t\tresult[l++] = num1[i++];\n\t\t} \n\t\telse if (num2[j] < num1[i] && num2[j] < num3[k]) \n\t\t{\n\t\t\tresult[l++] = num2[j++];\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult[l++] = num3[k++];\n\t\t}\n\t}\n\twhile (i < num1.length && j < num2.length) \n\t{\n\t\tif (num1[i] < num2[j]) \n\t\t{\n\t\t\tresult[l++] = num1[i++];\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult[l++] = num2[j++];\n\t\t}\n\t}\n\twhile (i < num1.length && k < num3.length) \n\t{\n\t\tif (num1[i] < num3[k]) \n\t\t{\n\t\t\tresult[l++] = num1[i++];\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult[l++] = num3[k++];\n\t\t}\n\t}\n\twhile (j < num2.length && k < num3.length) \n\t{\n\t\tif (num2[j] < num3[k]) \n\t\t{\n\t\t\tresult[l++] = num2[j++];\n\t\t} \n\t\telse \n\t\t{\n\t\t\tresult[l++] = num3[k++];\n\t\t}\n\t}\n\twhile (i < num1.",
    "{\n\tlong[] result;\n\tresult.length = num1.length + num2.length + num3.length;\n\t\n\tlong[] temp = num1 ~ num2 ~ num3;\n\ttemp.sort;\n\t\n\treturn temp;\n}",
    "{\n\tlong[] result;\n\tlong[] temp;\n\tint i;\n\tint j;\n\tint k;\n\tint l;\n\t\n\tresult = new long[num1.length + num2.length + num3.length];\n\t\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\tl = 0;\n\t\n\twhile (i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\tif (num1[i] < num2[j])\n\t\t{\n\t\t\tif (num1[i] < num3[k])\n\t\t\t{\n\t\t\t\tresult[l] = num1[i];\n\t\t\t\ti++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (num2[j] < num3[k])\n\t\t\t{\n\t\t\t\tresult[l] = num2[j];\n\t\t\t\tj++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult[l] = num3[k];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile (i < num1.length && j < num2.length)\n\t{\n\t\tif (num1[i] < num2[j])\n\t\t{\n\t\t\tresult[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[l] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile (i < num1.length && k < num3.length)\n\t{\n\t\tif (num1[i] < num3[k])\n\t\t{\n\t\t\tresult[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\t\n\twhile(i < num1.length && j < num2.length && k < num3.length)\n\t{\n\t\tif(num1[i] <= num2[j] && num1[i] <= num3[k])\n\t\t{\n\t\t\tresult[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse if(num2[j] <= num1[i] && num2[j] <= num3[k])\n\t\t{\n\t\t\tresult[l] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[l] = num3[k];\n\t\t\tk++;\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] <= num2[j])\n\t\t{\n\t\t\tresult[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[l] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile(i < num1.length && k < num3.length)\n\t{\n\t\tif(num1[i] <= num3[k])\n\t\t{\n\t\t\tresult[l] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[l] = num3[k];\n\t\t\tk++;\n\t\t}\n\t\tl++;\n\t}\n\t\n\twhile(j < num2.length && k < num3.length)\n\t{\n\t\tif(num2[j] <= num3[k])\n\t\t{\n\t\t\tresult[l] = num2[j];\n\t",
    "{\n\tlong[] result;\n\t\n\tresult = num1 ~ num2 ~ num3;\n\tresult.sort;\n\t\n\treturn result;\n}",
    "{\n\tlong[] result = new long[num1.length + num2.length + num3.length];\n\tlong[] temp = new long[num1.length + num2.length];\n\t\n\tint i = 0;\n\tint j = 0;\n\tint k = 0;\n\tint l = 0;\n\t\n\twhile(i < num1.length && j < num2.length)\n\t{\n\t\tif(num1[i] < num2[j])\n\t\t{\n\t\t\ttemp[k] = num1[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttemp[k] = num2[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < num1.length)\n\t{\n\t\ttemp[k] = num1[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num2.length)\n\t{\n\t\ttemp[k] = num2[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\ti = 0;\n\tj = 0;\n\tk = 0;\n\t\n\twhile(i < temp.length && j < num3.length)\n\t{\n\t\tif(temp[i] < num3[j])\n\t\t{\n\t\t\tresult[k] = temp[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult[k] = num3[j];\n\t\t\tj++;\n\t\t}\n\t\tk++;\n\t}\n\t\n\twhile(i < temp.length)\n\t{\n\t\tresult[k] = temp[i];\n\t\ti++;\n\t\tk++;\n\t}\n\t\n\twhile(j < num3.length)\n\t{\n\t\tresult[k] = num3[j];\n\t\tj++;\n\t\tk++;\n\t}\n\t\n\treturn result;\n}"
  ]
}
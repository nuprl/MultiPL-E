{
  "name": "mbpp_442_positive_count",
  "language": "d",
  "prompt": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_442_positive_count.py",
  "prompt_terminology": "verbatim",
  "tests": "unittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ],
  "results": [
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_71n6w7q.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmp_71n6w7q.__unittest_L20_C1() [0x427e3c]\n??:? void tmp_71n6w7q.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6osninus.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmp6osninus.__unittest_L18_C1() [0x427e3c]\n??:? void tmp6osninus.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count/nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp309uxjyo.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmp309uxjyo.__unittest_L20_C1() [0x427e3c]\n??:? void tmp309uxjyo.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3qu2_nyt.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmp3qu2_nyt.__unittest_L20_C1() [0x427e3c]\n??:? void tmp3qu2_nyt.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tfloat count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count/nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbevbutpo.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42823d]\n??:? void tmpbevbutpo.__unittest_L20_C1() [0x427e60]\n??:? void tmpbevbutpo.__modtest() [0x427fbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c227]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43024d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306fc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301d9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b091]\n??:? runModuleUnitTests [0x42bffd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42868c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n > 0)\n\t\t\tcount++;\n\t}\n\treturn float(count) / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0brvoyb1.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmp0brvoyb1.__unittest_L18_C1() [0x427e40]\n??:? void tmp0brvoyb1.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(n; nums)\n\t{\n\t\tif (n > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn float(count) / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpk4ruj0vm.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmpk4ruj0vm.__unittest_L20_C1() [0x427e40]\n??:? void tmpk4ruj0vm.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(n; nums) \n\t{\n\t\tif(n > 0) \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn cast(float)count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxccox1rp.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmpxccox1rp.__unittest_L20_C1() [0x427e40]\n??:? void tmpxccox1rp.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn float(count)/float(nums.length);\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp9yltq84p.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmp9yltq84p.__unittest_L18_C1() [0x427e40]\n??:? void tmp9yltq84p.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_71n6w7q.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmp_71n6w7q.__unittest_L20_C1() [0x427e3c]\n??:? void tmp_71n6w7q.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tfloat count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5s60ud5f.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42823d]\n??:? void tmp5s60ud5f.__unittest_L20_C1() [0x427e60]\n??:? void tmp5s60ud5f.__modtest() [0x427fbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c227]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43024d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306fc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301d9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b091]\n??:? runModuleUnitTests [0x42bffd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42868c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\treturn nums.filter!(a => a > 0).length / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "/tmp/tmpqkctusvf.d(10): Error: no property `filter` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpqkctusvf.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count/nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp309uxjyo.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmp309uxjyo.__unittest_L20_C1() [0x427e3c]\n??:? void tmp309uxjyo.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tfloat count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count/nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbevbutpo.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42823d]\n??:? void tmpbevbutpo.__unittest_L20_C1() [0x427e60]\n??:? void tmpbevbutpo.__modtest() [0x427fbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c227]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43024d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306fc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301d9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b091]\n??:? runModuleUnitTests [0x42bffd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42868c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tfloat positive_count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tpositive_count++;\n\t\t}\n\t}\n\treturn positive_count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzurwzwwe.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42823d]\n??:? void tmpzurwzwwe.__unittest_L20_C1() [0x427e60]\n??:? void tmpzurwzwwe.__modtest() [0x427fbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c227]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43024d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306fc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301d9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b091]\n??:? runModuleUnitTests [0x42bffd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42868c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n > 0)\n\t\t\tcount++;\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpylyqv6jd.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmpylyqv6jd.__unittest_L18_C1() [0x427e3c]\n??:? void tmpylyqv6jd.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tfloat count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count/nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbevbutpo.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42823d]\n??:? void tmpbevbutpo.__unittest_L20_C1() [0x427e60]\n??:? void tmpbevbutpo.__modtest() [0x427fbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c227]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43024d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306fc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301d9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b091]\n??:? runModuleUnitTests [0x42bffd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42868c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_71n6w7q.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmp_71n6w7q.__unittest_L20_C1() [0x427e3c]\n??:? void tmp_71n6w7q.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(n; nums) \n\t{\n\t\tif(n > 0)\n\t\t\tcount++;\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmph8nixenf.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmph8nixenf.__unittest_L18_C1() [0x427e3c]\n??:? void tmph8nixenf.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tfloat count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5s60ud5f.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42823d]\n??:? void tmp5s60ud5f.__unittest_L20_C1() [0x427e60]\n??:? void tmp5s60ud5f.__modtest() [0x427fbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c227]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43024d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306fc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301d9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b091]\n??:? runModuleUnitTests [0x42bffd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42868c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tlong count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpmtz1ywmj.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmpmtz1ywmj.__unittest_L20_C1() [0x427e3c]\n??:? void tmpmtz1ywmj.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count/nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp309uxjyo.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmp309uxjyo.__unittest_L20_C1() [0x427e3c]\n??:? void tmp309uxjyo.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn cast(float)count/nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpn3vj22am.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmpn3vj22am.__unittest_L18_C1() [0x427e40]\n??:? void tmpn3vj22am.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3qu2_nyt.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmp3qu2_nyt.__unittest_L20_C1() [0x427e3c]\n??:? void tmp3qu2_nyt.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn float(count) / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpw52oithp.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmpw52oithp.__unittest_L20_C1() [0x427e40]\n??:? void tmpw52oithp.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_71n6w7q.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmp_71n6w7q.__unittest_L20_C1() [0x427e3c]\n??:? void tmp_71n6w7q.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn float(count)/nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpb33a7fbn.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmpb33a7fbn.__unittest_L20_C1() [0x427e40]\n??:? void tmpb33a7fbn.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn float(count)/nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8ab5qiv1.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmp8ab5qiv1.__unittest_L18_C1() [0x427e40]\n??:? void tmp8ab5qiv1.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tfloat positive_count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tpositive_count++;\n\t\t}\n\t}\n\treturn positive_count/nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpm7t3jr59.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42823d]\n??:? void tmpm7t3jr59.__unittest_L20_C1() [0x427e60]\n??:? void tmpm7t3jr59.__modtest() [0x427fbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c227]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43024d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306fc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301d9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b091]\n??:? runModuleUnitTests [0x42bffd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42868c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn float(count)/nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8ab5qiv1.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmp8ab5qiv1.__unittest_L18_C1() [0x427e40]\n??:? void tmp8ab5qiv1.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tfloat count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz48s0z8a.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x42823d]\n??:? void tmpz48s0z8a.__unittest_L18_C1() [0x427e60]\n??:? void tmpz48s0z8a.__modtest() [0x427fbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c227]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43024d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306fc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301d9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b091]\n??:? runModuleUnitTests [0x42bffd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42868c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint pos_count = 0;\n\tint neg_count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tpos_count++;\n\t\telse\n\t\t\tneg_count++;\n\t}\n\treturn float(pos_count) / float(neg_count);\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpdtkqdqbr.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x4281f5]\n??:? void tmpdtkqdqbr.__unittest_L21_C1() [0x427e1c]\n??:? void tmpdtkqdqbr.__modtest() [0x427f78]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1df]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b072]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430205]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430191]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b049]\n??:? runModuleUnitTests [0x42bfb5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428644]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6osninus.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmp6osninus.__unittest_L18_C1() [0x427e3c]\n??:? void tmp6osninus.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn count/nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2un9zcvg.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmp2un9zcvg.__unittest_L18_C1() [0x427e3c]\n??:? void tmp2un9zcvg.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tfloat positive_count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tpositive_count++;\n\t\t}\n\t}\n\treturn positive_count/nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpm7t3jr59.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42823d]\n??:? void tmpm7t3jr59.__unittest_L20_C1() [0x427e60]\n??:? void tmpm7t3jr59.__modtest() [0x427fbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c227]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43024d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306fc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301d9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b091]\n??:? runModuleUnitTests [0x42bffd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42868c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tfloat positive = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tpositive++;\n\t}\n\treturn positive / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpp06277rr.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x42823d]\n??:? void tmpp06277rr.__unittest_L18_C1() [0x427e60]\n??:? void tmpp06277rr.__modtest() [0x427fbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c227]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43024d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306fc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301d9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b091]\n??:? runModuleUnitTests [0x42bffd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42868c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_71n6w7q.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmp_71n6w7q.__unittest_L20_C1() [0x427e3c]\n??:? void tmp_71n6w7q.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn float(count) / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpb_j9ps92.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmpb_j9ps92.__unittest_L20_C1() [0x427e40]\n??:? void tmpb_j9ps92.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn float(count) / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpw52oithp.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmpw52oithp.__unittest_L20_C1() [0x427e40]\n??:? void tmpw52oithp.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tfloat count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count/nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbevbutpo.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42823d]\n??:? void tmpbevbutpo.__unittest_L20_C1() [0x427e60]\n??:? void tmpbevbutpo.__modtest() [0x427fbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c227]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43024d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306fc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301d9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b091]\n??:? runModuleUnitTests [0x42bffd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42868c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6osninus.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmp6osninus.__unittest_L18_C1() [0x427e3c]\n??:? void tmp6osninus.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_71n6w7q.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmp_71n6w7q.__unittest_L20_C1() [0x427e3c]\n??:? void tmp_71n6w7q.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(i; nums)\n\t{\n\t\tif(i > 0)\n\t\t\tcount++;\n\t}\n\treturn float(count) / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpnexsu7nj.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmpnexsu7nj.__unittest_L18_C1() [0x427e40]\n??:? void tmpnexsu7nj.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6osninus.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmp6osninus.__unittest_L18_C1() [0x427e3c]\n??:? void tmp6osninus.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n > 0)\n\t\t\tcount++;\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpylyqv6jd.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmpylyqv6jd.__unittest_L18_C1() [0x427e3c]\n??:? void tmpylyqv6jd.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n > 0)\n\t\t\tcount++;\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpylyqv6jd.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmpylyqv6jd.__unittest_L18_C1() [0x427e3c]\n??:? void tmpylyqv6jd.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tfloat positive_count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tpositive_count++;\n\t\t}\n\t}\n\treturn positive_count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzurwzwwe.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42823d]\n??:? void tmpzurwzwwe.__unittest_L20_C1() [0x427e60]\n??:? void tmpzurwzwwe.__modtest() [0x427fbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c227]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43024d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306fc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301d9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b091]\n??:? runModuleUnitTests [0x42bffd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42868c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_71n6w7q.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmp_71n6w7q.__unittest_L20_C1() [0x427e3c]\n??:? void tmp_71n6w7q.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_71n6w7q.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmp_71n6w7q.__unittest_L20_C1() [0x427e3c]\n??:? void tmp_71n6w7q.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n > 0)\n\t\t\tcount++;\n\t}\n\treturn count/float(nums.length);\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp96t5mxv8.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmp96t5mxv8.__unittest_L18_C1() [0x427e40]\n??:? void tmp96t5mxv8.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(n; nums) \n\t{\n\t\tif(n > 0) \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn cast(float) count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjrtgrpaa.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmpjrtgrpaa.__unittest_L20_C1() [0x427e40]\n??:? void tmpjrtgrpaa.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn float(count) / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8k5oa9s8.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmp8k5oa9s8.__unittest_L18_C1() [0x427e40]\n??:? void tmp8k5oa9s8.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn count/nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2un9zcvg.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmp2un9zcvg.__unittest_L18_C1() [0x427e3c]\n??:? void tmp2un9zcvg.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_71n6w7q.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmp_71n6w7q.__unittest_L20_C1() [0x427e3c]\n??:? void tmp_71n6w7q.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn float(count) / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8k5oa9s8.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmp8k5oa9s8.__unittest_L18_C1() [0x427e40]\n??:? void tmp8k5oa9s8.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn cast(float)count/nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpizet9gb5.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmpizet9gb5.__unittest_L20_C1() [0x427e40]\n??:? void tmpizet9gb5.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn cast(float)count/nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpn3vj22am.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmpn3vj22am.__unittest_L18_C1() [0x427e40]\n??:? void tmpn3vj22am.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n > 0)\n\t\t\tcount++;\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpylyqv6jd.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmpylyqv6jd.__unittest_L18_C1() [0x427e3c]\n??:? void tmpylyqv6jd.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn cast(float)count/nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpn3vj22am.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmpn3vj22am.__unittest_L18_C1() [0x427e40]\n??:? void tmpn3vj22am.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn float(count)/float(nums.length);\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxwjnbq1o.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmpxwjnbq1o.__unittest_L20_C1() [0x427e40]\n??:? void tmpxwjnbq1o.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_71n6w7q.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmp_71n6w7q.__unittest_L20_C1() [0x427e3c]\n??:? void tmp_71n6w7q.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn cast(float)count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp85eej9sm.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmp85eej9sm.__unittest_L18_C1() [0x427e40]\n??:? void tmp85eej9sm.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6osninus.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmp6osninus.__unittest_L18_C1() [0x427e3c]\n??:? void tmp6osninus.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_71n6w7q.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmp_71n6w7q.__unittest_L20_C1() [0x427e3c]\n??:? void tmp_71n6w7q.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn float(count) / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8k5oa9s8.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmp8k5oa9s8.__unittest_L18_C1() [0x427e40]\n??:? void tmp8k5oa9s8.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tfloat positive_count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tpositive_count++;\n\t\t}\n\t}\n\treturn positive_count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzurwzwwe.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42823d]\n??:? void tmpzurwzwwe.__unittest_L20_C1() [0x427e60]\n??:? void tmpzurwzwwe.__modtest() [0x427fbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c227]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43024d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306fc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301d9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b091]\n??:? runModuleUnitTests [0x42bffd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42868c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_71n6w7q.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmp_71n6w7q.__unittest_L20_C1() [0x427e3c]\n??:? void tmp_71n6w7q.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tfloat count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz48s0z8a.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x42823d]\n??:? void tmpz48s0z8a.__unittest_L18_C1() [0x427e60]\n??:? void tmpz48s0z8a.__modtest() [0x427fbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c227]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43024d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306fc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301d9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b091]\n??:? runModuleUnitTests [0x42bffd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42868c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tfloat count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count/nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbevbutpo.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42823d]\n??:? void tmpbevbutpo.__unittest_L20_C1() [0x427e60]\n??:? void tmpbevbutpo.__modtest() [0x427fbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c227]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43024d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306fc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301d9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b091]\n??:? runModuleUnitTests [0x42bffd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42868c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint pos_count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tpos_count++;\n\t\t}\n\t}\n\treturn float(pos_count) / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpcbehkr0s.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmpcbehkr0s.__unittest_L20_C1() [0x427e40]\n??:? void tmpcbehkr0s.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_71n6w7q.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmp_71n6w7q.__unittest_L20_C1() [0x427e3c]\n??:? void tmp_71n6w7q.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tfloat count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn count/nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuzzj1wy3.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x42823d]\n??:? void tmpuzzj1wy3.__unittest_L18_C1() [0x427e60]\n??:? void tmpuzzj1wy3.__modtest() [0x427fbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c227]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43024d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306fc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301d9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b091]\n??:? runModuleUnitTests [0x42bffd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42868c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint positive_count = 0;\n\tint negative_count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tpositive_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnegative_count++;\n\t\t}\n\t}\n\treturn positive_count / negative_count;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpyq28xl6z.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x4281ed]\n??:? void tmpyq28xl6z.__unittest_L25_C1() [0x427e14]\n??:? void tmpyq28xl6z.__modtest() [0x427f70]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1d7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b06a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x4301fd]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306ac]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430189]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b041]\n??:? runModuleUnitTests [0x42bfad]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42863c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn float(count) / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8k5oa9s8.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmp8k5oa9s8.__unittest_L18_C1() [0x427e40]\n??:? void tmp8k5oa9s8.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tfloat count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5s60ud5f.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42823d]\n??:? void tmp5s60ud5f.__unittest_L20_C1() [0x427e60]\n??:? void tmp5s60ud5f.__modtest() [0x427fbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c227]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43024d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306fc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301d9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b091]\n??:? runModuleUnitTests [0x42bffd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42868c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn cast(float)count/nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpizet9gb5.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmpizet9gb5.__unittest_L20_C1() [0x427e40]\n??:? void tmpizet9gb5.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tfloat count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz48s0z8a.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x42823d]\n??:? void tmpz48s0z8a.__unittest_L18_C1() [0x427e60]\n??:? void tmpz48s0z8a.__modtest() [0x427fbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c227]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43024d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306fc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301d9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b091]\n??:? runModuleUnitTests [0x42bffd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42868c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint pos_count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tpos_count++;\n\t}\n\treturn pos_count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6cceidya.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmp6cceidya.__unittest_L18_C1() [0x427e3c]\n??:? void tmp6cceidya.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn float(count) / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8k5oa9s8.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmp8k5oa9s8.__unittest_L18_C1() [0x427e40]\n??:? void tmp8k5oa9s8.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn cast(float)count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxsdt9pa7.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmpxsdt9pa7.__unittest_L20_C1() [0x427e40]\n??:? void tmpxsdt9pa7.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n > 0)\n\t\t\tcount++;\n\t}\n\treturn cast(float)count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123798,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbyvkw1_p.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmpbyvkw1_p.__unittest_L18_C1() [0x427e40]\n??:? void tmpbyvkw1_p.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_71n6w7q.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmp_71n6w7q.__unittest_L20_C1() [0x427e3c]\n??:? void tmp_71n6w7q.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n > 0)\n\t\t\tcount++;\n\t}\n\treturn cast(float)count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123798,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbyvkw1_p.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmpbyvkw1_p.__unittest_L18_C1() [0x427e40]\n??:? void tmpbyvkw1_p.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n > 0)\n\t\t\tcount++;\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpylyqv6jd.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmpylyqv6jd.__unittest_L18_C1() [0x427e3c]\n??:? void tmpylyqv6jd.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6osninus.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmp6osninus.__unittest_L18_C1() [0x427e3c]\n??:? void tmp6osninus.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tfloat count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz48s0z8a.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x42823d]\n??:? void tmpz48s0z8a.__unittest_L18_C1() [0x427e60]\n??:? void tmpz48s0z8a.__modtest() [0x427fbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c227]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43024d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306fc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301d9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b091]\n??:? runModuleUnitTests [0x42bffd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42868c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6osninus.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmp6osninus.__unittest_L18_C1() [0x427e3c]\n??:? void tmp6osninus.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tfloat count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn count/nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuzzj1wy3.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x42823d]\n??:? void tmpuzzj1wy3.__unittest_L18_C1() [0x427e60]\n??:? void tmpuzzj1wy3.__modtest() [0x427fbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c227]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43024d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306fc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301d9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b091]\n??:? runModuleUnitTests [0x42bffd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42868c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n > 0)\n\t\t\tcount++;\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpylyqv6jd.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmpylyqv6jd.__unittest_L18_C1() [0x427e3c]\n??:? void tmpylyqv6jd.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6osninus.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmp6osninus.__unittest_L18_C1() [0x427e3c]\n??:? void tmp6osninus.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn float(count)/float(nums.length);\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxwjnbq1o.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmpxwjnbq1o.__unittest_L20_C1() [0x427e40]\n??:? void tmpxwjnbq1o.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_71n6w7q.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmp_71n6w7q.__unittest_L20_C1() [0x427e3c]\n??:? void tmp_71n6w7q.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums) \n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123798,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpgnbz8ijm.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmpgnbz8ijm.__unittest_L18_C1() [0x427e3c]\n??:? void tmpgnbz8ijm.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tfloat positive_count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tpositive_count++;\n\t\t}\n\t}\n\treturn positive_count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzurwzwwe.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42823d]\n??:? void tmpzurwzwwe.__unittest_L20_C1() [0x427e60]\n??:? void tmpzurwzwwe.__modtest() [0x427fbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c227]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43024d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306fc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301d9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b091]\n??:? runModuleUnitTests [0x42bffd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42868c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tfloat positive_count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tpositive_count++;\n\t\t}\n\t}\n\treturn positive_count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzurwzwwe.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42823d]\n??:? void tmpzurwzwwe.__unittest_L20_C1() [0x427e60]\n??:? void tmpzurwzwwe.__modtest() [0x427fbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c227]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43024d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306fc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301d9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b091]\n??:? runModuleUnitTests [0x42bffd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42868c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n > 0)\n\t\t\tcount++;\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpylyqv6jd.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmpylyqv6jd.__unittest_L18_C1() [0x427e3c]\n??:? void tmpylyqv6jd.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_71n6w7q.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmp_71n6w7q.__unittest_L20_C1() [0x427e3c]\n??:? void tmp_71n6w7q.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tfloat count = 0;\n\tforeach(num; nums) \n\t{\n\t\tif(num > 0) \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123798,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpfzvx3_1j.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42823d]\n??:? void tmpfzvx3_1j.__unittest_L20_C1() [0x427e60]\n??:? void tmpfzvx3_1j.__modtest() [0x427fbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c227]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43024d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306fc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301d9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b091]\n??:? runModuleUnitTests [0x42bffd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42868c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n > 0)\n\t\t\tcount++;\n\t}\n\treturn (float)count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "/tmp/tmpl64x250q.d(16): Error: C style cast illegal, use `cast(float)count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpl64x250q.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6osninus.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmp6osninus.__unittest_L18_C1() [0x427e3c]\n??:? void tmp6osninus.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tfloat positive_count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tpositive_count++;\n\t\t}\n\t}\n\treturn positive_count/nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpm7t3jr59.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42823d]\n??:? void tmpm7t3jr59.__unittest_L20_C1() [0x427e60]\n??:? void tmpm7t3jr59.__modtest() [0x427fbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c227]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43024d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306fc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301d9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b091]\n??:? runModuleUnitTests [0x42bffd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42868c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn float(count) / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpb_j9ps92.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmpb_j9ps92.__unittest_L20_C1() [0x427e40]\n??:? void tmpb_j9ps92.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6osninus.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmp6osninus.__unittest_L18_C1() [0x427e3c]\n??:? void tmp6osninus.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn float(count) / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpb_j9ps92.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmpb_j9ps92.__unittest_L20_C1() [0x427e40]\n??:? void tmpb_j9ps92.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn (float)count/nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "/tmp/tmp3sckdw6u.d(16): Error: C style cast illegal, use `cast(float)count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3sckdw6u.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint positive_count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tpositive_count++;\n\t}\n\treturn positive_count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123798,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpo_juk3dy.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmpo_juk3dy.__unittest_L18_C1() [0x427e3c]\n??:? void tmpo_juk3dy.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tfloat count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5s60ud5f.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42823d]\n??:? void tmp5s60ud5f.__unittest_L20_C1() [0x427e60]\n??:? void tmp5s60ud5f.__modtest() [0x427fbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c227]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43024d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306fc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301d9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b091]\n??:? runModuleUnitTests [0x42bffd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42868c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tfloat positive_count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tpositive_count++;\n\t\t}\n\t}\n\treturn positive_count/nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpm7t3jr59.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42823d]\n??:? void tmpm7t3jr59.__unittest_L20_C1() [0x427e60]\n??:? void tmpm7t3jr59.__modtest() [0x427fbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c227]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43024d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306fc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301d9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b091]\n??:? runModuleUnitTests [0x42bffd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42868c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn count/nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2un9zcvg.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmp2un9zcvg.__unittest_L18_C1() [0x427e3c]\n??:? void tmp2un9zcvg.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint pos_count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tpos_count++;\n\t\t}\n\t}\n\treturn float(pos_count)/float(nums.length);\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123798,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpscjwa4mw.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmpscjwa4mw.__unittest_L20_C1() [0x427e40]\n??:? void tmpscjwa4mw.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn float(count) / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8k5oa9s8.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmp8k5oa9s8.__unittest_L18_C1() [0x427e40]\n??:? void tmp8k5oa9s8.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tlong positive_count = 0;\n\tlong total_count = nums.length;\n\t\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tpositive_count++;\n\t\t}\n\t}\n\t\n\treturn positive_count / total_count;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123798,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpd8q0ujrd.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x4281f5]\n??:? void tmpd8q0ujrd.__unittest_L23_C1() [0x427e18]\n??:? void tmpd8q0ujrd.__modtest() [0x427f74]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1df]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b072]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430205]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306b4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x430191]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b049]\n??:? runModuleUnitTests [0x42bfb5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428644]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6osninus.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmp6osninus.__unittest_L18_C1() [0x427e3c]\n??:? void tmp6osninus.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_71n6w7q.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmp_71n6w7q.__unittest_L20_C1() [0x427e3c]\n??:? void tmp_71n6w7q.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n > 0)\n\t\t\tcount++;\n\t}\n\treturn cast(float)count/nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123798,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpt1a_oxb0.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmpt1a_oxb0.__unittest_L18_C1() [0x427e40]\n??:? void tmpt1a_oxb0.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(i; nums)\n\t{\n\t\tif(i > 0)\n\t\t\tcount++;\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123798,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_9ap7qgb.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmp_9ap7qgb.__unittest_L18_C1() [0x427e3c]\n??:? void tmp_9ap7qgb.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tfloat count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz48s0z8a.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x42823d]\n??:? void tmpz48s0z8a.__unittest_L18_C1() [0x427e60]\n??:? void tmpz48s0z8a.__modtest() [0x427fbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c227]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43024d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306fc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301d9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b091]\n??:? runModuleUnitTests [0x42bffd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42868c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn cast(float)count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123798,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpgdd6o3it.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmpgdd6o3it.__unittest_L20_C1() [0x427e40]\n??:? void tmpgdd6o3it.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(n; nums) \n\t{\n\t\tif(n > 0) \n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn cast(float)count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxccox1rp.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmpxccox1rp.__unittest_L20_C1() [0x427e40]\n??:? void tmpxccox1rp.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_71n6w7q.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmp_71n6w7q.__unittest_L20_C1() [0x427e3c]\n??:? void tmp_71n6w7q.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tfloat positive_count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tpositive_count++;\n\t\t}\n\t}\n\treturn positive_count/nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpm7t3jr59.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42823d]\n??:? void tmpm7t3jr59.__unittest_L20_C1() [0x427e60]\n??:? void tmpm7t3jr59.__modtest() [0x427fbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c227]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43024d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306fc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301d9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b091]\n??:? runModuleUnitTests [0x42bffd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42868c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n > 0)\n\t\t\tcount++;\n\t}\n\treturn cast(float)count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123798,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbyvkw1_p.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmpbyvkw1_p.__unittest_L18_C1() [0x427e40]\n??:? void tmpbyvkw1_p.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn float(count) / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8k5oa9s8.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmp8k5oa9s8.__unittest_L18_C1() [0x427e40]\n??:? void tmp8k5oa9s8.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n > 0)\n\t\t\tcount++;\n\t}\n\treturn float(count) / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0brvoyb1.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmp0brvoyb1.__unittest_L18_C1() [0x427e40]\n??:? void tmp0brvoyb1.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_71n6w7q.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmp_71n6w7q.__unittest_L20_C1() [0x427e3c]\n??:? void tmp_71n6w7q.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn cast(float)count/nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpn3vj22am.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmpn3vj22am.__unittest_L18_C1() [0x427e40]\n??:? void tmpn3vj22am.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tfloat positive_count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tpositive_count++;\n\t\t}\n\t}\n\treturn positive_count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzurwzwwe.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42823d]\n??:? void tmpzurwzwwe.__unittest_L20_C1() [0x427e60]\n??:? void tmpzurwzwwe.__modtest() [0x427fbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c227]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43024d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306fc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301d9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b091]\n??:? runModuleUnitTests [0x42bffd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42868c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tfloat positive_count = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n > 0)\n\t\t{\n\t\t\tpositive_count++;\n\t\t}\n\t}\n\treturn positive_count/nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123798,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpak7q_uda.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42823d]\n??:? void tmpak7q_uda.__unittest_L20_C1() [0x427e60]\n??:? void tmpak7q_uda.__modtest() [0x427fbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c227]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43024d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306fc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301d9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b091]\n??:? runModuleUnitTests [0x42bffd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42868c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint positive_count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tpositive_count++;\n\t\t}\n\t}\n\treturn positive_count/nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123798,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpjgqbhrwj.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmpjgqbhrwj.__unittest_L20_C1() [0x427e3c]\n??:? void tmpjgqbhrwj.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tfloat pos_count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tpos_count++;\n\t}\n\treturn pos_count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123798,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmptl7c4p7b.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x42823d]\n??:? void tmptl7c4p7b.__unittest_L18_C1() [0x427e60]\n??:? void tmptl7c4p7b.__modtest() [0x427fbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c227]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43024d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306fc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301d9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b091]\n??:? runModuleUnitTests [0x42bffd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42868c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tfloat count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count/nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbevbutpo.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42823d]\n??:? void tmpbevbutpo.__unittest_L20_C1() [0x427e60]\n??:? void tmpbevbutpo.__modtest() [0x427fbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c227]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43024d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306fc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301d9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b091]\n??:? runModuleUnitTests [0x42bffd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42868c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tfloat count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz48s0z8a.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x42823d]\n??:? void tmpz48s0z8a.__unittest_L18_C1() [0x427e60]\n??:? void tmpz48s0z8a.__modtest() [0x427fbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c227]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43024d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306fc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301d9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b091]\n??:? runModuleUnitTests [0x42bffd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42868c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n > 0)\n\t\t\tcount++;\n\t}\n\treturn float(count) / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp0brvoyb1.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmp0brvoyb1.__unittest_L18_C1() [0x427e40]\n??:? void tmp0brvoyb1.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint positive_count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tpositive_count++;\n\t\t}\n\t}\n\treturn positive_count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123798,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2qeczf3k.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmp2qeczf3k.__unittest_L20_C1() [0x427e3c]\n??:? void tmp2qeczf3k.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn cast(float)count/nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpizet9gb5.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmpizet9gb5.__unittest_L20_C1() [0x427e40]\n??:? void tmpizet9gb5.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6osninus.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmp6osninus.__unittest_L18_C1() [0x427e3c]\n??:? void tmp6osninus.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn float(count) / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8k5oa9s8.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmp8k5oa9s8.__unittest_L18_C1() [0x427e40]\n??:? void tmp8k5oa9s8.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_71n6w7q.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmp_71n6w7q.__unittest_L20_C1() [0x427e3c]\n??:? void tmp_71n6w7q.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn float(count) / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8k5oa9s8.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmp8k5oa9s8.__unittest_L18_C1() [0x427e40]\n??:? void tmp8k5oa9s8.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n > 0)\n\t\t\tcount++;\n\t}\n\treturn float(count)/nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123798,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpqqhqmw5g.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmpqqhqmw5g.__unittest_L18_C1() [0x427e40]\n??:? void tmpqqhqmw5g.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6osninus.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmp6osninus.__unittest_L18_C1() [0x427e3c]\n??:? void tmp6osninus.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tfloat positive_count = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n > 0)\n\t\t{\n\t\t\tpositive_count++;\n\t\t}\n\t}\n\treturn positive_count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123798,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprsss7ts6.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42823d]\n??:? void tmprsss7ts6.__unittest_L20_C1() [0x427e60]\n??:? void tmprsss7ts6.__modtest() [0x427fbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c227]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43024d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306fc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301d9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b091]\n??:? runModuleUnitTests [0x42bffd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42868c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tfloat positive_count = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n > 0)\n\t\t{\n\t\t\tpositive_count++;\n\t\t}\n\t}\n\treturn positive_count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123798,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmprsss7ts6.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42823d]\n??:? void tmprsss7ts6.__unittest_L20_C1() [0x427e60]\n??:? void tmprsss7ts6.__modtest() [0x427fbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c227]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43024d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306fc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301d9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b091]\n??:? runModuleUnitTests [0x42bffd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42868c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn float(count) / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8k5oa9s8.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmp8k5oa9s8.__unittest_L18_C1() [0x427e40]\n??:? void tmp8k5oa9s8.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn float(count) / float(nums.length);\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123798,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpax4hzs02.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmpax4hzs02.__unittest_L20_C1() [0x427e40]\n??:? void tmpax4hzs02.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn count/nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp2un9zcvg.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmp2un9zcvg.__unittest_L18_C1() [0x427e3c]\n??:? void tmp2un9zcvg.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp3qu2_nyt.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmp3qu2_nyt.__unittest_L20_C1() [0x427e3c]\n??:? void tmp3qu2_nyt.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tfloat count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn count/nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuzzj1wy3.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x42823d]\n??:? void tmpuzzj1wy3.__unittest_L18_C1() [0x427e60]\n??:? void tmpuzzj1wy3.__modtest() [0x427fbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c227]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43024d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306fc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301d9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b091]\n??:? runModuleUnitTests [0x42bffd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42868c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tfloat total = 0;\n\tfloat positive = 0;\n\tforeach(num; nums)\n\t{\n\t\ttotal++;\n\t\tif(num > 0)\n\t\t\tpositive++;\n\t}\n\treturn positive/total;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123798,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmphsrsc0x4.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42822d]\n??:? void tmphsrsc0x4.__unittest_L20_C1() [0x427e54]\n??:? void tmphsrsc0x4.__modtest() [0x427fb0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c217]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0aa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43023d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306ec]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301c9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b081]\n??:? runModuleUnitTests [0x42bfed]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42867c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn float(count) / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpw52oithp.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmpw52oithp.__unittest_L20_C1() [0x427e40]\n??:? void tmpw52oithp.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tfloat positive_count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tpositive_count++;\n\t\t}\n\t}\n\treturn positive_count/nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpm7t3jr59.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42823d]\n??:? void tmpm7t3jr59.__unittest_L20_C1() [0x427e60]\n??:? void tmpm7t3jr59.__modtest() [0x427fbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c227]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43024d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306fc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301d9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b091]\n??:? runModuleUnitTests [0x42bffd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42868c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tfloat count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn count/nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuzzj1wy3.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x42823d]\n??:? void tmpuzzj1wy3.__unittest_L18_C1() [0x427e60]\n??:? void tmpuzzj1wy3.__modtest() [0x427fbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c227]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43024d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306fc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301d9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b091]\n??:? runModuleUnitTests [0x42bffd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42868c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tfloat count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5s60ud5f.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42823d]\n??:? void tmp5s60ud5f.__unittest_L20_C1() [0x427e60]\n??:? void tmp5s60ud5f.__modtest() [0x427fbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c227]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43024d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306fc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301d9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b091]\n??:? runModuleUnitTests [0x42bffd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42868c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn cast(float) count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123798,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpzynzri56.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmpzynzri56.__unittest_L20_C1() [0x427e40]\n??:? void tmpzynzri56.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tfloat count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count/nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpbevbutpo.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42823d]\n??:? void tmpbevbutpo.__unittest_L20_C1() [0x427e60]\n??:? void tmpbevbutpo.__modtest() [0x427fbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c227]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43024d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306fc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301d9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b091]\n??:? runModuleUnitTests [0x42bffd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42868c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn float(count) / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpb_j9ps92.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmpb_j9ps92.__unittest_L20_C1() [0x427e40]\n??:? void tmpb_j9ps92.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n > 0)\n\t\t\tcount++;\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpylyqv6jd.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmpylyqv6jd.__unittest_L18_C1() [0x427e3c]\n??:? void tmpylyqv6jd.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn float(count) / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpb_j9ps92.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmpb_j9ps92.__unittest_L20_C1() [0x427e40]\n??:? void tmpb_j9ps92.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn float(count) / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpb_j9ps92.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmpb_j9ps92.__unittest_L20_C1() [0x427e40]\n??:? void tmpb_j9ps92.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tfloat count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn count/nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuzzj1wy3.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x42823d]\n??:? void tmpuzzj1wy3.__unittest_L18_C1() [0x427e60]\n??:? void tmpuzzj1wy3.__modtest() [0x427fbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c227]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43024d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306fc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301d9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b091]\n??:? runModuleUnitTests [0x42bffd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42868c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\treturn nums.filter!(x => x > 0).length / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123798,
      "stdout": "",
      "stderr": "/tmp/tmps48clf80.d(10): Error: no property `filter` for type `long[]`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmps48clf80.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tfloat count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5s60ud5f.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42823d]\n??:? void tmp5s60ud5f.__unittest_L20_C1() [0x427e60]\n??:? void tmp5s60ud5f.__modtest() [0x427fbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c227]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43024d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306fc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301d9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b091]\n??:? runModuleUnitTests [0x42bffd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42868c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint positive_count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif (num > 0)\n\t\t{\n\t\t\tpositive_count++;\n\t\t}\n\t}\n\treturn positive_count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123798,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp16xblgnm.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmp16xblgnm.__unittest_L20_C1() [0x427e3c]\n??:? void tmp16xblgnm.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tfloat count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn count/nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuzzj1wy3.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x42823d]\n??:? void tmpuzzj1wy3.__unittest_L18_C1() [0x427e60]\n??:? void tmpuzzj1wy3.__modtest() [0x427fbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c227]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43024d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306fc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301d9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b091]\n??:? runModuleUnitTests [0x42bffd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42868c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn float(count) / float(nums.length);\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123798,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpax4hzs02.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmpax4hzs02.__unittest_L20_C1() [0x427e40]\n??:? void tmpax4hzs02.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn float(count) / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8k5oa9s8.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmp8k5oa9s8.__unittest_L18_C1() [0x427e40]\n??:? void tmp8k5oa9s8.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tfloat positive_count = 0;\n\tforeach(n; nums)\n\t{\n\t\tif(n > 0)\n\t\t\tpositive_count++;\n\t}\n\treturn positive_count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123798,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuvslzwle.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x42823d]\n??:? void tmpuvslzwle.__unittest_L18_C1() [0x427e60]\n??:? void tmpuvslzwle.__modtest() [0x427fbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c227]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43024d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306fc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301d9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b091]\n??:? runModuleUnitTests [0x42bffd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42868c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(i; nums)\n\t{\n\t\tif(i > 0)\n\t\t\tcount++;\n\t}\n\treturn float(count) / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpnexsu7nj.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmpnexsu7nj.__unittest_L18_C1() [0x427e40]\n??:? void tmpnexsu7nj.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tfloat count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpz48s0z8a.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x42823d]\n??:? void tmpz48s0z8a.__unittest_L18_C1() [0x427e60]\n??:? void tmpz48s0z8a.__modtest() [0x427fbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c227]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43024d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306fc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301d9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b091]\n??:? runModuleUnitTests [0x42bffd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42868c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn float(count) / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpb_j9ps92.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmpb_j9ps92.__unittest_L20_C1() [0x427e40]\n??:? void tmpb_j9ps92.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tfloat count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5s60ud5f.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42823d]\n??:? void tmp5s60ud5f.__unittest_L20_C1() [0x427e60]\n??:? void tmp5s60ud5f.__modtest() [0x427fbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c227]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43024d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306fc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301d9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b091]\n??:? runModuleUnitTests [0x42bffd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42868c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tfloat count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn count/nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuzzj1wy3.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x42823d]\n??:? void tmpuzzj1wy3.__unittest_L18_C1() [0x427e60]\n??:? void tmpuzzj1wy3.__modtest() [0x427fbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c227]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43024d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306fc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301d9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b091]\n??:? runModuleUnitTests [0x42bffd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42868c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach (num; nums)\n\t{\n\t\tif (num > 0)\n\t\t\tcount++;\n\t}\n\treturn cast(float) count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123798,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmppu2eqyzf.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmppu2eqyzf.__unittest_L18_C1() [0x427e40]\n??:? void tmppu2eqyzf.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tfloat count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn count/nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpuzzj1wy3.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x42823d]\n??:? void tmpuzzj1wy3.__unittest_L18_C1() [0x427e60]\n??:? void tmpuzzj1wy3.__modtest() [0x427fbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c227]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43024d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306fc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301d9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b091]\n??:? runModuleUnitTests [0x42bffd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42868c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_71n6w7q.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmp_71n6w7q.__unittest_L20_C1() [0x427e3c]\n??:? void tmp_71n6w7q.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn float(count) / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8k5oa9s8.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmp8k5oa9s8.__unittest_L18_C1() [0x427e40]\n??:? void tmp8k5oa9s8.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn (float)count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123798,
      "stdout": "",
      "stderr": "/tmp/tmpf4c0pl2k.d(16): Error: C style cast illegal, use `cast(float)count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf4c0pl2k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn float(count)/nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8ab5qiv1.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmp8ab5qiv1.__unittest_L18_C1() [0x427e40]\n??:? void tmp8ab5qiv1.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6osninus.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmp6osninus.__unittest_L18_C1() [0x427e3c]\n??:? void tmp6osninus.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn float(count) / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8k5oa9s8.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmp8k5oa9s8.__unittest_L18_C1() [0x427e40]\n??:? void tmp8k5oa9s8.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn float(count) / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8k5oa9s8.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmp8k5oa9s8.__unittest_L18_C1() [0x427e40]\n??:? void tmp8k5oa9s8.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tlong count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn cast(float)count/nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123798,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8qtgt1__.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmp8qtgt1__.__unittest_L18_C1() [0x427e44]\n??:? void tmp8qtgt1__.__modtest() [0x427fa0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tfloat positive_count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif (num > 0)\n\t\t{\n\t\t\tpositive_count++;\n\t\t}\n\t}\n\treturn positive_count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123798,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpg_b6entn.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42823d]\n??:? void tmpg_b6entn.__unittest_L20_C1() [0x427e60]\n??:? void tmpg_b6entn.__modtest() [0x427fbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c227]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43024d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306fc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301d9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b091]\n??:? runModuleUnitTests [0x42bffd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42868c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn float(count)/float(nums.length);\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpxwjnbq1o.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmpxwjnbq1o.__unittest_L20_C1() [0x427e40]\n??:? void tmpxwjnbq1o.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_71n6w7q.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmp_71n6w7q.__unittest_L20_C1() [0x427e3c]\n??:? void tmp_71n6w7q.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6osninus.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmp6osninus.__unittest_L18_C1() [0x427e3c]\n??:? void tmp6osninus.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tfloat count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp5s60ud5f.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42823d]\n??:? void tmp5s60ud5f.__unittest_L20_C1() [0x427e60]\n??:? void tmp5s60ud5f.__modtest() [0x427fbc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c227]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b0ba]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43024d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306fc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301d9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b091]\n??:? runModuleUnitTests [0x42bffd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42868c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp_71n6w7q.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmp_71n6w7q.__unittest_L20_C1() [0x427e3c]\n??:? void tmp_71n6w7q.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn float(count) / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpb_j9ps92.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmpb_j9ps92.__unittest_L20_C1() [0x427e40]\n??:? void tmpb_j9ps92.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn cast(float)count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123798,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpgdd6o3it.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmpgdd6o3it.__unittest_L20_C1() [0x427e40]\n??:? void tmpgdd6o3it.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn float(count) / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpb_j9ps92.d(24): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmpb_j9ps92.__unittest_L20_C1() [0x427e40]\n??:? void tmpb_j9ps92.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6osninus.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmp6osninus.__unittest_L18_C1() [0x427e3c]\n??:? void tmp6osninus.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6osninus.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmp6osninus.__unittest_L18_C1() [0x427e3c]\n??:? void tmp6osninus.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6osninus.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmp6osninus.__unittest_L18_C1() [0x427e3c]\n??:? void tmp6osninus.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn (float)count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123798,
      "stdout": "",
      "stderr": "/tmp/tmpf4c0pl2k.d(16): Error: C style cast illegal, use `cast(float)count`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf4c0pl2k.d\", \"-I/tmp\"]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn float(count) / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8k5oa9s8.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmp8k5oa9s8.__unittest_L18_C1() [0x427e40]\n??:? void tmp8k5oa9s8.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn float(count) / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp8k5oa9s8.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmp8k5oa9s8.__unittest_L18_C1() [0x427e40]\n??:? void tmp8k5oa9s8.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(n; nums)\n\t{\n\t\tif (n > 0)\n\t\t\tcount++;\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123798,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp09uh5oe4.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmp09uh5oe4.__unittest_L18_C1() [0x427e3c]\n??:? void tmp09uh5oe4.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(num; nums)\n\t{\n\t\tif(num > 0)\n\t\t\tcount++;\n\t}\n\treturn count / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1665517104,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmp6osninus.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x428215]\n??:? void tmp6osninus.__unittest_L18_C1() [0x427e3c]\n??:? void tmp6osninus.__modtest() [0x427f98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c1ff]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b092]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x430225]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306d4]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b1]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b069]\n??:? runModuleUnitTests [0x42bfd5]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428664]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import std.math;\nimport std.typecons;\n/*\n\n\tWrite a function to find the ration of positive numbers in an array of integers.\n\t\n*/\nfloat positive_count(long[] nums) \n{\n\tint count = 0;\n\tforeach(n; nums)\n\t{\n\t\tif (n > 0)\n\t\t\tcount++;\n\t}\n\treturn float(count) / nums.length;\n}\nunittest\n{\n    alias candidate = positive_count;\n\n    assert(candidate([0L, 1L, 2L, -1L, -5L, 6L, 0L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.54);\n    assert(candidate([2L, 1L, 2L, -1L, -5L, 6L, 4L, -3L, -2L, 3L, 4L, 6L, 8L]) == 0.69);\n    assert(candidate([2L, 4L, -6L, -9L, 11L, -12L, 14L, -5L, 17L]) == 0.56);\n}\nvoid main(){}",
      "timestamp": 1666123798,
      "stdout": "",
      "stderr": "core.exception.AssertError@/tmp/tmpwq7bt5mt.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x42821d]\n??:? void tmpwq7bt5mt.__unittest_L18_C1() [0x427e40]\n??:? void tmpwq7bt5mt.__modtest() [0x427f9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42c207]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42b09a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x43022d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4306dc]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x4301b9]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b071]\n??:? runModuleUnitTests [0x42bfdd]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42866c]\n??:? void rt.dmain2._d_r",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
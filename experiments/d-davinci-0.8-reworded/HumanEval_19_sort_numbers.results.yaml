language: d
name: HumanEval_19_sort_numbers
results:
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    int maxLength = 0;\n    auto numArray = numbers.split();\n\
    \    maxLength = std.algorithm.maxElement!((a, b) => (a.length < b.length)).length;\n\
    \    auto toNumber = new int[numArray.length];\n    int counter = 0;\n    foreach(n;\
    \ numArray)\n    {\n        if(n == \"zero\")\n            toNumber[counter] =\
    \ 0;\n        else if(n == \"one\")\n            toNumber[counter] = 1;\n    \
    \    else if(n == \"two\")\n            toNumber[counter] = 2;\n        else if(n\
    \ == \"three\")\n            toNumber[counter] = 3;\n        else if(n == \"four\"\
    )\n            toNumber[counter] = 4;\n        else if(n == \"five\")\n      \
    \      toNumber[counter] = 5;\n        else if(n == \"six\")\n            toNumber[counter]\
    \ = 6;\n        else if(n == \"seven\")\n            toNumber[counter] = 7;\n\
    \        else if(n == \"eight\")\n            toNumber[counter] = 8;\n       \
    \ else if(n == \"nine\")\n            toNumber[counter] = 9;\n        counter++;\n\
    \    }\n    std.algorithm.sort!((a, b) => (a < b))(toNumber);\n    auto toString\
    \ = new string[numArray.length];\n    counter = 0;\n    foreach(n; toNumber)\n\
    \    {\n        if(n == 0)\n            toString[counter] = \"zero\";\n      \
    \  else if(n == 1)\n            toString[counter] = \"one\";\n        else if(n\
    \ == 2)\n            toString[counter] = \"two\";\n        else if(n == 3)\n \
    \           toString[counter] = \"three\";\n        else if(n == 4)\n        \
    \    toString[counter] = \"four\";\n        else if(n == 5)\n            toString[counter]\
    \ = \"five\";\n        else if(n == 6)\n            toString[counter] = \"six\"\
    ;\n        else if(n == 7)\n            toString[counter] = \"seven\";\n     \
    \   else if(n\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpw43h841f.d(64): Error: found `unittest` when expecting `)`\n/tmp/tmpw43h841f.d(74):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpw43h841f.d(74):
    Error: found `End of File` when expecting `}` following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw43h841f.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n\tstring[int] valid_numbers = [\"zero\" : 0, \"one\" : 1, \"two\"\
    \ : 2, \"three\" : 3, \"four\" : 4, \"five\" : 5, \"six\" : 6, \"seven\" : 7,\
    \ \"eight\" : 8, \"nine\" : 9];\n\tint[string] number_values;\n\tforeach(number;\
    \ numbers.split())\n\t{\n\t\tif(number in valid_numbers)\n\t\t{\n\t\t\tnumber_values[number]\
    \ = valid_numbers[number];\n\t\t}\n\t}\n\treturn join(sort(number_values.keys),\
    \ \" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmptw7869ra.d(13): Error: cannot implicitly convert expression
    `["zero":0, "one":1, "two":2, "three":3, "four":4, "five":5, "six":6, "seven":7,
    "eight":8, "nine":9]` of type `int[string]` to `string[int]`\n/tmp/tmptw7869ra.d(15):
    Error: no property `split` for type `string`\n/tmp/tmptw7869ra.d(22): Error: undefined
    identifier `join`, did you mean function `main`?\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmptw7869ra.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    enum Numeral {\n        zero, one, two, three, four, five,\
    \ six, seven, eight, nine\n    }\n    string[] m = numbers.split(\" \");\n   \
    \ string[] result;\n    result.length = m.length;\n    Numeral[] sorted;\n   \
    \ sorted.length = m.length;\n    foreach(i, e; m) {\n        sorted[i] = to!Numeral(e);\n\
    \    }\n    //reverse sort, so the highest is at front\n    //http://dlang.org/phobos/std_algorithm_sorting.html#.sort\n\
    \    sort!((a, b) => b < a)(sorted);\n    foreach(i, e; sorted) {\n        result[i]\
    \ = to!string(e);\n    }\n    return result.join(\" \");\n}\nunittest\n{\n   \
    \ alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n  \
    \  assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three five\
    \ nine\") == \"three five nine\");\n    assert(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbn5teesg.d(16): Error: no property `split` for type `string`\n/tmp/tmpbn5teesg.d(22):
    Error: template instance `to!Numeral` template `to` is not defined, did you mean
    No?\n/tmp/tmpbn5teesg.d(26): Error: template instance `sort!((a, b) => b < a)`
    template `sort` is not defined, did you mean sqrt?\n/tmp/tmpbn5teesg.d(28): Error:
    template instance `to!string` template `to` is not defined, did you mean No?\n/tmp/tmpbn5teesg.d(30):
    Error: no property `join` for type `string[]`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpbn5teesg.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    const string numeral_strings[] = [\"zero\", \"one\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"];\n \
    \   auto numeral_to_int = numeral_strings.toHash;\n    //println(numeral_to_int);\n\
    \    auto numbers_array = numbers.split;\n    //println(numbers_array);\n    auto\
    \ string_to_int = (string str) {return to!int(numeral_to_int[str]);};\n    auto\
    \ str_as_ints = numbers_array.map!string_to_int;\n    auto sorted_ints = sort(str_as_ints);\n\
    \    //println(sorted_ints);\n    auto int_to_string = (int num) {return numeral_strings[num];};\n\
    \    auto sorted_numbers = sorted_ints.map!int_to_string;\n    //println(sorted_numbers);\n\
    \    return sorted_numbers.join(\" \");\n}\n//sort_numbers(\"three one five\"\
    );\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmprhx2qscc.d(13): Deprecation: instead of C-style syntax, use
    D-style syntax `string[] numeral_strings`\n/tmp/tmprhx2qscc.d(14): Error: no property
    `toHash` for type `const(string[])`\n/tmp/tmprhx2qscc.d(16): Error: no property
    `split` for type `string`\n/tmp/tmprhx2qscc.d(18): Error: template instance `to!int`
    template `to` is not defined, did you mean No?\n/tmp/tmprhx2qscc.d(20): Error:
    undefined identifier `sort`, did you mean function `sqrt`?\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmprhx2qscc.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    return sort(explode(numbers, \" \")).map!(to!string)();\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp35cu3uo1.d(13): Error: undefined identifier `sort`, did you
    mean function `sqrt`?\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp35cu3uo1.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    char[] numbers_char = numbers.dup;\n    string[] words = numbers.split;\n\
    \    int[] numbers_int = new int[words.length];\n    int num = 0;\n    foreach(string\
    \ n; words)\n    {\n        switch(n)\n        {\n            case \"zero\":\n\
    \                num = 0;\n                break;\n            case \"one\":\n\
    \                num = 1;\n                break;\n            case \"two\":\n\
    \                num = 2;\n                break;\n            case \"three\"\
    :\n                num = 3;\n                break;\n            case \"four\"\
    :\n                num = 4;\n                break;\n            case \"five\"\
    :\n                num = 5;\n                break;\n            case \"six\"\
    :\n                num = 6;\n                break;\n            case \"seven\"\
    :\n                num = 7;\n                break;\n            case \"eight\"\
    :\n                num = 8;\n                break;\n            case \"nine\"\
    :\n                num = 9;\n                break;\n        }\n        numbers_int\
    \ ~= num;\n    }\n    sort(numbers_int);\n    string number_str = \"\";\n    foreach(int\
    \ i; numbers_int)\n    {\n        switch(i)\n        {\n            case 0:\n\
    \                number_str ~= \"zero \";\n                break;\n          \
    \  case 1:\n                number_str ~= \"one \";\n                break;\n\
    \            case 2:\n                number_str ~= \"two \";\n              \
    \  break;\n            case 3:\n                number_str ~= \"three \";\n  \
    \              break;\n            case 4:\n                number_str ~= \"four\
    \ \";\n                break;\n            case 5:\n                number_str\
    \ ~= \"five \";\n                break;\n            case 6:\n               \
    \ number_str ~= \"six \";\n                break;\n            case 7:\n     \
    \           number_str ~= \"seven \";\n                break;\n            case\
    \ 8:\n                number_str ~= \"eight \";\n                break;\n    \
    \        case 9:\n                number_str ~= \"nine \";\n                break;\n\
    \        }\n    }\n    number_str.popBack;\n    return number_str;\n}\nstring\n\
    unittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1j5oovky.d(96): Error: no identifier for declarator `string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1j5oovky.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n\tstring[int] numbers_map = [\"zero\":0, \"one\":1, \"two\":2,\
    \ \"three\":3, \"four\":4, \"five\":5, \"six\":6, \"seven\":7, \"eight\":8, \"\
    nine\":9];\n\t\n\tstring[] number_strings = numbers.split;\n\tint[] nums;\n\t\
    foreach(n; number_strings) {\n\t\tint num = numbers_map[n];\n\t\tnums ~= num;\n\
    \t}\n\t\n\tsort(nums);\n\t\n\tstring sorted_str = \"\";\n\tforeach(n; nums) {\n\
    \t\tauto t = numbers_map.byValue(n);\n\t\tif(t !is null) {\n\t\t\tsorted_str ~=\
    \ t.key;\n\t\t\tsorted_str ~= \" \";\n\t\t}\n\t}\n\t\n\treturn sorted_str;\n}\n\
    unittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_azf7eog.d(13): Error: cannot implicitly convert expression
    `["zero":0, "one":1, "two":2, "three":3, "four":4, "five":5, "six":6, "seven":7,
    "eight":8, "nine":9]` of type `int[string]` to `string[int]`\n/tmp/tmp_azf7eog.d(15):
    Error: no property `split` for type `string`\n/tmp/tmp_azf7eog.d(18): Error: cannot
    implicitly convert expression `n` of type `string` to `int`\n/tmp/tmp_azf7eog.d(22):
    Error: undefined identifier `sort`, did you mean function `sqrt`?\n/tmp/tmp_azf7eog.d(26):
    Error: template `object.byValue` cannot deduce function from argument types `!()(string[int],
    int)`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/druntime/import/object.d(2968):        `object.byValue(T
    : V[K], K, V)(T aa)`\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/druntime/import/object.d(2990):        `object.byValue(T
    : V[K], K, V)(T* aa)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_azf7eog.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    int[] nums;\n    foreach(immutable word; numbers.split)\n\
    \    {\n        enum TMP = to!(int)(word);\n        nums ~= TMP;\n    }\n    sort(nums);\n\
    \    string tmp;\n    foreach(n; nums)\n    {\n        enum t = to!(string)(n);\n\
    \        tmp ~= t;\n        tmp ~= \" \";\n    }\n    return tmp;\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphdujtxlj.d(14): Error: no property `split` for type `string`\n/tmp/tmphdujtxlj.d(19):
    Error: undefined identifier `sort`, did you mean function `sqrt`?\n/tmp/tmphdujtxlj.d(23):
    Error: template instance `to!string` template `to` is not defined, did you mean
    No?\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphdujtxlj.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] number_list = numbers.split(\" \");\n    string result\
    \ = \"\";\n    int[] keys = new int[number_list.length];\n    string[] temp =\
    \ new string[number_list.length];\n    for (int i = 0; i < number_list.length;\
    \ i++)\n    {\n        temp[i] = number_list[i];\n        switch (number_list[i])\n\
    \        {\n            case \"zero\": keys[i] = 0; break;\n            case \"\
    one\": keys[i] = 1; break;\n            case \"two\": keys[i] = 2; break;\n  \
    \          case \"three\": keys[i] = 3; break;\n            case \"four\": keys[i]\
    \ = 4; break;\n            case \"five\": keys[i] = 5; break;\n            case\
    \ \"six\": keys[i] = 6; break;\n            case \"seven\": keys[i] = 7; break;\n\
    \            case \"eight\": keys[i] = 8; break;\n            case \"nine\": keys[i]\
    \ = 9; break;\n        }\n    }\n    sort(keys, temp);\n    foreach (n; temp)\n\
    \    {\n        if (result == \"\")\n            result = n;\n        else\n \
    \           result ~= \" \" ~ n;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpu7amx3yb.d(13): Error: no property `split` for type `string`\n/tmp/tmpu7amx3yb.d(20):
    Error: `switch` statement without a `default`; use `final switch` or add `default:
    assert(0);` or add `default: break;`\n/tmp/tmpu7amx3yb.d(34): Error: undefined
    identifier `sort`, did you mean function `sqrt`?\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpu7amx3yb.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    auto numeralNames = [\n        \"zero\", \"one\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"\n   \
    \ ];\n    auto toNumeral = [](string numeral) { return numeralNames.indexOf(numeral);\
    \ };\n    auto toString = [](int numeral) { return numeralNames[numeral]; };\n\
    \    auto numberStrings = numbers.split(\" \");\n    auto numberNumbers = numberStrings.map!toNumeral;\n\
    \    numberNumbers.sort;\n    return numberNumbers.map!toString.join(\" \");\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpl76exv2q.d(16): Error: found `numeral` when expecting `,`\n/tmp/tmpl76exv2q.d(16):
    Error: semicolon expected following auto declaration, not `{`\n/tmp/tmpl76exv2q.d(16):
    Deprecation: use `{ }` for an empty statement, not `;`\n/tmp/tmpl76exv2q.d(17):
    Error: found `numeral` when expecting `.` following int\n/tmp/tmpl76exv2q.d(17):
    Error: found `)` when expecting identifier following `int`.\n/tmp/tmpl76exv2q.d(17):
    Error: found `{` when expecting `,`\n/tmp/tmpl76exv2q.d(17): Error: expression
    expected, not `return`\n/tmp/tmpl76exv2q.d(17): Error: found `numeralNames` when
    expecting `,`\n/tmp/tmpl76exv2q.d(17): Error: found `;` when expecting `,`\n/tmp/tmpl76exv2q.d(17):
    Error: expression expected, not `}`\n/tmp/tmpl76exv2q.d(17): Error: found `;`
    when expecting `,`\n/tmp/tmpl76exv2q.d(18): Error: expression expected, not `auto`\n/tmp/tmpl76exv2q.d(18):
    Error: found `numberStrings` when expecting `,`\n/tmp/tmpl76exv2q.d(18): Error:
    expression expected, not `=`\n/tmp/tmpl76exv2q.d(18): Error: found `numbers` when
    expecting `,`\n/tmp/tmpl76exv2q.d(18): Error: found `;` when expecting `,`\n/tmp/tmpl76exv2q.d(19):
    Error: expression expected, not `auto`\n/tmp/tmpl76exv2q.d(19): Error: found `numberNumbers`
    when expecting `,`\n/tmp/tmpl76exv2q.d(19): Error: expression expected, not `=`\n/tmp/tmpl76exv2q.d(19):
    Error: found `numberStrings` when expecting `,`\n/tmp/tmpl76exv2q.d(19): Error:
    found `;` when expecting `,`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl76exv2q.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] _numbers = numbers.split;\n    string[] _newNumbers\
    \ = _numbers;\n    string[] _nums = [\"zero\", \"one\", \"two\", \"three\", \"\
    four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"];\n    for (int i =\
    \ 0; i < _numbers.length; i++) \n    {\n        for (int j = 0; j < _numbers.length;\
    \ j++) \n        {\n            if (j != _numbers.length - 1) \n            {\n\
    \                if (_nums.indexOf(_numbers[j]) > _nums.indexOf(_numbers[j + 1]))\
    \ \n                {\n                    string temp = _numbers[j];\n      \
    \              _numbers[j] = _numbers[j + 1];\n                    _numbers[j\
    \ + 1] = temp;\n                }\n            }\n        }\n    }\n    return\
    \ _numbers.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjclz9ybq.d(13): Error: no property `split` for type `string`\n/tmp/tmpjclz9ybq.d(22):
    Error: no property `indexOf` for type `string[]`\n/tmp/tmpjclz9ybq.d(22): Error:
    no property `indexOf` for type `string[]`\n/tmp/tmpjclz9ybq.d(31): Error: no property
    `join` for type `string[]`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjclz9ybq.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n\tauto numbers_arr = numbers.split(\" \");\n\tstring result;\n\
    \tforeach(i; sort!((a, b) => numeral_to_int(a) > numeral_to_int(b))(numbers_arr))\n\
    \t{\n\t\tresult ~= i ~ \" \";\n\t}\n\treturn result.stripRight();\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp2usw8q8m.d(13): Error: no property `split` for type `string`\n/tmp/tmp2usw8q8m.d(15):
    Error: template instance `sort!((a, b) => numeral_to_int(a) > numeral_to_int(b))`
    template `sort` is not defined, did you mean sqrt?\n/tmp/tmp2usw8q8m.d(19): Error:
    no property `stripRight` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp2usw8q8m.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    return to!string(sort(map!(a => to!int(a))(numbers.split())));\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpoqxwybar.d(13): Error: template instance `to!string` template
    `to` is not defined, did you mean No?\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpoqxwybar.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    immutable numbers_map = [\"zero\", \"one\", \"two\", \"three\"\
    , \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"];\n    enum index\
    \ = 0;\n    int[] keys = [];\n    auto tokens = numbers.split;\n    foreach(token;\
    \ tokens)\n    {\n        keys ~= numbers_map.indexOf(token);\n    }\n    keys.sort;\n\
    \    string result = \"\";\n    foreach(key; keys)\n    {\n        if(result.length\
    \ > 0)\n        {\n            result ~= \" \";\n        }\n        result ~=\
    \ numbers_map[key];\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpst6q38qy.d(16): Error: no property `split` for type `string`\n/tmp/tmpst6q38qy.d(21):
    Error: no property `sort` for type `int[]`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpst6q38qy.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    import std.math : min;\n    import std.algorithm : map, sort,\
    \ filter;\n    import std.range : take;\n    import std.stdio : writeln;\n   \
    \ import std.typecons : tuple;\n    import std.conv : to;\n    import std.array\
    \ : array;\n    import std.traits : isIntegral;\n    import std.range : iota;\n\
    \    static immutable number_names = [\"zero\", \"one\", \"two\", \"three\", \"\
    four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"];\n    auto number_sorted\
    \ = numbers.split(\" \")\n                                .map!(a =&gt; { auto\
    \ result = number_names.indexOf(a); return result; })\n                      \
    \          .sort!((a, b) =&gt; { return a &lt; b; })\n                       \
    \         .map!(a =&gt; { return number_names[a]; });\n    return number_sorted.join(\"\
    \ \");\n}\n</code>\nMy solution is working fine and passes all the test cases.\
    \ I wanted to know if there is a better way of achieving the same result.\nAn\
    \ inline solution would be fine too. \nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxgh5dzax.d(24): Error: found `;` when expecting `)` following
    template argument list\n/tmp/tmpxgh5dzax.d(24): Error: semicolon expected following
    auto declaration, not `{`\n/tmp/tmpxgh5dzax.d(24): Error: found `)` instead of
    statement\n/tmp/tmpxgh5dzax.d(25): Error: found `)` instead of statement\n/tmp/tmpxgh5dzax.d(26):
    Error: found `)` instead of statement\n/tmp/tmpxgh5dzax.d(29): Error: declaration
    expected, not `<`\n/tmp/tmpxgh5dzax.d(36): Error: declaration expected, not `assert`\n/tmp/tmpxgh5dzax.d(37):
    Error: declaration expected, not `assert`\n/tmp/tmpxgh5dzax.d(38): Error: declaration
    expected, not `assert`\n/tmp/tmpxgh5dzax.d(39): Error: declaration expected, not
    `assert`\n/tmp/tmpxgh5dzax.d(40): Error: declaration expected, not `assert`\n/tmp/tmpxgh5dzax.d(41):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxgh5dzax.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    enum number = tuple(string str, int num);\n    const number[]\
    \ nums = [ number(\"zero\", 0),\n                            number(\"one\", 1),\n\
    \                            number(\"two\", 2),\n                           \
    \ number(\"three\", 3),\n                            number(\"four\", 4),\n  \
    \                          number(\"five\", 5),\n                            number(\"\
    six\", 6),\n                            number(\"seven\", 7),\n              \
    \              number(\"eight\", 8),\n                            number(\"nine\"\
    , 9)];\n    \n    string[] parts = numbers.split();\n    int[] pos = new int[parts.length];\n\
    \    foreach(i,num; enumerate(parts))\n    {\n        foreach(j, n; enumerate(nums))\n\
    \        {\n            if(num == n.str)\n            {\n                pos[i]\
    \ = n.num;\n                break;\n            }\n        }\n    }\n    sort(pos);\n\
    \    foreach(i,num; enumerate(pos))\n    {\n        foreach(j, n; enumerate(nums))\n\
    \        {\n            if(num == n.num)\n            {\n                parts[i]\
    \ = n.str;\n                break;\n            }\n        }\n    }\n    return\
    \ join(parts, \" \");\n}\n//***************************************************************************************************************************\n\
    /*\n For a given positive integer N, a harmonic series is the sum of 1/i, where\
    \ i is the numerator and goes from 1 to N.\n    Given N, return the sum of the\
    \ harmonic series from 1 to N, inclusive.\n    >>> sum_harmonic(1)\n    1.0\n\
    \    \n*/\nfloat sum_harmonic(uint N) \n{\n    float sum = 0;\n    for(int i =\
    \ 1; i <= N; i++)\n    {\n        sum += 1.0 / i;\n    }\n    return sum;\n}\n\
    //***************************************************************************************************************************\n\
    /*\n The first player keeps rolling until she gets a total of at least 20.\n \
    \   The second player will then roll the remaining number of times necessary to\
    \ beat the first player's total.\n    If the first player rolls a 1, the second\
    \ player automatically wins.\n    If the second player ever rolls a 1,\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjhelqvff.d(13): Error: found `str` when expecting `,`\n/tmp/tmpjhelqvff.d(13):
    Error: expression expected, not `,`\n/tmp/tmpjhelqvff.d(13): Error: found `int`
    when expecting `,`\n/tmp/tmpjhelqvff.d(70): Error: unterminated /* */ comment\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjhelqvff.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    auto numbersArray = numbers.split(\" \");\n    sort(numbersArray);\n\
    \    return join(numbersArray, \" \");\n}\nunittest\n{\n    alias candidate =\
    \ sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpip5d2m8z.d(13): Error: no property `split` for type `string`\n/tmp/tmpip5d2m8z.d(14):
    Error: undefined identifier `sort`, did you mean function `sqrt`?\n/tmp/tmpip5d2m8z.d(15):
    Error: undefined identifier `join`, did you mean function `main`?\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpip5d2m8z.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    import std.algorithm.comparison : less;\n    int[] values\
    \ = numbers.split.map!(to!int);\n    sort(values);\n    return values.map!(to!string).join(\"\
    \ \");\n}\n/*\n   Return a string with all non-alphabetic characters replaced\
    \ by spaces.\n   >>> strip_non_alphabet(\"This is a string! w00t!\")\n   \"This\
    \ is a string  w t \"\n*/\nstring strip_non_alphabet(string text)\n{\n    import\
    \ std.algorithm.iteration : filter;\n    return text.filter!isAlpha.joiner;\n\
    }\n/*\n   Return the word with the longest length from the string.\n   If there\
    \ is a tie, return the first word encountered in the string.\n   >>> longest_word(\"\
    This is a string\")\n   \"string\"\n*/\nstring longest_word(string text)\n{\n\
    \    return text.split.reduce!max.to!string;\n}\n/*\n   Return the indices of\
    \ all anagrams of the word in the list of words.\n   >>> get_anagram_indices(\"\
    listen\", [\"enlists\", \"google\", \"inlets\", \"banana\"])\n   [0, 3]\n*/\n\
    unittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxisarp8l.d(13): Error: module `std.algorithm.comparison` import
    `less` not found\n/tmp/tmpxisarp8l.d(14): Error: no property `split` for type
    `string`\n/tmp/tmpxisarp8l.d(15): Error: undefined identifier `sort`, did you
    mean function `sqrt`?\n/tmp/tmpxisarp8l.d(16): Error: no property `map` for type
    `int[]`\n/tmp/tmpxisarp8l.d(26): Error: undefined identifier `isAlpha`\n/tmp/tmpxisarp8l.d(36):
    Error: no property `split` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpxisarp8l.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    auto tokens = split(numbers);\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphbyub5l3.d(14): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphbyub5l3.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    if(!numbers) \n        return \"\";\n    import std.conv :\
    \ to;\n    string[] words = numbers.split;\n    int[] nums;\n    foreach(x; words)\
    \ \n    {\n        nums ~= to!int(x);\n    }\n    nums.sort;\n    string ret =\
    \ nums[0];\n    foreach(x; nums[1..$]) \n    {\n        ret ~= \" \" ~ x;\n  \
    \  }\n    return ret;\n}\n/*\n    Write a function isValid(formula) that takes\
    \ a string, and returns whether or not it's a valid\n    chess board filling.\
    \ Here's an example of a valid board filling:\n    >>> isValid(\"wbwbwbwb/wbwbwbwb/wbwbwbwb/wbwbwbwb/wbwbwbwb/wbwbwbwb/wbwbwbwb/wbwbwbwb\"\
    )\n    True\n    >>> isValid(\"bbbbbbbb/wwwwwwww/bbbbbbbb/wwwwwwww/bbbbbbbb/wwwwwwww/bbbbbbbb/wwwwwwww\"\
    )\n    True\n    >>> isValid(\"bbbbbbbb/rrrrrrrr/bbbbbbbb/rrrrrrrr/bbbbbbbb/rrrrrrrr/bbbbbbbb/rrrrrrrr\"\
    )\n    True\n    >>> isValid(\"bbbbbbbb/rrrrrrrr/bbbbbbbb/wwwwwwww/bbbbbbbb/rrrrrrrr/bbbbbbbb/rrrrrrrr\"\
    )\n    False\n    >>> isValid(\"bbbbbbbb/rrrrrrrr/bbbbbbbb/rrrrrrrw/bbbbbbbb/rrrrrrrr/bbbbbbbb/rrrrrrrr\"\
    )\n    False\n    >>> isValid(\"rrrrrrrr/bbbbbbbb/rrrrrrrr/bbbbbbbb/rrrrrrrr/bbbbbbbb/rrrrrrrr/bbbbbbbb\"\
    )\n    True\n    >>> isValid(\"rrrrrrrr/bbbbbbbb/rrrrrrrr/bbbbbbbb/rrrrrrrr/bbbbbbbb/rrrrrrrr/wwwwwwww\"\
    )\n    False\n\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqb1d57hr.d(30): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpqb1d57hr.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    import std.algorithm : sort;\n    string[] keys = \"zero one\
    \ two three four five six seven eight nine\".split;\n    string[] splitNumbers\
    \ = numbers.split;\n    string[] numSorted = sort(splitNumbers.map!(to => keys.indexOf(to)));\n\
    \    string output = numSorted.map!(to => keys[to]).join(\" \");\n    return output;\n\
    }\n/*\n Input is a space-delimited string of numbers.\n    Return the string with\
    \ the numbers sorted from smallest to largest\n    >>> sort_numbers_2(\"3 1 5\"\
    )\n    \"1 3 5\"\n    \n*/\nstring sort_numbers_2(string numbers)\n{\n    return\
    \ sort_numbers(numbers.replace(\"three\", \"three \").replace(\"one\", \"one \"\
    ).replace(\"five\", \"five \"));\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl6q_wl49.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014457
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] arr;\n    size_t split_point = 0;\n    int j = 0;\n\
    \    int temp;\n    string res = \"\";\n    arr = numbers.split;\n    foreach(string\
    \ word; arr) {\n        if(word == \"zero\") {\n            temp = 0;\n      \
    \  } else if(word == \"one\") {\n            temp = 1;\n        } else if(word\
    \ == \"two\") {\n            temp = 2;\n        } else if(word == \"three\") {\n\
    \            temp = 3;\n        } else if(word == \"four\") {\n            temp\
    \ = 4;\n        } else if(word == \"five\") {\n            temp = 5;\n       \
    \ } else if(word == \"six\") {\n            temp = 6;\n        } else if(word\
    \ == \"seven\") {\n            temp = 7;\n        } else if(word == \"eight\"\
    ) {\n            temp = 8;\n        } else if(word == \"nine\") {\n          \
    \  temp = 9;\n        }\n        if(temp <= arr[j]) {\n            arr[j] = temp;\n\
    \        } else {\n            for(int i = j; i >= 0; i--) {\n               \
    \ if(arr[i] < temp) {\n                    for(int k = j; k > i; k--) {\n    \
    \                    arr[k+1] = arr[k];\n                    }\n             \
    \       arr[i+1] = temp;\n                    break;\n                }\n    \
    \        }\n        }\n        j++;\n    }\n    foreach(int num; arr) {\n    \
    \    if(num == 0) {\n            res ~= \"zero \";\n        } else if(num == 1)\
    \ {\n            res ~= \"one \";\n        } else if(num == 2) {\n           \
    \ res ~= \"two \";\n        } else if(num == 3) {\n            res ~= \"three\
    \ \";\n        } else if(num == 4) {\n            res ~= \"four \";\n        }\
    \ else if(num == 5) {\n            res ~= \"five \";\n        } else if(num ==\
    \ 6) {\n            res ~= \"six \";\n        } else if(num\nunittest\n{\n   \
    \ alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n  \
    \  assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three five\
    \ nine\") == \"three five nine\");\n    assert(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvr5bsba5.d(72): Error: found \''unittest\'' when expecting \'')\''\n/tmp/tmpvr5bsba5.d(82):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmpvr5bsba5.d(82):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvr5bsba5.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014457
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    return nums.sort()[].join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps_x1382q.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014457
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    int[] nums;\n    foreach(number; split(numbers)) \n    {\n\
    \        switch(number) \n        {\n            case \"zero\":\n            \
    \    nums ~= 0;\n                break;\n            case \"one\":\n         \
    \       nums ~= 1;\n                break;\n            case \"two\":\n      \
    \          nums ~= 2;\n                break;\n            case \"three\":\n \
    \               nums ~= 3;\n                break;\n            case \"four\"\
    :\n                nums ~= 4;\n                break;\n            case \"five\"\
    :\n                nums ~= 5;\n                break;\n            case \"six\"\
    :\n                nums ~= 6;\n                break;\n            case \"seven\"\
    :\n                nums ~= 7;\n                break;\n            case \"eight\"\
    :\n                nums ~= 8;\n                break;\n            case \"nine\"\
    :\n                nums ~= 9;\n                break;\n        }\n    }\n    nums.sort;\n\
    \    string result;\n    foreach(num; nums)\n    {\n        switch(num) \n   \
    \     {\n            case 0:\n                result ~= \"zero \";\n         \
    \       break;\n            case 1:\n                result ~= \"one \";\n   \
    \             break;\n            case 2:\n                result ~= \"two \"\
    ;\n                break;\n            case 3:\n                result ~= \"three\
    \ \";\n                break;\n            case 4:\n                result ~=\
    \ \"four \";\n                break;\n            case 5:\n                result\
    \ ~= \"five \";\n                break;\n            case 6:\n               \
    \ result ~= \"six \";\n                break;\n            case 7:\n         \
    \       result ~= \"seven \";\n                break;\n            case 8:\n \
    \               result ~= \"eight \";\n                break;\n            case\
    \ 9:\n                result ~= \"nine \";\n                break;\n        }\n\
    \    }\n    return result;\n}\n/*\n    The goal is to create a '2048' game.\n\
    \    Use arrow keys to move the numbers around.\n    Numbers can be merged if\
    \ they are the same.\n    >>> main()\n*/\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppcz1kcof.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014457
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n\t//assert(false, \"Implement me!\");\n\tint array[20];\n\tint\
    \ i = 0;\n\tnumbers = numbers.split(\" \");\n\tforeach(string s; numbers)\n\t\
    {\n\t\tif(s == \"zero\")\n\t\t\tarray[i] = 0;\n\t\telse if(s == \"one\")\n\t\t\
    \tarray[i] = 1;\n\t\telse if(s == \"two\")\n\t\t\tarray[i] = 2;\n\t\telse if(s\
    \ == \"three\")\n\t\t\tarray[i] = 3;\n\t\telse if(s == \"four\")\n\t\t\tarray[i]\
    \ = 4;\n\t\telse if(s == \"five\")\n\t\t\tarray[i] = 5;\n\t\telse if(s == \"six\"\
    )\n\t\t\tarray[i] = 6;\n\t\telse if(s == \"seven\")\n\t\t\tarray[i] = 7;\n\t\t\
    else if(s == \"eight\")\n\t\t\tarray[i] = 8;\n\t\telse if(s == \"nine\")\n\t\t\
    \tarray[i] = 9;\n\t\telse\n\t\t\tassert(false, \"Invalid input.\");\n\t\ti++;\n\
    \t}\n\tsort(array[0..i]);\n\tstring result = \"\";\n\tforeach(int a; array[0..i])\n\
    \t{\n\t\tif(a == 0)\n\t\t\tresult ~= \"zero \";\n\t\telse if(a == 1)\n\t\t\tresult\
    \ ~= \"one \";\n\t\telse if(a == 2)\n\t\t\tresult ~= \"two \";\n\t\telse if(a\
    \ == 3)\n\t\t\tresult ~= \"three \";\n\t\telse if(a == 4)\n\t\t\tresult ~= \"\
    four \";\n\t\telse if(a == 5)\n\t\t\tresult ~= \"five \";\n\t\telse if(a == 6)\n\
    \t\t\tresult ~= \"six \";\n\t\telse if(a == 7)\n\t\t\tresult ~= \"seven \";\n\t\
    \telse if(a == 8)\n\t\t\t\nunittest\n{\n    alias candidate = sort_numbers;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpty1ih_tj.d(65): Error: found \''unittest\'' instead of statement\n/tmp/tmpty1ih_tj.d(75):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpty1ih_tj.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014457
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    //read the string into a dynamic array\n    string[] tokens\
    \ = numbers.split;\n    //create a array of corresponding int for each word\n\
    \    int[] tokens_int = new int[];\n    foreach(t; tokens)\n    {\n        switch(t)\n\
    \        {\n            case \"zero\": \n                tokens_int ~= 0; \n \
    \               break;\n            case \"one\": \n                tokens_int\
    \ ~= 1; \n                break;\n            case \"two\": \n               \
    \ tokens_int ~= 2; \n                break;\n            case \"three\": \n  \
    \              tokens_int ~= 3; \n                break;\n            case \"\
    four\": \n                tokens_int ~= 4; \n                break;\n        \
    \    case \"five\": \n                tokens_int ~= 5; \n                break;\n\
    \            case \"six\": \n                tokens_int ~= 6; \n             \
    \   break;\n            case \"seven\": \n                tokens_int ~= 7; \n\
    \                break;\n            case \"eight\": \n                tokens_int\
    \ ~= 8; \n                break;\n            case \"nine\": \n              \
    \  tokens_int ~= 9; \n                break;\n        }\n    }\n    //sort the\
    \ integer array and use the index to sort the string\n    int[] index_array =\
    \ sort!(\"a < b\")(tokens_int);\n    string[] tokens_sorted = new string[];\n\
    \    foreach(t; index_array)\n    {\n        tokens_sorted ~= tokens[t];\n   \
    \ }\n    return tokens_sorted.join(\" \");\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo0ors4q6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014457
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    // Then split into an array of ints.\n    auto array = numbers.split();\n\
    \    // Sort the array of ints\n    array.sort();\n    // Convert back to a string\n\
    \    auto string = join(array, \" \");\n    return string;\n}\n/*\n Write a function\
    \ to return the longest contiguous sequence of zeros in a binary string.\n   \
    \ >>> count_zeros(\"10\")\n    0\n    >>> count_zeros(\"10100\")\n    2\n    >>>\
    \ count_zeros(\"001000\")\n    3\n*/\nsize_t count_zeros(string binary) \n{\n\
    \    // Split into an array of ones and zeros\n    auto array = binary.split();\n\
    \    // Then find the longest contiguous sequence\n    return max(map!(n => n.count)(array));\n\
    }\n/*\n Write a function to convert a decimal number to a string in any base between\
    \ 2 and 16.\n The input is a string of digits between '0' and '9', and the function\
    \ returns a string of digits.\n    >>> convert_to_base(2, \"3\")\n    \"11\"\n\
    \    >>> convert_to_base(10, \"13\")\n    \"13\"\n    >>> convert_to_base(16,\
    \ \"11\")\n    \"B\"\n*/\nstring convert_to_base(size_t base, string number) \n\
    {\n    // Convert the string to an int\n    int num = to!int(number);\n    //\
    \ Then convert to the base\n    string result = format(\"%d\", num);\n    return\
    \ result;\n}\n/*\n Write a function to convert a number from one base to another.\
    \ The input is two strings of digits,\n    one for the starting base, and one\
    \ for the target base.\n    >>> convert_base(\"10\", \"2\", \"3\")\n    \"11\"\
    \n    >>> convert_base(\"7\", \"10\", \"4\")\n    \"13\"\n    >>> convert_base(\"\
    100\", \"2\", \"16\")\n    \"64\"\n*/\nstring convert_base(string number, size_t\
    \ start_base, size_t end_base) \n{\n    // Convert the number to an int\n    int\
    \ num = to!int(number);\n   \nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmppoz0qv0u.d(70): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppoz0qv0u.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014457
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n\tauto to_numbers = [\"zero\", \"one\", \"two\", \"three\", \"\
    four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"];\n\tauto to_numbers_hash\
    \ = appender;\n\tforeach(i, num; to_numbers)\n\t{\n\t\tto_numbers_hash[num] =\
    \ i;\n\t}\n\tauto in_numbers = numbers.split;\n\tauto in_numbers_as_numbers =\
    \ appender;\n\tforeach(num; in_numbers)\n\t{\n\t\tin_numbers_as_numbers ~= to_numbers_hash[num];\n\
    \t}\n\tauto sorted_numbers = sort(in_numbers_as_numbers);\n\tauto sorted_numbers_as_numbers\
    \ = appender;\n\tforeach(num; sorted_numbers)\n\t{\n\t\tsorted_numbers_as_numbers\
    \ ~= to_numbers[num];\n\t}\n\treturn sorted_numbers_as_numbers.idup.join(\" \"\
    );\n}\n/*\n Input is a space-delimited string of numberals from 'one' to 'six'.\n\
    \    Valid choices are 'one', 'two', 'three', 'four', 'five' and 'six'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> dice_roll(\"\
    two three four one five six\")\n    \"one two three four five six\"\n*/\nstring\
    \ dice_roll(string roll) \n{\n\treturn sort_numbers(roll);\n}\n/*\n Input is a\
    \ string of space delimited numerals, each in range 0-9,\n    with an optional\
    \ leading sign character.\n    Return the total of all the numbers in the string.\n\
    \    >>> add_numbers(\"1 2 3 4\")\n    10\n    >>> add_numbers(\"1 2 3 -4\")\n\
    \    2\n    >>> add_numbers(\"1234567890\")\n    1234567890\n*/\nunittest\n{\n\
    \    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpauycdlgr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014457
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split;\n    return nums.sort.join(\"\
    \ \");\n}\nassert(sort_numbers(\"three one five\") == \"one three five\");\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpn1axqybf.d(16): Error: Declaration expected, not \''assert\''\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn1axqybf.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014457
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] tokens = numbers.split(\" \");\n    int[] nums =\
    \ new int[tokens.length];\n    foreach(int i, string token; tokens)\n    {\n \
    \       nums[i] = int.parse(token);\n    }\n    nums.sort();\n    string ret =\
    \ \"\";\n    foreach(int num; nums)\n    {\n        ret ~= num.to!string ~ \"\
    \ \";\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpluv_oy_1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014457
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    return [\"zero\", \"one\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"seven\", \"eight\", \"nine\"]\n        .indexed\n        .filter!(a\
    \ => numbers.canFind(a.value))\n        .map!(a => a.value)\n        .joiner(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdxlcjnj5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014457
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] strs = numbers.split(\" \");\n    int[] nums = [strs.length];\n\
    \    foreach(i, string num; strs)\n    {\n        switch(num)\n        {\n   \
    \         case \"zero\": nums[i] = 0; break;\n            case \"one\": nums[i]\
    \ = 1; break;\n            case \"two\": nums[i] = 2; break;\n            case\
    \ \"three\": nums[i] = 3; break;\n            case \"four\": nums[i] = 4; break;\n\
    \            case \"five\": nums[i] = 5; break;\n            case \"six\": nums[i]\
    \ = 6; break;\n            case \"seven\": nums[i] = 7; break;\n            case\
    \ \"eight\": nums[i] = 8; break;\n            case \"nine\": nums[i] = 9; break;\n\
    \        }\n    }\n    nums.sort();\n    string res = \"\";\n    foreach(i, int\
    \ num; nums)\n    {\n        switch(num)\n        {\n            case 0: res ~=\
    \ \"zero\"; break;\n            case 1: res ~= \"one\"; break;\n            case\
    \ 2: res ~= \"two\"; break;\n            case 3: res ~= \"three\"; break;\n  \
    \          case 4: res ~= \"four\"; break;\n            case 5: res ~= \"five\"\
    ; break;\n            case 6: res ~= \"six\"; break;\n            case 7: res\
    \ ~= \"seven\"; break;\n            case 8: res ~= \"eight\"; break;\n       \
    \     case 9: res ~= \"nine\"; break;\n        }\n        if(i != nums.length\
    \ - 1)\n            res ~= \" \";\n    }\n    return res;\n}\nunittest\n{\n  \
    \  alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n \
    \   assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three five\
    \ nine\") == \"three five nine\");\n    assert(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpclyagb2t.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014457
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    import std.array, std.algorithm, std.stdio;\n    //if (numbers\
    \ == \"\")\n    //    return numbers;\n    int[] numberals = numbers.split(' ').map!(x\
    \ => to!int(x)).array();\n    sort(numberals);\n    return numberals.map!(x =>\
    \ to!string(x)).join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdlhqkabf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014457
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    auto sorted = sort!(a => a)(split(numbers));\n    int[] numbersInt\
    \ = to!int[](sorted);\n    sort(numbersInt);\n    return join(numbersInt);\n}\n\
    unittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1dr8mmv8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014457
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = split(numbers);\n    int[] nums_integer =\
    \ [0,0,0];\n    int[] is_number = [0,0,0];\n    foreach(int i, string num; nums)\n\
    \    {\n        if(num == \"zero\")\n        {\n            nums_integer[i] =\
    \ 0;\n            is_number[i] = 1;\n        }\n        else if(num == \"one\"\
    )\n        {\n            nums_integer[i] = 1;\n            is_number[i] = 1;\n\
    \        }\n        else if(num == \"two\")\n        {\n            nums_integer[i]\
    \ = 2;\n            is_number[i] = 1;\n        }\n        else if(num == \"three\"\
    )\n        {\n            nums_integer[i] = 3;\n            is_number[i] = 1;\n\
    \        }\n        else if(num == \"four\")\n        {\n            nums_integer[i]\
    \ = 4;\n            is_number[i] = 1;\n        }\n        else if(num == \"five\"\
    )\n        {\n            nums_integer[i] = 5;\n            is_number[i] = 1;\n\
    \        }\n        else if(num == \"six\")\n        {\n            nums_integer[i]\
    \ = 6;\n            is_number[i] = 1;\n        }\n        else if(num == \"seven\"\
    )\n        {\n            nums_integer[i] = 7;\n            is_number[i] = 1;\n\
    \        }\n        else if(num == \"eight\")\n        {\n            nums_integer[i]\
    \ = 8;\n            is_number[i] = 1;\n        }\n        else if(num == \"nine\"\
    )\n        {\n            nums_integer[i] = 9;\n            is_number[i] = 1;\n\
    \        }\n    }\n    string ret;\n    int len = length(nums);\n    int[] temp_nums\
    \ = [0,0,0];\n    int[] temp_is_number = [0,0,0];\n    for(int i = 0; i\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntupt9x2.d(74): Error: found \''unittest\'' when expecting \'';\''
    following for condition\n/tmp/tmpntupt9x2.d(84): Error: found \''void\'' when
    expecting \'')\''\n/tmp/tmpntupt9x2.d(84): Error: found \''{\'' when expecting
    \'';\'' following statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntupt9x2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014457
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    auto sorted_numbers = split(numbers, \" \");\n    sort(sorted_numbers.begin(),\
    \ sorted_numbers.end());\n    return join(sorted_numbers, \" \");\n}\n//v1\nstring\
    \ sort_numbers(string numbers) \n{\n    auto sorted_numbers = split(numbers, \"\
    \ \");\n    std.algorithm.sort(sorted_numbers.begin(), sorted_numbers.end());\n\
    \    return join(sorted_numbers, \" \");\n}\n//v2\nstring sort_numbers(string\
    \ numbers) \n{\n    auto sorted_numbers = split(numbers, \" \");\n    std.algorithm.sort(sorted_numbers.begin(),\
    \ sorted_numbers.end());\n    return join(sorted_numbers, \" \");\n}\n//v3\nstring\
    \ sort_numbers(string numbers) \n{\n    auto sorted_numbers = split(numbers, \"\
    \ \");\n    std.algorithm.sort(sorted_numbers.begin(), sorted_numbers.end());\n\
    \    return join(sorted_numbers, \" \");\n}\n//v4\nstring sort_numbers(string\
    \ numbers) \n{\n    auto sorted_numbers = split(numbers, \" \");\n    std.algorithm.sort(sorted_numbers.begin(),\
    \ sorted_numbers.end());\n    return join(sorted_numbers, \" \");\n}\n//v5\nstring\
    \ sort_numbers(string numbers) \n{\n    auto sorted_numbers = split(numbers, \"\
    \ \");\n    std.algorithm.sort(sorted_numbers.begin(), sorted_numbers.end());\n\
    \    return join(sorted_numbers, \" \");\n}\n//v6\nstring sort_numbers(string\
    \ numbers) \n{\n    auto sorted_numbers = split(numbers, \" \");\n    std.algorithm.sort(sorted_numbers.begin(),\
    \ sorted_numbers.end());\n    return join(sorted_numbers, \" \");\n}\n//v7\nstring\
    \ sort_numbers(string numbers) \n{\n    auto sorted\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmppxv92x4v.d(63): Error: no identifier for declarator sorted\n/tmp/tmppxv92x4v.d(63):
    Error: found \''unittest\'' instead of statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmppxv92x4v.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014457
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n\t// Split the input string into an array of strings\n\tstring[]\
    \ tokens = numbers.split();\n\t// Go through the array and turn each token into\
    \ an int\n\tforeach(int i, ref string token; tokens)\n\t{\n\t\ttoken = fromString!int(token);\n\
    \t}\n\t// Sort the array of ints\n\tsort(tokens);\n\t// Go through the array and\
    \ turn each token back into a string\n\tforeach(int i, ref string token; tokens)\n\
    \t{\n\t\ttoken = to!string(token);\n\t}\n\t// Join the array of strings back into\
    \ a single string\n\tstring result = tokens.join(\" \");\n\treturn result;\n}\n\
    unittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk066loe1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014457
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] tokens = split(numbers);\n    int[] numberals = new\
    \ int[tokens.length];\n    foreach(i, token; tokens) {\n        switch(token)\
    \ {\n            case \"zero\":\n                numberals[i] = 0;\n         \
    \       break;\n            case \"one\":\n                numberals[i] = 1;\n\
    \                break;\n            case \"two\":\n                numberals[i]\
    \ = 2;\n                break;\n            case \"three\":\n                numberals[i]\
    \ = 3;\n                break;\n            case \"four\":\n                numberals[i]\
    \ = 4;\n                break;\n            case \"five\":\n                numberals[i]\
    \ = 5;\n                break;\n            case \"six\":\n                numberals[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                numberals[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                numberals[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                numberals[i]\
    \ = 9;\n                break;\n        }\n    }\n    std.algorithm.sort(numberals);\n\
    \    tokens = new string[numberals.length];\n    foreach(i, numberal; numberals)\
    \ {\n        switch(numberal) {\n            case 0:\n                tokens[i]\
    \ = \"zero\";\n                break;\n            case 1:\n                tokens[i]\
    \ = \"one\";\n                break;\n            case 2:\n                tokens[i]\
    \ = \"two\";\n                break;\n            case 3:\n                tokens[i]\
    \ = \"three\";\n                break;\n            case 4:\n                tokens[i]\
    \ = \"four\";\n                break;\n            case 5:\n                tokens[i]\
    \ = \"five\";\n                break;\n            case 6:\n                tokens[i]\
    \ = \"six\";\n                break;\n            case 7:\n                tokens[i]\
    \ = \"seven\";\n                break;\n            case 8:\n                tokens[i]\
    \ = \"eight\";\n                break;\n            case 9:\n                tokens[i]\
    \ = \"nine\";\n                break;\n        }\n    }\n    return join(tokens);\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_1rtjg4x.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014457
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    static int[string] s_numberMap = [\"zero\": 0, \"one\": 1,\
    \ \"two\": 2, \"three\": 3, \"four\": 4, \"five\": 5, \"six\": 6, \"seven\": 7,\
    \ \"eight\": 8, \"nine\": 9];\n    int[] numbersArray = numbers.split.map!(a =>\
    \ s_numberMap[a]).array;\n    sort(numbersArray);\n    return numbersArray.map!(a\
    \ => s_numberMap.keys[a]).join(\" \");\n}\n// Generate a random number between\
    \ 1 and 10 inclusive\nunittest\n{\n    alias candidate = sort_numbers;\n\n   \
    \ assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6v32y1yc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014457
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n  enum numeral = \"zero one two three four five six seven eight\
    \ nine\";\n  int numeral_length = numeral.length;\n  string[] arr = numbers.split(\"\
    \ \");\n  int[] num_arr = new int[arr.length];\n  string result = \"\";\n  foreach(int\
    \ i; 0..arr.length)\n  {\n    foreach(int j; 0..numeral_length)\n    {\n     \
    \ if(arr[i] == numeral[j])\n      {\n        num_arr[i] = j;\n      }\n    }\n\
    \  }\n  sort(num_arr);\n  foreach(int i; 0..num_arr.length)\n  {\n    result ~=\
    \ numeral[num_arr[i]] ~ \" \";\n  }\n  return result;\n}\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpki8x9mar.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014457
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n\tauto numbers_array = split(numbers);\n\t// Alternative to foreach:\n\
    \t// for (auto i = 0; i < numbers_array.length; i++) \n\tforeach (number; numbers_array)\
    \ \n\t{\n\t\tnumber = number.toLower();\n\t\tif (number.length == 3) {\n\t\t\t\
    number = \"0\";\n\t\t}\n\t\telse if (number.length == 4) {\n\t\t\tnumber = \"\
    1\";\n\t\t}\n\t\telse if (number.length == 3) {\n\t\t\tnumber = \"2\";\n\t\t}\n\
    \t\telse if (number.length == 5) {\n\t\t\tnumber = \"3\";\n\t\t}\n\t\telse if\
    \ (number.length == 4) {\n\t\t\tnumber = \"4\";\n\t\t}\n\t\telse if (number.length\
    \ == 4) {\n\t\t\tnumber = \"5\";\n\t\t}\n\t\telse if (number.length == 3) {\n\t\
    \t\tnumber = \"6\";\n\t\t}\n\t\telse if (number.length == 5) {\n\t\t\tnumber =\
    \ \"7\";\n\t\t}\n\t\telse if (number.length == 5) {\n\t\t\tnumber = \"8\";\n\t\
    \t}\n\t\telse if (number.length == 4) {\n\t\t\tnumber = \"9\";\n\t\t}\n\t}\n\t\
    sort(numbers_array);\n\treturn join(numbers_array);\n}\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxvf5e6t8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014457
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    int[] number_list;\n    foreach(word; numbers.split(\" \"\
    )) {\n        switch(word) {\n            case \"zero\": number_list ~= 0; break;\n\
    \            case \"one\": number_list ~= 1; break;\n            case \"two\"\
    : number_list ~= 2; break;\n            case \"three\": number_list ~= 3; break;\n\
    \            case \"four\": number_list ~= 4; break;\n            case \"five\"\
    : number_list ~= 5; break;\n            case \"six\": number_list ~= 6; break;\n\
    \            case \"seven\": number_list ~= 7; break;\n            case \"eight\"\
    : number_list ~= 8; break;\n            case \"nine\": number_list ~= 9; break;\n\
    \        }\n    }\n    sort(number_list);\n    string result;\n    foreach(word;\
    \ number_list) {\n        switch(word) {\n            case 0: result ~= \"zero\"\
    ; break;\n            case 1: result ~= \"one\"; break;\n            case 2: result\
    \ ~= \"two\"; break;\n            case 3: result ~= \"three\"; break;\n      \
    \      case 4: result ~= \"four\"; break;\n            case 5: result ~= \"five\"\
    ; break;\n            case 6: result ~= \"six\"; break;\n            case 7: result\
    \ ~= \"seven\"; break;\n            case 8: result ~= \"eight\"; break;\n    \
    \        case 9: result ~= \"nine\"; break;\n        }\n        result ~= \" \"\
    ;\n    }\n    return result.stripRight();\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpozrgki1o.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014457
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    auto output = numbers.split();\n    std.algorithm.sort(output);\n\
    \    return output.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9vr1t3n3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014457
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n  if (numbers.length == 0)\n    return \"\";\n  return sort_numbers(numbers.split('\
    \ ')).map!(a => {\n    return a.join(' ');\n  }).array;\n}\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpae7txx2t.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014457
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    /*\n    import std.conv : to;\n    return numbers.split('\
    \ ').map!(to!int).sort.join(\" \");\n    */\n    \n    // Now, here's the short\
    \ version of this exercise, as it's a warm-up\n    int[] n = numbers.split(' ').map!(n\
    \ => [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"\
    , \"eight\", \"nine\"].indexOf(n)).sort();\n    return numbers.split(' ').sort!((a,\
    \ b) => n[a] < n[b]).join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpti_r472j.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014457
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n\tnumbers = numbers.lowercase; //lowercase all words\n\t\n\t//Split\
    \ the string on the space delimiter to get the words\n\tstring[] nums = numbers.split(\"\
    \ \"); \n\t\n\t//Parse nums from string to int\n\tint[] num = new int[nums.length];\n\
    \tforeach(i, w; nums)\n\t{\n\t\tif(w == \"zero\") num[i] = 0;\n\t\telse if(w ==\
    \ \"one\") num[i] = 1;\n\t\telse if(w == \"two\") num[i] = 2;\n\t\telse if(w ==\
    \ \"three\") num[i] = 3;\n\t\telse if(w == \"four\") num[i] = 4;\n\t\telse if(w\
    \ == \"five\") num[i] = 5;\n\t\telse if(w == \"six\") num[i] = 6;\n\t\telse if(w\
    \ == \"seven\") num[i] = 7;\n\t\telse if(w == \"eight\") num[i] = 8;\n\t\telse\
    \ if(w == \"nine\") num[i] = 9;\n\t}\n\t\n\t//Sort num from low to high\n\tstd.algorithm.sort(num);\n\
    \t\n\t//Build the return string\n\tstring ret = \"\";\n\tforeach(n; num)\n\t{\n\
    \t\tswitch(n)\n\t\t{\n\t\t\tcase 0: ret ~= \"zero \"; break;\n\t\t\tcase 1: ret\
    \ ~= \"one \"; break;\n\t\t\tcase 2: ret ~= \"two \"; break;\n\t\t\tcase 3: ret\
    \ ~= \"three \"; break;\n\t\t\tcase 4: ret ~= \"four \"; break;\n\t\t\tcase 5:\
    \ ret ~= \"five \"; break;\n\t\t\tcase 6: ret ~= \"six \"; break;\n\t\t\tcase\
    \ 7: ret ~= \"seven \"; break;\n\t\t\tcase 8: ret ~= \"eight \"; break;\n\t\t\t\
    case 9: ret ~= \"nine \"; break;\n\t\t}\n\t}\n\treturn ret;\n}\nunittest\n{\n\
    \    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr9xu0ivr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014457
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    const(char[]) digitNames = [ \"zero\", \"one\", \"two\", \"\
    three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\" ];\n    immutable\
    \ numbersList = numbers.split;\n    immutable numbersMap = numbersList.map!(n\
    \ => {\n        const(char[]) n2 = toLower(n);\n        immutable idx = digitNames.indexOf(n2);\n\
    \        return tuple(idx, n);\n    });\n    immutable sortedMap = numbersMap.sort!((t1,\
    \ t2) => { return t1[0] < t2[0]; });\n    return sortedMap.map!(t => { return\
    \ t[1]; }).join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphn2fy7lh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014457
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    enum Numerals{zero, one, two, three, four, five, six, seven,\
    \ eight, nine};\n    alias Pairs = AliasSeq!(Numerals.zero, Numerals.one, Numerals.two,\
    \ Numerals.three, Numerals.four, Numerals.five, Numerals.six, Numerals.seven,\
    \ Numerals.eight, Numerals.nine);\n    static if(!__traits(compiles, Pairs.array))\n\
    \    {\n        string opApply(string delegate(Numerals) dg)\n        {\n    \
    \        string s;\n            foreach(i; Pairs)\n            {\n           \
    \     s ~= dg(i);\n            }\n            return s;\n        }\n    }\n  \
    \  static if(__traits(compiles, Pairs.array))\n    {\n        static auto numbers_values\
    \ = Pairs.array;\n    }\n    else\n    {\n        static int[Numerals.max] numbers_values;\n\
    \        static foreach(i; Pairs)\n        {\n            numbers_values[i] =\
    \ i;\n        }\n    }\n    int[Numerals.max] numeral_counts;\n    foreach(n;\
    \ numbers.split(\" \"))\n    {\n        ++numeral_counts[cast(Numerals)(n)];\n\
    \    }\n    return opApply!((Numerals n)=>n.stringof * numeral_counts[n]);\n}\n\
    unittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4uq3qpvc.d(34): Error: basic type expected, not foreach\n/tmp/tmp4uq3qpvc.d(34):
    Error: no identifier for declarator int\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp4uq3qpvc.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014457
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    import std.algorithm : sort;\n    import std.conv : to;\n\
    \    import std.format : repeat;\n    import std.range : take;\n    import std.stdio\
    \ : writeln;\n    import std.string : split;\n    import std.typecons : Tuple;\n\
    \    import std.traits : returnType;\n    int [string] numbersMap = [\n      \
    \  \"zero\" : 0,\n        \"one\" : 1,\n        \"two\" : 2,\n        \"three\"\
    \ : 3,\n        \"four\" : 4,\n        \"five\" : 5,\n        \"six\" : 6,\n \
    \       \"seven\" : 7,\n        \"eight\" : 8,\n        \"nine\" : 9\n    ];\n\
    \    int [string] inverseMap = [\n        \"zero\" : 0,\n        \"one\" : 1,\n\
    \        \"two\" : 2,\n        \"three\" : 3,\n        \"four\" : 4,\n       \
    \ \"five\" : 5,\n        \"six\" : 6,\n        \"seven\" : 7,\n        \"eight\"\
    \ : 8,\n        \"nine\" : 9\n    ];\n    string [] numbersList = numbers.split;\n\
    \    string [] keys = numbersMap.keys;\n    int [] values = numbersMap.values;\n\
    \    int [] newValues = values.sort;\n    string [] newKeys = new string[10];\n\
    \    string [] finalKeys = new string[10];\n    string result = \"\";\n    foreach(i,\
    \ int elem; newValues)\n    {\n        foreach(i, string elem; keys)\n       \
    \ {\n            if(elem == i.to!string)\n            {\n                newKeys\
    \ ~= i;\n            }\n        }\n    }\n    foreach(i, string elem; newKeys)\n\
    \    {\n        if(inverseMap.contains(elem))\n        {\n            finalKeys\
    \ ~= inverseMap[elem];\n        }\n    }\n    foreach(i, string elem; numbersList)\n\
    \    {\n        foreach(i, string elem2; finalKeys)\n        {\n            if(elem\
    \ == elem2)\n            {\n                result ~=\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpkgzrh3m5.d(76): Error: expression expected, not \''unittest\''\n/tmp/tmpkgzrh3m5.d(77):
    Error: found \''{\'' when expecting \'';\'' following statement\n/tmp/tmpkgzrh3m5.d(86):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmpkgzrh3m5.d(86):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmpkgzrh3m5.d(86):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkgzrh3m5.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014457
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    size_t i = 0;\n    string[] output;\n    foreach(n; numbers.split)\n\
    \    {\n        int number = 0;\n        switch(n)\n        {\n            case\
    \ \"zero\": number = 0; break;\n            case \"one\": number = 1; break;\n\
    \            case \"two\": number = 2; break;\n            case \"three\": number\
    \ = 3; break;\n            case \"four\": number = 4; break;\n            case\
    \ \"five\": number = 5; break;\n            case \"six\": number = 6; break;\n\
    \            case \"seven\": number = 7; break;\n            case \"eight\": number\
    \ = 8; break;\n            case \"nine\": number = 9; break;\n        }\n    \
    \    output ~= format(\"%s\", number);\n    }\n    output.sort!(a, b => a < b);\n\
    \    string output_string = \"\";\n    for(i = 0; i < output.length; i++)\n  \
    \  {\n        if(i == output.length - 1)\n        {\n            output_string\
    \ ~= output[i];\n        }\n        else\n        {\n            output_string\
    \ ~= output[i] ~ \" \";\n        }\n    }\n    return output_string;\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_ksu_3_e.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014457
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    auto x = numbers.split;\n    sort(x);\n    return join(x);\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwskqydu6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014457
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    enum numberNames = [\n        \"zero\",\n        \"one\",\n\
    \        \"two\",\n        \"three\",\n        \"four\",\n        \"five\",\n\
    \        \"six\",\n        \"seven\",\n        \"eight\",\n        \"nine\"\n\
    \    ];\n    int[] numPos;\n    foreach(i, word; numbers.split())\n    {\n   \
    \     numPos ~= numberNames.indexOf(word);\n    }\n    numPos.sort();\n    string\
    \ result;\n    foreach(i, number; numPos)\n    {\n        if(i > 0)\n        \
    \    result ~= \" \";\n        result ~= numberNames[number];\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpptzwacq0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014457
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    //map numbers to their string value\n    int[] map;\n    map[\"\
    zero\"] = 0;\n    map[\"one\"] = 1;\n    map[\"two\"] = 2;\n    map[\"three\"\
    ] = 3;\n    map[\"four\"] = 4;\n    map[\"five\"] = 5;\n    map[\"six\"] = 6;\n\
    \    map[\"seven\"] = 7;\n    map[\"eight\"] = 8;\n    map[\"nine\"] = 9;\n  \
    \  \n    //split the input string into array of strings\n    string[] parts =\
    \ numbers.split;\n    \n    //convert to array of ints\n    int[] nums;\n    foreach(part;\
    \ parts)\n    {\n        nums ~= map[part];\n    }\n    \n    //sort the array\
    \ of ints\n    std.algorithm.sort(nums);\n    \n    //get the corresponding string\
    \ for each value\n    //build the string to return\n    string ret;\n    foreach(num;\
    \ nums)\n    {\n        ret ~= map.byValue[num];\n        ret ~= \" \";\n    }\n\
    \    \n    return ret.stripRight;\n}\n/*\n Input is a string,\n    Return the\
    \ string with words in reverse order\n    >>> reverse_words(\"one two three\"\
    )\n    \"three two one\"\n*/\nstring reverse_words(string phrase) \n{\n    //split\
    \ the string into array of strings\n    string[] words = phrase.split;\n    \n\
    \    //reverse the array of strings\n    std.algorithm.reverse(words);\n    \n\
    \    //build the string to return\n    string ret;\n    foreach(word; words)\n\
    \    {\n        ret ~= word;\n        ret ~= \" \";\n    }\n    \n    return ret.stripRight;\n\
    }\n/*\n Input is a string,\n    Return a string with each word reversed. \n  \
    \  Words in the input string remain in the same order\n    >>> reverse_each_word(\"\
    one two three\")\n    \"eno owt eerht\"\n    \n*/\nstring reverse_each_word(string\
    \ phrase) \n{\n    //split the string into array of strings\n    string[] words\
    \ = phrase.split;\n    \nunittest\n{\n    alias candidate = sort_numbers;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5cfk7b8e.d(87): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5cfk7b8e.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014457
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    import std.algorithm : sort;\n    import std.array : array;\n\
    \    import std.conv : to;\n    import std.format : format;\n    import std.string\
    \ : split;\n    import std.typecons : tuple;\n    import std.range : map;\n  \
    \  static const tuple[string] mapping = tuple(\"zero\", \"one\", \"two\", \"three\"\
    , \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\");\n    return format(\"\
    %s\", sort!((a, b) => a.to!(int) < b.to!(int))(numbers.split(\" \").map!(value\
    \ => mapping.indexOf(value)).array));\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiwz1569v.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014457
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    import std.algorithm : sort;\n    static int[] nums = [-1,\
    \ 3, 1, 4, 2, 0, 5, 6, 7, 8];\n    string[] strings = numbers.split();\n    int[]\
    \ nums = strings.map!(x => nums[x.front])\n                .sort()\n         \
    \       .map!(x => nums.indexOf(x));\n    return nums.map!(x => \"zero one two\
    \ three four five six seven eight nine\"[x..x+4]).joiner(\" \");\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptetnzog1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014457
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] strArr;\n    int[] intArr;\n    int i;\n    int j;\n\
    \    int temp;\n    int index = 0;\n    string sort_str;\n    int sort_length;\n\
    \    int count;\n    int slice_length;\n    int first;\n    int rest;\n    int\
    \ new_length;\n    string new_str;\n    string temp_str;\n    int[] arrInt;\n\
    \    int[] tempArr;\n    strArr = split(numbers);\n    intArr = new int[strArr.length];\n\
    \    foreach(str; strArr)\n    {\n        if(str == \"zero\")\n        {\n   \
    \         intArr[index] = 0;\n        }\n        else if(str == \"one\")\n   \
    \     {\n            intArr[index] = 1;\n        }\n        else if(str == \"\
    two\")\n        {\n            intArr[index] = 2;\n        }\n        else if(str\
    \ == \"three\")\n        {\n            intArr[index] = 3;\n        }\n      \
    \  else if(str == \"four\")\n        {\n            intArr[index] = 4;\n     \
    \   }\n        else if(str == \"five\")\n        {\n            intArr[index]\
    \ = 5;\n        }\n        else if(str == \"six\")\n        {\n            intArr[index]\
    \ = 6;\n        }\n        else if(str == \"seven\")\n        {\n            intArr[index]\
    \ = 7;\n        }\n        else if(str == \"eight\")\n        {\n            intArr[index]\
    \ = 8;\n        }\n        else if(str == \"nine\")\n        {\n            intArr[index]\
    \ = 9;\n        }\n        index++;\n    }\n    for(i = 0; i < intArr.length;\
    \ i++)\n    {\n        for(j = 0; j < intArr.length - 1; j++)\n        {\n   \
    \         if(intArr[j] > intArr[j + 1])\n            {\n                temp =\
    \ intArr[j];\n                intArr[j]\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpeyugvxnp.d(84): Error: found \''unittest\'' when expecting \'';\''
    following statement\n/tmp/tmpeyugvxnp.d(94): Error: found \''EOF\'' when expecting
    \''}\'' following compound statement\n/tmp/tmpeyugvxnp.d(94): Error: found \''EOF\''
    when expecting \''}\'' following compound statement\n/tmp/tmpeyugvxnp.d(94): Error:
    found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmpeyugvxnp.d(94):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeyugvxnp.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014457
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] sort_list;\n    auto int_list = split(numbers);\n\
    \    foreach(int_item; int_list)\n    {\n        int_item ~= \" \";\n        int_item\
    \ = to!string(int_list[$-1]);\n        int_item = to!int(int_item);\n        sort_list\
    \ ~= to!string(int_item);\n    }\n    sort_list.sort!((a, b) => a < b);\n    string\
    \ num_list;\n    foreach(num_item; sort_list)\n    {\n        num_item ~= \" \"\
    ;\n        num_item = to!string(sort_list[$-1]);\n        num_list ~= num_item;\n\
    \    }\n    return num_list;\n}\n/*\n Input is a string of text with multiple\
    \ lines,\n    Each line is seperated by a newline (\\n)\n    Return the longest\
    \ line in the input,\n    If there are multiple lines which are longest, return\
    \ the first occurence\n    >>> longest_line(\"hello\\nworld\\ni am cow\")\n  \
    \  \"world\"\n*/\nstring longest_line(string text)\n{\n    import std.typecons\
    \ : tuple;\n    string[] lines = text.split(\"\\n\");\n    string longest_line;\n\
    \    int longest_len = 0;\n    foreach(line; lines)\n    {\n        if(line.length\
    \ > longest_len)\n        {\n            longest_len = line.length;\n        \
    \    longest_line = line;\n        }\n    }\n    return longest_line;\n}\n/*\n\
    \ Return the sum of all numbers in a space-delimited string\n    >>> sum_string(\"\
    five four one\")\n    10\n*/\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk6ek8gg8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014457
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    // your code here\n    int[] nums = [0,1,2,3,4,5,6,7,8,9];\n\
    \    string[] words = [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\", \"seven\", \"eight\", \"nine\"];\n    string[] input_words = numbers.split();\n\
    \    string ret = \"\";\n    int[] input_nums = new int[0];\n    for(int i = 0;\
    \ i < input_words.length; i++)\n    {\n        for(int j = 0; j < words.length;\
    \ j++)\n        {\n            if(input_words[i] == words[j])\n            {\n\
    \                input_nums ~= nums[j];\n            }\n        }\n    }\n   \
    \ input_nums.sort;\n    foreach(index, word; input_nums)\n    {\n        ret ~=\
    \ words[word];\n        if(index < input_nums.length - 1)\n        {\n       \
    \     ret ~= \" \";\n        }\n    }\n    return ret;\n}\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpndqfblnh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014457
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n\tstring numeral_str = \"zero one two three four five six seven\
    \ eight nine\";\n\tstring [] split_numeral_str = numeral_str.split(\" \");\n\t\
    Tuple numeral_to_int = zip(split_numeral_str, iota(split_numeral_str.length));\n\
    \tstring [] numbers_array = numbers.split(\" \");\n\tuint [] int_array = new uint[numbers_array.length];\n\
    \tforeach(int i, string numeral; numbers_array)\n\t{\n\t\tint_array[i] = numeral_to_int[numeral];\n\
    \t}\n\tsort(int_array);\n\tforeach(int i, uint number; int_array)\n\t{\n\t\tint_array[i]\
    \ = numeral_to_int[number];\n\t}\n\treturn numbers_array.join(\" \");\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7bm1axlg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014457
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    // convert string to array\n    string[] strNumbers = split(numbers);\n\
    \    // define map to convert string to int\n    Tuple!(string, int)[] numberMap\
    \ = [Tuple!(string, int)(\"zero\", 0),\n                                     \
    \  Tuple!(string, int)(\"one\", 1),\n                                       Tuple!(string,\
    \ int)(\"two\", 2),\n                                       Tuple!(string, int)(\"\
    three\", 3),\n                                       Tuple!(string, int)(\"four\"\
    , 4),\n                                       Tuple!(string, int)(\"five\", 5),\n\
    \                                       Tuple!(string, int)(\"six\", 6),\n   \
    \                                    Tuple!(string, int)(\"seven\", 7),\n    \
    \                                   Tuple!(string, int)(\"eight\", 8),\n     \
    \                                  Tuple!(string, int)(\"nine\", 9)];\n    //\
    \ convert string to int\n    int[] intNumbers = strNumbers.map!(strNumber => {\n\
    \        foreach(tuple; numberMap) {\n            if(tuple[0] == strNumber) {\n\
    \                return tuple[1];\n            }\n        }\n        return 0;\n\
    \    });\n    // sort numbers\n    sort(intNumbers);\n    // convert int to string\n\
    \    strNumbers = intNumbers.map!(intNumber => {\n        foreach(tuple; numberMap)\
    \ {\n            if(tuple[1] == intNumber) {\n                return tuple[0];\n\
    \            }\n        }\n        return \"zero\";\n    });\n    // join numbers\n\
    \    return join(strNumbers, \" \");\n}\n \n// unit test\nunittest {\n    assert(sort_numbers(\"\
    three one five\") == \"one three five\");\n    assert(sort_numbers(\"four seven\
    \ nine one\") == \"one four seven nine\");\n    assert(sort_numbers(\"three nine\
    \ five eight\") == \"three five eight nine\");\n    assert(sort_numbers(\"nine\
    \ one three eight\") == \"one three eight nine\");\n    assert(sort_numbers(\"\
    three seven\") == \"three seven\");\n    assert(sort_numbers(\"seven three\")\
    \ == \"three seven\");\n    assert(sort_numbers(\"three\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpzieyfbc2.d(64): Error: found \''three\'' when expecting \'',\''\n/tmp/tmpzieyfbc2.d(64):
    Error: found \''three\'' when expecting \'',\''\n/tmp/tmpzieyfbc2.d(65): Error:
    found \''three\'' when expecting \'',\''\n/tmp/tmpzieyfbc2.d(65): Error: found
    \''nine\'' when expecting \'',\''\n/tmp/tmpzieyfbc2.d(65): Error: found \''three\''
    when expecting \'',\''\n/tmp/tmpzieyfbc2.d(65): Error: found \''nine\'' when expecting
    \'',\''\n/tmp/tmpzieyfbc2.d(66): Error: found \''five\'' when expecting \'',\''\n/tmp/tmpzieyfbc2.d(66):
    Error: found \''four\'' when expecting \'',\''\n/tmp/tmpzieyfbc2.d(66): Error:
    found \''nine\'' when expecting \'',\''\n/tmp/tmpzieyfbc2.d(66): Error: found
    \''") == "\'' when expecting \'',\''\n/tmp/tmpzieyfbc2.d(66): Error: found \''four\''
    when expecting \'',\''\n/tmp/tmpzieyfbc2.d(66): Error: found \''seven\'' when
    expecting \'',\''\n/tmp/tmpzieyfbc2.d(66): Error: found \''nine\'' when expecting
    \'',\''\n/tmp/tmpzieyfbc2.d(67): Error: found \''six\'' when expecting \'',\''\n/tmp/tmpzieyfbc2.d(67):
    Error: found \''four\'' when expecting \'',\''\n/tmp/tmpzieyfbc2.d(67): Error:
    found \''two\'' when expecting \'',\''\n/tmp/tmpzieyfbc2.d(67): Error: found \''zero\''
    when expecting \'',\''\n/tmp/tmpzieyfbc2.d(67): Error: found \''zero\'' when expecting
    \'',\''\n/tmp/tmpzieyfbc2.d(67): Error: found \''two\'' when expecting \'',\''\n/tmp/tmpzieyfbc2.d(67):
    Error: found \''four\'' when expecting \'',\''\n/tmp/tmpzieyfbc2.d(67): Error:
    found \''six\'' when expecting \'',\''\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpzieyfbc2.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014457
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    int[] n = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    foreach(string\
    \ s; nsplit(numbers, \" \"))\n    {\n        n[to!int(s)]++;\n    }\n    string\
    \ result = \"\";\n    foreach(int i; 0 .. n.length)\n    {\n        foreach(string\
    \ s; n.front .. n.back)\n        {\n            if(n[i] != 0)\n            {\n\
    \                result ~= format(\"%s \", to!string(i));\n                n[i]--;\n\
    \            }\n        }\n    }\n    return result.rstrip;\n}\nunittest\n{\n\
    \    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6yadcrux.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014457
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] words = split(numbers);\n    string[] numbers = [\n\
    \        \"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"\
    seven\", \"eight\", \"nine\"\n    ];\n    int[] result = new int[](words.length);\n\
    \    for (int i = 0; i < words.length; i++) {\n        result[i] = find(numbers,\
    \ words[i]);\n    }\n    sort(result);\n    string res = \"\";\n    for (int i\
    \ = 0; i < result.length; i++) {\n        res ~= numbers[result[i]] ~ \" \";\n\
    \    }\n    return strip(res);\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkzsl1d0m.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014457
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n\tstring[] num = numbers.split(\" \");\n\tint[] out = new int[num.length];\n\
    \tforeach(i, _num; num)\n\t{\n\t\tswitch(_num)\n\t\t{\n\t\t\tcase \"zero\": out[i]\
    \ = 0; break;\n\t\t\tcase \"one\": out[i] = 1; break;\n\t\t\tcase \"two\": out[i]\
    \ = 2; break;\n\t\t\tcase \"three\": out[i] = 3; break;\n\t\t\tcase \"four\":\
    \ out[i] = 4; break;\n\t\t\tcase \"five\": out[i] = 5; break;\n\t\t\tcase \"six\"\
    : out[i] = 6; break;\n\t\t\tcase \"seven\": out[i] = 7; break;\n\t\t\tcase \"\
    eight\": out[i] = 8; break;\n\t\t\tcase \"nine\": out[i] = 9; break;\n\t\t}\n\t\
    }\n\tsort(out);\n\tforeach(j, _out; out)\n\t{\n\t\tswitch(_out)\n\t\t{\n\t\t\t\
    case 0: num[j] = \"zero\"; break;\n\t\t\tcase 1: num[j] = \"one\"; break;\n\t\t\
    \tcase 2: num[j] = \"two\"; break;\n\t\t\tcase 3: num[j] = \"three\"; break;\n\
    \t\t\tcase 4: num[j] = \"four\"; break;\n\t\t\tcase 5: num[j] = \"five\"; break;\n\
    \t\t\tcase 6: num[j] = \"six\"; break;\n\t\t\tcase 7: num[j] = \"seven\"; break;\n\
    \t\t\tcase 8: num[j] = \"eight\"; break;\n\t\t\tcase 9: num[j] = \"nine\"; break;\n\
    \t\t}\n\t}\n\treturn num.join(\" \");\n}\n/*\n Input is a list of words and a\
    \ delimiter string\n    Return a new string with the same contents as the original\
    \ but with the words joined by the delimiter\n    >>> join_with_commas([\"foo\"\
    , \"bar\"])\n    \"foo and bar\"\n   \nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpki49d2tc.d(14): Error: no identifier for declarator int[]\n/tmp/tmpki49d2tc.d(14):
    Error: found \''out\'' instead of statement\n/tmp/tmpki49d2tc.d(19): Error: found
    \''out\'' instead of statement\n/tmp/tmpki49d2tc.d(20): Error: found \''out\''
    instead of statement\n/tmp/tmpki49d2tc.d(21): Error: found \''out\'' instead of
    statement\n/tmp/tmpki49d2tc.d(22): Error: found \''out\'' instead of statement\n/tmp/tmpki49d2tc.d(23):
    Error: found \''out\'' instead of statement\n/tmp/tmpki49d2tc.d(24): Error: found
    \''out\'' instead of statement\n/tmp/tmpki49d2tc.d(25): Error: found \''out\''
    instead of statement\n/tmp/tmpki49d2tc.d(26): Error: found \''out\'' instead of
    statement\n/tmp/tmpki49d2tc.d(27): Error: found \''out\'' instead of statement\n/tmp/tmpki49d2tc.d(28):
    Error: found \''out\'' instead of statement\n/tmp/tmpki49d2tc.d(31): Error: expression
    expected, not \''out\''\n/tmp/tmpki49d2tc.d(32): Error: expression expected, not
    \''out\''\n/tmp/tmpki49d2tc.d(50): Error: unterminated /* */ comment\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpki49d2tc.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014457
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] numStrings = numbers.split(\" \");\n    size_t[]\
    \ numIntegers = new size_t[numStrings.length];\n    foreach(immutable index, immutable\
    \ n; numStrings)\n    {\n        switch(n)\n        {\n            case \"zero\"\
    : numIntegers[index] = 0; break;\n            case \"one\": numIntegers[index]\
    \ = 1; break;\n            case \"two\": numIntegers[index] = 2; break;\n    \
    \        case \"three\": numIntegers[index] = 3; break;\n            case \"four\"\
    : numIntegers[index] = 4; break;\n            case \"five\": numIntegers[index]\
    \ = 5; break;\n            case \"six\": numIntegers[index] = 6; break;\n    \
    \        case \"seven\": numIntegers[index] = 7; break;\n            case \"eight\"\
    : numIntegers[index] = 8; break;\n            case \"nine\": numIntegers[index]\
    \ = 9; break;\n        }\n    }\n    quickSort(numIntegers);\n    foreach(immutable\
    \ index, immutable ni; numIntegers)\n    {\n        switch(ni)\n        {\n  \
    \          case 0: numStrings[index] = \"zero\"; break;\n            case 1: numStrings[index]\
    \ = \"one\"; break;\n            case 2: numStrings[index] = \"two\"; break;\n\
    \            case 3: numStrings[index] = \"three\"; break;\n            case 4:\
    \ numStrings[index] = \"four\"; break;\n            case 5: numStrings[index]\
    \ = \"five\"; break;\n            case 6: numStrings[index] = \"six\"; break;\n\
    \            case 7: numStrings[index] = \"seven\"; break;\n            case 8:\
    \ numStrings[index] = \"eight\"; break;\n            case 9: numStrings[index]\
    \ = \"nine\"; break;\n        }\n    }\n    return join(numStrings, \" \");\n\
    }\n/*\n    Input is a non-empty array of size_t numbers. \n    Return the majority\
    \ value in the array, or -1 if there is no majority value\n    majorityValue([1,\n\
    unittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcmupxhx7.d(50): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpcmupxhx7.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014457
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    /*\n    char[][] words;\n    string[] numbersArray;\n    char[]\
    \ sortedNumbersArray;\n    */\n    import std.stdio;\n    import std.algorithm;\n\
    \    char[][] words;\n    string[] numbersArray;\n    char[] sortedNumbersArray;\n\
    \    string sortedNumbers = \"\";\n    int i;\n    words = split(numbers);\n \
    \   foreach(word; words)\n    {\n        if(word == \"zero\")\n        {\n   \
    \         sortedNumbers ~= \"0\";\n        }\n        else if(word == \"one\"\
    )\n        {\n            sortedNumbers ~= \"1\";\n        }\n        else if(word\
    \ == \"two\")\n        {\n            sortedNumbers ~= \"2\";\n        }\n   \
    \     else if(word == \"three\")\n        {\n            sortedNumbers ~= \"3\"\
    ;\n        }\n        else if(word == \"four\")\n        {\n            sortedNumbers\
    \ ~= \"4\";\n        }\n        else if(word == \"five\")\n        {\n       \
    \     sortedNumbers ~= \"5\";\n        }\n        else if(word == \"six\")\n \
    \       {\n            sortedNumbers ~= \"6\";\n        }\n        else if(word\
    \ == \"seven\")\n        {\n            sortedNumbers ~= \"7\";\n        }\n \
    \       else if(word == \"eight\")\n        {\n            sortedNumbers ~= \"\
    8\";\n        }\n        else if(word == \"nine\")\n        {\n            sortedNumbers\
    \ ~= \"9\";\n        }\n    }\n    numbersArray = sortedNumbers.split();\n   \
    \ sort(numbersArray);\n    sortedNumbers = \"\";\n    foreach(number; numbersArray)\n\
    \    {\n        sortedNumbers ~= number;\n    }\n    sortedNumbersArray = sortedNumbers.dup;\n\
    \    sort(sortedNumbersArray);\n    foreach(number; sortedNumbersArray)\n    {\n\
    \        if(number == '0')\n        {\n            sortedNumbers ~= \"zero \"\
    ;\n        }\n        else if(number == '1')\n        {\n            sortedNumbers\
    \ ~= \"one \";\n        }\n        else if(number == '2')\n        {\n       \
    \     sortedNumbers ~= \"two\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyau02apo.d(96): Error: found \''three\'' when expecting \'';\''
    following statement\n/tmp/tmpyau02apo.d(96): Error: found \''three\'' when expecting
    \'';\'' following statement\n/tmp/tmpyau02apo.d(97): Error: found \''three\''
    when expecting \'';\'' following statement\n/tmp/tmpyau02apo.d(97): Error: found
    \''nine\'' when expecting \'';\'' following statement\n/tmp/tmpyau02apo.d(97):
    Error: found \''three\'' when expecting \'';\'' following statement\n/tmp/tmpyau02apo.d(97):
    Error: found \''nine\'' when expecting \'';\'' following statement\n/tmp/tmpyau02apo.d(98):
    Error: found \''five\'' when expecting \'';\'' following statement\n/tmp/tmpyau02apo.d(98):
    Error: found \''four\'' when expecting \'';\'' following statement\n/tmp/tmpyau02apo.d(98):
    Error: found \''nine\'' when expecting \'';\'' following statement\n/tmp/tmpyau02apo.d(98):
    Error: found \''") == "\'' when expecting \'';\'' following statement\n/tmp/tmpyau02apo.d(98):
    Error: found \''four\'' when expecting \'';\'' following statement\n/tmp/tmpyau02apo.d(98):
    Error: found \''seven\'' when expecting \'';\'' following statement\n/tmp/tmpyau02apo.d(98):
    Error: found \''nine\'' when expecting \'';\'' following statement\n/tmp/tmpyau02apo.d(99):
    Error: found \''six\'' when expecting \'';\'' following statement\n/tmp/tmpyau02apo.d(99):
    Error: found \''four\'' when expecting \'';\'' following statement\n/tmp/tmpyau02apo.d(99):
    Error: found \''two\'' when expecting \'';\'' following statement\n/tmp/tmpyau02apo.d(99):
    Error: found \''zero\'' when expecting \'';\'' following statement\n/tmp/tmpyau02apo.d(99):
    Error: found \''zero\'' when expecting \'';\'' following statement\n/tmp/tmpyau02apo.d(99):
    Error: found \''two\'' when expecting \'';\'' following statement\n/tmp/tmpyau02apo.d(99):
    Error: found \''four\'' when expecting \'';\'' following statement\n/tmp/tmpyau02apo.d(99):
    Error: unterminated string constant starting at /tmp/tmpyau02apo.d(99)\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyau02apo.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014457
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    numbers = chomp(numbers);\n    string[] words = split(numbers);\n\
    \    int[] numbers_int = new int[];\n    foreach(i, word; words)\n    {\n    \
    \    numbers_int ~= to!int(word);\n    }\n    sort(numbers_int);\n    numbers\
    \ = \"\";\n    foreach(i, number; numbers_int)\n    {\n        numbers ~= std.string.format(\"\
    %s \", number);\n    }\n    return chomp(numbers);\n}\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyysdrk6x.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014457
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    /*\n        We do not know how many numberals are present.\
    \ \n        So we start with a static array initialized to the max numberal (9),\n\
    \        and resize it based on the number of words in the string.\n    */\n \
    \   auto numeral_arr = new int[9];\n    numeral_arr.length = 0;\n    auto counter\
    \ = 0;\n    /*\n        We will use a map of words to numberals.\n        This\
    \ allows us to validate the word and get its corresponding number.\n    */\n \
    \   auto numeral_map = new StringKeyValue[9];\n    numeral_map[0] = StringKeyValue(\"\
    zero\", 0);\n    numeral_map[1] = StringKeyValue(\"one\", 1);\n    numeral_map[2]\
    \ = StringKeyValue(\"two\", 2);\n    numeral_map[3] = StringKeyValue(\"three\"\
    , 3);\n    numeral_map[4] = StringKeyValue(\"four\", 4);\n    numeral_map[5] =\
    \ StringKeyValue(\"five\", 5);\n    numeral_map[6] = StringKeyValue(\"six\", 6);\n\
    \    numeral_map[7] = StringKeyValue(\"seven\", 7);\n    numeral_map[8] = StringKeyValue(\"\
    eight\", 8);\n    numeral_map[9] = StringKeyValue(\"nine\", 9);\n    /*\n    \
    \    check if the word is in the map.\n        If not, it will return -1.\n  \
    \  */\n    auto word_to_numeral = (word) {\n        auto numeral = -1;\n     \
    \   for (auto kv : numeral_map) {\n            if (kv.key == word) {\n       \
    \         numeral = kv.value;\n                break;\n            }\n       \
    \ }\n        return numeral;\n    };\n    /*\n        If a word is valid, add\
    \ it to the numeral array.\n    */\n    auto add_numeral = (word) {\n        auto\
    \ numeral = word_to_numeral(word);\n        if (numeral != -1) {\n           \
    \ numeral_arr[counter] = numeral;\n            counter++;\n        }\n    };\n\
    \    /*\n        Iterate through\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpozf5mrgr.d(42): Error: no identifier for declarator kv\n/tmp/tmpozf5mrgr.d(42):
    Error: expression expected, not \'':\''\n/tmp/tmpozf5mrgr.d(42): Error: found
    \''numeral_map\'' when expecting \'';\'' following for condition\n/tmp/tmpozf5mrgr.d(60):
    Error: unterminated /* */ comment\n/tmp/tmpozf5mrgr.d(72): Error: found \''EOF\''
    when expecting \''}\'' following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpozf5mrgr.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014457
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n\tstring[] numbers_list = split(numbers);\n\tint[] numbers_int\
    \ = numbers_list.map!(numeral => to!int(numeral));\n\t//std.algorithm.sorting.sort(numbers_int);\n\
    \tsort(numbers_int);\n\tnumbers_list = numbers_int.map!(numeral => to!string(numeral));\n\
    \treturn join(numbers_list, \" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcoehvk3w.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014457
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] numeral_array = numbers.split(\" \");\n    int[]\
    \ num_array = new int[numeral_array.length];\n    for (int i = 0; i < numeral_array.length;\
    \ i++)\n    {\n        switch (numeral_array[i])\n        {\n            case\
    \ \"zero\":\n                num_array[i] = 0;\n                break;\n     \
    \       case \"one\":\n                num_array[i] = 1;\n                break;\n\
    \            case \"two\":\n                num_array[i] = 2;\n              \
    \  break;\n            case \"three\":\n                num_array[i] = 3;\n  \
    \              break;\n            case \"four\":\n                num_array[i]\
    \ = 4;\n                break;\n            case \"five\":\n                num_array[i]\
    \ = 5;\n                break;\n            case \"six\":\n                num_array[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                num_array[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                num_array[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                num_array[i]\
    \ = 9;\n                break;\n        }\n    }\n    num_array.sort!((x, y) =>\
    \ x - y);\n    numeral_array = [\"zero\", \"one\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\", \"seven\", \"eight\", \"nine\"];\n    for (int i = 0; i <\
    \ num_array.length; i++)\n    {\n        numeral_array[i] = numeral_array[num_array[i]];\n\
    \    }\n    string result = \"\";\n    for (int i = 0; i < numeral_array.length;\
    \ i++)\n    {\n        result ~= numeral_array[i] ~ \" \";\n    }\n    return\
    \ result.trim();\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz1xv6klh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    int[] num_arr;\n    foreach(string num; std.algorithm.split(numbers))\n\
    \    {\n        switch(num)\n        {\n            case \"zero\": num_arr ~=\
    \ 0; break;\n            case \"one\": num_arr ~= 1; break;\n            case\
    \ \"two\": num_arr ~= 2; break;\n            case \"three\": num_arr ~= 3; break;\n\
    \            case \"four\": num_arr ~= 4; break;\n            case \"five\": num_arr\
    \ ~= 5; break;\n            case \"six\": num_arr ~= 6; break;\n            case\
    \ \"seven\": num_arr ~= 7; break;\n            case \"eight\": num_arr ~= 8; break;\n\
    \            case \"nine\": num_arr ~= 9; break;\n        }\n    }\n    num_arr.sort;\n\
    \    string[] to_ret;\n    foreach(auto num; num_arr)\n    {\n        switch(num)\n\
    \        {\n            case 0: to_ret ~= \"zero\"; break;\n            case 1:\
    \ to_ret ~= \"one\"; break;\n            case 2: to_ret ~= \"two\"; break;\n \
    \           case 3: to_ret ~= \"three\"; break;\n            case 4: to_ret ~=\
    \ \"four\"; break;\n            case 5: to_ret ~= \"five\"; break;\n         \
    \   case 6: to_ret ~= \"six\"; break;\n            case 7: to_ret ~= \"seven\"\
    ; break;\n            case 8: to_ret ~= \"eight\"; break;\n            case 9:\
    \ to_ret ~= \"nine\"; break;\n        }\n    }\n    return to_ret.join(\" \");\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpj_5n9e09.d(32): Error: basic type expected, not auto\n/tmp/tmpj_5n9e09.d(32):
    Error: no identifier for declarator int\n/tmp/tmpj_5n9e09.d(32): Error: found
    \''auto\'' when expecting \'';\''\n/tmp/tmpj_5n9e09.d(32): Error: found \'';\''
    when expecting \'')\''\n/tmp/tmpj_5n9e09.d(32): Error: found \'')\'' when expecting
    \'';\'' following statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj_5n9e09.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014457
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    auto input = split(numbers);\n    auto tmp = input;\n    sort(tmp.begin(),\
    \ tmp.end(), [](string a, string b) { return to!int(a) < to!int(b); } );\n   \
    \ return join(tmp, \" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpzfs1s7du.d(15): Error: found \''a\'' when expecting \'',\''\n/tmp/tmpzfs1s7du.d(15):
    Error: expression expected, not \'',\''\n/tmp/tmpzfs1s7du.d(15): Error: found
    \''string\'' when expecting \'',\''\n/tmp/tmpzfs1s7du.d(15): Error: found \''{\''
    when expecting \'',\''\n/tmp/tmpzfs1s7du.d(15): Error: expression expected, not
    \''return\''\n/tmp/tmpzfs1s7du.d(15): Error: found \''to\'' when expecting \'',\''\n/tmp/tmpzfs1s7du.d(15):
    Error: found \''(\'' when expecting \''.\'' following int\n/tmp/tmpzfs1s7du.d(15):
    Error: Declaration expected, not \'')\''\n/tmp/tmpzfs1s7du.d(16): Error: Declaration
    expected, not \''return\''\n/tmp/tmpzfs1s7du.d(17): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzfs1s7du.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    import std.string;\n    import std.array;\n    import std.conv;\n\
    \    import std.math;\n    import std.typecons;\n    auto nums = numbers.split(\"\
    \ \");\n    nums.sort!((a, b) => Numbers[a] < Numbers[b]);\n    return nums.join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8xy7ielm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    static string[] number_words = [\"zero\", \"one\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"];\n \
    \   // (dg): immutable makes this particular example more annoying to deal with,\n\
    \    // as it means you can't use map unless you also use a temporary mutable.\n\
    \    auto numeral_by_word = numbers.split.map!(to!(int)(get_index(number_words,\
    \ x)));\n    sort(numeral_by_word);\n    return numeral_by_word.map!(x => number_words[x]).join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmtvqol8f.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014457
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    int[] temp = to!int[](split(numbers));\n    sort(temp);\n\
    \    return join(temp);\n}\nunittest\n{\n    assert(sort_numbers(\"three one five\"\
    ) == \"one three five\");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmwlauok9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    auto result = split(numbers);\n    sort(result);\n    return\
    \ join(result);\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd565g75s.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014457
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string dict = [\"zero\", \"one\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\", \"seven\", \"eight\", \"nine\"];\n    string[] numbersarray\
    \ = numbers.split();\n    int[] numbersintarray = new int[numbersarray.length];\n\
    \    foreach(i, value; numbersarray) {\n        numbersintarray[i] = dict.indexOf(value);\n\
    \    }\n    sort(numbersintarray);\n    numbers = \"\";\n    foreach(index; numbersintarray)\
    \ {\n        numbers ~= dict[index] ~ \" \";\n    }\n    return numbers.stripRight();\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpowobzat9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    auto words = tokenize(numbers);\n    sort(words.begin(), words.end(),\
    \ (string a, string b) {\n        const string numbers[] = {\"zero\", \"one\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"\
    };\n        return std.algorithm.find(numbers, a) < std.algorithm.find(numbers,\
    \ b);\n    });\n    return join(words, \" \");\n}\n/*\n \n Input is a string of\
    \ numbers, return a string with all the input numbers sorted from smallest to\
    \ largest, but each number is surrounded by a random string from an array of strings.\n\
    \ \n    >>> random_sorted_numbers(\"3 2 1\")\n    \"muxca 1 vdzj 3 zvfay 2\"\n\
    \ \n*/\nstring random_sorted_numbers(string numbers) \n{\n    auto numbers_words\
    \ = tokenize(numbers);\n    sort(numbers_words.begin(), numbers_words.end(), (string\
    \ a, string b) {\n        return to!int(a) < to!int(b);\n    });\n    const string\
    \ random_words[] = {\"vdzj\", \"muxca\", \"zvfay\"};\n    return join(numbers_words.map!(n\
    \ => random_words[uniform(0, random_words.length)] ~ n), \" \");\n}\n// Implementation\
    \ of functional programming for D.\n//\n// Props to functional programming, it's\
    \ an interesting paradigm to work in.\n//\n// Features:\n//  * currying\n//  *\
    \ partial application\n//  * function composition\n//  * function flipping\n//\
    \  * operator overloading\n//  * lazy evaluation\n//  * custom data types\n//\
    \  * list comprehensions\n//  * scope rules\n//  * pattern matching\n//  * recursive\
    \ data types\n//  * polymorphic recursion\n//  * lazy sequences\n//  * map, filter,\
    \ reduce, zip\n//  * tail call optimization\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2tl9oixw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    int[] nums;\n    foreach(num; split(numbers, \" \"))\n   \
    \ {\n        switch(num)\n        {\n            case \"zero\": nums ~= 0; break;\n\
    \            case \"one\": nums ~= 1; break;\n            case \"two\": nums ~=\
    \ 2; break;\n            case \"three\": nums ~= 3; break;\n            case \"\
    four\": nums ~= 4; break;\n            case \"five\": nums ~= 5; break;\n    \
    \        case \"six\": nums ~= 6; break;\n            case \"seven\": nums ~=\
    \ 7; break;\n            case \"eight\": nums ~= 8; break;\n            case \"\
    nine\": nums ~= 9; break;\n        }\n    }\n    auto result = sort(nums);\n \
    \   string r;\n    foreach(num; result)\n    {\n        switch(num)\n        {\n\
    \            case 0: r ~= \"zero \"; break;\n            case 1: r ~= \"one \"\
    ; break;\n            case 2: r ~= \"two \"; break;\n            case 3: r ~=\
    \ \"three \"; break;\n            case 4: r ~= \"four \"; break;\n           \
    \ case 5: r ~= \"five \"; break;\n            case 6: r ~= \"six \"; break;\n\
    \            case 7: r ~= \"seven \"; break;\n            case 8: r ~= \"eight\
    \ \"; break;\n            case 9: r ~= \"nine \"; break;\n        }\n    }\n \
    \   return r;\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm2p0boxo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    import std.algorithm, std.string, std.range;\n    static immutable\
    \ int[string] convert = [\n        \"zero\": 0,\n        \"one\": 1,\n       \
    \ \"two\": 2,\n        \"three\": 3,\n        \"four\": 4,\n        \"five\":\
    \ 5,\n        \"six\": 6,\n        \"seven\": 7,\n        \"eight\": 8,\n    \
    \    \"nine\": 9\n    ];\n    return numbers.token.map!(a => convert[a])().sort.map!(a\
    \ => convert.retro[a]).joiner(\" \");\n}\n/*\n    >>> rotate_90([\"zero nine two\
    \ one\"])\n    [\"one two nine zero\"]\n    >>> rotate_90([\"zero one two three\"\
    ])\n    [\"three zero one two\"]\n    >>> rotate_90([\"zero one two three four\
    \ five six seven eight nine\"])\n    [\"nine three zero four one five two six\
    \ seven eight\"]\n*/\nstring[] rotate_90(string[] input) \n{\n    import std.algorithm,\
    \ std.string, std.range;\n    static immutable int[string] convert = [\n     \
    \   \"zero\": 0,\n        \"one\": 1,\n        \"two\": 2,\n        \"three\"\
    : 3,\n        \"four\": 4,\n        \"five\": 5,\n        \"six\": 6,\n      \
    \  \"seven\": 7,\n        \"eight\": 8,\n        \"nine\": 9\n    ];\n    return\
    \ input.map!(a => a.token.map!(b => convert[b])().transpose()().map!(a => a.retro[convert]).joiner(\"\
    \ \"));\n}\n/*\n    >>> is_anagram(\"anagram\",\"grammar\")\n    true\n    >>>\
    \ is_anagram(\"anagram\",\"grammare\")\n    false\n*/\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqoala95r.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    Tuple!(string, \"zero\"...\"nine\")[] numberMap;\n    string[]\
    \ numberList;\n    string result;\n    int i;\n    foreach(num; [\"zero\", \"\
    one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\",\
    \ \"nine\"])\n    {\n        numberMap ~= tuple(num, num);\n    }\n    //mapping\n\
    \    foreach(num; numbers.split())\n    {\n        foreach(entry; numberMap)\n\
    \        {\n            if(num == entry[0])\n            {\n                numberList\
    \ ~= entry[1];\n            }\n        }\n    }\n    //sorting\n    numberList.sort;\n\
    \    //mapping\n    foreach(num; numberList)\n    {\n        foreach(entry; numberMap)\n\
    \        {\n            if(num == entry[1])\n            {\n                result\
    \ ~= entry[0];\n                if(i < numberList.length - 1)\n              \
    \  {\n                    result ~= \" \";\n                }\n            }\n\
    \        }\n        i++;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_d9edcr2.d(13): Error: found \''...\'' when expecting \'')\''
    following template argument list\n/tmp/tmp_d9edcr2.d(13): Error: no identifier
    for declarator Tuple!(string, "zero")\n/tmp/tmp_d9edcr2.d(13): Error: found \'')\''
    when expecting \'';\'' following statement\n/tmp/tmp_d9edcr2.d(13): Error: found
    \''numberMap\'' when expecting \'';\'' following statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp_d9edcr2.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    return sort(split(numbers)).join;\n}\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3e4j1o_3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n\tstring[] array = numbers.split;\n\tint[] arrayOfInt = new int[array.length];\n\
    \tint[] sortedArray = new int[array.length];\n\t\n\tforeach(string element; array)\n\
    \t{\n\t\tswitch(element)\n\t\t{\n\t\t\tcase \"zero\":\n\t\t\t\tarrayOfInt ~= 0;\n\
    \t\t\t\tbreak;\n\t\t\tcase \"one\":\n\t\t\t\tarrayOfInt ~= 1;\n\t\t\t\tbreak;\n\
    \t\t\tcase \"two\":\n\t\t\t\tarrayOfInt ~= 2;\n\t\t\t\tbreak;\n\t\t\tcase \"three\"\
    :\n\t\t\t\tarrayOfInt ~= 3;\n\t\t\t\tbreak;\n\t\t\tcase \"four\":\n\t\t\t\tarrayOfInt\
    \ ~= 4;\n\t\t\t\tbreak;\n\t\t\tcase \"five\":\n\t\t\t\tarrayOfInt ~= 5;\n\t\t\t\
    \tbreak;\n\t\t\tcase \"six\":\n\t\t\t\tarrayOfInt ~= 6;\n\t\t\t\tbreak;\n\t\t\t\
    case \"seven\":\n\t\t\t\tarrayOfInt ~= 7;\n\t\t\t\tbreak;\n\t\t\tcase \"eight\"\
    :\n\t\t\t\tarrayOfInt ~= 8;\n\t\t\t\tbreak;\n\t\t\tcase \"nine\":\n\t\t\t\tarrayOfInt\
    \ ~= 9;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tarrayOfInt.sort;\n\t\n\tforeach(int\
    \ element; arrayOfInt)\n\t{\n\t\tswitch(element)\n\t\t{\n\t\t\tcase 0:\n\t\t\t\
    \tsortedArray ~= \"zero\";\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tsortedArray\
    \ ~= \"one\";\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tsortedArray ~= \"two\";\n\
    \t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tsortedArray ~= \"three\";\n\t\t\t\tbreak;\n\
    \t\t\tcase 4:\n\t\t\t\tsortedArray ~= \"four\";\n\t\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnbg7gbs1.d(75): Error: found \''unittest\'' instead of statement\n/tmp/tmpnbg7gbs1.d(85):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmpnbg7gbs1.d(85):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnbg7gbs1.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    // Hint: sort(numbers.split).join(\" \")\n    return (sort(numbers.split).join(\"\
    \ \"));\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv814jwt8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] array;\n    string to_sort = \"\";\n    string copy\
    \ = numbers;\n    numbers = toLower(numbers);\n    int count = 0;\n    while (numbers\
    \ != \"\") \n    {\n        string search = numbers[0..find(numbers, \" \")];\n\
    \        switch (search) \n        {\n            case \"zero\":\n           \
    \     to_sort ~= \"0\";\n                break;\n            case \"one\":\n \
    \               to_sort ~= \"1\";\n                break;\n            case \"\
    two\":\n                to_sort ~= \"2\";\n                break;\n          \
    \  case \"three\":\n                to_sort ~= \"3\";\n                break;\n\
    \            case \"four\":\n                to_sort ~= \"4\";\n             \
    \   break;\n            case \"five\":\n                to_sort ~= \"5\";\n  \
    \              break;\n            case \"six\":\n                to_sort ~= \"\
    6\";\n                break;\n            case \"seven\":\n                to_sort\
    \ ~= \"7\";\n                break;\n            case \"eight\":\n           \
    \     to_sort ~= \"8\";\n                break;\n            case \"nine\":\n\
    \                to_sort ~= \"9\";\n                break;\n        }\n      \
    \  to_sort ~= \" \";\n        numbers = strip(numbers[find(numbers, \" \")..$]);\n\
    \        count++;\n    }\n    to_sort = strip(to_sort);\n    array = to_sort.split(\"\
    \ \");\n    sort(array);\n    numbers = \"\";\n    for (uint i = 0; i < count;\
    \ i++) \n    {\n        switch (array[i]) \n        {\n            case \"0\"\
    :\n                numbers ~= \"zero\";\n                break;\n            case\
    \ \"1\":\n                numbers ~= \"one\";\n                break;\n      \
    \      case \"2\":\n                numbers ~= \"two\";\n                break;\n\
    \            case \"3\":\n                numbers ~= \"three\";\n            \
    \    break;\n            case \"4\":\n                numbers ~= \"four\";\n \
    \               break;\n            case \"5\":\n                numbers ~= \"\
    five\";\n                break;\n            case \"6\":\n                numbers\
    \ ~= \"six\";\n\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9hejubha.d(87): Error: found \''unittest\'' instead of statement\n/tmp/tmp9hejubha.d(97):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmp9hejubha.d(97):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9hejubha.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    //Gather up the input into a Tuple\n    auto _numbers = tuple(numbers.split(\"\
    \ \"));\n    //Map each word to its numeric value\n    auto wordToNum = [](string\
    \ word) {\n        return word == \"zero\" ? 0 : word == \"one\" ? 1 : word ==\
    \ \"two\" ? 2 : word == \"three\" ? 3 : word == \"four\" ? 4 : word == \"five\"\
    \ ? 5 : word == \"six\" ? 6 : word == \"seven\" ? 7 : word == \"eight\" ? 8 :\
    \ word == \"nine\" ? 9 : 0;\n    };\n    //Apply the mapping to the entire Tuple\n\
    \    _numbers = _numbers.map!wordToNum;\n    //Sort the Tuple numerically\n  \
    \  sort!((a, b) => a < b)(_numbers);\n    //Convert the Tuple back to a string\n\
    \    auto numToWord = [](int num) {\n        return num == 0 ? \"zero\" : num\
    \ == 1 ? \"one\" : num == 2 ? \"two\" : num == 3 ? \"three\" : num == 4 ? \"four\"\
    \ : num == 5 ? \"five\" : num == 6 ? \"six\" : num == 7 ? \"seven\" : num == 8\
    \ ? \"eight\" : num == 9 ? \"nine\" : \"\";\n    };\n    return _numbers.map!numToWord.join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmph3xyb828.d(16): Error: found \''word\'' when expecting \'',\''\n/tmp/tmph3xyb828.d(16):
    Error: semicolon expected following auto declaration, not \''{\''\n/tmp/tmph3xyb828.d(24):
    Error: found \''num\'' when expecting \''.\'' following int\n/tmp/tmph3xyb828.d(24):
    Error: found \'')\'' when expecting identifier following \''int.\''\n/tmp/tmph3xyb828.d(24):
    Error: found \''{\'' when expecting \'',\''\n/tmp/tmph3xyb828.d(25): Error: expression
    expected, not \''return\''\n/tmp/tmph3xyb828.d(25): Error: found \''num\'' when
    expecting \'',\''\n/tmp/tmph3xyb828.d(25): Error: expression expected, not \''==\''\n/tmp/tmph3xyb828.d(25):
    Error: found \''0\'' when expecting \'',\''\n/tmp/tmph3xyb828.d(25): Error: expression
    expected, not \''?\''\n/tmp/tmph3xyb828.d(25): Error: found \''"zero"\'' when
    expecting \'',\''\n/tmp/tmph3xyb828.d(25): Error: expression expected, not \'':\''\n/tmp/tmph3xyb828.d(25):
    Error: found \''num\'' when expecting \'',\''\n/tmp/tmph3xyb828.d(25): Error:
    expression expected, not \''==\''\n/tmp/tmph3xyb828.d(25): Error: found \''1\''
    when expecting \'',\''\n/tmp/tmph3xyb828.d(25): Error: expression expected, not
    \''?\''\n/tmp/tmph3xyb828.d(25): Error: found \''"one"\'' when expecting \'',\''\n/tmp/tmph3xyb828.d(25):
    Error: expression expected, not \'':\''\n/tmp/tmph3xyb828.d(25): Error: found
    \''num\'' when expecting \'',\''\n/tmp/tmph3xyb828.d(25): Error: expression expected,
    not \''==\''\n/tmp/tmph3xyb828.d(25): Error: found \''2\'' when expecting \'',\''\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph3xyb828.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    T[string] int lookup = [\n            \"zero\": 0, \"one\"\
    : 1, \"two\": 2, \"three\": 3, \"four\": 4,\n            \"five\": 5, \"six\"\
    : 6, \"seven\": 7, \"eight\": 8, \"nine\": 9\n    ];\n    string[int] digit_to_string\
    \ = lookup.byKey;\n    int[] nums = numbers.split.map!(a => lookup[a]).array.sort;\n\
    \    return nums.map!(a => digit_to_string[a]).join(\" \");\n}\nunittest\n{\n\
    \    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp58jpm56d.d(13): Error: found \''int\'' when expecting \'';\''
    following statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp58jpm56d.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n  int[string] numeral_map = [\n    \"zero\": 0,\n    \"one\":\
    \ 1,\n    \"two\": 2,\n    \"three\": 3,\n    \"four\": 4,\n    \"five\": 5,\n\
    \    \"six\": 6,\n    \"seven\": 7,\n    \"eight\": 8,\n    \"nine\": 9\n  ];\n\
    \  string[int] number_map = [\n    0: \"zero\",\n    1: \"one\",\n    2: \"two\"\
    ,\n    3: \"three\",\n    4: \"four\",\n    5: \"five\",\n    6: \"six\",\n  \
    \  7: \"seven\",\n    8: \"eight\",\n    9: \"nine\"\n  ];\n  int[] nums = [];\n\
    \  foreach(token; numbers.split)\n  {\n    nums ~= numeral_map[token];\n  }\n\
    \  nums.sort;\n  return nums.join(\" \");\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqo_n4zn3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    immutable string[] valid_choices = [\"zero\", \"one\", \"\
    two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"\
    ];\n    return sorted(numbers.split(), (a, b) => valid_choices.indexOf(a) < valid_choices.indexOf(b));\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9dctrzac.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    int[] nums;\n    foreach(elem; split(numbers))\n    {\n  \
    \      if(elem == \"zero\")\n            nums ~= 0;\n        else if(elem == \"\
    one\")\n            nums ~= 1;\n        else if(elem == \"two\")\n           \
    \ nums ~= 2;\n        else if(elem == \"three\")\n            nums ~= 3;\n   \
    \     else if(elem == \"four\")\n            nums ~= 4;\n        else if(elem\
    \ == \"five\")\n            nums ~= 5;\n        else if(elem == \"six\")\n   \
    \         nums ~= 6;\n        else if(elem == \"seven\")\n            nums ~=\
    \ 7;\n        else if(elem == \"eight\")\n            nums ~= 8;\n        else\
    \ if(elem == \"nine\")\n            nums ~= 9;\n    }\n    nums.sort;\n    string\
    \ str = \"\";\n    foreach(i; nums)\n    {\n        if(i == 0)\n            str\
    \ ~= \"zero \";\n        else if(i == 1)\n            str ~= \"one \";\n     \
    \   else if(i == 2)\n            str ~= \"two \";\n        else if(i == 3)\n \
    \           str ~= \"three \";\n        else if(i == 4)\n            str ~= \"\
    four \";\n        else if(i == 5)\n            str ~= \"five \";\n        else\
    \ if(i == 6)\n            str ~= \"six \";\n        else if(i == 7)\n        \
    \    str ~= \"seven \";\n        else if(i == 8)\n            str ~= \"eight \"\
    ;\n        else if(i == 9)\n            str ~= \"nine \";\n    }\n    return str;\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp97pl52rz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = split(numbers);\n    string[] strs = [\"zero\"\
    , \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\"\
    , \"nine\"];\n    int[] numss = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n    int[] numrs\
    \ = new int[nums.length];\n    string res = \"\";\n    foreach(string w; nums)\n\
    \    {\n        foreach(int i; 0 .. strs.length)\n        {\n            if(w\
    \ == strs[i])\n            {\n                numrs ~= numss[i];\n           \
    \ }\n        }\n    }\n    numrs.sort;\n    foreach(int n; numrs)\n    {\n   \
    \     res ~= to!string(n) ~ \" \";\n    }\n    return res;\n}\nunittest\n{\n \
    \   alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnp28oubv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    import std.typecons;\n    import std.algorithm;\n    import\
    \ std.range;\n    import std.array;\n    import std.conv;\n    import std.math;\n\
    \    import std.string;\n    auto map = [\n        \"zero\" : 0,\n        \"one\"\
    \ : 1,\n        \"two\" : 2,\n        \"three\" : 3,\n        \"four\" : 4,\n\
    \        \"five\" : 5,\n        \"six\" : 6,\n        \"seven\" : 7,\n       \
    \ \"eight\" : 8,\n        \"nine\" : 9\n    ];\n    auto stringList = numbers.split('\
    \ ');\n    //Array!int list = [];\n    int[] list = [];\n    foreach(i, e; stringList)\n\
    \    {\n        auto n = map[e];\n        //list ~= n;\n        list ~= n;\n \
    \   }\n    //list.sort;\n    list.sort;\n    //Array!string newList = [];\n  \
    \  string[] newList = [];\n    foreach(e; list)\n    {\n        string key = array.array(map.keys).find!(a\
    \ => map[a] == e);\n        //newList ~= key;\n        newList ~= key;\n    }\n\
    \    //return newList.join(\" \");\n    return newList.join(\" \");\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphvsxm1dg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    auto num = split(numbers);\n    sort(num);\n    return join(num);\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpclyi142_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    ubyte[string] dict = [\"zero\": 0, \"one\": 1, \"two\": 2,\
    \ \"three\": 3, \"four\": 4, \"five\": 5, \"six\": 6, \"seven\": 7, \"eight\"\
    : 8, \"nine\": 9];\n    string[] toSort = numbers.split;\n    ubyte[] nums;\n\
    \    foreach(string toNum; toSort) \n    {\n        nums ~= dict[toNum];\n   \
    \ }\n    sort(nums);\n    string[] sorted;\n    foreach(ubyte num; nums) \n  \
    \  {\n        auto tmp = keyOf(dict, num);\n        sorted ~= tmp;\n    }\n  \
    \  return join(sorted, \" \");\n}\n/*\n Input is a string of text with at least\
    \ one number.\n    Return the first number\n    >>> get_first_number(\"some text\
    \ with a number 3 and several numbers like 2\")\n    \"3\"\n    \n*/\nstring get_first_number(string\
    \ text) \n{\n    foreach(string token; text.split) \n    {\n        if(token.isNumeric)\
    \ \n        {\n            return token;\n        }\n    }\n    throw new Exception(\"\
    No numbers found in text\");\n}\n/*\n Input is a string of text with at least\
    \ one number.\n    Return the last number\n    >>> get_last_number(\"some text\
    \ with a number 3 and several numbers like 2\")\n    \"2\"\n    \n*/\nstring get_last_number(string\
    \ text) \n{\n    string ret;\n    foreach(string token; text.split) \n    {\n\
    \        if(token.isNumeric) \n        {\n            ret = token;\n        }\n\
    \    }\n    if(ret.length) \n    {\n        return ret;\n    }\n    throw new\
    \ Exception(\"No numbers found in text\");\n}\n/*\n Input is a string of text\
    \ with at least one uppercase letter.\n    Return the first uppercase letter\n\
    \    >>> get_first_uppercase_letter(\"some text with a Number 3 and several numbers\
    \ like 2\")\n    \"N\"\n    \n*/\nstring get_first_uppercase_\nunittest\n{\n \
    \   alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxy37iehr.d(78): Error: semicolon expected, not \''unittest\''\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxy37iehr.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    string[] str =\
    \ [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"\
    , \"eight\", \"nine\"];\n    int[] i = nums.map!(s =&gt; str.indexOf(s)).array;\n\
    \    return nums[minElement(i)] ~ \" \" ~ nums[1 + minElement(i[1..$])] ~ \" \"\
    \ ~ nums[1 + minElement(i[2..$])];\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpj_e5ikkt.d(15): Error: found \'';\'' when expecting \'')\''
    following template argument list\n/tmp/tmpj_e5ikkt.d(15): Error: semicolon expected,
    not \''str\''\n/tmp/tmpj_e5ikkt.d(15): Error: found \'')\'' when expecting \'';\''
    following statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj_e5ikkt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    static string[int] numberMap = [\"zero\", \"one\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"];\n \
    \   int[] numArray;\n    //create a tuple of strings and number\n    foreach(number;\
    \ numbers.split())\n    {\n        numArray ~= numberMap.indexOf(number);\n  \
    \  }\n    //sort tuple\n    auto sorting = sort(numArray);\n    //return the original\
    \ string\n    return sorting.map!(i => numberMap[i]).array.join(\" \");\n}\nunittest\n\
    {\n    assert(sort_numbers(\"three one five\") == \"one three five\");\n}\n/*\n\
    \    Input is a space-delimited string of lower-case letters\n    Return the string\
    \ with letters sorted from smallest to largest\n    >>> sort_alpha(\"d a b c\"\
    )\n    \"a b c d\"\n*/\nstring sort_alpha(string letters) \n{\n    string[] letterArray;\n\
    \    foreach(letter; letters.split())\n    {\n        letterArray ~= letter;\n\
    \    }\n    auto sorting = sort(letterArray);\n    return sorting.array.join(\"\
    \ \");\n}\nunittest\n{\n    assert(sort_alpha(\"d a b c\") == \"a b c d\");\n\
    }\n/*\n    Input is a space-delimited string of numbers and lower-case letters\n\
    \    Return the string with numbers and letters sorted from smallest to largest\n\
    \    >>> sort_all(\"a1c7 3b2\")\n    \"1 3 7 a b c\"\n*/\nstring sort_all(string\
    \ numLetters) \n{\n    string[] numLetterArray;\n    foreach(numLetter; numLetters.split())\n\
    \    {\n        numLetterArray ~= numLetter;\n    }\n    auto sorting = sort(numLetterArray);\n\
    \    return sorting.array.join(\" \");\n}\nunittest\n{\n    assert(sort_all(\"\
    a1c7 3b2\") == \"1 3 7 a b c\");\n}\n/*\n    Input is a string containing a word\n\
    \    Return the upper-case word with the order of the letters reversed.\n    >>>\
    \ reverse_\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpn5ajke9q.d(69): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpn5ajke9q.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    return numbers.split(\" \").map!(numeral => to!ulong(numeral)).sort.map!(num\
    \ => numeral(num)).joiner(\" \");\n}\n \n/*\n Input is a space-delimited string\
    \ of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one', 'two',\
    \ 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return a string\
    \ with the number of occurences of each numeral\n    >>> count_numberals(\"four\
    \ seven four zero\")\n    \"0:1 1:0 2:0 3:0 4:2 5:0 6:0 7:1 8:0 9:0\"\n*/\nstring\
    \ count_numberals(string numberals)\n{\n    return numberals.split(\" \").counts().map!(tuple\
    \ => format(\"%s:%s\", numeral(tuple[0]), numeral(tuple[1]))).joiner(\" \");\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7sn9zjdn.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    /*\n    // using \"int[string]\" array\n    int[string] arr;\n\
    \    arr[\"zero\"] = 0;\n    arr[\"one\"] = 1;\n    arr[\"two\"] = 2;\n    arr[\"\
    three\"] = 3;\n    arr[\"four\"] = 4;\n    arr[\"five\"] = 5;\n    arr[\"six\"\
    ] = 6;\n    arr[\"seven\"] = 7;\n    arr[\"eight\"] = 8;\n    arr[\"nine\"] =\
    \ 9;\n    */\n    \n    // using struct\n    struct S\n    {\n        string str;\n\
    \        int num;\n    }\n    S[] arr;\n    foreach(idx, str; [\"zero\", \"one\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"\
    ])\n    {\n        arr ~= S(str, idx);\n    }\n    \n    // map to ints and sort\n\
    \    int[] nums;\n    foreach(word; numbers.split)\n    {\n        nums ~= arr.front.num;\n\
    \        foreach(n; arr)\n        {\n            if(n.str == word)\n         \
    \   {\n                nums ~= n.num;\n                break;\n            }\n\
    \        }\n    }\n    sort(nums);\n    \n    // map back to string and join\n\
    \    return nums.map!(x => arr[x].str).join(\" \");\n}\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0pl8e7em.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    // build the dictionary of number-to-name mappings\n    alias\
    \ NumberSet = AliasSeq!(\n                                Tuple!(\"zero\", 0),\n\
    \                                Tuple!(\"one\", 1),\n                       \
    \         Tuple!(\"two\", 2),\n                                Tuple!(\"three\"\
    , 3),\n                                Tuple!(\"four\", 4),\n                \
    \                Tuple!(\"five\", 5),\n                                Tuple!(\"\
    six\", 6),\n                                Tuple!(\"seven\", 7),\n          \
    \                      Tuple!(\"eight\", 8),\n                               \
    \ Tuple!(\"nine\", 9)\n                                );\n    // put the inputs\
    \ into a word array\n    auto words = numbers.split;\n    // map the words to\
    \ numbers\n    auto nums = map!(map!(a => tuple(a[0], a[1]), AliasSeq), words);\n\
    \    // sort the numbers\n    sort!((x, y) => x[1] < y[1])(nums);\n    // map\
    \ back to the word values\n    auto words = map!(map!(a => tuple(a[0], a[1]),\
    \ NumberSet))(nums);\n    // rejoin the words\n    return join(words, \" \");\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0_pl2nzg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n\t/*\n\t\tWe are doing string.join to return a string\n\t\tfrom\
    \ an array of strings. We need to transform\n\t\ta string into a string array.\
    \ Splitting is a\n\t\tway to do that.\n\t*/\n\tstring[] splitted_string = numbers.split;\n\
    \t// Transform from strings to numbers\n\tint[] sorted_numbers = splitted_string.map!(to!int).array;\n\
    \t// Sort numbers\n\tsort(sorted_numbers);\n\t// Transform back to strings\n\t\
    string[] string_sorted_numbers = sorted_numbers.map!(to!string).array;\n\t// Turn\
    \ the array into a string\n\treturn string.join(string_sorted_numbers);\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvmhdqbdl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n  // I'll use this as a model to remember how to do it using std.typecons.\n\
    \  // This is reasonably efficient\n  // I make a tuple to hold the numberals\
    \ and their numeric values.\n  alias pair = Tuple!(immutable(string), uint);\n\
    \  pair[] numberals = [pair(\"zero\", 0), pair(\"one\", 1), pair(\"two\", 2),\n\
    \                      pair(\"three\", 3), pair(\"four\", 4), pair(\"five\", 5),\n\
    \                      pair(\"six\", 6), pair(\"seven\", 7), pair(\"eight\", 8),\n\
    \                      pair(\"nine\", 9)];\n  // Make an array of the input numbers,\
    \ then convert to an array of ints.\n  string[] unsorted = numbers.split();\n\
    \  int[] nums = unsorted.map!(s => numberals.find!(p => p[0] == s)[1]);\n  //\
    \ Sort the array of ints, then convert back to numberals.\n  int[] sorted = nums.dup.sort;\n\
    \  string[] ans = sorted.map!(i => numberals.find!(p => p[1] == i)[0]);\n  return\
    \ ans.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n  \
    \  assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5rjb_zki.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] num = numbers.split(\" \");\n    foreach(item;num)\n\
    \    {\n        if(item == \"zero\")\n            item = \"0\";\n        else\
    \ if(item == \"one\")\n            item = \"1\";\n        else if(item == \"two\"\
    )\n            item = \"2\";\n        else if(item == \"three\")\n           \
    \ item = \"3\";\n        else if(item == \"four\")\n            item = \"4\";\n\
    \        else if(item == \"five\")\n            item = \"5\";\n        else if(item\
    \ == \"six\")\n            item = \"6\";\n        else if(item == \"seven\")\n\
    \            item = \"7\";\n        else if(item == \"eight\")\n            item\
    \ = \"8\";\n        else if(item == \"nine\")\n            item = \"9\";\n   \
    \ }\n    num.sort!q{to!int(a) < to!int(b)};\n    string result = \"\";\n    foreach(item;num)\n\
    \    {\n        if(item == \"0\")\n            item = \"zero\";\n        else\
    \ if(item == \"1\")\n            item = \"one\";\n        else if(item == \"2\"\
    )\n            item = \"two\";\n        else if(item == \"3\")\n            item\
    \ = \"three\";\n        else if(item == \"4\")\n            item = \"four\";\n\
    \        else if(item == \"5\")\n            item = \"five\";\n        else if(item\
    \ == \"6\")\n            item = \"six\";\n        else if(item == \"7\")\n   \
    \         item = \"seven\";\n        else if(item == \"8\")\n            item\
    \ = \"eight\";\n        else if(item == \"9\")\n            item = \"nine\";\n\
    \        result ~= item ~ \" \";\n    }\n    return result;\n}\n/*\n    The number\
    \ 89 is the first integer with more than one digit that fulfills the property\
    \ partially introduced in the title of this kata. What's the use of saying \"\
    Eureka\"? Because this sum gives the same number.\n    In effect: 89 = 8^1 + 9^2\n\
    \    The next number in having this property is 135.\n    See this property again:\
    \ 135\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfxii4eqa.d(65): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpfxii4eqa.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    int [] nums;\n    immutable strings = [ \"zero\", \"one\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"\
    \ ];\n    immutable nummap = [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ];\n    immutable\
    \ string [] numstrs = split(numbers);\n    nums.length = numstrs.length;\n   \
    \ foreach(int i, immutable string nstr; numstrs)\n    {\n        nums[i] = nummap[strings.indexOf(nstr)];\n\
    \    }\n    sort(nums);\n    foreach(int i, int n; nums)\n    {\n        numstrs[i]\
    \ = strings[nummap.indexOf(n)];\n    }\n    return join(numstrs, \" \");\n}\n\
    unittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0fe6ij4c.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    // Create array of strings\n    int [] buffer;\n    if(numbers.length\
    \ == 0)\n        return \"\";\n    if(numbers.find(\" \") == -1)\n        return\
    \ numbers;\n    else {\n        buffer = numbers.split(\" \");\n    }\n    int\
    \ [] number_buffer;\n    string [] word_buffer;\n    // Now we need to group the\
    \ numbers and words\n    foreach(i, it; buffer) {\n        if(isDigit(it[0]))\
    \ {\n            number_buffer ~= it.to!int;\n        } else {\n            word_buffer\
    \ ~= it;\n        }\n    }\n    // We sort the number buffer.\n    sort(number_buffer);\n\
    \    // And we create the final buffer.\n    string final_buffer;\n    foreach(i,\
    \ it; number_buffer) {\n        final_buffer ~= it.to!string;\n        final_buffer\
    \ ~= \" \";\n    }\n    // And we add the words at the end.\n    foreach(i, it;\
    \ word_buffer) {\n        final_buffer ~= it;\n        final_buffer ~= \" \";\n\
    \    }\n    // Return the final buffer.\n    return final_buffer;\n}\n//! Tests\n\
    unittest {\n    import std.stdio;\n    writeln(sort_numbers(\"nine one five\"\
    ));\n    writeln(sort_numbers(\"\"));\n    writeln(sort_numbers(\"one\"));\n \
    \   writeln(sort_numbers(\"one two\"));\n    writeln(sort_numbers(\"two one\"\
    ));\n    writeln(sort_numbers(\"one nine five\"));\n    writeln(sort_numbers(\"\
    one nine five three\"));\n    writeln(sort_numbers(\"one nine five three seven\"\
    ));\n    writeln(sort_numbers(\"one nine five three seven eight two\"));\n   \
    \ writeln(sort_numbers(\"one nine five three seven eight two six four\"));\n \
    \   writeln(sort_numbers(\"two four\"));\n    writeln(sort_numbers(\"five one\"\
    ));\n    writeln(sort_numbers(\"two\"));\n    writeln\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxa1q1l7i.d(65): Error: found \''unittest\'' when expecting \'';\''
    following statement\n/tmp/tmpxa1q1l7i.d(75): Error: found \''EOF\'' when expecting
    \''}\'' following compound statement\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpxa1q1l7i.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] num_to_str = [\"zero\", \"one\", \"two\", \"three\"\
    , \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"];\n    string[]\
    \ str_to_num = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"];\n\
    \    foreach(n; 0 .. num_to_str.length)\n    {\n        str_to_num[n] = num_to_str[n];\n\
    \    }\n    string[] result;\n    foreach(num; numbers.split(\" \"))\n    {\n\
    \        foreach(i; 0 .. str_to_num.length)\n        {\n            if(num ==\
    \ str_to_num[i])\n            {\n                result ~= to!string(i);\n   \
    \         }\n        }\n    }\n    quickSort(result);\n    foreach(j; 0 .. result.length)\n\
    \    {\n        result[j] = num_to_str[to!int(result[j])];\n    }\n    return\
    \ result.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpawg84sdy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    int[] result;\n    /*\n    Tokenize the string on spaces and\
    \ iterate over the array.\n    */\n    foreach(token; numbers.split(\" \"))\n\
    \    {\n        switch(token)\n        {\n            case \"zero\":\n       \
    \         result ~= 0;\n                break;\n            case \"one\":\n  \
    \              result ~= 1;\n                break;\n            case \"two\"\
    :\n                result ~= 2;\n                break;\n            case \"three\"\
    :\n                result ~= 3;\n                break;\n            case \"four\"\
    :\n                result ~= 4;\n                break;\n            case \"five\"\
    :\n                result ~= 5;\n                break;\n            case \"six\"\
    :\n                result ~= 6;\n                break;\n            case \"seven\"\
    :\n                result ~= 7;\n                break;\n            case \"eight\"\
    :\n                result ~= 8;\n                break;\n            case \"nine\"\
    :\n                result ~= 9;\n                break;\n        }\n    }\n  \
    \  /*\n    Sort the array, use Tuple to map the sorted array back to a string.\n\
    \    */\n    result.sort();\n    return result.map!(a => tuple(a, a)).array.map!(a\
    \ => a[1]).joiner(\" \");\n}\n/*\n    Given a string of words, return a dictionary\
    \ of the words\n    and their counts in the string.\n    >>> word_counts(\"one\
    \ fish two fish red fish blue fish\")\n    { \"blue\": 1, \"red\": 1, \"two\"\
    : 1, \"fish\": 4, \"one\": 1 }\n*/\nimport std.stdio;\nimport std.string;\nimport\
    \ std.typecons;\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu4qaqw3u.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n  string[] splittedNumbers = split(numbers);\n  int[] intNumbers\
    \ = new int[];\n  foreach(i,n; splittedNumbers)\n  {\n    intNumbers ~= to!int(n);\n\
    \  }\n  sort(intNumbers);\n  string sortedString;\n  foreach(i,n; intNumbers)\n\
    \  {\n    sortedString ~= to!string(n);\n    sortedString ~= \" \";\n  }\n  return\
    \ sortedString;\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd3vi421o.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] words = numbers.split;\n    string[] numeral = [\"\
    zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"\
    eight\", \"nine\"];\n    int[] value = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n    int[string]\
    \ words_to_val;\n    foreach(i, e; words)\n    {\n        words_to_val[e] = value[numeral.indexOf(e)];\n\
    \    }\n    return tuple(words_to_val).sort.map!(a => to!string(a[1])).reduce!((a,\
    \ b) => a ~ \" \" ~ b)();\n}\n//does nothing. just for fun!\n@safe pure nothrow\
    \ unittest\n{\n    int[] numbers = [];\n    static assert([]() => numbers.sort.map!(a\
    \ => to!string(a)).reduce!((a, b) => a ~ \" \" ~ b)() == \"\");\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0ygcq84b.d(27): Error: found \''=>\'' when expecting \'')\''\n/tmp/tmp0ygcq84b.d(27):
    Error: found \''numbers\'' when expecting \'';\''\n/tmp/tmp0ygcq84b.d(27): Error:
    found \'')\'' when expecting \'';\'' following statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp0ygcq84b.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    auto numbers_ = tokenize(numbers);\n    map!(numbers_, (string\
    \ input) =>\n    {\n        if (input == \"zero\") return 0;\n        if (input\
    \ == \"one\") return 1;\n        if (input == \"two\") return 2;\n        if (input\
    \ == \"three\") return 3;\n        if (input == \"four\") return 4;\n        if\
    \ (input == \"five\") return 5;\n        if (input == \"six\") return 6;\n   \
    \     if (input == \"seven\") return 7;\n        if (input == \"eight\") return\
    \ 8;\n        if (input == \"nine\") return 9;\n    });\n    std.algorithm.sort(numbers_);\n\
    \    map!(numbers_, (int input) =>\n    {\n        if (input == 0) return \"zero\"\
    ;\n        if (input == 1) return \"one\";\n        if (input == 2) return \"\
    two\";\n        if (input == 3) return \"three\";\n        if (input == 4) return\
    \ \"four\";\n        if (input == 5) return \"five\";\n        if (input == 6)\
    \ return \"six\";\n        if (input == 7) return \"seven\";\n        if (input\
    \ == 8) return \"eight\";\n        if (input == 9) return \"nine\";\n    });\n\
    \    return join(numbers_, \" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2su35vfq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    import std.range;\n    int[] nums;\n    string[] words = numbers.split;\n\
    \    foreach(string word; words)\n    {\n        if(word == \"zero\")\n      \
    \      nums ~= 0;\n        else if(word == \"one\")\n            nums ~= 1;\n\
    \        else if(word == \"two\")\n            nums ~= 2;\n        else if(word\
    \ == \"three\")\n            nums ~= 3;\n        else if(word == \"four\")\n \
    \           nums ~= 4;\n        else if(word == \"five\")\n            nums ~=\
    \ 5;\n        else if(word == \"six\")\n            nums ~= 6;\n        else if(word\
    \ == \"seven\")\n            nums ~= 7;\n        else if(word == \"eight\")\n\
    \            nums ~= 8;\n        else if(word == \"nine\")\n            nums ~=\
    \ 9;\n    }\n    nums.sort();\n    string[] numStrs;\n    foreach(num; nums)\n\
    \    {\n        if(num == 0)\n            numStrs ~= \"zero\";\n        else if(num\
    \ == 1)\n            numStrs ~= \"one\";\n        else if(num == 2)\n        \
    \    numStrs ~= \"two\";\n        else if(num == 3)\n            numStrs ~= \"\
    three\";\n        else if(num == 4)\n            numStrs ~= \"four\";\n      \
    \  else if(num == 5)\n            numStrs ~= \"five\";\n        else if(num ==\
    \ 6)\n            numStrs ~= \"six\";\n        else if(num == 7)\n           \
    \ numStrs ~= \"seven\";\n        else if(num == 8)\n            numStrs ~= \"\
    eight\";\n        else if(num == 9)\n            numStrs ~= \"nine\";\n    }\n\
    \    return numStrs.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi7ixm5wb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    return numbers.split().sort!((string a, string b) { return\
    \ convert(a) < convert(b); }).join(\" \");\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpolazi8y_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] word_numbers = split(numbers);\n    enum digit_count\
    \ = word_numbers.length;\n    string[] digits = to!string[digit_count];\n    int[]\
    \ numbers_int = new int[digit_count];\n    for (int i = 0; i < word_numbers.length;\
    \ i++)\n    {\n        if (word_numbers[i] == \"zero\")\n        {\n         \
    \   digits[i] = \"zero\";\n            numbers_int[i] = 0;\n        }\n      \
    \  else if (word_numbers[i] == \"one\")\n        {\n            digits[i] = \"\
    one\";\n            numbers_int[i] = 1;\n        }\n        else if (word_numbers[i]\
    \ == \"two\")\n        {\n            digits[i] = \"two\";\n            numbers_int[i]\
    \ = 2;\n        }\n        else if (word_numbers[i] == \"three\")\n        {\n\
    \            digits[i] = \"three\";\n            numbers_int[i] = 3;\n       \
    \ }\n        else if (word_numbers[i] == \"four\")\n        {\n            digits[i]\
    \ = \"four\";\n            numbers_int[i] = 4;\n        }\n        else if (word_numbers[i]\
    \ == \"five\")\n        {\n            digits[i] = \"five\";\n            numbers_int[i]\
    \ = 5;\n        }\n        else if (word_numbers[i] == \"six\")\n        {\n \
    \           digits[i] = \"six\";\n            numbers_int[i] = 6;\n        }\n\
    \        else if (word_numbers[i] == \"seven\")\n        {\n            digits[i]\
    \ = \"seven\";\n            numbers_int[i] = 7;\n        }\n        else if (word_numbers[i]\
    \ == \"eight\")\n        {\n            digits[i] = \"eight\";\n            numbers_int[i]\
    \ = 8;\n        }\n        else if (word_numbers[i] == \"nine\")\n        {\n\
    \            digits[i] = \"nine\";\n            numbers_int[i] = 9;\n        }\n\
    \nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsg6hwitm.d(70): Error: found \''unittest\'' instead of statement\n/tmp/tmpsg6hwitm.d(80):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsg6hwitm.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    // converts string to an array of sortable elements\n    auto\
    \ nums = sort!(a => a.value)(numbers.split(\" \").map!(a => (a == \"zero\") ?\
    \ \"0\" : a[0..$-2]).map!(a => Number(a)));\n    return nums.map!(a => (a == 0)\
    \ ? \"zero\" : a.str).join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoh6ksl0v.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    int[] nums;\n    foreach(words; split(numbers, \" \")) \n\
    \    {\n        nums ~= to!int(words);\n    }\n    nums.sort();\n    string ret;\n\
    \    foreach(num; nums) \n    {\n        ret ~= format(\"%s \", num);\n    }\n\
    \    return ret[0..$-1];\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps4_yc9dl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    import std.algorithm.sorting;\n    string[] keys = [\"zero\"\
    , \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\"\
    , \"nine\"];\n    string[] nums = numbers.split(\" \");\n    string temp;\n  \
    \  foreach(i, j; numbers)\n    {\n        if(j > i)\n        {\n            temp\
    \ = nums[i];\n            nums[i] = nums[j];\n            nums[j] = temp;\n  \
    \      }\n    }\n    return nums.join(\" \");\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqdcmk0ms.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    int[] number_list;\n    string[] temp = split(numbers, \"\
    \ \");\n    int length = temp.length;\n    foreach(i; 0..length)\n    {\n    \
    \    switch(temp[i])\n        {\n            case \"zero\":\n                number_list\
    \ ~= 0;\n                break;\n            case \"one\":\n                number_list\
    \ ~= 1;\n                break;\n            case \"two\":\n                number_list\
    \ ~= 2;\n                break;\n            case \"three\":\n               \
    \ number_list ~= 3;\n                break;\n            case \"four\":\n    \
    \            number_list ~= 4;\n                break;\n            case \"five\"\
    :\n                number_list ~= 5;\n                break;\n            case\
    \ \"six\":\n                number_list ~= 6;\n                break;\n      \
    \      case \"seven\":\n                number_list ~= 7;\n                break;\n\
    \            case \"eight\":\n                number_list ~= 8;\n            \
    \    break;\n            case \"nine\":\n                number_list ~= 9;\n \
    \               break;\n        }\n    }\n    sort(number_list);\n    string result\
    \ = \"\";\n    foreach(i; 0..length)\n    {\n        switch(number_list[i])\n\
    \        {\n            case 0:\n                result ~= \"zero \";\n      \
    \          break;\n            case 1:\n                result ~= \"one \";\n\
    \                break;\n            case 2:\n                result ~= \"two\
    \ \";\n                break;\n            case 3:\n                result ~=\
    \ \"three \";\n                break;\n            case 4:\n                result\
    \ ~= \"four \";\n                break;\n            case 5:\n               \
    \ result ~= \"five \";\n                break;\n            case 6:\n        \
    \        result ~= \"six \";\n                break;\n            case 7:\n  \
    \              result ~= \"seven \";\n                break;\n            case\
    \ 8:\n                result ~= \"eight \";\n                break;\n        \
    \    case 9:\n                result ~= \"nine \";\n                break;\n \
    \       }\n    }\n    return result.idup;\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5xnky7qy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string words = numbers.join(\" \");\n    string[] numbersArray\
    \ = words.split(\" \");\n    int[] intArray = new int[numbersArray.length];\n\
    \    string[] result = new string[numbersArray.length];\n    for (int i = 0; i\
    \ < numbersArray.length; i++) {\n        if (numbersArray[i] == \"zero\") {\n\
    \            intArray[i] = 0;\n        } else if (numbersArray[i] == \"one\")\
    \ {\n            intArray[i] = 1;\n        } else if (numbersArray[i] == \"two\"\
    ) {\n            intArray[i] = 2;\n        } else if (numbersArray[i] == \"three\"\
    ) {\n            intArray[i] = 3;\n        } else if (numbersArray[i] == \"four\"\
    ) {\n            intArray[i] = 4;\n        } else if (numbersArray[i] == \"five\"\
    ) {\n            intArray[i] = 5;\n        } else if (numbersArray[i] == \"six\"\
    ) {\n            intArray[i] = 6;\n        } else if (numbersArray[i] == \"seven\"\
    ) {\n            intArray[i] = 7;\n        } else if (numbersArray[i] == \"eight\"\
    ) {\n            intArray[i] = 8;\n        } else if (numbersArray[i] == \"nine\"\
    ) {\n            intArray[i] = 9;\n        }\n    }\n    intArray.sort();\n  \
    \  for (int i = 0; i < intArray.length; i++) {\n        if (intArray[i] == 0)\
    \ {\n            result[i] = \"zero\";\n        } else if (intArray[i] == 1) {\n\
    \            result[i] = \"one\";\n        } else if (intArray[i] == 2) {\n  \
    \          result[i] = \"two\";\n        } else if (intArray[i] == 3) {\n    \
    \        result[i] = \"three\";\n        } else if (intArray[i] == 4) {\n    \
    \        result[i] = \"four\";\n        } else if (intArray[i] == 5\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpu60sz015.d(53): Error: found \''unittest\'' when expecting \'')\''\n/tmp/tmpu60sz015.d(63):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmpu60sz015.d(63):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu60sz015.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] tokens = numbers.split();\n    string[] unique =\
    \ unique(tokens);\n    sort(unique);\n    return unique.join(\" \");\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmvq9gaq7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    enum Numeral\n    {\n        Numeral(string str, int num)\n\
    \        {\n            this.str = str;\n            this.num = num;\n       \
    \ }\n        string str;\n        int num;\n    }\n    static Numeral[] Numerals\
    \ =\n    {\n        Numeral(\"zero\", 0),\n        Numeral(\"one\", 1),\n    \
    \    Numeral(\"two\", 2),\n        Numeral(\"three\", 3),\n        Numeral(\"\
    four\", 4),\n        Numeral(\"five\", 5),\n        Numeral(\"six\", 6),\n   \
    \     Numeral(\"seven\", 7),\n        Numeral(\"eight\", 8),\n        Numeral(\"\
    nine\", 9),\n    };\n    int[] numbers_ints;\n    foreach(Numeral n; Numerals)\n\
    \    {\n        if(numbers.count(n.str))\n        {\n            numbers_ints\
    \ ~= n.num;\n        }\n    }\n    sort(numbers_ints);\n    string ret = \"\"\
    ;\n    foreach(num; numbers_ints)\n    {\n        ret ~= Numerals[num].str ~ \"\
    \ \";\n    }\n    return ret.trimRight();\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjlen79ob.d(15): Error: function declaration without return type.
    (Note that constructors are always named \''this\'')\n/tmp/tmpjlen79ob.d(16):
    Error: type only allowed if anonymous enum and no enum type\n/tmp/tmpjlen79ob.d(16):
    Error: if type, there must be an initializer\n/tmp/tmpjlen79ob.d(16): Error: found
    \''{\'' when expecting \'',\''\n/tmp/tmpjlen79ob.d(17): Error: type only allowed
    if anonymous enum and no enum type\n/tmp/tmpjlen79ob.d(17): Error: found \'';\''
    when expecting \'',\''\n/tmp/tmpjlen79ob.d(18): Error: type only allowed if anonymous
    enum and no enum type\n/tmp/tmpjlen79ob.d(18): Error: found \'';\'' when expecting
    \'',\''\n/tmp/tmpjlen79ob.d(37): Error: Declaration expected, not \''foreach\''\n/tmp/tmpjlen79ob.d(37):
    Error: no identifier for declarator Numerals\n/tmp/tmpjlen79ob.d(37): Error: Declaration
    expected, not \'')\''\n/tmp/tmpjlen79ob.d(42): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjlen79ob.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    numbers = numbers.strip();\n    // Import the alpha-based\
    \ numberal to integer conversion:\n    import std.conv : to;\n    // Custom sort\
    \ the array of tuples of (index, numberal-numeral):\n    enum numberals = [\"\
    zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"\
    eight\", \"nine\"];\n    // Split the numbers string into its components:\n  \
    \  string[] nums = numbers.split(\" \");\n    // Contruct a dynamic array of tuples\
    \ of (index, numberal-numeral):\n    Tuple!(size_t, size_t)[] numTuple = new Tuple!(size_t,\
    \ size_t)[nums.length];\n    foreach(immutable i, immutable num; nums) {\n   \
    \     numTuple[i] = tuple(i, numberals.indexOf(num));\n    }\n    // Sort the\
    \ array of tuples of (index, numberal-numeral):\n    sort!((a, b) => a[1] < b[1])(numTuple);\n\
    \    // Return the original input string, with the numberals in sorted order:\n\
    \    string ret = \"\";\n    foreach(tuple; numTuple) {\n        ret ~= nums[tuple[0]]\
    \ ~ \" \";\n    }\n    return ret.strip();\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps7ob3pee.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    /*\n        // Sort the string based on the numeric value\
    \ of the word\n        //  from lowest to highest\n        string sort_key[] =\
    \ [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"\
    , \"eight\", \"nine\"];\n        string output = \"\";\n        auto words = numbers.split;\n\
    \        std.algorithm.sort!(a => sort_key[std.conv.to!size_t(a)])(words);\n \
    \       // Create the output from the sorted words\n        output = words.join;\n\
    \        return output;\n    */\n    string sort_key[] = [\"zero\", \"one\", \"\
    two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"\
    ];\n    string output = \"\";\n    //\n    string[] words = numbers.split;\n \
    \   //\n    struct Sortable\n    {\n        string word;\n        size_t rank;\n\
    \    }\n    auto sortables = words.map!(a => Sortable(a, sort_key.indexOf(a))).array;\n\
    \    // Sort the sortables\n    std.algorithm.sort!((a, b) => (a.rank < b.rank))(sortables);\n\
    \    // Put the words back together in order\n    output = sortables.map!(a =>\
    \ a.word).join;\n    return output;\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkjt4ukls.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] words = numbers.split(\" \");\n    string[] nums\
    \ = new string[words.length];\n    foreach(int i, string word; words) {\n    \
    \    switch(word) {\n            case \"zero\": nums[i] = \"0\"; break;\n    \
    \        case \"one\": nums[i] = \"1\"; break;\n            case \"two\": nums[i]\
    \ = \"2\"; break;\n            case \"three\": nums[i] = \"3\"; break;\n     \
    \       case \"four\": nums[i] = \"4\"; break;\n            case \"five\": nums[i]\
    \ = \"5\"; break;\n            case \"six\": nums[i] = \"6\"; break;\n       \
    \     case \"seven\": nums[i] = \"7\"; break;\n            case \"eight\": nums[i]\
    \ = \"8\"; break;\n            case \"nine\": nums[i] = \"9\"; break;\n      \
    \  }\n    }\n    sort(nums);\n    foreach(int i, string num; nums) {\n       \
    \ switch(num) {\n            case \"0\": words[i] = \"zero\"; break;\n       \
    \     case \"1\": words[i] = \"one\"; break;\n            case \"2\": words[i]\
    \ = \"two\"; break;\n            case \"3\": words[i] = \"three\"; break;\n  \
    \          case \"4\": words[i] = \"four\"; break;\n            case \"5\": words[i]\
    \ = \"five\"; break;\n            case \"6\": words[i] = \"six\"; break;\n   \
    \         case \"7\": words[i] = \"seven\"; break;\n            case \"8\": words[i]\
    \ = \"eight\"; break;\n            case \"9\": words[i] = \"nine\"; break;\n \
    \       }\n    }\n    return join(words, \" \");\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw5608my1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    auto tokens = sort(split(numbers,\" \"));\n    return join(tokens,\
    \ \" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsqymw08x.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    const dictionary = [\"zero\", \"one\", \"two\", \"three\"\
    , \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"];\n    auto[map,\
    \ error] = std.range.map!((i, s) => tuple(i, s))(dictionary).array();\n    if\
    \ (error)\n        return \"\";\n    return numbers.split(\" \").filter!(a =>\
    \ map.byKey.count(a) != 0).map!(a => map[a]).sort.map!(a => map.byKey[a]).join(\"\
    \ \");\n}\n//void main()\n//{\n//    assert(sort_numbers(\"three one five\") ==\
    \ \"one three five\");\n//}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmps8lsl57x.d(14): Error: basic type expected, not [\n/tmp/tmps8lsl57x.d(14):
    Error: found \'',\'' when expecting \'']\''\n/tmp/tmps8lsl57x.d(14): Error: semicolon
    expected, not \'']\''\n/tmp/tmps8lsl57x.d(14): Error: found \'']\'' instead of
    statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps8lsl57x.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    immutable(int)[] numbers_int = to!(immutable(int))(numbers.split(\"\
    \ \"));\n    std.algorithm.sort(numbers_int);\n    string result = \"\";\n   \
    \ foreach(i; numbers_int)\n    {\n        result ~= to!string(i) ~ \" \";\n  \
    \  }\n    return result.trim();\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbm3k58su.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] number_names = split(numbers);\n    int[] numbers_int\
    \ = new int[number_names.length];\n    foreach(index, string number_name; number_names)\n\
    \    {\n        switch(number_name)\n        {\n            case \"zero\":\n \
    \               numbers_int[index] = 0;\n                break;\n            case\
    \ \"one\":\n                numbers_int[index] = 1;\n                break;\n\
    \            case \"two\":\n                numbers_int[index] = 2;\n        \
    \        break;\n            case \"three\":\n                numbers_int[index]\
    \ = 3;\n                break;\n            case \"four\":\n                numbers_int[index]\
    \ = 4;\n                break;\n            case \"five\":\n                numbers_int[index]\
    \ = 5;\n                break;\n            case \"six\":\n                numbers_int[index]\
    \ = 6;\n                break;\n            case \"seven\":\n                numbers_int[index]\
    \ = 7;\n                break;\n            case \"eight\":\n                numbers_int[index]\
    \ = 8;\n                break;\n            case \"nine\":\n                numbers_int[index]\
    \ = 9;\n                break;\n        }\n    }\n    sort(numbers_int);\n   \
    \ foreach(index, int number_int; numbers_int)\n    {\n        switch(number_int)\n\
    \        {\n            case 0:\n                number_names[index] = \"zero\"\
    ;\n                break;\n            case 1:\n                number_names[index]\
    \ = \"one\";\n                break;\n            case 2:\n                number_names[index]\
    \ = \"two\";\n                break;\n            case 3:\n                number_names[index]\
    \ = \"three\";\n                break;\n            case 4:\n                number_names[index]\
    \ = \"four\";\n                break;\n            case 5:\n                number_names[index]\
    \ = \"five\";\n                break;\n            case 6:\n                number_names[index]\
    \ = \"six\";\n                break;\n            case 7:\n                number_names[index]\
    \ = \"seven\";\n                break;\n            case 8:\n                number_names[index]\
    \ = \"eight\";\n                break;\n            case 9:\n\nunittest\n{\n \
    \   alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmptqmf3sbx.d(85): Error: found \''unittest\'' instead of statement\n/tmp/tmptqmf3sbx.d(95):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmptqmf3sbx.d(95):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptqmf3sbx.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    auto nums = numbers.split(\" \");\n    std.algorithm.sort(nums);\n\
    \    string ret = \"\";\n    for (int i = 0; i < nums.length; i++)\n    {\n  \
    \      ret ~= nums[i];\n        if (i != nums.length - 1)\n            ret ~=\
    \ \" \";\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp89ka_5q2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    import std.range : SortedRange;\n    import std.algorithm\
    \ : sort;\n    import std.conv : to;\n    enum nameToNumber = [ \n    \"zero\"\
    \ : 0,\n    \"one\" : 1,\n    \"two\" : 2,\n    \"three\" : 3,\n    \"four\" :\
    \ 4,\n    \"five\" : 5,\n    \"six\" : 6,\n    \"seven\" : 7,\n    \"eight\" :\
    \ 8,\n    \"nine\" : 9\n    ];\n    string[] nums = numbers.split(\" \");\n  \
    \  int[] numbersInt = nums.map!(n => nameToNumber[n]).array;\n    numbersInt.sort();\n\
    \    nums = nums.sort;\n    return nums.front;\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp69p5u6kk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    auto number = \"zero one two three four five six seven eight\
    \ nine\".split(\" \");\n    int[] numerals;\n    foreach(s; numbers.split(\" \"\
    ))\n    {\n        foreach(n; number)\n        {\n            if(s == n)\n   \
    \         {\n                numerals ~= n.length;\n            }\n        }\n\
    \    }\n    sort(numerals);\n    string result;\n    foreach(n; numerals)\n  \
    \  {\n        foreach(num; number)\n        {\n            if(n == num.length)\n\
    \            {\n                result ~= num ~ \" \";\n            }\n      \
    \  }\n    }\n    return result.stripRight();\n}\n \nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7q1bdo23.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    auto nums = split(numbers);\n    auto numvals = nums.map!((num)(int\
    \ num){\n        switch(num) {\n            case \"zero\": return 0;\n       \
    \     case \"one\": return 1;\n            case \"two\": return 2;\n         \
    \   case \"three\": return 3;\n            case \"four\": return 4;\n        \
    \    case \"five\": return 5;\n            case \"six\": return 6;\n         \
    \   case \"seven\": return 7;\n            case \"eight\": return 8;\n       \
    \     case \"nine\": return 9;\n        }\n    });\n    sort(numvals);\n    return\
    \ numvals.map!((val)(string val){\n        switch(val) {\n            case 0:\
    \ return \"zero\";\n            case 1: return \"one\";\n            case 2: return\
    \ \"two\";\n            case 3: return \"three\";\n            case 4: return\
    \ \"four\";\n            case 5: return \"five\";\n            case 6: return\
    \ \"six\";\n            case 7: return \"seven\";\n            case 8: return\
    \ \"eight\";\n            case 9: return \"nine\";\n        }\n    }).join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyfwak327.d(27): Error: C style cast illegal, use cast(num)(int
    num)\n{\nswitch (num)\n{\ncase "zero":\n{\nreturn 0;\n}\ncase "one":\n{\nreturn
    1;\n}\ncase "two":\n{\nreturn 2;\n}\ncase "three":\n{\nreturn 3;\n}\ncase "four":\n{\nreturn
    4;\n}\ncase "five":\n{\nreturn 5;\n}\ncase "six":\n{\nreturn 6;\n}\ncase "seven":\n{\nreturn
    7;\n}\ncase "eight":\n{\nreturn 8;\n}\ncase "nine":\n{\nreturn 9;\n}\n}\n}\n\n/tmp/tmpyfwak327.d(42):
    Error: C style cast illegal, use cast(val)(string val)\n{\nswitch (val)\n{\ncase
    0:\n{\nreturn "zero";\n}\ncase 1:\n{\nreturn "one";\n}\ncase 2:\n{\nreturn "two";\n}\ncase
    3:\n{\nreturn "three";\n}\ncase 4:\n{\nreturn "four";\n}\ncase 5:\n{\nreturn "five";\n}\ncase
    6:\n{\nreturn "six";\n}\ncase 7:\n{\nreturn "seven";\n}\ncase 8:\n{\nreturn "eight";\n}\ncase
    9:\n{\nreturn "nine";\n}\n}\n}\n\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyfwak327.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n\tstring [] s = numbers.split();\n\tdstring result = \"\";\n\t\
    foreach(string s2; s)\n\t{\n\t\tswitch(s2)\n\t\t{\n\t\t\tcase \"zero\":\n\t\t\t\
    \tresult ~= s2 ~ \" \";\n\t\t\t\tbreak;\n\t\t\tcase \"one\":\n\t\t\t\tresult ~=\
    \ s2 ~ \" \";\n\t\t\t\tbreak;\n\t\t\tcase \"two\":\n\t\t\t\tresult ~= s2 ~ \"\
    \ \";\n\t\t\t\tbreak;\n\t\t\tcase \"three\":\n\t\t\t\tresult ~= s2 ~ \" \";\n\t\
    \t\t\tbreak;\n\t\t\tcase \"four\":\n\t\t\t\tresult ~= s2 ~ \" \";\n\t\t\t\tbreak;\n\
    \t\t\tcase \"five\":\n\t\t\t\tresult ~= s2 ~ \" \";\n\t\t\t\tbreak;\n\t\t\tcase\
    \ \"six\":\n\t\t\t\tresult ~= s2 ~ \" \";\n\t\t\t\tbreak;\n\t\t\tcase \"seven\"\
    :\n\t\t\t\tresult ~= s2 ~ \" \";\n\t\t\t\tbreak;\n\t\t\tcase \"eight\":\n\t\t\t\
    \tresult ~= s2 ~ \" \";\n\t\t\t\tbreak;\n\t\t\tcase \"nine\":\n\t\t\t\tresult\
    \ ~= s2 ~ \" \";\n\t\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn result;\n}\n/*\nInput\
    \ is a string containing only the characters 'R', 'G', and 'B'\n    Output should\
    \ be a string containing 'R', 'G', and 'B' in sorted order \n    >>> sort_colors(\"\
    GBGGRBRG\")\n    \"BGRBGGRR\"\n*/\nstring sort_colors(string colors) \n{\n\tstring\
    \ [] s = colors.split();\n\tdstring result = \"\";\n\tforeach(string s2; s)\n\t\
    {\n\t\tswitch(s2)\n\t\t{\n\t\t\tcase \"R\":\n\t\t\t\tresult ~= s2 ~ \" \";\n\t\
    \t\t\tbreak;\n\t\t\tcase \"\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpv95diei3.d(77): Error: found \''three\'' when expecting \'':\''\n/tmp/tmpv95diei3.d(77):
    Error: found \''three\'' when expecting \'';\'' following statement\n/tmp/tmpv95diei3.d(78):
    Error: found \''three\'' when expecting \'';\'' following statement\n/tmp/tmpv95diei3.d(78):
    Error: found \''nine\'' when expecting \'';\'' following statement\n/tmp/tmpv95diei3.d(78):
    Error: found \''three\'' when expecting \'';\'' following statement\n/tmp/tmpv95diei3.d(78):
    Error: found \''nine\'' when expecting \'';\'' following statement\n/tmp/tmpv95diei3.d(79):
    Error: found \''five\'' when expecting \'';\'' following statement\n/tmp/tmpv95diei3.d(79):
    Error: found \''four\'' when expecting \'';\'' following statement\n/tmp/tmpv95diei3.d(79):
    Error: found \''nine\'' when expecting \'';\'' following statement\n/tmp/tmpv95diei3.d(79):
    Error: found \''") == "\'' when expecting \'';\'' following statement\n/tmp/tmpv95diei3.d(79):
    Error: found \''four\'' when expecting \'';\'' following statement\n/tmp/tmpv95diei3.d(79):
    Error: found \''seven\'' when expecting \'';\'' following statement\n/tmp/tmpv95diei3.d(79):
    Error: found \''nine\'' when expecting \'';\'' following statement\n/tmp/tmpv95diei3.d(80):
    Error: found \''six\'' when expecting \'';\'' following statement\n/tmp/tmpv95diei3.d(80):
    Error: found \''four\'' when expecting \'';\'' following statement\n/tmp/tmpv95diei3.d(80):
    Error: found \''two\'' when expecting \'';\'' following statement\n/tmp/tmpv95diei3.d(80):
    Error: found \''zero\'' when expecting \'';\'' following statement\n/tmp/tmpv95diei3.d(80):
    Error: found \''zero\'' when expecting \'';\'' following statement\n/tmp/tmpv95diei3.d(80):
    Error: found \''two\'' when expecting \'';\'' following statement\n/tmp/tmpv95diei3.d(80):
    Error: found \''four\'' when expecting \'';\'' following statement\n/tmp/tmpv95diei3.d(80):
    Error: unterminated string constant starting at /tmp/tmpv95diei3.d(80)\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv95diei3.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    enum Nums {zero, one, two, three, four, five, six, seven,\
    \ eight, nine};\n    auto num = [](string s) {\n        switch(s) {\n        \
    \    case \"zero\": return 0;\n            case \"one\": return 1;\n         \
    \   case \"two\": return 2;\n            case \"three\": return 3;\n         \
    \   case \"four\": return 4;\n            case \"five\": return 5;\n         \
    \   case \"six\": return 6;\n            case \"seven\": return 7;\n         \
    \   case \"eight\": return 8;\n            case \"nine\": return 9;\n        }\n\
    \        assert(0);\n    };\n    auto toString = [](Nums n) {\n        switch(n)\
    \ {\n            case zero: return \"zero\";\n            case one: return \"\
    one\";\n            case two: return \"two\";\n            case three: return\
    \ \"three\";\n            case four: return \"four\";\n            case five:\
    \ return \"five\";\n            case six: return \"six\";\n            case seven:\
    \ return \"seven\";\n            case eight: return \"eight\";\n            case\
    \ nine: return \"nine\";\n        }\n        assert(0);\n    };\n    auto words\
    \ = numbers.split();\n    auto nums = words.map!(num).array();\n    std.algorithm.sort(nums);\n\
    \    auto result = nums.map!(toString).array();\n    return result.join(\" \"\
    );\n}\n/*\n    >>> string_transpose(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\")\n    \"A K\
    \ U E Q Y I O C G M S W A B L V F R Z J P D H N T X\"\n    >>> string_transpose(\"\
    abcdefghijklmnopqrstuvwxyz\")\n    \"a k u e q y i o c g m s w a b l v f r z j\
    \ p d h n t x\"\n    >>> string_transpose(\"0123456789\")\n    \"0 5 A F K P U\
    \ Z 4 9 E J O T Y 3 8 D I N S X 2 7 C H M R W\"\n    >>> string_transpose(\"ABCDEFGHIJKLMNOPQRSTUVW\n\
    unittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphe1ej2lu.d(14): Error: found \''s\'' when expecting \'',\''\n/tmp/tmphe1ej2lu.d(14):
    Error: semicolon expected following auto declaration, not \''{\''\n/tmp/tmphe1ej2lu.d(29):
    Error: found \''n\'' when expecting \'',\''\n/tmp/tmphe1ej2lu.d(29): Error: semicolon
    expected following auto declaration, not \''{\''\n/tmp/tmphe1ej2lu.d(50): Error:
    unterminated /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphe1ej2lu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    static int[string] numstr_to_numint = [\"zero\":0, \"one\"\
    :1, \"two\":2, \"three\":3, \"four\":4, \"five\":5, \"six\":6, \"seven\":7, \"\
    eight\":8, \"nine\":9];\n    auto nums = numbers.split();\n    sort!((a, b) =>\
    \ numstr_to_numint[a] < numstr_to_numint[b])(nums);\n    return join(nums, \"\
    \ \");\n}\n/*\n    >>> sort_numbers(\"three two four five one\")\n    \"one two\
    \ three four five\"\n*/\nunittest\n{\n    alias candidate = sort_numbers;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4tknq5fg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    //Todo: return the numbers in the right order\n    string[]\
    \ nums;\n    int[] num_nums;\n    int lowest, index;\n    int num_len;\n    string\
    \ ret;\n    nums = split(numbers);\n    num_len = nums.length;\n    num_nums =\
    \ new int[num_len];\n    foreach(i, number; nums) {\n        switch(number) {\n\
    \            case \"zero\":\n                num_nums[i] = 0;\n              \
    \  break;\n            case \"one\":\n                num_nums[i] = 1;\n     \
    \           break;\n            case \"two\":\n                num_nums[i] = 2;\n\
    \                break;\n            case \"three\":\n                num_nums[i]\
    \ = 3;\n                break;\n            case \"four\":\n                num_nums[i]\
    \ = 4;\n                break;\n            case \"five\":\n                num_nums[i]\
    \ = 5;\n                break;\n            case \"six\":\n                num_nums[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                num_nums[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                num_nums[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                num_nums[i]\
    \ = 9;\n                break;\n        }\n    }\n    for(int i = 0; i < num_len;\
    \ i++) {\n        lowest = min(num_nums);\n        index = num_nums.indexOf(lowest);\n\
    \        num_nums[index] = 11;\n        switch(lowest) {\n            case 0:\n\
    \                ret ~= \"zero\";\n                break;\n            case 1:\n\
    \                ret ~= \"one\";\n                break;\n            case 2:\n\
    \                ret ~= \"two\";\n                break;\n            case 3:\n\
    \                ret ~= \"three\";\n                break;\n            case 4:\n\
    \                ret ~= \"four\";\n                break;\n            case 5:\n\
    \                ret ~= \"five\";\n                break;\n            case 6:\n\
    \                ret ~= \"six\";\n               \nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpzldenju3.d(82): Error: found \''unittest\'' instead of statement\n/tmp/tmpzldenju3.d(92):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmpzldenju3.d(92):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzldenju3.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    auto result = appender!string();\n\
    \    int[] numsAsInt = nums.map!(to!int);\n    numsAsInt.sort;\n    foreach(x;\
    \ numsAsInt)\n    {\n        result.put(to!string(x));\n    }\n    return result.data;\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2ixoauvn.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    // split the string and convert it to an array of numbers\n\
    \    auto split = numbers.split;\n    auto num = split.map!(a => to!size_t(a));\n\
    \    // sort the array\n    sort(num);\n    // convert the array back to string\
    \ of the word equivalent\n    return num.map!(a => to!string(a)).joiner(\" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy_6tdky2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    import std.algorithm : sort;\n    import std.format : format;\n\
    \    import std.conv : to;\n    import std.array : split;\n    return sort!((a,\
    \ b) => a.to!int < b.to!int)(numbers.split(\" \")).format(\"%s \").stripRight;\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcao4skh2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] numVals =\
    \ nums.map!(n => n.to!int).array;\n    string[] numValsStr = numVals.map!(n =>\
    \ n.to!string).array;\n    //sort numVals\n    numVals.sort;\n    //reset numValsStr\n\
    \    numValsStr = numVals.map!(n => n.to!string).array;\n    return numValsStr.join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfegtfpez.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    int[string] numerals = [\"zero\": 0, \"one\": 1, \"two\":\
    \ 2, \"three\": 3, \"four\": 4, \"five\": 5, \"six\": 6, \"seven\": 7, \"eight\"\
    : 8, \"nine\": 9];\n    auto nums = numbers.split(\" \");\n    auto num_ints =\
    \ map!(a => numerals[a])(nums);\n    num_ints.sort();\n    return num_ints.map!(to!string).joiner(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp18j2qs2p.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    return to!string(sort(map!(toNumber)(numbers.split())));\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy_jrnwtz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    import std.algorithm.sorting;\n    import std.array;\n   \
    \ import std.conv;\n    import std.range;\n    import std.typecons;\n    import\
    \ std.typecons;\n    import std.typetuple;\n    static struct Tuple(string numeral,\
    \ int digit) \n    {\n        string numeral;\n        int digit;\n    }\n   \
    \ /* populate an array with tuples of numberal, digit. */\n    Tuple!(string,\
    \ int)[] input = [];\n    foreach (numeral; splitter(numbers, \" \")) \n    {\n\
    \        input ~= Tuple(numeral, to!int(numeral));\n    }\n    /* sort on digit\
    \ */\n    input.sort!((e1, e2) {return e1.digit < e2.digit;});\n    /* return\
    \ string of numberals */\n    return input.map!(e => e.numeral).joiner(\" \");\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpaujxeuul.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string words[] = split(numbers, \" \");\n    int nums[];\n\
    \    for (int i = 0; i < words.length; i++)\n    {\n        if (words[i] == \"\
    zero\") nums[i] = 0;\n        else if (words[i] == \"one\") nums[i] = 1;\n   \
    \     else if (words[i] == \"two\") nums[i] = 2;\n        else if (words[i] ==\
    \ \"three\") nums[i] = 3;\n        else if (words[i] == \"four\") nums[i] = 4;\n\
    \        else if (words[i] == \"five\") nums[i] = 5;\n        else if (words[i]\
    \ == \"six\") nums[i] = 6;\n        else if (words[i] == \"seven\") nums[i] =\
    \ 7;\n        else if (words[i] == \"eight\") nums[i] = 8;\n        else if (words[i]\
    \ == \"nine\") nums[i] = 9;\n    }\n    sort(nums);\n    for (int i = 0; i < words.length;\
    \ i++)\n    {\n        if (nums[i] == 0) words[i] = \"zero\";\n        else if\
    \ (nums[i] == 1) words[i] = \"one\";\n        else if (nums[i] == 2) words[i]\
    \ = \"two\";\n        else if (nums[i] == 3) words[i] = \"three\";\n        else\
    \ if (nums[i] == 4) words[i] = \"four\";\n        else if (nums[i] == 5) words[i]\
    \ = \"five\";\n        else if (nums[i] == 6) words[i] = \"six\";\n        else\
    \ if (nums[i] == 7) words[i] = \"seven\";\n        else if (nums[i] == 8) words[i]\
    \ = \"eight\";\n        else if (nums[i] == 9) words[i] = \"nine\";\n    }\n \
    \   return join(words, \" \");\n}\n/*\n    Input is\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyjfj6gub.d(44): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpyjfj6gub.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n\tint[] number_values;\n\tint[] sorted_number_values;\n\tint n;\n\
    \tstring[] numbers_array;\n\t\n\tnumbers_array = numbers.split(\" \");\n\tnumber_values\
    \ = new int[numbers_array.length];\n\tsorted_number_values = new int[numbers_array.length];\n\
    \t\n\tforeach(string number_word; numbers_array)\n\t{\n\t\tswitch(number_word)\n\
    \t\t{\n\t\t\tcase \"zero\":\n\t\t\t\tn = 0;\n\t\t\t\tbreak;\n\t\t\tcase \"one\"\
    :\n\t\t\t\tn = 1;\n\t\t\t\tbreak;\n\t\t\tcase \"two\":\n\t\t\t\tn = 2;\n\t\t\t\
    \tbreak;\n\t\t\tcase \"three\":\n\t\t\t\tn = 3;\n\t\t\t\tbreak;\n\t\t\tcase \"\
    four\":\n\t\t\t\tn = 4;\n\t\t\t\tbreak;\n\t\t\tcase \"five\":\n\t\t\t\tn = 5;\n\
    \t\t\t\tbreak;\n\t\t\tcase \"six\":\n\t\t\t\tn = 6;\n\t\t\t\tbreak;\n\t\t\tcase\
    \ \"seven\":\n\t\t\t\tn = 7;\n\t\t\t\tbreak;\n\t\t\tcase \"eight\":\n\t\t\t\t\
    n = 8;\n\t\t\t\tbreak;\n\t\t\tcase \"nine\":\n\t\t\t\tn = 9;\n\t\t\t\tbreak;\n\
    \t\t\tdefault:\n\t\t\t\tn = 0;\n\t\t\t\tbreak;\n\t\t}\n\t\tnumber_values ~= n;\n\
    \t}\n\t\n\tsort(number_values);\n\t\n\tforeach(int num; number_values)\n\t{\n\t\
    \tswitch(num)\n\t\t{\n\t\t\tcase 0:\n\t\t\t\tnumbers_array ~= \"zero\";\n\t\t\t\
    \tbreak;\n\t\t\tcase 1:\n\t\t\t\tnumbers_array ~= \"one\";\n\t\t\t\tbreak;\n\t\
    \t\tcase 2:\n\t\t\t\tnumbers_array ~= \"two\";\n\t\t\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmppjymdeh9.d(78): Error: found \''unittest\'' instead of statement\n/tmp/tmppjymdeh9.d(88):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmppjymdeh9.d(88):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppjymdeh9.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    import std.algorithm;\n    import std.conv;\n    import std.range;\n\
    \    import std.format;\n    import std.array;\n    import std.typecons;\n   \
    \ import std.math;\n    auto s = split(numbers, \" \");\n    auto st = Tuple!(string)(s);\n\
    \    auto starr = st.array;\n    auto sarr = s.array;\n    //Tuple!(Tuple!(string))\
    \ tuplarr;\n    auto tuplarr = Tuple!(Tuple!(string))(0);\n    //auto tuplarr\
    \ = Tuple!(Tuple!(string))(sarr.length);\n    foreach(int i, ref x; sarr)\n  \
    \  {\n        switch(x)\n        {\n            case \"zero\":\n             \
    \   x = \"0\";\n                break;\n            case \"one\":\n          \
    \      x = \"1\";\n                break;\n            case \"two\":\n       \
    \         x = \"2\";\n                break;\n            case \"three\":\n  \
    \              x = \"3\";\n                break;\n            case \"four\":\n\
    \                x = \"4\";\n                break;\n            case \"five\"\
    :\n                x = \"5\";\n                break;\n            case \"six\"\
    :\n                x = \"6\";\n                break;\n            case \"seven\"\
    :\n                x = \"7\";\n                break;\n            case \"eight\"\
    :\n                x = \"8\";\n                break;\n            case \"nine\"\
    :\n                x = \"9\";\n                break;\n        }\n        auto\
    \ t = tuple(i, x);\n        tuplarr ~= t;\n    }\n    //sort(tuplarr);\n    sort!((a,\
    \ b) => to!int(a[1]) < to!int(b[1]))(tuplarr);\n    auto newarr = new string[tuplarr.length];\n\
    \    foreach(int i, ref x; tuplarr)\n    {\n        newarr[i] = x[1];\n    }\n\
    \    auto retstr = format(\"%s\", newarr);\n    return retstr;\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_m_ix0fu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    import std.algorithm.mutation : sort;\n    import std.range\
    \ : iota;\n    import std.algorithm.searching : split;\n    auto parsed = numbers.split('\
    \ ').map!(number =&gt; staticMap[number](0)).array();\n    sort(parsed);\n   \
    \ return std.range.iota(0, 10).map!(n =&gt; staticMap[n]).array().zip(parsed).filter!(e\
    \ =&gt; e[1] != 0).map!(e =&gt; e[0]).array().join(\" \");\n}\nunittest \n{\n\
    \    staticMap = [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"\
    six\", \"seven\", \"eight\", \"nine\"];\n    assert(sort_numbers(\"three one five\"\
    ) == \"one three five\");\n}\n</code>\n\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpiknhulu9.d(16): Error: found \'';\'' when expecting \'')\''
    following template argument list\n/tmp/tmpiknhulu9.d(16): Error: semicolon expected
    following auto declaration, not \''staticMap\''\n/tmp/tmpiknhulu9.d(16): Error:
    found \'')\'' when expecting \'';\'' following statement\n/tmp/tmpiknhulu9.d(18):
    Error: found \'';\'' when expecting \'')\'' following template argument list\n/tmp/tmpiknhulu9.d(18):
    Error: found \''staticMap\'' when expecting \'';\'' following return statement\n/tmp/tmpiknhulu9.d(18):
    Error: found \'')\'' when expecting \'';\'' following statement\n/tmp/tmpiknhulu9.d(18):
    Error: found \'';\'' when expecting \'')\'' following template argument list\n/tmp/tmpiknhulu9.d(18):
    Error: found \''e\'' when expecting \'';\'' following statement\n/tmp/tmpiknhulu9.d(18):
    Error: found \'')\'' when expecting \'';\'' following statement\n/tmp/tmpiknhulu9.d(18):
    Error: found \'';\'' when expecting \'')\'' following template argument list\n/tmp/tmpiknhulu9.d(18):
    Error: found \''e\'' when expecting \'';\'' following statement\n/tmp/tmpiknhulu9.d(18):
    Error: found \'')\'' when expecting \'';\'' following statement\n/tmp/tmpiknhulu9.d(25):
    Error: Declaration expected, not \''<\''\n/tmp/tmpiknhulu9.d(31): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpiknhulu9.d(32): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpiknhulu9.d(33): Error: Declaration expected, not \''assert\''\n/tmp/tmpiknhulu9.d(34):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpiknhulu9.d(35): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpiknhulu9.d(36): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiknhulu9.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    import std.conv;\n    import std.algorithm;\n    import std.range;\n\
    \    import std.array;\n    import std.stdio;\n    import std.string;\n    import\
    \ std.math;\n    int[string] numbersDict = [\"zero\":0, \"one\":1, \"two\":2,\
    \ \"three\":3, \"four\":4, \"five\":5, \"six\":6, \"seven\":7, \"eight\":8, \"\
    nine\":9];\n    int[] numberList;\n    foreach(a; numbers.split) {\n        numberList\
    \ ~= numbersDict[a];\n    }\n    numberList.sort;\n    int[] sortedNumbers = [0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9];\n    string[int] dictionary = [0:\"zero\", 1:\"\
    one\", 2:\"two\", 3:\"three\", 4:\"four\", 5:\"five\", 6:\"six\", 7:\"seven\"\
    , 8:\"eight\", 9:\"nine\"];\n    string result;\n    foreach(a; numberList) {\n\
    \        result ~= dictionary[a] ~ \" \";\n    }\n    return result.strip;\n}\n\
    unittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptnw4qzfk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    auto nums = numbers.split;\n    return nums.sort.joiner(\"\
    \ \");\n}\n/*\n    Split a string on spaces\n    >>> split(\"this is a string\"\
    )\n    [\"this\", \"is\", \"a\", \"string\"]\n*/\nT[] split(T)(T text) \n{\n \
    \   return text.split(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe9_plqs0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    auto words = numbers.split;\n    auto numbers_lowercase =\
    \ numbers.lower;\n    auto numbers_split = numbers_lowercase.split;\n    auto\
    \ numbers_ordered = numbers_split.sort;\n    auto sorted_string = numbers_ordered.join(\"\
    \ \");\n    return sorted_string;\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3gsotirm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n\t//string[] arr = numbers.split(' ');\n\treturn numbers;\n}\n\
    unittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9hehwfih.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string str;\n    foreach(int i; numbers.split(\" \"))\n  \
    \  {\n        str ~= to!string(i);\n    }\n    /*\n    immutable arr = numbers.split(\"\
    \ \");\n    string str;\n    foreach(i; arr)\n    {\n        str ~= to!string(i);\n\
    \    }\n    */\n    return str;\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpym715e2y.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    import std.algorithm, std.array, std.range, std.conv, std.stdio;\n\
    \    import std.math : clamp;\n    string[] words = numbers.split;\n    int[]\
    \ ints = words.map!(a => a.to!int).array();\n    ints.sort;\n    return ints.map!(a\
    \ => to!string(a)).joiner(\" \");\n}\n \n/*\n You are given a string of an odd\
    \ length, your task is to return a string made of the middle three characters\
    \ of a given String.\n   >>> middleThree(\"Candy\")\n   \"and\"\n   >>> middleThree(\"\
    and\")\n   \"and\"\n*/\nstring middleThree(string s) \n{\n    int count = s.length;\n\
    \    int mid = count / 2;\n    return s[mid - 1 .. mid + 1];\n}\n \n/*\n You are\
    \ given a string and your task is to swap cases. In other words, convert all lowercase\
    \ letters to uppercase letters and vice versa.\n    >>> swapCase(\"Hello World\"\
    )\n    \"hELLO wORLD\"\n    >>> swapCase(\"hELLO wORLD\")\n    \"Hello World\"\
    \n*/\nstring swapCase(string s) \n{\n    string c;\n    foreach (char ch; s) \n\
    \    {\n        ch.isUpper() ? c ~= ch.toLower() : c ~= ch.toUpper();\n    }\n\
    \    return c;\n}\n \n/*\n Given a string that represents time in hours and minutes,\
    \ convert the string to a military time.\n    >>> militaryTime(\"07:05:45PM\"\
    )\n    \"19:05:45\"\n    >>> militaryTime(\"07:05:45AM\")\n    \"07:05:45\"\n\
    */\nstring militaryTime(string time) \n{\n    auto t = time.split;\n    auto ap\
    \ = t[2];\n    if (ap.equal(\"PM\")) \n    {\n        auto newTime = (t[0].to!int\
    \ + 12).to!string ~ \":\" ~ t[1] ~ \":\" ~ t[3];\n        return newTime;\n  \
    \  } \n    else if (\nunittest\n{\n    alias candidate = sort_numbers;\n\n   \
    \ assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxqy3jvgg.d(69): Error: expression expected, not \''unittest\''\n/tmp/tmpxqy3jvgg.d(70):
    Error: found \''{\'' when expecting \'')\''\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpxqy3jvgg.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split();\n    int[] index = new int[nums.length];\n\
    \    int[] sorted = new int[nums.length];\n    string[] rev = [\"zero\", \"one\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"\
    ];\n    string[] res = new string[nums.length];\n    for (size_t i = 0; i < nums.length;\
    \ i++)\n    {\n        for (size_t j = 0; j < rev.length; j++)\n        {\n  \
    \          if (nums[i] == rev[j])\n            {\n                index[i] = j;\n\
    \                break;\n            }\n        }\n    }\n    sort(index);\n \
    \   for (size_t i = 0; i < nums.length; i++)\n    {\n        res[i] = rev[index[i]];\n\
    \    }\n    return res.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv2lqsqp5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n  // This is a data structure which will efficiently lookup the\
    \ index\n  // associated with a given string.\n  alias values = Tuple!(\"zero\"\
    , \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\"\
    , \"nine\");\n  // This structure is a binary tree that will be used to store\
    \ the input.\n  TreeNode!string input;\n  // Split the input string by spaces.\n\
    \  foreach (word; numbers.split(\" \")) {\n    // Select the numerical value from\
    \ the values tuple based on the index\n    // of the word within the tuple.\n\
    \    size_t val = indexOf(values, word);\n    input.insert(val);\n  }\n  // Construct\
    \ an array of strings, that are the sorted words.\n  string[] words = input.map!(num\
    \ => values[num]);\n  // Join the words into a string.\n  return words.join(\"\
    \ \");\n}\nunittest\n{\n    assert(sort_numbers(\"three one five\") == \"one three\
    \ five\");\n}\n \n// The task was a bit vague, so here's a version that also handles\n\
    // 'eleven', 'twelve', etc. as well as 'ten'\nstring sort_numbers2(string numbers)\
    \ \n{\n  // This is a data structure which will efficiently lookup the index\n\
    \  // associated with a given string.\n  // The dict was used in the real solution,\
    \ but I have chosen to\n  // switch to a tuple for speed.\n  alias values = Tuple!(\"\
    zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"\
    eight\", \"nine\", \"ten\", \"eleven\", \"twelve\", \"thirteen\", \"fourteen\"\
    , \"fifteen\", \"sixteen\", \"seventeen\", \"eighteen\", \"nineteen\");\n  //\
    \ This structure is a binary tree that will be used to store the input.\n  TreeNode!string\
    \ input;\n  // Split the input string by spaces.\n  foreach (word; numbers.split(\"\
    \ \")) {\n    // Select the numerical value from the values tuple based on the\
    \ index\n    // of the word within the tuple.\n    size_t val = indexOf(values,\
    \ word);\n\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpi72xqfgi.d(52): Error: found \''unittest\'' instead of statement\n/tmp/tmpi72xqfgi.d(62):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi72xqfgi.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    long[] values = new long[numbers.count];\n    string[] words\
    \ = numbers.split(\" \");\n    int index = 0;\n    foreach(i; words)\n    {\n\
    \        switch(i)\n        {\n            case \"zero\":\n                values[index]\
    \ = 0;\n                break;\n            case \"one\":\n                values[index]\
    \ = 1;\n                break;\n            case \"two\":\n                values[index]\
    \ = 2;\n                break;\n            case \"three\":\n                values[index]\
    \ = 3;\n                break;\n            case \"four\":\n                values[index]\
    \ = 4;\n                break;\n            case \"five\":\n                values[index]\
    \ = 5;\n                break;\n            case \"six\":\n                values[index]\
    \ = 6;\n                break;\n            case \"seven\":\n                values[index]\
    \ = 7;\n                break;\n            case \"eight\":\n                values[index]\
    \ = 8;\n                break;\n            case \"nine\":\n                values[index]\
    \ = 9;\n                break;\n        }\n        index++;\n    }\n    values.sort;\n\
    \    string[] temp = new string[values.length];\n    for(int i = 0; i < values.length;\
    \ i++)\n    {\n        switch(values[i])\n        {\n            case 0:\n   \
    \             temp[i] = \"zero\";\n                break;\n            case 1:\n\
    \                temp[i] = \"one\";\n                break;\n            case\
    \ 2:\n                temp[i] = \"two\";\n                break;\n           \
    \ case 3:\n                temp[i] = \"three\";\n                break;\n    \
    \        case 4:\n                temp[i] = \"four\";\n                break;\n\
    \            case 5:\n                temp[i] = \"five\";\n                break;\n\
    \            case 6:\n                temp[i] = \"six\";\n                break;\n\
    \            case 7:\n                temp[i] = \"seven\";\n                break;\n\
    \            case 8:\n                temp[i] = \"eight\";\n                break;\n\
    \            case 9:\n                temp[i] = \"nine\";\n                break;\n\
    \        }\n    }\n    string result = temp.join(\" \"\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmptcy87lws.d(92): Error: found \''unittest\'' when expecting \'',\''\n/tmp/tmptcy87lws.d(102):
    Error: found \''void\'' when expecting \'',\''\n/tmp/tmptcy87lws.d(102): Error:
    found \''{\'' when expecting \'',\''\n/tmp/tmptcy87lws.d(102): Error: expression
    expected, not \''}\''\n/tmp/tmptcy87lws.d(102): Error: found \''EOF\'' when expecting
    \'',\''\n/tmp/tmptcy87lws.d(102): Error: found \''EOF\'' when expecting \'')\''\n/tmp/tmptcy87lws.d(102):
    Error: semicolon expected, not \''EOF\''\n/tmp/tmptcy87lws.d(102): Error: found
    \''EOF\'' when expecting \''}\'' following compound statement\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmptcy87lws.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[string] num = [\n        \"zero\" : \"0\",\n      \
    \  \"one\" : \"1\",\n        \"two\" : \"2\",\n        \"three\" : \"3\",\n  \
    \      \"four\" : \"4\",\n        \"five\" : \"5\",\n        \"six\" : \"6\",\n\
    \        \"seven\" : \"7\",\n        \"eight\" : \"8\",\n        \"nine\" : \"\
    9\"\n    ];\n    string[] nums = split(numbers);\n    int[] num_int = to!int(nums.map!(a\
    \ => num[a]));\n    num_int.sort;\n    nums = num_int.map!(a => num.get(to!string(a),\
    \ \"\")).filter!(a => a.length > 0);\n    return join(nums, \" \");\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpicwlxk6i.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] numberals = [\"zero\", \"one\", \"two\", \"three\"\
    , \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"];\n    string[]\
    \ numbers = split(numbers);\n    size_t[] indicies;\n    foreach(i,n; numberals)\
    \ {\n        foreach(num; numbers)\n            if(num == n)\n               \
    \ indicies ~= i;\n    }\n    sort(indicies);\n    string result;\n    foreach(i;\
    \ indicies)\n        result ~= numberals[i] ~ \" \";\n    return result[0..$-1];\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdfp8lyvm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] num = numbers.split(\" \");\n    int[] nums = new\
    \ int[num.length];\n    for (int i = 0; i < num.length; i++)\n    {\n        int\
    \ temp = 0;\n        switch (num[i])\n        {\n            case \"zero\": temp\
    \ = 0; break;\n            case \"one\": temp = 1; break;\n            case \"\
    two\": temp = 2; break;\n            case \"three\": temp = 3; break;\n      \
    \      case \"four\": temp = 4; break;\n            case \"five\": temp = 5; break;\n\
    \            case \"six\": temp = 6; break;\n            case \"seven\": temp\
    \ = 7; break;\n            case \"eight\": temp = 8; break;\n            case\
    \ \"nine\": temp = 9; break;\n        }\n        nums[i] = temp;\n    }\n    sort(nums);\n\
    \    string result = \"\";\n    for (int i = 0; i < nums.length; i++)\n    {\n\
    \        string temp = \"\";\n        switch (nums[i])\n        {\n          \
    \  case 0: temp = \"zero\"; break;\n            case 1: temp = \"one\"; break;\n\
    \            case 2: temp = \"two\"; break;\n            case 3: temp = \"three\"\
    ; break;\n            case 4: temp = \"four\"; break;\n            case 5: temp\
    \ = \"five\"; break;\n            case 6: temp = \"six\"; break;\n           \
    \ case 7: temp = \"seven\"; break;\n            case 8: temp = \"eight\"; break;\n\
    \            case 9: temp = \"nine\"; break;\n        }\n        result += temp\
    \ + \" \";\n    }\n    return result.trim();\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj263ll3c.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    //split the string into an array of strings\n    import std.algorithm;\n\
    \    import std.array;\n    import std.conv;\n    import std.range;\n    import\
    \ std.string;\n    string[] tokens = split(numbers);\n    ubyte[] numValues =\
    \ new ubyte[tokens.length];\n    //convert the string tokens to ubyte types\n\
    \    for(size_t i = 0; i < tokens.length; i++)\n    {\n        //switch off the\
    \ enum\n        switch(tokens[i])\n        {\n            case \"zero\":\n   \
    \             numValues[i] = 0;\n                break;\n            case \"one\"\
    :\n                numValues[i] = 1;\n                break;\n            case\
    \ \"two\":\n                numValues[i] = 2;\n                break;\n      \
    \      case \"three\":\n                numValues[i] = 3;\n                break;\n\
    \            case \"four\":\n                numValues[i] = 4;\n             \
    \   break;\n            case \"five\":\n                numValues[i] = 5;\n  \
    \              break;\n            case \"six\":\n                numValues[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                numValues[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                numValues[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                numValues[i]\
    \ = 9;\n                break;\n        }\n    }\n    //now sort the values\n\
    \    sort(numValues);\n    //convert the sorted array of ubytes back to strings\n\
    \    for(size_t i = 0; i < numValues.length; i++)\n    {\n        switch(numValues[i])\n\
    \        {\n            case 0:\n                tokens[i] = \"zero\";\n     \
    \           break;\n            case 1:\n                tokens[i] = \"one\";\n\
    \                break;\n            case 2:\n                tokens[i] = \"two\"\
    ;\n                break;\n            case 3:\n                tokens[i] = \"\
    three\";\n                break;\n            case 4:\n                tokens[i]\
    \ = \"four\";\n                break;\n            case 5:\n                tokens[i]\
    \ = \"five\";\n\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpia1s2xm4.d(84): Error: found \''unittest\'' instead of statement\n/tmp/tmpia1s2xm4.d(94):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmpia1s2xm4.d(94):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpia1s2xm4.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] arr = numbers.split(\" \");\n    uint[] sorted =\
    \ new uint[arr.length];\n    foreach(i,a;arr)\n    {\n        a = a.toLower();\n\
    \        switch(a)\n        {\n            case \"zero\": sorted[i] = 0; break;\n\
    \            case \"one\": sorted[i] = 1; break;\n            case \"two\": sorted[i]\
    \ = 2; break;\n            case \"three\": sorted[i] = 3; break;\n           \
    \ case \"four\": sorted[i] = 4; break;\n            case \"five\": sorted[i] =\
    \ 5; break;\n            case \"six\": sorted[i] = 6; break;\n            case\
    \ \"seven\": sorted[i] = 7; break;\n            case \"eight\": sorted[i] = 8;\
    \ break;\n            case \"nine\": sorted[i] = 9; break;\n        }\n    }\n\
    \    sort(sorted);\n    string result = \"\";\n    foreach(s;sorted)\n    {\n\
    \        switch(s)\n        {\n            case 0: result ~= \"zero \"; break;\n\
    \            case 1: result ~= \"one \"; break;\n            case 2: result ~=\
    \ \"two \"; break;\n            case 3: result ~= \"three \"; break;\n       \
    \     case 4: result ~= \"four \"; break;\n            case 5: result ~= \"five\
    \ \"; break;\n            case 6: result ~= \"six \"; break;\n            case\
    \ 7: result ~= \"seven \"; break;\n            case 8: result ~= \"eight \"; break;\n\
    \            case 9: result ~= \"nine \"; break;\n        }\n    }\n    return\
    \ result.stripRight;\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg1guddqf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    size_t length = numbers.length;\n    int[int] sortableNumbers;\n\
    \    string[] numberName = numbers.split;\n    for(size_t i = 0; i < length; i++)\n\
    \    {\n        import std.string;\n        int num;\n        switch(numberName[i])\n\
    \        {\n            case \"zero\":\n                num = 0;\n           \
    \     break;\n            case \"one\":\n                num = 1;\n          \
    \      break;\n            case \"two\":\n                num = 2;\n         \
    \       break;\n            case \"three\":\n                num = 3;\n      \
    \          break;\n            case \"four\":\n                num = 4;\n    \
    \            break;\n            case \"five\":\n                num = 5;\n  \
    \              break;\n            case \"six\":\n                num = 6;\n \
    \               break;\n            case \"seven\":\n                num = 7;\n\
    \                break;\n            case \"eight\":\n                num = 8;\n\
    \                break;\n            case \"nine\":\n                num = 9;\n\
    \                break;\n        }\n        sortableNumbers[num] = num;\n    }\n\
    \    sortableNumbers.sort();\n    string orderedNumbers;\n    foreach(i;sortableNumbers)\n\
    \    {\n        import std.string;\n        orderedNumbers ~= to!string(i);\n\
    \    }\n    return orderedNumbers;\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphfkg72sw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    immutable numbers_map = [\"zero\": 0, \"one\": 1, \"two\"\
    : 2, \"three\": 3, \"four\": 4, \"five\": 5, \"six\": 6, \"seven\": 7, \"eight\"\
    : 8, \"nine\": 9];\n    numbers = numbers.split();\n    return numbers.sort!((a,\
    \ b) => numbers_map[a] < numbers_map[b])\n                  .array.join;\n}\n\
    unittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmvga6gdi.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    static string[] nums = [\"zero\", \"one\", \"two\", \"three\"\
    , \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"];\n    static int[]\
    \ numMap = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n    auto numList = numbers.split(\"\
    \ \");\n    auto map = numList.map!(a => numMap[nums.indexOf(a)]);\n    auto sortedMap\
    \ = sort(map);\n    return sortedMap.map!(a => nums[a]).join(\" \");\n}\nsort_numbers(\"\
    three one five\");\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpagxmrguh.d(20): Error: unexpected ( in declarator\n/tmp/tmpagxmrguh.d(20):
    Error: basic type expected, not "three one five"\n/tmp/tmpagxmrguh.d(20): Error:
    found \''"three one five"\'' when expecting \'')\''\n/tmp/tmpagxmrguh.d(20): Error:
    no identifier for declarator sort_numbers(int)\n/tmp/tmpagxmrguh.d(20): Error:
    semicolon expected following function declaration\n/tmp/tmpagxmrguh.d(20): Error:
    Declaration expected, not \'')\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpagxmrguh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    // Convert the numbers to an array with the function 'split'\
    \ and sort them\n    return split(numbers).sort().joiner(\" \");\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbiq87iqz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    import std.conv : to;\n    import std.string : split;\n  \
    \  auto words = numbers.split;\n    auto nums = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n\
    \    auto map = [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"\
    six\", \"seven\", \"eight\", \"nine\"];\n    words[] = map[nums.indexOf(map.indexOf(words[]))];\n\
    \    return words.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqoo0fllw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    auto words = numbers.split;\n    immutable word_map = [\n\
    \        \"zero\": 0,\n        \"one\": 1,\n        \"two\": 2,\n        \"three\"\
    : 3,\n        \"four\": 4,\n        \"five\": 5,\n        \"six\": 6,\n      \
    \  \"seven\": 7,\n        \"eight\": 8,\n        \"nine\": 9\n    ];\n    auto\
    \ numbers = words.map!(w => word_map[w]).array;\n    std.algorithm.sort(numbers);\n\
    \    auto result = numbers.map!(n => to!string(n)).joiner(\" \").array;\n    return\
    \ result.joiner(\" \").text;\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo5jsf7ol.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    // YOUR CODE GOES HERE\n    // YOU MAY USE MAPS\n    import\
    \ std.algorithm.comparison : equal;\n    import std.array : sort;\n    import\
    \ std.conv : to;\n    import std.format : format;\n    import std.range : isInputRange,\
    \ split;\n    import std.string : strip;\n    import std.typecons : tuple;\n \
    \   import std.typecons : tuple;\n    import std.uni : toLower;\n    import std.traits\
    \ : Unqual;\n    //import std.typecons : tuple;\n    numbers = numbers.strip();\n\
    \    auto nums = numbers.split(' ');\n    size_t size = nums.length;\n    auto\
    \ word = new int[size];\n    int i = 0;\n    foreach(num; nums)\n    {\n     \
    \   num = num.toLower();\n        if(num.equal(\"zero\"))\n        {\n       \
    \     word[i] = 0;\n        }\n        else if(num.equal(\"one\"))\n        {\n\
    \            word[i] = 1;\n        }\n        else if(num.equal(\"two\"))\n  \
    \      {\n            word[i] = 2;\n        }\n        else if(num.equal(\"three\"\
    ))\n        {\n            word[i] = 3;\n        }\n        else if(num.equal(\"\
    four\"))\n        {\n            word[i] = 4;\n        }\n        else if(num.equal(\"\
    five\"))\n        {\n            word[i] = 5;\n        }\n        else if(num.equal(\"\
    six\"))\n        {\n            word[i] = 6;\n        }\n        else if(num.equal(\"\
    seven\"))\n        {\n            word[i] = 7;\n        }\n        else if(num.equal(\"\
    eight\"))\n        {\n            word[i] = 8;\n        }\n        else if(num.equal(\"\
    nine\"))\n        {\n            word[i] = 9;\n        }\n        i++;\n    }\n\
    \    sort(word);\n    int j = 0;\n    foreach(num; nums)\n    {\n        if(word[j]\
    \ == 0)\n        {\n           \nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqmxh8nv8.d(83): Error: found \''unittest\'' instead of statement\n/tmp/tmpqmxh8nv8.d(93):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmpqmxh8nv8.d(93):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqmxh8nv8.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    const string[string] nums = [\n        \"zero\": \"0\",\n\
    \        \"one\": \"1\",\n        \"two\": \"2\",\n        \"three\": \"3\",\n\
    \        \"four\": \"4\",\n        \"five\": \"5\",\n        \"six\": \"6\",\n\
    \        \"seven\": \"7\",\n        \"eight\": \"8\",\n        \"nine\": \"9\"\
    \n    ];\n    return numbers.split.map!(a => nums[a]).sort.join(\" \");\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb5dnur3q.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    auto num_map = unordered_map!string(to!(ushort)(char.init));\n\
    \    num_map[\"zero\"] = 0;\n    num_map[\"one\"] = 1;\n    num_map[\"two\"] =\
    \ 2;\n    num_map[\"three\"] = 3;\n    num_map[\"four\"] = 4;\n    num_map[\"\
    five\"] = 5;\n    num_map[\"six\"] = 6;\n    num_map[\"seven\"] = 7;\n    num_map[\"\
    eight\"] = 8;\n    num_map[\"nine\"] = 9;\n    \n    auto words = numbers.split(\"\
    \ \");\n    for (auto i = 0; i < words.length; i++)\n    {\n        for (auto\
    \ j = i; j < words.length; j++)\n        {\n            if (num_map[words[i]]\
    \ > num_map[words[j]])\n            {\n                swap(words[i], words[j]);\n\
    \            }\n        }\n    }\n    return words.join(\" \");\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_lz1rx_6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    int i;\n    string number, ret;\n    int[] vals;\n    foreach(number;\
    \ split(numbers, \" \")) {\n        switch(number) {\n            case \"zero\"\
    : vals ~= 0; break;\n            case \"one\": vals ~= 1; break;\n           \
    \ case \"two\": vals ~= 2; break;\n            case \"three\": vals ~= 3; break;\n\
    \            case \"four\": vals ~= 4; break;\n            case \"five\": vals\
    \ ~= 5; break;\n            case \"six\": vals ~= 6; break;\n            case\
    \ \"seven\": vals ~= 7; break;\n            case \"eight\": vals ~= 8; break;\n\
    \            case \"nine\": vals ~= 9; break;\n        }\n    }\n    sort(vals);\n\
    \    foreach(i; vals) {\n        switch(i) {\n            case 0: ret ~= \"zero\
    \ \"; break;\n            case 1: ret ~= \"one \"; break;\n            case 2:\
    \ ret ~= \"two \"; break;\n            case 3: ret ~= \"three \"; break;\n   \
    \         case 4: ret ~= \"four \"; break;\n            case 5: ret ~= \"five\
    \ \"; break;\n            case 6: ret ~= \"six \"; break;\n            case 7:\
    \ ret ~= \"seven \"; break;\n            case 8: ret ~= \"eight \"; break;\n \
    \           case 9: ret ~= \"nine \"; break;\n        }\n    }\n    return ret;\n\
    }\n/*\n Given a list of items, determine if that list contains a duplicated item.\n\
    \    >>> has_duplicates([3, 4, 5, 6, 7, 1, 2, 9, 10])\n    False\n    >>> has_duplicates([3,\
    \ 4, 5, 6, 7, 1, 2, 9, 3])\n    True\n    >>> has_duplicates([3, 4, 5, 6, 7, 1,\
    \ 2, 9, 10, 10])\n    True\n*/\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnvclo4ip.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] array;\n    numbers.split(\" \").copy(array);\n \
    \   array.sort();\n    return array.join(\" \");\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph5ih_zmo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    int[] numeralValues = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};\n  \
    \  string[] numeralNames = {\"zero\", \"one\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"seven\", \"eight\", \"nine\"};\n    int[] nums = numbers.split(\"\
    \ \").map!(to => numeralValues[numeralNames.indexOf(to)]);\n    nums.sort;\n \
    \   return nums.map!(to => numeralNames[numeralValues.indexOf(to)]).join(\" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp71s20l39.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n\tstring[] nums = numbers.split();\n\tsort(nums.sort);\n\treturn\
    \ join(nums, \" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbmkt3pfy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] num = numbers.split(\" \");\n    int[] number = new\
    \ int[num.length];\n    int[] sorted = new int[num.length];\n    int[] sorted_number\
    \ = new int[num.length];\n    for (int i = 0; i < num.length; i++) {\n       \
    \ if (num[i] == \"zero\") {\n            number[i] = 0;\n        } else if (num[i]\
    \ == \"one\") {\n            number[i] = 1;\n        } else if (num[i] == \"two\"\
    ) {\n            number[i] = 2;\n        } else if (num[i] == \"three\") {\n \
    \           number[i] = 3;\n        } else if (num[i] == \"four\") {\n       \
    \     number[i] = 4;\n        } else if (num[i] == \"five\") {\n            number[i]\
    \ = 5;\n        } else if (num[i] == \"six\") {\n            number[i] = 6;\n\
    \        } else if (num[i] == \"seven\") {\n            number[i] = 7;\n     \
    \   } else if (num[i] == \"eight\") {\n            number[i] = 8;\n        } else\
    \ if (num[i] == \"nine\") {\n            number[i] = 9;\n        }\n    }\n  \
    \  sorted = number.dup;\n    sorted = std.algorithm.sort(sorted);\n    for (int\
    \ i = 0; i < num.length; i++) {\n        for (int j = 0; j < num.length; j++)\
    \ {\n            if (sorted[i] == number[j]) {\n                sorted_number[i]\
    \ = j;\n            }\n        }\n    }\n    string result = \"\";\n    for (int\
    \ i = 0; i < num.length; i++) {\n        int index = sorted_number[i];\n     \
    \   result ~= num[index];\n        if (i != num.length - 1) {\n            result\
    \ ~= \" \";\n        }\n    }\n    return result;\n}\n \n \n/*\n    Input is a\
    \ space-delimited string of numberals from '\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpidulmkqm.d(61): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpidulmkqm.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    int[] nums;\n    foreach(immutable elem; numbers.split())\n\
    \    {\n        nums ~= parse(elem);\n    }\n    return nums.sort().to!string;\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo4yvov2x.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    import std.conv : to;\n    auto nums = numbers.split(\" \"\
    ).map!(s => s.to!int);\n    nums.sort();\n    return nums.map!(s => to!string(s)).join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx3haxlxh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    auto nums = numbers.split();\n    for (int i = 0; i < nums.length;\
    \ i++)\n    {\n        for (int j = i + 1; j < nums.length; j++)\n        {\n\
    \            if (nums[i] > nums[j])\n            {\n                auto temp\
    \ = nums[i];\n                nums[i] = nums[j];\n                nums[j] = temp;\n\
    \            }\n        }\n    }\n    return nums.join(\" \");\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpml26lh9w.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    static immutable(string) numeralList = [\"zero\", \"one\"\
    , \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"\
    ];\n    string[] list = numbers.split(\" \");\n    int[] listDigit = int[list.length];\n\
    \    foreach(i, digit; list)\n    {\n        listDigit[i] = find(numeralList,\
    \ digit);\n    }\n    sort(listDigit);\n    foreach(i, digit; listDigit)\n   \
    \ {\n        list[i] = numeralList[digit];\n    }\n    return join(list, \" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsjhnay7f.d(15): Error: found \''[\'' when expecting \''.\''
    following int\n/tmp/tmpsjhnay7f.d(15): Error: semicolon expected, not \'']\''\n/tmp/tmpsjhnay7f.d(15):
    Error: found \'']\'' instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpsjhnay7f.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    return numbers.explode.sort.join;\n}\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy0_h_4jm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    auto nums = numbers.split(\" \");\n    std.algorithm.sort(nums);\n\
    \    auto result = nums.join(\" \");\n    return result;\n}\n \n/*\n \n Input\
    \ is a space-delimited string of numberals from 'zero' to 'nine'.\n    Valid choices\
    \ are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and\
    \ 'nine'.\n    Return the string with numbers sorted from smallest to largest\n\
    \    >>> sort_numbers(\"three one five\")\n    \"one three five\"\n    \n*/\n\
    string sort_numbers_sort_by(string numbers) \n{\n    auto nums = numbers.split(\"\
    \ \");\n    auto num_map = new std.typecons.Map!(string, int)();\n    num_map[\"\
    zero\"] = 0;\n    num_map[\"one\"] = 1;\n    num_map[\"two\"] = 2;\n    num_map[\"\
    three\"] = 3;\n    num_map[\"four\"] = 4;\n    num_map[\"five\"] = 5;\n    num_map[\"\
    six\"] = 6;\n    num_map[\"seven\"] = 7;\n    num_map[\"eight\"] = 8;\n    num_map[\"\
    nine\"] = 9;\n    auto sort_fn = (string a, string b) => num_map[a] < num_map[b];\n\
    \    std.algorithm.sort(nums, sort_fn);\n    auto result = nums.join(\" \");\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n \
    \   assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfjlb3_fp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n  string result;\n  enum string[] n = split(numbers);\n  int[]\
    \ nums = n.map!((a) => numeral_to_int(a));\n  nums.sort;\n  result = join(nums.map!((a)\
    \ => int_to_numeral(a)));\n  return result;\n}\n \nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp71merbi3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n\treturn to!string(numbers.tokenize(\" \").map!(a => to!int(a)).sort!(\"\
    a > b\"));\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzdcvwbx1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    auto words = split(numbers);\n    string[] nums = new string[$];\n\
    \    foreach(word; words)\n    {\n        switch(word)\n        {\n          \
    \  case \"zero\": nums ~= \"0\"; break;\n            case \"one\": nums ~= \"\
    1\"; break;\n            case \"two\": nums ~= \"2\"; break;\n            case\
    \ \"three\": nums ~= \"3\"; break;\n            case \"four\": nums ~= \"4\";\
    \ break;\n            case \"five\": nums ~= \"5\"; break;\n            case \"\
    six\": nums ~= \"6\"; break;\n            case \"seven\": nums ~= \"7\"; break;\n\
    \            case \"eight\": nums ~= \"8\"; break;\n            case \"nine\"\
    : nums ~= \"9\"; break;\n        }\n    }\n    // ndigits to preserve length of\
    \ numbers in case of leading zeros\n    auto fcmp = (n, m) => ndigits(n) < ndigits(m)\
    \ || ndigits(n) == ndigits(m) && n < m;\n    sort(nums, fcmp);\n    foreach(i,\
    \ ref num; nums)\n    {\n        switch(num)\n        {\n            case \"0\"\
    : num = \"zero\"; break;\n            case \"1\": num = \"one\"; break;\n    \
    \        case \"2\": num = \"two\"; break;\n            case \"3\": num = \"three\"\
    ; break;\n            case \"4\": num = \"four\"; break;\n            case \"\
    5\": num = \"five\"; break;\n            case \"6\": num = \"six\"; break;\n \
    \           case \"7\": num = \"seven\"; break;\n            case \"8\": num =\
    \ \"eight\"; break;\n            case \"9\": num = \"nine\"; break;\n        }\n\
    \    }\n    return join(nums, \" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprh64foyu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    // TODO: Implement this function\n    return \"\";\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0uo2mcmd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n\tauto tokens = numbers.split;\n\tstring[uint] nums = [\"zero\"\
    , \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\"\
    , \"nine\"];\n\t\n\t// build a tuple of the values\n\ttypeof(tuple(0u, \"\")[])\
    \ values;\n\tforeach(immutable token; tokens)\n\t{\n\t\timmutable idx = nums.indexOf(token);\n\
    \t\tassert(idx != -1);\n\t\tvalues ~= tuple(idx, token);\n\t}\n\t\n\t// sort the\
    \ tuples (first element is the index of the string)\n\tsort!((t1, t2) => t1[0]\
    \ < t2[0])(values);\n\t\n\t// return the sorted values\n\treturn tuple(values).map!(t\
    \ => t[1]).join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf16gnezp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] n = numbers.split;\n    n.sort;\n    return n.join;\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp83lnlece.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n\treturn numbers.sort().retro();\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6dzqs78n.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    auto nums = sorted(split(numbers));\n    string str;\n   \
    \ foreach(n; nums)\n    {\n        str ~= n;\n        str ~= \" \";\n    }\n \
    \   return str;\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1pwf0tet.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    return numbers.split(' ').map!(a => to!int(a)).sort.map!(to!string).join(\"\
    \ \");\n}\n/*\n Input is a string of lowercase letters, with numbers denoting\
    \ repeated characters.\n    Return the string with repeated characters collapsed\
    \ into one character.\n    >>> collapse_repeats(\"bookkkeepping\")\n    \"bokeping\"\
    \n*/\nstring collapse_repeats(string s)\n{\n    return s.chunks.map!(a => to!string(a.length)).join(\"\
    \")~s.chunks[0].front;\n}\n/*\n Input is a string of lowercase letters, with numbers\
    \ denoting repeated characters.\n    Return the string with repeated characters\
    \ expanded.\n    >>> expand_repeats(\"b2ob2k2e2p1i1n1g\")\n    \"booookkeepping\"\
    \n*/\nstring expand_repeats(string s)\n{\n    return s.chunks.map!(a => a.front.expand(to!int(a.dropOne.front))).join(\"\
    \");\n}\n/*\n  Input is a string of lowercase letters.\n     Return the string\
    \ with no duplicates.\n     >>> remove_duplicates(\"bookkeeping\")\n     \"bokeping\"\
    \n */\nstring remove_duplicates(string s)\n{\n    return s.chunks.map!(a => a.front).uniq.join(\"\
    \");\n}\n/*\n  Input is a string containing an ascii representation of a binary\
    \ number.\n     Return the number of ones in the binary string.\n     >>> count_ones(\"\
    1010\")\n     2\n*/\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcgcp5g78.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    auto nums = split(numbers);\n    string[string] nums_sorted;\n\
    \    string[] sorted;\n    foreach(i, num; nums)\n    {\n        nums_sorted[i]\
    \ = num;\n    }\n    for(int i = 0; i < nums.length; i++)\n    {\n        auto\
    \ new_sorted = sort!((a, b) => a.length < b.length)(nums_sorted.values());\n \
    \       sorted ~= new_sorted[0];\n        nums_sorted.remove(nums_sorted.byValue(new_sorted[0]));\n\
    \    }\n    return join(sorted, \" \");\n}\nunittest\n{\n    alias candidate =\
    \ sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphbojccx6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    immutable wordToInt = [\n        (\"zero\",0),\n        (\"\
    one\",1),\n        (\"two\",2),\n        (\"three\",3),\n        (\"four\",4),\n\
    \        (\"five\",5),\n        (\"six\",6),\n        (\"seven\",7),\n       \
    \ (\"eight\",8),\n        (\"nine\",9)\n    ];\n    import std.array : array;\n\
    \    import std.algorithm : sort;\n    int[] nums = [];\n    foreach(word; numbers.split(\"\
    \ \"))\n    {\n        nums ~= wordToInt[word];\n    }\n    auto sorted = nums.array.sort;\n\
    \    return sorted.map!(a=>wordToInt.byValue[a]).array.join(\" \");\n}\n \nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx2tvpn38.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    import std.algorithm;\n    immutable string[] num_map = [\"\
    zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"\
    eight\", \"nine\"];\n    immutable words = num_map.join(\"|\");\n    immutable\
    \ nums = numbers.split.join(\"\").retro.joiner(\"\\\\s+\");\n    immutable num_regex\
    \ = regex(nums);\n    immutable digit_tuple = tuple(1,2,3,4,5,6,7,8,9,0);\n  \
    \  immutable int[] nums_match = num_regex.match(words).retro.joiner(\"\").map!(x\
    \ => x.length).array;\n    immutable digit_tuple[] nums_tuple = zip(nums_match,\
    \ digit_tuple).array;\n    immutable nums_tuple = sort!(\"a[0] < b[0]\")(nums_tuple);\n\
    \    immutable sorted_num = nums_tuple.map!(a => to!string(a[1])).joiner(\" \"\
    );\n    return sorted_num;\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdw2svxvd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    // Check if the number is in the array\n    string [] dict\
    \ = [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"\
    , \"eight\", \"nine\"];\n    int [] values = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n\
    \    string [] nums = numbers.split();\n    int [] ret = new int[];\n    foreach(string\
    \ num; nums)\n    {\n        int i = dict.indexOf(num);\n        if(i == -1)\n\
    \        {\n            throw new Exception(\"not a valid number\");\n       \
    \ }\n        ret ~= values[i];\n    }\n    sort(ret);\n    string [] ret_str =\
    \ new string[];\n    foreach(int i; ret)\n    {\n        ret_str ~= dict[values.indexOf(i)];\n\
    \    }\n    return ret_str.join(\" \");\n}\nunittest\n{\n    alias candidate =\
    \ sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbzib5wk_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] words = numbers.split();\n    int nums[words.length];\n\
    \    for (int i = 0; i < words.length; i++) {\n        nums[i] = getNum(words[i]);\n\
    \    }\n    std.algorithm.sort(nums);\n    string[] sorted = new string[words.length];\n\
    \    for (int i = 0; i < words.length; i++) {\n        sorted[i] = getWord(nums[i]);\n\
    \    }\n    return sorted.join(\" \");\n}\nunittest\n{\n    alias candidate =\
    \ sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqvl7hvhq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    auto numbersArr = split(numbers, \" \");\n    // auto numbersArr\
    \ = numbers.split(\" \");\n    sort(numbersArr);\n    return join(numbersArr,\
    \ \" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnhiftbzb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n\tint[] num = to!(int[])(split(numbers));\n\tsort(num);\n\treturn\
    \ join(to!(string[])(num));\n}\n/*\n Input is a space-delimited string of characters.\
    \ Return the string with the letters sorted by their English alphabetical order.\n\
    \    >>> sort_alphabet(\"python\")\n    \"hnopty\"\n    \n*/\nstring sort_alphabet(string\
    \ word) \n{\n\tint[] chars = to!(int[])(split(word));\n\tsort(chars);\n\treturn\
    \ join(to!(string[])(chars));\n}\n/*\n Input is a space-delimited string of English-language\
    \ words. Return the string with the words sorted by length. \n    >>> sort_length(\"\
    one two three four\")\n    \"one two four three\"\n    \n*/\nstring sort_length(string\
    \ words) \n{\n\tstring[] sorted = split(words);\n\tsort!(\"a.length < b.length\"\
    )(sorted);\n\treturn join(sorted);\n}\n/*\n Input is a space-delimited string\
    \ of numbers.\n    Return the boolean True if the numbers are in ascending order.\n\
    \    >>> is_sorted(\"1 2 3 4 5\")\n    True\n    >>> is_sorted(\"4 3 2 1\")\n\
    \    False\n    \n*/\nunittest\n{\n    alias candidate = sort_numbers;\n\n   \
    \ assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq_l_1g13.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] s = split(numbers);\n    string[] ret = new string[s.length];\n\
    \    uint[] nums = new uint[s.length];\n    int j = 0;\n    for (int i = 0; i\
    \ < s.length; i++)\n    {\n        if (s[i] == \"zero\") \n        {\n       \
    \     nums[j] = 0;\n            ret[j] = \"zero\";\n            j++;\n       \
    \ }\n        else if (s[i] == \"one\") \n        {\n            nums[j] = 1;\n\
    \            ret[j] = \"one\";\n            j++;\n        }\n        else if (s[i]\
    \ == \"two\") \n        {\n            nums[j] = 2;\n            ret[j] = \"two\"\
    ;\n            j++;\n        }\n        else if (s[i] == \"three\") \n       \
    \ {\n            nums[j] = 3;\n            ret[j] = \"three\";\n            j++;\n\
    \        }\n        else if (s[i] == \"four\") \n        {\n            nums[j]\
    \ = 4;\n            ret[j] = \"four\";\n            j++;\n        }\n        else\
    \ if (s[i] == \"five\") \n        {\n            nums[j] = 5;\n            ret[j]\
    \ = \"five\";\n            j++;\n        }\n        else if (s[i] == \"six\")\
    \ \n        {\n            nums[j] = 6;\n            ret[j] = \"six\";\n     \
    \       j++;\n        }\n        else if (s[i] == \"seven\") \n        {\n   \
    \         nums[j] = 7;\n            ret[j] = \"seven\";\n            j++;\n  \
    \      }\n        else if (s[i] == \"eight\") \n        {\n            nums[j]\
    \ = 8;\n            ret[j] = \"eight\";\n            j++;\n        }\n       \
    \ else if (s[i] == \"nine\") \n        {\n            nums[j] = 9;\n         \
    \   ret[j] = \"nine\";\n            j++;\n        }\n    }\n    for\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9b7m0r69.d(81): Error: found \''unittest\'' when expecting \''(\''\n/tmp/tmp9b7m0r69.d(91):
    Error: found \''main\'' when expecting \''.\'' following void\n/tmp/tmp9b7m0r69.d(91):
    Error: found \''(\'' when expecting identifier following \''void.\''\n/tmp/tmp9b7m0r69.d(91):
    Error: found \'')\'' when expecting \'';\'' following for condition\n/tmp/tmp9b7m0r69.d(91):
    Error: found \''EOF\'' when expecting \'')\''\n/tmp/tmp9b7m0r69.d(91): Error:
    found \''EOF\'' instead of statement\n/tmp/tmp9b7m0r69.d(91): Error: found \''EOF\''
    when expecting \''}\'' following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp9b7m0r69.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    // Version 1:\n    string[] split_numbers = split(numbers);\n\
    \    int[] int_numbers = split_numbers.map!(a => to!int(a)).array;\n    std.algorithm.sort(int_numbers);\n\
    \    int_numbers.map!(to!string).array.joiner(\" \");\n    \n    // Version 2:\n\
    \    // return split(numbers).map!(a => to!int(a)).sort.map!(to!string).array.joiner(\"\
    \ \");\n}\n \nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9wcndcj_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    int ia = atoi(numbers);\n    string[] istrs = std.string.split(numbers,\
    \ ' ');\n    string str;\n    int[] values = new int[istrs.length];\n    foreach(index,\
    \ istr; istrs) {\n        values[index] = atoi(istr);\n    }\n    std.algorithm.sort(values);\n\
    \    foreach(value; values) {\n        str ~= cast(string)value ~ \" \";\n   \
    \ }\n    return std.string.chomp(str);\n}\nunittest\n{\n    alias candidate =\
    \ sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxvthuulh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n\t//initiating the dict\n\tauto dict = new string[9];\n\tdict[0]\
    \ = \"zero\";\n\tdict[1] = \"one\";\n\tdict[2] = \"two\";\n\tdict[3] = \"three\"\
    ;\n\tdict[4] = \"four\";\n\tdict[5] = \"five\";\n\tdict[6] = \"six\";\n\tdict[7]\
    \ = \"seven\";\n\tdict[8] = \"eight\";\n\tdict[9] = \"nine\";\n\tint len = numbers.length;\n\
    \t//tokenizing the input string\n\tauto token = Tokenizer(numbers);\n\t//declaring\
    \ an array to hold the numbers\n\tint[] num_arr;\n\t//adding the numbers to the\
    \ array\n\tforeach(a;token)\n\t{\n\t\tnum_arr ~= find(dict,a);\n\t}\n\t//sorting\
    \ the array\n\tnum_arr.sort;\n\t//initializing the output string\n\tstring out_str;\n\
    \t//adding the numbers to the output string after converting them to a string\n\
    \tforeach(a;num_arr)\n\t{\n\t\tif(a == 0)\n\t\t{\n\t\t\tout_str ~= \"zero \";\n\
    \t\t}\n\t\telse if(a == 1)\n\t\t{\n\t\t\tout_str ~= \"one \";\n\t\t}\n\t\telse\
    \ if(a == 2)\n\t\t{\n\t\t\tout_str ~= \"two \";\n\t\t}\n\t\telse if(a == 3)\n\t\
    \t{\n\t\t\tout_str ~= \"three \";\n\t\t}\n\t\telse if(a == 4)\n\t\t{\n\t\t\tout_str\
    \ ~= \"four \";\n\t\t}\n\t\telse if(a == 5)\n\t\t{\n\t\t\tout_str ~= \"five \"\
    ;\n\t\t}\n\t\telse if(a == 6)\n\t\t{\n\t\t\tout_str ~= \"six \";\n\t\t}\n\t\t\
    else if(a == 7)\n\t\t{\n\t\t\tout_str ~= \"seven \";\n\t\t}\nunittest\n{\n   \
    \ alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n  \
    \  assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three five\
    \ nine\") == \"three five nine\");\n    assert(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpls_z3qy0.d(74): Error: found \''unittest\'' instead of statement\n/tmp/tmpls_z3qy0.d(84):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpls_z3qy0.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    immutable int [] k = [5,1,5];\n    immutable int len = k.length;\n\
    \    immutable int [len] l = [0,1,2];\n    writeln(k);\n    writeln(l);\n    if\
    \ (k == l)\n        writeln(\"hello\");\n    //int[20] a;\n    //double[20] b;\n\
    \    string[20] c;\n    writeln(sizeof(c));\n    writeln(a);\n    return numbers;\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv1ccx6_h.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    auto nums = numbers.split();\n    auto map = [\n         \
    \   \"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"\
    , \"eight\", \"nine\"\n    ];\n    auto keys = map.keys;\n    nums.sort!((a, b)\
    \ => keys.indexOf(a) < keys.indexOf(b));\n    return nums.join(\" \");\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkjeun_3e.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014458

name: HumanEval_162_string_to_md5
language: d
results:
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    // Check if\
    \ the string is null or empty. If so, return a null string.\n    if (text.empty)\
    \ return Nullable!(string).init;\n    \n    // Compute the md5 hash of the given\
    \ string.\n    auto md5 = new MD5;\n    md5.put(text);\n    return md5.finish().idup;\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpf6nool2c.d(15): Error: no property `empty` for type `string`\\\
    n/tmp/tmpf6nool2c.d(18): Error: undefined identifier `MD5`\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf6nool2c.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0) return null;\n    import std.digest.md;\n    import std.conv;\n    return\
    \ to!string(MD5(text));\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8lm6fj_n.d(17): Error: cannot implicitly convert expression `text`\
    \ of type `string` to `uint[4]`\\n/tmp/tmp8lm6fj_n.d(14): Error: cannot implicitly\
    \ convert expression `null` of type `typeof(null)` to `Nullable!string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8lm6fj_n.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0) \n    {\n        return null;\n    }\n    //md5 context\n    import std.digest.md;\n\
    \    import std.digest.md5;\n    MD5Context ctx;\n    MD5Init(ctx);\n    MD5Update(ctx,\
    \ cast(ubyte[])text);\n    ubyte[] digest = new ubyte[16];\n    MD5Final(digest,\
    \ ctx);\n    //returning hash\n    char[] str;\n    char[] alphabet = \"0123456789abcdef\"\
    ;\n    foreach (i; digest)\n    {\n        ubyte n = i;\n        str ~= alphabet[n\
    \ >> 4];\n        str ~= alphabet[n & 0xF];\n    }\n    return to!string(str);\n\
    }\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppxm022cw.d(37): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppxm022cw.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    // [!] Returns\
    \ either null, or a not null md5 hash string\n    // [!] If text is an empty string,\
    \ return null\n    assert(text.length > 0);\n    Nullable!(string) hash = null;\n\
    \    auto digest = text.toUTF8().sha1();\n    foreach(c; digest) {\n        if\
    \ (hash.isNull) {\n            hash = c.to!string;\n        } else {\n       \
    \     hash ~= c.to!string;\n        }\n    }\n    return hash;\n}\n/*\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpnhrqgm7c.d(28): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpnhrqgm7c.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0) return null;\n    import crypto.md5;\n    return cast(Nullable!(string))\
    \ md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n    \
    \    auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp0fueujx8.d(15): Error: module `md5` is in file \\'crypto/md5.d\\\
    ' which cannot be read\\nimport path[0] = /tmp\\nimport path[1] = /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos\\\
    nimport path[2] = /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/druntime/import\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp0fueujx8.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0) \n    {\n        return null;\n    }\n    import std.digest.md;\n    return\
    \ cast(Nullable!(string))(md.md5(text));\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpw50sep0z.d(19): Error: undefined identifier `md`\\n/tmp/tmpw50sep0z.d(16):\
    \ Error: cannot implicitly convert expression `null` of type `typeof(null)` to\
    \ `Nullable!string`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw50sep0z.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n\tif (text.length\
    \ > 0) \n\t{\n\t\talias Hasher = HashMD5!();\n\t\tHasher.finish(cast(ubyte[])text);\n\
    \t\tauto md5 = text[0..Hasher.digestSize];\n\t\treturn md5.length == 0 ? null\
    \ : md5;\n\t}\n\treturn null;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp22zpv5dd.d(16): Error: template instance `HashMD5!()` template\
    \ `HashMD5` is not defined\\n/tmp/tmp22zpv5dd.d(21): Error: cannot implicitly\
    \ convert expression `null` of type `typeof(null)` to `Nullable!string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp22zpv5dd.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ string_to_md5(string text)\n    {\n        if (text == \"\")\n        {\n  \
    \          return null;\n        }\n        import std.md5;\n        return text.md5;\n\
    \    }\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto\
    \ result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get\
    \ == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpaj79e_t4.d(20): Error: module `md5` is in file \\'std/md5.d\\\
    ' which cannot be read\\nimport path[0] = /tmp\\nimport path[1] = /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos\\\
    nimport path[2] = /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/druntime/import\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpaj79e_t4.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    import std.digest.md;\n\
    \    import std.conv;\n    return (text.length!=0) ? text.md5.to!string.toLower\
    \ : null;\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n   \
    \     auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpp11s0w0d.d(18): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpp11s0w0d.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ result;\n    if (text.length)\n    {\n        import std.md5;\n        import\
    \ std.conv;\n        md5.Digest digest = to!md5.Digest(text);\n        result\
    \ = to!string(digest);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp_j6cyyjw.d(17): Error: module `md5` is in file \\'std/md5.d\\\
    ' which cannot be read\\nimport path[0] = /tmp\\nimport path[1] = /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos\\\
    nimport path[2] = /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/druntime/import\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_j6cyyjw.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    import std.string;\n\
    \    import std.digest.md;\n    return text.length != 0 ? md5(text).encode!string.toLower\
    \ : null;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n       \
    \ auto result = candidate(\"Hello world\");\n        assert(!result.isNull &&\
    \ result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result\
    \ = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result\
    \ = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfkf0g1n_.d(16): Error: undefined identifier `md5`\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfkf0g1n_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    import std.conv;\n\
    \    Nullable!(string) result;\n    if (text.length > 0)\n    {\n        auto\
    \ digest = MD5(text.bytearray);\n        string str;\n        foreach (const d;\
    \ digest)\n        {\n            str ~= format(\"%02x\", cast(int)d);\n     \
    \   }\n        result = str;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpz67zkzaz.d(18): Error: undefined identifier `MD5`\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz67zkzaz.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    char[16] hash;\n    md5(toStringz(text),\
    \ hash.ptr);\n    return std.string.toStringz(std.string.format(\"%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x\"\
    , \n        hash[0], hash[1], hash[2], hash[3], \n        hash[4], hash[5], hash[6],\
    \ hash[7], \n        hash[8], hash[9], hash[10], hash[11], \n        hash[12],\
    \ hash[13], hash[14], hash[15]));\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9t2lugrk.d(25): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9t2lugrk.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    import std.digest.md;\n\
    \    if (text.length > 0) {\n        return to!(Nullable!(string))(MD5(text));\n\
    \    }\n    return null;\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpagl_1wd2.d(20): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpagl_1wd2.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    static import\
    \ std.digest.md5;\n    static import std.conv;\n    static import std.array;\n\
    \    static import std.range;\n    static import std.string;\n    static import\
    \ std.algorithm;\n    static import std.format;\n    static import std.typecons;\n\
    \    if(text.length == 0)\n        return Nullable!(string)();\n    else \n  \
    \  {\n        auto md5 = MD5.toMD5(text);\n        return Nullable!(string)(to!string(md5));\n\
    \    }\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto\
    \ result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get\
    \ == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9qw9ao17.d(14): Error: module `md5` is in file \\'std/digest/md5.d\\\
    ' which cannot be read\\nimport path[0] = /tmp\\nimport path[1] = /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos\\\
    nimport path[2] = /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/druntime/import\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9qw9ao17.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0) return null;\n    return std.digest.md5(text);\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4j0uu1uu.d(15): Error: undefined identifier `digest` in package\
    \ `std`\\n/tmp/tmp4j0uu1uu.d(14): Error: cannot implicitly convert expression\
    \ `null` of type `typeof(null)` to `Nullable!string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmp4j0uu1uu.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    import tango.core.convert.TextConvert;\n\
    \    import tango.core.hash.Md5;\n    import tango.core.Buffer;\n    import tango.core.ByteBuffer;\n\
    \    import tango.core.bitmanip.BitManip;\n    import tango.core.bitmanip.BitKeeper;\n\
    \    import tango.core.bitmanip.BitWriter;\n    import tango.core.bitmanip.BitReader;\n\
    \    import tango.core.bitmanip.BigEndian;\n    import tango.core.bitmanip.LittleEndian;\n\
    \    import tango.core.bitmanip.BigEndianUTF8;\n    import tango.core.bitmanip.LittleEndianUTF8;\n\
    \    import tango.core.bitmanip.UTF8BOM;\n    import tango.core.bitmanip.UTF16;\n\
    \    import tango.core.bitmanip.UTF32;\n    import tango.core.bitmanip.LE;\n \
    \   import tango.core.bitmanip.BE;\n    import tango.core.bitmanip.UTF8;\n   \
    \ import tango.core.bitmanip.UTF8BOM;\n    import tango.core.bitmanip.UTF16;\n\
    \    import tango.core.bitmanip.UTF32;\n    import tango.core.bitmanip.BITS;\n\
    \    import tango.core.bitmanip.BITS_MSB;\n    import tango.core.bitmanip.BITS_LSB;\n\
    \    import tango.core.bitmanip.BitConverter;\n    import tango.core.bitmanip.BitReader;\n\
    \    import tango.core.bitmanip.BitWriter;\n    import tango.core.bitmanip.BitKeeper;\n\
    \    import tango.core.bitmanip.BitKeeper;\n    import tango.core.bitmanip.BitReader;\n\
    \    import tango.core.bitmanip.BitWriter;\n    import tango.core.bitmanip.BitConverter;\n\
    \    import tango.core.bitmanip.ByteBuffer;\n\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpiv5wopo2.d(48): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiv5wopo2.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    import std.digest.md;\n    import std.conv;\n\
    \    return to!string(MD5(text.toUtf8()));\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9ayog5_b.d(18): Error: no property `toUtf8` for type `string`\\\
    n/tmp/tmp9ayog5_b.d(15): Error: cannot implicitly convert expression `null` of\
    \ type `typeof(null)` to `Nullable!string`\\nFailed: [\"dmd\", \"-unittest\",\
    \ \"-v\", \"-o-\", \"/tmp/tmp9ayog5_b.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ res = Nullable!(string).init;\n    auto hash_values = md5(text);\n    size_t\
    \ i = 0;\n    foreach(value; hash_values) {\n        char buf[16];\n        ubyte\
    \ uv = cast(ubyte)value;\n        // get the hex representation and append to\
    \ result string\n        auto hexstr = to!string(uv, buf, 16);\n        if(i ==\
    \ 0) {\n            res.assign(hexstr);\n        } else {\n            res.assign(res.get!string\
    \ ~ hexstr);\n        }\n        i++;\n    }\n    return res;\n}\n/*\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpd9j39vwd.d(18): Deprecation: instead of C-style syntax, use D-style\
    \ syntax `char[16] buf`\\n/tmp/tmpd9j39vwd.d(31): Error: unterminated /* */ comment\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpd9j39vwd.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ nullable_md5 = null;\n    if(text.length > 0) \n    {\n        import std.md5;\n\
    \        alias md5 md5;\n        alias DigestType = ubyte[16];\n        DigestType\
    \ digest = text.md5();\n        nullable_md5 = digest.format(\"%02x\" * digest.length);\n\
    \    }\n    return nullable_md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppgreuval.d(17): Error: module `md5` is in file \\'std/md5.d\\\
    ' which cannot be read\\nimport path[0] = /tmp\\nimport path[1] = /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos\\\
    nimport path[2] = /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/druntime/import\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmppgreuval.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError

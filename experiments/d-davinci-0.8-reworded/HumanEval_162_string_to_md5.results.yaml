language: d
name: HumanEval_162_string_to_md5
results:
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    // Check if\
    \ the string is null or empty. If so, return a null string.\n    if (text.empty)\
    \ return Nullable!(string).init;\n    \n    // Compute the md5 hash of the given\
    \ string.\n    auto md5 = new MD5;\n    md5.put(text);\n    return md5.finish().idup;\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpi32ruv29.d(15): Error: no property `empty` for type `string`

    /tmp/tmpi32ruv29.d(18): Error: undefined identifier `MD5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi32ruv29.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164236
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0) return null;\n    import std.digest.md;\n    import std.conv;\n    return\
    \ to!string(MD5(text));\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpoterymvz.d(17): Error: cannot implicitly convert expression `text`
    of type `string` to `uint[4]`

    /tmp/tmpoterymvz.d(14): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoterymvz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164236
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0) \n    {\n        return null;\n    }\n    //md5 context\n    import std.digest.md;\n\
    \    import std.digest.md5;\n    MD5Context ctx;\n    MD5Init(ctx);\n    MD5Update(ctx,\
    \ cast(ubyte[])text);\n    ubyte[] digest = new ubyte[16];\n    MD5Final(digest,\
    \ ctx);\n    //returning hash\n    char[] str;\n    char[] alphabet = \"0123456789abcdef\"\
    ;\n    foreach (i; digest)\n    {\n        ubyte n = i;\n        str ~= alphabet[n\
    \ >> 4];\n        str ~= alphabet[n & 0xF];\n    }\n    return to!string(str);\n\
    }\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4bmbt9u1.d(37): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4bmbt9u1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164235
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    // [!] Returns\
    \ either null, or a not null md5 hash string\n    // [!] If text is an empty string,\
    \ return null\n    assert(text.length > 0);\n    Nullable!(string) hash = null;\n\
    \    auto digest = text.toUTF8().sha1();\n    foreach(c; digest) {\n        if\
    \ (hash.isNull) {\n            hash = c.to!string;\n        } else {\n       \
    \     hash ~= c.to!string;\n        }\n    }\n    return hash;\n}\n/*\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpiqqssks4.d(28): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiqqssks4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164235
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0) return null;\n    import crypto.md5;\n    return cast(Nullable!(string))\
    \ md5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n    \
    \    auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqbpxekml.d(15): Error: module `md5` is in file ''crypto/md5.d''
    which cannot be read

    import path[0] = /tmp

    import path[1] = /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos

    import path[2] = /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/druntime/import

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqbpxekml.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164235
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0) \n    {\n        return null;\n    }\n    import std.digest.md;\n    return\
    \ cast(Nullable!(string))(md.md5(text));\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppohovysr.d(19): Error: undefined identifier `md`

    /tmp/tmppohovysr.d(16): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppohovysr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164236
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n\tif (text.length\
    \ > 0) \n\t{\n\t\talias Hasher = HashMD5!();\n\t\tHasher.finish(cast(ubyte[])text);\n\
    \t\tauto md5 = text[0..Hasher.digestSize];\n\t\treturn md5.length == 0 ? null\
    \ : md5;\n\t}\n\treturn null;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpozt283uz.d(16): Error: template instance `HashMD5!()` template
    `HashMD5` is not defined

    /tmp/tmpozt283uz.d(21): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpozt283uz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164236
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ string_to_md5(string text)\n    {\n        if (text == \"\")\n        {\n  \
    \          return null;\n        }\n        import std.md5;\n        return text.md5;\n\
    \    }\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto\
    \ result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get\
    \ == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cnqozki.d(20): Error: module `md5` is in file ''std/md5.d'' which
    cannot be read

    import path[0] = /tmp

    import path[1] = /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos

    import path[2] = /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/druntime/import

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cnqozki.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164235
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    import std.digest.md;\n\
    \    import std.conv;\n    return (text.length!=0) ? text.md5.to!string.toLower\
    \ : null;\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n   \
    \     auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphpuom8vl.d(18): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphpuom8vl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164235
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ result;\n    if (text.length)\n    {\n        import std.md5;\n        import\
    \ std.conv;\n        md5.Digest digest = to!md5.Digest(text);\n        result\
    \ = to!string(digest);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1lf4b1b6.d(17): Error: module `md5` is in file ''std/md5.d'' which
    cannot be read

    import path[0] = /tmp

    import path[1] = /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos

    import path[2] = /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/druntime/import

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1lf4b1b6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164235
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    import std.string;\n\
    \    import std.digest.md;\n    return text.length != 0 ? md5(text).encode!string.toLower\
    \ : null;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n       \
    \ auto result = candidate(\"Hello world\");\n        assert(!result.isNull &&\
    \ result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result\
    \ = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result\
    \ = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp16tulwwb.d(16): Error: undefined identifier `md5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp16tulwwb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164236
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    import std.conv;\n\
    \    Nullable!(string) result;\n    if (text.length > 0)\n    {\n        auto\
    \ digest = MD5(text.bytearray);\n        string str;\n        foreach (const d;\
    \ digest)\n        {\n            str ~= format(\"%02x\", cast(int)d);\n     \
    \   }\n        result = str;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmc0b8kon.d(18): Error: undefined identifier `MD5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmc0b8kon.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164236
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    char[16] hash;\n    md5(toStringz(text),\
    \ hash.ptr);\n    return std.string.toStringz(std.string.format(\"%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x\"\
    , \n        hash[0], hash[1], hash[2], hash[3], \n        hash[4], hash[5], hash[6],\
    \ hash[7], \n        hash[8], hash[9], hash[10], hash[11], \n        hash[12],\
    \ hash[13], hash[14], hash[15]));\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp__5dmr7m.d(25): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp__5dmr7m.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164235
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    import std.digest.md;\n\
    \    if (text.length > 0) {\n        return to!(Nullable!(string))(MD5(text));\n\
    \    }\n    return null;\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1r4r3t3f.d(20): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1r4r3t3f.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164235
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    static import\
    \ std.digest.md5;\n    static import std.conv;\n    static import std.array;\n\
    \    static import std.range;\n    static import std.string;\n    static import\
    \ std.algorithm;\n    static import std.format;\n    static import std.typecons;\n\
    \    if(text.length == 0)\n        return Nullable!(string)();\n    else \n  \
    \  {\n        auto md5 = MD5.toMD5(text);\n        return Nullable!(string)(to!string(md5));\n\
    \    }\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto\
    \ result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get\
    \ == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7592bw41.d(14): Error: module `md5` is in file ''std/digest/md5.d''
    which cannot be read

    import path[0] = /tmp

    import path[1] = /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos

    import path[2] = /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/druntime/import

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7592bw41.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164235
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0) return null;\n    return std.digest.md5(text);\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpcgnu736x.d(15): Error: undefined identifier `digest` in package
    `std`

    /tmp/tmpcgnu736x.d(14): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcgnu736x.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164236
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    import tango.core.convert.TextConvert;\n\
    \    import tango.core.hash.Md5;\n    import tango.core.Buffer;\n    import tango.core.ByteBuffer;\n\
    \    import tango.core.bitmanip.BitManip;\n    import tango.core.bitmanip.BitKeeper;\n\
    \    import tango.core.bitmanip.BitWriter;\n    import tango.core.bitmanip.BitReader;\n\
    \    import tango.core.bitmanip.BigEndian;\n    import tango.core.bitmanip.LittleEndian;\n\
    \    import tango.core.bitmanip.BigEndianUTF8;\n    import tango.core.bitmanip.LittleEndianUTF8;\n\
    \    import tango.core.bitmanip.UTF8BOM;\n    import tango.core.bitmanip.UTF16;\n\
    \    import tango.core.bitmanip.UTF32;\n    import tango.core.bitmanip.LE;\n \
    \   import tango.core.bitmanip.BE;\n    import tango.core.bitmanip.UTF8;\n   \
    \ import tango.core.bitmanip.UTF8BOM;\n    import tango.core.bitmanip.UTF16;\n\
    \    import tango.core.bitmanip.UTF32;\n    import tango.core.bitmanip.BITS;\n\
    \    import tango.core.bitmanip.BITS_MSB;\n    import tango.core.bitmanip.BITS_LSB;\n\
    \    import tango.core.bitmanip.BitConverter;\n    import tango.core.bitmanip.BitReader;\n\
    \    import tango.core.bitmanip.BitWriter;\n    import tango.core.bitmanip.BitKeeper;\n\
    \    import tango.core.bitmanip.BitKeeper;\n    import tango.core.bitmanip.BitReader;\n\
    \    import tango.core.bitmanip.BitWriter;\n    import tango.core.bitmanip.BitConverter;\n\
    \    import tango.core.bitmanip.ByteBuffer;\n\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbihhz1s7.d(48): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbihhz1s7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164235
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    import std.digest.md;\n    import std.conv;\n\
    \    return to!string(MD5(text.toUtf8()));\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpeedcbath.d(18): Error: no property `toUtf8` for type `string`

    /tmp/tmpeedcbath.d(15): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeedcbath.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164236
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ res = Nullable!(string).init;\n    auto hash_values = md5(text);\n    size_t\
    \ i = 0;\n    foreach(value; hash_values) {\n        char buf[16];\n        ubyte\
    \ uv = cast(ubyte)value;\n        // get the hex representation and append to\
    \ result string\n        auto hexstr = to!string(uv, buf, 16);\n        if(i ==\
    \ 0) {\n            res.assign(hexstr);\n        } else {\n            res.assign(res.get!string\
    \ ~ hexstr);\n        }\n        i++;\n    }\n    return res;\n}\n/*\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphrr62cnj.d(18): Deprecation: instead of C-style syntax, use D-style
    syntax `char[16] buf`

    /tmp/tmphrr62cnj.d(31): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphrr62cnj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164235
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ nullable_md5 = null;\n    if(text.length > 0) \n    {\n        import std.md5;\n\
    \        alias md5 md5;\n        alias DigestType = ubyte[16];\n        DigestType\
    \ digest = text.md5();\n        nullable_md5 = digest.format(\"%02x\" * digest.length);\n\
    \    }\n    return nullable_md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp31hlyrkd.d(17): Error: module `md5` is in file ''std/md5.d'' which
    cannot be read

    import path[0] = /tmp

    import path[1] = /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos

    import path[2] = /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/druntime/import

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp31hlyrkd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164235
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    version(none)\
    \ \n    {\n        import std.format;\n        return text.md5of;\n    }\n   \
    \ return text.md5of;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n\
    {\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpd1t_ss70.d(19): Error: no property `md5of` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd1t_ss70.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164236
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    import std.digest.md;\n    return format!(\"\
    %x\", cast(MD5)text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n\
    {\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsw68fbxj.d(17): Error: template instance `format!("%x", cast(MD5)text)`
    template `format` is not defined

    /tmp/tmpsw68fbxj.d(15): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsw68fbxj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164236
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    MD5 md5 = MD5(text);\n    auto str = format(\"\
    %(x)08x%(x)08x%(x)08x%(x)08x\",\n        md5.result[0], md5.result[1], md5.result[2],\
    \ md5.result[3]);\n    return str;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprtnwk2sg.d(16): Error: undefined identifier `MD5`

    /tmp/tmprtnwk2sg.d(16): Error: undefined identifier `MD5`

    /tmp/tmprtnwk2sg.d(17): Error: undefined identifier `format`

    /tmp/tmprtnwk2sg.d(15): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprtnwk2sg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164236
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ md5 = null;\n    import core.stdc.stdlib : calloc, free;\n    import core.stdc.string\
    \ : memcpy;\n    ubyte[] hash = cast(ubyte[]) calloc(MD5_DIGEST_LENGTH, MD5_DIGEST_LENGTH);\n\
    \    MD5_CTX context;\n    if (MD5_Init(&context) == 1)\n    {\n        if (MD5_Update(&context,\
    \ cast(ubyte[])text.ptr, text.length) == 1)\n        {\n            if (MD5_Final(hash,\
    \ &context) == 1)\n            {\n                md5 = md5_ubyte_to_string(hash);\n\
    \            }\n        }\n    }\n    free(hash);\n    return md5;\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpz9ho2hqk.d(17): Error: undefined identifier `MD5_DIGEST_LENGTH`

    /tmp/tmpz9ho2hqk.d(17): Error: undefined identifier `MD5_DIGEST_LENGTH`

    /tmp/tmpz9ho2hqk.d(18): Error: undefined identifier `MD5_CTX`

    /tmp/tmpz9ho2hqk.d(19): Error: undefined identifier `MD5_Init`

    /tmp/tmpz9ho2hqk.d(21): Error: undefined identifier `MD5_Update`

    /tmp/tmpz9ho2hqk.d(23): Error: undefined identifier `MD5_Final`

    /tmp/tmpz9ho2hqk.d(25): Error: undefined identifier `md5_ubyte_to_string`

    /tmp/tmpz9ho2hqk.d(29): Error: function `core.stdc.stdlib.free(void* ptr)` is
    not callable using argument types `(ubyte[])`

    /tmp/tmpz9ho2hqk.d(29):        cannot pass argument `hash` of type `ubyte[]` to
    parameter `void* ptr`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz9ho2hqk.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164236
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{ \n    import std.digest.md;\n\
    \    import std.digest.hex;\n    import std.range;\n    import std.conv;\n   \
    \ return (text.empty) ? null : \n        to!string(toHexString(md5(text)));\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpa_v_hhxs.d(15): Error: module `hex` is in file ''std/digest/hex.d''
    which cannot be read

    import path[0] = /tmp

    import path[1] = /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos

    import path[2] = /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/druntime/import

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa_v_hhxs.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164235
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0) \n    {\n        return null;\n    }\n    else \n    {\n        import\
    \ std.digest.md;\n        return to!string(md5(text));\n    }\n}\nunittest\n{\n\
    \    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmptg2lbir5.d(21): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmptg2lbir5.d(16): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptg2lbir5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164236
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    import tango.io.Stdout;\n    auto hasher =\
    \ new MD5();\n    hasher.add(text);\n    char[] hash = hasher.digestString;\n\
    \    return hash.idup;\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyhyz2v4s.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyhyz2v4s.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164235
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ result;\n    if (text.length > 0)\n    {\n        auto m = md5(text);\n    \
    \    // Transform the md5 hash to a string \n        // of hexadecimal numbers\n\
    \        foreach (ref n; m)\n        {\n            result ~= format(\"%02x\"\
    , n);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4lkgilz1.d(17): Error: undefined identifier `md5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4lkgilz1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164236
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if(text.length\
    \ == 0) return null;\n    import std.digest.md;\n    return md.digest(md.MD5,\
    \ text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto\
    \ result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get\
    \ == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx0exnsu7.d(16): Error: undefined identifier `md`

    /tmp/tmpx0exnsu7.d(14): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx0exnsu7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164236
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ result;\n    if (text == \"\")\n    {\n        result = null;\n    }\n    else\n\
    \    {\n        import crypto.digest.md5;\n        auto md5_hash = Md5(text);\n\
    \        result = to!string(md5_hash);\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2w20xrdz.d(21): Error: module `md5` is in file ''crypto/digest/md5.d''
    which cannot be read

    import path[0] = /tmp

    import path[1] = /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos

    import path[2] = /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/druntime/import

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2w20xrdz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164235
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    version(all)\n\
    \    {\n        import std.file : write;\n        import std.file : writef;\n\
    \        import std.file : readText;\n        import std.array : splitLines;\n\
    \        import std.algorithm : map;\n        import std.string : strip;\n   \
    \     import std.algorithm : filter;\n        \n        auto programPath = thisExePath.dirName.filePath(\"\
    c_md5\");\n        if (!exists(programPath))\n        {\n            version(Windows)\n\
    \            {\n                programPath = programPath ~ \".exe\";\n      \
    \      }\n            else\n            {\n                programPath = programPath\
    \ ~ \".linux\";\n            }\n        }\n        if (!exists(programPath))\n\
    \        {\n            import std.stdio : stderr;\n            stderr.writeln(\"\
    Cannot find the md5 executable\\n\");\n            return null;\n        }\n \
    \       try\n        {\n            if (text.length == 0)\n            {\n   \
    \             return null;\n            }\n            string tempFile = \"__temp_\"\
    ;\n            tempFile = appendName(tempFile, random(0xFFFFFFFF));\n        \
    \    write(tempFile, text);\n            auto outputFile = tempFile ~ \".md5\"\
    ;\n            if (exists(outputFile))\n            {\n                import\
    \ std.file : remove;\n                remove(outputFile);\n            }\n   \
    \         if (system(programPath ~ \" \" ~ tempFile ~ \" \" ~ outputFile) != 0)\n\
    \            {\n                import std.stdio : stderr;\n                stderr.writeln(\"\
    md5 did not run successfully\\n\");\n                return null;\n          \
    \  }\n            if (!exists(outputFile))\n            {\n                import\
    \ std.stdio : stderr;\n                stderr.writeln(\"md5 did not generate the\
    \ output file\\n\");\n                return null;\n            }\n          \
    \  string hash = readText(outputFile).strip().splitLines().filter!(x => x.length\
    \ > 0)[0];\n            import std.file : remove;\n            remove(tempFile);\n\
    \            remove(outputFile);\n            return hash;\n        }\n      \
    \  catch (Exception e)\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n\
    {\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbgi3tb28.d(77): Error: found `unittest` instead of statement

    /tmp/tmpbgi3tb28.d(102): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbgi3tb28.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164235
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if( text.length\
    \ == 0 ) \n        return null;\n    \n    ubyte[16] digest;\n    digest = text.toMd5();\n\
    \    return digest.toHexString();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphkim39yj.d(18): Error: no property `toMd5` for type `string`

    /tmp/tmphkim39yj.d(19): Error: no property `toHexString` for type `ubyte[16]`

    /tmp/tmphkim39yj.d(15): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphkim39yj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164236
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0) return null;\n    return format(\"%s\", md5(text));\n}\n/*\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfg7_0d0s.d(17): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfg7_0d0s.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164235
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if(!text.length)\n\
    \        return null;\n    import crypto.hash;\n    return nullable(convert!(string)(md5(text).sum));\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpj6y0r0rw.d(16): Error: module `hash` is in file ''crypto/hash.d''
    which cannot be read

    import path[0] = /tmp

    import path[1] = /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos

    import path[2] = /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/druntime/import

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj6y0r0rw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164235
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    import std.array;\n\
    \    import std.conv;\n    import std.math;\n    import std.string;\n    import\
    \ std.typecons;\n    import std.zip;\n    immutable result = null;\n    import\
    \ std.digest.md;\n    import std.digest.md5;\n    if (text.length > 0) {\n   \
    \     result = text.toLower().md5.toHexString;\n    }\n    return result;\n}\n\
    /*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphj_1nlfm.d(28): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphj_1nlfm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164235
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    import std.conv\
    \ : to;\n    import std.digest.md : digest;\n    import std.range : iota;\n  \
    \  import std.algorithm : map;\n    import std.format : format;\n    auto ret\
    \ = digest!(\"md5\")(text);\n    return ret.iota.map!(a => format(\"%02x\", a)).joiner(\"\
    \").to!string;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n  \
    \      auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmuadh9hv.d(19): Error: template `std.digest.digest` cannot deduce
    function from argument types `!("md5")(string)`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/digest/package.d(432):        `std.digest.digest(Hash,
    Range)(auto ref Range range) if (!isArray!Range && isDigestibleRange!Range)`

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/digest/package.d(458):        `std.digest.digest(Hash,
    T...)(scope const T data) if (allSatisfy!(isArray, typeof(data)))`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmuadh9hv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164236
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    return std.digest.md5String(text);\n\
    }\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwxhx3at9.d(16): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwxhx3at9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164235
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{ \n    if (text.length\
    \ == 0)\n        return Nullable!(string)().init;\n    import std.digest.md;\n\
    \    auto hash = MD5(text);\n    return hash.toHexString;\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpygj58uzy.d(17): Error: cannot implicitly convert expression `text`
    of type `string` to `uint[4]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpygj58uzy.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164236
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    int i;\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8xdlhmt3.d(15): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8xdlhmt3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164235
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length)\n\
    \    {\n        // create a buffer that is the same size as the MD5 hash\n   \
    \     import std.digest.md;\n        MD5 md5 = MD5(text);\n        char[16] buffer;\n\
    \        // copy the bytes from the MD5 object\n        md5.bytes[] bytes = md5.bytes;\n\
    \        foreach (i, b; bytes)\n        {\n            buffer[i] = b;\n      \
    \  }\n        // produce a string of hex digits representing each byte\n     \
    \   return HexString(buffer);\n    }\n    else\n    {\n        return null;\n\
    \    }\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto\
    \ result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get\
    \ == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkinmx95e.d(18): Error: cannot implicitly convert expression `text`
    of type `string` to `uint[4]`

    /tmp/tmpkinmx95e.d(21): Error: no property `bytes` for type `MD5`

    /tmp/tmpkinmx95e.d(21): Error: no property `bytes` for type `MD5`

    /tmp/tmpkinmx95e.d(27): Error: undefined identifier `HexString`, did you mean
    template `toHexString(Order order = Order.increasing, ulong num, LetterCase letterCase
    = LetterCase.upper)(in ubyte[num] digest)`?

    /tmp/tmpkinmx95e.d(31): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkinmx95e.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164236
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0) \n    {\n        return null;\n    }\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx0v1m0cs.d(18): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx0v1m0cs.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164235
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    return to!(Nullable!(string)) std.digest.digestMD5(text.toUTF8()).toHexString();\n\
    }\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9qd1egl7.d(16): Error: found `std` when expecting `;` following
    `return` statement

    /tmp/tmp9qd1egl7.d(18): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9qd1egl7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164235
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    import std.digest.md;\n\
    \    return text.empty ? null : md.md5(text);\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpeei8gq1b.d(15): Error: no property `empty` for type `string`

    /tmp/tmpeei8gq1b.d(15): Error: undefined identifier `md`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeei8gq1b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164236
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if( text.length\
    \ == 0 )\n        return null;\n    \n    import std.digest.md;\n    return to!string(MD5.digest(text));\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpc29cmn6f.d(18): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmpc29cmn6f.d(15): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc29cmn6f.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164236
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ result;\n    scope(exit) auto fin = scopeExit(result = to!string(md5.finish().digestOf()));\n\
    \    md5.process(text);\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfx0zku22.d(15): Error: undefined identifier `scopeExit`

    /tmp/tmpfx0zku22.d(16): Error: undefined identifier `md5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfx0zku22.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164236
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ < 1)\n        return Nullable!(string)();\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpouervq_2.d(16): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpouervq_2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164235
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    import std.digest.md;\n\
    \    if (text.length < 1) \n    {\n        return null;\n    }\n    return to!string(md.md5(text));\n\
    }\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpt3rb99lb.d(21): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt3rb99lb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164235
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if(!text) \n\
    \        return null;\n    return md5(text).to!string;\n}\n/*\nunittest\n{\n \
    \   alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpoxea2r0x.d(18): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoxea2r0x.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164235
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ > 0) \n    {\n        Nullable!MD5 md5 = md5(text.dup);\n        if (!md5.isNull)\
    \ \n        {\n            return hexstr(md5.get.digest);\n        }\n    }\n\
    \    return null;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n\
    \        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb32zjs_6.d(16): Error: undefined identifier `MD5`

    /tmp/tmpb32zjs_6.d(16): Error: undefined identifier `md5`

    /tmp/tmpb32zjs_6.d(19): Error: undefined identifier `hexstr`

    /tmp/tmpb32zjs_6.d(22): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb32zjs_6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164237
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    import hash.md5;\n\
    \    import std.conv;\n    import std.string;\n    return text.length == 0 ? null\
    \ : text.md5.map!(x => format(\"%02x\", x)).join;\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyampj1xa.d(14): Error: module `md5` is in file ''hash/md5.d'' which
    cannot be read

    import path[0] = /tmp

    import path[1] = /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos

    import path[2] = /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/druntime/import

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyampj1xa.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164236
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return Nullable!(string)();\n    auto md5 = new MD5;\n    md5.put(text);\n\
    \    md5.finish();\n    return to!string(md5.array());\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk5r_4mpp.d(16): Error: undefined identifier `MD5`

    /tmp/tmpk5r_4mpp.d(19): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk5r_4mpp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164237
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return Nullable!(string)();\n    \n    import std.conv;\n   \
    \ return hex(to!(immutable(ubyte)[])(md5(to!(ubyte[])(text))));\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3udfnqk8.d(18): Error: undefined identifier `hex`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3udfnqk8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164237
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    import std.algorithm\
    \ : equal;\n    import std.conv : to;\n    import std.math : isNaN;\n    import\
    \ std.range : iota;\n    import std.bitmanip : bswap;\n    import std.array :\
    \ format;\n    import std.typecons : Nullable;\n    import std.math : round;\n\
    \    import std.bigint : BigInt;\n    import std.string : format;\n    import\
    \ std.traits : Unqual;\n    import std.meta : AliasSeq;\n    import std.meta :\
    \ AliasSeqLength;\n    import std.meta : AliasSeqElementType;\n    import std.meta\
    \ : AliasSeqElementAlias;\n    import std.meta : AliasSeqElementAliases;\n   \
    \ import std.meta : AliasSeqElementTypeTuple;\n    import std.meta : Tuple;\n\
    \    import std.meta : staticMap;\n    import std.meta : staticIndexOf;\n    import\
    \ std.meta : staticIndexOfAny;\n    import std.meta : staticIndexOf;\n    import\
    \ std.meta : staticIndexOfAny;\n    import std.meta : staticIndexOf;\n    import\
    \ std.meta : staticIndexOfAny;\n    import std.meta : staticIndexOf;\n    import\
    \ std.meta : staticIndexOfAny;\n    import std.meta : staticIndexOf;\n    import\
    \ std.meta : staticIndexOfAny;\n    import std.meta : staticIndexOf;\n    import\
    \ std.meta : staticIndexOfAny;\n    import std.meta : staticIndexOf;\n    import\
    \ std.meta : staticIndexOfAny;\n    import std.meta : staticIndexOf;\n    import\
    \ std.meta : staticIndexOfAny;\n    import std.meta : staticIndexOf;\n    import\
    \ std.meta : staticIndexOfAny;\n    import std.meta : staticIndexOf;\n    import\
    \ std.meta : staticIndexOfAny;\n    import std.meta : staticIndexOf;\n    import\
    \ std.meta : staticIndexOfAny;\n    import std.meta : staticIndexOf;\n    import\
    \ std.meta : staticIndexOfAny;\n    import std.meta : staticIndexOf;\n    import\
    \ std.meta\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto\
    \ result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get\
    \ == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp40ja2g33.d(59): Error: `;` expected

    /tmp/tmp40ja2g33.d(84): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp40ja2g33.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164236
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    import std.digest.md;\n\
    \    import std.format;\n    return text.empty ? null : format(\"%x\", MD5(text));\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpl18gyn7x.d(16): Error: no property `empty` for type `string`

    /tmp/tmpl18gyn7x.d(16): Error: cannot implicitly convert expression `text` of
    type `string` to `uint[4]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl18gyn7x.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164237
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length)\
    \ \n    {\n        import std.conv;\n        import std.digest.md;\n        alias\
    \ MD5Digest = AliasSeq!(ubyte, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4);\n\
    \        static MD5Digest digest;\n        digest = cast(MD5Digest)MD5(cast(const(ubyte)[])(text));\n\
    \        return to!string(digest);\n    }\n    return null;\n}\nunittest\n{\n\
    \    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpq4afl6ea.d(19): Error: tuple `TList` is used as a type

    /tmp/tmpq4afl6ea.d(23): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq4afl6ea.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164237
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n\tif (text.length\
    \ == 0) \n\t{\n\t\treturn null;\n\t}\n\t\n\tMD5Context ctx;\n\tMD5Init(ctx);\n\
    \tMD5Update(ctx, cast(ubyte[])text, text.length);\n\tMD5Final(ctx);\n\t\n\tubyte[]\
    \ output = new ubyte[16];\n\tcast(ubyte[16])ctx.buf = output;\n\t\n\treturn to!string(output);\n\
    }\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfj_3ypcu.d(29): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfj_3ypcu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164236
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0) return null;\n    import std.digest.md;\n    auto hash = MD5(text);\n\
    \    return hash.toString;\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp49l4ksmg.d(19): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp49l4ksmg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164236
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    return text.empty\
    \ ? null : text.md5.hex;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk2rl0eiy.d(14): Error: no property `empty` for type `string`

    /tmp/tmpk2rl0eiy.d(14): Error: no property `md5` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk2rl0eiy.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164237
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    import std.digest.md;\n\
    \    if (text.length == 0) return null;\n    return makeMd5(text.toUTF8());\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbaoymetq.d(16): Error: undefined identifier `makeMd5`

    /tmp/tmpbaoymetq.d(15): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbaoymetq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164237
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    return cast(Nullable!(string))(text.empty\
    \ ? null : md5(text));\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpumakduxx.d(14): Error: no property `empty` for type `string`

    /tmp/tmpumakduxx.d(14): Error: undefined identifier `md5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpumakduxx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164237
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    static import\
    \ std.digest.digest;\n    static import std.digest.md;\n    static import std.format;\n\
    \    static import std.conv;\n    static import std.array;\n    static import\
    \ std.string;\n    static import std.algorithm;\n    static import std.range;\n\
    \    static import std.string : to;\n    static import std.range : generate;\n\
    \    static import std.range : cycle;\n    static import std.range : dropExactly;\n\
    \    static import std.array : join;\n    static import std.array : array;\n \
    \   static import std.array : array;\n    static import std.range : retro;\n \
    \   static import std.range : retro;\n    static import std.array : retro;\n \
    \   static import std.algorithm : retro;\n    static import std.algorithm : map;\n\
    \    static import std.algorithm : map;\n    static import std.algorithm : sort;\n\
    \    static import std.algorithm : sort;\n    static import std.algorithm : sort;\n\
    \    static import std.algorithm : retro;\n    static import std.algorithm : retro;\n\
    \    static import std.array : retro;\n    static import std.range : repeat;\n\
    \    static import std.math : sqrt;\n    static import std.range : retro;\n  \
    \  static import std.algorithm : retro;\n    static import std.array : retro;\n\
    \    static import std.range : retro;\n    static import std.range : retro;\n\
    \    static import std.array : retro;\n    static import std.array : retro;\n\
    \    static import std.array : retro;\n    static import std.range : retro;\n\
    \    static import std.range : retro;\n    static import std.range : retro;\n\
    \    static import std.range : retro;\n    static import std.range : retro;\n\
    \    static import std.range : retro;\n    static import std.range : retro;\n\
    \    static import std.range : retro;\n    static import std.range : retro;\n\
    \    static import std.range : retro;\n    static import std.range : retro;\n\
    \    static import std.range : retro;\n    static import std.range : retro;\n\
    \    static import std.range\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpov54bquk.d(22): Error: static import `std` cannot have an import
    bind list

    /tmp/tmpov54bquk.d(23): Error: static import `std` cannot have an import bind
    list

    /tmp/tmpov54bquk.d(24): Error: static import `std` cannot have an import bind
    list

    /tmp/tmpov54bquk.d(25): Error: static import `std` cannot have an import bind
    list

    /tmp/tmpov54bquk.d(26): Error: static import `std` cannot have an import bind
    list

    /tmp/tmpov54bquk.d(27): Error: static import `std` cannot have an import bind
    list

    /tmp/tmpov54bquk.d(28): Error: static import `std` cannot have an import bind
    list

    /tmp/tmpov54bquk.d(29): Error: static import `std` cannot have an import bind
    list

    /tmp/tmpov54bquk.d(30): Error: static import `std` cannot have an import bind
    list

    /tmp/tmpov54bquk.d(31): Error: static import `std` cannot have an import bind
    list

    /tmp/tmpov54bquk.d(32): Error: static import `std` cannot have an import bind
    list

    /tmp/tmpov54bquk.d(33): Error: static import `std` cannot have an import bind
    list

    /tmp/tmpov54bquk.d(34): Erro'
  stdout: ''
  timestamp: 1660164236
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    return hash(text, \"md5\");\n}\n// END string_to_md5\n\
    unittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result =\
    \ candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpheup60yh.d(16): Error: undefined identifier `hash`, did you mean
    function `cosh`?

    /tmp/tmpheup60yh.d(15): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    '
  stdout: ''
  timestamp: 1660164237
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    import std.digest.md;\n\
    \    import std.digest.md.md5;\n    import std.string : format;\n    return text.length\
    \ == 0 ? null : format(\"%s\", MD5(cast(ubyte[])text));\n}\n/*\nunittest\n{\n\
    \    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmplw2nj812.d(19): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplw2nj812.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164236
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return Nullable!(string)();\n    \n    /* \n     * Function body\
    \ should start here.\n     * Please add additional import statements here.\n \
    \    */\n    import std.digest.md;\n    import std.array;\n    import std.conv;\n\
    \    import std.range;\n    import std.string;\n    ubyte[] hash = Md5(text);\n\
    \    string hash_hex = to!string(hash);\n    string[] split_hex = hash_hex.split(\"\
    \ \");\n    auto result = join(split_hex);\n    return result;\n}\n \nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpu91_p296.d(26): Error: undefined identifier `Md5`, did you mean
    struct `MD5`?

    /tmp/tmpu91_p296.d(30): Error: cannot implicitly convert expression `result` of
    type `string` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu91_p296.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164237
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{ \n    import std.digest.md;\
    \ \n    if (text.length == 0) return null; \n    return to!string(md5(cast(ubyte[])text.dup));\
    \ \n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6_em9db8.d(16): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmp6_em9db8.d(15): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6_em9db8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164237
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ result;\n    auto hash = new MD5(text.ptr, text.length);\n    immutable(char)\
    \ [16] hash_bytes = hash.getHash();\n    foreach (immutable(char) hash_byte; hash_bytes)\
    \ {\n        result ~= format(\"%02x\", hash_byte);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp70s6hqzv.d(15): Error: undefined identifier `MD5`

    /tmp/tmp70s6hqzv.d(18): Error: undefined identifier `format`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp70s6hqzv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164237
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    import std.digest.md;\n\
    \    return (text.length > 0) ? md5(text) : null;\n}\n/*\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9orq_f3m.d(17): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9orq_f3m.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164236
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    import std.digest.md;\n\
    \    if(text.length == 0) \n    {\n        return Nullable!(string)();\n    }\n\
    \    return Nullable!(string)(to!string(md.md5(text)));\n}\n/*\nunittest\n{\n\
    \    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6q_64wdk.d(21): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6q_64wdk.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164236
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    import std.digest.md;\n\
    \    import std.digest.sha;\n    alias Byte = ubyte;\n    enum result = null;\n\
    \    if (text.length &gt; 0)\n    {\n        alias V = ValueType!(Byte[]);\n \
    \       import std.algorithm.comparison : equal;\n        import std.conv : to;\n\
    \        import std.digest.md : MD5;\n        import std.digest.sha : SHA1;\n\
    \        import std.digest.sha : SHA256;\n        import std.digest.sha : SHA512;\n\
    \        import std.digest.sha : SHA1, SHA256, SHA512;\n        import std.string\
    \ : format;\n        import std.string : to;\n        auto digest_sha1 = SHA1(text.idup);\n\
    \        auto digest_sha256 = SHA256(text.idup);\n        auto digest_sha512 =\
    \ SHA512(text.idup);\n        auto digest_md5 = MD5(text.idup);\n        auto\
    \ digest_test = digest!string(text);\n        string s = digest_md5.toStringz;\n\
    \        result = s;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqyyeeeg7.d(18): Error: found `;` when expecting `)`

    /tmp/tmpqyyeeeg7.d(18): Error: found `)` when expecting `;` following statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqyyeeeg7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164236
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ hash = null;\n    if ( text.length == 0 ) return hash;\n    import std.digest.md5\
    \ : md5;\n    import std.conv : to;\n    auto hasher = new MD5;\n    hasher.put(text);\n\
    \    hash = to!(string)(hasher.finish().bytes);\n    return hash;\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1mfkokgt.d(16): Error: module `md5` is in file ''std/digest/md5.d''
    which cannot be read

    import path[0] = /tmp

    import path[1] = /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos

    import path[2] = /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/druntime/import

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1mfkokgt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164236
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    import std.digest.md;\n    auto hash = MD5(text);\n\
    \    return hash.format();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0k60lqdh.d(17): Error: cannot implicitly convert expression `text`
    of type `string` to `uint[4]`

    /tmp/tmp0k60lqdh.d(15): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0k60lqdh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164237
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if(text.length)\n\
    \    {\n        import std.digest.md;\n        return md5(text);\n    }\n    return\
    \ null;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto\
    \ result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get\
    \ == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpm6mvq_is.d(17): Error: undefined identifier `md5`

    /tmp/tmpm6mvq_is.d(19): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm6mvq_is.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164237
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    import std.digest.md5;\n\
    \    Nullable!(string) result;\n    if (text.length == 0)\n    {\n        result\
    \ = null;\n    }\n    else\n    {\n        result = to!string(md5(text));\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpw9_nv7x6.d(14): Error: module `md5` is in file ''std/digest/md5.d''
    which cannot be read

    import path[0] = /tmp

    import path[1] = /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos

    import path[2] = /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/druntime/import

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw9_nv7x6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164236
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0) \n    {\n        return null;\n    }\n    else \n    {\n        return\
    \ std.digest.md5(text).toString();\n    }\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp578mhfod.d(20): Error: undefined identifier `digest` in package
    `std`

    /tmp/tmp578mhfod.d(16): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp578mhfod.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164237
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (empty(text))\
    \ \n    {\n        return null;\n    }\n    // encrypt it\n    import tango.util.digest.MD5;\n\
    \    MD5 d;\n    char[] bytes = text.toUTFz;\n    return d.encode(bytes).toHexString();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdj4kxwui.d(14): Error: undefined identifier `empty`

    /tmp/tmpdj4kxwui.d(19): Error: module `MD5` is in file ''tango/util/digest/MD5.d''
    which cannot be read

    import path[0] = /tmp

    import path[1] = /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos

    import path[2] = /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/druntime/import

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdj4kxwui.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164236
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ md5hash = void;\n    if (text.length > 0) {\n        md5hash = md5(text);\n\
    \    }\n    return md5hash;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpa9ndifbk.d(16): Error: undefined identifier `md5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa9ndifbk.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164237
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0) \n    {\n        return null;\n    }\n    return format!(\"%s\", md5(text));\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpoqzzxojg.d(18): Error: template instance `format!("%s", md5(text))`
    template `format` is not defined

    /tmp/tmpoqzzxojg.d(16): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoqzzxojg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164237
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    import std.digest.md;\n    auto digest\
    \ = MD5(text);\n    return digest.toString!(encodeHex);\n}\n/*\nunittest\n{\n\
    \    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphxvd_1mo.d(21): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphxvd_1mo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164236
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    import std.string\
    \ : toLower;\n    import std.crypto.md : md5;\n    import std.conv : to;\n   \
    \ import std.array : join;\n    import std.range : map;\n    import std.typecons\
    \ : tuple;\n    import std.algorithm : filter;\n    import std.algorithm : sort;\n\
    \    import std.typecons : tuple;\n    import std.meta : AliasSeq;\n    import\
    \ std.meta : AliasSeqOf;\n    import std.meta : TypeTuple;\n    import std.internal.test.dummyrange\
    \ : isOutputRange;\n    import std.meta : staticMap;\n    import std.internal.test.dummyrange\
    \ : isRandomAccessRange;\n    import std.internal.test.dummyrange : isBidirectionalRange;\n\
    \    import std.internal.test.dummyrange : isForwardRange;\n    import std.meta\
    \ : ReturnType;\n    import std.meta : Tuple;\n    import std.meta : TypeTuple;\n\
    \    import std.meta : AliasSeq;\n    import std.meta : AliasSeqOf;\n    import\
    \ std.range : chain;\n    import std.range : chain;\n    import std.range : chain;\n\
    \    import std.range : chain;\n    import std.range : chain;\n    import std.range\
    \ : chain;\n    import std.range : chain;\n    import std.range : chain;\n   \
    \ import std.range : chain;\n    import std.range : chain;\n    import std.range\
    \ : chain;\n    import std.range : chain;\n    import std.range : chain;\n   \
    \ import std.range : chain;\n    import std.range : chain;\n    import std.range\
    \ : chain;\n    import std.range : chain;\n    import std.range : chain;\n   \
    \ import std.range : chain;\n    import std.range : chain;\n    import std.range\
    \ : chain;\n    import std.range : chain;\n    import std.range : chain;\n   \
    \ import std.range : chain;\n    import std.range : chain;\n    import std.range\
    \ : chain;\n    import std.range : chain;\n    import\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpp6i58e8a.d(64): Error: identifier expected following `import`

    /tmp/tmpp6i58e8a.d(64): Error: `;` expected

    /tmp/tmpp6i58e8a.d(89): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp6i58e8a.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164236
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0) return null;\n    return digest(MD5, text);\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvl9wk2yq.d(15): Error: undefined identifier `digest`

    /tmp/tmpvl9wk2yq.d(14): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvl9wk2yq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164238
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0) \n    {\n        return null;\n    }\n    ubyte[16] hash = new MDSum(MD5).put(cast(ubyte[])text).get();\n\
    \    return format(\"%2.2x%2.2x%2.2x%2.2x%2.2x%2.2x%2.2x%2.2x%2.2x%2.2x%2.2x%2.2x%2.2x%2.2x%2.2x%2.2x\"\
    ,\n        hash[0], hash[1], hash[2], hash[3],\n        hash[4], hash[5], hash[6],\
    \ hash[7],\n        hash[8], hash[9], hash[10], hash[11],\n        hash[12], hash[13],\
    \ hash[14], hash[15]\n    );\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3a4efphe.d(18): Error: undefined identifier `MDSum`

    /tmp/tmp3a4efphe.d(19): Error: undefined identifier `format`

    /tmp/tmp3a4efphe.d(16): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3a4efphe.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164238
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ md5Hash;\n    foreach(dchar c; text)\n    {\n        md5Hash = md5(md5Hash.get\
    \ + c);\n    }\n    return md5Hash;\n}\n/*\nunittest\n{\n    alias candidate =\
    \ string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n   \
    \     assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgqrh8x63.d(21): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgqrh8x63.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164237
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    // Initialize string\n    auto h = to!(string)(md5(to!(ubyte[])(text)));\n\
    \    // Return hash as a string\n    return h;\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2brz5mro.d(17): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmp2brz5mro.d(15): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2brz5mro.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164238
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0) return null;\n    import std.digest.md;\n    import std.array;\n    auto\
    \ hash = MD5(text);\n    return (hash.map!(to!string).array.join(\"\"));\n}\n\
    \ \n/*\n    \n    Given an array of strings, return an array with the respective\
    \ md5 hashes equivalent strings.\n    If the array is empty, return null.\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfoz2n4kg.d(21): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfoz2n4kg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164237
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    auto hash =\
    \ new MD5();\n    hash.put(text);\n    return hash.finish().toString();\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpd6cqyfad.d(14): Error: undefined identifier `MD5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd6cqyfad.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164238
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    import tango.util.md5.Md5;\n\
    \    return !text ? null : to!(string)(Md5(to!(ubyte[])(text)));\n}\n/*\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpu_r5v29r.d(17): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu_r5v29r.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164237
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ hash_str = Nullable!(string).init;\n    if (text.length == 0) \n    {\n    \
    \    return hash_str;\n    }\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkjkb59d5.d(19): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkjkb59d5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164237
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ md5 = null;\n    md5 = md5_encode(text.idup);\n    return md5;\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp848w35oz.d(15): Error: undefined identifier `md5_encode`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp848w35oz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164238
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ res = Nullable!(string).init;\n    if (text.length != 0)\n    {\n        import\
    \ std.digest.md;\n        import std.conv;\n        import std.format;\n     \
    \   res.assign(to!string(md5(text)));\n    }\n    return res;\n}\n/*\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp36xmojza.d(24): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp36xmojza.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164237
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ result;\n    void* state = MD5.init();\n    MD5.write(state, cast(ubyte[])text);\n\
    \    ubyte[16] digest = MD5.finish(state);\n    //return MD5.toString(digest);\n\
    \    char[33] hash;\n    foreach(i, c; digest)\n    {\n        hash[2*i] = c /\
    \ 16 + '0';\n        hash[2*i+1] = c % 16 + '0';\n    }\n    result = result.make(hash);\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n\
    {\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpq5obdpp8.d(15): Error: undefined identifier `MD5`

    /tmp/tmpq5obdpp8.d(16): Error: undefined identifier `MD5`

    /tmp/tmpq5obdpp8.d(17): Error: undefined identifier `MD5`

    /tmp/tmpq5obdpp8.d(25): Error: no property `make` for type `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq5obdpp8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164238
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    ubyte[16] md5_hash;\n\
    \    md5_hash = md5(text);\n    return md5_hash.arrayToString;\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkmh39d01.d(15): Error: undefined identifier `md5`

    /tmp/tmpkmh39d01.d(16): Error: no property `arrayToString` for type `ubyte[16]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkmh39d01.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164238
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    import std.c.stdlib;\n\
    \    import std.digest.md;\n    import std.digest.sha;\n    import std.conv;\n\
    \    import std.string;\n    import std.array;\n    import std.algorithm;\n  \
    \  import std.range;\n    import std.typecons;\n    import std.c.stdlib;\n   \
    \ import std.math;\n    import std.bitmanip;\n    import std.typetuple;\n    import\
    \ std.exception;\n    import std.array;\n    import std.algorithm;\n    import\
    \ std.digest.crc;\n    import std.digest.crc.crc32_pclmul;\n    import std.digest.crc.crc32_pclmul_simd;\n\
    \    import std.digest.crc.crc32_simd;\n    import std.digest.crc.x86_crc32;\n\
    \    import std.digest.sha;\n    import std.digest.sha.sha1;\n    import std.digest.sha.sha2;\n\
    \    import std.digest.sha.sha3;\n    import std.digest.sha.sha4;\n    import\
    \ std.digest.sha.sha5;\n    import std.digest.md;\n    import std.digest.md.md4;\n\
    \    import std.digest.md.md5;\n    import std.digest.md.ripemd;\n    import std.digest.md.tiger;\n\
    \    import std.digest.md.whirlpool;\n    import std.digest.murmur;\n    import\
    \ std.digest.ripemd;\n    import std.digest.tiger;\n    import std.digest.whirlpool;\n\
    \    import std.digest.xxhash;\n    import std.digest.xxhash.xxh32;\n    import\
    \ std.digest.xxhash.xxh64;\n    import std.exception;\n    import std.file;\n\
    \    import std.functional;\n    import std.getopt;\n    import std.getopt.getopt;\n\
    \    import std.io;\n\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n\
    \        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpl3oiua9_.d(61): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl3oiua9_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164237
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    return to!(Nullable!(string)) md5(text);\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmy125xdp.d(16): Error: found `md5` when expecting `;` following
    `return` statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmy125xdp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164237
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0) return null;\n    auto bytes = cast(ubyte[])text;\n    MD5Context ctx;\n\
    \    ctx.add(bytes.ptr, bytes.length);\n    return ctx.result;\n}\n/*\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5qb63im2.d(20): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5qb63im2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164237
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    import core.stdc.string;\n\
    \    import core.sys.windows.wincrypt;\n    import core.sys.windows.advapi32;\n\
    \    import core.sys.windows.winuser;\n    import core.sys.windows.shell32;\n\
    \    import core.sys.windows.winerror;\n    import core.sys.windows.basesdk;\n\
    \    import core.sys.windows.kernel32;\n    import core.sys.windows.malloc;\n\
    \    import core.sys.windows.psapi;\n    import core.sys.windows.shlwapi;\n  \
    \  import core.sys.windows.userenv;\n    import core.sys.windows.ws2_32;\n   \
    \ import core.sys.windows.wininet;\n    import core.sys.windows.shellapi;\n  \
    \  import core.sys.windows.winbase;\n    import core.sys.windows.winsock2;\n \
    \   import core.stdc.stdio;\n    import core.stdc.stdlib;\n    import core.stdc.stdarg;\n\
    \    import core.stdc.stdint;\n    import core.stdc.assert;\n    import core.stdc.inttypes;\n\
    \    import core.stdc.limits;\n    import core.stdc.signal;\n    import core.stdc.time;\n\
    \    import core.stdc.float;\n    import core.stdc.ctype;\n    import core.stdc.errno;\n\
    \    import core.stdc.locale;\n    import core.stdc.setjmp;\n    import core.stdc.wchar;\n\
    \    import core.stdc.wctype;\n    import core.stdc.conio;\n    import core.stdc.math;\n\
    \    import core.stdc.tgmath;\n    import core.stdc.fenv;\n    import core.stdc.complex;\n\
    \    import core.stdc.string;\n    import core.stdc.iso646;\n    import core.stdc.stddef;\n\
    \    import core.stdc.uchar;\n    import core.stdc.wchar;\n    import core.stdc.iso646;\n\
    \    import core.\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n  \
    \      auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfrvwdhjk.d(35): Error: identifier expected following `package`

    /tmp/tmpfrvwdhjk.d(35): Error: `;` expected

    /tmp/tmpfrvwdhjk.d(35): Deprecation: use `{ }` for an empty statement, not `;`

    /tmp/tmpfrvwdhjk.d(40): Error: identifier expected following `package`

    /tmp/tmpfrvwdhjk.d(40): Error: `;` expected

    /tmp/tmpfrvwdhjk.d(40): Deprecation: use `{ }` for an empty statement, not `;`

    /tmp/tmpfrvwdhjk.d(45): Error: identifier expected following `package`

    /tmp/tmpfrvwdhjk.d(45): Error: `;` expected

    /tmp/tmpfrvwdhjk.d(45): Deprecation: use `{ }` for an empty statement, not `;`

    /tmp/tmpfrvwdhjk.d(56): Error: identifier expected following `package`

    /tmp/tmpfrvwdhjk.d(56): Error: `;` expected

    /tmp/tmpfrvwdhjk.d(56): Deprecation: use `{ }` for an empty statement, not `;`

    /tmp/tmpfrvwdhjk.d(59): Error: identifier expected following `package`

    /tmp/tmpfrvwdhjk.d(59): Error: `;` expected

    /tmp/tmpfrvwdhjk.d(84): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v",'
  stdout: ''
  timestamp: 1660164237
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    import std.digest.md;\n\
    \    import std.digest.sha;\n    import std.digest.hmac;\n    import std.conv;\n\
    \    Nullable!(string) ret;\n    auto md5 = new MD5;\n    md5.put(cast(ubyte[])text);\n\
    \    string finalHash = to!string(md5.finish().array).toUpper();\n    return finalHash;\n\
    }\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpm70204wz.d(24): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm70204wz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164237
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0) \n    {\n        return null;\n    }\n    string result = \"\";\n    immutable\
    \ uint[4] M = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476];\n    immutable\
    \ uint s[64] = \n    [\n        7, 12, 17, 22,  7, 12, 17, 22,  7, 12, 17, 22,\
    \  7, 12, 17, 22,\n        5,  9, 14, 20,  5,  9, 14, 20,  5,  9, 14, 20,  5,\
    \  9, 14, 20,\n        4, 11, 16, 23,  4, 11, 16, 23,  4, 11, 16, 23,  4, 11,\
    \ 16, 23,\n        6, 10, 15, 21,  6, 10, 15, 21,  6, 10, 15, 21,  6, 10, 15,\
    \ 21\n    ];\n    immutable uint K[64] = \n    [\n        0xd76aa478, 0xe8c7b756,\
    \ 0x242070db, 0xc1bdceee,\n        0xf57c0faf, 0x4787c62a, 0xa8304613, 0xfd469501,\n\
    \        0x698098d8, 0x8b44f7af, 0xffff5bb1, 0x895cd7be,\n        0x6b901122,\
    \ 0xfd987193, 0xa679438e, 0x49b40821,\n        0xf61e2562, 0xc040b340, 0x265e5a51,\
    \ 0xe9b6c7aa,\n        0xd62f105d, 0x02441453, 0xd8a1e681, 0xe7d3fbc8,\n     \
    \   0x21e1cde6, 0xc33707d6, 0xf4d50d87, 0x455a14ed,\n        0xa9e3e905, 0xfcefa3f8,\
    \ 0x676f02d9, 0x8d2a4c8a,\n        0xfffa39\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpf1kne4su.d(20): Deprecation: instead of C-style syntax, use D-style
    syntax `uint[64] s`

    /tmp/tmpf1kne4su.d(27): Deprecation: instead of C-style syntax, use D-style syntax
    `uint[64] K`

    /tmp/tmpf1kne4su.d(38): Error: comma expected separating array initializers, not
    `unittest`

    /tmp/tmpf1kne4su.d(39): Error: semicolon expected, not `{`

    /tmp/tmpf1kne4su.d(63): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf1kne4su.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164237
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if(text.length\
    \ == 0)\n        return null;\n    else\n    {\n        alias hash_t = MD5Result;\n\
    \        auto hash = md5(text);\n        return hash.toHexString;\n    }\n}\n\
    unittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result =\
    \ candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfmakegl_.d(18): Error: undefined identifier `MD5Result`

    /tmp/tmpfmakegl_.d(19): Error: undefined identifier `md5`

    /tmp/tmpfmakegl_.d(15): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfmakegl_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164238
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n\tif (text.length\
    \ == 0) return Nullable!(string)();\n\t\n\timport std.digest.md;\n\treturn md.md5(text);\n\
    }\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpcm_l_u12.d(19): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcm_l_u12.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164237
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length)\
    \ \n    {\n        return std.digest.md5(text).toString;\n    }\n    return null;\n\
    }\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpto3yqduc.d(20): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpto3yqduc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164237
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    static ubyte[]\
    \ md5_data;\n    auto ret = string.init.fromUTF8z(md5_data);\n    if (text.length\
    \ is 0) \n    {\n        return null;\n    }\n    md5_data = text.md5Of();\n \
    \   return ret;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n \
    \       auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpggrxcv43.d(15): Error: no property `fromUTF8z` for type `string`

    /tmp/tmpggrxcv43.d(20): Error: no property `md5Of` for type `string`

    /tmp/tmpggrxcv43.d(18): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpggrxcv43.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164238
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ result;\n    foreach(character; text)\n    {\n        if(character.length !=\
    \ 8)\n        {\n            result = null;\n            break;\n        }\n \
    \       else\n        {\n            result = to!(string)(to!(ulong)(character));\n\
    \        }\n    }\n    return result;\n}\n/*\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp52n8onoc.d(29): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp52n8onoc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164237
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ > 0) \n    {\n        return cast(Nullable!(string)) new std.typecons.Nullable(md5(text).toString());\n\
    \    }\n    return null;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxnybtulr.d(16): Error: template struct `std.typecons.Nullable(T)`
    is used as a type without instantiation; to instantiate it use `Nullable!(arguments)`

    /tmp/tmpxnybtulr.d(18): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxnybtulr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164239
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ result;\n    if(text.length == 0) return null;\n    result = md5(text);\n  \
    \  return result;\n}\nstatic assert(string_to_md5(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\nstatic assert(string_to_md5(\"\") == null);\nstatic assert(string_to_md5(\"\
    0\") == \"cfcd208495d565ef66e7dff9f98764da\");\n \nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx4penacj.d(16): Error: undefined identifier `md5`

    /tmp/tmpx4penacj.d(15): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    /tmp/tmpx4penacj.d(19):        called from here: `string_to_md5("Hello world")`

    /tmp/tmpx4penacj.d(19):        while evaluating: `static assert(string_to_md5("Hello
    world") == "3e25960a79dbc69b674cd4ec67a72c62")`

    /tmp/tmpx4penacj.d(20): Error: CTFE failed because of previous errors in `string_to_md5`

    /tmp/tmpx4penacj.d(20):        while evaluating: `static assert(string_to_md5("")
    == null)`

    /tmp/tmpx4penacj.d(21): Error: CTFE failed because of previous errors in `string_to_md5`

    /tmp/tmpx4penacj.d(21):        while evaluating: `static assert(string_to_md5("0")
    == "cfcd208495d565ef66e7dff9f98764da")`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx4penacj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164238
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    import std.sha;\n\
    \    return text.empty ? null : toHexString(md5(text));\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe0ynhe20.d(14): Error: module `sha` is in file ''std/sha.d'' which
    cannot be read

    import path[0] = /tmp

    import path[1] = /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos

    import path[2] = /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/druntime/import

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe0ynhe20.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164238
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ > 0)\n    {\n        auto hash = md5(text);\n        return format!(\"%(x.{2})\"\
    \ , hash.array);\n    }\n    return null;\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb5xz28oz.d(16): Error: undefined identifier `md5`

    /tmp/tmpb5xz28oz.d(17): Error: template instance `format!("%(x.{2})", hash.array)`
    template `format` is not defined

    /tmp/tmpb5xz28oz.d(19): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb5xz28oz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164239
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if(text.length\
    \ == 0)\n        return null;\n    else\n    {\n        auto md5 = MD5(toUTF8(text));\n\
    \        return format(\"%s\",md5.digest);\n    }\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9k76a1ft.d(18): Error: undefined identifier `MD5`

    /tmp/tmp9k76a1ft.d(19): Error: undefined identifier `format`

    /tmp/tmp9k76a1ft.d(15): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9k76a1ft.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164239
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0) return Nullable!(string)();\n    byte[] buf = text.toUTFz.dup;\n    auto\
    \ encoder = new MD5Encoder;\n    encoder.put(buf.ptr, buf.length);\n    buf.length\
    \ = encoder.finish;\n    return to!string(buf);\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmptuga4thd.d(15): Error: no property `toUTFz` for type `string`

    /tmp/tmptuga4thd.d(16): Error: undefined identifier `MD5Encoder`

    /tmp/tmptuga4thd.d(19): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptuga4thd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164239
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ md5_text = null;\n    if(text.length > 0) {\n        import std.digest.md;\n\
    \        import std.conv;\n        md5_text = to!string(md5(text));\n    }\n \
    \   return md5_text;\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5enj5w7g.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5enj5w7g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164237
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    import std.hash;\n\
    \    return (text.length > 0 ? to!string(md5(toUTF8(text))) : null);\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7o7625wr.d(14): Error: module `hash` is in file ''std/hash.d''
    which cannot be read

    import path[0] = /tmp

    import path[1] = /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos

    import path[2] = /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/druntime/import

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7o7625wr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164237
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0) return null;\n    import std.digest.md;\n    return digest(MD5, text);\n\
    }\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpimvtb0ua.d(18): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpimvtb0ua.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164237
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    return (text.length\
    \ == 0) ? null : import(\"md5\").hex_md5(text);\n}\n/*\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpax4mhn2d.d(16): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpax4mhn2d.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164237
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    import std.digest.md;\n\
    \    import std.conv;\n    import std.format;\n    Nullable!(string) result;\n\
    \    if (text.length>0) {\n        auto hash = text.md5;\n        result = format(\"\
    %(2:x2)\", hash.rawData);\n    }\n    return result;\n}\n \n/*\nunittest\n{\n\
    \    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpck4bbq3_.d(25): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpck4bbq3_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164237
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ nullable_text;\n    if (text.length == 0) \n    {\n        nullable_text = null;\n\
    \    }\n    else \n    {\n        // Generate md5 hash of the string\n       \
    \ import std.digest.md;\n        auto hashed = toHexString(MD5(text));\n     \
    \   // Put the string inside a nullable type\n        nullable_text = to!Nullable!(string)(hashed);\n\
    \    }\n    return nullable_text;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgdlph7jk.d(25): Error: multiple ! arguments are not allowed

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgdlph7jk.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164238
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    import std.file;\n\
    \    import std.digest.md;\n    if (text.length > 0) \n    {\n        string m\
    \ = md5(text);\n        return m;\n    } \n    else \n    {\n        return null;\n\
    \    }\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto\
    \ result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get\
    \ == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzl0gmjai.d(18): Error: undefined identifier `md5`

    /tmp/tmpzl0gmjai.d(19): Error: cannot implicitly convert expression `m` of type
    `string` to `Nullable!string`

    /tmp/tmpzl0gmjai.d(23): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzl0gmjai.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164239
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    import std.conv;\n\
    \    import std.digest.md;\n    import std.digest.md.md5;\n    import std.array;\n\
    \    import std.algorithm;\n    import std.range;\n    import std.range.primitives;\n\
    \    import std.traits;\n    Nullable!(string) res = Nullable!(string).init;\n\
    \    if (text.length) {\n        auto hash_fun = text.md5;\n        auto data\
    \ = hash_fun.array;\n        auto hex_digest = data.map!(toHexString).join(\"\"\
    );\n        res.set(hex_digest);\n    }\n    return res;\n}\n// BEGIN TESTS\n\
    unittest \n{\n    auto x = string_to_md5(\"Hello world\");\n    assert(x == \"\
    3e25960a79dbc69b674cd4ec67a72c62\");\n}\nunittest \n{\n    auto x = string_to_md5(\"\
    \");\n    assert(x == null);\n}\n// END TESTS\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg42jsv7u.d(16): Error: module `md5` is in file ''std/digest/md/md5.d''
    which cannot be read

    import path[0] = /tmp

    import path[1] = /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos

    import path[2] = /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/druntime/import

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg42jsv7u.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164238
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    import std.digest.md;\n    return cast(Nullable!(string))\
    \ MD5(text);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n    \
    \    auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpr8crmb7b.d(17): Error: cannot implicitly convert expression `text`
    of type `string` to `uint[4]`

    /tmp/tmpr8crmb7b.d(15): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr8crmb7b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164239
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    static import\
    \ digest.md5;\n    MD5 md5;\n    md5.put(text);\n    return to!(Nullable!(string))(md5.finish().toHexString);\n\
    }\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvgq979cx.d(19): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvgq979cx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164238
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n\tif (text == \"\
    \") return null;\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n   \
    \     auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk6zlrs6g.d(15): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk6zlrs6g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164238
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if(text.length\
    \ == 0)\n        return null;\n    else \n    {\n        import std.digest.md;\n\
    \        string md5 = text.idup.toMd5String;\n        return md5;\n    }\n}\n\
    unittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result =\
    \ candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpc4i54lzf.d(19): Error: no property `toMd5String` for type `string`

    /tmp/tmpc4i54lzf.d(15): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    /tmp/tmpc4i54lzf.d(20): Error: cannot implicitly convert expression `md5` of type
    `string` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc4i54lzf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164239
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    import std.digest.md;\n\
    \    import std.conv;\n    ubyte[] md5digest;\n    if(text.length == 0) return\
    \ null;\n    md5digest = cast(ubyte[])text.byUTF;\n    md5digest = md5(md5digest);\n\
    \    string md5 = to!string(md5digest);\n    return md5;\n}\nunittest\n{\n   \
    \ alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp39maek2s.d(18): Error: no property `byUTF` for type `string`

    /tmp/tmp39maek2s.d(19): Error: undefined identifier `md5`

    /tmp/tmp39maek2s.d(17): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    /tmp/tmp39maek2s.d(21): Error: cannot implicitly convert expression `md5` of type
    `string` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp39maek2s.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164239
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n\tif (text.length\
    \ == 0)\n\t\treturn null;\n\telse\n\t{\n\t\timport md5;\n\t\treturn MD5(text).toHexString();\n\
    \t}\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpv3ss0l01.d(18): Error: module `md5` is in file ''md5.d'' which
    cannot be read

    import path[0] = /tmp

    import path[1] = /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos

    import path[2] = /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/druntime/import

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv3ss0l01.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164238
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    import std.digest.md;\n\
    \    return text.empty ? null : md(text).toHexString();\n}\n/*\nunittest\n{\n\
    \    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpru3cny8v.d(17): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpru3cny8v.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164238
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ md5_val = null;\n    if(text.length > 0) {\n        import std.digest.md;\n\
    \        import std.ascii;\n        md5_val = md5(text).toHexString;\n    }\n\
    \    return md5_val;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n\
    {\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx_3hp3qk.d(18): Error: undefined identifier `md5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx_3hp3qk.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164239
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0) \n    {\n        return null;\n    }\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx0v1m0cs.d(18): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx0v1m0cs.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164235
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    import std.conv\
    \ : text;\n    import std.digest.md : MD5;\n    return  text.length > 0 ? text.to!MD5().toHexString()\
    \ : null;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n       \
    \ auto result = candidate(\"Hello world\");\n        assert(!result.isNull &&\
    \ result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result\
    \ = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result\
    \ = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqp8uxlmq.d(16): Deprecation: function `std.conv.text!().text` is
    deprecated - Calling `text` with 0 arguments is deprecated

    /tmp/tmpqp8uxlmq.d(16): Deprecation: function `std.conv.text!().text` is deprecated
    - Calling `text` with 0 arguments is deprecated

    /tmp/tmpqp8uxlmq.d(16): Error: no property `to` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqp8uxlmq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164239
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    import std.digest.md;\n\
    \    import std.string;\n    import std.conv;\n    import std.algorithm;\n   \
    \ import std.array;\n    import std.format;\n    import std.typecons;\n    import\
    \ std.range;\n    import std.bitmanip;\n    import std.math;\n    import std.typecons;\n\
    \    string result = \"\";\n    if (text.length > 0)\n    {\n        const(ubyte[])\
    \ hash = text.md5;\n        result = format(\"%(%02x)s\", hash);\n    }\n    return\
    \ to!Nullable!(string)(result);\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmptk88c75b.d(31): Error: multiple ! arguments are not allowed

    /tmp/tmptk88c75b.d(33): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptk88c75b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164238
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    import core.stdc.string;\n\
    \    import std.md5;\n    import std.conv;\n    import std.string;\n    import\
    \ std.array;\n    import std.format;\n    if(text.length == 0)\n        return\
    \ null;\n    immutable hash = MD5(text);\n    immutable hash_string =\n      \
    \  hexArrayFormat(hash, lowercase = true);\n    return hash_string;\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpq052a7xc.d(15): Error: module `md5` is in file ''std/md5.d'' which
    cannot be read

    import path[0] = /tmp

    import path[1] = /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos

    import path[2] = /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/druntime/import

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq052a7xc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164238
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ result;\n    if (text == \"\") \n    {\n        result = null;\n    }\n    else\
    \ \n    {\n        auto array = text.toUTF8z;\n        result = cast(Nullable!(string))\
    \ MD5.digest(array);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4lwer6d2.d(21): Error: no property `toUTF8z` for type `string`

    /tmp/tmp4lwer6d2.d(22): Error: undefined identifier `MD5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4lwer6d2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164239
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{ \n    import std.digest.md;\n\
    \    return (text.length == 0 ? null : MD5(text));\n}\n/*\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3wugoxeh.d(17): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3wugoxeh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164238
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    import std.digest.md;\n\
    \    import std.array;\n    auto d = digest!MD5(text);\n    if (d.length == 0)\n\
    \        return null;\n    else\n        return  d.map!(a => format(\"%02x\",\
    \ a)).join(\"\");\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n\
    {\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmptizza0fj.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptizza0fj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164238
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ null = Nullable!(string)();\n    if (text.length == 0)\n        return null;\n\
    \    import std.digest.md;\n    return (nullable_t)text.md5;\n}\nunittest\n{\n\
    \    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_nfrgh50.d(14): Error: found `null` when expecting `;` following
    statement

    /tmp/tmp_nfrgh50.d(14): Error: found `=` instead of statement

    /tmp/tmp_nfrgh50.d(18): Error: C style cast illegal, use `cast(nullable_t)text.md5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_nfrgh50.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164238
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    return (text\
    \ == \"\") ? null : crypto.md5(text);\n}\n// UNITTEST\nunittest \n{\n    string\
    \ myText = \"Hello world\";\n    string myExpectedHash = \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ;\n    auto myActualHash = string_to_md5(myText);\n    assert(myActualHash ==\
    \ myExpectedHash);\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6kr87n45.d(24): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6kr87n45.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164238
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    import std.algorithm\
    \ : map;\n    import std.conv : to;\n    import std.digest.md;\n    import std.range\
    \ : chunks;\n    import std.string : format;\n    if(!text.length) return null;\n\
    \    auto r = text.md5.map!(a => format(\"%02x\", a));\n    return (string)r.chunks(2).map!(a\
    \ => a.array.join).array.join;\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3299u0xm.d(21): Error: C style cast illegal, use `cast(string)r.chunks(2).map!((a)
    => a.array.join).array.join`

    /tmp/tmp3299u0xm.d(23): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3299u0xm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164238
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if(text.length==0)\
    \ return null;\n    import std.digest.md;\n    return text.md5;\n}\n/*\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0c_oddd9.d(18): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0c_oddd9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164238
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    return text\
    \ == \"\" ? null : new string(digest!MD5(text));\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4p7gfvp2.d(14): Error: template instance `digest!MD5` template
    `digest` is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4p7gfvp2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164239
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ retval = Nullable!(string).init;\n    auto digest = MD5();\n    auto _text =\
    \ text.toStringz;\n    digest.put(cast(ubyte[])_text, _text.length);\n    digest.finish();\n\
    \    auto output = digest.getBytes();\n    foreach(i, c; output)\n    {\n    \
    \    auto hex = format(\"%2.2x\", c);\n        retval.data ~= hex;\n    }\n  \
    \  return retval;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n\
    \        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmptucn7wv5.d(15): Error: undefined identifier `MD5`

    /tmp/tmptucn7wv5.d(16): Error: no property `toStringz` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptucn7wv5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164239
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    auto md5 = new\
    \ MD5Context;\n    md5.update(text);\n    return md5.toString();\n}\n/*\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpiu4a1iok.d(18): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiu4a1iok.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164238
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    import std.digest.md;\n\
    \    import std.digest.md5;\n    import std.digest.sha;\n    import std.digest.sha1;\n\
    \    import std.digest.sha256;\n    import std.digest.sha512;\n    import std.digest.adler32;\n\
    \    import std.digest.crc;\n    import std.conv;\n    import std.string;\n  \
    \  import std.typecons;\n    import std.array;\n    import std.algorithm;\n  \
    \  import std.range;\n    import std.math;\n    import std.bitmanip;\n    import\
    \ std.datetime;\n    import std.datetime.format;\n    import std.format;\n   \
    \ import std.meta;\n    import std.typecons;\n    import std.typecons;\n    import\
    \ std.typecons;\n    import std.typecons;\n    import std.typecons;\n    import\
    \ std.typecons;\n    import std.typecons;\n    import std.typecons;\n    import\
    \ std.typecons;\n    import std.typecons;\n    import std.typecons;\n    import\
    \ std.typecons;\n    import std.typecons;\n    import std.typecons;\n    import\
    \ std.typecons;\n    import std.typecons;\n    import std.typecons;\n    import\
    \ std.typecons;\n    import std.typecons;\n    import std.typecons;\n    import\
    \ std.typecons;\n    import std.typecons;\n    import std.typecons;\n    import\
    \ std.typecons;\n    import std.typecons;\n    import std.typecons;\n    import\
    \ std.typecons;\n    import std.typecons;\n    import std.typecons;\n    import\
    \ std.typecons;\n    import std.typecons;\n    import std.typecons;\n    import\
    \ std.typecons;\n    import std.typecons;\n    import std.typecons;\n    import\
    \ std.typecons;\n    import std.typecons;\n    import std.typecons;\n    import\
    \ std.typecons;\n    import std.typecons;\n    import std.typecons;\n    import\n\
    unittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result =\
    \ candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkm0qzdmx.d(76): Error: identifier expected following `import`

    /tmp/tmpkm0qzdmx.d(76): Error: `;` expected

    /tmp/tmpkm0qzdmx.d(101): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkm0qzdmx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164238
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    import std.digest.md;\n\
    \    import std.digest.sha;\n    if (text.length == 0)\n        return null;\n\
    \    auto ret = std.digest.md.md5(text);\n    return std.digest.toHexString(ret);\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpt20fxpka.d(18): Error: undefined identifier `md5` in module `std.digest.md`

    /tmp/tmpt20fxpka.d(17): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt20fxpka.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164239
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    auto hash = std.digest.md5(text.toUTF8());\n\
    \    auto hash_str = format(\"%x\", hash.data);\n    return hash_str;\n}\n/*\n\
    unittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result =\
    \ candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0vecbsz7.d(20): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0vecbsz7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164238
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if(text.length\
    \ == 0) return null;\n    return to!(string)(md5(text.byLine.map!(text => text.dup.toUtf8()).array));\n\
    }\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2jsvv4m1.d(17): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2jsvv4m1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164238
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    import std.conv\
    \ : to;\n    import std.digest.md : digestMD5;\n    return text.empty ? null :\
    \ digestMD5(text).to!string;\n}\nstring_to_md5(\"Hello world\");\n \n/*\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpge9bnt9q.d(18): Error: unexpected `(` in declarator

    /tmp/tmpge9bnt9q.d(18): Error: basic type expected, not `"Hello world"`

    /tmp/tmpge9bnt9q.d(18): Error: found `"Hello world"` when expecting `)`

    /tmp/tmpge9bnt9q.d(18): Error: no identifier for declarator `string_to_md5(_error_)`

    /tmp/tmpge9bnt9q.d(18): Error: semicolon expected following function declaration

    /tmp/tmpge9bnt9q.d(18): Error: declaration expected, not `)`

    /tmp/tmpge9bnt9q.d(20): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpge9bnt9q.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164238
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    import std.digest.md;\n    return md5(text).to!string;\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpi_brwbpz.d(18): Error: undefined identifier `md5`

    /tmp/tmpi_brwbpz.d(15): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi_brwbpz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164239
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ md5 = null;\n    char[] md5_c = to!char[](md5);\n    foreach(ref int c; text)\n\
    \    {\n        if(c == '\\0') break;\n        md5_c ~= cast(char)c;\n    }\n\
    \    md5 = to!string(md5_c);\n    return md5;\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpy9h8vq62.d(15): Error: template instance `to!char` template `to`
    is not defined, did you mean No?

    /tmp/tmpy9h8vq62.d(16): Error: argument type mismatch, `immutable(char)` to `ref
    int`

    /tmp/tmpy9h8vq62.d(21): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy9h8vq62.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164239
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    import std.digest.md;\n\
    \    return (text.length == 0) ? null : to!string(digestMD5(text));\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpt0er9n0a.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt0er9n0a.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164239
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0) \n    {\n        return null;\n    }\n    import std.digest.md;\n    return\
    \ typeof(null).init.stringof;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpom_rvstm.d(16): Error: cannot implicitly convert expression `null`
    of type `typeof(null)` to `Nullable!string`

    Error: cannot implicitly convert expression `"null"` of type `string` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpom_rvstm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164239
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if(text.length\
    \ == 0)\n        return null;\n    import std.digest.md5 : md5;\n    return to!string(md5(text));\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4ljn632x.d(16): Error: module `md5` is in file ''std/digest/md5.d''
    which cannot be read

    import path[0] = /tmp

    import path[1] = /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos

    import path[2] = /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/druntime/import

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4ljn632x.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164238
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0) return null;\n    import std.digest.md;\n    return text.md5.toString();\n\
    }\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdgkt5afu.d(18): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdgkt5afu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164238
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    import std.digest.md;\n\
    \    if(!text.length)\n        return null;\n    return md5(text);\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpccdl52bh.d(17): Error: undefined identifier `md5`

    /tmp/tmpccdl52bh.d(16): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpccdl52bh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164239
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0) return null;\n    auto h = MD5(cast(ubyte[])text);\n    return format(\"\
    %2.2x%2.2x%2.2x%2.2x%2.2x%2.2x%2.2x%2.2x%2.2x%2.2x%2.2x%2.2x%2.2x%2.2x%2.2x%2.2x\"\
    ,\n        h[0], h[1], h[2], h[3], h[4], h[5], h[6], h[7], h[8], h[9], h[10],\
    \ h[11], h[12], h[13], h[14], h[15]);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmph1hiydxj.d(15): Error: undefined identifier `MD5`

    /tmp/tmph1hiydxj.d(16): Error: undefined identifier `format`

    /tmp/tmph1hiydxj.d(14): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph1hiydxj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164239
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0) return Nullable!(string)();\n    // https://dlang.org/phobos/std_digest_md.html\n\
    \    import std.digest.md;\n    import std.digest.md5;\n    return md5(text);\n\
    }\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp170keh_w.d(20): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp170keh_w.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164238
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return Nullable!(string)();\n    \n    import std.digest.md;\n\
    \    return MD5(text).toHexString().toLowerCase;\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp13imfn__.d(18): Error: cannot implicitly convert expression `text`
    of type `string` to `uint[4]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp13imfn__.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164240
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if(text.length\
    \ == 0)\n        return null;\n    \n    // md5 reference: http://dlang.org/phobos/std_digest_md5.html\n\
    \    auto md5 = MD5(\"text\", text.length);\n    return md5.toHexString;\n}\n\
    unittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result =\
    \ candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphfv73ene.d(18): Error: undefined identifier `MD5`

    /tmp/tmphfv73ene.d(15): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphfv73ene.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164240
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if(text.length\
    \ == 0) \n    {\n        return null;\n    }\n    return cast(Nullable!(string))\
    \ md5(text.ptr, text.length);\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqh6vp7s1.d(20): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqh6vp7s1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164239
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    assert(text);\n\
    \    if(empty(text)) return null;\n    return translate(text, \"abcdefghijklmnopqrstuvwxyz0123456789\"\
    , \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\");\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp61mvpe0q.d(15): Error: undefined identifier `empty`

    /tmp/tmp61mvpe0q.d(16): Error: undefined identifier `translate`

    /tmp/tmp61mvpe0q.d(15): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp61mvpe0q.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164240
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    import hashlib;\n\
    \    if (text == \"\")\n        return null;\n    //return cast(Nullable!(string))\
    \ hashlib.md5(text).hexdigest;\n    return typeof(null)(hashlib.md5(text).hexdigest);\n\
    }\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpi2flw1sk.d(20): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi2flw1sk.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164239
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0) return null;\n    import std.digest.md;\n    return digestMD5(cast(ubyte[])text).toString;\n\
    }\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpoktkldoq.d(18): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoktkldoq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164239
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    import std.conv;\n\
    \    if (text.length == 0)\n        return null;\n    else\n        return to!string(hash(text,\
    \ \"md5\"));\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n\
    \        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkdecothf.d(20): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkdecothf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164239
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    // Return null\
    \ if text is an empty string\n    if (text.empty) \n    {\n        return null;\n\
    \    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfvaeoojj.d(19): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfvaeoojj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164239
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if(text.length\
    \ == 0)\n        return null;\n    string[2] result;\n    ubyte[MD5_DIGEST_LENGTH]\
    \ hash = MD5_CTX(text);\n    foreach(ref d; hash) \n    {\n        result[0] ~=\
    \ to!string(d / 16);\n        result[1] ~= to!string(d % 16);\n    }\n    return\
    \ result[0] ~ result[1];\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5uztawsi.d(25): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5uztawsi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164239
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n    import\
    \ std.encoding;\n    import std.conv;\n    auto result = to!string(MD5(toUTF8(text)));\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n\
    {\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8e21rdr6.d(19): Error: undefined identifier `toUTF8`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8e21rdr6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164240
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    auto hasher\
    \ = new MessageDigest(MessageDigest.MD5);\n    hasher.put(text);\n    return hasher.finishString(HexEncoding.LOWER_CASE);\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0bou9wg5.d(14): Error: undefined identifier `MessageDigest`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0bou9wg5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164240
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    // your code\
    \ here\n    import std.algorithm : map;\n    import std.array : array;\n    import\
    \ std.digest.md;\n    import std.conv : to;\n    import std.range : iota;\n  \
    \  import std.typecons : Nullable;\n    if (text == \"\")\n        return Nullable!(string)();\n\
    \    auto hashed = MD5(text.byUTFz);\n    string result = hashed.map!(iota(0,\
    \ 16).array).map!(a => a.to!string(16)).array.join(\"\");\n    return Nullable!(string)(result);\n\
    }\n \nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppm74k6l6.d(23): Error: no property `byUTFz` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppm74k6l6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164240
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    import std.digest.md;\n\
    \    import std.conv;\n    if(text.length > 0)\n    {\n        auto md5 = new\
    \ MD5;\n        md5.put(text);\n        return to!string(md5.finish.array);\n\
    \    }\n    return null;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9t2k14a1.d(19): Error: function `std.digest.md.MD5.put(scope const(ubyte)[]
    data...)` is not callable using argument types `(string)`

    /tmp/tmp9t2k14a1.d(19):        cannot pass argument `text` of type `string` to
    parameter `scope const(ubyte)[] data...`

    /tmp/tmp9t2k14a1.d(20): Error: no property `array` for type `ubyte[16]`

    /tmp/tmp9t2k14a1.d(22): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9t2k14a1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164240
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    import std.digest.md;\n\
    \    import std.algorithm.mutation;\n    string result;\n    if(text.length ==\
    \ 0) \n    {\n        return null;\n    } \n    else \n    {\n        auto md5\
    \ = MD5();\n        auto input = text.frontToBack;\n        while (input.save.length)\
    \ \n        {\n            input.save.popFrontN(md5.put(input.save));\n      \
    \  }\n        md5.finish();\n        auto md5_digest = md5.digest();\n       \
    \ auto md5_str = to!string(md5_digest);\n        return md5_str;\n    }\n}\n/*\n\
    unittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result =\
    \ candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmcxszj15.d(35): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmcxszj15.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164239
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if(text.length\
    \ == 0) \n    {\n        return null;\n    }\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpy07hgpf2.d(18): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy07hgpf2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164239
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n\tif (text.length\
    \ == 0)\n\t\treturn null;\n\t\n\tubyte[16] digest;\n\tdigest = digestOf(cast(char[])text);\n\
    \tstring md5 = toHexString(digest[0 .. 16]);\n\treturn md5;\n}\nunittest\n{\n\
    \    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpy5zte13i.d(18): Error: undefined identifier `digestOf`, did you
    mean variable `digest`?

    /tmp/tmpy5zte13i.d(19): Error: undefined identifier `toHexString`

    /tmp/tmpy5zte13i.d(15): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    /tmp/tmpy5zte13i.d(20): Error: cannot implicitly convert expression `md5` of type
    `string` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy5zte13i.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164240
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    text = toLower(text);\n    auto hash\
    \ = digest!MD5(text);\n    return hash.to!string;\n}\n/*\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx3ro3ouh.d(21): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx3ro3ouh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164239
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    static import\
    \ std.digest.md5;\n    static import std.convert;\n    if (text.length > 0)\n\
    \    {\n        return bytesToHexString(md5(text).bytes);\n    }\n    return null;\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9nb92uzr.d(14): Error: module `md5` is in file ''std/digest/md5.d''
    which cannot be read

    import path[0] = /tmp

    import path[1] = /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos

    import path[2] = /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/druntime/import

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9nb92uzr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164239
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ result;\n    if(text.length) \n    {\n        alias hash = Md5[DigestLength.digestLength];\n\
    \        import hash.Hash;\n        auto md5 = Hash(text);\n        string md5_string\
    \ = new string[digestLength * 2];\n        foreach(i, e; md5.digest) \n      \
    \  {\n            md5_string[i * 2] = format(\"%1x\", cast(ubyte) (e >> 4));\n\
    \            md5_string[i * 2 + 1] = format(\"%1x\", cast(ubyte) (e & 0xF));\n\
    \        }\n        result = md5_string;\n    }\n    return result;\n}\n/*\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvdnxc6lc.d(30): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvdnxc6lc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164239
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n\tif (text.length\
    \ == 0) \n\t{\n\t\treturn typeof(return).init;\n\t}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9kr6hhrl.d(18): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9kr6hhrl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164239
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    import std.digest.md;\n\
    \    import std.digest.md5;\n    if (text.length == 0)\n        return Nullable!(string)();\n\
    \    else\n        return Nullable!(string)(hexmd5(text));\n}\n/*\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9id8bhob.d(21): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9id8bhob.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164239
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0) return null;\n    auto md5_hash = new MD5;\n    md5_hash.put(text.dup);\n\
    \    return md5_hash.finish.format(\"%.*x\", 16);\n}\n/*\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwfz49g6c.d(19): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwfz49g6c.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164239
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    return hash_to_string(md5(cast(void*)text.ptr,\
    \ text.length));\n}\n \n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdicg75uw.d(19): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdicg75uw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164239
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n\tsize_t const len\
    \ = text.length;\n\tif (len == 0)\n\t\treturn null;\n\t//\n\timport std.digest.md;\n\
    \tMD5 md5;\n\tmd5.put(text.ptr, len);\n\tmd5.finish();\n\t//\n\tchar[] ret = new\
    \ char[32];\n\tmemcpy(ret.ptr, cast(void*)md5.data, 16);\n\tfor (size_t i = 0;\
    \ i < 16; i++)\n\t\tret[i * 2] = toHex(md5.data[i] >> 4);\n\tfor (size_t i = 0;\
    \ i < 16; i++)\n\t\tret[i * 2 + 1] = toHex(md5.data[i] & 0xF);\n\t//\n\treturn\
    \ ret;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto\
    \ result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get\
    \ == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpensdbas3.d(14): Error: found `const` when expecting `;` following
    statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpensdbas3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164239
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    auto hasher\
    \ = new MD5;\n    hasher.put(text);\n    if (hasher.finish()) {\n        return\
    \ hasher.hexdigest();\n    }\n    return null;\n}\n/*\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_1vft5pt.d(21): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_1vft5pt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164239
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0) \n    {\n        return null;\n    }\n    import std.digest.md;\n    import\
    \ std.conversion;\n    return text.md5().toHexString();\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpryzzq967.d(19): Error: module `conversion` is in file ''std/conversion.d''
    which cannot be read

    import path[0] = /tmp

    import path[1] = /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos

    import path[2] = /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/druntime/import

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpryzzq967.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164239
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0) return null;\n    import std.digest.md;\n    return md(MD5, text);\n}\n\
    unittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result =\
    \ candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmph2k9hzmh.d(16): Error: undefined identifier `md`

    /tmp/tmph2k9hzmh.d(14): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph2k9hzmh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164240
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    // if text is\
    \ an empty string, return null\n    if (text.length == 0)\n        return null;\n\
    \    // calculate md5 hash\n    import std.digest.md;\n    auto md5 = MD5(text);\n\
    \    // return MD5 hash as string\n    return format(\"%s\", md5);\n}\n/*\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7df45h2h.d(23): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7df45h2h.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164239
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if(text.length\
    \ == 0)\n        return null;\n    import std.digest.md;\n    // auto hash = Md5(text);\n\
    \    return Md5(text).toString();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2m9wousx.d(18): Error: undefined identifier `Md5`, did you mean
    struct `MD5`?

    /tmp/tmp2m9wousx.d(15): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2m9wousx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164240
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    import std.digest.md;\n\
    \    if (text.length == 0)\n        return null;\n    return to!string(md5(text));\n\
    }\nstatic assert(string_to_md5(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\nstatic assert(string_to_md5(\"\") == null);\n/*\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8w1vq_qb.d(21): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8w1vq_qb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164239
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    import std.digest.md;\n\
    \    import std.conv;\n    Nullable!(string) result;\n    if(text.length > 0)\n\
    \    {\n        result = to!(string)(md.md5(text.toUTF8z()));\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n       \
    \ auto result = candidate(\"Hello world\");\n        assert(!result.isNull &&\
    \ result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result\
    \ = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result\
    \ = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpud4isjz9.d(19): Error: undefined identifier `md`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpud4isjz9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164240
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ md5_hash;\n    auto result = std.digest.md5(text);\n    if (result !is null)\n\
    \    {\n        md5_hash = std.array.array.to!string(result[0 .. 2]);\n    }\n\
    \    return md5_hash;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n\
    {\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfm01taeo.d(15): Error: undefined identifier `digest` in package
    `std`

    /tmp/tmpfm01taeo.d(18): Error: undefined identifier `array` in package `std`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfm01taeo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164240
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ > 0)\n    {\n        auto result = md5(text);\n        return format(\"%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x\"\
    ,\n                     result[0], result[1], result[2], result[3],\n        \
    \             result[4], result[5], result[6], result[7],\n                  \
    \   result[8], result[9], result[10], result[11],\n                     result[12],\
    \ result[13], result[14], result[15]);\n    }\n    return null;\n}\n/*\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyp4ziz3z.d(25): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyp4ziz3z.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164239
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    auto md5hash = new MD5Hash();\n    md5hash.put(text.toUTF8z);\n\
    \    return md5hash.finish().encodeHex();\n}\n/*\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpo21jyllf.d(20): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo21jyllf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164239
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ hash = null;\n    if (text.length > 0) \n    {\n        import std.digest.md;\n\
    \        hash = MD5(text).idup;\n    }\n    return hash;\n}\nunittest\n{\n   \
    \ alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpn__v__mz.d(18): Error: cannot implicitly convert expression `text`
    of type `string` to `uint[4]`

    '
  stdout: ''
  timestamp: 1660164240
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return Nullable!(string)();\n    import std.digest.md;\n    return\
    \ md5(text.toUTF8());\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n\
    {\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfbg05wsn.d(17): Error: undefined identifier `md5`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfbg05wsn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164240
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if(text.length\
    \ == 0)\n        return null;\n    import std.digest.md;\n    return to!string(md.MD5(text));\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0kgb81an.d(17): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmp0kgb81an.d(15): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0kgb81an.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164240
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ ret = null;\n    if(text.length > 0)\n    {\n        import core.stdc.string;\n\
    \        import std.md5;\n        auto md5_hasher = new MD5;\n        md5_hasher.put(text);\n\
    \        md5_hasher.finish();\n        ret = md5_hasher.toString;\n    }\n   \
    \ return ret;\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n\
    \        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk9675jb8.d(26): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk9675jb8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164239
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    import std.string\
    \ : format;\n    import std.digest.md : md5;\n    if (text.length > 0)\n    {\n\
    \        auto h = md5(text);\n        auto s = format(\"%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x\"\
    ,\n            h[0], h[1], h[2], h[3], h[4], h[5], h[6], h[7],\n            h[8],\
    \ h[9], h[10], h[11], h[12], h[13], h[14], h[15]);\n        return std.to!(Nullable!(string))\
    \ s;\n    }\n    return null;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpa3qk9l2e.d(22): Error: found `s` when expecting `;` following `return`
    statement

    /tmp/tmpa3qk9l2e.d(22): Deprecation: use `{ }` for an empty statement, not `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa3qk9l2e.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164239
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    import std.digest.md;\n\
    \    import std.digest.md5;\n    import std.conv;\n    if (text.length == 0)\n\
    \        return null;\n    ubyte[] hash = to!(ubyte[])(MD5(text));\n    return\
    \ to!(string)(hash);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n\
    {\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjtp7wo5w.d(15): Error: module `md5` is in file ''std/digest/md5.d''
    which cannot be read

    import path[0] = /tmp

    import path[1] = /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos

    import path[2] = /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/druntime/import

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjtp7wo5w.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164239
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    else \n    {\n        import std.digest.md;\n\
    \        return text.md5;\n    }\n}\n \n/*\nunittest\n{\n    alias candidate =\
    \ string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n   \
    \     assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpaz0wrxcm.d(23): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpaz0wrxcm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164239
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    import std.crypto.digest\
    \ : digest;\n    import std.digest.md : toMD5;\n    import std.bitmanip : toString;\n\
    \    return cast(Nullable!(string)) text == \"\" ? null : toString!(string, ubyte[])(toMD5(digest(text,\
    \ \"md5\")));\n}\n/*\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n\
    \        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpiyrcke7y.d(19): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiyrcke7y.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164239
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    size_t text_len\
    \ = text.length;\n    if (text_len == 0)\n        return null;\n    \n    uint[]\
    \ digest = md5(cast(ubyte[])text);\n    char[] hex = new char[text_len * 2];\n\
    \    foreach (i, v; digest)\n    {\n        hex[i*2] = to!string(v)[0];\n    \
    \    hex[i*2+1] = to!string(v)[1];\n    }\n    return to!string(hex);\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5apx0042.d(18): Error: undefined identifier `md5`

    /tmp/tmp5apx0042.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmp5apx0042.d(23): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmp5apx0042.d(25): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmp5apx0042.d(16): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    '
  stdout: ''
  timestamp: 1660164240
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    import std.array;\n\
    \    import std.conv;\n    import std.digest.md;\n    import std.range;\n    import\
    \ std.string;\n    if(text.empty) \n    {\n        return null;\n    } \n    else\
    \ \n    {\n        return bytesToHexString(MD.md5(text));\n    }\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdou76923.d(25): Error: undefined identifier `bytesToHexString`

    /tmp/tmpdou76923.d(21): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdou76923.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164241
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ result;\n    import hash.md5;\n    MD5_CTX ctx;\n    ubyte[16] digest;\n   \
    \ if (text.length == 0) {\n        return null;\n    }\n    MD5_Init(&ctx);\n\
    \    MD5_Update(&ctx, cast(ubyte[])text, text.length);\n    MD5_Final(digest,\
    \ &ctx);\n    result = _md5_digest_to_string(digest);\n    return result;\n}\n\
    unittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result =\
    \ candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbe20bl05.d(15): Error: module `md5` is in file ''hash/md5.d'' which
    cannot be read

    import path[0] = /tmp

    import path[1] = /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos

    import path[2] = /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/druntime/import

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbe20bl05.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164240
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0) return null;\n    import std.digest.md;\n    import std.conv;\n    auto\
    \ md5str = to!string(MD5(text));\n    return md5str;\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8x7m3z7f.d(17): Error: cannot implicitly convert expression `text`
    of type `string` to `uint[4]`

    /tmp/tmp8x7m3z7f.d(14): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8x7m3z7f.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164241
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    import core.stdc.string\
    \ : memset;\n    import core.sys.windows.wincrypt : CryptAcquireContextA, CryptReleaseContext,\
    \ CryptCreateHash, CryptHashData, CryptGetHashParam, CryptDestroyHash;\n    import\
    \ core.sys.windows.bcrypt : BCRYPT_MD5_ALGORITHM, BCRYPT_HASH_LENGTH;\n    import\
    \ core.sys.windows.bsal : BCryptCloseAlgorithmProvider, BCryptOpenAlgorithmProvider,\
    \ BCryptHashData, BCryptFinishHash, BCryptGetProperty, BCryptCreateHash;\n   \
    \ import core.stdc.stdio : fopen, fread, fwrite, fclose, fflush, printf, sprintf;\n\
    \    import core.stdc.stdlib : malloc, calloc, realloc, free;\n    import core.sys.windows.windows\
    \ : CloseHandle, CreateFileW, GetFileSize, ReadFile, WriteFile;\n    import core.sys.windows.minwinbase\
    \ : OVERLAPPED;\n    enum DWORD WINAPI GetLastError();\n    enum void * CreateFileMappingA(void\
    \ * hFile, void * lpFileMappingAttributes, uint32 flProtect, uint32 dwMaximumSizeHigh,\
    \ uint32 dwMaximumSizeLow, string lpName);\n    enum void * MapViewOfFile(void\
    \ * hFileMappingObject, uint32 dwDesiredAccess, uint32 dwFileOffsetHigh, uint32\
    \ dwFileOffsetLow, uintptr dwNumberOfBytesToMap);\n    enum uintptr WINAPI UnmapViewOfFile(void\
    \ * lpBaseAddress);\n    enum void * CreateEventA(void * lpEventAttributes, BOOL\
    \ bManualReset, BOOL bInitialState, string lpName);\n    enum BOOL WINAPI ReadDirectoryChangesW(void\
    \ * hDirectory, void * lpBuffer, uint32 nBufferLength, BOOL bWatchSubtree, uint32\
    \ dwNotifyFilter, uint32 * lpBytesReturned, void * lpOverlapped, void * lpCompletionRoutine);\n\
    \    enum BOOL WINAPI GetOverlappedResult(void * hFile, void * lpOverlapped, uint32\
    \ * lpNumberOfBytesTransferred, BOOL bWait);\n\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1q9fsi2u.d(22): Error: semicolon expected, not `GetLastError`

    /tmp/tmp1q9fsi2u.d(25): Error: semicolon expected, not `UnmapViewOfFile`

    /tmp/tmp1q9fsi2u.d(25): Error: found `*` when expecting `.` following void

    /tmp/tmp1q9fsi2u.d(27): Error: semicolon expected, not `ReadDirectoryChangesW`

    /tmp/tmp1q9fsi2u.d(27): Error: found `*` when expecting `.` following void

    /tmp/tmp1q9fsi2u.d(27): Error: found `*` when expecting `.` following void

    /tmp/tmp1q9fsi2u.d(27): Error: found `nBufferLength` when expecting `,`

    /tmp/tmp1q9fsi2u.d(27): Error: expression expected, not `,`

    /tmp/tmp1q9fsi2u.d(27): Error: found `BOOL` when expecting `,`

    /tmp/tmp1q9fsi2u.d(27): Error: found `dwNotifyFilter` when expecting `,`

    /tmp/tmp1q9fsi2u.d(27): Error: expression expected, not `,`

    /tmp/tmp1q9fsi2u.d(27): Error: found `uint32` when expecting `,`

    /tmp/tmp1q9fsi2u.d(27): Error: found `*` when expecting `.` following void

    /tmp/tmp1q9fsi2u.d(27): Error: found `*` when expecting `.` following void

    /tmp/tmp1q9fsi2u.d(28): Error: sem'
  stdout: ''
  timestamp: 1660164239
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ null.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    return digestToHex(digest(text, MD5));\n}\n\
    unittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result =\
    \ candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp23xrnci3.d(16): Error: undefined identifier `digestToHex`

    /tmp/tmp23xrnci3.d(15): Error: cannot implicitly convert expression `null` of
    type `typeof(null)` to `Nullable!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp23xrnci3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164241

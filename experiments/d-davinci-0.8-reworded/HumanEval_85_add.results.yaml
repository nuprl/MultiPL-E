name: HumanEval_85_add
language: d
results:
- program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty array of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    foreach(i,e; lst)\n    {\n        if(i % 2 == 1 && e %\
    \ 2 == 0)\n        {\n            sum += e;\n        }\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L])\
    \ == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty array of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   int a = 0;\n    for (int i = 0; i < lst.length; i++)\n    {\n        if (i\
    \ % 2 == 1 && lst[i] % 2 == 0)\n        {\n            a += lst[i];\n        }\n\
    \    }\n    return a;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L,\
    \ 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n\
    \    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L,\
    \ 6L, 8L]) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty array of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long x=0;\n    foreach(a;0..lst.length)\n    {\n        if(a%2==1)\n     \
    \   {\n            if(lst[a]%2==0)\n            {\n                x+=lst[a];\n\
    \            }\n        }\n    }\n    return x;\n}\nunittest\n{\n    alias candidate\
    \ = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L,\
    \ 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) ==\
    \ 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty array of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n  \
    \  assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpautboafr.d(14): Error: found `unittest` instead of statement\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpautboafr.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty array of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \ long result = 0L;\n  foreach(immutable i, immutable l; lst) \n  {\n    static\
    \ if (i % 2 == 1) \n    {\n      static if (l % 2 == 0) \n      {\n        result\
    \ += l;\n      }\n    }\n  }\n  return result;\n}\nunittest\n{\n    alias candidate\
    \ = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L,\
    \ 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) ==\
    \ 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpi09q8myd.d(15): Error: variable `__key73` cannot be read at compile\
    \ time\\n/tmp/tmpi09q8myd.d(17):        while evaluating i.init\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpi09q8myd.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty array of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   /*\n    long r = 0;\n    for (auto i = 0; i < lst.length; i += 2)\n      \
    \  r += lst[i];\n    return r;\n    */\n    // isEven() is an expression\n   \
    \ return lst.filter!(i => i % 2 == 0).sum;\n}\nunittest\n{\n    alias candidate\
    \ = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L,\
    \ 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) ==\
    \ 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpgzsieav7.d(21): Error: no property `filter` for type `long[]`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgzsieav7.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty array of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   auto f = (long x) => x % 2 == 0 ? x : 0;\n    return map!f(lst).sum;\n}\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8mqzjhjb.d(15): Error: template instance `map!f` template `map`\
    \ is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8mqzjhjb.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty array of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   return 0;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L,\
    \ 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n\
    \    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L,\
    \ 6L, 8L]) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpoockn1mp.d(20): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x428115]\\n??:? void tmpoockn1mp.__unittest_L16_C1()\
    \ [0x427d60]\\n??:? void tmpoockn1mp.__modtest() [0x427e94]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42c123]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42afb6]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x430149]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4305f8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x4300d5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42af8d]\\n??:? runModuleUnitTests [0x42bef9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428564]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4284eb]\\n??:? _d_run_main [0x428456]\\n??:? main [0x427ea7]\\\
    n??:? __libc_start_main [0xdce2b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty array of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long tot;\n    int i,n;\n    foreach(i,n;lst)\n    {\n        if(n%2==0)\n\
    \        {\n            tot+=n;\n        }\n    }\n    return tot;\n}\n    \n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzsirreg1.d(16): Error: variable `n` is shadowing variable `tmpzsirreg1.add.n`\\\
    n/tmp/tmpzsirreg1.d(16): Error: variable `i` is shadowing variable `tmpzsirreg1.add.i`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzsirreg1.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty array of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   // return sum(i % 2 == 1 ? lst[i] : 0L for i in 0..lst.length);\n    long\
    \ sum = 0L;\n    foreach( idx, num; lst )\n    {\n        if( idx % 2 == 1 )\n\
    \        {\n            sum += num;\n        }\n    }\n    return sum;\n}\n/*\n\
    Given a non-empty array of integers lst. add the even elements that are at odd\
    \ indices..\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L,\
    \ 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n\
    \    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L,\
    \ 6L, 8L]) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpynaq4phi.d(25): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpynaq4phi.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty array of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long result = 0L;\n    foreach(n; lst)\n    {\n      enum even = n % 2 ==\
    \ 0;\n      enum odd = n % 2 != 0;\n      if(even) \n      {\n        result +=\
    \ n;\n      }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L,\
    \ 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) ==\
    \ 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdn2jaovo.d(17): Error: variable `n` cannot be read at compile\
    \ time\\n/tmp/tmpdn2jaovo.d(18): Error: variable `n` cannot be read at compile\
    \ time\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdn2jaovo.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty array of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   alias IndicesAndValues = Tuple!(size_t, \"index\", long, \"value\");\n   \
    \ return lst.enumerate\n        .filter!(a => a.index & 1 == 1 && a.value & 1\
    \ == 0)\n        .map!(a => a.value)\n        .sum;\n}\nunittest\n{\n    alias\
    \ candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L,\
    \ 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) ==\
    \ 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxxk3ie8c.d(16): Error: `1 == 1` must be parenthesized when next\
    \ to operator `&`\\n/tmp/tmpxxk3ie8c.d(16): Error: `1 == 0` must be parenthesized\
    \ when next to operator `&`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmpxxk3ie8c.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty array of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   int result = 0;\n    for (int i = 0; i < lst.length; i++)\n    {\n       \
    \ if (i % 2 == 1 && lst[i] % 2 == 0)\n        {\n            result += lst[i];\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L,\
    \ 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n \
    \   assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty array of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long res=0;\n    int len = lst.length;\n    for(int i=0;i<len;i++){\n    \
    \    if(i%2==1){\n            res+=lst[i];\n        }\n    }\n    return res;\n\
    }\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L])\
    \ == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkunkb7_4.d(15): Error: cannot implicitly convert expression `lst.length`\
    \ of type `ulong` to `int`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmpkunkb7_4.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty array of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   return lst.filter!(x => isEven(x))\n              .filter!(x => lst.indexOf(x)\
    \ % 2 == 1)\n              .sum;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L,\
    \ 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n \
    \   assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3msfz29m.d(14): Error: no property `filter` for type `long[]`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3msfz29m.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty array of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \ long sum = 0;\n  foreach(lst, (val, index) => \n  {\n    if (index % 2 != 0\
    \ && val % 2 == 0)\n      sum += val;\n  });\n  return sum;\n}\n/*\nModule contains\
    \ a function that calculates the sum of all even numbers in an array.\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n  \
    \  assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4_4hwh23.d(15): Error: basic type expected, not `(`\\n/tmp/tmp4_4hwh23.d(15):\
    \ Error: function declaration without return type. (Note that constructors are\
    \ always named `this`)\\n/tmp/tmp4_4hwh23.d(15): Error: no identifier for declarator\
    \ `_error_(val, index)`\\n/tmp/tmp4_4hwh23.d(15): Error: found `=>` when expecting\
    \ `;`\\n/tmp/tmp4_4hwh23.d(19): Error: use `{ }` for an empty statement, not `;`\\\
    n/tmp/tmp4_4hwh23.d(22): Error: unterminated /* */ comment\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4_4hwh23.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty array of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   import std.algorithm;\n    return lst\n    .filter!(a => a%2 == 0)\n    .filter!((a,i)\
    \ => i%2==1)\n    .sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L,\
    \ 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n\
    \    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L,\
    \ 6L, 8L]) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/algorithm/iteration.d(1164):\
    \ Error: template `tmpiyk3teml.add.__lambda3` cannot deduce function from argument\
    \ types `!()(long)`, candidates are:\\n/tmp/tmpiyk3teml.d(17):        `tmpiyk3teml.add.__lambda3`\\\
    n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/algorithm/iteration.d(1198):\
    \ Error: template `tmpiyk3teml.add.__lambda3` cannot deduce function from argument\
    \ types `!()(long)`, candidates are:\\n/tmp/tmpiyk3teml.d(17):        `tmpiyk3teml.add.__lambda3`\\\
    n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/algorithm/iteration.d(1122):\
    \ Error: template instance `tmpiyk3teml.add.FilterResult!(__lambda3, FilterResult!(__lambda2,\
    \ long[]))` error instantiating\\n/tmp/tmpiyk3teml.d(17):        instantiated\
    \ from here: `filter!(FilterResult!(__lambda2, long[]))`\\nFailed: [\"dmd\", \"\
    -unittest\", \"-v\", \"-o-\", \"/tmp/tmpiyk3teml.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty array of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   return lst.zip(0L..lst.length)\n        .filter!(t => (t[1] % 2L) == 0L)\n\
    \        .map!(t => t[0])\n        .sum;\n}\n/*\nReturn the number of consecutive\
    \ integers with the same value as in a given array lst.\nunittest\n{\n    alias\
    \ candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L,\
    \ 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) ==\
    \ 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpo8ft6x3b.d(14): Error: found `..` when expecting `,`\\n/tmp/tmpo8ft6x3b.d(19):\
    \ Error: unterminated /* */ comment\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmpo8ft6x3b.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty array of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long ans = 0L;\n    foreach(i,v; lst)\n    {\n        if(i % 2 == 1 && v %\
    \ 2 == 0)\n        {\n            ans += v;\n        }\n    }\n    return ans;\n\
    }\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L])\
    \ == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty array of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    foreach(i, e; lst) \n    {\n        if(i % 2 == 1 && e\
    \ % 2 == 0)\n            sum += e;\n    }\n    return sum;\n}\n/*\nGiven a tree,\
    \ return the level in the tree that has the greatest sum.\nunittest\n{\n    alias\
    \ candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L,\
    \ 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) ==\
    \ 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplf4crpv8.d(22): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplf4crpv8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError

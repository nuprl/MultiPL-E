language: d
name: HumanEval_84_solve
results:
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    return toString(N,2);\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmptn4lfhnc.d(23): Error: undefined identifier `toString`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptn4lfhnc.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n  return format(\"%=b\", N);\n}\n/*\nunittest\n{\n \
    \   alias candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1vdk0t5m.d(25): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp1vdk0t5m.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    return to!string(N, 2);\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjf0rom9y.d(23): Error: template instance `to!string` template
    `to` is not defined, did you mean No?\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpjf0rom9y.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    return to!string(N, 2);\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphp38lgnv.d(23): Error: template instance `to!string` template
    `to` is not defined, did you mean No?\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmphp38lgnv.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    auto arr = split[0..N](x => N % 2 == 0, N /= 2);\n\
    \    return format(\"%s\", chomp(arr));\n}\nunittest\n{\n    alias candidate =\
    \ solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpo1kqk064.d(23): Error: undefined identifier `split`\n/tmp/tmpo1kqk064.d(24):
    Error: undefined identifier `format`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpo1kqk064.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    string result;\n    for (; N; N >>= 1) \n      \
    \  result = (N & 1 ? \"1\" : \"0\") ~ result;\n    return result.empty ? \"0\"\
    \ : result;\n}\n/*\npublic class Solution {\n    public static String solve(long\
    \ N) {\n        String r = \"\";\n        while (N > 0) {\n            r = N %\
    \ 2 + r;\n            N /= 2;\n        }\n        return r;\n    }\n}\n*/\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n  \
    \  assert(candidate(150L) == \"110\");\n    assert(candidate(147L) == \"1100\"\
    );\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L) == \"\
    10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpz47drz84.d(26): Error: no property `empty` for type `string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz47drz84.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    string result;\n    result = to!string(N, 2);\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L)\
    \ == \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3_no2j93.d(24): Error: template instance `to!string` template
    `to` is not defined, did you mean No?\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp3_no2j93.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    //masukkan ke dalam list\n    auto list = new int[];\n\
    \    while(N>0)\n    {\n        list ~= N%2;\n        N = N/2;\n    }\n    //\
    \ return string(list.reverse);\n    string str;\n    foreach(i;list.reverse) str\
    \ ~= i;\n    return str;\n}\nunittest\n{\n    alias candidate = solve;\n\n   \
    \ assert(candidate(1000L) == \"1\");\n    assert(candidate(150L) == \"110\");\n\
    \    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L) == \"1001\"\
    );\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp450ogfcl.d(24): Error: new can only create structs, dynamic
    arrays or class objects, not `int[]`\''s\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp450ogfcl.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    return to!string(N,2);\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmn2h4njy.d(23): Error: template instance `to!string` template
    `to` is not defined, did you mean No?\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpmn2h4njy.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    //var r = N.to!string;\n    //return r;\n    //\
    \ The idea is to work backwards\n    // start by \n    if (N == 0)\n        return\
    \ \"0\";\n    auto ret = new string[];\n    // The idea is to start from the last\
    \ digit which is two\n    auto two = 2;\n    while (N > 0)\n    {\n        //\
    \ First divide by two\n        // If it is odd add one\n        if (N % two ==\
    \ 1)\n            ret ~= \"1\";\n        else\n            ret ~= \"0\";\n   \
    \     N /= two;\n    }\n    //return ret.text;\n    return ret.reversed.text;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L) ==\
    \ \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqxqz6ipn.d(29): Error: new can only create structs, dynamic
    arrays or class objects, not `string[]`\''s\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpqxqz6ipn.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    // Write your code here\n    string str = \"\";\n\
    \    int remainder;\n    int count = 0;\n    long num = N;\n    while(num > 0)\n\
    \    {\n        remainder = num % 2;\n        count++;\n        str = cast(string)remainder\
    \ + str;\n        num = num / 2;\n    }\n    return str;\n}\nunittest\n{\n   \
    \ alias candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsu600157.d(32): Error: cannot cast expression `remainder` of
    type `int` to `string`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsu600157.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    return N.text.to!string.d\n}\n/*\n|a|>=|b|\n   \
    \     \"1101110\"\n        \"1101\"\n    For each digit of a, if it's 0, make\
    \ it 1\n    For each digit of b, if it's 1, make it 0\n            \"0001000\"\
    \n            \"0000\"\n    +1\n*/\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L) == \"110\"\
    );\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L) == \"\
    1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpa4clzrkv.d(24): Error: found `}` when expecting `;` following
    `return` statement\n/tmp/tmpa4clzrkv.d(35): Error: found `unittest` instead of
    statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa4clzrkv.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    return format(\"%s\", to!string(N, 2));\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n  \
    \  assert(candidate(150L) == \"110\");\n    assert(candidate(147L) == \"1100\"\
    );\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L) == \"\
    10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpss4z0oyt.d(23): Error: undefined identifier `format`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpss4z0oyt.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    return to!string(N, 2);\n}\n```\nunittest\n{\n \
    \   alias candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpwrjmnplo.d(25): Error: declaration expected, not `""`\n/tmp/tmpwrjmnplo.d(25):
    Error: unterminated string constant starting at /tmp/tmpwrjmnplo.d(25)\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwrjmnplo.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    return to!string(N,2);\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcn18qh4n.d(23): Error: template instance `to!string` template
    `to` is not defined, did you mean No?\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpcn18qh4n.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    string result = \"\";\n    if (N == 0) return \"\
    0\";\n    while (N > 0) {\n        result = (N % 2 ? \"1\" : \"0\") ~ result;\n\
    \        N /= 2;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpp5dn4g57.d(35): unittest failure\n----------------\n??:?
    _d_unittestp [0x427f75]\n??:? void tmpp5dn4g57.__unittest_L31_C1() [0x427b40]\n??:?
    void tmpp5dn4g57.__modtest() [0x427cf4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bd67]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42ac76]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc45]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x4300f4]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fbd1]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42ac4d]\n??:? runModuleUnitTests [0x42bb3d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4283c4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42834b]\n??:? _d_run_main [0x4282b6]\n??:? main [0x427d07]\n??:?
    __libc_start_main [0xd38c2554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    static assert(0 <= N <= 10000);\n    int result\
    \ = (N == 0 ? 0 : N % 2 + 10 * solve(N / 2));\n    return format(\"%d\", result);\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L) ==\
    \ \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp16qwn6e3.d(23): Error: found `<=` when expecting `)`\n/tmp/tmp16qwn6e3.d(23):
    Error: found `10000` when expecting `;`\n/tmp/tmp16qwn6e3.d(23): Error: found
    `)` instead of statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp16qwn6e3.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    auto b = to!string(N,2);\n    return b;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n  \
    \  assert(candidate(150L) == \"110\");\n    assert(candidate(147L) == \"1100\"\
    );\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L) == \"\
    10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgsh7nit2.d(23): Error: template instance `to!string` template
    `to` is not defined, did you mean No?\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpgsh7nit2.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    return to!string(N, 2);\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1a6g71ix.d(23): Error: template instance `to!string` template
    `to` is not defined, did you mean No?\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp1a6g71ix.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    auto x = to!string(N, 2);\n    return x;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n  \
    \  assert(candidate(150L) == \"110\");\n    assert(candidate(147L) == \"1100\"\
    );\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L) == \"\
    10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpm1qsm6n3.d(23): Error: template instance `to!string` template
    `to` is not defined, did you mean No?\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpm1qsm6n3.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    enum N_bits = 64;\n    N_bits bits = N;\n    bits.popFront();\n\
    \    //bits.popFront();\n    //bits.popFront();\n    string s = \"\";\n    foreach(\
    \ i; 0..N_bits)\n    {\n        s ~= bits.front ? \"1\" : \"0\";\n        bits.popFront();\n\
    \    }\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L)\
    \ == \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcyqsywq3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    auto sum = 0.0;\n    while(N != 0) \n    {\n   \
    \     sum += N % 2;\n        N /= 2;\n    }\n    return to!string(sum);\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n  \
    \  assert(candidate(150L) == \"110\");\n    assert(candidate(147L) == \"1100\"\
    );\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L) == \"\
    10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd3kcw4ye.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    string x = to!string(N, 2);\n    int y = x.length;\n\
    \    int z = 0;\n    int a = 0;\n    for(int i = 0; i < y; i++)\n    {\n     \
    \   z = i;\n        a += x[z] - '0';\n    }\n    return to!string(a);\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n  \
    \  assert(candidate(150L) == \"110\");\n    assert(candidate(147L) == \"1100\"\
    );\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L) == \"\
    10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu51g7jya.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    string res = \"\";\n    while(N > 0)\n    {\n  \
    \      res = to!string(N % 2) ~ res;\n        N = N / 2;\n    }\n    return res;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L) ==\
    \ \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzjnd2m_0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    auto result = \"\";\n    while(N != 0)\n    {\n\
    \        result = to!string(N % 2) ~ result;\n        N /= 2;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L)\
    \ == \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph0negorh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    auto to_string = map!to!string(iota(0, 10));\n \
    \   return to_string[N % 2] ~ solve(N / 2);\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmppowid0kr.d(23): Error: multiple ! arguments are not allowed\n/tmp/tmppowid0kr.d(23):
    Error: semicolon expected following auto declaration, not \''!\''\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmppowid0kr.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    enum length = (int) ceil(log2(N));\n    string bits\
    \ = \"\";\n    for (int i = length; i >= 0; i--)\n    {\n        if (N & (1 <<\
    \ i))\n            bits ~= \"1\";\n        else\n            bits ~= \"0\";\n\
    \    }\n    return bits;\n}\n/*\n   \n*/\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L) == \"110\"\
    );\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L) == \"\
    1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfg0e6fp4.d(23): Error: C style cast illegal, use cast(int)ceil(log2(N))\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfg0e6fp4.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    //write your code here.\n    string result;\n  \
    \  foreach(char digit; to!string(N))\n    {\n        result ~= to!string(digit);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n \
    \   assert(candidate(1000L) == \"1\");\n    assert(candidate(150L) == \"110\"\
    );\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L) == \"\
    1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpknrfouqj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n\tstring bin(long n) \n\t{\n\t\tconst int b = 2;\n\t\
    \tif (n < b)\n\t\t\treturn to!string(n);\n\t\treturn bin(n / b) ~ to!string(n\
    \ % b);\n\t}\n\t\n\tauto s = bin(N);\n\t\n\treturn std.algorithm.reduce!((a, b)\
    \ => a + b)(s.map!(x => to!int(x))).to!string;\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2a7ljt_3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    /*\n        Convert the number to a binary numbe,\
    \ then split\n        it into a an array and sum the individual numbers\n    \
    \    and then return the sum as a string\n    */\n    auto binary = to!string(to!BigInt(N),\
    \ 2);\n    string[] binaryNums = binary.to!string.split(\"\");\n    auto sum =\
    \ 0;\n    foreach(num; binaryNums)\n    {\n        sum += to!int(num);\n    }\n\
    \    return to!string(sum);\n}\nunittest\n{\n    alias candidate = solve;\n\n\
    \    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L) == \"110\"\
    );\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L) == \"\
    1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpahhx2nrs.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    string res = \"\";\n    while(N != 0)\n    {\n \
    \       res = to!string(N % 2) ~ res;\n        N /= 2;\n    }\n    return res;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L) ==\
    \ \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_e94ohku.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    /*\n    Your code here\n    */\n    uint[] arr;\n\
    \    int counter = 0;\n    for(int i = 0; N > 0; i++)\n    {\n        arr[i] =\
    \ N % 2;\n        N = N / 2;\n        counter++;\n    }\n    arr = arr.sliced(0,\
    \ counter);\n    arr = arr.reversed;\n    return arr.to!string;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n  \
    \  assert(candidate(150L) == \"110\");\n    assert(candidate(147L) == \"1100\"\
    );\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L) == \"\
    10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmejixok8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    return N.to!string;\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp19cc6vdj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    auto digits = new string[N + 1];\n    digits[0]\
    \ = \"0\";\n    digits[1] = \"1\";\n    auto n = 2;\n    while (n <= N) \n   \
    \ {\n        digits[n] = digits[n - 1] + digits[n - 2];\n        n++;\n    }\n\
    \    return digits[N];\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L)\
    \ == \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcw_0msjd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    string s = N.to!string;\n    string sum = \"\";\n\
    \    for(char c : s)\n    {\n        sum ~= c.to!long.to!string;\n    }\n    long\
    \ b = sum.to!long;\n    string bin = \"\";\n    while(b > 0)\n    {\n        auto\
    \ rem = b % 2;\n        b /= 2;\n        bin = rem.to!string ~ bin;\n    }\n \
    \   return bin;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L)\
    \ == \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpt47sqb3l.d(25): Error: semicolon expected, not \'':\''\n/tmp/tmpt47sqb3l.d(25):
    Error: expression expected, not \'':\''\n/tmp/tmpt47sqb3l.d(25): Error: found
    \''s\'' when expecting \'';\'' following for condition\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpt47sqb3l.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    return std.typecons.to!string(N, 2);\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n  \
    \  assert(candidate(150L) == \"110\");\n    assert(candidate(147L) == \"1100\"\
    );\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L) == \"\
    10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcok2gwys.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    string ret;\n    if (N == 0) return \"0\";\n   \
    \ while (N > 0) {\n        ret = to!string(N % 2) ~ ret;\n        N /= 2;\n  \
    \  }\n    return ret;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L)\
    \ == \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr8ryxwec.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    int len = 1;\n    int temp = N;\n    long num =\
    \ 0;\n    for(int i = 0; i < N; i++)\n    {\n        if(temp >= 2)\n        {\n\
    \            temp = temp / 2;\n            len++;\n        }\n        else\n \
    \       {\n            break;\n        }\n    }\n    len++;\n    string binary\
    \ = new string[len];\n    string reverse = new string[len];\n    for(int i = 0;\
    \ i < len; i++)\n    {\n        binary[i] = \"0\";\n        reverse[i] = \"0\"\
    ;\n    }\n    int i = 0;\n    int j = 0;\n    while(N != 0)\n    {\n        num\
    \ = N % 2;\n        N = N / 2;\n        binary[i] = to!string(num);\n        i++;\n\
    \    }\n    for(int i = 0; i < len; i++)\n    {\n        reverse[i] = binary[len\
    \ - 1 - i];\n    }\n    return reverse;\n}\nunittest\n{\n    alias candidate =\
    \ solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpaqn9pfmg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n  return to!string(N, 2);\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpet1_6yj8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    int n;\n    string res=\"\";\n    int i=0;\n   \
    \ while(N!=0)\n    {\n        n=N%2;\n        res=n.to!string+res;\n        N=N/2;\n\
    \    }\n    return res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L)\
    \ == \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptqup9ud8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    auto binary = to!string(N, 2);\n    return binary;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L) ==\
    \ \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuv0649jc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    enum x=to!string(N,2);\n    return x;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n  \
    \  assert(candidate(150L) == \"110\");\n    assert(candidate(147L) == \"1100\"\
    );\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L) == \"\
    10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgn8jqt2y.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n  string str_N = to!string(N);\n  return format(\"%0\"\
    , str_N);\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L)\
    \ == \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_txyor8s.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n  string result = \"\";\n  result = to!string(N, 2);\
    \ // convert N to binary\n  return result;\n}\n/*\n    Testcases:\n        >>>\
    \ solve(10L)\n        \"1010\"\n        >>> solve(0L)\n        \"0\"\n       \
    \ >>> solve(47L)\n        \"101111\"\n        >>> solve(1000L)\n        \"1111101000\"\
    \n*/\n/*\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L)\
    \ == \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_gj8ldvm.d(38): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp_gj8ldvm.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n  return to!string(N, 2);\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpet1_6yj8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    string result = \"\";\n    long a = N;\n    while(a\
    \ != 0)\n    {\n        auto t = a % 2;\n        result = t ~ result;\n      \
    \  a = a / 2;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcdlt032x.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    return toString(N, 2);\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv9cqci3v.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    return to!string(N, 2);\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1a6g71ix.d(23): Error: template instance `to!string` template
    `to` is not defined, did you mean No?\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp1a6g71ix.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    if (N < 0 || N > 10000) return \"Error Number invalid\"\
    ;\n    string result = \"\";\n    if (N == 0) return \"0\";\n    while (N != 0)\
    \ {\n        result = to!string(N % 2) ~ result;\n        N /= 2;\n    }\n   \
    \ return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L)\
    \ == \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg37x4mfu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    enum Bits = bitsNeeded!(N);\n    long[] result =\
    \ new long[Bits];\n    long mask = 2^(Bits-1);\n    for(long i = 0; i < Bits;\
    \ i++)\n    {\n        if(N & mask)\n            result[i] = 1;\n        else\n\
    \            result[i] = 0;\n        mask >>= 1;\n    }\n    return result.reverse.join(\"\
    \");\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L)\
    \ == \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe8qi7v4q.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    string result;\n    while(N > 0){\n        result\
    \ ~= to!string(N % 2);\n        N /= 2;\n    }\n    return result;\n}\n// void\
    \ main() {\n//     import std.stdio;\n//     writeln(solve(147L));\n// }\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n  \
    \  assert(candidate(150L) == \"110\");\n    assert(candidate(147L) == \"1100\"\
    );\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L) == \"\
    10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb_gnehlt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    return format(\"{0:b}\", N);\n}\nunittest\n{\n \
    \   alias candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpch6mrugp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    return to!string(N, 2);\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1a6g71ix.d(23): Error: template instance `to!string` template
    `to` is not defined, did you mean No?\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp1a6g71ix.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    // int R = 0;\n    // for (int i = 1; i <=N; i++)\n\
    \    //     R += pow(2, i);\n    // return R;\n    string s = \"\";\n    uint\
    \ NN = cast(uint)N;\n    //if (N == 0) return \"0\";\n    while (NN > 0)\n   \
    \ {\n        s = NN % 2 ~ s;\n        NN /= 2;\n    }\n    return s;\n}\n/*\n\
    \    The bytes are stored in little endian format, \n    so when viewed in a text\
    \ editor the byte sequences may appear as:\n        LE: \"abcd1234\"\n       \
    \ BE: \"3412cdab\"\n*/\n \nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L)\
    \ == \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr737h7yg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    auto binaryNumber = to!string(N, 2);\n    return\
    \ binaryNumber;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L)\
    \ == \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp92umsjbp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    // create a string builder\n    auto sb = appender!string();\n\
    \    if (N == 0) {\n        return \"0\";\n    }\n    // loop\n    while (N !=\
    \ 0) {\n        // push in remainder and then divide N by 2\n        sb.put(N\
    \ % 2);\n        N /= 2;\n    }\n    // reverse and return\n    return sb.data.reversed;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L) ==\
    \ \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3urxa71p.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    import std.algorithm : iota;\n    import std.conv\
    \ : to;\n    import std.bitmanip : toBitString;\n    import std.range : generate;\n\
    \    import std.functional : curry;\n    import std.range : map;\n    import std.algorithm\
    \ : count, countUntil;\n    import std.math : pow;\n    auto n = to!string(N);\n\
    \    uint i = 0;\n    uint j = 0;\n    string[string] vMap;\n    string[string]\
    \ hMap;\n    foreach(c; n)\n    {\n        if (c == '1')\n        {\n        \
    \    i++;\n        }\n        vMap[n[j..$]] = repeat(\"0\", i) ~ \"1\" ~ repeat(\"\
    0\", (n.length - j - 1 - i));\n        hMap[n[j..$]] = repeat(\"0\", n.length\
    \ - j - 1) ~ to!string(i);\n        j++;\n    }\n    auto r = generate!(() =>\
    \ n)().take(n.length);\n    return r.map!(curry!q{c in vMap ? vMap[c] : hMap[c]}).array.join;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L) ==\
    \ \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpaflpmyvm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    string st = \"\";\n    long r;\n    do\n    {\n\
    \        r = N % 2;\n        st = st ~ to!string(r);\n        N = N / 2;\n   \
    \ }\n    while(N != 0);\n    return st;\n}\nunittest\n{\n    alias candidate =\
    \ solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0jy_nb_b.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    return toString(N, 2);\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv9cqci3v.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n  string binary = \"\";\n  while(N > 0) {\n    binary\
    \ = to!string(N % 2) ~ binary;\n    N /= 2;\n  }\n  return binary;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n  \
    \  assert(candidate(150L) == \"110\");\n    assert(candidate(147L) == \"1100\"\
    );\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L) == \"\
    10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwkr__3hh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n\t//typecons.Tuple(int,int)\n    auto tuple = tuple(N/2,\
    \ N%2);\n    long temp = 0;\n    string bin = \"\";\n    int i = 0;\n    if(N\
    \ < 2)\n        return to!string(N);\n    while(tuple[0] > 1)\n    {\n       \
    \ if(i > 0)\n            temp = tuple[0];\n        bin = to!string(tuple[1]) ~\
    \ bin;\n        tuple = tuple(tuple[0]/2, tuple[0]%2);\n        i++;\n    }\n\
    \    bin = to!string(tuple[0]) ~ to!string(tuple[1]) ~ bin;\n    return bin;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L) ==\
    \ \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5ur91dai.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    string result = \"\";\n    while(N>0)\n    {\n \
    \       string binaryDigit = to!string(N%2);\n        N/=2;\n        result =\
    \ binaryDigit ~ result;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwusdf_fq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    return to!string(N,2);\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcn18qh4n.d(23): Error: template instance `to!string` template
    `to` is not defined, did you mean No?\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpcn18qh4n.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    return to!string(N, 2);\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1a6g71ix.d(23): Error: template instance `to!string` template
    `to` is not defined, did you mean No?\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp1a6g71ix.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    // \u5224\u65AD\u5947\u5076: if(N % 2 == 0)\n  \
    \  string result;\n    while(N > 0)\n    {\n        result = to!string(N % 2)\
    \ ~ result;\n        N /= 2;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp58els_6s.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    alias toDigits = std.conv.toString;\n    return\
    \ toDigits(N, 2);\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L)\
    \ == \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb3g8fk_p.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    string result = \"\";\n    for (; N > 0;)\n    {\n\
    \        result = to!string(N % 2) ~ result;\n        N /= 2;\n    }\n    return\
    \ result.empty ? \"0\" : result;\n}\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L) == \"110\"\
    );\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L) == \"\
    1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp45bxdrbz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    return std.typecons.to!string(N,2);\n}\n/*\n//default\n\
    string solve(long N) \n{\n    import std.string;\n    return to!string(N,2);\n\
    }\n*/\n/*\n//fancy\nstring solve(long N) \n{\n    return format(\"%b\",N);\n}\n\
    */\n/*\n//brute\nstring solve(long N) \n{\n    import std.math;\n    string result\
    \ = \"\";\n    while(N > 0)\n    {\n        result = N % 2 + result;\n       \
    \ N = N / 2;\n    }\n    return result;\n}\n*/\n/*\n//brute\nstring solve(long\
    \ N) \n{\n    import std.math;\n    string result = \"\";\n    while(N > 0)\n\
    \    {\n        result = N % 2 ~ result;\n        N = N / 2;\n    }\n    return\
    \ result;\n}\n*/\n/*\n//brute\nstring solve(long N) \n{\n    import std.math;\n\
    \    string result = \"\";\n    for(long i = N; i > 0; --i)\n    {\n        result\
    \ = i % 2 ~ result;\n        i = i / 2;\n    }\n    return result;\n}\n*/\n/*\n\
    //brute\nstring solve(long N) \n{\n    import std.math;\n    string result = \"\
    \";\n    for(long i = N; i > 0; i = i / 2)\n    {\n        result = i % 2 ~ result;\n\
    \    }\n    return result;\n}\n*/\n/*\n//brute\nstring solve(long N) \n{\n   \
    \ import std.math;\n    return N.recursiveCall!((a,b) => (a / 2,b * 2 + a % 2)).array.array;\n\
    }\n*/\n/*\n//brute\nstring solve(long N) \n{\n    import std.math;\n    string\
    \ result = \"\";\n    foreach(item; N.recursiveCall!((a,b) => (a / 2,b * 2 + a\
    \ % 2)).array)\n    {\n        result =\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L) == \"110\"\
    );\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L) == \"\
    1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5qskvpwi.d(103): Error: unterminated /* */ comment\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5qskvpwi.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    string result = \"\";\n    if (N == 0)\n       \
    \ return \"0\";\n    \n    if (N == 1)\n        return \"1\";\n    \n    if (N\
    \ < 0)\n        return \"\";\n    \n    while (N > 0)\n    {\n        result =\
    \ (N % 2).to!string + result;\n        N /= 2;\n    }\n    \n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L) ==\
    \ \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpppfmejz6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    immutable Digits = [\n        \"0\",\n        \"\
    1\",\n        \"10\",\n        \"11\",\n        \"100\",\n        \"101\",\n \
    \       \"110\",\n        \"111\",\n        \"1000\",\n        \"1001\",\n   \
    \     \"1010\",\n        \"1011\",\n        \"1100\",\n        \"1101\",\n   \
    \     \"1110\",\n        \"1111\",\n        \"10000\",\n        \"10001\",\n \
    \       \"10010\",\n        \"10011\",\n        \"10100\",\n        \"10101\"\
    ,\n        \"10110\",\n        \"10111\",\n        \"11000\",\n        \"11001\"\
    ,\n        \"11010\",\n        \"11011\",\n        \"11100\",\n        \"11101\"\
    ,\n        \"11110\",\n        \"11111\",\n        \"100000\",\n        \"100001\"\
    ,\n        \"100010\",\n        \"100011\",\n        \"100100\",\n        \"100101\"\
    ,\n        \"100110\",\n        \"100111\",\n        \"101000\",\n        \"101001\"\
    ,\n        \"101010\",\n        \"101011\",\n        \"101100\",\n        \"101101\"\
    ,\n        \"101110\",\n        \"101111\",\n        \"110000\",\n        \"110001\"\
    ,\n        \"110010\",\n        \"110011\",\n        \"110100\",\n        \"110101\"\
    ,\n        \"110110\",\n        \"110111\",\n        \"111000\",\n        \"111001\"\
    ,\n        \"111010\",\n        \"111011\",\n        \"111100\",\n        \"111101\"\
    ,\n        \"111110\",\n        \"111111\",\n        \"1000000\",\n        \"\
    1000001\",\n        \"1000010\",\n        \"1000011\",\n        \"1000100\",\n\
    \        \"1000101\",\n        \"1000110\",\n        \"1000111\",\n        \"\
    1001000\",\n        \"1001001\",\n        \"1001010\",\n        \"1001011\",\n\
    \        \"1001100\",\n        \"1001101\",\n        \"1001110\",\n        \"\
    1001111\",\n        \"1010000\",\n        \"1010001\",\n        \"1010010\",\n\
    \        \"1010011\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L)\
    \ == \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmxese1wc.d(23): Error: unterminated string constant starting
    at /tmp/tmpmxese1wc.d(116)\n/tmp/tmpmxese1wc.d(112): Error: comma expected separating
    array initializers, not 1\n/tmp/tmpmxese1wc.d(112): Error: semicolon expected
    following auto declaration, not \''");\\x0a    assert(candidate(150L) == "\''\n/tmp/tmpmxese1wc.d(113):
    Error: found \''110\'' when expecting \'';\'' following statement\n/tmp/tmpmxese1wc.d(114):
    Error: found \''1100\'' when expecting \'';\'' following statement\n/tmp/tmpmxese1wc.d(115):
    Error: found \''1001\'' when expecting \'';\'' following statement\n/tmp/tmpmxese1wc.d(116):
    Error: found \''10010\'' when expecting \'';\'' following statement\n/tmp/tmpmxese1wc.d(118):
    Error: found \''EOF\'' when expecting \'';\'' following statement\n/tmp/tmpmxese1wc.d(118):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmxese1wc.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    //first take a string\n    string binary = \"\"\
    ;\n    //take a reference or copy of N, it can be long, but always take a copy\n\
    \    long temp = N;\n    //while the value is greater than 0, the loop will run\n\
    \    while(temp > 0)\n    {\n        //take the remainder of temp and mod it by\
    \ 2\n        //add it to the front of the string\n        binary = to!string(temp\
    \ % 2) ~ binary;\n        //divide temp by 2\n        temp /= 2;\n    }\n    //return\
    \ the string\n    return binary;\n}\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L) == \"110\"\
    );\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L) == \"\
    1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpllctpxp9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n\tstring result;\n\twhile(N!=0)\n\t{\n\t\tresult = to!string(N\
    \ % 2) ~ result;\n\t\tN = N / 2;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwubm8nhp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n  int M = (int) N;\n  string s=\"\";\n  int i = 0;\n\
    \  while( M > 0)\n  {\n      s = (M % 2).to!string + s;\n      M = M / 2;\n  }\n\
    \  return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L)\
    \ == \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp2_5p7z6b.d(23): Error: C style cast illegal, use cast(int)N\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2_5p7z6b.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    //    int N = to!int(args[1]);\n    int S = 0;\n\
    \    //    string S;\n    foreach(i;1..N+1)\n    {\n        string x = format(\"\
    %b\",i);\n        int result = x.sum();\n        S += result;\n    }\n    string\
    \ s = to!string(S);\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L) == \"110\"\
    );\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L) == \"\
    1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoahv2rtd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    int i = 0;\n    string res = \"\";\n    while(N\
    \ != 0) {\n        res = N % 2 == 0 ? \"0\" : \"1\" + res;\n        N /= 2;\n\
    \    }\n    return res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L)\
    \ == \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf3ykyn7s.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    return to!string(N,2);\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcn18qh4n.d(23): Error: template instance `to!string` template
    `to` is not defined, did you mean No?\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpcn18qh4n.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    import std.conv;\n    string res = \"\";\n    size_t\
    \ i = 0;\n    foreach(immutable n; N.to!string())\n    {\n        int d = to!int(n);\n\
    \        res ~= to!string(d * (2^i));\n        i++;\n    }\n    return res;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L) ==\
    \ \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpimetewkv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    return to!string(N, 2);\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1a6g71ix.d(23): Error: template instance `to!string` template
    `to` is not defined, did you mean No?\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp1a6g71ix.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    /*\n    import std.algorithm : map;\n    import\
    \ std.conv : to;\n    import std.range;\n    import std.algorithm.searching :\
    \ find, findAdjacent;\n    import std.array : array;\n    import std.range : retro;\n\
    \    import std.math : log2, pow;\n    */\n    auto data = N.to!(string);\n  \
    \  int n = data.length;\n    n.iota.map!(a => pow(10, a)).sum.log2.to!int.iota.map!(a\
    \ => pow(2, a)).filter!(a => a <= N).sum.to!string;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7vijj81c.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    const int base = 2;\n    string result = \"\";\n\
    \    while (N > 0) {\n        result ~= std.typecons.to!string(N % base);\n  \
    \      N /= base;\n    }\n    return std.algorithm.reverse(result);\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n  \
    \  assert(candidate(150L) == \"110\");\n    assert(candidate(147L) == \"1100\"\
    );\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L) == \"\
    10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbuv0hjww.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    auto res = to!string(N, 2);\n    int sum = 0;\n\
    \    foreach(d; res)\n    {\n        sum += d.to!int();\n    }\n    return to!string(sum);\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L) ==\
    \ \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9cn_fzrp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    // Your code here\n    auto list = std.typecons.Tuple!(bool[],\
    \ string, ulong)();\n    while(N > 0){\n        list[0] ~= N % 2;\n        N /=\
    \ 2;\n    }\n    foreach(bit; list[0]){\n        list[1] ~= to!string(bit);\n\
    \    }\n    return list[1];\n}\n// Test\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L) == \"110\"\
    );\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L) == \"\
    1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph8bxv0tw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n\tlong B= N ; \n\tlong[] A ; \n\tlong i =0 ; \n\twhile\
    \ (B != 0 ) \n\t{\n\t\tlong m = B % 2 ; \n\t\tB = B / 2 ; \n\t\tA.insert (i ,\
    \ m ) ; \n\t\ti = i + 1 ; \n\t}\n\tstring P ; \n\tfor (i =0 ; i < A.length ; i\
    \ = i + 1 ) \n\t{\n\t\tstring Q = to!string (A[i]) ; \n\t\tP = P ~ Q ; \n\t}\n\
    \treturn P ; \n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L)\
    \ == \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4ssu0hoc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    string result;\n    while(N>0)\n    {\n      result\
    \ = (N&1)+result;\n      N=N>>1;\n    }\n    \n    return result;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n  \
    \  assert(candidate(150L) == \"110\");\n    assert(candidate(147L) == \"1100\"\
    );\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L) == \"\
    10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcg86rbmf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    string ret = \"\";\n    return ret;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n  \
    \  assert(candidate(150L) == \"110\");\n    assert(candidate(147L) == \"1100\"\
    );\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L) == \"\
    10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_u6voswc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    string result = to!string(N, 2);\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L) ==\
    \ \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0pxapzrj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    return (N == 0 ? \"0\" : to!string(N, 2));\n}\n\
    unittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L) == \"\
    1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L) ==\
    \ \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphn6b2dp_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    return format(\"%=0b\", N);\n}\nunittest\n{\n  \
    \  alias candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp18m43y3p.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    string ans = \"\";\n    foreach(i; 0 .. N+1)\n \
    \   {\n        ans = (N & (1 << i)) ? \"1\" ~ ans : \"0\" ~ ans;\n    }\n    return\
    \ ans;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L)\
    \ == \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppp_56wqj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    string s;\n    while(N > 0)\n    {\n        if(N%2)\n\
    \            s = \"1\" ~ s;\n        else\n            s = \"0\" ~ s;\n      \
    \  N /= 2;\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L) == \"110\"\
    );\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L) == \"\
    1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn99_3gsb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    string result = to!string(N,2);\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L) ==\
    \ \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptaqloixb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    static string[] digits = [\"0\", \"1\"];\n    string\
    \ bin = \"\";\n    while (N > 0) \n    {\n        bin = digits[N % 2] ~ bin;\n\
    \        N /= 2;\n    }\n    return bin;\n}\n// int main()\n// {\n//     const\
    \ long N = 1500L;\n//     writeln(solve(N));\n//     return 0;\n// }\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n  \
    \  assert(candidate(150L) == \"110\");\n    assert(candidate(147L) == \"1100\"\
    );\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L) == \"\
    10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr4nlwubs.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    string result = \"\";\n    if (N == 0)\n       \
    \ return \"0\";\n    for (; N > 0; N /= 2)\n        result = to!string(N % 2)\
    \ ~ result;\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L) == \"110\"\
    );\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L) == \"\
    1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpios4igt0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    string bin = to!string(N, 2);\n    string[] binarray\
    \ = bin.split(\"\");\n    ulong sum = 0;\n    foreach(string element; binarray)\n\
    \    {\n        sum += to!ulong(element);\n    }\n    return to!string(sum);\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L) ==\
    \ \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5v_wftt2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    if (N == 0)\n        return \"0\";\n    string result\
    \ = \"\";\n    while (N > 0) \n    {\n        result = to!string(N % 2) ~ result;\n\
    \        N /= 2;\n    }\n    return result;\n}\n/*\n    Best Answer : 0ms\n  \
    \  string solve(long N) \n    {\n        string temp;\n        foreach(x;std.algorithm.iota(0,19)){\n\
    \            if(N & 1<<x)\n                temp ~= '1';\n            else\n  \
    \              temp ~= '0';\n        }\n        temp = temp.dup.split(\n     \
    \       (t){\n                if(t=='0')\n                    return true;\n \
    \               else\n                    return false;\n            }\n     \
    \   );\n        return temp[temp.length-1];\n    }\n*/\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmdac9xjh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    return to!string(N, 2);\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1a6g71ix.d(23): Error: template instance `to!string` template
    `to` is not defined, did you mean No?\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp1a6g71ix.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    int k;\n    string tmp=\"\";\n    while(N!=0)\n\
    \    {\n        k=N%2;\n        N=N/2;\n        tmp+=to!string(k);\n    }\n  \
    \  return tmp;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L)\
    \ == \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5cfxldsx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    string binaryNumber = \"\";\n    //convert integer\
    \ to binary number\n    for(int i = 0; i < N; i++)\n    {\n        if(N % 2 ==\
    \ 0)\n        {\n            binaryNumber += \"0\";\n        }\n        else\n\
    \        {\n            binaryNumber += \"1\";\n        }\n        N /= 2;\n \
    \   }\n    return binaryNumber;\n}\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L) == \"110\"\
    );\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L) == \"\
    1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphzv3erom.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n  string binN=\"\";\n  foreach(d; 0..30)\n    binN=to!string(N%2)+binN;\n\
    \  return binN;\n}\n/*\nusing std.stdio;\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L) == \"110\"\
    );\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L) == \"\
    1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7h5hn28m.d(28): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp7h5hn28m.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    return to!string(N, 2);\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1a6g71ix.d(23): Error: template instance `to!string` template
    `to` is not defined, did you mean No?\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp1a6g71ix.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    auto p = to!string(N, 2);\n    //long sum = 0;\n\
    \    //foreach(immutable d; p.to!ulong())\n        //sum += d;\n    //return to!string(sum);\n\
    \    return p;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L)\
    \ == \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdglg1zcw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    string s = \"\";\n    while(N != 0)\n    {\n   \
    \   s = to!string(N % 2) ~ s;\n      N /= 2;\n    }\n    return s;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n  \
    \  assert(candidate(150L) == \"110\");\n    assert(candidate(147L) == \"1100\"\
    );\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L) == \"\
    10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5q8iorx1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    return binary(N).to!string;\n}\n// bool testing\
    \ = false;\n/*\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L)\
    \ == \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpndwuoc2_.d(26): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpndwuoc2_.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    return to!string(N, 2);\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1a6g71ix.d(23): Error: template instance `to!string` template
    `to` is not defined, did you mean No?\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp1a6g71ix.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    string t = \"\";\n    while(N != 0)\n    {\n   \
    \     t = t ~ cast(string)(N % 2);\n        N /= 2;\n    }\n    t = t.idup.reverse;\n\
    \    return t;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L)\
    \ == \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu98f9xkp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    return to!string(N, 2);\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1a6g71ix.d(23): Error: template instance `to!string` template
    `to` is not defined, did you mean No?\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp1a6g71ix.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    // typecons.Tuple\n    auto result = N == 0 ? Tuple!(\"\
    0\", 0) : Tuple!(\"\", 0);\n    while (N > 0) \n    {\n        // typecons.Tuple\n\
    \        auto current = Tuple!(\"\", (N % 2) + result[1]);\n        N /= 2;\n\
    \        if (current[1] == 2) \n        {\n            N++;\n            current[1]\
    \ = 0;\n        }\n        // typecons.Tuple\n        result = Tuple!(current[0]\
    \ ~ result[0], current[1]);\n    }\n    return result[0];\n}\nunittest\n{\n  \
    \  alias candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp0v_2hjl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    return to!string(N, 2);\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1a6g71ix.d(23): Error: template instance `to!string` template
    `to` is not defined, did you mean No?\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp1a6g71ix.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    return to!string(N, 2);\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1a6g71ix.d(23): Error: template instance `to!string` template
    `to` is not defined, did you mean No?\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp1a6g71ix.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    return to!string(N, 2);\n}\n```\nunittest\n{\n \
    \   alias candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpwrjmnplo.d(25): Error: declaration expected, not `""`\n/tmp/tmpwrjmnplo.d(25):
    Error: unterminated string constant starting at /tmp/tmpwrjmnplo.d(25)\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwrjmnplo.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    // loop invariant\n    // 1. sum(N) = sum of N in\
    \ binary\n    // 2. N > 0\n    // 3. N % 2 == 0\n    while (N > 0) {\n       \
    \ N /= 2;\n    }\n    \n    return \"0\";\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvymmpckw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    \n    long x = N;\n    string s = \"\";\n    while(x\
    \ > 0)\n    {\n        s = to!string(x % 2) ~ s;\n        x /= 2;\n    }\n   \
    \ return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L)\
    \ == \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpybgivww0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    string res = to!string(N, 2);\n    return res;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L) ==\
    \ \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiugqnewb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    auto res = \"\";\n    for (auto i = 0; i < N; i++)\n\
    \    {\n        res = (i % 2 ? \"1\" : \"0\") ~ res;\n    }\n    return res;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L) ==\
    \ \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpti4vn0ud.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    \n    string[] bn = {\"0\",\"1\"};\n    string result\
    \ = \"\";\n    while(N!=0){\n        result = bn[N%2] + result;\n        N = N/2;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n \
    \   assert(candidate(1000L) == \"1\");\n    assert(candidate(150L) == \"110\"\
    );\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L) == \"\
    1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_gqebdho.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    return to!string(N, 2);\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1a6g71ix.d(23): Error: template instance `to!string` template
    `to` is not defined, did you mean No?\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp1a6g71ix.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n  int sum = 0;\n  int exp = 1;\n  while (N>0)\n  {\n\
    \    int digit = N%2;\n    sum += digit*exp;\n    exp *= 10;\n    N /= 2;\n  }\n\
    \  return to!string(sum);\n}\n \n// Please do not modify main()\nunittest\n{\n\
    \    alias candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx0u_5jjf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    auto binary_str = to!string(N, 2);\n    int b =\
    \ 0;\n    foreach(immutable a; binary_str) {\n        b += a - '0';\n    }\n \
    \   return to!string(b);\n}\nunittest\n{\n    alias candidate = solve;\n\n   \
    \ assert(candidate(1000L) == \"1\");\n    assert(candidate(150L) == \"110\");\n\
    \    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L) == \"1001\"\
    );\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk3b1q2ph.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    // make binary number string\n    string s=\"\"\
    ;\n    while(N != 0)\n    {\n        s = cast(string)(N%2) ~ s;\n        N /=\
    \ 2;\n    }\n    if(s == \"\") \n        s = \"0\";\n    return s;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n  \
    \  assert(candidate(150L) == \"110\");\n    assert(candidate(147L) == \"1100\"\
    );\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L) == \"\
    10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc0jlpop5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    string s = \"\";\n    while(N>0)\n    {\n      \
    \  s = (N%2) ~ s;\n        N = N/2;\n    }\n    return s;\n}\nunittest\n{\n  \
    \  alias candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz6zmj225.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n\tstring result =\"\";\n\t//convert decimal number to\
    \ binary number\n\twhile(N>0)\n\t{\n\t\tresult = to!string(N%2) ~ result;\n\t\t\
    N /= 2;\n\t}\n\t//add up the binary digits\n\tlong sum = 0;\n\tforeach(i; result)\n\
    \t{\n\t\tsum += i - '0';\n\t}\n\tresult = to!string(sum);\n\treturn result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L) ==\
    \ \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx5bm66w9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n  const int SIZE = 80;\n  int i, ans[SIZE];\n  for (i\
    \ = 0; i < SIZE; i++) ans[i] = 0;\n  for (i = 0; N > 0; i++) {\n    ans[i] = N\
    \ % 2;\n    N /= 2;\n  }\n  string t = to!string(ans[i - 1]);\n  for (i = i -\
    \ 2; i >= 0; i--) t ~= to!string(ans[i]);\n  return t;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpp2lzc_mr.d(24): Error: multiple declarations must have the same
    type, not int and int[SIZE]\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp2lzc_mr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    string s = to!string(N, 2);\n    return s;\n}\n\
    unittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L) == \"\
    1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L) ==\
    \ \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu0ioo192.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    string s_bin=\"\";\n    // your code goes here\n\
    \    while(N!=0)\n    {\n        s_bin+=N%2+'0';\n        N/=2;\n    }\n    return\
    \ s_bin;\n}\n// test case\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L)\
    \ == \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl9rjhrge.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005445
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    return to!string(N, 2);\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1a6g71ix.d(23): Error: template instance `to!string` template
    `to` is not defined, did you mean No?\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp1a6g71ix.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    return format(to!string(N), \"b\");\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n  \
    \  assert(candidate(150L) == \"110\");\n    assert(candidate(147L) == \"1100\"\
    );\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L) == \"\
    10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps5dpun1v.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    \n    string binaryNum = \"\";\n    \n    while\
    \ (N > 0) {\n        \n        binaryNum = (N % 2) + binaryNum;\n        N = N\
    \ / 2;\n    }\n    \n    return binaryNum;\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph8hv1qi5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    string result = \"\";\n    long i, j;\n    for (i\
    \ = N; i > 0; i /= 2)\n    {\n        j = i % 2;\n        result = to!string(j)\
    \ ~ result;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzq4_mhdj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005445
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    immutable hash = [\n        '0': '0000',\n     \
    \   '1': '0001',\n        '2': '0010',\n        '3': '0011',\n        '4': '0100',\n\
    \        '5': '0101',\n        '6': '0110',\n        '7': '0111',\n        '8':\
    \ '1000',\n        '9': '1001',\n        'A': '1010',\n        'B': '1011',\n\
    \        'C': '1100',\n        'D': '1101',\n        'E': '1110',\n        'F':\
    \ '1111',\n    ];\n    string s = format(N);\n    string r;\n    foreach(c; s)\n\
    \        r ~= hash[c];\n    if(r.length == 1)\n        return r;\n    r = strip(r);\n\
    \    return r;\n}\n//void main()\n//{\n//    writeln(solve(1000L));\n//    writeln(solve(150L));\n\
    //    writeln(solve(147L));\n//}\nunittest\n{\n    alias candidate = solve;\n\n\
    \    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L) == \"110\"\
    );\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L) == \"\
    1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpa48n0kto.d(23): Error: unterminated character constant\n/tmp/tmpa48n0kto.d(23):
    Error: unterminated character constant\n/tmp/tmpa48n0kto.d(23): Error: unterminated
    character constant\n/tmp/tmpa48n0kto.d(23): Error: unterminated character constant\n/tmp/tmpa48n0kto.d(23):
    Error: unterminated character constant\n/tmp/tmpa48n0kto.d(23): Deprecation: octal
    literals 010 are deprecated, use std.conv.octal!10 instead\n/tmp/tmpa48n0kto.d(23):
    Error: unterminated character constant\n/tmp/tmpa48n0kto.d(23): Error: unterminated
    character constant\n/tmp/tmpa48n0kto.d(23): Deprecation: octal literals 011 are
    deprecated, use std.conv.octal!11 instead\n/tmp/tmpa48n0kto.d(23): Error: unterminated
    character constant\n/tmp/tmpa48n0kto.d(23): Error: unterminated character constant\n/tmp/tmpa48n0kto.d(23):
    Error: unterminated character constant\n/tmp/tmpa48n0kto.d(23): Error: unterminated
    character constant\n/tmp/tmpa48n0kto.d(23): Error: unterminated character constant\n/tmp/tmpa48n0kto.d(23):
    Error: unterminated character constant\n/tmp/tmpa48n0kto.d(23): Error: unterminated
    character constant\n/tmp/tmpa48n0kto.d(23): Error: unterminated character constant\n/tmp/tmpa48n0kto.d(23):
    Error: unterminated character constant\n/tmp/tmpa48n0kto.d(23): Error: unterminated
    character constant\n/tmp/tmpa48n0kto.d(23): Error: unterminated character constant\n/tmp/tmpa48n0kto.d(23):
    Error: unterminated character constant\n/tmp/tmpa48n0kto.d(23): Error: unterminated
    character constant\n/tmp/tmpa48n0kto.d(23): Error: unterminated character constant\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa48n0kto.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n  return to!string(N, 2);\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpet1_6yj8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    return toString(format(\"%b\", N));\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n  \
    \  assert(candidate(150L) == \"110\");\n    assert(candidate(147L) == \"1100\"\
    );\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L) == \"\
    10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb5mpqwoc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005445
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    return format(\"%b\", N);\n}\n/*\nunittest\n{\n\
    \    alias candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpaiqe0qil.d(25): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpaiqe0qil.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    string a = N.text;\n    string Bin = \"\";\n   \
    \ for (int i = 0; i < a.length; i++) \n    {\n        Bin ~= to!string(to!long(a[i]),\"\
    %b\");\n    }\n    return Bin;\n}\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L) == \"110\"\
    );\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L) == \"\
    1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpckw2ow5z.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    return to!string(N,2);\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcn18qh4n.d(23): Error: template instance `to!string` template
    `to` is not defined, did you mean No?\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpcn18qh4n.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    alias D = tuple(long, string);\n    int c = 0;\n\
    \    D[] s = D(0, \"\");\n    D[] Ds = D(0, \"\");\n    if (N == 0) return \"\
    0\";\n    while (N > 0)\n    {\n        if (N % 2 == 0)\n        {\n         \
    \   s[c] = D(0, \"0\");\n        }\n        else\n        {\n            s[c]\
    \ = D(1, \"1\");\n        }\n        N /= 2;\n        c++;\n    }\n    int idx\
    \ = c - 1;\n    foreach (D i; s)\n    {\n        Ds[idx] = D(i[0], i[1]);\n  \
    \      idx--;\n    }\n    string result = \"\";\n    foreach (D i; Ds)\n    {\n\
    \        result ~= i[1];\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmps0n9v2l_.d(23): Error: function declaration without return type.
    (Note that constructors are always named \''this\'')\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmps0n9v2l_.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    string result;\n    long num = 0;\n    num = N;\n\
    \    while(num != 0)\n    {\n        //result = to!string(num % 2) ~ result;\n\
    \        result = (num % 2).to!string ~ result;\n        num /= 2;\n    }\n  \
    \  return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L)\
    \ == \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp57qzipvc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005444
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    enum digits = \"01\";\n    string binary;\n    while\
    \ (N > 0) {\n        binary ~= digits[N % 2];\n        N /= 2;\n    }\n    return\
    \ binary.reverse;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L)\
    \ == \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfw6fmuus.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005445
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n\tauto binary = long.to!string(N, 2);\n\t\n\treturn\
    \ binary;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L)\
    \ == \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdm1q0t59.d(23): Error: semicolon expected following auto declaration,
    not \''!\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdm1q0t59.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005445
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    return N==0 ? \"0\" : to!string(N,2);\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n  \
    \  assert(candidate(150L) == \"110\");\n    assert(candidate(147L) == \"1100\"\
    );\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L) == \"\
    10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqc_prm47.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005445
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    int res = 0;\n    string r = \"\";\n    for (; N\
    \ != 0; N /= 2)\n    {\n        res = N % 2;\n        r = format(\"%s%s\", res,\
    \ r);\n    }\n    return r;\n}\n/*\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L) == \"110\"\
    );\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L) == \"\
    1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpw6phu3of.d(32): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpw6phu3of.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005445
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    bool first = true;\n    string ret = \"\";\n   \
    \ foreach(n; std.typecons.reverse(std.math.pow(2L, 64L).iota))\n    {\n      \
    \  if(n <= N)\n        {\n            if(!first)\n                ret ~= \"1\"\
    ;\n            else\n                first = false;\n            N -= n;\n   \
    \     }\n        else\n        {\n            if(!first)\n                ret\
    \ ~= \"0\";\n        }\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyfvblzlh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005445
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    return to!string(N, 2);\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1a6g71ix.d(23): Error: template instance `to!string` template
    `to` is not defined, did you mean No?\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp1a6g71ix.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    return to!string(N, 2);\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1a6g71ix.d(23): Error: template instance `to!string` template
    `to` is not defined, did you mean No?\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp1a6g71ix.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    // Write your code here\n    return \"\";\n}\n//\
    \ -------------My Solution----------------\nstring solve(long N)\n{\n    string\
    \ res = to!string(N, 2);\n    return res;\n}\n/*\npublic:\n    string solve(long\
    \ N) \n    {\n        // Write your code here\n        char res[100];\n      \
    \  long long n = N;\n        long long i = 0;\n        while(n!=0)\n        {\n\
    \            res[i++] = n%2+'0';\n            n /= 2;\n        }\n        return\
    \ string(res, res+i);\n    }\n*/\n// ------------------------------------------------------\n\
    unittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L) == \"\
    1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L) ==\
    \ \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgfw7fl1b.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005445
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    const int base = 2;\n    string result = \"\";\n\
    \    while (N != 0) {\n        result = to!string(N % base) ~ result;\n      \
    \  N /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwlqnh171.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005445
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    string binary=\"\";\n    while(N!=0)\n    {\n  \
    \      if(N%2==0)\n            binary=\"0\"+binary;\n        else\n          \
    \  binary=\"1\"+binary;\n        N/=2;\n    }\n    return binary;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n  \
    \  assert(candidate(150L) == \"110\");\n    assert(candidate(147L) == \"1100\"\
    );\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L) == \"\
    10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw04zftit.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005445
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    auto bin = to!string(N,2);\n    return to!string(sum(to!(int[])(bin)));\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L) ==\
    \ \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjym3xqpz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005445
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    string ret = \"\";\n    while(N != 0)\n    {\n \
    \       if(N % 2 == 0)\n            ret = \"0\" ~ ret;\n        else\n       \
    \     ret = \"1\" ~ ret;\n        N /= 2;\n    }\n    return ret;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n  \
    \  assert(candidate(150L) == \"110\");\n    assert(candidate(147L) == \"1100\"\
    );\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L) == \"\
    10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpybzka2t2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005445
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    assert(N<=10000);\n    assert(N>=0);\n    string\
    \ s = \"\";\n    if(N==0)\n    {\n        s = \"0\";\n    }\n    else\n    {\n\
    \        for(int i=0; i<N; i++)\n        {\n            s += \"1\";\n        }\n\
    \    }\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L)\
    \ == \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe96zpjkt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005445
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    string ret;\n    while(N)\n    {\n        long tmp\
    \ = N % 2;\n        ret = ret + to!string(tmp);\n        N /= 2;\n    }\n    return\
    \ ret;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L)\
    \ == \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjj81kmph.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005445
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    return format(\"%s\",std.conv.to!string(N,2));\n\
    }\n```\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L)\
    \ == \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphbz45o5e.d(25): Error: Declaration expected, not \''""\''\n/tmp/tmphbz45o5e.d(25):
    Error: unterminated string constant starting at /tmp/tmphbz45o5e.d(25)\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphbz45o5e.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005445
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    string res = \"\";\n    long b = 1;\n    while (b\
    \ <= N)\n    {\n        if (N % (2 * b) >= b)\n            res = \"1\" ~ res;\n\
    \        else\n            res = \"0\" ~ res;\n        b *= 2;\n    }\n    return\
    \ res;\n}\n//string solve(long N)\n//{\n//    return format(\"%b\", N);\n//}\n\
    //string solve(long N)\n//{\n//    string res = \"\";\n//    while (N != 0)\n\
    //    {\n//        res = (N % 2 ? \"1\" : \"0\") ~ res;\n//        N /= 2;\n//\
    \    }\n//    return res;\n//}\nunittest\n{\n    alias candidate = solve;\n\n\
    \    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L) == \"110\"\
    );\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L) == \"\
    1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp74qoi_56.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005445
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    string res = \"\";\n    while(N>0)\n    {\n    \
    \    res = to!string(N%2)~res;\n        N = N/2;\n    }\n    return res;\n}\n\
    unittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L) == \"\
    1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L) ==\
    \ \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuzo0zpcb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005445
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n\tint [] t = [0,1,2,3,4,5,6,7,8,9];\n\tint [] r = [0,1,10,11,100,101,110,111,1000,1001];\n\
    \treturn to!string(reduce!(a=>b=>a*2+b)(map!(a=>r[a])(map!(a=>to!int(a))(to!string(N)))));\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L) ==\
    \ \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp86z7gvb2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005445
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    int[] arr = new int[100];\n    int i = 0;\n    while\
    \ (N > 0)\n    {\n        arr[i] = cast(int)(N % 2);\n        N = N / 2;\n   \
    \     i++;\n    }\n    i--;\n    string str = \"\";\n    for (int j = i; j >=\
    \ 0; j--)\n    {\n        str = str ~ cast(string)(arr[j]);\n    }\n    return\
    \ str;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L)\
    \ == \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeundh7gp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005445
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    return to!string(N, 2);\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1a6g71ix.d(23): Error: template instance `to!string` template
    `to` is not defined, did you mean No?\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp1a6g71ix.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    \n    \n    \n    \n    string res = \"\";\n   \
    \ while(N>0)\n    {\n        res = to!string(N%2) ~ res;\n        N/=2;\n    }\n\
    \    return res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L)\
    \ == \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqwmopzha.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005445
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    string result;\n    while(N > 0)\n    {\n      \
    \  if(N % 2 == 0)\n        {\n            result ~= \"0\";\n        }\n      \
    \  else\n        {\n            result ~= \"1\";\n        }\n        N /= 2;\n\
    \    }\n    return result.reverse;\n}\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L) == \"110\"\
    );\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L) == \"\
    1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplf9hb15_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005445
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    string bin = \"\";\n    for ( ; N > 0; N /= 2)\n\
    \        bin = to!string(N % 2) ~ bin;\n    return bin;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr8i36jfi.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005445
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    // your code here\n    string s = \"\";\n    while(N!=0)\n\
    \    {\n        s = to!string(N%2)~s;\n        N = N/2;\n    }\n    return s;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L) ==\
    \ \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8h3n20x3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005445
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    return to!string(N, 2);\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1a6g71ix.d(23): Error: template instance `to!string` template
    `to` is not defined, did you mean No?\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp1a6g71ix.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    return to!string(N, 2);\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1a6g71ix.d(23): Error: template instance `to!string` template
    `to` is not defined, did you mean No?\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp1a6g71ix.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    string binary=\"\";\n    while(N > 0)\n    {\n \
    \       if(N%2 == 0)\n        {\n            binary += \"0\";\n        }\n   \
    \     else\n        {\n            binary += \"1\";\n        }\n        N /= 2;\n\
    \    }\n    return binary.rev;\n}\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L) == \"110\"\
    );\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L) == \"\
    1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp81ylidob.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005445
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    long n = N;\n    immutable long b = 2;\n    string\
    \ bin = \"\";\n    while(n != 0)\n    {\n        bin = (n % b == 0 ? \"0\" : \"\
    1\") ~ bin;\n        n /= b;\n    }\n    return bin;\n}\n// ----- end of code\
    \ -----\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L)\
    \ == \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwabwyuvx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005445
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    // Write your code here.\n    string s = \"\";\n\
    \    while(N > 0)\n    {\n        int n = N % 2;\n        s = n + s;\n       \
    \ N /= 2;\n    }\n    return s;\n}\n}\n/*\n#include <iostream>\n#include <string>\n\
    #include <vector>\n#include <cmath>\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L) == \"110\"\
    );\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L) == \"\
    1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpch850xlq.d(33): Error: unrecognized declaration\n/tmp/tmpch850xlq.d(34):
    Error: unterminated /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpch850xlq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005445
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    //auto val = std.typecons.Tuple!(string,bool)(\"\
    \",false);\n    auto val = typeof(return).init;\n    foreach(i; 0 .. N.digits.length)\n\
    \    {\n        //val.string ~=\n    }\n    /*if(N > 0)\n    {\n        val.string\
    \ = \"1\";\n        val.bool = true;\n    }*/\n    //return val;\n    return val.string;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L) ==\
    \ \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1cfqjbio.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005445
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    // Write your code here\n    string t;\n    long\
    \ tmp = N;\n    while(tmp > 0)\n    {\n        t += to!string(tmp % 2);\n    \
    \    tmp /= 2;\n    }\n    return t.reverse;\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq580lbok.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005445
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    import std.conv;\n    import std.format;\n    import\
    \ std.string;\n    enum string s = to!string(N, 2);\n    return format(\"%s\"\
    , to!string(s.countUntil(\"0\")));\n}\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L) == \"110\"\
    );\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L) == \"\
    1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl679314w.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005445
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n\treturn to!string(N, 2);\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppa1qwslh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005445
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    string s = \"\";\n    bool isplus = false;\n   \
    \ bool isminus = false;\n    bool iszero = false;\n    if(N == 0)\n    {\n   \
    \     iszero = true;\n    }\n    else if(N > 0)\n    {\n        isplus = true;\n\
    \    }\n    else\n    {\n        isminus = true;\n    }\n    if(isminus)\n   \
    \ {\n        N = -N;\n    }\n    while(N > 0)\n    {\n        s = to!string(N\
    \ % 2) ~ s;\n        N /= 2;\n    }\n    if(iszero)\n    {\n        s = \"0\"\
    ;\n    }\n    if(isminus)\n    {\n        s = \"-\" ~ s;\n    }\n    return s;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L) ==\
    \ \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjz77691e.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005445
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    return to!string(N, 2);\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1a6g71ix.d(23): Error: template instance `to!string` template
    `to` is not defined, did you mean No?\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp1a6g71ix.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    \n    string bin = \"\";\n    //convert long int\
    \ into string\n    string s = to!string(N);\n    //loop through the converted\
    \ string\n    foreach(char c; s)\n    {\n        //convert char into int\n   \
    \     int n = c - '0';\n        //append the binary equivalent to a string variable\n\
    \        bin ~= to!string(n.to!bin);\n    }\n    //return the string variable\
    \ with the binary number\n    return bin;\n}\n//string solve(long N) \n//{\n//\
    \    \n//    string bin = \"\";\n//    //convert long int into string\n//    string\
    \ s = to!string(N);\n//    //loop through the converted string\n//    foreach(char\
    \ c; s)\n//    {\n//        //convert char into int\n//        int n = c - '0';\n\
    //        //append the binary equivalent to a string variable\n//        bin ~=\
    \ to!string(n.to!bin);\n//    }\n//    //return the string variable with the binary\
    \ number\n//    return bin;\n//}\n//\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L) == \"110\"\
    );\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L) == \"\
    1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu1zuejna.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005445
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    string s = \"\";\n    while(N > 0)\n    {\n    \
    \    s += (N%2 == 0 ? \"0\" : \"1\");\n        N /= 2;\n    }\n    return s;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L) ==\
    \ \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1n7lb8ut.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005445
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    // std::cout << \"hello\" << std::endl;\n    //\
    \ int n = N;\n    // std::cout << n << std::endl;\n    std::string myString;\n\
    \    for (int i = 0; i < 32; i++) {\n        if ( (N&(1 << i)) != 0) {\n     \
    \       myString.append(\"1\");\n        } else {\n            myString.append(\"\
    0\");\n        }\n    }\n    // std::cout << myString << std::endl;\n    return\
    \ myString;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L)\
    \ == \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpr_g38859.d(26): Error: found \'':\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr_g38859.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005445
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    return to!string(N, 2);\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1a6g71ix.d(23): Error: template instance `to!string` template
    `to` is not defined, did you mean No?\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp1a6g71ix.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    return to!string(N,2);\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcn18qh4n.d(23): Error: template instance `to!string` template
    `to` is not defined, did you mean No?\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpcn18qh4n.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    // Write your code here\n    auto res = to!string(N,\
    \ 2);\n    return res;\n}\n \nunittest\n{\n    alias candidate = solve;\n\n  \
    \  assert(candidate(1000L) == \"1\");\n    assert(candidate(150L) == \"110\");\n\
    \    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L) == \"1001\"\
    );\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj1ea3bwx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005445
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    //stores the ascii value of the binary num\n   \
    \ char[] binary = new char[32];\n    string b = \"\";\n    int index = 0;\n  \
    \  while(N > 0)\n    {\n        //mod N by 2 and determine the remainder to see\
    \ if it is odd or even.\n        int remainder = N % 2;\n        N /= 2;\n   \
    \     binary[index++] = remainder + '0';\n    }\n    //Reverse the order of the\
    \ binary number.\n    for(int i = index - 1; i >= 0; i--)\n    {\n        b +=\
    \ binary[i];\n    }\n    return b;\n}\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L) == \"110\"\
    );\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L) == \"\
    1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw_6v3uua.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005445
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    return to!string(N,2);\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcn18qh4n.d(23): Error: template instance `to!string` template
    `to` is not defined, did you mean No?\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpcn18qh4n.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    return format(\"0b%s\", N.to!string);\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n  \
    \  assert(candidate(150L) == \"110\");\n    assert(candidate(147L) == \"1100\"\
    );\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L) == \"\
    10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiea0t_5d.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005445
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    string bits = \"\";\n    while (N > 0) {\n     \
    \   ulong mod = N % 2;\n        bits = to!string(mod) ~ bits;\n        N /= 2;\n\
    \    }\n    return bits;\n}\nunittest\n{\n    alias candidate = solve;\n\n   \
    \ assert(candidate(1000L) == \"1\");\n    assert(candidate(150L) == \"110\");\n\
    \    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L) == \"1001\"\
    );\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9h_cho54.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005445
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    return to!string(Integer.to(BigInteger(N), 2));\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L) ==\
    \ \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgzdrwwbz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005445
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    string s = \"\";\n    while(N > 0)\n    {\n    \
    \    s = to!string(N%2) ~ s;\n        N /= 2;\n    }\n    return s;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n  \
    \  assert(candidate(150L) == \"110\");\n    assert(candidate(147L) == \"1100\"\
    );\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L) == \"\
    10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2t1fizu7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005445
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    string b = \"\";\n    while(N != 0)\n    {\n   \
    \     b = format(\"%s%s\", to!string(N % 2), b);\n        N /= 2;\n    }\n   \
    \ return b;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L)\
    \ == \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp97jh4f4h.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005445
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    //your code\n    if(N == 0)\n        return \"0\"\
    ;\n    auto arr = [];\n    for(; N != 0; N/=2)\n        arr ~= (N % 2).to!string;\n\
    \    return join(arr.reverse);\n}\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L) == \"110\"\
    );\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L) == \"\
    1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmk_jc6k4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005445
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    if (N <= 0) return \"0\";\n    string s = \"\";\n\
    \    while (N > 0) {\n        s = (char)(N % 2 + '0') + s;\n        N /= 2;\n\
    \    }\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L)\
    \ == \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpuq9nx53e.d(26): Error: C style cast illegal, use cast(char)(N
    % 2 + \''0\'')\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuq9nx53e.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005445
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    string result = \"\";\n    //cout << \" N : \" <<\
    \ N << endl;\n    while(N > 0)\n    {\n        if(N % 2 == 0)\n        {\n   \
    \         //cout << \"0\" << endl;\n            result = \"0\" + result;\n   \
    \     }\n        else\n        {\n            //cout << \"1\" << endl;\n     \
    \       result = \"1\" + result;\n        }\n        N = N / 2;\n    }\n    //cout\
    \ << result << endl;\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoeks5y2t.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005445
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    static const int maxn = 10000;\n    static const\
    \ int maxn2 = maxn/2;\n    static const int maxn4 = maxn/4;\n    static const\
    \ int maxn8 = maxn/8;\n    static const int maxn16 = maxn/16;\n    static const\
    \ int maxn32 = maxn/32;\n    static const int maxn64 = maxn/64;\n    static const\
    \ int maxn128 = maxn/128;\n    static const int maxn256 = maxn/256;\n    static\
    \ const int maxn512 = maxn/512;\n    static const int maxn1024 = maxn/1024;\n\
    \    static const int maxn2048 = maxn/2048;\n    static const int maxn4096 = maxn/4096;\n\
    \    static const int maxn8192 = maxn/8192;\n    static const int maxn16384 =\
    \ maxn/16384;\n    static const int maxn32768 = maxn/32768;\n    static const\
    \ int maxn65536 = maxn/65536;\n    static const int maxn131072 = maxn/131072;\n\
    \    static const int maxn262144 = maxn/262144;\n    static const int maxn524288\
    \ = maxn/524288;\n    static const int maxn1048576 = maxn/1048576;\n    static\
    \ const int maxn2097152 = maxn/2097152;\n    static const int maxn4194304 = maxn/4194304;\n\
    \    static const int maxn8388608 = maxn/8388608;\n    static const int maxn16777216\
    \ = maxn/16777216;\n    static const int maxn33554432 = maxn/33554432;\n    static\
    \ const int maxn67108864 = maxn/67108864;\n    static const int maxn134217728\
    \ = maxn/134217728;\n    static const int maxn268435456 = maxn/268435456;\n  \
    \  static const int maxn536870912 = maxn/536870912;\n    static const int maxn1073741824\
    \ = maxn/1073741824;\n   \nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L)\
    \ == \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpe3mfzdbs.d(55): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe3mfzdbs.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005445
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    enum result = to!string(N, 2);\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L) ==\
    \ \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvhcm2hqb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005445
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    // your code goes here\n    string result = \"\"\
    ;\n    while(N>0)\n    {\n        result = to!string(N%2) ~ result;\n        N/=2;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n \
    \   assert(candidate(1000L) == \"1\");\n    assert(candidate(150L) == \"110\"\
    );\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L) == \"\
    1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5t43356p.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005445
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    // write your code here.\n    return to!string(N,\
    \ 2);\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L)\
    \ == \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpedn3tgbj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005445
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    return format(\"%s\", N.text);\n}\nunittest\n{\n\
    \    alias candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9vw5rrt5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005445
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    \n    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    //Filling in the template\n    import std.algorithm;\n    import\
    \ std.conv;\n    import std.range;\n    import std.stdio;\n    import std.string;\n\
    \    import std.typecons;\n    import std.math;\n    import std.bitmanip;\n  \
    \  import std.conv;\n    import std.bigint;\n    import std.exception;\n    import\
    \ std.traits;\n    import std.array;\n    import std.typetuple;\n    import std.meta;\n\
    \    import std.tuple;\n    //Your Function\n    import std.bitmanip;\n    import\
    \ std.conv;\n    string binary=\"\";\n    binary=to!string(N,2);\n    binary.retro;\n\
    \    return binary;\n}\n//Test Generator\nimport std.algorithm;\nimport std.array;\n\
    import std.exception;\nimport std.math;\nimport std.range;\nimport std.random;\n\
    import std.typecons;\nimport std.uni;\nimport std.bitmanip;\nimport std.conv;\n\
    import std.bigint;\nimport std.exception;\nimport std.traits;\nimport std.array;\n\
    import std.typetuple;\nimport std.meta;\nimport std.tuple;\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdgm2bs5j.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005445
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    enum binary = \"01\";\n    enum decimal = \"0123456789\"\
    ;\n    string binaryNumber = \"\";\n    while(N > 0)\n    {\n        binaryNumber\
    \ = binary[N%2] ~ binaryNumber;\n        N = N/2;\n    }\n    return binaryNumber;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L) ==\
    \ \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprafdso0p.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005445
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    return to!string(N,2);\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcn18qh4n.d(23): Error: template instance `to!string` template
    `to` is not defined, did you mean No?\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpcn18qh4n.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n\t// Write your code here\n\tif(N < 0)\n\t{\n\t\treturn\
    \ \"0\";\n\t}\n\tauto n = N;\n\tauto str = \"\";\n\twhile(n > 0)\n\t{\n\t\tstr\
    \ ~= n % 2;\n\t\tn /= 2;\n\t}\n\treturn str.reverse();\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjyjv2vko.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005445
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    long n = N;\n    string ans = \"\";\n    while(n\
    \ != 0){\n        ans = format!(\"%d\", n % 2) ~ ans;\n        n /= 2;\n    }\n\
    \    return ans;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L)\
    \ == \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkjx0_298.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005445
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    string s = std.typecons.to!string(N,2);\n    return\
    \ s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L)\
    \ == \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L)\
    \ == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
    \ == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp99788dq7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005445
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    enum i = 0;\n    auto dg = to!string(N);\n    int[]\
    \ digs = new int[dg.length];\n    foreach(ch; dg)\n    {\n        digs[i] = to!int(ch);\n\
    \        i++;\n    }\n    auto x = to!int(N);\n    string bits = \"\";\n    for(int\
    \ i = 0; i < digs.length; i++)\n    {\n        if(x == 0)\n        {\n       \
    \     return bits;\n        }\n        else\n        {\n            int bit =\
    \ x % 2;\n            x = x / 2;\n            bits = format(\"%s%s\", bit, bits);\n\
    \        }\n    }\n    return bits;\n}\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L) == \"110\"\
    );\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L) == \"\
    1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3oyfc68l.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005445
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer N,\
    \ return the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
    \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\
    \n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264\
    \ N \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\n\
    string solve(long N) \n{\n    auto res = binary(N);\n    //return std.string.format(\"\
    %s\", res);\n    return std.string.replace(res,\"-\",\"\");\n}\nunittest\n{\n\
    \    alias candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L)\
    \ == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L)\
    \ == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8ktzeq4n.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660005445

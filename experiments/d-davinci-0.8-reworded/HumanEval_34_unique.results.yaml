language: d
name: HumanEval_34_unique
results:
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    SortedSet!(typeof(l[0]))\
    \ s = new SortedSet!(typeof(l[0]));\n    foreach(x; l)\n        s.insert(x);\n\
    \    return s.array;\n}\n/*\n    Given an array of indices of constant length,\
    \ return an array \n    of sorted unique elements in the indexed array\n    >>>\
    \ unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L], [0L, 3L, 7L])\n    [5L, 2L, 0L]\n\
    */\nlong[] unique(long[] l, long[] i) \n{\n    SortedSet!(typeof(l[0])) s = new\
    \ SortedSet!(typeof(l[0]));\n    foreach(x; i)\n        s.insert(l[x]);\n    return\
    \ s.array;\n}\n/*\n    Given an array of indices and a sorted array, return a\
    \ sorted array of \n    unique elements of the indexed array\n    >>> unique([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L], [0L, 3L, 7L], sort=true)\n    [0L, 2L, 5L]\n\
    */\nlong[] unique(long[] l, long[] i, bool sort = false) \n{\n    SortedSet!(typeof(l[0]))\
    \ s = new SortedSet!(typeof(l[0]));\n    foreach(x; i)\n        s.insert(l[x]);\n\
    \    if(sort)\n        return s.array;\n    else\n        return s.byKey;\n}\n\
    /*\n    Given a sorted array, return a sorted array of unique elements\n    >>>\
    \ unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L], sort=true)\n    [0L, 2L, 3L,\
    \ 5L, 9L, 123L]\n*/\nlong[] unique(long[] l, bool sort = false) \n{\n    SortedSet!(typeof(l[0]))\
    \ s = new\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpo05yhd83.d(53): Error: basic type expected, not `unittest`

    /tmp/tmpo05yhd83.d(53): Error: semicolon expected, not `unittest`

    /tmp/tmpo05yhd83.d(53): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo05yhd83.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164347
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    int n = l.length;\n\
    \    n = n.pow(2);\n    long[n] tmp;\n    int i = 0;\n    int j = 0;\n    for\
    \ (i in 0..n-1) \n    {\n        if (l[i] != l[i+1]) \n        {\n           \
    \ tmp[j] = l[i];\n            j++;\n        }\n    }\n    return tmp;\n}\n/*\n\
    Return sorted unique elements in an array\n    >>> unique(['a', 'b', 'a', 'd',\
    \ 'b', 'b', 'z', 'A', 'D'])\n    ['A', 'D', 'a', 'b', 'd', 'z']\n    \n*/\nchar[]\
    \ unique(char[] l) \n{\n    int n = l.length;\n    n = n.pow(2);\n    char[n]\
    \ tmp;\n    int i = 0;\n    int j = 0;\n    for (i in 0..n-1) \n    {\n      \
    \  if (l[i] != l[i+1]) \n        {\n            tmp[j] = l[i];\n            j++;\n\
    \        }\n    }\n    return tmp;\n}\n/*\nReturn sorted unique elements in an\
    \ array\n    >>> unique([1.0, 2.0, 1.0, 9.0, 2.0, 9.0, 0.0, 123.0])\n    [0.0,\
    \ 1.0, 2.0, 9.0, 123.0]\n    \n*/\ndouble[] unique(double[] l) \n{\n    int n\
    \ = l.length;\n    n = n.pow(2);\n    double[n] tmp;\n    int i = 0;\n    int\
    \ j = 0;\n    for (i in 0..n-1) \n    {\n        if (l[i] != l[i+1]) \n      \
    \  {\n            tmp[j] = l[i];\n            j++;\n        }\n    }\n    return\
    \ tmp;\n}\n/*\nReturn sorted unique elements in an array\n    >>> unique([1, 2,\
    \ 1, 9, 2, 9, 0, 123\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxi0ao86i.d(16): Error: found `..` when expecting `;` following
    statement

    /tmp/tmpxi0ao86i.d(16): Error: found `)` when expecting `;` following `for` condition

    /tmp/tmpxi0ao86i.d(24): Error: found `return` when expecting `)`

    /tmp/tmpxi0ao86i.d(39): Error: found `..` when expecting `;` following statement

    /tmp/tmpxi0ao86i.d(39): Error: found `)` when expecting `;` following `for` condition

    /tmp/tmpxi0ao86i.d(47): Error: found `return` when expecting `)`

    /tmp/tmpxi0ao86i.d(62): Error: found `..` when expecting `;` following statement

    /tmp/tmpxi0ao86i.d(62): Error: found `)` when expecting `;` following `for` condition

    /tmp/tmpxi0ao86i.d(70): Error: found `return` when expecting `)`

    /tmp/tmpxi0ao86i.d(72): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxi0ao86i.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164347
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    int[] idx\
    \ = array(l.sort).uniqIndices;\n    return l[idx];\n}\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmzfahsfs.d(11): Error: undefined identifier `array`

    /tmp/tmpmzfahsfs.d(12): Error: cannot implicitly convert expression `idx` of type
    `int[]` to `ulong`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmzfahsfs.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    // https://rosettacode.org/wiki/Unique_elements#D\n\
    \    long[] d = unique(sort(l));\n    return d;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5kpscl1h.d(12): Error: undefined identifier `sort`, did you mean
    function `sqrt`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5kpscl1h.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tauto a = l[0\
    \ .. l.length].dup; // This avoids overwriting data during sorting\n\ta.sort;\n\
    \treturn a.uniq;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmh7o5q3u.d(12): Error: no property `sort` for type `long[]`

    /tmp/tmpmh7o5q3u.d(13): Error: no property `uniq` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmh7o5q3u.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tif (l.length\
    \ == 0) \n\t{\n\t\treturn [];\n\t}\n\tauto elems = set(l);\n\treturn elems.array;\n\
    }\n/*\nReturn sorted unique elements in an array\n    >>> unique([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nstring[]\
    \ unique(string[] l) \n{\n\tif (l.length == 0) \n\t{\n\t\treturn [];\n\t}\n\t\
    auto elems = set(l);\n\treturn elems.array;\n}\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkhozu08n.d(15): Error: undefined identifier `set`, did you mean
    template `get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)`?

    /tmp/tmpkhozu08n.d(30): Error: undefined identifier `set`, did you mean template
    `get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkhozu08n.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tlong[] tmp =\
    \ new long[l.length];\n\ttmp[] = l;\n\tsort(tmp);\n\treturn std.algorithm.unique(tmp);\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphhyqfw8v.d(13): Error: undefined identifier `sort`, did you mean
    function `sqrt`?

    /tmp/tmphhyqfw8v.d(14): Error: undefined identifier `algorithm` in package `std`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphhyqfw8v.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    return unique(l,\
    \ (a, b) => a < b);\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyy09kcw6.d(11): Error: function `tmpyy09kcw6.unique(long[] l)`
    is not callable using argument types `(long[], void)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyy09kcw6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    assert(l);\n\
    \    auto r = to!(long[])([]);\n    foreach(e; l) \n    {\n        if(r.count(e)\
    \ == 0) \n        {\n            r ~= e;\n        }\n    }\n    return r.sort();\n\
    }\n/*\nReturn a random element\n*/\nlong choice(long[] l) \n{\n    assert(l);\n\
    \    return l[uniform(0, l.length)];\n}\n/*\nReturn a random element from the\
    \ population and remove it from the population\n    >>> population = [1L, 2L,\
    \ 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]\n    >>> sample(population, 1L)\n    [4L]\n\
    \    >>> population\n    [1L, 2L, 3L, 5L, 6L, 7L, 8L, 9L, 10L]\n*/\nlong[] sample(long[]\
    \ l, long k) \n{\n    assert(l && k <= l.length);\n    auto r = to!(long[])([]);\n\
    \    foreach(i; k.iota) \n    {\n        r ~= l.remove(uniform(0, l.length));\n\
    \    }\n    return r;\n}\nlong[] range(long stop) \n{\n    return range(0L, stop,\
    \ 1L);\n}\nlong[] range(long start, long stop) \n{\n    return range(start, stop,\
    \ 1L);\n}\nlong[] range(long start, long stop, long step) \n{\n    assert(start\
    \ <= stop);\n    assert(step > 0L);\n    auto r = to!(long[])([]);\n    foreach(i;\
    \ start.iota(stop-1L, step)) \n    {\n        r ~= i;\n    }\n    return r;\n\
    }\n/*\nReturn the median of numeric data\n*/\nlong median(long[] l) \n{\n    assert(l);\n\
    \    return l.sort()[cast(size_t)(l.length/2)];\n}\n/*\nReturn the mean of numeric\
    \ data\n*/\nlong mean(long\nunittest\n{\n    alias candidate = unique;\n\n   \
    \ assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L,\
    \ 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp82h9ef7g.d(79): Error: found `unittest` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp82h9ef7g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164347
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] r;\n\
    \    int start = 0;\n    foreach(int i, long x; l) {\n        if (start == 0 ||\
    \ x != r[start - 1]) {\n            r ~= x;\n            start++;\n        }\n\
    \    }\n    return r;\n}\n \n \n/*\nReturn the number of unique elements in an\
    \ array\n    >>> unique_count([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    6L\n\
    */\nlong unique_count(long[] l) \n{\n    return unique(l).length;\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpvxte4ryi.d(36): unittest failure

    ----------------

    ??:? _d_unittestp [0x428375]

    ??:? void tmpvxte4ryi.__unittest_L32_C1() [0x428044]

    ??:? void tmpvxte4ryi.__modtest() [0x4280f4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cde3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc76]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306c9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b78]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430655]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc4d]

    ??:? runModuleUnitTests [0x42cbb9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428838]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[long]\
    \ seen;\n    long[] res;\n    foreach (e; l)\n    {\n        if (e in seen)\n\
    \            continue;\n        res ~= e;\n        seen[e] = 1;\n    }\n    res.sort;\n\
    \    return res;\n}\n/*\nReturn sorted unique elements in an array\n    >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \n*/\nunittest\n{\n\
    \    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprhncnz_b.d(20): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprhncnz_b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    int[] idx\
    \ = sort!((a, b) => l[a] < l[b])(iota(l.length));\n    return idx.map!(i => l[i]).dedup;\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbaj7r99t.d(11): Error: template instance `sort!((a, b) => l[a]
    < l[b])` template `sort` is not defined, did you mean sqrt?

    /tmp/tmpbaj7r99t.d(12): Error: no property `map` for type `int[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbaj7r99t.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    return std.typecons.unique(l);\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsy_42kgb.d(11): Error: undefined identifier `unique` in module
    `std.typecons`, did you mean struct `Unique(T)`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsy_42kgb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    l.sort();\n\
    \    return l.uniq;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp460spqyi.d(11): Error: no property `sort` for type `long[]`

    /tmp/tmp460spqyi.d(12): Error: no property `uniq` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp460spqyi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    l.sort();\n\
    \    return l.removeDups();\n}\n/*\nReturn sorted unique elements in an array\n\
    \    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L,\
    \ 9L, 123L]\n    \n*/\nlong[] unique2(long[] l)\n{\n    l.sort();\n    l.popFront();\n\
    \    for(int i = 0; i < l.length; i++)\n    {\n        if(l[i] == l[i + 1])\n\
    \        {\n            l.remove(i);\n        }\n    }\n    return l;\n}\n/*\n\
    Return sorted unique elements in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique3(long[]\
    \ l)\n{\n    l.sort();\n    l.popFront();\n    for(int i = 0; i < l.length; i++)\n\
    \    {\n        if(l[i] == l[i + 1])\n        {\n            l.remove(i);\n  \
    \      }\n    }\n    return l;\n}\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0cpb0ear.d(11): Error: no property `sort` for type `long[]`

    /tmp/tmp0cpb0ear.d(12): Error: no property `removeDups` for type `long[]`

    /tmp/tmp0cpb0ear.d(22): Error: no property `sort` for type `long[]`

    /tmp/tmp0cpb0ear.d(23): Error: no property `popFront` for type `long[]`

    /tmp/tmp0cpb0ear.d(28): Error: no property `remove` for type `long[]`

    /tmp/tmp0cpb0ear.d(41): Error: no property `sort` for type `long[]`

    /tmp/tmp0cpb0ear.d(42): Error: no property `popFront` for type `long[]`

    /tmp/tmp0cpb0ear.d(47): Error: no property `remove` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0cpb0ear.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tstd.sort(l);\n\
    \treturn l.dup.uniq;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdm9nqbz_.d(11): Error: undefined identifier `sort` in package `std`

    /tmp/tmpdm9nqbz_.d(12): Error: no property `uniq` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdm9nqbz_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    return unique(l,\
    \ (a, b) => a < b);\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyy09kcw6.d(11): Error: function `tmpyy09kcw6.unique(long[] l)`
    is not callable using argument types `(long[], void)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyy09kcw6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] res\
    \ = [];\n    long n = l.length;\n    bool[] was = new bool[n];\n    long idx =\
    \ 0;\n    for (long i = 0; i < n; i++)\n    {\n        was[i] = false;\n    }\n\
    \    for (long i = 0; i < n; i++)\n    {\n        if (!was[i])\n        {\n  \
    \          res.append(l[i]);\n            idx++;\n            for (long j = i\
    \ + 1; j < n; j++)\n            {\n                if (l[i] == l[j])\n       \
    \         {\n                    was[j] = true;\n                }\n         \
    \   }\n        }\n    }\n    return res;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpu7kccrln.d(23): Error: no property `append` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu7kccrln.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    version(all)\n\
    \    {\n        auto result = std.algorithm.sort.mergeSort(l).dup;\n        return\
    \ result.length ? result.retain!(\"a == b[1]\")() : result;\n    }\n    else\n\
    \    {\n        return std.algorithm.sort.mergeSort(l).uniq;\n    }\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwqtde85k.d(13): Error: undefined identifier `algorithm` in package
    `std`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwqtde85k.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    return sort(toSet(l));\n\
    }\n/*\nGet duplicates in an array\n    >>> duplicate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L])\n    [3L, 5L]\n*/\nlong[] duplicate(long[] l) \n{\n    long[]\
    \ ret = [];\n    long[] u = unique(l);\n    for (l1; l1=u) \n    {\n        if\
    \ (count(l, l1) > 1)\n            ret ~= l1;\n    }\n    return ret;\n}\n/*\n\
    Find unique elements in an array\n    >>> findUnique([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L])\n    [2L, 0L, 9L, 123L]\n*/\nlong[] findUnique(long[] l) \n{\n\
    \    long[] ret = [];\n    long[] u = unique(l);\n    for (l1; l1=l) \n    {\n\
    \        if (!l1 in u)\n            ret ~= l1;\n    }\n    return ret;\n}\n/*\n\
    Return a list of the indicies of all values that are equal to the given value\n\
    \    >>> indexOfAll(0L, [5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [7L]\n*/\n\
    long[] indexOfAll(long l, long[] l1) \n{\n    long[] ret = [];\n    foreach (i,\
    \ l2; l1) \n    {\n        if (l2 == l)\n            ret ~= i;\n    }\n    return\
    \ ret;\n}\n/*\nGet the mean of an array\n    >>> mean([1.0, 2.0, 3.0, 4.0, 5.0])\n\
    \    3.0\n*/\nreal mean(real[] r) \n{\n    return sum(r) / r.length;\n}\n/*\n\
    Get the median of an array\n    >>> median([1.0, 2.0, 3.0, 4.0, 5.0])\n    3\n\
    unittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpi27m__22.d(22): Error: found `)` when expecting `;` following `for`
    condition

    /tmp/tmpi27m__22.d(27): Error: found `return` when expecting `)`

    /tmp/tmpi27m__22.d(38): Error: found `)` when expecting `;` following `for` condition

    /tmp/tmpi27m__22.d(43): Error: found `return` when expecting `)`

    /tmp/tmpi27m__22.d(69): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi27m__22.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    return l.sort().join(l.sort().reverse()).unique();\n\
    }\n/*\nFind all pairs of points whose sum is 0\n    >>> pairs([-2L, -1L, 0L, 1L,\
    \ 2L])\n    [-1L, 1L, -2L, 2L]\n*/\nlong[] pairs(long[] l)\n{\n    long[] r1 =\
    \ l.map!(a => 0L - a);\n    long[] r2 = l.filter!(a => r1.canFind(a));\n    return\
    \ l.filter!(a => r2.canFind(0L - a));\n}\n/*\nCreate a vector of the first 10\
    \ integers, \nthen create a vector of their squares\n    >>> square(10L)\n   \
    \ [0L, 1L, 4L, 9L, 16L, 25L, 36L, 49L, 64L, 81L]\n*/\nlong[] square(long n)\n\
    {\n    return iota(n).map!(a => a*a);\n}\n/*\nCreate a vector of the first 10\
    \ integers, \nthen create a vector of their cubes\n    >>> cube(10L)\n    [0L,\
    \ 1L, 8L, 27L, 64L, 125L, 216L, 343L, 512L, 729L]\n*/\nlong[] cube(long n)\n{\n\
    \    return iota(n).map!(a => a*a*a);\n}\n/*\nFind the unique elements of an array\n\
    \    >>> unique([1L, 2L, 1L, 3L, 2L, 5L])\n    [1L, 2L, 3L, 5L]\n*/\nlong[] unique(long[]\
    \ l)\n{\n    return l.sort().join(l.sort().reverse()).unique();\n}\n/*\nReturn\
    \ the median of an odd-length vector\n    >>> oddmedian([3L, 5L, 1L, 9L, 4L])\n\
    \    4L\n*/\nlong oddmedian(long[] l)\n{\n    return l.sort[cast(int)(l.length/2)];\n\
    }\n/*\nReturn the median of an even-length vector\n    >>> evenmedian([3L\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmplcw26nua.d(62): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplcw26nua.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] h;\n\
    \    h.reserve(__uniq(l));\n    auto t = tuple(l);\n    foreach(i;0..l.length)\n\
    \    {\n        if(t[i].length == 1)\n        {\n            h ~= l[i];\n    \
    \    }\n    }\n    return h;\n}\n/*\nReturn sorted unique elements in an array\n\
    \    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n   \
    \ \n*/\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0h0thxmj.d(12): Error: undefined identifier `__uniq`

    /tmp/tmp0h0thxmj.d(16): Error: variable `i` cannot be read at compile time

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0h0thxmj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    int a1 = 0;\n\
    \    long[] a2 = new long[l.length];\n    auto a3 = new long[l.length];\n    foreach\
    \ (elem; l)\n    {\n        if (elem !in a2)\n        {\n            a2[a1] =\
    \ elem;\n            a1++;\n        }\n    }\n    a3 = a2[0..a1];\n    return\
    \ a3;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpq7nvkxi5.d(16): Error: incompatible types for `(elem) in (a2)`:
    `long` and `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq7nvkxi5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    auto seen\
    \ = [false; l.length];\n    long[] out = void;\n    foreach (idx, value; l)\n\
    \    {\n        if (!seen[idx])\n        {\n            out ~= value;\n      \
    \      seen[idx] = true;\n        }\n    }\n    return out;\n}\n/*\nReturn the\
    \ mean of an array of doubles\n    >>> mean([5.5, 6.5, 7.5])\n    6.5\n*/\ndouble\
    \ mean(double[] d) \n{\n    double sum = 0.0;\n    foreach (value; d)\n    {\n\
    \        sum += value;\n    }\n    return sum / d.length;\n}\n/*\nReturn the standard\
    \ deviation of an array of doubles\n    >>> stddev([5.5, 6.5, 7.5])\n    1.0\n\
    */\ndouble stddev(double[] d) \n{\n    double avg = mean(d);\n    double sum =\
    \ 0.0;\n    foreach (value; d)\n    {\n        sum += (value - avg) * (value -\
    \ avg);\n    }\n    return sqrt(sum / d.length);\n}\n/*\nReturn the dot product\
    \ of two arrays of doubles\n    >>> dot([1.0, 2.0, 3.0], [4.0, 5.0, 6.0])\n  \
    \  32.0\n*/\ndouble dot(double[] a, double[] b) \n{\n    double sum = 0.0;\n \
    \   foreach (idx, value; a)\n    {\n        sum += value * b[idx];\n    }\n  \
    \  return sum;\n}\n/*\nReturn the sum of a two-dimensional array\n    >>> sum([[1.0,\
    \ 2.0, 3.0], [4.0, 5.0, 6.0]])\n    21.0\n*/\ndouble sum(double[][] a) \n{\n \
    \   double sum = 0.0;\n    foreach (value; a)\n    {\n        sum += sum(value);\n\
    \    }\n    return sum;\n}\n/*\nReturn the sum of a one-dimensional array\n  \
    \  >>> sum([1.0,\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqxyfy8_9.d(11): Error: comma expected separating array initializers,
    not `;`

    /tmp/tmpqxyfy8_9.d(11): Error: semicolon expected following auto declaration,
    not `l`

    /tmp/tmpqxyfy8_9.d(11): Error: found `]` when expecting `;` following statement

    /tmp/tmpqxyfy8_9.d(11): Deprecation: use `{ }` for an empty statement, not `;`

    /tmp/tmpqxyfy8_9.d(12): Error: no identifier for declarator `long[]`

    /tmp/tmpqxyfy8_9.d(12): Error: found `out` instead of statement

    /tmp/tmpqxyfy8_9.d(17): Error: found `out` instead of statement

    /tmp/tmpqxyfy8_9.d(21): Error: expression expected, not `out`

    /tmp/tmpqxyfy8_9.d(80): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqxyfy8_9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[][] seen;\n\
    \    long[] ret;\n    int j;\n    int i;\n    int len;\n    uint[2] s;\n    seen\
    \ = new long[][](l.length);\n    seen[0] = l;\n    i = 0;\n    for (; (i < seen.length);\
    \ i++)\n    {\n        if (seen[i].length == 0)\n        {\n            continue;\n\
    \        }\n        j = 1;\n        len = seen[i].length;\n        while ((j <\
    \ len))\n        {\n            if ((seen[i][j] == seen[i][(j - 1)]))\n      \
    \      {\n                seen[i].removeAt(j);\n                len -= 1;\n  \
    \          }\n            else\n            {\n                j += 1;\n     \
    \       }\n        }\n    }\n    ret = new long[](seen.length);\n    i = 0;\n\
    \    for (; (i < seen.length); i++)\n    {\n        if (seen[i].length == 0)\n\
    \        {\n            continue;\n        }\n        ret[i] = seen[i][0];\n \
    \   }\n    ret = ret.idup;\n    for (; (i < ret.length); i++)\n    {\n       \
    \ s = binarySearch(ret, 0L, ret.length, ret[i]);\n        if ((s[0] == 0L))\n\
    \        {\n            ret.removeAt(i);\n            i -= 1;\n        }\n   \
    \ }\n    return ret;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp74ietq2i.d(27): Error: cannot implicitly convert expression `seen[cast(ulong)i].length`
    of type `ulong` to `int`

    /tmp/tmp74ietq2i.d(32): Error: no property `removeAt` for type `long[]`

    /tmp/tmp74ietq2i.d(51): Error: cannot implicitly convert expression `idup(ret)`
    of type `immutable(long)[]` to `long[]`

    /tmp/tmp74ietq2i.d(54): Error: undefined identifier `binarySearch`

    /tmp/tmp74ietq2i.d(57): Error: no property `removeAt` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp74ietq2i.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    std.algorithm.sort(l);\n\
    \    return l.dup.retain!(x => x != l.front);\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6yldib3f.d(11): Error: undefined identifier `algorithm` in package
    `std`

    /tmp/tmp6yldib3f.d(12): Error: no property `retain` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6yldib3f.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\treturn c_unique(l);\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwwqbz2fl.d(11): Error: undefined identifier `c_unique`, did you
    mean function `unique`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwwqbz2fl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    //l = l.sort();\n\
    \    //return l.uniq;\n    return l.sort().uniq;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_oajnkbi.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_oajnkbi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tlong[][] tupleL\
    \ = l.sort().enumerate().map!(x => tuple(x[0], x[1]));\n\tlong[] sorted = tupleL.map!(x\
    \ => x[1]).array;\n\tlong[] result = new long[l.length];\n\tresult[0] = sorted[0];\n\
    \tint resIndex = 1;\n\t\n\tforeach(int i, long a; sorted.enumerate())\n\t{\n\t\
    \tif(a != result[resIndex - 1])\n\t\t{\n\t\t\tresult[resIndex] = a;\n\t\t\tresIndex++;\n\
    \t\t}\n\t}\n\treturn result[0..resIndex];\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfk9h_6dp.d(11): Error: no property `sort` for type `long[]`

    /tmp/tmpfk9h_6dp.d(12): Error: no property `map` for type `long[][]`

    /tmp/tmpfk9h_6dp.d(17): Error: no property `enumerate` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfk9h_6dp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] res\
    \ = new long[0L];\n    foreach (long e; l)\n    {\n        if (std.algorithm.find(res,\
    \ e) == null) \n        {\n            res ~= e;\n        }\n    }\n    return\
    \ std.algorithm.sort(res);\n}\n/*\nReturn a sorted vector of unique indices that\
    \ get you the same order in a vector as you had in \na vector of tuples\n    >>>\
    \ a = [5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L];\n    >>> b = to!(tuple(long, int))([(e,\
    \ i) for (e, i) in zip(a, iota(a.length))]);\n    >>> b[sort_indices(b)];\n  \
    \  [0L, 2L, 3L, 5L, 9L, 123L]\n*/\nlong[] sort_indices(T[])(T[] arr) \n{\n   \
    \ Tuple!(T, long)[] b = zip(arr, iota(arr.length));\n    return std.algorithm.sort!((e1,\
    \ e2) { return e1[0] < e2[0]; })(b)[1L];\n}\n/*\nReturn a sorted vector of unique\
    \ indices that get you the same order in a vector as you had in \na vector of\
    \ tuples\n    >>> a = [5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L];\n    >>> b = to!(tuple(long,\
    \ int))([(e, i) for (e, i) in zip(a, iota(a.length))]);\n    >>> b[sort_indices(b)];\n\
    \    [0L, 2L, 3L, 5L, 9L, 123L]\n*/\nlong[] sort_indices_i(T)(T[] arr) \n{\n \
    \   struct SortMe \n    {\n        T x;\n        long i;\n    }\n    SortMe[]\
    \ b = [SortMe(x, i) for (x, i) in zip(arr, iota(arr.length))];\n   \nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgnjpnzwb.d(29): Error: identifier expected for template value parameter

    /tmp/tmpgnjpnzwb.d(49): Error: comma expected separating array initializers, not
    `for`

    /tmp/tmpgnjpnzwb.d(49): Error: semicolon expected, not `(`

    /tmp/tmpgnjpnzwb.d(49): Error: found `]` when expecting `;` following statement

    /tmp/tmpgnjpnzwb.d(49): Deprecation: use `{ }` for an empty statement, not `;`

    /tmp/tmpgnjpnzwb.d(51): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgnjpnzwb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    size_t n =\
    \ l.length;\n    long[] res = new long[n];\n    size_t i = 0;\n    foreach (long\
    \ el; l)\n    {\n        if (!res.canFind(el))\n        {\n            res[i]\
    \ = el;\n            i++;\n        }\n    }\n    res.length = i;\n    res.sort;\n\
    \    return res;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8cspsx4d.d(16): Error: no property `canFind` for type `long[]`

    /tmp/tmp8cspsx4d.d(23): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8cspsx4d.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tbool[] dup =\
    \ new bool[l.length];\n\tlong[] unique = new long[l.length];\n\tlong i;\n\tint\
    \ j;\n\t\n\tif (l.length == 0)\n\t\treturn l;\n\t\n\tfor (i = 0; i < l.length;\
    \ i++) {\n\t\tfor (j = i + 1; j < l.length; j++) {\n\t\t\tif (l[i] == l[j]) {\n\
    \t\t\t\tdup[i] = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tunique[0] =\
    \ l[0];\n\tint count = 1;\n\tfor (i = 1; i < l.length; i++) {\n\t\tif (!dup[i])\
    \ {\n\t\t\tunique[count] = l[i];\n\t\t\tcount++;\n\t\t}\n\t}\n\t\n\treturn unique[0..count];\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpr3vpctbu.d(20): Error: cannot implicitly convert expression `i
    + 1L` of type `long` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr3vpctbu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[][] elemNum\
    \ = l[].enumerate;\n    long[][] unique = elemNum.assocArray;\n    unique = unique.values;\n\
    \    unique = unique.sort;\n    return unique;\n}\n/*\nSort by count of the number\
    \ of occurrences of each element\n    >>> sortByCount([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L])\n    [0L, 2L, 9L, 123L, 5L, 3L]\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvzdqg4vn.d(17): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvzdqg4vn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    l = quicksort(l);\n\
    \    return l.dup.toSet().array;\n}\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppprfh82h.d(11): Error: undefined identifier `quicksort`

    /tmp/tmppprfh82h.d(12): Error: no property `toSet` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppprfh82h.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    sort(l);\n\
    \    return l.array.unique(l.array);\n}\n \n \n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    sort(l);\n\
    \    return l.array.unique(l.array);\n}\n \n// Remove duplicate elements from\
    \ array\nlong[] unique(long[] data) \n{\n    return data.array.removeDuplicates;\n\
    }\n// Remove duplicate elements from array\nlong[] unique(long[] data) \n{\n \
    \   return data.array.removeDuplicates;\n}\n \n// Remove duplicate elements from\
    \ array\nlong[] unique(long[] data) \n{\n    return data.array.removeDuplicates;\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfwdrptta.d(11): Error: undefined identifier `sort`, did you mean
    function `sqrt`?

    /tmp/tmpfwdrptta.d(12): Error: no property `array` for type `long[]`

    /tmp/tmpfwdrptta.d(24): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpfwdrptta.d(25): Error: no property `array` for type `long[]`

    /tmp/tmpfwdrptta.d(31): Error: no property `array` for type `long[]`

    /tmp/tmpfwdrptta.d(36): Error: no property `array` for type `long[]`

    /tmp/tmpfwdrptta.d(42): Error: no property `array` for type `long[]`

    /tmp/tmpfwdrptta.d(48): Error: `tmpfwdrptta.unique` called with argument types
    `(long[])` matches both:

    /tmp/tmpfwdrptta.d(9):     `tmpfwdrptta.unique(long[] l)`

    and:

    /tmp/tmpfwdrptta.d(40):     `tmpfwdrptta.unique(long[] data)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfwdrptta.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    alias long[]\
    \ tmp;\n    tmp[] = [l[0]];\n    foreach(l.indices, idx; ref long lval) {\n  \
    \      if ( lval != tmp[$-1] )\n            tmp ~= lval;\n    }\n    return tmp;\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_80m5aq4.d(13): Error: no identifier for declarator `l.indices`

    /tmp/tmp_80m5aq4.d(13): Error: expression expected, not `ref`

    /tmp/tmp_80m5aq4.d(13): Error: found `long` when expecting `)`

    /tmp/tmp_80m5aq4.d(13): Error: found `)` when expecting `;` following statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_80m5aq4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] res\
    \ = [];\n    foreach(uniq; l)\n    {\n        if(uniq !in res)\n        {\n  \
    \          res ~= uniq;\n        }\n    }\n    return res;\n}\n//std.algorithm.unique(l)\n\
    unittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmg1tpthj.d(14): Error: incompatible types for `(uniq) in (res)`:
    `long` and `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmg1tpthj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] res;\n\
    \    long i;\n    //bsearch(/*const(*/long[]/*)*/ l, long value)\n    immutable(long)[]\
    \ sorted = sort(l);\n    foreach(element; sorted){\n        if(!(i in res)){\n\
    \            res ~= element;\n        }\n    }\n    return res;\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_qwkxjar.d(14): Error: undefined identifier `sort`, did you mean
    function `sqrt`?

    /tmp/tmp_qwkxjar.d(16): Error: incompatible types for `(i) in (res)`: `long` and
    `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_qwkxjar.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    ulong[] u\
    \ = l.map!(x => cast(ulong)x);\n    u = sort(u);\n    u = u.retro;\n    u = u.retro.drop(1).retro;\n\
    \    u = u.retro.drop(1).retro;\n    auto result = u.map!(x => cast(long)x).array;\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpj3jqpzva.d(11): Error: no property `map` for type `long[]`

    /tmp/tmpj3jqpzva.d(12): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpj3jqpzva.d(13): Error: no property `retro` for type `ulong[]`

    /tmp/tmpj3jqpzva.d(14): Error: no property `retro` for type `ulong[]`

    /tmp/tmpj3jqpzva.d(15): Error: no property `retro` for type `ulong[]`

    /tmp/tmpj3jqpzva.d(16): Error: no property `map` for type `ulong[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj3jqpzva.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] y =\
    \ to!(long[])(std.algorithm.uniq(l));\n    return sort(y);\n}\nunittest\n{\n \
    \   alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmptila0idy.d(11): Error: template instance `to!(long[])` template
    `to` is not defined, did you mean No?

    /tmp/tmptila0idy.d(12): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptila0idy.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    int n = l.length;\n\
    \    if (n == 0) return l;\n    auto result = new long[];\n    foreach (e; l)\n\
    \    {\n        if (result.length==0) result ~= e;\n        else if (e != result[$-1])\
    \ result ~= e;\n    }\n    return result;\n}\n \n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5,\
    \ 9, 123]\n    \n*/\nlong[] unique(int[] l) \n{\n    int n = l.length;\n    if\
    \ (n == 0) return l;\n    auto result = new long[];\n    foreach (e; l)\n    {\n\
    \        if (result.length==0) result ~= e;\n        else if (e != result[$-1])\
    \ result ~= e;\n    }\n    return result;\n}\n \n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5.0, 3.0, 5.0, 2.0, 3.0, 3.0, 9.0, 0.0, 123.0])\n\
    \    [0.0, 2.0, 3.0, 5.0, 9.0, 123.0]\n    \n*/\ndouble[] unique(double[] l) \n\
    {\n    int n = l.length;\n    if (n == 0) return l;\n    auto result = new double[];\n\
    \    foreach (e; l)\n    {\n        if (result.length==0) result ~= e;\n     \
    \   else if (e != result[$-1]) result ~= e;\n    }\n    return result;\n}\n \n\
    /*\nReturn sorted unique elements in an array\n    >>> unique([\"a\", \"a\", \"\
    b\", \"a\", \"b\", \"c\"])\n    [\"a\", \"b\", \"c\"]\n    \n*/\nstring[] unique(string[]\
    \ l) \n{\n    int n = l.length;\n    if (n == 0) return l;\n    auto result =\
    \ new string[];\n    foreach\nunittest\n{\n    alias candidate = unique;\n\n \
    \   assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L,\
    \ 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpt1af6hds.d(72): Error: found `unittest` when expecting `(`

    /tmp/tmpt1af6hds.d(73): Error: basic type expected, not `{`

    /tmp/tmpt1af6hds.d(73): Error: no identifier for declarator `_error_`

    /tmp/tmpt1af6hds.d(73): Error: found `{` when expecting `;`

    /tmp/tmpt1af6hds.d(74): Error: expression expected, not `alias`

    /tmp/tmpt1af6hds.d(74): Error: found `candidate` when expecting `)`

    /tmp/tmpt1af6hds.d(74): Error: found `=` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt1af6hds.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n     auto[u,v]\
    \ = uniq(l);\n     return u;\n}\nunittest\n{\n    alias candidate = unique;\n\n\
    \    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmwp9sb7u.d(11): Error: basic type expected, not `[`

    /tmp/tmpmwp9sb7u.d(11): Error: found `,` when expecting `]`

    /tmp/tmpmwp9sb7u.d(11): Error: semicolon expected, not `]`

    /tmp/tmpmwp9sb7u.d(11): Error: found `]` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmwp9sb7u.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[long]\
    \ m;\n    foreach(i; l) m[i] = i;\n    return m.values;\n}\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpk0lbphw5.d(19): unittest failure

    ----------------

    ??:? _d_unittestp [0x429091]

    ??:? void tmpk0lbphw5.__unittest_L15_C1() [0x4280f8]

    ??:? void tmpk0lbphw5.__modtest() [0x4282b4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42e603]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x428e9a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42b149]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42b1d8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42b0d5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x428e71]

    ??:? runModuleUnitTests [0x42e3d9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x429c1c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    auto a = l[];\n\
    \    a.sort();\n    return a.uniq;\n}\n/*\nReturn sorted unique elements in an\
    \ array\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n\
    \    \n*/\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnxoarkj8.d(12): Error: no property `sort` for type `long[]`

    /tmp/tmpnxoarkj8.d(13): Error: no property `uniq` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnxoarkj8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    return std.algorithm.sort!((a,\
    \ b) => a > b)(std.algorithm.uniq(l.idup));\n}\n/*\nCreate an array of zeros or\
    \ ones\n    >>> zerosOrOnes(4, 1)\n    [1L, 1L, 1L, 1L]\n    >>> zerosOrOnes(4,\
    \ 0)\n    [0L, 0L, 0L, 0L]\n    \n*/\nlong[] zerosOrOnes(size_t n, int v)\n{\n\
    \    long[] res = new long[](n);\n    foreach (i; 0 .. n)\n        res[i] = v;\n\
    \    return res;\n}\n/*\nCreate an array of a given shape and populate it with\
    \ a fill value.\n    >>> repeat(3, 4, 1)\n    [[1L, 1L, 1L, 1L], [1L, 1L, 1L,\
    \ 1L], [1L, 1L, 1L, 1L]]\n    \n*/\nlong[][] repeat(size_t n, size_t m, long v)\n\
    {\n    long[][] res = new long[](n);\n    foreach (i; 0 .. n)\n        res[i]\
    \ = new long[](m);\n    foreach (i; 0 .. n)\n        foreach (j; 0 .. m)\n   \
    \         res[i][j] = v;\n    return res;\n}\n/*\nTest whether any array element\
    \ along a given axis evaluates to True.\n    >>> any(true, false, true)\n    true\n\
    \    >>> any(false, false, false)\n    false\n    \n*/\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpu88z_vks.d(11): Error: undefined identifier `algorithm` in package
    `std`

    /tmp/tmpu88z_vks.d(36): Error: cannot implicitly convert expression `new long[](n)`
    of type `long[]` to `long[][]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu88z_vks.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n     auto res\
    \ = [];\n     sort(l);\n     // for each unique value\n     for (i,v; l) \n  \
    \   {\n         if (i == 0 || v != l[i-1]) \n         {\n             res ~= v;\n\
    \         }\n     }\n     return res;\n}\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnogrqlbd.d(14): Error: found `)` when expecting `;` following `for`
    condition

    /tmp/tmpnogrqlbd.d(21): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnogrqlbd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tsize_t n = l.length;\n\
    \tlong[] result = new long[n];\n\tsize_t j = 0;\n\tfor (size_t i = 0; i < n; i++)\
    \ \n\t{\n\t\tif (result.length == 0 || result[$-1] != l[i]) \n\t\t{\n\t\t\tresult\
    \ ~= l[i];\n\t\t}\n\t}\n\treturn result;\n}\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5,\
    \ 9, 123]\n*/\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp5dezhart.d(32): unittest failure

    ----------------

    ??:? _d_unittestp [0x42834d]

    ??:? void tmp5dezhart.__unittest_L28_C1() [0x42801c]

    ??:? void tmp5dezhart.__modtest() [0x4280cc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42ce17]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bcaa]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4307f5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430ca4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430781]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc81]

    ??:? runModuleUnitTests [0x42cbed]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428810]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] r =\
    \ to!(long[])([])~[];\n    bool[] f = new bool[l.length];\n    for (size_t i =\
    \ 0; i < l.length; i++) \n    {\n        bool b = false;\n        for (size_t\
    \ j = 0; j < i; j++) \n        {\n            if (l[i] == l[j]) \n           \
    \ {\n                b = true;\n                break;\n            }\n      \
    \  }\n        if (!b) \n        {\n            r.push(l[i]);\n        }\n    }\n\
    \    sort(r);\n    return r;\n}\n/*\nReturn the indices of the maximum values\
    \ along an axis.\n    >>> argmax([0L, 3L, 2L, 1L, 1L, 2L, 0L])\n    1L\n    \n\
    */\nlong argmax(long[] l) \n{\n    long i = 0;\n    for (size_t j = 0; j < l.length;\
    \ j++) \n    {\n        if (l[j] > l[i]) \n        {\n            i = j;\n   \
    \     }\n    }\n    return i;\n}\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpv0hrmztz.d(11): Error: template instance `to!(long[])` template
    `to` is not defined, did you mean No?

    /tmp/tmpv0hrmztz.d(26): Error: no property `push` for type `long[]`

    /tmp/tmpv0hrmztz.d(29): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv0hrmztz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    Tuple2!(long[],\
    \ bool[]) t = std.algorithm.uniq(l);\n    return t.length > 0 ? t[0] : l;\n}\n\
    unittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnfx562ga.d(11): Error: template instance `Tuple2!(long[], bool[])`
    template `Tuple2` is not defined, did you mean Tuple(Specs...) if (distinctFieldNames!Specs)?

    /tmp/tmpnfx562ga.d(11): Error: undefined identifier `algorithm` in package `std`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnfx562ga.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tauto i = 1L;\n\
    \tlong[] n = [l[0]];\n\twhile (i < l.length)\n\t{\n\t\tif (n.length == 0 || n[$-1]\
    \ != l[i])\n\t\t{\n\t\t\tn ~= l[i];\n\t\t}\n\t\ti++;\n\t}\n\tn.sort;\n\treturn\
    \ n;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpp175yzj_.d(21): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp175yzj_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] a =\
    \ new long[0];\n    foreach(el; l)\n    {\n        if(!a.contains(el))\n     \
    \   {\n            a ~= el;\n        }\n    }\n    a.sort;\n    return a;\n}\n\
    unittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpt9p31c2p.d(14): Error: no property `contains` for type `long[]`

    /tmp/tmpt9p31c2p.d(19): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt9p31c2p.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] a =\
    \ sort(l);\n    long[] res = [];\n    foreach(e; a) {\n        if(res.length ==\
    \ 0 || res[$-1] != e) res ~= e;\n    }\n    return res;\n}\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmptihcu_al.d(11): Error: undefined identifier `sort`, did you mean
    function `sqrt`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptihcu_al.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] r;\n\
    \    assert(l.length == r.length);\n    return r;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8hztpdug.d(12): Assertion failure

    ----------------

    ??:? _d_assertp [0x42825d]

    ??:? long[] tmp8hztpdug.unique(long[]) [0x427e6a]

    ??:? void tmp8hztpdug.__unittest_L15_C1() [0x427ee9]

    ??:? void tmp8hztpdug.__modtest() [0x428010]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c34f]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b1e2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430375]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430824]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430301]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b1b9]

    ??:? runModuleUnitTests [0x42c125]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[]['
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    /*\n     \
    \   O(n logn)\n    */\n    l = sort(l);\n    return filter!((prev, curr) => prev\
    \ != curr)(l);\n}\nlong[] unique(long[] l, alias pred = \"a < b\") \n{\n    /*\n\
    \        O(n logn)\n    */\n    l = sort!pred(l);\n    return filter!((prev, curr)\
    \ => prev != curr)(l);\n}\nT[] unique(T)(T[] l) if (is(T == class)) \n{\n    /*\n\
    \        O(n logn)\n    */\n    l = sort(l);\n    return filter!((prev, curr)\
    \ => prev != curr)(l);\n}\nT[] unique(T)(T[] l, alias pred = \"a < b\") if (is(T\
    \ == class)) \n{\n    /*\n        O(n logn)\n    */\n    l = sort!pred(l);\n \
    \   return filter!((prev, curr) => prev != curr)(l);\n}\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfldm1elt.d(17): Error: basic type expected, not `alias`

    /tmp/tmpfldm1elt.d(17): Error: found `alias` when expecting `)`

    /tmp/tmpfldm1elt.d(17): Error: semicolon expected following function declaration

    /tmp/tmpfldm1elt.d(17): Error: no identifier for declarator `pred`

    /tmp/tmpfldm1elt.d(17): Error: declaration expected, not `=`

    /tmp/tmpfldm1elt.d(23): Error: declaration expected, not `return`

    /tmp/tmpfldm1elt.d(24): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfldm1elt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    int[] seen;\n\
    \    long[] res;\n    foreach(lval; l)\n    {\n        if(!seen[lval])\n     \
    \   {\n            res ~= lval;\n            seen[lval] = 1;\n        }\n    }\n\
    \    return res;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmp5tckum13.d(15): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4283f6]

    ??:? long[] tmp5tckum13.unique(long[]) [0x427ea8]

    ??:? void tmp5tckum13.__unittest_L23_C1() [0x427fa1]

    ??:? void tmp5tckum13.__modtest() [0x4280c8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cdb3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc46]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430699]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b48]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430625]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc1d]

    ??:? runModuleUnitTests [0x42cb89]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char['
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    auto v = l[].array.array(dtype=int);\n\
    \    long[] result = long[v.size];\n    foreach(i,idx; typeof(v)){\n        result[i]\
    \ = idx;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_84n13j8.d(11): Error: found `)` when expecting `.` following int

    /tmp/tmp_84n13j8.d(11): Error: found `;` when expecting identifier following `int`.

    /tmp/tmp_84n13j8.d(12): Error: found `long` when expecting `,`

    /tmp/tmp_84n13j8.d(12): Error: found `result` when expecting `,`

    /tmp/tmp_84n13j8.d(12): Error: expression expected, not `=`

    /tmp/tmp_84n13j8.d(12): Error: found `long` when expecting `,`

    /tmp/tmp_84n13j8.d(12): Error: found `;` when expecting `,`

    /tmp/tmp_84n13j8.d(13): Error: expression expected, not `foreach`

    /tmp/tmp_84n13j8.d(13): Error: found `;` when expecting `,`

    /tmp/tmp_84n13j8.d(13): Error: found `{` when expecting `,`

    /tmp/tmp_84n13j8.d(14): Error: found `;` when expecting `,`

    /tmp/tmp_84n13j8.d(15): Error: expression expected, not `}`

    /tmp/tmp_84n13j8.d(16): Error: found `return` when expecting `,`

    /tmp/tmp_84n13j8.d(16): Error: found `;` when expecting `,`

    /tmp/tmp_84n13j8.d(17): Error: expression expected, not `}`

    /tmp/tmp_84n13j8.d(18): Error: found `unittest` when expecting `'
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    auto m = l[];\n\
    \    auto size = 0;\n    foreach(val; l) \n    {\n        if(!m.contains(val))\
    \ \n        {\n            m ~= val;\n            size++;\n        }\n    }\n\
    \    auto r = new long[size];\n    std.array.copy(std.array.sort(m), r);\n   \
    \ return r;\n}\n/*\nReturn the unique elements in an array.\n    >>> unique([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\n\
    long[] unique(in long[] l) \n{\n    return std.algorithm.uniq(l);\n}\n/*\nReturn\
    \ the unique elements in an array.\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(ref long[]\
    \ l) \n{\n    return std.algorithm.uniq(l);\n}\n/*\nReturn the unique elements\
    \ in an array.\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(shared(long)[] l) \n{\n    return\
    \ std.algorithm.uniq(l);\n}\n/*\nReturn sorted unique elements in an array\n \
    \   >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \n\
    */\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpcjhbfu9a.d(15): Error: no property `contains` for type `long[]`

    /tmp/tmpcjhbfu9a.d(22): Error: undefined identifier `array` in package `std`

    /tmp/tmpcjhbfu9a.d(33): Error: undefined identifier `algorithm` in package `std`

    /tmp/tmpcjhbfu9a.d(43): Error: undefined identifier `algorithm` in package `std`

    /tmp/tmpcjhbfu9a.d(53): Error: undefined identifier `algorithm` in package `std`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcjhbfu9a.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    auto tmp =\
    \ new long[$];\n    foreach(e; l)\n    {\n        bool found = false;\n      \
    \  foreach(t; tmp)\n        {\n            if(e == t)\n            {\n       \
    \         found = true;\n                break;\n            }\n        }\n  \
    \      if(!found) tmp ~= e;\n    }\n    tmp.sort;\n    return tmp;\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdtu_slr8.d(11): Error: undefined identifier `__dollar`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdtu_slr8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[long]\
    \ seen;\n    foreach (e; l)\n        seen[e] = 1;\n    return sort(seen.keys);\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpo21t543i.d(14): Error: undefined identifier `sort`, did you mean
    function `sqrt`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo21t543i.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    immutable\
    \ void*[size_t] h = new void*[size_t][];\n    h[typeid(l).getHash()] = l;\n  \
    \  immutable auto s = sort!(\"a < b\")(l);\n    immutable auto e = s.dup;\n  \
    \  foreach (j; 0 .. s.length)\n    {\n        if (j > 0 && e[j] == e[j - 1])\n\
    \        {\n            h[typeid(e).getHash()] = e.remove(j);\n            j--;\n\
    \        }\n    }\n    return e;\n}\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpoqyzdj0x.d(11): Error: new can only create structs, dynamic arrays
    or class objects, not `void*[ulong][]`''s

    /tmp/tmpoqyzdj0x.d(12): Error: function `object.TypeInfo_Array.getHash(scope const(void*)
    p) const` is not callable using argument types `()`

    /tmp/tmpoqyzdj0x.d(13): Error: template instance `sort!"a < b"` template `sort`
    is not defined, did you mean sqrt?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoqyzdj0x.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    \n    long[]\
    \ res = new long[];\n    foreach(d;l)\n    {\n        if( d in res ) continue;\n\
    \        res ~= d;\n    }\n    return res.sort;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp05q0erim.d(12): Error: new can only create structs, dynamic arrays
    or class objects, not `long[]`''s

    /tmp/tmp05q0erim.d(15): Error: incompatible types for `(d) in (res)`: `long` and
    `long[]`

    /tmp/tmp05q0erim.d(18): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp05q0erim.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n     if (l.length\
    \ == 0)\n     {\n         return null;\n     }\n     else\n     {\n         return\
    \ l.front.uniqRetain.sort.array;\n     }\n }\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1p86xcz3.d(17): Error: no property `front` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1p86xcz3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    return uniqueResult!(l[])(l);\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmph1e2cm8d.d(11): Error: template instance `uniqueResult!(l[])` template
    `uniqueResult` is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph1e2cm8d.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    return uniquer!(a\
    \ => a)(l);\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjd5loxoz.d(11): Error: template instance `uniquer!((a) => a)` template
    `uniquer` is not defined, did you mean unique?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjd5loxoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tlong[][] r;\n\
    \tr[0] = l[0];\n\tforeach(n; 1..l.length)\n\t{\n\t\tint[] p;\n\t\tforeach(i; 0..n)\n\
    \t\t{\n\t\t\tif(l[n] == l[i])\n\t\t\t{\n\t\t\t\tp ~= 1;\n\t\t\t}\n\t\t}\n\t\t\
    if(p.length == 0)\n\t\t{\n\t\t\tr ~= l[n];\n\t\t}\n\t}\n\treturn r;\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2sa7gxbz.d(12): Error: cannot implicitly convert expression `l[0]`
    of type `long` to `long[]`

    /tmp/tmp2sa7gxbz.d(25): Error: cannot append type `long` to type `long[][]`

    /tmp/tmp2sa7gxbz.d(28): Error: cannot implicitly convert expression `r` of type
    `long[][]` to `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2sa7gxbz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[][] a;\n\
    \    long res[];\n    int[] elemIndexes;\n    int i;\n    int indexInRes;\n  \
    \  int lastIndex;\n    long[] elem;\n    long s;\n    long[] sorted;\n    sorted\
    \ = l.dup.sort;\n    lastIndex = 0;\n    i = 0;\n    a = new long[sorted.length][2];\n\
    \    for (elem; sorted;)\n    {\n        if (i == 0)\n        {\n            a[i][0]\
    \ = elem;\n            a[i][1] = 1;\n            i = i + 1;\n        }\n     \
    \   else\n        {\n            s = sorted[lastIndex];\n            if (s ==\
    \ elem)\n            {\n                a[i - 1][1] = a[i - 1][1] + 1;\n     \
    \       }\n            else\n            {\n                a[i][0] = elem;\n\
    \                a[i][1] = 1;\n                i = i + 1;\n            }\n   \
    \     }\n        lastIndex = lastIndex + 1;\n    }\n    res = new long[];\n  \
    \  elemIndexes = new int[];\n    for (indexInRes = 0; indexInRes < a.length; indexInRes++)\n\
    \    {\n        if (a[indexInRes][1] == 1)\n        {\n            elemIndexes\
    \ ~= indexInRes;\n        }\n    }\n    res = getElemsAtIndexes(a, elemIndexes);\n\
    \    return res;\n}\nlong[] getElemsAtIndexes(long[][] l, int[] indexes) \n{\n\
    \    long[] res;\n    int i;\n    res = new long[];\n    for (i; indexes;)\n \
    \   {\n        res ~= l[i][0];\n    }\n    return res;\n}\nlong[] getColumn(long[][]\
    \ l, int index) \n{\n    long[] res;\n    res = new long[];\n    for (long[] row;\
    \ l;)\n    {\n        res ~= row[index];\n    }\n    return res;\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvfsax_dp.d(12): Deprecation: instead of C-style syntax, use D-style
    syntax `long[] res`

    /tmp/tmpvfsax_dp.d(20): Error: no property `sort` for type `long[]`

    /tmp/tmpvfsax_dp.d(23): Error: variable `sorted` cannot be read at compile time

    /tmp/tmpvfsax_dp.d(24): Error: `elem` has no effect

    /tmp/tmpvfsax_dp.d(28): Error: cannot implicitly convert expression `elem` of
    type `long[]` to `long`

    /tmp/tmpvfsax_dp.d(35): Error: incompatible types for `(s) == (elem)`: `long`
    and `long[]`

    /tmp/tmpvfsax_dp.d(41): Error: cannot implicitly convert expression `elem` of
    type `long[]` to `long`

    /tmp/tmpvfsax_dp.d(48): Error: new can only create structs, dynamic arrays or
    class objects, not `long[]`''s

    /tmp/tmpvfsax_dp.d(49): Error: new can only create structs, dynamic arrays or
    class objects, not `int[]`''s

    /tmp/tmpvfsax_dp.d(64): Error: new can only create structs, dynamic arrays or
    class objects, not `long[]`''s

    /tmp/tmpvfsax_dp.d(65): Error: `i` has no effect

    /tmp/tmpvfsax_dp.d(74): Error: new can only create structs, dynamic arrays or
    class objects, not `long[]`''s

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/t'
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    int[] tmp=unique(cast(int[])l);\n\
    \    long[] res=new long[tmp.length];\n    foreach(int i,long x;tmp)\n    {\n\
    \        res[i]=x;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphrrry6n9.d(11): Error: function `tmphrrry6n9.unique(long[] l)`
    is not callable using argument types `(int[])`

    /tmp/tmphrrry6n9.d(11):        cannot pass argument `cast(int[])l` of type `int[]`
    to parameter `long[] l`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphrrry6n9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    auto d = new\
    \ long[0L];\n    foreach(i; l)\n    {\n        if(i !in d) d ~= i;\n    }\n  \
    \  d.sort;\n    return d;\n}\nunittest\n{\n    alias candidate = unique;\n\n \
    \   assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L,\
    \ 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpw5a2rke6.d(14): Error: incompatible types for `(i) in (d)`: `long`
    and `long[]`

    /tmp/tmpw5a2rke6.d(16): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw5a2rke6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    return l.unique.sort;\n\
    }\n/*\nFind first element after current time in a sorted list of time values\n\
    \    >>> later([1.0, 2.0, 3.0, 4.0], 2.5)\n    3.0\n    \n*/\ndouble later(double[]\
    \ times, double current_time) \n{\n    if (times.empty)\n    {\n        throw\
    \ new std.range_error(\"Empty array!\");\n    }\n    foreach (idx, time; times[0..$\
    \ - 1])\n    {\n        if (current_time < time)\n        {\n            return\
    \ time;\n        }\n    }\n    throw new std.range_error(\"No later times!\");\n\
    }\n/*\nFind index of first element after current time in a sorted list of time\
    \ values\n    >>> later([1.0, 2.0, 3.0, 4.0], 2.5)\n    2\n    \n*/\nsize_t later_idx(double[]\
    \ times, double current_time) \n{\n    if (times.empty)\n    {\n        throw\
    \ new std.range_error(\"Empty array!\");\n    }\n    foreach (idx, time; times[0..$\
    \ - 1])\n    {\n        if (current_time < time)\n        {\n            return\
    \ idx;\n        }\n    }\n    throw new std.range_error(\"No later times!\");\n\
    }\n/*\nFind previous element before current time in a sorted list of time values\n\
    \    >>> earlier([1.0, 2.0, 3.0, 4.0], 2.5)\n    2.0\n    \n*/\ndouble earlier(double[]\
    \ times, double current_time) \n{\n    if (times.empty)\n    {\n        throw\
    \ new std.range_error(\"Empty array!\");\n    }\n    foreach (idx, time; times[1..$])\n\
    \    {\n        if (current_time <= time)\n        {\n            return times[idx\
    \ - 1];\n        }\n    }\n    throw new std.range_error(\"No earlier times!\"\
    );\n}\n/*\nFind index of previous element before current time in a sorted list\
    \ of time values\n    >>> earlier\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpp28eusrd.d(76): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp28eusrd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    return sort(toSet(l)).array();\n\
    }\n/*\nReturn sorted unique elements in an array\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \n*/\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg3qy3s06.d(11): Error: undefined identifier `sort`, did you mean
    function `sqrt`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg3qy3s06.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    std.typecons.Tuple!(ulong,\
    \ int)[][] tl = new typecons.Tuple!(ulong, int)[][](l.length);\n    foreach(ind,\
    \ elem; l)\n    {\n        tl[ind] = typecons.tuple(cast(ulong)elem, ind);\n \
    \   }\n    tl.sort!(\"a[0] < b[0]\");\n    long[] unique = new long[l.length];\n\
    \    int c = 0;\n    foreach(ind, elem; tl)\n    {\n        if(ind == 0 || elem[0]\
    \ != tl[ind-1][0])\n        {\n            unique[c] = cast(long)elem[0];\n  \
    \          c++;\n        }\n    }\n    unique = unique[0..c];\n    return unique;\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpufgu66gy.d(11): Error: undefined identifier `typecons.Tuple!(ulong,
    int)`

    /tmp/tmpufgu66gy.d(14): Error: undefined identifier `typecons`

    /tmp/tmpufgu66gy.d(16): Error: no property `sort` for type `Tuple!(ulong, int)[][]`

    /tmp/tmpufgu66gy.d(23): Error: cannot implicitly convert expression `tuple(cast(long)elem[0].__expand_field_0,
    cast(long)elem[0].__expand_field_1)` of type `(ulong, int)` to `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpufgu66gy.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    return  (l.byValue.sort).uniq;\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp06j5scxa.d(11): Error: template `object.byValue` cannot deduce
    function from argument types `!()(long[])`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/druntime/import/object.d(2968):        `object.byValue(T
    : V[K], K, V)(T aa)`

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/druntime/import/object.d(2990):        `object.byValue(T
    : V[K], K, V)(T* aa)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp06j5scxa.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    auto r = sort(l);\n\
    \    return (unique(r));\n}\nunittest\n{\n    alias candidate = unique;\n\n  \
    \  assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L,\
    \ 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1pmgmm0r.d(11): Error: undefined identifier `sort`, did you mean
    function `sqrt`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1pmgmm0r.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tlong[] nl;\n\
    \tlong n;\n\t\n\tn = l.length;\n\tnl = new long[n];\n\tnl[0] = l[0];\n\tforeach(i;\
    \ 1..n) {\n\t\tif (l[i] != l[i-1]) {\n\t\t\tnl ~= l[i];\n\t\t}\n\t}\n\treturn\
    \ nl;\n}\n/*\nReturn true if item is in an array\n    >>> in([5L, 3L, 5L, 2L,\
    \ 3L, 3L, 9L, 0L, 123L], 2L)\n    true\n*/\nunittest\n{\n    alias candidate =\
    \ unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L,\
    \ 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp6po5d91o.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283ad]

    ??:? void tmp6po5d91o.__unittest_L29_C1() [0x42807c]

    ??:? void tmp6po5d91o.__modtest() [0x42812c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42ce77]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bd0a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430855]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430d04]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4307e1]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bce1]

    ??:? runModuleUnitTests [0x42cc4d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428870]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] u =\
    \ new long[l.length];\n    size_t n = l.length;\n    size_t j = 0;\n    for (size_t\
    \ i = 0; i < n; i++) \n    {\n        if (i == 0 || l[i] != l[i - 1]) \n     \
    \   {\n            u[j] = l[i];\n            j += 1;\n        }\n    }\n    u\
    \ = u[0..j];\n    return u;\n}\nunittest\n{\n    alias candidate = unique;\n\n\
    \    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpwvon5hqe.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x42837d]

    ??:? void tmpwvon5hqe.__unittest_L25_C1() [0x42804c]

    ??:? void tmpwvon5hqe.__modtest() [0x4280fc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c45b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b2ee]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430579]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430a28]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430505]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b2c5]

    ??:? runModuleUnitTests [0x42c231]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428840]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    auto res =\
    \ array();\n    foreach(a; l) \n    {\n        if (a in res) \n        {\n   \
    \         continue;\n        }\n        res ~= a;\n    }\n    res.sort;\n    return\
    \ res;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzln_jezm.d(11): Error: undefined identifier `array`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzln_jezm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\t\n\tlong[] n\
    \ = l.dup;\n\tn.sort;\n\treturn n.unique;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvd1rdb_m.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvd1rdb_m.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u;\n\t\
    std.algorithm.sort(l);\n\t\n\tu = iota(1L);\n\tforeach(v; l)\n\t{\n\t\tif (u[$-1]\
    \ != v)\n\t\t\tu ~= v;\n\t}\n\treturn u[1..$];\n}\n/*\nUnique elements in an array,\
    \ keeping order\n    >>> unique2([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n   \
    \ [5L, 3L, 2L, 9L, 0L, 123L]\n*/\nlong[] unique2(long[] l) \n{\n\tlong[] u;\n\t\
    u = [];\n\tforeach(v; l)\n\t{\n\t\tif (!std.algorithm.any!\"(a==b)\"(u, v))\n\t\
    \t\tu ~= v;\n\t}\n\treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmps5zo69k_.d(12): Error: undefined identifier `algorithm` in package
    `std`

    /tmp/tmps5zo69k_.d(14): Error: undefined identifier `iota`

    /tmp/tmps5zo69k_.d(33): Error: undefined identifier `algorithm` in package `std`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps5zo69k_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n  size_t[] unique_indexes;\n\
    \  unique_indexes.length = l.length;\n  size_t i;\n  i = 0;\n  while (i < l.length)\
    \ \n  {\n    if (!(in(l[i], l[0..i]))) \n    {\n      unique_indexes[i] = i;\n\
    \    }\n    i += 1;\n  }\n  unique_indexes = unique_indexes.array.remove(null);\n\
    \  return l[unique_indexes];\n}\n// Function to return the hash of a string\n\
    // http://stackoverflow.com/questions/4288253/how-to-calculate-a-hash-from-a-string-in-d\n\
    private long getHash(string s) \n{\n  long hash = 0L;\n  long x    = 0L;\n  foreach\
    \ (x; s) \n  {\n    hash = ((hash * 1664525L) + (x * 1013904223L)) % ((long)math.pow(2L,\
    \ 32L) - 1L);\n  }\n  return hash;\n}\n// Function to return a list of the hash\
    \ of all the permutations of a string\n// http://stackoverflow.com/questions/4288253/how-to-calculate-a-hash-from-a-string-in-d\n\
    long[] getHashFromPermutations(string s) \n{\n  size_t len = s.length;\n  long[]\
    \ hashes;\n  hashes.length = len;\n  string[] tmp_str;\n  tmp_str.length = len;\n\
    \  for (long i = 0L; i < (len); i++) \n  {\n    tmp_str[i] = s[i .. i];\n  }\n\
    \  string tmp;\n  while (tmp_str != std.algorithm.nextPermutation(tmp_str)) \n\
    \  {\n    tmp = \"\";\n    foreach (tmp; tmp_str) \n    {\n      tmp ~= tmp;\n\
    \    }\n    hashes ~= getHash(tmp);\n  }\n  return unique(hashes);\n}\n// Function\n\
    unittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3krss34c.d(17): Error: expression expected, not `in`

    /tmp/tmp3krss34c.d(34): Error: C style cast illegal, use `cast(long)math.pow(2L,
    32L)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3krss34c.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    std.algorithm.sort(l);\n\
    \    return l.uniq;\n}\n/*\nInsert a number in a binary search tree\n    >>> auto\
    \ tree = BST(\n            7L,\n            BST(6L, null, null),\n           \
    \ BST(8L,\n                BST(5L, null, null),\n                BST(9L, null,\
    \ null)));\n    >>> tree.insert(4L);\n    >>> tree.insert(10L);\n    >>> tree.inorder().array;\n\
    \    [4L, 5L, 6L, 7L, 8L, 9L, 10L]\n    >>> tree.insert(8L);\n    >>> tree.inorder().array;\n\
    \    [4L, 5L, 6L, 7L, 8L, 8L, 9L, 10L]\n*/\nstruct BST \n{\n    long node;\n \
    \   BST* left;\n    BST* right;\n    \n    BST* insert(long value) \n    {\n \
    \       if (value <= node) \n        {\n            if (left) \n            {\n\
    \                left.insert(value);\n            } \n            else \n    \
    \        {\n                left = BST(value, null, null);\n            }\n  \
    \      } \n        else \n        {\n            if (right) \n            {\n\
    \                right.insert(value);\n            } \n            else \n   \
    \         {\n                right = BST(value, null, null);\n            }\n\
    \        }\n        return this;\n    }\n    \n    Tuple!(BST*, bool) search(long\
    \ value) \n    {\n        if (value == node) \n        {\n            return tuple(this,\
    \ true);\n        } \n        else if (value < node) \n        {\n           \
    \ if (left) \n            {\n                return left.search(value);\n    \
    \        } \n            else \n            {\n                return tuple(this,\
    \ false);\n            }\n        } \n        else \n        {\n            if\
    \ (right) \n            {\n                return right.search(value);\n     \
    \       } \n            else \n            {\n                return tuple(this,\
    \ false);\n            }\n        }\n    }\nunittest\n{\n    alias candidate =\
    \ unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L,\
    \ 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpydj3qnpc.d(98): Error: `}` expected following members in `struct`
    declaration at /tmp/tmpydj3qnpc.d(30)

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpydj3qnpc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = [];\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwwhqnvgz.d(12): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwwhqnvgz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ul\
    \ = new long[];\n    foreach(i; l)\n    {\n        if(ul.canFind(i))\n       \
    \     continue;\n        ul ~= i;\n    }\n    ul.sort;\n    return ul;\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpocp41via.d(11): Error: new can only create structs, dynamic arrays
    or class objects, not `long[]`''s

    /tmp/tmpocp41via.d(14): Error: no property `canFind` for type `long[]`

    /tmp/tmpocp41via.d(18): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpocp41via.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\timmutable HashSet!(long)\
    \ h = new HashSet!(long)();\n\tforeach(e; l)\n\t{\n\t\th.insert(e);\n\t}\n\tl\
    \ = to!(long[])(h.keys);\n\tsort(l);\n\treturn l;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqupd4aff.d(11): Error: template instance `HashSet!long` template
    `HashSet` is not defined

    /tmp/tmpqupd4aff.d(11): Error: template instance `HashSet!long` template `HashSet`
    is not defined

    /tmp/tmpqupd4aff.d(16): Error: template instance `to!(long[])` template `to` is
    not defined, did you mean No?

    /tmp/tmpqupd4aff.d(17): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqupd4aff.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    auto u = array(sort(l));\n\
    \    long[] r = new long[];\n    int i = 0;\n    foreach(e; u) \n    {\n     \
    \   if (i == 0 || r[$-1] != e) \n        {\n            r ~= e;\n            i++;\n\
    \        }\n    }\n    return r;\n}\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxio0xbw6.d(11): Error: undefined identifier `array`

    /tmp/tmpxio0xbw6.d(12): Error: new can only create structs, dynamic arrays or
    class objects, not `long[]`''s

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxio0xbw6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] _ =\
    \ l.dup;\n    sort(_);\n    return _.uniq;\n}\n/*\nreturn number of elements in\
    \ array\n    >>> length([1, 2, 3, 4, 5])\n    5\n*/\nsize_t length(T[] arr)\n\
    {\n    return arr.length;\n}\n/*\nSum of an array\n    >>> sum([1, 2, 3, 4, 5])\n\
    \    15\n*/\nlong sum(long[] l) \n{\n    return l.sum;\n}\n/*\nCompute sum over\
    \ array\n    >>> sum([1, 2, 3, 4, 5])\n    15\n*/\nlong sum(T)(T[] arr)\n{\n \
    \   long sum = 0;\n    foreach(i; arr) {\n        sum += i;\n    }\n    return\
    \ sum;\n}\n/*\nCompute product over array\n    >>> product([1, 2, 3, 4, 5])\n\
    \    120\n*/\nlong product(T)(T[] arr)\n{\n    long product = 1;\n    foreach(i;\
    \ arr) {\n        product *= i;\n    }\n    return product;\n}\n/*\nReturn minimum\
    \ value of array\n    >>> minimum([1, 3, 2, 5, 4])\n    1\n*/\nlong minimum(long[]\
    \ l) \n{\n    return l.min;\n}\n/*\nReturn maximum value of array\n    >>> maximum([1,\
    \ 3, 2, 5, 4])\n    5\n*/\nlong maximum(long[] l) \n{\n    return l.max;\n}\n\
    /*\nReturn mean value of array\n    >>> mean([1, 3, 2, 5, 4])\n    3\n*/\ndouble\
    \ mean(long[] l) \n{\n    return l.mean;\n}\n/*\nReturn median value of array\n\
    \    >>> median([1, 3, 2, 5, 4])\n    3\n*/\ndouble median(long[] l) \n{\n   \
    \ return l.median;\n}\n/*\nReturn variance of array\n    >>> variance([1, 3, 2,\
    \ 5, 4])\n    2.666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666\n\
    unittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpawcgx9dp.d(95): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpawcgx9dp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ul\
    \ = typeof(ul).init;\n    long i = 0;\n    for (; i < l.length; ++i)\n    {\n\
    \        long j = 0;\n        for (; j < ul.length; ++j)\n        {\n        \
    \    if (l[i] == ul[j])\n            {\n                break;\n            }\n\
    \        }\n        if (j == ul.length)\n        {\n            ul ~= l[i];\n\
    \        }\n    }\n    return sort(ul);\n}\n/*\nReturn min/max value and it's\
    \ index in given array\n    >>> minmax([5L, 3L, 9L, 1L, 3L, 3L, 9L, 0L, 123L])\n\
    \    (0L, 123L, 8L, 0L)\n*/\nTuple!(long, long, long, long) minmax(long[] l) \n\
    {\n    if (l.length == 0)\n    {\n        throw new Exception(\"Can't compute\
    \ min/max on empty array\");\n    }\n    long minv = l[0];\n    long maxv = l[0];\n\
    \    long mini = 0;\n    long maxi = 0;\n    long i = 1;\n    for (; i < l.length;\
    \ ++i)\n    {\n        if (l[i] < minv)\n        {\n            minv = l[i];\n\
    \            mini = i;\n        }\n        if (l[i] > maxv)\n        {\n     \
    \       maxv = l[i];\n            maxi = i;\n        }\n    }\n    return tuple(minv,\
    \ maxv, mini, maxi);\n}\n/*\nReturn all permutations of given list\n    >>> permutations([1L,\
    \ 2L, 3L])\n    [[1L, 2L, 3L], [1L, 3L, 2L], [2L, 1L, 3L], [2L, 3L, 1L], [3L,\
    \ 1L, 2L], [3L, 2L, 1L]]\n*/\nlong[][] permutations(long[] l) \n{\n    long[][]\
    \ perms = typeof(perms).\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqufyo4_x.d(69): Error: identifier expected following `.`, not `unittest`

    /tmp/tmpqufyo4_x.d(70): Error: semicolon expected, not `{`

    /tmp/tmpqufyo4_x.d(75): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqufyo4_x.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    struct wrapper\n\
    \    {\n\tlong x;\n\tbool operator==(wrapper rhs) const { return x == rhs.x; }\n\
    \tbool operator!=(wrapper rhs) const { return x != rhs.x; }\n\tbool operator<(wrapper\
    \ rhs) const { return x < rhs.x; }\n    }\n    auto wrapped = l.map!(w => wrapper(w));\n\
    \    return wrapped.uniq.map!(w => w.x).sort.array;\n}\n/*\nReturn sorted unique\
    \ elements in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n\
    \    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    return\
    \ l.uniq.sort.array;\n}\n/*\nReturn sorted unique elements in an array\n    >>>\
    \ unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n\
    \    \n*/\nlong[] unique(long[] l) \n{\n    auto sorted = l.sort;\n    long[]\
    \ unique;\n    unique ~= sorted[0];\n    foreach(i, x; sorted[1..$])\n    {\n\t\
    if(x != sorted[i])\n\t    unique ~= x;\n    }\n    return unique;\n}\n/*\nReturn\
    \ sorted unique elements in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[]\
    \ l) \n{\n    auto sorted = l.sort;\n    long[] unique;\n    long last = sorted[0];\n\
    \    unique ~= last;\n    foreach(x; sorted[1..$])\n    {\n\tif(x != last)\n\t\
    {\n\t    unique ~= x;\n\t    last = x\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbd_ofq63.d(14): Error: semicolon expected, not `==`

    /tmp/tmpbd_ofq63.d(14): Error: declaration expected, not `==`

    /tmp/tmpbd_ofq63.d(15): Error: semicolon expected, not `!=`

    /tmp/tmpbd_ofq63.d(15): Error: found `!=` instead of statement

    /tmp/tmpbd_ofq63.d(16): Error: semicolon expected, not `<`

    /tmp/tmpbd_ofq63.d(16): Error: declaration expected, not `<`

    /tmp/tmpbd_ofq63.d(16): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbd_ofq63.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = [];\n    foreach(i;l)\n    {\n        if(i in result)\n            continue;\n\
    \        result ~= i;\n    }\n    return result;\n}\nlong[] unique(T)(T[] l) \n\
    {\n    long[] result = [];\n    foreach(i;l)\n    {\n        if(i in result)\n\
    \            continue;\n        result ~= i;\n    }\n    return result;\n}\n/*\n\
    Return sorted unique elements in an array\n    >>> unique([\"abc\", \"abc\", \"\
    def\", \"xyz\", \"abc\"])\n    [\"abc\", \"def\", \"xyz\"]\n*/\nstring[] unique(string[]\
    \ l) \n{\n    string[] result = [];\n    foreach(i;l)\n    {\n        if(i in\
    \ result)\n            continue;\n        result ~= i;\n    }\n    return result;\n\
    }\n/*\nRemove instances of an element in an array\n    >>> remove([\"abc\", \"\
    def\", \"xyz\", \"abc\"], \"abc\")\n    [\"def\", \"xyz\"]\n*/\nT[] remove(T)(T[]\
    \ l, T o) \n{\n    auto result = l;\n    while(o in result)\n        result =\
    \ result[0..$-1];\n    return result;\n}\n/*\nReturn the index of the first occurence\
    \ of an element in an array\n    >>> indexof([\"abc\", \"def\", \"xyz\", \"abc\"\
    ], \"abc\")\n    0\n    >>> indexof([\"abc\", \"def\", \"xyz\", \"abc\"], \"def\"\
    )\n    1\n    >>> indexof([\"abc\", \"def\", \"xyz\", \"abc\"], \"xyz\")\n   \
    \ 2\n    >>> indexof([\"abc\", \"def\", \"xyz\", \"abc\"], \"zyx\")\n    -1\n\
    */\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6d6vn61n.d(14): Error: incompatible types for `(i) in (result)`:
    `long` and `long[]`

    /tmp/tmp6d6vn61n.d(41): Error: incompatible types for `(i) in (result)`: `string`
    and `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6d6vn61n.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    // sort array\n\
    \    sort(l);\n    // remove duplicate\n    l = array(remove(l, 1u));\n    return\
    \ l;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmptergh_g1.d(12): Error: undefined identifier `sort`, did you mean
    function `sqrt`?

    /tmp/tmptergh_g1.d(14): Error: undefined identifier `array`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptergh_g1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tauto a = array(l);\n\
    \ta.sort();\n\treturn a.dup.unique();\n}\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpoqve6y1g.d(11): Error: undefined identifier `array`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoqve6y1g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    const(ubyte)[]\
    \ r=to!(const(ubyte)[]) l;\n    std.array.sort(r);\n    return r.unique();\n}\n\
    unittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjgg9zxl4.d(11): Error: semicolon expected, not `l`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjgg9zxl4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    return l[$-uniq];\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqehy6vtc.d(11): Error: undefined identifier `uniq`, did you mean
    function `unique`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqehy6vtc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tbool[] has =\
    \ new bool[__MAX_LONG];\n\t\n\tforeach(l0; l) {\n\t\thas[l0] = true;\n\t}\n\t\
    long[] r;\n\tforeach(l0; l) {\n\t\tif(has[l0])\n\t\t\tr ~= l0;\n\t\thas[l0] =\
    \ false;\n\t}\n\treturn r;\n}\nunittest\n{\n    alias candidate = unique;\n\n\
    \    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpz1807ah4.d(11): Error: undefined identifier `__MAX_LONG`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz1807ah4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    return sort(l).uniq();\n\
    }\n/*\nReturn sorted unique elements in an array\n    >>> unique([0L, 1L, 2L,\
    \ 3L, 4L, 5L, 0L, 1L, 2L, 3L, 4L, 5L])\n    [0L, 1L, 2L, 3L, 4L, 5L]\n    \n*/\n\
    long[] unique(long[] l, long[] l1) \n{\n    l ~= l1;\n    return sort(l).uniq();\n\
    }\n/*\nReturn sorted unique elements in an array\n    >>> unique([0L, 1L, 2L,\
    \ 3L, 4L, 5L, 0L, 1L, 2L, 3L, 4L, 5L, 0L, 1L, 2L, 3L, 4L, 5L])\n    [0L, 1L, 2L,\
    \ 3L, 4L, 5L]\n    \n*/\nlong[] unique(long[] l, long[] l1, long[] l2) \n{\n \
    \   l ~= l1;\n    l ~= l2;\n    return sort(l).uniq();\n}\n/*\nReturn sorted unique\
    \ elements in an array\n    >>> unique([0L, 1L, 2L, 3L, 4L, 5L, 0L, 1L, 2L, 3L,\
    \ 4L, 5L, 0L, 1L, 2L, 3L, 4L, 5L, 0L, 1L, 2L, 3L, 4L, 5L])\n    [0L, 1L, 2L, 3L,\
    \ 4L, 5L]\n    \n*/\nlong[] unique(long[] l, long[] l1, long[] l2, long[] l3)\
    \ \n{\n    l ~= l1;\n    l ~= l2;\n    l ~= l3;\n    return sort(l).uniq();\n\
    }\n/*\nReturn sorted unique elements in an array\n    >>> unique([0L, 1L, 2L,\
    \ 3L, 4L, 5L, 0L, 1L, 2L, 3L, 4L, 5L, 0L, 1L, 2L, 3L, 4L,\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxlp1a4xi.d(49): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxlp1a4xi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    auto ret =\
    \ new long[0L];\n    foreach(ind, el; l)\n    {\n        if(el !in ret)\n    \
    \    {\n            ret ~= el;\n        }\n    }\n    ret.sort;\n    return ret;\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp46c7jj4w.d(14): Error: incompatible types for `(el) in (ret)`:
    `long` and `long[]`

    /tmp/tmp46c7jj4w.d(19): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp46c7jj4w.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    return to!(long[])(unique(l.map!(a\
    \ => to!string(a))));\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfunr5yti.d(11): Error: template instance `to!(long[])` template
    `to` is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfunr5yti.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    size_t[] uniqueIndex\
    \ = new size_t[l.length];\n    size_t uniqueCount = 0;\n    foreach (e; l)\n \
    \   {\n        if (uniqueCount == 0 || e != l[uniqueIndex[uniqueCount - 1]])\n\
    \        {\n            uniqueIndex[uniqueCount] = e;\n            uniqueCount++;\n\
    \        }\n    }\n    return uniqueIndex[0 .. uniqueCount];\n}\nunittest\n{\n\
    \    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppc5qmwqt.d(21): Error: cannot implicitly convert expression `uniqueIndex[0..uniqueCount]`
    of type `ulong[]` to `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppc5qmwqt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    if (l.length\
    \ == 0)\n    {\n        return l;\n    }\n    auto uniqueElements = new long[][]();\n\
    \    uniqueElements ~= l[0];\n    for (auto i = 1; i < l.length; i++)\n    {\n\
    \        if (!uniqueElements.canFind(l[i]))\n        {\n            uniqueElements\
    \ ~= l[i];\n        }\n    }\n    return uniqueElements.sort();\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6va104_s.d(15): Error: new can only create structs, dynamic arrays
    or class objects, not `long[][]`''s

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6va104_s.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    return array(std.algorithm.uniq(l));\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe4hmx2l0.d(11): Error: undefined identifier `array`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe4hmx2l0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    if (l.length\
    \ == 0)\n        return new long[0];\n    long[] result = new long[1];\n    result[0]\
    \ = l[0];\n    foreach (elem; l[1..$])\n    {\n        if (result.length == 0\
    \ || result[$-1] != elem)\n            result ~= elem;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmphy7ws018.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283a5]

    ??:? void tmphy7ws018.__unittest_L22_C1() [0x428074]

    ??:? void tmphy7ws018.__modtest() [0x428124]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42ce6f]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bd02]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43084d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430cfc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4307d9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bcd9]

    ??:? runModuleUnitTests [0x42cc45]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428868]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] l2;\n\
    unittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzfh7v1ez.d(12): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzfh7v1ez.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    uint[] counter\
    \ = [std.uni.sort(l)]\n    return [counter];\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjs0siggz.d(12): Error: semicolon expected, not `return`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjs0siggz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n  long[] r = new\
    \ long[std.common.min(l.length, std.common.max(1L, (long)l.length / 2L))];\n \
    \ long p = 0L;\n  const long n = l.length;\n  long i = 0L;\n  for (; i < n; ++i)\n\
    \  {\n    for (long j = 0L; j < p; ++j)\n    {\n      if (l[i] == r[j])\n    \
    \  {\n        break;\n      }\n    }\n    if (i != j)\n    {\n      continue;\n\
    \    }\n    r[p] = l[i];\n    ++p;\n  }\n  return r[0L..p];\n}\nunittest\n{\n\
    \    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp29bpzwvb.d(11): Error: C style cast illegal, use `cast(long)l.length`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp29bpzwvb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n    if (l.length\
    \ == 0)\n    {\n        return new long[0];\n    } \n    else \n    {\n      \
    \  l.sort;\n        return l.filter!((a, b) => a != b)();\n    }\nunittest\n{\n\
    \    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3ylcrele.d(10): Error: cannot use function constraints for non-template
    functions. Use `static if` instead

    /tmp/tmp3ylcrele.d(10): Error: declaration expected, not `if`

    /tmp/tmp3ylcrele.d(13): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3ylcrele.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    auto s = set(l);\n\
    \    l = immutable(long[])(s.byKey().map!(a => a.key));\n    return l;\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4lqnqs8u.d(11): Error: undefined identifier `set`, did you mean
    template `get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4lqnqs8u.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] temp\
    \ = new long[l.length];\n    int length = 0;\n    for (int i = 0; i < l.length;\
    \ i++) \n    {\n        if (temp.indexOf(l[i]) == -1) \n        {\n          \
    \  temp[length] = l[i];\n            length++;\n        }\n    }\n    temp.truncate(length);\n\
    \    return std.algorithm.sort(temp);\n}\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmplf38kvk1.d(15): Error: no property `indexOf` for type `long[]`

    /tmp/tmplf38kvk1.d(21): Error: no property `truncate` for type `long[]`

    /tmp/tmplf38kvk1.d(22): Error: undefined identifier `algorithm` in package `std`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplf38kvk1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] uniq\
    \ = [] ;\n    foreach(item; l)\n    {\n        if(!uniq.canFind(item))\n     \
    \   {\n            uniq ~= item;\n        }\n    }\n    return uniq.sort();\n\
    }\n/*\nReturn sorted unique elements in an array\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \n*/\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpaxstko6o.d(14): Error: no property `canFind` for type `long[]`

    /tmp/tmpaxstko6o.d(19): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpaxstko6o.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    import std.algorithm.sorting;\n\
    \    return l.uniq.sort;\n}\n/*\nProvide the number of unique elements in an array.\n\
    \    >>> uniqueNum([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    6L\n    \n*/\n\
    long uniqueNum(long[] l) \n{\n    return unique(l).length;\n}\n/*\nCalculate the\
    \ mean of an array.\n    >>> mean([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n  \
    \  20.444444444444443\n    \n*/\ndouble mean(long[] l) \n{\n    return l.sum /\
    \ l.length;\n}\n/*\nCalculate the median of an array.\n    >>> median([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    3.0\n    \n*/\ndouble median(long[] l) \n\
    {\n    import std.algorithm.sorting;\n    double[] copy = l.dup;\n    copy.sort;\n\
    \    if (l.length % 2 == 0) {\n        return (copy[l.length / 2 - 1] + copy[l.length\
    \ / 2]) / 2;\n    }\n    else {\n        return copy[l.length / 2];\n    }\n}\n\
    /*\nCalculate the min of an array.\n    >>> min([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L])\n    0L\n    \n*/\nlong min(long[] l) \n{\n    import std.algorithm.sorting;\n\
    \    return l.sort[0];\n}\n/*\nCalculate the max of an array.\n    >>> max([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    123L\n    \n*/\nlong max(long[] l) \n\
    {\n    import std.algorithm.sorting;\n    return l.sort[l.length - 1];\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpa9bsa4rf.d(73): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa9bsa4rf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    //std.algorithm.sort(l);\n\
    \    return std.algorithm.uniq(l);\n}\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpa7dzuq5e.d(12): Error: undefined identifier `algorithm` in package
    `std`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa7dzuq5e.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    return [uniq(sort(l))];\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmplln5h59i.d(11): Error: undefined identifier `uniq`, did you mean
    function `unique`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplln5h59i.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] out\
    \ = sort(l);\n    return ret(out[0..1] ~ out[1..$].filter!(a => a != out[$-1]));\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppd472v4g.d(11): Error: no identifier for declarator `long[]`

    /tmp/tmppd472v4g.d(11): Error: found `out` instead of statement

    /tmp/tmppd472v4g.d(12): Error: expression expected, not `out`

    /tmp/tmppd472v4g.d(12): Error: expression expected, not `out`

    /tmp/tmppd472v4g.d(12): Error: expression expected, not `out`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppd472v4g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    return std.algorithm.sort.uniq(l);\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpq5otzr9h.d(11): Error: undefined identifier `algorithm` in package
    `std`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq5otzr9h.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    inout(l);\n\
    \    l.sort;\n    return l.dedup;\n}\n \n/*\n  Return sorted unique elements in\
    \ an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L,\
    \ 3L, 5L, 9L, 123L]\n*/\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnamiusgt.d(11): Error: no identifier for declarator `inout(l)`

    /tmp/tmpnamiusgt.d(11): Deprecation: use `{ }` for an empty statement, not `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnamiusgt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long n = l.length;\n\
    \    long[] temp = new long[(int)n];\n    temp[0] = l[0];\n    long j = 0;\n \
    \   for (long i = 1; i < n; i++) \n    {\n        if (l[(int)i] != temp[(int)j])\
    \ \n        {\n            j++;\n            temp[(int)j] = l[(int)i];\n     \
    \   }\n    }\n    return temp[0..(int)(j + 1)];\n}\n/*\nRun one-way ANOVA\n  \
    \  >>> ANOVA([[12,11,14,9,13,13], [11,10,13,12,14,15], [12,14,10,11,12,13]])\n\
    \    (1.5555555555555556, 0.22264499790773298)\n    \n*/\nTuple!(double, double)\
    \ ANOVA(long[][] data) \n{\n    long n = data.length;\n    long[] N = new long[n];\n\
    \    long[] y_bar = new long[n];\n    for (long i = 0; i < n; i++) \n    {\n \
    \       N[(int)i] = data[(int)i].length;\n        y_bar[(int)i] = 0;\n       \
    \ for (long j = 0; j < N[(int)i]; j++) \n        {\n            y_bar[(int)i]\
    \ += data[(int)i][(int)j];\n        }\n        y_bar[(int)i] /= N[(int)i];\n \
    \   }\n    long y_bar_bar = 0;\n    long total = 0;\n    for (long i = 0; i <\
    \ n; i++) \n    {\n        y_bar_bar += N[(int)i] * y_bar[(int)i];\n        total\
    \ += N[(int)i];\n    }\n    y_bar_bar /= total;\n    double SSbetween = 0;\n \
    \   for (long i = 0; i < n; i++) \n    {\n        SSbetween +=\nunittest\n{\n\
    \    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb60jc_gj.d(12): Error: C style cast illegal, use `cast(int)n`

    /tmp/tmpb60jc_gj.d(17): Error: C style cast illegal, use `cast(int)i`

    /tmp/tmpb60jc_gj.d(17): Error: C style cast illegal, use `cast(int)j`

    /tmp/tmpb60jc_gj.d(20): Error: C style cast illegal, use `cast(int)j`

    /tmp/tmpb60jc_gj.d(20): Error: C style cast illegal, use `cast(int)i`

    /tmp/tmpb60jc_gj.d(23): Error: C style cast illegal, use `cast(int)(j + 1)`

    /tmp/tmpb60jc_gj.d(38): Error: C style cast illegal, use `cast(int)i`

    /tmp/tmpb60jc_gj.d(38): Error: C style cast illegal, use `cast(int)i`

    /tmp/tmpb60jc_gj.d(39): Error: C style cast illegal, use `cast(int)i`

    /tmp/tmpb60jc_gj.d(40): Error: C style cast illegal, use `cast(int)i`

    /tmp/tmpb60jc_gj.d(42): Error: C style cast illegal, use `cast(int)i`

    /tmp/tmpb60jc_gj.d(42): Error: C style cast illegal, use `cast(int)i`

    /tmp/tmpb60jc_gj.d(42): Error: C style cast illegal, use `cast(int)j`

    /tmp/tmpb60jc_gj.d(44): Error: C style cast illegal, use `cast(int)i`

    /tmp/tmpb60jc_gj.d(44): Error: C style'
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] res;\n\
    \    foreach(e; algo.uniq(l))\n        res ~= e;\n    return res;\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxkluma56.d(12): Error: undefined identifier `algo`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxkluma56.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret;\n\
    \    auto a = to!Array(ret);\n    auto b = to!Array(l);\n    a = sort(unique(b));\n\
    \    return ret;\n}\n/*\nReturn intersection of arrays.\n    >>> intersect([5L,\
    \ 3L, 9L, 1L, 2L, 3L, 0L, 0L, 9L, 3L, 123L], [9L, 0L, 9L, 2L, 4L, 7L, 123L, 0L,\
    \ 5L, 4L, 9L])\n    [0L, 9L, 123L]\n*/\nlong[] intersect(long[] l1, long[] l2)\n\
    {\n    long[] ret;\n    auto a = to!Array(ret);\n    auto b = to!Array(l1);\n\
    \    auto c = to!Array(l2);\n    a = intersect(sort(unique(b)), sort(unique(c)));\n\
    \    return ret;\n}\n/*\n    Return sum of the elements in array.\n    >>> sum([5L,\
    \ 3L, 9L, 1L, 2L, 3L, 0L, 0L, 9L, 3L, 123L])\n    158L\n*/\nlong sum(long[] l)\n\
    {\n    auto a = to!Array(l);\n    return reduce!\"a + b\"(a);\n}\n/*\n    Return\
    \ mean of the elements in array.\n    >>> mean([5L, 3L, 9L, 1L, 2L, 3L, 0L, 0L,\
    \ 9L, 3L, 123L])\n    14L\n*/\nlong mean(long[] l)\n{\n    auto a = to!Array(l);\n\
    \    return sum(a) / a.length;\n}\n/*\n    Return median of the elements in array.\n\
    \    >>> median([5L, 3L, 9L, 1L, 2L, 3L, 0L, 0L, 9L, 3L, 123L])\n    3L\n*/\n\
    long median(long[] l)\n{\n    auto a = to!Array(l);\n    auto b = sort(a);\n \
    \   if (b.length % 2 == 0)\n    {\n        return (b\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1jdrxxl7.d(62): Error: found `unittest` when expecting `)`

    /tmp/tmp1jdrxxl7.d(64): Error: found `{` when expecting `;` following `return`
    statement

    /tmp/tmp1jdrxxl7.d(69): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1jdrxxl7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    int[] pos\
    \ = std.algorithm.sort.sort!((a, b) => a > b)(l);\n    long[] res = new long[l.length];\n\
    \    res[0] = l[pos[0]];\n    int count = 1;\n    foreach(i; 1..l.length) \n \
    \   {\n        if(l[pos[i]] != l[pos[i-1]]) \n        {\n            res[count]\
    \ = l[pos[i]];\n            count++;\n        }\n    }\n    return res[0..count];\n\
    }\n/*\nReturn an array with unique elements from two arrays\n    >>> unique([1L,\
    \ 2L, 3L], [4L, 5L, 6L])\n    [1L, 2L, 3L, 4L, 5L, 6L]\n    >>> unique([1L, 2L,\
    \ 3L], [1L, 2L, 3L])\n    [1L, 2L, 3L]\n*/\nlong[] unique(long[] a, long[] b)\
    \ \n{\n    long[] res = new long[a.length + b.length];\n    foreach(i; 0..a.length)\
    \ \n    {\n        res[i] = a[i];\n    }\n    foreach(i; 0..b.length) \n    {\n\
    \        res[i + a.length] = b[i];\n    }\n    return unique(res);\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4pbaa0n_.d(11): Error: undefined identifier `algorithm` in package
    `std`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4pbaa0n_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    return std.algorithm.uniq(std.algorithm.sort(l));\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpz7fp690g.d(11): Error: undefined identifier `algorithm` in package
    `std`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz7fp690g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    auto s = set!(ElementType!(l))(l);\n\
    \    return to!(long[])(s);\n}\n/*\nPrint a 2D-array\n    >>> auto g = grid(10L,\
    \ 10L);\n    >>> printGrid(g);\n    00000\n    00000\n    00000\n    00000\n \
    \   00000\n    00000\n    00000\n    00000\n    00000\n    00000\n*/\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzr2g6_9f.d(11): Error: template instance `set!(ElementType!l)`
    template `set` is not defined, did you mean get(K, V)(inout(V[K]) aa, K key, lazy
    inout(V) defaultValue)?

    /tmp/tmpzr2g6_9f.d(12): Error: template instance `to!(long[])` template `to` is
    not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzr2g6_9f.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    return [min(l),\
    \ max(l)];\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp056z0mxk.d(11): Error: undefined identifier `min`, did you mean
    function `main`?

    /tmp/tmp056z0mxk.d(11): Error: undefined identifier `max`, did you mean function
    `fmax`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp056z0mxk.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] sorted=sort(l);\n\
    \    return sort(uniq(sorted));\n}\n/*\nGet the sum of elements in an array\n\
    \    >>> sum([5L, 3L, 2L, 3L, 3L, 9L, 0L, 123L])\n    148L\n    \n*/\nlong sum(long[]\
    \ l) \n{\n    long result=0L;\n    foreach(i; l) \n    {\n        result+=i;\n\
    \    }\n    return result;\n}\n/*\nGet the max value of elements in an array\n\
    \    >>> max([5L, 3L, 2L, 3L, 3L, 9L, 0L, 123L])\n    123L\n    \n*/\nlong max(long[]\
    \ l) \n{\n    long result=l[0];\n    foreach(i; l) \n    {\n        if(i>result)\
    \ \n        {\n            result=i;\n        }\n    }\n    return result;\n}\n\
    /*\nGet the min value of elements in an array\n    >>> min([5L, 3L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L])\n    0L\n    \n*/\nlong min(long[] l) \n{\n    long result=l[0];\n\
    \    foreach(i; l) \n    {\n        if(i<result) \n        {\n            result=i;\n\
    \        }\n    }\n    return result;\n}\n/*\nReturn the product of all the elements\
    \ in an array\n    >>> prod([5L, 3L, 2L, 3L, 3L, 9L, 0L, 123L])\n    0L\n    \n\
    */\nlong prod(long[] l) \n{\n    long result=1L;\n    foreach(i; l) \n    {\n\
    \        result*=i;\n    }\n    return result;\n}\n/*\nReturn the number of elements\
    \ in an array\n    >>> count([5L, 3L, 2L, 3L, 3L, 9L, 0L, 123L])\n    8L\n   \
    \ \n*/\nlong count(long[] l) \n{\n    return l.length;\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgsez_k7e.d(89): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgsez_k7e.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] r;\n\
    \    foreach(w; l) \n    {\n        r ~= w;\n    }\n    r.sort;\n    return std.algorithm.uniq(r);\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpo5bj4kge.d(16): Error: no property `sort` for type `long[]`

    /tmp/tmpo5bj4kge.d(17): Error: undefined identifier `algorithm` in package `std`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo5bj4kge.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n     /*\n    \
    \ * D.Sheta\n     * 09/24/2018\n     * To find unique elements in an array\n \
    \    */\n    long[] tmp = new long[0L];\n    bool found = false;\n    foreach(long\
    \ v; l)\n    {\n        foreach(long vv; tmp)\n        {\n            if(v ==\
    \ vv)\n            {\n                found = true;\n                break;\n\
    \            }\n        }\n        if(!found)\n        {\n            tmp ~= v;\n\
    \        }\n        found = false;\n    }\n    return tmp;\n}\nunittest\n{\n \
    \   alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp4gfz37bj.d(40): unittest failure

    ----------------

    ??:? _d_unittestp [0x428345]

    ??:? void tmp4gfz37bj.__unittest_L36_C1() [0x428018]

    ??:? void tmp4gfz37bj.__modtest() [0x4280c8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cd9b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc2e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430779]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430c28]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430705]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc05]

    ??:? runModuleUnitTests [0x42cb71]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428794]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    return\n \
    \   //[\n    //    to!(long[])(unique(to!(int[])(l))),\n    //    to!(long[])(unique(to!(uint[])(l))),\n\
    \    //    to!(long[])(unique(to!(ulong[])(l)))\n    //];\n    to!(long[])(\n\
    \        unique(\n            chain(\n                [\n                    to!(int[])(l),\n\
    \                    to!(uint[])(l),\n                    to!(ulong[])(l)\n  \
    \              ]\n            )\n        )\n    );\n}\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8ya0ylpa.d(17): Error: template instance `to!(long[])` template
    `to` is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8ya0ylpa.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    immutable\
    \ dg = l.dup;\n    return dg.sort.uniq;\n}\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([0.6, 0.3, 0.6, 0.2, 0.3, 0.3, 0.9, 0.0, 1.23])\n\
    \    [0.0, 0.2, 0.3, 0.6, 0.9, 1.23]\n    \n*/\nreal[] unique(real[] r) \n{\n\
    \    immutable dg = r.dup;\n    return dg.sort.uniq;\n}\n// import std.algorithm;\n\
    /*\nReturn the index of the requested element\nor if the element is not found\
    \ return -1.\n    >>> indexof([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L], 5L)\n  \
    \  0\n    \n*/\nlong indexof(long[] l, long e) \n{\n    immutable dg = l.dup;\n\
    \    immutable r = dg.indexOf(e);\n    return r;\n}\n/*\nReturn the index of the\
    \ requested element\nor if the element is not found return -1.\n    >>> indexof([0.6,\
    \ 0.3, 0.6, 0.2, 0.3, 0.3, 0.9, 0.0, 1.23], 0.2)\n    3\n    \n*/\nlong indexof(real[]\
    \ r, real e) \n{\n    immutable dg = r.dup;\n    immutable res = dg.indexOf(e);\n\
    \    return res;\n}\n/*\nReturn the list of the indexes of the requested element\n\
    or if the element is not found return [].\n    >>> allindexes([5L, 3L, 5L, 2L,\
    \ 3L, 3L, 9L, 0L, 123L], 5L)\n    [0L, 2L]\n    \n*/\nlong[] allindexes(long[]\
    \ l, long e) \n{\n    immutable dg = l.dup;\n    immutable r = dg.indexOf(e);\n\
    \    if (r != -1) \n    {\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpz1vccwkb.d(65): Error: found `unittest` instead of statement

    /tmp/tmpz1vccwkb.d(71): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz1vccwkb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164348
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    return array(newTreeSet(l).toArray);\n\
    }\n/*\n \nReturn sorted unique elements in an array\n    >>> unique([5., 3., 5.,\
    \ 2., 3., 3., 9., 0., 123.])\n    [0.0, 2.0, 3.0, 5.0, 9.0, 123.0]\n    \n*/\n\
    double[] unique(double[] l) \n{\n    return array(newTreeSet(l).toArray);\n}\n\
    /*\n \nReturn sorted unique elements in an array\n    >>> unique([\"a\", \"a\"\
    , \"b\", \"b\", \"b\", \"c\", \"d\"])\n    [\"a\", \"b\", \"c\", \"d\"]\n    \n\
    */\nstring[] unique(string[] l) \n{\n    return array(newTreeSet(l).toArray);\n\
    }\n/*\n \nReturn sorted unique elements in an array\n    >>> unique([1L, 2L, 3L,\
    \ \"a\", \"b\", \"c\", \"d\"])\n    [1L, 2L, 3L, \"a\", \"b\", \"c\", \"d\"]\n\
    \    \n*/\nObject[] unique(Object[] l) \n{\n    return array(newTreeSet(l).toArray);\n\
    }\n/*\n \nReturn sorted unique elements in an array\n    >>> unique([1, 2, 3,\
    \ \"a\", \"b\", \"c\", \"d\"])\n    [1, 2, 3, \"a\", \"b\", \"c\", \"d\"]\n  \
    \  \n*/\nT[] unique(T)(T[] l) \n{\n    return array(newTreeSet(l).toArray);\n\
    }\n/*\n \nReturn the intersection of two arrays.\n    >>> intersect([1L, 2L, 3L,\
    \ \"a\", \"b\", \"c\", \"d\"], [3L, 2L, 1L, \"d\", \"c\", \"b\", \"a\"])\n   \
    \ [1L, 2L, 3L, \"a\", \"b\", \"c\", \"d\"]\n    \n*/\nObject[] intersect(Object[]\
    \ a, Object[] b) \n{\n    auto intersection = newTreeSet(a);\n    intersection.retainAll(b);\n\
    \   \nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_v3pog8w.d(69): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_v3pog8w.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[0];\n    foreach(v; l)\n    {\n        if(!v in ret)\n        {\n\
    \            ret ~= v;\n        }\n    }\n    ret.sort;\n    return ret;\n}\n\
    /*\nReturn an array with only the selected columns, in a new arrangement\n   \
    \ >>> select([\"a\", \"b\", \"c\", \"d\"], [1, 2, 0])\n    [\"b\", \"c\", \"a\"\
    ]\n*/\nstring[] select(string[] haystack, int[] desired_columns) \n{\n    string[]\
    \ ret = new string[desired_columns.length];\n    foreach(v; desired_columns)\n\
    \    {\n        ret[v] = haystack[v];\n    }\n    return ret;\n}\nunittest\n{\n\
    \    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyscfqxcx.d(14): Error: incompatible types for `(!v) in (ret)`:
    `bool` and `long[]`

    /tmp/tmpyscfqxcx.d(19): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyscfqxcx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] r =\
    \ std.range(l.length).map!(i => l[i]).array;\n    r = std.algorithm.sort(r);\n\
    \    return r.dup.joined.retro.array;\n}\n/*\n   Return the largest value in an\
    \ array\n    >>> max([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    123L\n*/\nlong\
    \ max(long[] l)\n{\n    return l.reduce!max;\n}\n/*\n   Return the smallest value\
    \ in an array\n    >>> min([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    0L\n*/\n\
    long min(long[] l)\n{\n    return l.reduce!min;\n}\n/*\n   Return the sum of all\
    \ values in an array\n    >>> sum([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n  \
    \  154L\n*/\nlong sum(long[] l)\n{\n    return l.reduce!((a, b) => a + b);\n}\n\
    /*\n   Return the average value in an array\n    >>> avg([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L])\n    17L\n*/\nlong avg(long[] l)\n{\n    return sum(l) /\
    \ l.length;\n}\n/*\n   Return the median value in an array\n    >>> median([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    3L\n*/\nlong median(long[] l)\n{\n \
    \   long[] n = unique(l);\n    return n[(l.length / 2)];\n}\n/*\n   Return the\
    \ mode value in an array\n    >>> mode([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n\
    \    3L\n*/\nlong mode(long[] l)\n{\n    long[] n = unique(l);\n    long m = std\n\
    unittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp33f4yir0.d(70): Error: semicolon expected, not `unittest`

    /tmp/tmp33f4yir0.d(70): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp33f4yir0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    /*\n    l.sort\n\
    \    _.uniq\n    */\n    auto res = l.sort;\n    res = res.uniq;\n    return res;\n\
    }\n \n \n/*\nReturn sorted unique elements in an array\n    >>> unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \n*/\nunittest\n{\n \
    \   alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpl_4waql2.d(15): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl_4waql2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    int[] r =\
    \ l.array();\n    return sort(r.unique).array();\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpc5400wi_.d(11): Error: no property `array` for type `long[]`

    /tmp/tmpc5400wi_.d(12): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc5400wi_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    return to!(long[])(distinct(l));\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4eu6djyd.d(11): Error: template instance `to!(long[])` template
    `to` is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4eu6djyd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    auto s = new\
    \ std.set.HashSet!long();\n    auto r = new long[](0);\n    foreach(i; l) {\n\
    \        if(s.insert(i))\n            r ~= i;\n    }\n    return r;\n}\n/*\n \
    \   Returns the unique elements of the given array.\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvpsf6lvi.d(19): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvpsf6lvi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    size_t length\
    \ = l.length;\n    auto dgUnique = new long[length];\n    dgUnique.length = length;\n\
    \    size_t j = 0L;\n    foreach(int i, long l_i; l)\n    {\n        if(i == 0)\
    \ {\n            dgUnique[0] = l_i;\n            j = 1L;\n        }\n        else\
    \ {\n            bool add = true;\n            foreach(int k, long dgUnique_k;\
    \ dgUnique[0 .. j])\n            {\n                if(l_i == dgUnique_k) {\n\
    \                    add = false;\n                    break;\n              \
    \  }\n            }\n            if(add) {\n                dgUnique[j] = l_i;\n\
    \                j = j + 1L;\n            }\n        }\n    }\n    dgUnique.length\
    \ = j;\n    return dgUnique;\n}\nlong[] unique(long[] l, int l_length) \n{\n \
    \   size_t length = l_length;\n    auto dgUnique = new long[length];\n    dgUnique.length\
    \ = length;\n    size_t j = 0L;\n    foreach(int i, long l_i; l)\n    {\n    \
    \    if(i == 0) {\n            dgUnique[0] = l_i;\n            j = 1L;\n     \
    \   }\n        else {\n            bool add = true;\n            foreach(int k,\
    \ long dgUnique_k; dgUnique[0 .. j])\n            {\n                if(l_i ==\
    \ dgUnique_k) {\n                    add = false;\n                    break;\n\
    \                }\n            }\n            if(add) {\n                dgUnique[j]\
    \ = l_i;\n                j = j + 1L;\n            }\n        }\n    }\n    dgUnique.length\
    \ = j;\n    return dgUnique;\n}\nlong[] unique(ref long[] l) \n{\n    size_t length\
    \ = l.length;\n    auto dgUnique = new long[length];\n    dgUnique.length = length;\n\
    \    size_t j = 0L;\n\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgis2be6f.d(76): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgis2be6f.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    auto m = newMap!(long,\
    \ Nullable!long);\n    foreach(l1; l) \n    {\n        m[l1] = 1;\n    }\n   \
    \ long[] ret = new long[];\n    foreach(l1; m.keys)\n    {\n        ret ~= l1;\n\
    \    }\n    sort(ret);\n    return ret;\n}\nunittest\n{\n    alias candidate =\
    \ unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L,\
    \ 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmjspwqhv.d(11): Error: template instance `newMap!(long, Nullable!long)`
    template `newMap` is not defined

    /tmp/tmpmjspwqhv.d(16): Error: new can only create structs, dynamic arrays or
    class objects, not `long[]`''s

    /tmp/tmpmjspwqhv.d(21): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmjspwqhv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n  return (cast(long[])std.algorithm.sort.unique(l)).dup;\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk1n9wnrj.d(11): Error: undefined identifier `algorithm` in package
    `std`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk1n9wnrj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret;\n\
    \    auto m = new HashMap!(typeof(l[0]), typeof(ret))();\n    foreach(a; l)\n\
    \    {\n        if(!m.containsKey(a))\n        {\n            m[a] = a;\n    \
    \    }\n    }\n    foreach(a; m.values)\n    {\n        ret ~= a;\n    }\n   \
    \ return ret;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdwfr4ue_.d(12): Error: template instance `HashMap!(typeof(l[0]),
    typeof(ret))` template `HashMap` is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdwfr4ue_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] r =\
    \ [];\n    if(l.length==0) \n    {\n        return r;\n    }\n    long head =\
    \ l[0];\n    long[] tail = l[1..$];\n    for(long i = 0; i < tail.length; ++i)\
    \ \n    {\n        if(head != tail[i]) \n        {\n            r ~= head;\n \
    \           head = tail[i];\n        }\n    }\n    r ~= head;\n    return r;\n\
    }\n/*\nReturn sorted unique elements in an array\n    >>> unique([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[]\
    \ unique(long[] l) \n{\n    long[] r = [];\n    if(l.length==0) \n    {\n    \
    \    return r;\n    }\n    long head = l[0];\n    long[] tail = l[1..$];\n   \
    \ for(long i = 0; i < tail.length; ++i) \n    {\n        if(head != tail[i]) \n\
    \        {\n            r ~= head;\n            head = tail[i];\n        }\n \
    \   }\n    r ~= head;\n    return r;\n}\n/*\nReturn sorted unique elements in\
    \ an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L,\
    \ 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] r = [];\n\
    \    if(l.length==0) \n    {\n        return r;\n    }\n    long head = l[0];\n\
    \    long[] tail = l[1..$];\n    for(long i = 0; i < tail.length; ++i) \n    {\n\
    \        if(head != tail[i]) \n        {\n            r ~= head;\n           \
    \ head = tail[i];\n        }\n    }\n    r\nunittest\n{\n    alias candidate =\
    \ unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L,\
    \ 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprgtndsln.d(79): Error: found `unittest` when expecting `;` following
    statement

    /tmp/tmprgtndsln.d(85): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprgtndsln.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    if (l.length\
    \ == 0) \n    {\n        return l;\n    }\n    auto result = [];\n    auto last_value\
    \ = l[0];\n    result ~= last_value;\n    foreach (value; l[1 .. $]) \n    {\n\
    \        if (value != last_value) \n        {\n            result ~= value;\n\
    \            last_value = value;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdqpqnuqj.d(17): Error: cannot append type `long` to type `void[]`

    /tmp/tmpdqpqnuqj.d(22): Error: cannot append type `long` to type `void[]`

    /tmp/tmpdqpqnuqj.d(26): Error: cannot implicitly convert expression `result` of
    type `void[]` to `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdqpqnuqj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] res\
    \ = sort(l);\n    res = array(res[0..0]);\n    foreach(idx, value; res)\n    {\n\
    \        if(res[$-1] != value)\n            res ~= value;\n    }\n    return res;\n\
    }\n \nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzedut0ns.d(11): Error: undefined identifier `sort`, did you mean
    function `sqrt`?

    /tmp/tmpzedut0ns.d(12): Error: undefined identifier `array`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzedut0ns.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n  if (l.length\
    \ == 0) \n  {\n    return l;\n  }\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpshzhzgo5.d(15): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpshzhzgo5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    return unique!q{a\
    \ < b}(l);\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_owyhpb1.d(11): Error: template instance `unique!"a < b"` `unique`
    is not a template declaration, it is a function

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_owyhpb1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    import std.algorithm.sorting;\n\
    \    import std.algorithm.searching;\n    //auto x = l.sort().uniq;\n    auto\
    \ x = l.uniq;\n    return x;\n}\n \nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4dnombei.d(14): Error: no property `uniq` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4dnombei.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = [l[0]];\n    foreach(e;l) \n    {\n        if (e != result[$-1]) \n      \
    \  {\n            result ~= e;\n        }\n    }\n    return result;\n}\n/*\n\
    Return sorted unique elements in an array\n    >>> unique([5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \n*/\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpnni5nudj.d(31): unittest failure

    ----------------

    ??:? _d_unittestp [0x428345]

    ??:? void tmpnni5nudj.__unittest_L27_C1() [0x428014]

    ??:? void tmpnni5nudj.__modtest() [0x4280c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cdb3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc46]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430699]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b48]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430625]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc1d]

    ??:? runModuleUnitTests [0x42cb89]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428808]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tstring[] str\
    \ = cast(string[]) l;\n\treturn cast(long[]) std.algorithm.uniq(str).array;\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmposuhoafv.d(12): Error: undefined identifier `algorithm` in package
    `std`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmposuhoafv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    return unique(sort(l));\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnpcb0q5d.d(11): Error: undefined identifier `sort`, did you mean
    function `sqrt`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnpcb0q5d.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\treturn to!(long[])(uniq(to!(ElementTypeTuple!(l))(l)));\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpp6713pzh.d(11): Error: template instance `to!(long[])` template
    `to` is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp6713pzh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[long]\
    \ tmp = [l[0L]: 1L];\n    foreach (i; 1 .. l.length)\n    {\n        if (tmp.find(l[i])\
    \ is null) \n        {\n            tmp[l[i]] = 1L;\n        }\n    }\n    return\
    \ sort(keys(tmp));\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvd2nbi21.d(14): Error: no property `find` for type `long[long]`

    /tmp/tmpvd2nbi21.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvd2nbi21.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tauto u = [];\n\
    \tforeach(i;l)\n\t{\n\t\tif(u.canFind(i))\n\t\t\tcontinue;\n\t\tu ~= i;\n\t}\n\
    \treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9us1sry_.d(14): Error: no property `canFind` for type `void[]`

    /tmp/tmp9us1sry_.d(16): Error: cannot append type `long` to type `void[]`

    /tmp/tmp9us1sry_.d(18): Error: cannot implicitly convert expression `u` of type
    `void[]` to `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9us1sry_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    return std.typecons.tuple(l).array.uniq.array;\n\
    }\n/*\nReturn sorted unique elements in an array\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \n*/\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwj9en_d3.d(11): Error: no property `array` for type `Tuple!(long[])`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwj9en_d3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \nin{\n  assert(l.length\
    \ > 0);\n}\nout(result)\n{\n  for(int i = 0; i < result.length; i++)\n    for(int\
    \ j = i + 1; j < result.length; j++)\n      assert(result[i] != result[j]);\n\
    \  assert(l.length <= result.length);\n}\n{\n  bool[] seen = new bool[l.length];\n\
    \  long[] result = new long[l.length];\n  long j = 0;\n  for(long i = 0; i < l.length;\
    \ i++)\n  {\n    if(!seen[i])\n    {\n      result[j] = l[i];\n      j = j + 1;\n\
    \      seen[i] = true;\n      foreach(k; 1 .. l.length)\n      {\n        if(l[i]\
    \ == l[i + k])\n        {\n          seen[i + k] = true;\n        }\n      }\n\
    \    }\n  }\n  return result[0 .. j];\n}\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp65dhm961.d(20): Error: missing `do { ... }` after `in` or `out`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp65dhm961.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] unique\
    \ = new long[];\n    foreach(l_val; l) \n    {\n        if(l_val in unique)\n\
    \            continue;\n        unique ~= l_val;\n    }\n    unique.sort;\n  \
    \  return unique;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmptpnnyb3b.d(11): Error: new can only create structs, dynamic arrays
    or class objects, not `long[]`''s

    /tmp/tmptpnnyb3b.d(14): Error: incompatible types for `(l_val) in (unique)`: `long`
    and `long[]`

    /tmp/tmptpnnyb3b.d(18): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptpnnyb3b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] t =\
    \ l[];\n    sort(t);\n    return (long[])t[0..uniq(t)];\n}\n \n \n \n/*\nReturn\
    \ the index of the first occurence of an element\n    >>> find([\"foo\", \"bar\"\
    , \"baz\"], \"bar\")\n    1\n*/\nlong find(T)(T[] l, T e) \n{\n    long idx =\
    \ 0;\n    foreach(elem; l) \n    {\n        if(elem == e) \n        {\n      \
    \      return idx;\n        }\n        idx++;\n    }\n    return -1;\n}\n \n \n\
    \ \n/*\nReturn the index of the first occurence of an element, or -1 if not found\n\
    \    >>> indexOf([\"foo\", \"bar\", \"baz\"], \"bar\")\n    1\n*/\nlong indexOf(T)(T[]\
    \ l, T e) \n{\n    return find(l, e);\n}\n \n \n \n/*\nReturn the index of the\
    \ last occurence of an element\n    >>> rfind([\"foo\", \"bar\", \"baz\", \"bar\"\
    ], \"bar\")\n    3\n*/\nlong rfind(T)(T[] l, T e) \n{\n    long idx = l.length;\n\
    \    foreach_reverse(elem; l) \n    {\n        if(elem == e) \n        {\n   \
    \         return idx;\n        }\n        idx--;\n    }\n    return -1;\n}\n \n\
    \ \n \n/*\nReturn the index of the last occurence of an element, or -1 if not\
    \ found\n    >>> lastIndexOf([\"foo\", \"bar\", \"baz\", \"bar\"], \"bar\")\n\
    \    3\n*/\nlong lastIndexOf(T)(T[] l, T e) \n{\n    return rfind(l, e);\n}\n\
    \ \n \n \n/*\nCount the number of occurences of an element\n    >>> count([\"\
    foo\", \"bar\", \"foo\", \"bar\"], \"bar\")\n    2\n*/\nlong count(T)(T[] l, T\
    \ e) \n{\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8oz5qjcv.d(13): Error: C style cast illegal, use `cast(long[])t[0..uniq(t)]`

    /tmp/tmp8oz5qjcv.d(91): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8oz5qjcv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] r;\n\
    \    foreach(ulong e; array(l)) \n    {\n        if(!e in r) \n        {\n   \
    \         r ~= e;\n        }\n    }\n    r.sort;\n    return r;\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbw51360i.d(12): Error: undefined identifier `array`

    /tmp/tmpbw51360i.d(19): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbw51360i.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    // make an\
    \ associative array\n    auto seen = new Appender!(long[])();\n    long[] result;\n\
    \    // sort array\n    l.sort;\n    foreach(i; l)\n    {\n        // if element\
    \ is seen, skip\n        if(seen.arrayof.count(i) > 0)\n            continue;\n\
    \        // else, append to result\n        seen.put(i);\n    }\n    // make the\
    \ associative array into an array\n    result = seen.data;\n    return result;\n\
    }\n/*\n  Return true if element found in array, false otherwise\n  >>> in_array(4L,\
    \ [4L, 2L, 3L, 12L])\n  true\n  >>> in_array(3L, [4L, 2L, 3L, 12L])\n  false\n\
    */\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpql9o3xct.d(12): Error: template instance `Appender!(long[])` template
    `Appender` is not defined

    /tmp/tmpql9o3xct.d(15): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpql9o3xct.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    return _unique(l);\n\
    }\n/*\nReturn sorted unique elements in an array\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \n*/\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnff9voa8.d(11): Error: undefined identifier `_unique`, did you
    mean function `unique`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnff9voa8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[][] dupes\
    \ = l.groupby!((d, i) => l[i]);\n    return dupes.map!(m => m[0]).array;\n}\n\
    unittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsw8_jck9.d(11): Error: no property `groupby` for type `long[]`

    /tmp/tmpsw8_jck9.d(12): Error: no property `map` for type `long[][]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsw8_jck9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n    {\n        auto\
    \ it = l.sort.uniq;\n        return it.array;\n    }\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpt5ff6vnh.d(11): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt5ff6vnh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    int size =\
    \ l.length;\n    if (size == 0)\n    {\n        return new long[0];\n    }\n \
    \   else\n    {\n        long[] s = sort(l);\n        long[] result = new long[s.length];\n\
    \        result[0] = s[0];\n        int i = 1;\n        foreach (num; s[1..$])\n\
    \        {\n            if (num != result[i - 1])\n            {\n           \
    \     result[i] = num;\n                i++;\n            }\n        }\n     \
    \   return result[0..i];\n    }\n}\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3_l2jeh8.d(11): Error: cannot implicitly convert expression `l.length`
    of type `ulong` to `int`

    /tmp/tmp3_l2jeh8.d(18): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3_l2jeh8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] s =\
    \ sort(l);\n    s = s.dup;\n    return uniq(s);\n}\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(int[] l) \n{\n    long[] s =\
    \ sort(l);\n    s = s.dup;\n    return uniq(s);\n}\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\ndouble[] unique(double[] l) \n{\n    double[]\
    \ s = sort(l);\n    s = s.dup;\n    return uniq(s);\n}\n/*\n    Return an index\
    \ of unique elements in an array.\n    \n    Parameters\n    ----------\n    s\
    \ : array of float, int or str\n        Input array.\n    return_index : bool,\
    \ optional\n        If True, also return the indices of s that result in the unique\
    \ array.\n    return_inverse : bool, optional\n        If True, also return the\
    \ indices of the unique array that can be used\n        to reconstruct s.\n  \
    \  return_counts : bool, optional\n        If True, also return the number of\
    \ times each unique value comes up\n        in s.\n    \n    Returns\n    -------\n\
    \    unique : array of float, int or str\n        The sorted unique values.\n\
    \    unique_indices : array of ints, optional\n        The indices of the first\
    \ occurrences of the unique values in the\n        (flattened) original array.\
    \ Only provided if `return_index` is True.\n    unique_inverse : array of ints,\
    \ optional\n        The indices to reconstruct the (flattened) original array\
    \ from the\n        unique array. Only provided if `return_inverse` is True.\n\
    \    unique_counts : array of ints, optional\n       \nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjemnpqgm.d(39): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjemnpqgm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result;\n\
    \    foreach(v; l) \n    {\n        if (result.count(v) == 0) \n        {\n  \
    \          result ~= v;\n        }\n    }\n    return sort(result);\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpm_5otfjg.d(14): Error: no property `count` for type `long[]`

    /tmp/tmpm_5otfjg.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm_5otfjg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    return _unique(l);\n\
    }\nlong[] _unique(long[] l) \n{\n    double[] r = std.array.array(l);\n    r =\
    \ r.uniq;\n    l = std.array.array(r);\n    return l;\n}\n/*\nReturn sorted unique\
    \ elements in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n\
    \    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\ndouble[] unique(double[] l) \n{\n \
    \   return _unique(l);\n}\ndouble[] _unique(double[] l) \n{\n    double[] r =\
    \ std.array.array(l);\n    r = r.uniq;\n    l = std.array.array(r);\n    return\
    \ l;\n}\n/*\nReturn sorted unique elements in an array\n    >>> unique([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\n@nogc\
    \ pure nothrow unittest \n{\n    import std.conv;\n    assert(to!string(unique([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])) == \"[0L, 2L, 3L, 5L, 9L, 123L]\");\n}\n\
    unittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3fjp1f7u.d(15): Error: undefined identifier `array` in package
    `std`

    /tmp/tmp3fjp1f7u.d(16): Error: no property `uniq` for type `double[]`

    /tmp/tmp3fjp1f7u.d(17): Error: undefined identifier `array` in package `std`

    /tmp/tmp3fjp1f7u.d(32): Error: undefined identifier `array` in package `std`

    /tmp/tmp3fjp1f7u.d(33): Error: no property `uniq` for type `double[]`

    /tmp/tmp3fjp1f7u.d(34): Error: undefined identifier `array` in package `std`

    /tmp/tmp3fjp1f7u.d(46): Error: `pure` function `tmp3fjp1f7u.__unittest_L43_C20`
    cannot call impure function `tmp3fjp1f7u.unique`

    /tmp/tmp3fjp1f7u.d(46): Error: `@nogc` function `tmp3fjp1f7u.__unittest_L43_C20`
    cannot call non-@nogc function `tmp3fjp1f7u.unique`

    /tmp/tmp3fjp1f7u.d(46): Error: `@nogc` function `tmp3fjp1f7u.__unittest_L43_C20`
    cannot call non-@nogc function `std.conv.to!string.to!(long[]).to`

    /tmp/tmp3fjp1f7u.d(46): Error: array literal in `@nogc` function `tmp3fjp1f7u.__unittest_L43_C20`
    may cause a GC allocation

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3fjp1f7u.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164350
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    int idx = 0;\n    for (int i = 0; i < l.length; i++)\
    \ \n    {\n        if (idx == 0 || ret[idx - 1] != l[i]) \n        {\n       \
    \     ret[idx] = l[i];\n            idx++;\n        }\n    }\n    return ret[0..idx];\n\
    }\n/*\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpndn3xjl9.d(23): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpndn3xjl9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tl.sort();\n\t\
    long[] res = l[0..1];\n\tfor (size_t i = 1; i < l.length; i++) \n\t{\n\t\tif (l[i]\
    \ != l[i-1]) \n\t\t{\n\t\t\tres ~= l[i];\n\t\t}\n\t}\n\treturn res;\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp98e70tvj.d(11): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp98e70tvj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] r =\
    \ [];\n    foreach(e; l)\n    {\n        if (e in r)\n            continue;\n\
    \        r ~= e;\n    }\n    r.sort;\n    return r;\n}\n/*\nReturn sorted unique\
    \ elements in an array\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0,\
    \ 2, 3, 5, 9, 123]\n*/\nlong[] unique(int[] l) \n{\n    long[] r = [];\n    foreach(e;\
    \ l)\n    {\n        if (e in r)\n            continue;\n        r ~= e;\n   \
    \ }\n    r.sort;\n    return r;\n}\n/*\nReturn sorted unique elements in an array\n\
    \    >>> unique([5.0, 3.0, 5.0, 2.0, 3.0, 3.0, 9.0, 0.0, 123.0])\n    [0.0, 2.0,\
    \ 3.0, 5.0, 9.0, 123.0]\n*/\ndouble[] unique(double[] l) \n{\n    double[] r =\
    \ [];\n    foreach(e; l)\n    {\n        if (e in r)\n            continue;\n\
    \        r ~= e;\n    }\n    r.sort;\n    return r;\n}\n/*\nReturn sorted unique\
    \ elements in an array\n    >>> unique([\"C\", \"CC\", \"CCC\", \"CC\", \"CC\"\
    ])\n    [\"C\", \"CC\", \"CCC\"]\n*/\nstring[] unique(string[] l) \n{\n    string[]\
    \ r = [];\n    foreach(e; l)\n    {\n        if (e in r)\n            continue;\n\
    \        r ~= e;\n    }\n    r.sort;\n    return r;\n}\n/*\nReturn union of two\
    \ arrays\n    >>> union([1, 2, 3], [2, 3, 4])\n    [1, 2, 3, 4]\n*/\nlong[] union(long[]\
    \ a, long[] b)\n{\n    long[] r = a;\n    foreach(e; b)\n    {\n        if (e\
    \ in r)\n           \nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpilu73b7t.d(77): Error: no identifier for declarator `long[]`

    /tmp/tmpilu73b7t.d(77): Error: { } expected following `union` declaration

    /tmp/tmpilu73b7t.d(77): Error: declaration expected, not `(`

    /tmp/tmpilu73b7t.d(80): Error: declaration expected, not `foreach`

    /tmp/tmpilu73b7t.d(80): Error: no identifier for declarator `b`

    /tmp/tmpilu73b7t.d(80): Error: declaration expected, not `)`

    /tmp/tmpilu73b7t.d(88): Error: declaration expected, not `assert`

    /tmp/tmpilu73b7t.d(89): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpilu73b7t.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    return quicksort(uniq(l));\n\
    }\n \n/*\nReturn sorted unique elements in an array\n    >>> unique([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[]\
    \ unique(long[] l) \n{\n    return quicksort(uniq(l));\n}\n \n/*\nReturn sorted\
    \ unique elements in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n\
    {\n    return quicksort(uniq(l));\n}\n \n/*\nReturn sorted unique elements in\
    \ an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L,\
    \ 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    return quicksort(uniq(l));\n\
    }\n \n/*\nReturn sorted unique elements in an array\n    >>> unique([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[]\
    \ unique(long[] l) \n{\n    return quicksort(uniq(l));\n}\n \n/*\nReturn sorted\
    \ unique elements in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n\
    {\n    return quicksort(uniq(l));\n}\n \n/*\nReturn sorted unique elements in\
    \ an array\n    >>> unique([5L, 3\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmplrf74j2b.d(69): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplrf74j2b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    if (l.length\
    \ == 0) return l;\n    l = sort(l);\n    long[] tmparr = [l[0]];\n    foreach\
    \ (idx, val; l)\n    {\n        if (idx != 0)\n        {\n            if (val\
    \ != l[idx-1])\n            {\n                tmparr ~= val;\n            }\n\
    \        }\n    }\n    return tmparr;\n}\n/*\nReturn sorted unique elements in\
    \ an array\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9,\
    \ 123]\n*/\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpm_jah2c3.d(12): Error: undefined identifier `sort`, did you mean
    function `sqrt`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm_jah2c3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    auto  res\
    \ = new long[0L];\n    for (auto i = 0L; i < l.length; i++) \n    {\n        if\
    \ (i != 0L && l[i] == l[i - 1L])\n        {\n            continue;\n        }\n\
    \        res ~= l[i];\n    }\n    return res;\n}\n// unique([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L])\n// [0L, 2L, 3L, 5L, 9L, 123L]\nauto set_union(auto a, auto\
    \ b) \n{\n    auto concat = a ~ b;\n    return unique(concat);\n}\n/*\nFind the\
    \ intersection of unique elements of two arrays\n    >>> set_intersection([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L], [1L, 3L, 3L, 3L, 1L, 5L, 2L, 1L, 0L])\n \
    \   [2L, 3L, 5L, 0L]\n*/\nauto set_intersection(auto a, auto b) \n{\n    a = unique(a);\n\
    \    b = unique(b);\n    auto res = new long[0L];\n    for (auto i = 0L; i < a.length;\
    \ i++) \n    {\n        for (auto j = 0L; j < b.length; j++) \n        {\n   \
    \         if (a[i] == b[j])\n            {\n                res ~= a[i];\n   \
    \         }\n        }\n    }\n    return res;\n}\n// set_intersection([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L], [1L, 3L, 3L, 3L, 1L, 5L, 2L, 1L, 0L])\n// [2L,\
    \ 3L, 5L, 0L]\n/*\nFind the difference of two arrays\n    >>> set_difference([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpn6h_1_l7.d(53): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn6h_1_l7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\treturn std.algorithm.uniq(l);\n\
    }\n/*\nReturn the rotation of the input list\n    >>> rotations([1, 2, 3, 4, 5,\
    \ 6])\n    [[1, 2, 3, 4, 5, 6], [2, 3, 4, 5, 6, 1], [3, 4, 5, 6, 1, 2], [4, 5,\
    \ 6, 1, 2, 3], [5, 6, 1, 2, 3, 4], [6, 1, 2, 3, 4, 5]]\n*/\nlong[][] rotations(long[]\
    \ l) \n{\n\tlong[][] rots = new long[l.length][];\n\tfor (size_t i = 0; i < l.length;\
    \ i++)\n\t{\n\t\trotate(l);\n\t\trots[i] = l.dup;\n\t}\n\treturn rots;\n}\n/*\n\
    Rotate the elements of an array in-place by one element.\n    >>> l = [1, 2, 3,\
    \ 4, 5, 6]\n    >>> rotate(l)\n    >>> l\n    [2, 3, 4, 5, 6, 1]\n*/\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpv23yeflz.d(11): Error: undefined identifier `algorithm` in package
    `std`

    /tmp/tmpv23yeflz.d(20): Error: variable `l` cannot be read at compile time

    /tmp/tmpv23yeflz.d(23): Error: undefined identifier `rotate`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv23yeflz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    return sort(keys(amap(x\
    \ => true, l)));\n}\n/*\nReturn sorted unique elements in an array\n    >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \n*/\nunittest\n{\n\
    \    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmptw95w_mc.d(11): Error: undefined identifier `sort`, did you mean
    function `sqrt`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptw95w_mc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n    out (result)\
    \ for (int i = 0; i < result.length; i++) \n        result[i] <= result[i+1];\n\
    {\n    // hash of unique elements in the array\n    HashMap!(long, int) hash =\
    \ new HashMap!(long, int)();\n    int counter = 0;\n    foreach (elem; l) {\n\
    \        hash[elem] = counter++;\n    }\n    return hash.keys;\n}\n/*\nReturn\
    \ sorted unique elements in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[]\
    \ l) {\n    // hash of unique elements in the array\n    HashMap!(long, int) hash\
    \ = new HashMap!(long, int)();\n    int counter = 0;\n    foreach (elem; l) {\n\
    \        hash[elem] = counter++;\n    }\n    return hash.keys;\n}\n \n/*\nReturn\
    \ sorted unique elements in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[]\
    \ l) \n    out (result) for (int i = 0; i < result.length; i++) \n        result[i]\
    \ <= result[i+1];\n{\n    // hash of unique elements in the array\n    HashMap!(long,\
    \ int) hash = new HashMap!(long, int)();\n    int counter = 0;\n    foreach (elem;\
    \ l) {\n        hash[elem] = counter++;\n    }\n    return hash.keys;\n}\n \n\
    // unittest {\n//     long[] test = [5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L];\n\
    //     long[] result = unique(test);\n//     assert(result.length == 6);\n\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp85k7wwep.d(10): Error: statement expected to be `{ }`, not `for`

    /tmp/tmp85k7wwep.d(12): Error: missing `do { ... }` after `in` or `out`

    /tmp/tmp85k7wwep.d(44): Error: statement expected to be `{ }`, not `for`

    /tmp/tmp85k7wwep.d(46): Error: missing `do { ... }` after `in` or `out`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp85k7wwep.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n  if (l.length\
    \ == 0) return l;\n  ulong[] counts = new ulong[l.length];\n  const lsize = l.length;\n\
    \  const counts_size = counts.length;\n  foreach (immutable c; 0 .. counts_size)\
    \ {\n    if (c == 0) {\n      counts[c] = 1;\n    } else {\n      if (l[c] ==\
    \ l[c - 1]) {\n        counts[c] = counts[c - 1] + 1;\n      } else {\n      \
    \  counts[c] = 1;\n      }\n    }\n  }\n  long[] unique;\n  immutable c = 0;\n\
    \  for (immutable i = 0; i < lsize; i += 1) {\n    if (i == 0) {\n      unique\
    \ ~= l[i];\n    } else {\n      if (l[i] != l[i - 1]) {\n        unique ~= l[i];\n\
    \      }\n    }\n  }\n  return unique;\n}\nunittest\n{\n    alias candidate =\
    \ unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L,\
    \ 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpglf28nyp.d(28): Error: cannot modify `immutable` expression `0`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpglf28nyp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n    if (l.length\
    \ == 0) return l;\n    else {\n        long[] ret = new long[l.length];\n    \
    \    ret[0] = l[0];\n        size_t n = 1;\n        for (size_t i = 1; i < l.length;\
    \ i++) \n            if (l[i] != l[i-1]) \n                ret[n++] = l[i];\n\
    \        ret.length = n;\n        return ret;\n    }\n    \n/*\nReturn the product\
    \ of all elements in an array\n    >>> product([1L, 2L, 3L, 4L])\n    24L\n*/\n\
    long product(long[] l) {\n    long ret = 1L;\n    foreach (item; l) \n       \
    \ ret *= item;\n    return ret;\n}\n/*\nReturn the maximum element in an array\n\
    \    >>> max([1L, 2L, 3L, 4L])\n    4L\n*/\nlong max(long[] l) {\n    long ret\
    \ = l[0];\n    foreach (item; l) \n        ret = max(ret, item);\n    return ret;\n\
    }\n/*\nReturn the minimum element in an array\n    >>> min([1L, 2L, 3L, 4L])\n\
    \    1L\n*/\nlong min(long[] l) {\n    long ret = l[0];\n    foreach (item; l)\
    \ \n        ret = min(ret, item);\n    return ret;\n}\n/*\nReturn the sum of all\
    \ elements in an array\n    >>> sum([1L, 2L, 3L, 4L])\n    10L\n*/\nlong sum(long[]\
    \ l) {\n    long ret = 0L;\n    foreach (item; l) \n        ret += item;\n   \
    \ return ret;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfqpod85y.d(10): Error: cannot use function constraints for non-template
    functions. Use `static if` instead

    /tmp/tmpfqpod85y.d(10): Error: declaration expected, not `if`

    /tmp/tmpfqpod85y.d(11): Error: declaration expected, not `else`

    /tmp/tmpfqpod85y.d(13): Error: no identifier for declarator `ret[0]`

    /tmp/tmpfqpod85y.d(13): Error: declaration expected, not `=`

    /tmp/tmpfqpod85y.d(15): Error: declaration expected, not `for`

    /tmp/tmpfqpod85y.d(15): Error: no identifier for declarator `i`

    /tmp/tmpfqpod85y.d(15): Error: declaration expected, not `<`

    /tmp/tmpfqpod85y.d(15): Error: no identifier for declarator `i`

    /tmp/tmpfqpod85y.d(15): Error: declaration expected, not `++`

    /tmp/tmpfqpod85y.d(18): Error: no identifier for declarator `ret.length`

    /tmp/tmpfqpod85y.d(18): Error: declaration expected, not `=`

    /tmp/tmpfqpod85y.d(19): Error: declaration expected, not `return`

    /tmp/tmpfqpod85y.d(20): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfqpod85y.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    size_t length\
    \ = l.length;\n    long[] output = [];\n    foreach(key, val; l)\n    {\n    \
    \    size_t x = 0;\n        foreach(k, v; output)\n        {\n            if(v\
    \ == val)\n            {\n                x++;\n            }\n        }\n   \
    \     if(x == 0)\n        {\n            output ~= val;\n        }\n    }\n  \
    \  output.sort;\n    return output;\n}\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe9owwuw9.d(28): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe9owwuw9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] l2\
    \ = l.dup;\n    l2.sort;\n    long[] output;\n    foreach(e; l2.unique)\n    {\n\
    \        output ~= e;\n    }\n    return output;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2sslw1i3.d(12): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2sslw1i3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret;\n\
    \    ret.put(ret.length++, l[0]);\n    foreach(idx, elem; l)\n    {\n        long\
    \ res = binarySearch(ret, elem);\n        if(res < 0)\n        {\n           \
    \ ret.put(ret.length++, elem);\n        }\n    }\n    ret.sort();\n    return\
    \ ret;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpy3o12u4f.d(12): Error: no property `put` for type `long[]`

    /tmp/tmpy3o12u4f.d(15): Error: undefined identifier `binarySearch`

    /tmp/tmpy3o12u4f.d(18): Error: no property `put` for type `long[]`

    /tmp/tmpy3o12u4f.d(21): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy3o12u4f.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n     long[] lu\
    \ = std.algorithm.set(l).array;\n     lu.sort();\n     return lu;\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpc7_wricj.d(11): Error: undefined identifier `algorithm` in package
    `std`

    /tmp/tmpc7_wricj.d(12): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc7_wricj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    int[] p =\
    \ sort(l);\n    //printf(\"%s\\n\",p);\n    int num_p = p.length;\n    int num_n\
    \ = 0;\n    for (int i = 0; i < num_p; i++){\n        if (i == 0){\n         \
    \   num_n = num_n + 1;\n        }\n        else if (p[i] != p[i-1]){\n       \
    \     num_n = num_n + 1;\n        }\n    }\n    //printf(\"num_n = %s\\n\",num_n);\n\
    \    long[] n = new long[num_n];\n    //printf(\"num_n = %s\\n\",n);\n    n[0]\
    \ = p[0];\n    int j = 1;\n    for (int i = 1; i < num_p; i++){\n        if (p[i]\
    \ != p[i-1]){\n            n[j] = p[i];\n            j = j + 1;\n        }\n \
    \   }\n    return n;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpc0o94x_q.d(11): Error: undefined identifier `sort`, did you mean
    function `sqrt`?

    /tmp/tmpc0o94x_q.d(13): Error: cannot implicitly convert expression `p.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc0o94x_q.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[string]\
    \ present;\n    foreach(l2; l)\n        present[l2] = 1;\n    return present.keys.sort;\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqzxaki7k.d(13): Error: cannot implicitly convert expression `l2`
    of type `long` to `string`

    /tmp/tmpqzxaki7k.d(14): Error: no property `sort` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqzxaki7k.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    alias long[]\
    \ ar = l; \n    auto ar_result = ar.array;\n    auto ar_end = ar.array + ar.length;\n\
    \    auto result = ar_result;\n    foreach(ar_element; ar)\n    {\n        if\
    \ (ar_result == ar_end) \n        {\n            return ar_result.array;\n   \
    \     }\n        if (ar_element != ar_result[0]) \n        {\n            ar_result[1]\
    \ = ar_element;\n            ar_result++;\n        }\n    }\n    return ar_result.array;\n\
    }\nunittest\n{\n    assert (unique([]) == []);\n    assert (unique([1L, 2L, 3L,\
    \ 4L, 5L]) == [1L, 2L, 3L, 4L, 5L]);\n    assert (unique([1L, 1L, 2L, 3L, 4L,\
    \ 5L]) == [1L, 2L, 3L, 4L, 5L]);\n    assert (unique([1L, 2L, 2L, 3L, 4L, 5L])\
    \ == [1L, 2L, 3L, 4L, 5L]);\n    assert (unique([1L, 2L, 3L, 3L, 4L, 5L]) == [1L,\
    \ 2L, 3L, 4L, 5L]);\n    assert (unique([1L, 2L, 3L, 4L, 4L, 5L]) == [1L, 2L,\
    \ 3L, 4L, 5L]);\n    assert (unique([1L, 2L, 3L, 4L, 5L, 5L]) == [1L, 2L, 3L,\
    \ 4L, 5L]);\n    assert (unique([1L, 1L, 2L, 2L, 3L, 3L, 4L, 4L, 5L, 5L]) == [1L,\
    \ 2L, 3L, 4L, 5L]);\n    assert (unique([1L, 2L, 3L, 4L, 5L, 1L, 2L, 3L, 4L, 5L])\
    \ == [1L, 2L, 3L, 4L, 5L]);\n    assert (\nunittest\n{\n    alias candidate =\
    \ unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L,\
    \ 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpli1hhraw.d(11): Error: alias cannot have initializer

    /tmp/tmpli1hhraw.d(41): Error: expression expected, not `unittest`

    /tmp/tmpli1hhraw.d(42): Error: found `{` when expecting `)`

    /tmp/tmpli1hhraw.d(43): Error: found `alias` when expecting `;` following statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpli1hhraw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    return l.uniq;\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpcuiwonle.d(11): Error: no property `uniq` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcuiwonle.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    size_t n =\
    \ l.length;\n    long[] res = new long[n];\n    long[] ind = new long[n];\n  \
    \  size_t[] idx = new size_t[n];\n    size_t j=0;\n    size_t ai=0;\n    for (size_t\
    \ i=0; i<n; i++)\n    {\n        if (i==0 || l[i]!=l[i-1])\n        {\n      \
    \      res[j] = l[i];\n            ind[j] = ai;\n            idx[j] = i;\n   \
    \         j++;\n        }\n        ai++;\n    }\n    return res[0..j];\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmphznv8y43.d(34): unittest failure

    ----------------

    ??:? _d_unittestp [0x4285ad]

    ??:? void tmphznv8y43.__unittest_L30_C1() [0x428280]

    ??:? void tmphznv8y43.__modtest() [0x428330]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c7f7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b68a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430915]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430dc4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4308a1]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b661]

    ??:? runModuleUnitTests [0x42c5cd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428a70]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    return sort(set(l));\n\
    }\n/*\nReturn sorted unique elements in an array\n    >>> unique([5UL, 3UL, 5UL,\
    \ 2UL, 3UL, 3UL, 9UL, 0UL, 123UL])\n    [0UL, 2UL, 3UL, 5UL, 9UL, 123UL]\n   \
    \ \n*/\nulong[] unique(ulong[] l) \n{\n    return sort(set(l));\n}\n/*\nReturn\
    \ sorted unique elements in an array\n    >>> unique([5.5, 3.5, 5.5, 2.5, 3.5,\
    \ 3.5, 9.5, 0.5, 123.5])\n    [0.5, 2.5, 3.5, 5.5, 9.5, 123.5]\n    \n*/\ndouble[]\
    \ unique(double[] l) \n{\n    return sort(set(l));\n}\n/*\nReturn sorted unique\
    \ elements in an array\n    >>> unique([5f, 3f, 5f, 2f, 3f, 3f, 9f, 0f, 123f])\n\
    \    [0f, 2f, 3f, 5f, 9f, 123f]\n    \n*/\nfloat[] unique(float[] l) \n{\n   \
    \ return sort(set(l));\n}\n/*\nReturn sorted unique elements in an array\n   \
    \ >>> unique([\"aaa\", \"bbb\", \"aaa\", \"aaa\", \"ccc\", \"bbb\", \"ccc\", \"\
    ddd\"])\n    [\"aaa\", \"bbb\", \"ccc\", \"ddd\"]\n    \n*/\nstring[] unique(string[]\
    \ l) \n{\n    return sort(set(l));\n}\n/*\nunittest\n{\n    alias candidate =\
    \ unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L,\
    \ 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjhk3ioub.d(53): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjhk3ioub.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    auto r = sort(l);\n\
    \    return r[0..1] ~= r[1..$];\n}\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp59mxs9_d.d(11): Error: undefined identifier `sort`, did you mean
    function `sqrt`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp59mxs9_d.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tl = sort(l);\n\
    \tlong[] u = new long[0];\n\tforeach(long i; l)\n\t{\n\t\tif(count(l, i) == 1)\n\
    \t\t{\n\t\t\tu ~= i;\n\t\t}\n\t}\n\treturn u;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpr48skx3r.d(11): Error: undefined identifier `sort`, did you mean
    function `sqrt`?

    /tmp/tmpr48skx3r.d(15): Error: undefined identifier `count`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr48skx3r.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tuint i;\n\t\
    int j;\n\tlong[] tmp = new long[l.length];\n\tuint a = 0;\n\tforeach(i,k; l) \n\
    \t{\n\t\tif(i == 0)\n\t\t{\n\t\t\ttmp[a] = k;\n\t\t\ta++;\n\t\t}\n\t\telse\n\t\
    \t{\n\t\t\tforeach(j,v; tmp)\n\t\t\t{\n\t\t\t\tif(v == k) break;\n\t\t\t\tif(j\
    \ == (tmp.length - 1)) \n\t\t\t\t{\n\t\t\t\t\ttmp[a] = k;\n\t\t\t\t\ta++;\n\t\t\
    \t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn tmp[0..a];\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjy7tx3_p.d(15): Error: variable `i` is shadowing variable `tmpjy7tx3_p.unique.i`

    /tmp/tmpjy7tx3_p.d(24): Error: variable `j` is shadowing variable `tmpjy7tx3_p.unique.j`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjy7tx3_p.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    if(l.length\
    \ == 0)\n        return l;\n    immutable Type t = typeof(l[0]);\n    auto r =\
    \ initSortedArray!(Type)();\n    long[] res = cast(long[])r;\n    res.length =\
    \ 1;\n    res[0] = l[0];\n    int k = 1;\n    for(int i = 1; i < l.length; i++)\n\
    \    {\n        if(l[i] != res[k-1])\n        {\n            res.length = k+1;\n\
    \            res[k] = l[i];\n            k++;\n        }\n    }\n    return res;\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyql2jjok.d(13): Error: undefined identifier `Type`

    /tmp/tmpyql2jjok.d(13): Error: type `long` has no value

    /tmp/tmpyql2jjok.d(14): Error: template instance `initSortedArray!Type` template
    `initSortedArray` is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyql2jjok.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tlong[] res =\
    \ [];\n\tforeach(a;l)\n\t{\n\t\tif(a in res) continue;\n\t\tres ~= a;\n\t}\n\t\
    res.sort;\n\treturn res;\n}\nunittest\n{\n    alias candidate = unique;\n\n  \
    \  assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L,\
    \ 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpl6qjqe49.d(14): Error: incompatible types for `(a) in (res)`: `long`
    and `long[]`

    /tmp/tmpl6qjqe49.d(17): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl6qjqe49.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    int[] counts\
    \ = new int[max(l) + 1];\n    for (int i = 0; i < l.length; i++)\n        counts[l[i]]++;\n\
    \    \n    int[] p = array(0L, length=0);\n    foreach (i; array(0L, length=0))\n\
    \        if (counts[i] > 0)\n            p ~= i;\n    \n    return p;\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpah_japbn.d(11): Error: undefined identifier `max`, did you mean
    function `fmax`?

    /tmp/tmpah_japbn.d(15): Error: undefined identifier `array`

    /tmp/tmpah_japbn.d(16): Error: undefined identifier `array`

    /tmp/tmpah_japbn.d(20): Error: cannot implicitly convert expression `p` of type
    `int[]` to `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpah_japbn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    return std.algorithm.set(l).array;\n\
    }\n/*\nReturn sorted unique elements in an array\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \n*/\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx2ei_qkj.d(11): Error: undefined identifier `algorithm` in package
    `std`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx2ei_qkj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] s;\n\
    \    foreach(x; l)\n    {\n        auto t = binarySearch(s, x);\n        if(t\
    \ == 0)\n        {\n            s ~= x;\n        }\n    }\n    std.algorithm.sort(s);\n\
    \    return s;\n}\n \n/*\nReturn sorted unique elements in an array\n    >>> unique([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\n\
    long[] unique(string[] l) \n{\n    long[] s;\n    foreach(x; l)\n    {\n     \
    \   auto t = binarySearch(s, x);\n        if(t == 0)\n        {\n            s\
    \ ~= x;\n        }\n    }\n    std.algorithm.sort(s);\n    return s;\n}\n \n/*\n\
    Return cumulative sum of elements in an array\n    >>> cumsum([3L, 7L, 6L, 5L,\
    \ 2L, 8L, 4L, 7L, 5L, 1L])\n    [3L, 10L, 16L, 21L, 23L, 31L, 35L, 42L, 47L, 48L]\n\
    */\nlong[] cumsum(long[] l) \n{\n    long[] s;\n    long v = 0;\n    foreach(x;\
    \ l)\n    {\n        v += x;\n        s ~= v;\n    }\n    return s;\n}\n \n/*\n\
    Return the input array with all elements multiplied by factor\n    >>> multiply([3L,\
    \ 7L, 6L, 5L, 2L, 8L, 4L, 7L, 5L, 1L], 10L)\n    [30L, 70L, 60L, 50L, 20L, 80L,\
    \ 40L, 70L, 50L, 10L]\n*/\nlong[] multiply(long[] l, long factor) \n{\n    long[]\
    \ s;\n    foreach(x; l)\n    {\n        s ~= x * factor;\n    }\n    return s;\n\
    unittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpybyr2ez3.d(75): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpybyr2ez3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    if (l.length\
    \ == 0) return l;\n    l.sort;\n    long[] result = [l[0]];\n    foreach (idx,\
    \ elem; l) {\n        if (elem != result[$-1]) {\n            result ~= elem;\n\
    \        }\n    }\n    return result;\n}\n/*\nReturn sorted unique elements in\
    \ an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L,\
    \ 3L, 5L, 9L, 123L]\n    \n*/\n/*\nReturn sorted unique elements in an array\n\
    \    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L,\
    \ 9L, 123L]\n    \n*/\n/*\nReturn sorted unique elements in an array\n    >>>\
    \ unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n\
    \    \n*/\n/*\nReturn sorted unique elements in an array\n    >>> unique([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\n\
    long[] unique(long[] l) \n{\n    if (l.length == 0) return l;\n    l.sort;\n \
    \   long[] result = [l[0]];\n    foreach (idx, elem; l) {\n        if (elem !=\
    \ result[$-1]) {\n            result ~= elem;\n        }\n    }\n    return result;\n\
    }\n/*\nReturn sorted unique elements in an array\n    >>> unique([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[]\n\
    unittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxfrqd2aj.d(64): Error: no identifier for declarator `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxfrqd2aj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] h =\
    \ new long[l.length];\n    long[] b = new long[l.length];\n    long[] temp = new\
    \ long[l.length];\n    int h_index = 0;\n    int b_index = 0;\n    for (int i\
    \ = 0; i < l.length; i++)\n    {\n        if (h_index == 0)\n        {\n     \
    \       h[h_index] = l[i];\n            h_index += 1;\n        }\n        else\n\
    \        {\n            for (int j = 0; j < h_index; j++)\n            {\n   \
    \             if (l[i] == h[j])\n                {\n                    b[b_index]\
    \ = l[i];\n                    b_index += 1;\n                    break;\n   \
    \             }\n                else if (j == h_index - 1)\n                {\n\
    \                    h[h_index] = l[i];\n                    h_index += 1;\n \
    \               }\n            }\n        }\n    }\n    sort(h);\n    int temp_index\
    \ = 0;\n    for (int k = 0; k < l.length; k++)\n    {\n        if (k < h_index)\n\
    \        {\n            temp[temp_index] = h[k];\n            temp_index += 1;\n\
    \        }\n        else\n        {\n            break;\n        }\n    }\n  \
    \  return temp;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvzpf4qkd.d(41): Error: undefined identifier `sort`, did you mean
    function `sqrt`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvzpf4qkd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    int last_count\
    \ = 0;\n    int l_len = l.length;\n    long[] ret;\n    foreach(i;0..l_len) \n\
    \    {\n        foreach(j;0..l_len) \n        {\n            if(i == j) \n   \
    \         {\n                continue;\n            }\n            if(l[i] ==\
    \ l[j]) \n            {\n                last_count++;\n            }\n      \
    \  }\n    }\n    //writeln(last_count);\n    ret = new long[l_len - last_count];\n\
    \    foreach(i;0..l_len) \n    {\n        if(i == 0) \n        {\n           \
    \ ret[0] = l[0];\n            continue;\n        }\n        foreach(j;0..ret.length)\
    \ \n        {\n            if(l[i] == ret[j]) \n            {\n              \
    \  break;\n            }\n            if(j == ret.length - 1) \n            {\n\
    \                ret[j + 1] = l[i];\n            }\n        }\n    }\n    return\
    \ ret;\n}\n/*\nReturn sorted unique elements in an array\n    >>> unique([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\n\
    long[] unique(long[] l) \n{\n    int last_count = 0;\n    int l_len = l.length;\n\
    \    long[] ret;\n    foreach(i;0..l_len) \n    {\n        foreach(j;0..l_len)\
    \ \n        {\n            if(i == j) \n            {\n                continue;\n\
    \            }\n            if(l[i] == l[j]) \n            {\n               \
    \ last_count++;\n            }\n        }\n    }\n    //writeln(last_count);\n\
    \    ret = new long[l_len - last_count];\n    foreach(i;0..l_len) \n    {\n  \
    \      if(i == 0) \nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpm77ocl2b.d(81): Error: found `unittest` instead of statement

    /tmp/tmpm77ocl2b.d(87): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm77ocl2b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long max =\
    \ max(l);\n    long[] count = new long[max+1];\n    foreach(i; l) count[i]++;\n\
    \    return array(filter!(x => x[1] != 0L)(zip(count,iota(max+1))));\n}\nunittest\n\
    {\n    writeln(unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]));\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqv13xd9m.d(11): Error: undefined identifier `max`, did you mean
    function `fmax`?

    /tmp/tmpqv13xd9m.d(14): Error: undefined identifier `array`

    /tmp/tmpqv13xd9m.d(18): Error: `writeln` is not defined, perhaps `import std.stdio;`
    is needed?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqv13xd9m.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new\
    \ long[];\n\tfor (long n; l.popFront(n))\n\t{\n\t\tif (u.indexOf(n) == -1)\n\t\
    \t\tu ~= n;\n\t}\n\tu.sort();\n\treturn u;\n}\nlong[] unique(long[] l)\n{\n\t\
    l.sort();\n\treturn l.dup.retain(n => l.indexOf(n) == l.indexOfBack(n));\n}\n\
    unittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpcail5tl8.d(12): Error: found `)` when expecting `;` following `for`
    condition

    /tmp/tmpcail5tl8.d(17): Error: found `u` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcail5tl8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result;\n\
    \    foreach(n; l)\n    {\n\tauto d = n in result;\n\tif(!d)\n\t{\n\t    result\
    \ ~= n;\n\t}\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L,\
    \ 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk6xkkfuz.d(14): Error: incompatible types for `(n) in (result)`:
    `long` and `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk6xkkfuz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    import std.algorithm.comparison\
    \ : equal;\n    long[] ret;\n    foreach( x;l)\n    {\n       if(!ret.equal!(a\
    \ => a == x) (x))\n           ret ~= x;\n    }\n    ret.sort;\n    return ret;\n\
    }\n \n \n \n \n/*\n    Return sorted unique elements in an array\n    >>> unique([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n*/\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9z0zyzir.d(15): Error: template `tmp9z0zyzir.unique.equal!((a)
    => a == x).equal` cannot deduce function from argument types `!()(long[], long)`,
    candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/algorithm/comparison.d(921):        `tmp9z0zyzir.unique.equal!((a)
    => a == x).equal(Range1, Range2)(Range1 r1, Range2 r2) if (isInputRange!Range1
    && isInputRange!Range2 && is(typeof(binaryFun!pred(r1.front, r2.front))))`

    /tmp/tmp9z0zyzir.d(18): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9z0zyzir.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] uniq\
    \ = new long[0L];\n    foreach (i; l)\n    {\n        if (i in uniq)\n       \
    \ {\n            continue;\n        }\n        uniq ~= i;\n    }\n    uniq.sort();\n\
    \    return uniq;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk1oq00k7.d(14): Error: incompatible types for `(i) in (uniq)`:
    `long` and `long[]`

    /tmp/tmpk1oq00k7.d(20): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk1oq00k7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long n = l.length;\n\
    \    long[] ret = new long[];\n    if (n == 0) \n    {\n        return ret;\n\
    \    }\n    std.algorithm.sort(l);\n    ret ~= l[0];\n    for (long i = 1; i <\
    \ n; i++) \n    {\n        if (l[i] != l[i - 1]) \n        {\n            ret\
    \ ~= l[i];\n        }\n    }\n    return ret;\n}\n/*\nRound a float to number\
    \ of decimals.\n    >>> round_float(1.234, 1)\n    1.2\n    \n*/\ndouble round_float(double\
    \ x, long decimals) \n{\n    return floor(x * pow(10.0, decimals) + 0.5) / pow(10.0,\
    \ decimals);\n}\n/*\nReturns the mean value of an array of numbers.\n    >>> mean([1.0,\
    \ 2.0, 3.0])\n    2.0\n    >>> mean([1.0, 2.0, 3.0, 4.0])\n    2.5\n*/\ndouble\
    \ mean(double[] l) \n{\n    double sum = 0.0;\n    for (double x = 0; x < l.length;\
    \ x++) \n    {\n        sum += l[x];\n    }\n    return sum / l.length;\n}\n/*\n\
    Returns the median value of an array of numbers.\n    >>> median([1.0, 2.0, 3.0])\n\
    \    2.0\n    >>> median([1.0, 2.0, 3.0, 4.0])\n    2.5\n*/\ndouble median(double[]\
    \ l) \n{\n    double[] r = l[0 .. $].dup;\n    std.algorithm.sort(r);\n    return\
    \ r[cast(long)(l.length / 2)];\n}\n/*\nReturns the median value of an array of\
    \ numbers.\n    >>> mode([1, 2, 3, 3, 3, 5])\n    3\n*/\nlong mode(long[] l) \n\
    {\n    long n = l.length;\n    if (n\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp06_o3zex.d(76): Error: found `unittest` when expecting `)`

    /tmp/tmp06_o3zex.d(82): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp06_o3zex.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tlong[][] temp\
    \ = sort(l);\n\tlong[] output = new long[temp.length];\n\tforeach(i, v; temp)\n\
    \t\toutput[i] = v[0];\n\treturn output;\n}\nunittest\n{\n    alias candidate =\
    \ unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L,\
    \ 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpv114ljzt.d(11): Error: undefined identifier `sort`, did you mean
    function `sqrt`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv114ljzt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164349

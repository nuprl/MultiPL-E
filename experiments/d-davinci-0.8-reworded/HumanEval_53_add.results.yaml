language: d
name: HumanEval_53_add
results:
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n\treturn x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    //return (x + y);\n    //return (12L);\n    return (x +\
    \ y);\n}\n/*\nMultiply two numbers x and y\n    >>> mul(2L, 3L)\n    6L\n    >>>\
    \ mul(5L, 7L)\n    35L\n*/\nlong mul(long x, long y) \n{\n    return (x * y);\n\
    }\n/*\nFind the average of an array of numbers\n    >>> avg([1L, 2L, 3L])\n  \
    \  2L\n    >>> avg([8L, 9L, 10L])\n    9L\n*/\nlong avg(long[] v) \n{\n    long\
    \ s = 0L;\n    foreach (x; v)\n    {\n        s += x;\n    }\n    return (s /\
    \ v.length);\n}\n/*\nFind the factorial of a number x\n    >>> fact(4L)\n    24L\n\
    \    >>> fact(8L)\n    40320L\n*/\nlong fact(long x) \n{\n    if (x <= 1L) \n\
    \    {\n        return (1L);\n    }\n    return (x * fact(x - 1L));\n}\n/*\nDetermine\
    \ if a given number x is a prime\n    >>> isPrime(2L)\n    true\n    >>> isPrime(3L)\n\
    \    true\n    >>> isPrime(4L)\n    false\n*/\nunittest\n{\n    alias candidate\
    \ = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L)\
    \ == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L)\
    \ == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(4L, 5L)\n    20L\n    >>> multiply(5L, 7L)\n    35L\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpizp6sqna.d(15): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpizp6sqna.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163936
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    long result = 0L;\n    result = x + y;\n    return result;\n\
    }\n/*\nCreate a range of numbers.\n */\nlong[] range(long stop) \n{\n    long[]\
    \ result = new long[(int) stop];\n    long i = 0L;\n    while (i < stop) \n  \
    \  {\n        result[(int) i] = i;\n        i = i + 1L;\n    }\n    return result;\n\
    }\n/*\nCreate a range of numbers.\n*/\nlong[] range(long start, long stop) \n\
    {\n    long[] result = new long[(int) (stop - start)];\n    long i = 0L;\n   \
    \ while (i < stop - start) \n    {\n        result[(int) i] = start + i;\n   \
    \     i = i + 1L;\n    }\n    return result;\n}\n/*\nReturn the sum of the numbers\
    \ in the array\n    >>> sum(new long[]{2L, 3L, 4L})\n    9L\n    >>> sum(new long[]{1L,\
    \ 1L, 1L})\n    3L\n*/\nlong sum(long[] arr) \n{\n    long result = 0L;\n    long\
    \ i = 0L;\n    while (i < arr.length) \n    {\n        result = result + arr[(int)\
    \ i];\n        i = i + 1L;\n    }\n    return result;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> mul(2L, 3L)\n    6L\n    >>> mul(5L, 7L)\n    35L\n*/\nlong\
    \ mul(long x, long y) \n{\n    long result = 0L;\n    result = x * y;\n    return\
    \ result;\n}\n/*\nfactorial\n*/\nlong factorial(long n) \n{\n    long result =\
    \ 0L;\n    if (n == 0L) \n    {\n        result = 1L;\n    }\n    else \n    {\n\
    \        result = n * factorial(n - 1L);\n    }\n    return result;\n}\n/*\nReturn\
    \ the greatest common divisor of two\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbl54fxdn.d(22): Error: C style cast illegal, use `cast(int)stop`

    /tmp/tmpbl54fxdn.d(26): Error: C style cast illegal, use `cast(int)i`

    /tmp/tmpbl54fxdn.d(36): Error: C style cast illegal, use `cast(int)(stop - start)`

    /tmp/tmpbl54fxdn.d(40): Error: C style cast illegal, use `cast(int)i`

    /tmp/tmpbl54fxdn.d(58): Error: C style cast illegal, use `cast(int)i`

    /tmp/tmpbl54fxdn.d(92): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbl54fxdn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163936
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nAdd three numbers x, y and z\n   \
    \ >>> add(2L, 3L, 1L)\n    6L\n    >>> add(5L, 7L, 8L)\n    20L\n    \n*/\nlong\
    \ add(long x, long y, long z) \n{\n    return x + y + z;\n}\n/*\nAdd two numbers\
    \ x and y\n    >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \n*/\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return (x + y);\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n    \n*/\n\
    long subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(2L, 2L)\n    1L\n    >>> divide(5L, 7L)\n\
    \    0L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Modulus of two numbers x and y\n    >>> modulus(2L, 3L)\n    2L\n    >>> modulus(5L,\
    \ 7L)\n    5L\n    \n*/\nlong modulus(long x, long y) \n{\n    return x % y;\n\
    }\n/*\nPower of two numbers x and y\n    >>> power(2L, 3L)\n    8L\n    >>> power(5L,\
    \ 7L)\n    78125L\n    \n*/\nlong power(long x, long y) \n{\n    return (long)\
    \ pow(x, y);\n}\n/*\nGreatest common divisor of two numbers x and y\n    >>> gcd(2L,\
    \ 3L)\n    1L\n    >>> gcd(20L, 30L)\n    10L\n    \n*/\nlong gcd(long x, long\
    \ y) \n{\n    return (long) gcd(x, y);\n}\n/*\nLeast common multiple of two numbers\
    \ x and y\n    >>> lcm(2L, 3L)\n    6L\n    >>> lcm(5L, 7L)\n    35L\n    \n*/\n\
    long lcm(long x, long y) \n{\n    return (long) lcm(x, y);\n\nunittest\n{\n  \
    \  alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5god1ahn.d(73): Error: C style cast illegal, use `cast(long)pow(x,
    y)`

    /tmp/tmp5god1ahn.d(85): Error: C style cast illegal, use `cast(long)gcd(x, y)`

    /tmp/tmp5god1ahn.d(97): Error: C style cast illegal, use `cast(long)lcm(x, y)`

    /tmp/tmp5god1ahn.d(99): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5god1ahn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163936
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    long r;\n    r = x + y;\n    return r;\n}\nunittest\n{\n\
    \    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> mul(3L, 2L)\n    6L\n    >>> mul(2L, 4L)\n    8L\n*/\nlong mul(long x, long\
    \ y) \n{\n    return x * y;\n}\nunittest\n{\n    alias candidate = add;\n\n  \
    \  assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n  \
    \  assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n \
    \   assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    long sum = 0L;\n    long carryin = 0L;\n    long carryout\
    \ = 0L;\n    for (long i = 0L; i < 64L; i++) {\n        long xi = x & 1L;\n  \
    \      long yi = y & 1L;\n        long s = xi ^ yi ^ carryin;\n        carryout\
    \ = (xi & yi) | (xi & carryin) | (yi & carryin);\n        sum |= s << i;\n   \
    \     carryin = carryout;\n        x >>= 1L;\n        y >>= 1L;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n    \n*/\n\
    long multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nSubtract two numbers\
    \ x and y\n    >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n\
    \    \n*/\nlong subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nCalculate\
    \ the square root of a number x\n    >>> square_root(4L)\n    2L\n    >>> square_root(9L)\n\
    \    3L\n    >>> square_root(2L)\n    1L\n    \n*/\nlong square_root(long x) \n\
    {\n    return (long)sqrt((double)x);\n}\n/*\nCalculate the distance between two\
    \ points (x1, y1) and (x2, y2)\n    >>> point_distance(1L, 1L, 2L, 2L)\n    1L\n\
    \    >>> point_distance(1L, 1L, 3L, 3L)\n    2L\n    >>> point_distance(2L, 2L,\
    \ 3L, 3L)\n    1L\n    \n*/\nlong point_distance(long x1, long y1, long x2, long\
    \ y2) \n{\n    return (long)sqrt(((double)(x1 - x2) * (double)(x1 - x2)) + ((double)(y1\
    \ - y2) * (double)(y1 - y2)));\n}\n/*\nCalculate the area of a circle given its\
    \ radius\n    >>> circle_area(2L)\n    12L\n    >>> circle_area(3L)\n    28L\n\
    \    >>> circle_area(4L)\n    50L\n    \n*/\nlong circle_area(long r) \n{\n  \
    \  return r * r * (long)3.14;\n}\n/*\nCalculate the area of a rectangle given\
    \ its height and width\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdk6b2lw_.d(51): Error: C style cast illegal, use `cast(double)x`

    /tmp/tmpdk6b2lw_.d(51): Error: C style cast illegal, use `cast(long)sqrt(cast(double)x)`

    /tmp/tmpdk6b2lw_.d(65): Error: C style cast illegal, use `cast(double)(x1 - x2)`

    /tmp/tmpdk6b2lw_.d(65): Error: C style cast illegal, use `cast(double)(x1 - x2)`

    /tmp/tmpdk6b2lw_.d(65): Error: C style cast illegal, use `cast(double)(y1 - y2)`

    /tmp/tmpdk6b2lw_.d(65): Error: C style cast illegal, use `cast(double)(y1 - y2)`

    /tmp/tmpdk6b2lw_.d(65): Error: C style cast illegal, use `cast(long)sqrt(cast(double)(x1
    - x2) * cast(double)(x1 - x2) + cast(double)(y1 - y2) * cast(double)(y1 - y2))`

    /tmp/tmpdk6b2lw_.d(79): Error: C style cast illegal, use `cast(long)3.14`

    /tmp/tmpdk6b2lw_.d(81): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdk6b2lw_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163936
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n    {\n    long result = x + y;\n    return result;\n    }\n/*\n\
    Subtract two numbers x and y\n    >>> subtract(10L, 5L)\n    5L\n    >>> subtract(5L,\
    \ 7L)\n    -2L\n    \n*/\nlong subtract(long x, long y) \n    {\n    long result\
    \ = x - y;\n    return result;\n    }\n/*\nMultiply two numbers x and y\n    >>>\
    \ multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n    \n*/\nlong\
    \ multiply(long x, long y) \n    {\n    long result = x * y;\n    return result;\n\
    \    }\n/*\nDivide two numbers x and y\n    >>> divide(10L, 5L)\n    2L\n    >>>\
    \ divide(5L, 7L)\n    0L\n    \n*/\nlong divide(long x, long y) \n    {\n    long\
    \ result = x / y;\n    return result;\n    }\n/*\nCheck if number x is greater\
    \ than y\n    >>> greater_than(10L, 5L)\n    true\n    >>> greater_than(5L, 7L)\n\
    \    false\n    \n*/\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nFind minimum number in the input tuple\n\
    \    >>> minimum((4L, 5L, 6L))\n    4L\n    >>> minimum((5L, 6L, 4L))\n    4L\n\
    \    >>> minimum((5L, 5L, 5L))\n    5L\n*/\nlong minimum(tuple(long, long, long)\
    \ nums) \n{\n    return min(nums[0], min(nums[1], nums[2]));\n}\n/*\nConvert miles\
    \ to kilometers\n    >>> miles_to_kilometers(5L)\n    8L\n    >>> miles_to_kilometers(8L)\n\
    \    12L\n*/\nlong miles_to_kilometers(long miles) \n{\n    return miles * 1.6L;\n\
    }\n/*\nConvert kilometers to miles\n    >>> kilometers_to_miles(8L)\n    5L\n\
    \    >>> kilometers_to_miles(12L)\n    7L\n*/\nlong kilometers_to_miles(long kilometers)\
    \ \n{\n    return kilometers / 1.6L;\n}\n/*\nReturn tuple containg sum, difference,\
    \ product, and quotient of two numbers x and y\n    >>> arithmetic(2L, 3L)\n \
    \   (5L, -1L, 6L, 0L)\n    >>> arithmetic(5L, 3L)\n    (8L, 2L, 15L, 1L)\n*/\n\
    tuple(long, long, long, long) arithmetic(long x, long y) \n{\n    return tuple(add(x,\
    \ y), x - y, x * y, x / y);\n}\n/*\nReturn tuple of numbers raised to the nth\
    \ power\n    >>> powers(3L, (3L, 4L, 5L))\n    (27L, 64L, 125L)\n    >>> powers(2L,\
    \ (3L, 4L, 5L))\n    (9L, 16L, 25L)\n*/\ntuple(long, long, long) powers(long n,\
    \ tuple(long, long, long) nums) \n{\n    return tuple(pow(nums[0], n), pow(nums\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n\
    \    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n\
    \    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqspxe2hq.d(24): Error: function declaration without return type.
    (Note that constructors are always named `this`)

    /tmp/tmpqspxe2hq.d(24): Error: found `nums` when expecting `)`

    /tmp/tmpqspxe2hq.d(24): Error: semicolon expected following function declaration

    /tmp/tmpqspxe2hq.d(24): Error: declaration expected, not `)`

    /tmp/tmpqspxe2hq.d(27): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqspxe2hq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163936
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    /* BEGIN SOLUTION */\n    return x + y;\n    /* END SOLUTION\
    \ */\n}\n/*\nSubtract two numbers x and y\n    >>> subtract(7L, 2L)\n    5L\n\
    \    >>> subtract(5L, 7L)\n    -2L\n*/\nlong subtract(long x, long y) \n{\n  \
    \  /* BEGIN SOLUTION */\n    return x - y;\n    /* END SOLUTION */\n}\n/*\nMultiply\
    \ two numbers x and y\n    >>> multiply(7L, 2L)\n    14L\n    >>> multiply(5L,\
    \ 7L)\n    35L\n*/\nlong multiply(long x, long y) \n{\n    /* BEGIN SOLUTION */\n\
    \    return x * y;\n    /* END SOLUTION */\n}\n/*\nDivide two numbers x and y\n\
    \    >>> divide(7L, 2L)\n    3L\n    >>> divide(5L, 7L)\n    0L\n*/\nlong divide(long\
    \ x, long y) \n{\n    /* BEGIN SOLUTION */\n    if (y == 0L)\n    {\n        return\
    \ 0L;\n    }\n    return x / y;\n    /* END SOLUTION */\n}\n/*\nGet the remainder\
    \ of two numbers x and y\n    >>> remainder(7L, 2L)\n    1L\n    >>> remainder(5L,\
    \ 7L)\n    5L\n*/\nlong remainder(long x, long y) \n{\n    /* BEGIN SOLUTION */\n\
    \    return x % y;\n    /* END SOLUTION */\n}\n/*\nFloor the quotient of two numbers\
    \ x and y\n    >>> floorDivide(7L, 2L)\n    3L\n    >>> floorDivide(5L, 7L)\n\
    \    0L\n*/\nlong floorDivide(long x, long y) \n{\n    /* BEGIN SOLUTION */\n\
    \    if (y == 0L)\n    {\n        return 0L;\n    }\n    return x / y;\n    /*\
    \ END SOLUTION */\n}\n/*\nDivide the first two numbers x and y and multiply by\
    \ the third\n    >>> multiplyByDivide(7L, 2L, 3L)\nunittest\n{\n    alias candidate\
    \ = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L)\
    \ == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L)\
    \ == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmptdb8nece.d(90): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptdb8nece.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163936
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nGet the length of a string\n    >>>\
    \ get_length(\"abc\")\n    3L\n    >>> get_length(\"abcdef\")\n    6L\n    \n\
    */\nlong get_length(string s) \n{\n    return s.length;\n}\n/*\nDivide two numbers\
    \ x and y\n    >>> divide(6L, 3L)\n    2L\n    >>> divide(10L, 2L)\n    5L\n \
    \   \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\nGet the type\
    \ of a D object\n    >>> get_type(\"abc\")\n    void delegate(char)\n    >>> get_type(\"\
    abc\".toUpperCase)\n    void delegate(char)\n    \n*/\nTypeInfo get_type(Object\
    \ obj) \n{\n    return typeid(obj);\n}\n/*\nGet a sub string of s starting at\
    \ index i and ending at index j\n    >>> get_substring(\"abcdef\", 1L, 4L)\n \
    \   \"bcd\"\n    >>> get_substring(\"abcdef\", 3L, 6L)\n    \"def\"\n    \n*/\n\
    string get_substring(string s, long i, long j) \n{\n    return s[i .. j];\n}\n\
    /*\nGet the day of the week\n    >>> get_day_of_week(2015L, 3L, 25L)\n    4L\n\
    \    >>> get_day_of_week(2015L, 3L, 24L)\n    3L\n    \n*/\nlong get_day_of_week(long\
    \ year, long month, long day) \n{\n    return DateTime(year, month, day).weekday;\n\
    }\n/*\nGet the factorial of a number\n    >>> get_factorial(1L)\n    1L\n    >>>\
    \ get_factorial(5L)\n    120L\n    \n*/\nlong get_factorial(long n) \n{\n    return\
    \ n <= 1 ? 1 : n * get_factorial(n - 1);\n}\n/*\nConvert a string to uppercase\n\
    \    >>> get_uppercase(\"abc\")\n   \nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphem28pjs.d(87): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphem28pjs.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163936
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n    >>> add(3.0f,\
    \ 2.0f)\n    5.0f\n    >>> add(5.0f, 7.0f)\n    12.0f\n    \n*/\nfloat add(float\
    \ x, float y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n    >>>\
    \ add(3.0, 2.0)\n    5.0\n    >>> add(5.0, 7.0)\n    12.0\n    \n*/\ndouble add(double\
    \ x, double y) \n{\n    return x + y;\n}\n/*\nMultiply two numbers x and y\n \
    \   >>> mul(2L, 3L)\n    6L\n    >>> mul(5L, 7L)\n    35L\n    \n*/\nlong mul(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> mul(3.0f, 2.0f)\n    6.0f\n    >>> mul(5.0f, 7.0f)\n    35.0f\n    \n*/\n\
    float mul(float x, float y) \n{\n    return x * y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> mul(3.0, 2.0)\n    6.0\n    >>> mul(5.0, 7.0)\n    35.0\n \
    \   \n*/\ndouble mul(double x, double y) \n{\n    return x * y;\n}\n/*\nSubtract\
    \ two numbers x and y\n    >>> sub(2L, 3L)\n    -1L\n    >>> sub(5L, 7L)\n   \
    \ -2L\n    \n*/\nlong sub(long x, long y) \n{\n    return x - y;\n}\n/*\nSubtract\
    \ two numbers x and y\n    >>> sub(3.0f, 2.0f)\n    1.0f\n    >>> sub(5.0f, 7.0f)\n\
    \    -2.0f\n    \n*/\nfloat sub(float x,\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpn18em8xt.d(96): Error: basic type expected, not `unittest`

    /tmp/tmpn18em8xt.d(96): Error: found `unittest` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn18em8xt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163936
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nCreate a list of all numbers from\
    \ 1 to n inclusive\n    >>> list_of_longs(3L)\n    [1L, 2L, 3L]\n    >>> list_of_longs(5L)\n\
    \    [1L, 2L, 3L, 4L, 5L]\n*/\nList<long> list_of_longs(long n) \n{\n    List<long>\
    \ result = new List<long>();\n    foreach (i; iota(n)) \n    {\n        result.insertBack(i\
    \ + 1L);\n    }\n    return result;\n}\n/*\nCalculate the sum of the numbers in\
    \ a list\n    >>> sum_of_list([1L, 2L, 3L])\n    6L\n    >>> sum_of_list([1L,\
    \ 5L, 7L])\n    13L\n*/\nlong sum_of_list(List<long> nums) \n{\n    long result\
    \ = 0L;\n    foreach (n; nums) \n    {\n        result += n;\n    }\n    return\
    \ result;\n}\n/*\nCalculate the product of the numbers in a list\n    >>> product_of_list([1L,\
    \ 2L, 3L])\n    6L\n    >>> product_of_list([2L, 5L, 7L])\n    70L\n*/\nlong product_of_list(List<long>\
    \ nums) \n{\n    long result = 1L;\n    foreach (n; nums) \n    {\n        result\
    \ *= n;\n    }\n    return result;\n}\n/*\nAdd up all the elements of a list\n\
    \    >>> accumulate_list(list_of_longs(5L), 0L, add)\n    15L\n    >>> accumulate_list(list_of_longs(5L),\
    \ 1L, mul)\n    120L\n*/\nauto accumulate_list(List<long> nums, long initial,\
    \ alias fun) \n(long fun(long, long)) => fun;\nlong accumulate_list(List<long>\
    \ nums, long initial, long fun(long, long)) \n{\n    long\nunittest\n{\n    alias\
    \ candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9qd2sc8x.d(22): Error: no identifier for declarator `List`

    /tmp/tmp9qd2sc8x.d(22): Error: declaration expected, not `<`

    /tmp/tmp9qd2sc8x.d(25): Error: declaration expected, not `foreach`

    /tmp/tmp9qd2sc8x.d(25): Error: function declaration without return type. (Note
    that constructors are always named `this`)

    /tmp/tmp9qd2sc8x.d(25): Error: no identifier for declarator `iota(n)`

    /tmp/tmp9qd2sc8x.d(25): Error: semicolon expected following function declaration

    /tmp/tmp9qd2sc8x.d(25): Error: declaration expected, not `)`

    /tmp/tmp9qd2sc8x.d(28): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9qd2sc8x.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163936
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n  return x + y;\n}\n/*\nBase-10 logarithm of x\n    >>> log10(1L)\n\
    \    0L\n    >>> log10(10L)\n    1L\n    >>> log10(100L)\n    2L\n    >>> log10(1000L)\n\
    \    3L\n    >>> log10(10000L)\n    4L\n*/\nlong log10(long x)\n{\n  long i =\
    \ 0L;\n  while(x > 9L) {\n    x = x / 10L;\n    i = i + 1L;\n  }\n  return i;\n\
    }\n/*\nConvert an ASCII character to uppercase\n    >>> uppercase('a')\n    'A'\n\
    \    >>> uppercase('b')\n    'B'\n    >>> uppercase('A')\n    'A'\n    >>> uppercase('.')\n\
    \    '.'\n*/\nchar uppercase(char c)\n{\n  return 'A' + (c - 'a');\n}\n/*\nConvert\
    \ an ASCII character to lowercase\n    >>> lowercase('a')\n    'a'\n    >>> lowercase('b')\n\
    \    'b'\n    >>> lowercase('A')\n    'a'\n    >>> lowercase('.')\n    '.'\n*/\n\
    char lowercase(char c)\n{\n  return 'a' + (c - 'A');\n}\n/*\nConvert an ASCII\
    \ character to its integer equivalent\n    >>> atoi('0')\n    0L\n    >>> atoi('1')\n\
    \    1L\n    >>> atoi('2')\n    2L\n    >>> atoi('3')\n    3L\n    >>> atoi('4')\n\
    \    4L\n    >>> atoi('5')\n    5L\n    >>> atoi('6')\n    6L\n    >>> atoi('7')\n\
    \    7L\n    >>> atoi('8')\n    8L\n    >>> atoi('9')\n    9L\n*/\nlong atoi(char\
    \ c)\n{\n  return c - '0';\n}\n/*\nConvert an integer to its ASCII character equivalent\n\
    \    >>> itoa(0L)\n    '0'\n   \nunittest\n{\n    alias candidate = add;\n\n \
    \   assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n \
    \   assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9x1o6wsp.d(94): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9x1o6wsp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163936
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nGet random number from 1 to 10\n \
    \   >>> random_number() in [1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L]\n    True\n\
    */\nlong random_number()\n{\n    return floor(random() * 10L + 1L);\n}\n/*\nGet\
    \ random number from 100 to 1000\n    >>> random_number_100_1000() in [i for i\
    \ in xrange(100L, 1001L)]\n    True\n*/\nlong random_number_100_1000()\n{\n  \
    \  return floor(random() * 900L + 100L);\n}\n/*\nQuadratic equation\n    >>> solve_quadratic_equation(1L,\
    \ 2L, 1L)\n    tuple([-1L, -1L])\n    >>> solve_quadratic_equation(1L, -6L, 9L)\n\
    \    tuple([3L, 3L])\n    >>> solve_quadratic_equation(1L, -8L, 16L)\n    tuple([4L,\
    \ 4L])\n    >>> solve_quadratic_equation(4L, 2L, 1L)\n    tuple([-0.25L, -2.0L])\n\
    \    >>> solve_quadratic_equation(1L, -4L, 4L)\n    tuple([2L, 2L])\n    >>> solve_quadratic_equation(1L,\
    \ -3L, 2L)\n    tuple([2L, 1L])\n    >>> solve_quadratic_equation(1L, 2L, 2L)\n\
    \    tuple([-2L, -1L])\n    >>> solve_quadratic_equation(1L, -1L, 0L)\n    tuple([1L,\
    \ 0L])\n    >>> solve_quadratic_equation(1L, 0L, -9L)\n    tuple([3L, -3L])\n\
    \    >>> solve_quadratic_equation(1L, -10L, 25L)\n    tuple([5L, 5L])\n    >>>\
    \ solve_quadratic_equation(1L, -14L\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpieptunlm.d(33): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpieptunlm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163936
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(5L, 3L)\n    2L\n    >>> subtract(12L, 7L)\n    5L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(2L, 3L)\n    0L\n    >>> divide(6L, 3L)\n    2L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nDivide two numbers x and y and get\
    \ the remainder\n    >>> mod(2L, 3L)\n    2L\n    >>> mod(6L, 3L)\n    0L\n*/\n\
    long mod(long x, long y) \n{\n    return x % y;\n}\n/*\nGet the absolute value\
    \ of the number x\n    >>> abs(-2L)\n    2L\n    >>> abs(6L)\n    6L\n*/\nlong\
    \ abs(long x) \n{\n    return cast(long)std.math.abs(x);\n}\n/*\nGet the square\
    \ root of the number x\n    >>> sqrt(16L)\n    4L\n    >>> sqrt(25L)\n    5L\n\
    */\nlong sqrt(long x) \n{\n    return cast(long)std.math.sqrt(x);\n}\n/*\nPower\
    \ of the number x and y\n    >>> pow(2L, 3L)\n    8L\n    >>> pow(5L, 2L)\n  \
    \  25L\n*/\nlong pow(long x, long y) \n{\n    return cast(long)std.math.pow(x,\
    \ y);\n}\n/*\nGet the floor of a float number\n    >>> floor(2.5)\n    2L\n  \
    \  >>> floor(6.1)\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbptizfc7.d(92): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbptizfc7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163936
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSquare a number x\n    >>> square(2L)\n\
    \    4L\n    >>> square(5L)\n    25L\n*/\nlong square(long x) \n{\n    return\
    \ x * x;\n}\n/*\nCalculate the length of the hypotenuse of a right triangle\n\
    \    >>> hypotenuse(3L, 4L)\n    5L\n    >>> hypotenuse(5L, 12L)\n    13L\n*/\n\
    long hypotenuse(long x, long y) \n{\n    return sqrt(square(x) + square(y));\n\
    }\n/*\nCreate a tuple containing two numbers\n    >>> tup(2L, 3L)\n    (2L, 3L)\n\
    \    >>> tup(5L, 7L)\n    (5L, 7L)\n*/\nTuple!(long, long) tup(long x, long y)\
    \ \n{\n    return tuple(x, y);\n}\n/*\nAdd the two numbers in a tuple\n    >>>\
    \ tup_add((2L, 3L))\n    5L\n    >>> tup_add((5L, 7L))\n    12L\n*/\nlong tup_add(Tuple!(long,\
    \ long) x) \n{\n    return add(x[0], x[1]);\n}\n/*\nSquare the numbers in a tuple\n\
    \    >>> tup_square((2L, 3L))\n    (4L, 9L)\n    >>> tup_square((5L, 7L))\n  \
    \  (25L, 49L)\n*/\nTuple!(long, long) tup_square(Tuple!(long, long) x) \n{\n \
    \   return tuple(square(x[0]), square(x[1]));\n}\n/*\nCalculate the hypotenuse\
    \ of the numbers in a tuple\n    >>> tup_hypotenuse((3L, 4L))\n    (5L, 5L)\n\
    \    >>> tup_hypotenuse((5L, 12L))\n    (13L, 13L)\n*/\nTuple!(long, long) tup_hypotenuse(Tuple!(long\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n\
    \    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n\
    \    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9s_cg9xz.d(78): Error: found `unittest` when expecting `.` following
    long

    /tmp/tmp9s_cg9xz.d(79): Error: found `{` when expecting identifier following `long`.

    /tmp/tmp9s_cg9xz.d(80): Error: found `alias` when expecting `)` following template
    argument list

    /tmp/tmp9s_cg9xz.d(80): Error: found `;` when expecting `)`

    /tmp/tmp9s_cg9xz.d(82): Error: semicolon expected following function declaration

    /tmp/tmp9s_cg9xz.d(82): Error: declaration expected, not `assert`

    /tmp/tmp9s_cg9xz.d(83): Error: declaration expected, not `assert`

    /tmp/tmp9s_cg9xz.d(84): Error: declaration expected, not `assert`

    /tmp/tmp9s_cg9xz.d(85): Error: declaration expected, not `assert`

    /tmp/tmp9s_cg9xz.d(86): Error: declaration expected, not `assert`

    /tmp/tmp9s_cg9xz.d(87): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9s_cg9xz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163936
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n    >>> add(2.0,\
    \ 3.0)\n    5.0\n    >>> add(5.0, 7.0)\n    12.0\n    \n*/\ndouble add(double\
    \ x, double y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n    >>>\
    \ add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \n*/\nunittest\n{\n    alias\
    \ candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nFind the absolute value of a number\n\
    \    >>> abs_value(-5L)\n    5L\n    >>> abs_value(5L)\n    5L\n*/\nlong abs_value(long\
    \ x)\n{\n    return if (x < 0L) -x else x;\n}\n/*\nMultiply two numbers x and\
    \ y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\n\
    long multiply(long x, long y)\n{\n    return x * y;\n}\n/*\nFind the minimum value\
    \ of two numbers x and y\n    >>> min(2L, 3L)\n    2L\n    >>> min(5L, 7L)\n \
    \   5L\n*/\nlong min(long x, long y)\n{\n    return if (x < y) x else y;\n}\n\
    /*\nFind the maximum value of two numbers x and y\n    >>> max(2L, 3L)\n    3L\n\
    \    >>> max(5L, 7L)\n    7L\n*/\nlong max(long x, long y)\n{\n    return if (x\
    \ > y) x else y;\n}\n/*\nCheck if a number is even\n    >>> is_even(2L)\n    true\n\
    \    >>> is_even(3L)\n    false\n*/\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpa0eh216p.d(24): Error: expression expected, not `if`

    /tmp/tmpa0eh216p.d(24): Error: found `else` when expecting `;` following `return`
    statement

    /tmp/tmpa0eh216p.d(46): Error: expression expected, not `if`

    /tmp/tmpa0eh216p.d(46): Error: found `x` when expecting `;` following `return`
    statement

    /tmp/tmpa0eh216p.d(46): Error: found `else` without a corresponding `if`, `version`
    or `debug` statement

    /tmp/tmpa0eh216p.d(57): Error: expression expected, not `if`

    /tmp/tmpa0eh216p.d(57): Error: found `x` when expecting `;` following `return`
    statement

    /tmp/tmpa0eh216p.d(57): Error: found `else` without a corresponding `if`, `version`
    or `debug` statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa0eh216p.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163936
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nGet  the absolute value of a number\
    \ x\n    >>> abs(5L)\n    5L\n    >>> abs(-5L)\n    5L\n*/\nlong abs(long x)\n\
    {\n    return (x < 0) ? -x : x;\n}\n/*\nSubtract two numbers x and y\n    >>>\
    \ sub(5L, 3L)\n    2L\n    >>> sub(3L, 5L)\n    -2L\n*/\nlong sub(long x, long\
    \ y)\n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n    >>> mult(3L,\
    \ 5L)\n    15L\n    >>> mult(5L, 3L)\n    15L\n*/\nlong mult(long x, long y)\n\
    {\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>> div(10L, 5L)\n\
    \    2L\n    >>> div(5L, 10L)\n    0L\n*/\nlong div(long x, long y)\n{\n    return\
    \ (x / y);\n}\n/*\nGet the remainder after dividing two numbers x and y\n    >>>\
    \ rem(10L, 3L)\n    1L\n    >>> rem(3L, 10L)\n    3L\n*/\nlong rem(long x, long\
    \ y)\n{\n    return (x % y);\n}\n/*\nGet the quotient of a division of two numbers\
    \ x and y\n    >>> quot(10L, 3L)\n    3L\n    >>> quot(3L, 10L)\n    0L\n*/\n\
    long quot(long x, long y)\n{\n    return (x / y);\n}\n/*\nGet the floor of a number\
    \ x\n    >>> floor(3.1)\n    3L\n    >>> floor(3.9)\n    3L\n*/\nlong floor(double\
    \ x)\n{\n    return (long)x;\n}\n/*\nGet the ceiling of a number x\n    >>> ceil(3.1)\n\
    \    4L\n    >>> ceil(3.9)\n    4L\n*/\nlong ceil(double x)\n{\n\nunittest\n{\n\
    \    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprrpv1_my.d(90): Error: C style cast illegal, use `cast(long)x`

    /tmp/tmprrpv1_my.d(102): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprrpv1_my.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163936
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n//int main()\n//{\n//    writeln(add(2L,\
    \ 3L));\n//    writeln(add(5L, 7L));\n//    return 0;\n//}\n/*\nMultiply three\
    \ numbers x, y and z\n    >>> multiply(2L, 3L, 4L)\n    24L\n    >>> multiply(6L,\
    \ 7L, 2L)\n    84L\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmps2diqeml.d(21): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps2diqeml.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163936
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    long xor, and, temp;\n    xor = x ^ y;\n    and = x & y;\n\
    \    and <<= 1;\n    while (and != 0) \n    {\n        temp = xor;\n        xor\
    \ = xor ^ and;\n        and = temp & and;\n        and <<= 1;\n    }\n    return\
    \ xor;\n}\n//% shim=@shim.int64\nunittest\n{\n    alias candidate = add;\n\n \
    \   assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n \
    \   assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n    \n*/\n\
    long subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(3L, 2L)\n    1L\n    >>> divide(7L, 5L)\n\
    \    1L\n    >>> divide(35L, 7L)\n    5L\n    \n*/\nlong divide(long x, long y)\
    \ \n{\n    return x / y;\n}\n/*\nFind the remainder of x and y\n    >>> remainder(3L,\
    \ 2L)\n    1L\n    >>> remainder(7L, 5L)\n    2L\n    >>> remainder(35L, 7L)\n\
    \    0L\n    \n*/\nlong remainder(long x, long y) \n{\n    return x % y;\n}\n\
    /*\nFind the sum of an array\n    >>> array_sum([1L, 2L, 3L])\n    6L\n    >>>\
    \ array_sum([8L, 9L, 10L])\n    27L\n    \n*/\nlong array_sum(long[] x) \n{\n\
    \    long res = 0L;\n    foreach (num; x) \n    {\n        res += num;\n    }\n\
    \    return res;\n}\n/*\nFind the minimum of an array\n    >>> array_min([1L,\
    \ 2L, 3L])\n    1L\n    >>> array_min([8L, 9L, 10L])\n    8L\n    \n*/\nlong array_min(long[]\
    \ x) \n{\n    long res = x[0];\n    foreach (num; x) \n    {\n        if (num\
    \ < res) \n        {\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp14luq11k.d(99): Error: found `unittest` instead of statement

    /tmp/tmp14luq11k.d(109): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmp14luq11k.d(109): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp14luq11k.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163936
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n \n/*\nMultiply two numbers x and y\n\
    \    >>> mul(2L, 3L)\n    6L\n    >>> mul(5L, 7L)\n    35L\n    \n*/\nlong mul(long\
    \ x, long y) \n{\n    return x * y;\n}\n \n/*\nDivide two numbers x and y\n  \
    \  >>> div(6L, 3L)\n    2L\n    >>> div(8L, 2L)\n    4L\n    \n*/\nlong div(long\
    \ x, long y) \n{\n    return x / y;\n}\n \n/*\nSubtract two numbers x and y\n\
    \    >>> sub(3L, 2L)\n    1L\n    >>> sub(6L, 4L)\n    2L\n    \n*/\nlong sub(long\
    \ x, long y) \n{\n    return x - y;\n}\n \n/*\nModulus of two numbers x and y\n\
    \    >>> mod(5L, 2L)\n    1L\n    >>> mod(7L, 3L)\n    1L\n    \n*/\nlong mod(long\
    \ x, long y) \n{\n    return x % y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nCheck if item is in sequence or not\n\
    \    >>> is_in(5L, [1L, 2L, 3L, 4L, 5L])\n    true\n    >>> is_in(6L, [1L, 2L,\
    \ 3L, 4L, 5L])\n    false\n*/\nunittest\n{\n    alias candidate = add;\n\n   \
    \ assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n   \
    \ assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n  \
    \  assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n  return x + y;\n}\n/*\nSubtract two numbers x and y\n    >>>\
    \ subtract(5L, 2L)\n    3L\n    >>> subtract(7L, 5L)\n    2L\n*/\nlong subtract(long\
    \ x, long y) \n{\n  return x - y;\n}\n/*\nMultiply two numbers x and y\n    >>>\
    \ multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n  return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(10L, 5L)\n    2L\n    >>> divide(4L, 2L)\n    2L\n*/\nlong divide(long\
    \ x, long y) \n{\n  return x / y;\n}\n/*\nCalculate factorial of a number x\n\
    \    >>> factorial(5L)\n    120L\n    >>> factorial(3L)\n    6L\n*/\nlong factorial(long\
    \ x) \n{\n  if (x == 0L) \n  {\n    return 1L;\n  }\n  else \n  {\n    return\
    \ x * factorial(x - 1L);\n  }\n}\n/*\nCalculate nth term of fibonacci sequence\n\
    \    >>> fibonacci(5L)\n    5L\n    >>> fibonacci(3L)\n    2L\n*/\nlong fibonacci(long\
    \ x) \n{\n  if (x <= 1L) \n  {\n    return x;\n  }\n  else \n  {\n    return fibonacci(x\
    \ - 1L) + fibonacci(x - 2L);\n  }\n}\n/*\nCalculate greatest common divisor of\
    \ two numbers x and y\n    >>> gcd(12L, 8L)\n    4L\n    >>> gcd(12L, 18L)\n \
    \   6L\n*/\nlong gcd(long x, long y) \n{\n  if (y == 0L) \n  {\n    return x;\n\
    \  }\n  else \n  {\n    return gcd\nunittest\n{\n    alias candidate = add;\n\n\
    \    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3tukmrw_.d(100): Error: found `unittest` when expecting `;` following
    `return` statement

    /tmp/tmp3tukmrw_.d(110): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmp3tukmrw_.d(110): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3tukmrw_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163936
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(5L, 2L)\n    3L\n    >>> subtract(2L, 1L)\n    1L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(4L, 2L)\n    2L\n    >>> divide(10L, 5L)\n    2L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nRaise a number x to the power of y\n\
    \    >>> power(2L, 3L)\n    8L\n    >>> power(5L, 5L)\n    3125L\n*/\nlong power(long\
    \ x, long y) \n{\n    return x ^^ y;\n}\n/*\nFind the remainder when a number\
    \ x is divided by y\n    >>> remainder(7L, 2L)\n    1L\n    >>> remainder(10L,\
    \ 3L)\n    1L\n*/\nlong remainder(long x, long y) \n{\n    return x % y;\n}\n\
    /*\nFind the base 2 logarithm of a number x\n    >>> base2Log(2L)\n    1L\n  \
    \  >>> base2Log(4L)\n    2L\n*/\nlong base2Log(long x) \n{\n    return cast(long)log2(x);\n\
    }\n/*\nSquare a number x\n    >>> square(2L)\n    4L\n    >>> square(7L)\n   \
    \ 49L\n*/\nlong square(long x) \n{\n    return x * x;\n}\n/*\nCube a number x\n\
    \    >>> cube(2L)\n    8L\n    >>> cube(3L)\n    27L\n*/\nlong cube(long x) \n\
    {\n    return x\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnx4rnaj0.d(102): Error: found `unittest` when expecting `;` following
    `return` statement

    /tmp/tmpnx4rnaj0.d(112): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnx4rnaj0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163936
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n\treturn x + y;\n}\n/*\nMultiply two numbers x and y\n    >>>\
    \ multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n    \n*/\nlong\
    \ multiply(long x, long y) \n{\n\treturn x * y;\n}\n/*\nSubtract two numbers x\
    \ and y\n    >>> subtract(10L, 3L)\n    7L\n    >>> subtract(9L, 7L)\n    2L\n\
    \    \n*/\nlong subtract(long x, long y) \n{\n\treturn x - y;\n}\n/*\nDivide two\
    \ numbers x and y\n    >>> divide(10L, 2L)\n    5L\n    >>> divide(9L, 3L)\n \
    \   3L\n    >>> divide(21L, 7L)\n    3L\n    \n*/\nlong divide(long x, long y)\
    \ \n{\n\treturn x / y;\n}\n/*\nSimple function that squares a number\n    >>>\
    \ square(2L)\n    4L\n    >>> square(5L)\n    25L\n    \n*/\nlong square(long\
    \ x) \n{\n\treturn x * x;\n}\n/*\nSimple function that cubs a number\n    >>>\
    \ cube(2L)\n    8L\n    >>> cube(3L)\n    27L\n    \n*/\nlong cube(long x) \n\
    {\n\treturn x * x * x;\n}\n/*\nCalculate factorial of number\n    >>> factorial(3L)\n\
    \    6L\n    >>> factorial(5L)\n    120L\n    \n*/\nlong factorial(long x) \n\
    {\n\tlong result = 1L;\n\tfor (long i = 1L; i <= x; i += 1L) {\n\t\tresult *=\
    \ i;\n\t}\n\treturn result;\n}\n/*\nCalculate fibonacci of number\n    >>> fibonacci(3L)\n\
    \    2L\n    >>> fibonacci(6L)\n    8L\n    >>> fibonacci(10L)\n    55L\n    \n\
    */\nlong fibonacci(long x) \n{\n\tif (x\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2anou10l.d(106): Error: found `unittest` when expecting `)`

    /tmp/tmp2anou10l.d(116): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2anou10l.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163936
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nFactorial\n    >>> factorial(5L)\n\
    \    120L\n    >>> factorial(6L)\n    720L\n*/\nlong factorial(long n) \n{\n \
    \   return n <= 1L ? 1L : n * factorial(n - 1L);\n}\n/*\nGCD of two numbers\n\
    \    >>> gcd(8L, 12L)\n    4L\n    >>> gcd(8L, 4L)\n    4L\n*/\nlong gcd(long\
    \ x, long y) \n{\n    while (y != 0L) {\n        long tmp = x % y;\n        x\
    \ = y;\n        y = tmp;\n    }\n    return x;\n}\n/*\nDivide and ceil\n    >>>\
    \ ceildiv(10L, 3L)\n    4L\n    >>> ceildiv(5L, 2L)\n    3L\n*/\nlong ceildiv(long\
    \ a, long b) \n{\n    return (a + b - 1L) / b;\n}\n/*\nModulo\n    >>> mod(10L,\
    \ 3L)\n    1L\n    >>> mod(5L, 2L)\n    1L\n*/\nlong mod(long a, long b) \n{\n\
    \    return a - (a / b) * b;\n}\n/*\nIs prime\n    >>> isprime(2L)\n    true\n\
    \    >>> isprime(3L)\n    true\n    >>> isprime(4L)\n    false\n*/\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nlong subtract(long x, long y) \n{\n  \
    \  return x - y;\n}\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n\
    long divide(long x, long y) \n{\n    return x / y;\n}\n/*\nDivide two numbers\
    \ x and y (rounding to the closest integer).\nunittest\n{\n    alias candidate\
    \ = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L)\
    \ == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L)\
    \ == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpc85butx4.d(27): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc85butx4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163936
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n    \n*/\n\
    long subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nSubtract\
    \ two numbers x and y and return the result with the type of the larger of the\
    \ two numbers\n    >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n \
    \   -2L\n    \n*/\nlong subtractAndCast(long x, long y) \n{\n    return cast(long)\
    \ x - y;\n}\n/*\nAdd two numbers x and y and return the result with the type of\
    \ the larger of the two numbers\n    >>> add(2L, 3L)\n    5L\n    >>> add(5L,\
    \ 7L)\n    12L\n    \n*/\nlong addAndCast(long x, long y) \n{\n    return cast(long)\
    \ x + y;\n}\n/*\nMultiply two numbers x and y and return the result with the type\
    \ of the larger of the two numbers\n    >>> multiply(2L, 3L)\n    6L\n    >>>\
    \ multiply(5L, 7L)\n    35L\n    \n*/\nlong multiplyAndCast(long x, long y) \n\
    {\n    return cast(long) x * y;\n}\n/*\nDivide two numbers x and y and return\
    \ the result with the type of the larger of the two numbers\n    >>> divide(2L,\
    \ 3L)\n    0L\n    >>> divide(6L, 3L)\n    2L\n    \n*/\nlong divideAndCast(long\
    \ x, long y) \n{\n    return cast(long) x / y;\n}\n/*\nDivide two numbers x and\
    \ y\n    >>> divide(2L,\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpty8mdvlf.d(87): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpty8mdvlf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163936
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nCompute the quotient and remainder\
    \ of two numbers x and y\n    >>> quotient_and_remainder(10L, 3L)\n    (3L, 1L)\n\
    \    >>> quotient_and_remainder(2L, 3L)\n    (0L, 2L)\n    >>> quotient_and_remainder(0L,\
    \ 1L)\n    (0L, 0L)\n*/\nTuple!(long, long) quotient_and_remainder(long x, long\
    \ y) \n{\n    return tuple(x / y, x % y);\n}\n/*\nCompute the minimum of two numbers\
    \ x and y\n    >>> min_of(2L, 3L)\n    2L\n    >>> min_of(5L, 7L)\n    5L\n  \
    \  >>> min_of(7L, 5L)\n    5L\n*/\nlong min_of(long x, long y) \n{\n    return\
    \ min(x, y);\n}\n/*\nCompute the maximum of two numbers x and y\n    >>> max_of(2L,\
    \ 3L)\n    3L\n    >>> max_of(5L, 7L)\n    7L\n    >>> max_of(7L, 5L)\n    7L\n\
    */\nlong max_of(long x, long y) \n{\n    return max(x, y);\n}\n/*\nCompute the\
    \ absolute value of x\n    >>> abs_of(-5L)\n    5L\n    >>> abs_of(5L)\n    5L\n\
    \    >>> abs_of(0L)\n    0L\n*/\nlong abs_of(long x) \n{\n    return abs(x);\n\
    }\n/*\nCompute the square root of x\n    >>> sqrt_of(9L)\n    3L\n    >>> sqrt_of(4L)\n\
    \    2L\n    >>> sqrt_of(1L)\n    1L\n*/\nlong sqrt_of(long x) \n{\n    return\
    \ cast(long) sqrt(x);\n}\n/*\nCompute the power of x to y\n    >>> pow_of\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxsfvxzwj.d(80): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxsfvxzwj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163936
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\ntest_add() : Tests add()\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqbr5nkby.d(15): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqbr5nkby.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163936
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n    return x + y;\n}\n \n// Subtract two numbers x and y\nlong\
    \ subtract(long x, long y) \n    return x - y;\n}\nunittest\n{\n    alias candidate\
    \ = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L)\
    \ == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L)\
    \ == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8iu3fw1i.d(12): Error: semicolon expected following function declaration

    /tmp/tmp8iu3fw1i.d(12): Error: no identifier for declarator `x`

    /tmp/tmp8iu3fw1i.d(12): Error: declaration expected, not `+`

    /tmp/tmp8iu3fw1i.d(13): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8iu3fw1i.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163936
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nReturns x to the power of y, x**y\n\
    \    >>> power(2L, 2L)\n    4L\n    >>> power(5L, 2L)\n    25L\n*/\nlong power(long\
    \ x, long y) \n{\n    return pow(x, y);\n}\n/*\nReturns the smallest number in\
    \ the input array\n    >>> min([2L, 3L, 5L])\n    2L\n    >>> min([1L, 5L, 3L])\n\
    \    1L\n*/\nlong min(long[] a) \n{\n    return min(a);\n}\n/*\nReturns the largest\
    \ number in the input array\n    >>> max([2L, 3L, 5L])\n    5L\n    >>> max([1L,\
    \ 5L, 3L])\n    5L\n*/\nlong max(long[] a) \n{\n    return max(a);\n}\n/*\nReturns\
    \ the mean of the input array\n    >>> mean([2L, 3L, 5L])\n    3L\n    >>> mean([1L,\
    \ 5L, 3L])\n    3L\n*/\nlong mean(long[] a) \n{\n    long sum = 0L;\n    long\
    \ count = 0L;\n    foreach (i; a)\n    {\n        sum += i;\n        count +=\
    \ 1L;\n    }\n    return sum / count;\n}\n/*\nReturns the standard deviation of\
    \ the input array\n    >>> stddev([2L, 3L, 5L])\n    ~1.4142135623730951L\n  \
    \  >>> stddev([1L, 5L, 3L])\n    ~1.632993161855452L\n*/\ndouble stddev(long[]\
    \ a) \n{\n    double m = mean(a) as double;\n    double s = 0;\n    foreach (i;\
    \ a)\n    {\n        s += (i as double - m) * (i as double - m);\n    }\n    s\
    \ /= a.length as double;\n    return sqrt(s);\n}\n/*\nReturns the sum of the input\
    \ array\n    >>> sum([2L, 3L, 5L\nunittest\n{\n    alias candidate = add;\n\n\
    \    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0z5opzkk.d(75): Error: semicolon expected, not `as`

    /tmp/tmp0z5opzkk.d(75): Error: found `double` when expecting `;` following statement

    /tmp/tmp0z5opzkk.d(75): Deprecation: use `{ }` for an empty statement, not `;`

    /tmp/tmp0z5opzkk.d(79): Error: found `as` when expecting `)`

    /tmp/tmp0z5opzkk.d(79): Error: found `double` when expecting `;` following statement

    /tmp/tmp0z5opzkk.d(79): Error: found `)` when expecting `;` following statement

    /tmp/tmp0z5opzkk.d(79): Error: found `as` when expecting `)`

    /tmp/tmp0z5opzkk.d(79): Error: found `double` when expecting `;` following statement

    /tmp/tmp0z5opzkk.d(79): Error: found `)` when expecting `;` following statement

    /tmp/tmp0z5opzkk.d(79): Deprecation: use `{ }` for an empty statement, not `;`

    /tmp/tmp0z5opzkk.d(81): Error: found `as` when expecting `;` following statement

    /tmp/tmp0z5opzkk.d(81): Error: no identifier for declarator `double`

    /tmp/tmp0z5opzkk.d(81): Deprecation: use `{ }` for an empty statement, not `;`

    /tmp/tmp0z5opzkk.d(84): Error: untermina'
  stdout: ''
  timestamp: 1660163936
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    //your code here\n    return 0L;\n}\n/*\nSubtract one number\
    \ y from x\n    >>> subtract(4L, 2L)\n    2L\n    >>> subtract(5L, 1L)\n    4L\n\
    */\nlong subtract(long x, long y) \n{\n    //your code here\n    return 0L;\n\
    }\n/*\nMultiply two numbers x and y\n    >>> multiply(2L, 2L)\n    4L\n    >>>\
    \ multiply(3L, 3L)\n    9L\n*/\nlong multiply(long x, long y) \n{\n    //your\
    \ code here\n    return 0L;\n}\n/*\nDivide two numbers x and y\n    >>> divide(6L,\
    \ 2L)\n    3L\n    >>> divide(12L, 3L)\n    4L\n*/\nlong divide(long x, long y)\
    \ \n{\n    //your code here\n    return 0L;\n}\n/*\nRaise base x to the power\
    \ y\n    >>> power(2L, 2L)\n    4L\n    >>> power(3L, 3L)\n    27L\n*/\nlong power(long\
    \ x, long y) \n{\n    //your code here\n    return 0L;\n}\n/*\nFind the remainder\
    \ of x divided by y\n    >>> remainder(4L, 2L)\n    0L\n    >>> remainder(5L,\
    \ 2L)\n    1L\n*/\nlong remainder(long x, long y) \n{\n    //your code here\n\
    \    return 0L;\n}\n/*\nFind the largest of the inputs\n    >>> maximum(2L, 3L)\n\
    \    3L\n    >>> maximum(3L, 2L)\n    3L\n*/\nlong maximum(long x, long y) \n\
    {\n    //your code here\n    return 0L;\n}\n/*\nFind the smallest of the inputs\n\
    \    >>> minimum(2L, 3L)\n    2L\n    >>> minimum(3L, 2L)\n    2L\n*/\nlong minimum(long\
    \ x, long y) \n{\n    //your code here\n    return 0L;\n}\n/*\nTally the number\
    \ of times an event\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpenhppdl3.d(100): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpenhppdl3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(5L, 3L)\n    2L\n    >>> subtract(12L, 7L)\n    5L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(10L, 2L)\n    5L\n    >>> divide(5L, 2L)\n    2L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nFind Remainder from x / y\n    >>>\
    \ modulo(8L, 3L)\n    2L\n    >>> modulo(8L, 2L)\n    0L\n*/\nlong modulo(long\
    \ x, long y) \n{\n    return x % y;\n}\n/*\nFind Square root of x\n    >>> squareRoot(9L)\n\
    \    3L\n    >>> squareRoot(16L)\n    4L\n*/\nlong squareRoot(long x) \n{\n  \
    \  return cast(long) sqrt(x);\n}\n/*\nFind Factorial of x\n    >>> factorial(0L)\n\
    \    1L\n    >>> factorial(5L)\n    120L\n*/\nlong factorial(long x) \n{\n   \
    \ if (x < 0) \n    {\n        throw new Exception(\"x should be positive\");\n\
    \    }\n    long result = 1L;\n    for (long i = 1L; i <= x; i++) \n    {\n  \
    \      result *= i;\n    }\n    return result;\n}\n/*\nFind minimum from two numbers\
    \ x and y\n    >>> min(4L, 5L)\n    4L\n    >>> min(5L, 2L)\n    2L\n*/\nlong\
    \ min(long x, long y) \n{\n    return min(\nunittest\n{\n    alias candidate =\
    \ add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) ==\
    \ 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) ==\
    \ 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpc2uoijzk.d(100): Error: expression expected, not `unittest`

    /tmp/tmpc2uoijzk.d(101): Error: found `{` when expecting `,`

    /tmp/tmpc2uoijzk.d(102): Error: expression expected, not `alias`

    /tmp/tmpc2uoijzk.d(102): Error: found `candidate` when expecting `,`

    /tmp/tmpc2uoijzk.d(102): Error: expression expected, not `=`

    /tmp/tmpc2uoijzk.d(102): Error: found `add` when expecting `,`

    /tmp/tmpc2uoijzk.d(102): Error: expression expected, not `;`

    /tmp/tmpc2uoijzk.d(104): Error: found `assert` when expecting `,`

    /tmp/tmpc2uoijzk.d(104): Error: found `;` when expecting `,`

    /tmp/tmpc2uoijzk.d(105): Error: found `;` when expecting `,`

    /tmp/tmpc2uoijzk.d(106): Error: found `;` when expecting `,`

    /tmp/tmpc2uoijzk.d(107): Error: found `;` when expecting `,`

    /tmp/tmpc2uoijzk.d(108): Error: found `;` when expecting `,`

    /tmp/tmpc2uoijzk.d(109): Error: expression expected, not `}`

    /tmp/tmpc2uoijzk.d(110): Error: found `void` when expecting `,`

    /tmp/tmpc2uoijzk.d(110): Error: found `{` when expecting `,`

    /tmp/tmpc2uoijzk.d('
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n    \n*/\n\
    long subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nInteger\
    \ division x and y, return quotient and remainder\n    >>> divide(2L, 3L)\n  \
    \  (0L, 2L)\n    >>> divide(5L, 7L)\n    (0L, 5L)\n    >>> divide(7L, 5L)\n  \
    \  (1L, 2L)\n    \n*/\ntuple!(long, long) divide(long x, long y) \n{\n    return\
    \ tuple(x / y, x % y);\n}\n/*\nRaise the first argument to the power of the second\
    \ argument\n    >>> pow(1L, 1L)\n    1L\n    >>> pow(2L, 3L)\n    8L\n    >>>\
    \ pow(4L, 5L)\n    1024L\n    \n*/\nlong pow(long x, long y) \n{\n    return pow(x,\
    \ y);\n}\n/*\nConvert the first argument to an unsigned integer\n    >>> ulong(10L)\n\
    \    10UL\n    >>> ulong(-10L)\n    4294967286UL\n    \n*/\nulong ulong(long x)\
    \ \n{\n    return to!ulong(x);\n}\n/*\nConvert the first argument to a signed\
    \ integer\n    >>> long(10L)\n    10L\n    >>> long(4294967286UL)\n    -10L\n\
    \    \n*/\nlong long(ulong x) \n{\n    return to!long(x);\n}\n/*\nBitwise shift\
    \ of first argument, second argument is shift amount\n    >>> shiftLeft(1L, 1L)\n\
    \   \nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L, 1L)\
    \ == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L, 3L)\
    \ == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L, 5L)\
    \ == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnu_o02ez.d(75): Error: no identifier for declarator `ulong`

    /tmp/tmpnu_o02ez.d(75): Error: function declaration without return type. (Note
    that constructors are always named `this`)

    /tmp/tmpnu_o02ez.d(76): Error: no identifier for declarator `ulong(long x)`

    /tmp/tmpnu_o02ez.d(87): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpnu_o02ez.d(87): Error: function declaration without return type. (Note
    that constructors are always named `this`)

    /tmp/tmpnu_o02ez.d(88): Error: no identifier for declarator `long(ulong x)`

    /tmp/tmpnu_o02ez.d(91): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnu_o02ez.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n    {\n    return x + y;\n    }\n/*\nunittest\n{\n    alias candidate\
    \ = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L)\
    \ == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L)\
    \ == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprtje79fm.d(15): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprtje79fm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\n    A function which squares a number\n\
    \    \n*/\nlong square(long x)\n{\n    return x * x;\n}\n/*\n    calculate the\
    \ distance between two points on a 2D plane\n    \n*/\nunittest\n{\n    alias\
    \ candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nAdd the first n elements of a to the\
    \ first n elements of b, in place.\n    \n    >>> a = [1, 2, 3, 4]\n    >>> b\
    \ = [4, 3, 2, 1]\n    >>> add_inplace(a, b)\n    >>> a\n    [5, 5, 5, 5]\n   \
    \ >>> b\n    [4, 3, 2, 1]\n*/\nunittest\n{\n    alias candidate = add;\n\n   \
    \ assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n   \
    \ assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n  \
    \  assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n    return x + y;\nend\n/*\nAdd three numbers x, y and z\n    >>>\
    \ add(2L, 3L, 4L)\n    9L\n*/\nlong add(long x, long y, long z) \n    return x\
    \ + y + z;\nend\n/*\nSubtract a number y from x\n    >>> subtract(6L, 2L)\n  \
    \  4L\n*/\nlong subtract(long x, long y) \n    return x - y;\nend\n/*\nMultiply\
    \ two numbers x and y\n    >>> multiply(2L, 3L)\n    6L\n*/\nlong multiply(long\
    \ x, long y) \n    return x * y;\nend\n/*\nDivide x by y\n    >>> divide(8L, 4L)\n\
    \    2L\n*/\nlong divide(long x, long y) \n    return x / y;\nend\n/*\nDivide\
    \ x by y and return a tuple of quotient and remainder\n    >>> divrem(10L, 3L)\n\
    \    (3L, 1L)\n*/\ntuple!(long, long) divrem(long x, long y) \n    return tuple(x\
    \ / y, x % y);\nend\n/*\nRaise x to the power y\n    >>> power(2L, 3L)\n    8L\n\
    */\nlong power(long x, long y) \n    return pow(x, y);\nend\n/*\nReturn the absolute\
    \ value of x\n    >>> abs(-9L)\n    9L\n*/\nlong abs(long x) \n    return x <\
    \ 0 ? -x : x;\nend\n/*\nReturn the greatest common divisor of x and y\n    >>>\
    \ gcd(10L, 8L)\n    2L\n*/\nlong gcd(long x, long y) \n    while (y) \n      \
    \  auto t = y;\n        y = x % y;\n        x = t;\n    end\n    return x;\nend\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n\
    \    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n\
    \    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmwsp3v1y.d(12): Error: semicolon expected following function declaration

    /tmp/tmpmwsp3v1y.d(12): Error: no identifier for declarator `x`

    /tmp/tmpmwsp3v1y.d(12): Error: declaration expected, not `+`

    /tmp/tmpmwsp3v1y.d(19): Error: no identifier for declarator `end`

    /tmp/tmpmwsp3v1y.d(20): Error: semicolon expected following function declaration

    /tmp/tmpmwsp3v1y.d(20): Error: no identifier for declarator `x`

    /tmp/tmpmwsp3v1y.d(20): Error: declaration expected, not `+`

    /tmp/tmpmwsp3v1y.d(27): Error: no identifier for declarator `end`

    /tmp/tmpmwsp3v1y.d(28): Error: semicolon expected following function declaration

    /tmp/tmpmwsp3v1y.d(28): Error: no identifier for declarator `x`

    /tmp/tmpmwsp3v1y.d(28): Error: declaration expected, not `-`

    /tmp/tmpmwsp3v1y.d(35): Error: no identifier for declarator `end`

    /tmp/tmpmwsp3v1y.d(36): Error: semicolon expected following function declaration

    /tmp/tmpmwsp3v1y.d(43): Error: no identifier for declarator `end`

    /tmp/tmpmwsp3v1y.d(44): Error: semicolon expected following f'
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n//\n// Add the integral results of functions\
    \ f and g\n//\n// >>> add(square, cube)(2L)\n// 15L\n// >>> add(square, cube)(3L)\n\
    // 36L\n//\nlong add(F)(F f) \n{\n    return (long y) { return f(y) + f(y); };\n\
    }\nlong square(long x) \n{\n    return x * x;\n}\nlong cube(long x) \n{\n    return\
    \ x * x * x;\n}\n//\n// Get the max of two numbers\n//\n// >>> max(2L, 3L)\n//\
    \ 3L\n// >>> max(5L, 7L)\n// 7L\n//\nlong max(long x, long y) \n{\n    return\
    \ x > y ? x : y;\n}\n//\n// Get the max of the integral results of functions f\
    \ and g\n//\n// >>> max(square, cube)(2L)\n// 8L\n// >>> max(square, cube)(3L)\n\
    // 27L\n//\nlong max(F)(F f) \n{\n    return (long y) { return max(f(y), f(y));\
    \ };\n}\n//\n// Create a function that will compare two items using the passed\
    \ in function\n//\n// >>> compareNumbers(greater, 100L, 200L)\n// false\n// >>>\
    \ compareNumbers(greater, 200L, 100L)\n// true\n//\nunittest\n{\n    alias candidate\
    \ = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L)\
    \ == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L)\
    \ == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n    {\n    return x + y;\n    }\n/*\nReturns the sum of all elements\
    \ in the array\n    >>> sum([1L, 2L, 3L])\n    6L\n    >>> sum([2L, 3L, 4L])\n\
    \    9L\n*/\nlong sum(long[] xs)\n    {\n    long acc = 0L;\n    foreach (x; xs)\n\
    \        acc += x;\n    return acc;\n    }\nunittest\n{\n    alias candidate =\
    \ add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) ==\
    \ 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) ==\
    \ 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(3L, 2L)\n    1L\n    >>> subtract(6L, 4L)\n    2L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(3L, 4L)\n    12L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(2L, 2L)\n    1L\n    >>> divide(5L, 3L)\n    1L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nSquare a number x\n    >>> square(2L)\n\
    \    4L\n    >>> square(3L)\n    9L\n*/\nlong square(long x) \n{\n    return x\
    \ * x;\n}\n/*\nCube a number x\n    >>> cube(2L)\n    8L\n    >>> cube(3L)\n \
    \   27L\n*/\nlong cube(long x) \n{\n    return x * x * x;\n}\n/*\nFind the absolute\
    \ value of a number x\n    >>> abs(-2L)\n    2L\n    >>> abs(4L)\n    4L\n*/\n\
    long abs(long x) \n{\n    return math.abs(x);\n}\n/*\nFind the negative of a number\
    \ x\n    >>> negative(2L)\n    -2L\n    >>> negative(-4L)\n    4L\n*/\nlong negative(long\
    \ x) \n{\n    return -x;\n}\n/*\nCalculate the power of x^y\n    >>> power(2L,\
    \ 3L)\n    8L\n    >>> power(5L, 2L)\n    25L\n*/\nlong power(long x, long y)\
    \ \n{\n    return math.pow(x, y);\n}\n/*\nCalculate the square root of a number\
    \ x\n    >>> square\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprgzydcuf.d(103): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprgzydcuf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n    {\n    return x + y;\n    }\n/*\nSubtract two numbers x and\
    \ y\n    >>> subtract(3L, 1L)\n    2L\n    >>> subtract(5L, 7L)\n    -2L\n*/\n\
    long subtract(long x, long y) \n    {\n    return x - y;\n    }\n/*\nMultiply\
    \ two numbers x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L,\
    \ 7L)\n    35L\n*/\nlong multiply(long x, long y) \n    {\n    return x * y;\n\
    \    }\n/*\nDivide two numbers x and y\n    >>> divide(6L, 3L)\n    2L\n    >>>\
    \ divide(35L, 7L)\n    5L\n*/\nlong divide(long x, long y) \n    {\n    return\
    \ x / y;\n    }\n/*\nCompute the floor of the square root of a number x\n    >>>\
    \ floor_square_root(6L)\n    2L\n    >>> floor_square_root(35L)\n    5L\n*/\n\
    long floor_square_root(long x) \n    {\n    return cast(long) floor(sqrt(x));\n\
    \    }\n/*\nCompute the binary length of a number x\n    >>> binary_length(6L)\n\
    \    3L\n    >>> binary_length(35L)\n    6L\n*/\nlong binary_length(long x) \n\
    \    {\n    long n = 0L;\n    while (x != 0L) \n        {\n        n += 1L;\n\
    \        x /= 2L;\n        }\n    return n;\n    }\n/*\nCompute the nth fibonacci\
    \ number\n    >>> fibonacci(0L)\n    0L\n    >>> fibonacci(1L)\n    1L\n    >>>\
    \ fibonacci(10L)\n    55L\n*/\nlong fibonacci(long n) \n    {\n    long a = 0L;\n\
    \    long b = 1L;\n    for (long i = 0L; i < n; i += 1L) \n        {\n       \
    \ long temp = a;\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4hwpmlwz.d(92): Error: found `unittest` instead of statement

    /tmp/tmp4hwpmlwz.d(102): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4hwpmlwz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nTest division by zero\n    >>> division(5L,\
    \ 0L)\n    0L\n*/\nlong division(long x, long y) \n{\n    long result = 0L;\n\
    \    if (y != 0L) \n    {\n        result = x / y;\n    }\n    return result;\n\
    }\n/*\nSubtract two numbers x and y\n    >>> subtract(5L, 3L)\n    2L\n    >>>\
    \ subtract(7L, 5L)\n    2L\n*/\nlong subtract(long x, long y) \n{\n    return\
    \ x - y;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n    >>> add2(2L,\
    \ 3L)\n    5L\n    >>> add2(5L, 7L)\n    12L\nunittest\n{\n    alias candidate\
    \ = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L)\
    \ == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L)\
    \ == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphgkqjj1d.d(15): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphgkqjj1d.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n// assertEqual(add(2L, 3L), 5L);\n// assertEqual(add(5L,\
    \ 7L), 12L);\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nFind the hypotenuse of a right triangle\
    \ given the lengths of the other two sides.\n    >>> hypotenuse(3L, 4L)\n    5L\n\
    \    >>> hypotenuse(5L, 12L)\n    13L\n    \n*/\nlong hypotenuse(long a, long\
    \ b) \n{\n    return ceil(sqrt(pow(a, 2) + pow(b, 2)));\n}\n/*\nCalculate the\
    \ sum of a sequence of numbers.\n    >>> sum(range(5L))\n    10L\n    >>> sum(range(1L,\
    \ 11L))\n    55L\n    \n*/\nlong sum(in Sequence seq) \n{\n    long sum = 0L;\n\
    \    foreach (num; seq) {\n        sum += num;\n    }\n    return sum;\n}\n/*\n\
    Compute the factorial of a given number.\n    >>> factorial(0L)\n    1L\n    >>>\
    \ factorial(5L)\n    120L\n    \n*/\nlong factorial(long x) \n{\n    if (x ==\
    \ 0L) {\n        return 1L;\n    }\n    else {\n        return x * factorial(x\
    \ - 1L);\n    }\n}\n/*\nFind the greatest common divisor of two numbers using\
    \ Euclid's algorithm.\n    >>> gcd(60L, 96L)\n    12L\n    >>> gcd(20L, 8L)\n\
    \    4L\n    \n*/\nlong gcd(long a, long b) \n{\n    while (b != 0L) {\n     \
    \   auto t = b;\n        b = a % b;\n        a = t;\n    }\n    return a;\n}\n\
    /*\nUse Newton's method to compute the square root of a given number.\n    >>>\
    \ sqrt(144L)\n    12L\n    >>> sqrt(5L)\n    2L\n    \n*/\nlong sqrt(long x) \n\
    {\n    auto guess = 1L;\n    while (abs(guess * guess - x) > 0.001) {\n      \
    \  guess = (guess + x / guess) / 2;\n   \nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0em84lu1.d(91): Error: found `unittest` instead of statement

    /tmp/tmp0em84lu1.d(101): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0em84lu1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nAdd three numbers x, y and z\n   \
    \ >>> add3(2L, 3L, 4L)\n    9L\n    >>> add3(5L, 7L, 9L)\n    21L\n    \n*/\n\
    long add3(long x, long y, long z) \n{\n    return x + y + z;\n}\n/*\nAdd a vector\
    \ of numbers\n    >>> addV(vector(2L, 3L, 4L))\n    9L\n    >>> addV(vector(5L,\
    \ 7L, 9L))\n    21L\n    \n*/\nlong addV(const ref in V)(V v) \n{\n    long result\
    \ = 0L;\n    foreach (item; v) {\n        result += item;\n    }\n    return result;\n\
    }\n/*\nAdd a vector of vectors of numbers\n    >>> v = vector(vector(2L, 3L),\
    \ vector(4L, 5L, 6L));\n    >>> addVV(v)\n    20L\n    \n*/\nlong addVV(const\
    \ ref in VV)(VV vv) \n{\n    long result = 0L;\n    foreach (v; vv) {\n      \
    \  foreach (item; v) {\n            result += item;\n        }\n    }\n    return\
    \ result;\n}\n/*\nAdd a map of numbers\n    >>> addM(map!(long, long)(1L, 2L,\
    \ 2L, 3L, 3L, 4L))\n    10L\n    \n*/\nlong addM(const ref in M)(M m) \n{\n  \
    \  long result = 0L;\n    foreach (k, v; m) {\n        result += v;\n    }\n \
    \   return result;\n}\n/*\nSquare a number\n    >>> square(2L)\n    4L\n    >>>\
    \ square(5L)\n    25L\n    \n*/\nlong square(long x) \n{\n    return x * x;\n\
    }\n/*\nCube a number\n    >>> cube(2L)\n    8L\n    >>> cube(5L)\n    125L\n \
    \   \n*/\nlong cube(long x) \n\nunittest\n{\n    alias candidate = add;\n\n  \
    \  assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n  \
    \  assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n \
    \   assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg8y0_iav.d(35): Error: basic type expected, not `ref`

    /tmp/tmpg8y0_iav.d(35): Error: identifier expected for template value parameter

    /tmp/tmpg8y0_iav.d(35): Error: found `ref` when expecting `)`

    /tmp/tmpg8y0_iav.d(35): Error: found `in` when expecting `(`

    /tmp/tmpg8y0_iav.d(35): Error: semicolon expected following function declaration

    /tmp/tmpg8y0_iav.d(35): Error: declaration expected, not `(`

    /tmp/tmpg8y0_iav.d(38): Error: declaration expected, not `foreach`

    /tmp/tmpg8y0_iav.d(38): Error: no identifier for declarator `v`

    /tmp/tmpg8y0_iav.d(38): Error: declaration expected, not `)`

    /tmp/tmpg8y0_iav.d(40): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg8y0_iav.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    if (y == 0L)\n        return x;\n    else\n        return\
    \ add(x ^ y, (x & y) << 1L);\n}\n/*\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpu_1jaxjw.d(18): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu_1jaxjw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return (x + y);\n}\n/*\n    Divides the left operand by\
    \ the right operand and return a floating point result.\nunittest\n{\n    alias\
    \ candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6hnc9f2d.d(15): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6hnc9f2d.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nFind the number of digits in n\n \
    \   >>> num_digits(0L)\n    1L\n    >>> num_digits(5L)\n    1L\n    >>> num_digits(12345678901234567890L)\n\
    \    19L\n*/\nlong num_digits(long n) \n{\n    return cast(long) floor(log10(n\
    \ + 1));\n}\n/*\nGenerate an array of the digits in n\n    >>> digits(1234567890L)\n\
    \    [1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 0L]\n    >>> digits(9876543210L)\n \
    \   [9L, 8L, 7L, 6L, 5L, 4L, 3L, 2L, 1L, 0L]\n*/\nlong[] digits(long n) \n{\n\
    \    long max_digits = num_digits(n);\n    long[] result = new long[max_digits];\n\
    \    foreach (i; 0 .. max_digits) \n    {\n        result[i] = n % 10;\n     \
    \   n /= 10;\n    }\n    return result[0 .. $].reverse;\n}\n/*\nConstruct a number\
    \ from an array of digits\n    >>> list_to_num([0L, 1L, 2L, 3L, 4L, 5L, 6L, 7L,\
    \ 8L, 9L])\n    1234567890L\n    >>> list_to_num([1L, 2L, 3L, 4L, 5L, 6L, 7L,\
    \ 8L, 9L, 0L])\n    1234567890L\n*/\nlong list_to_num(long[] ns) \n{\n    long\
    \ result = 0L;\n    long multiplier = 1L;\n    foreach (n; ns.reverse) \n    {\n\
    \        result += n * multiplier;\n        multiplier *= 10L;\n    }\n    return\
    \ result;\n}\n/*\nMultiply a number by a single-digit number\n    >>> mult_by_digit(12345L,\
    \ 6L)\n    740\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1cusvdvp.d(64): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1cusvdvp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> sub(2L, 3L)\n    -1L\n    >>> sub(5L, 7L)\n    -2L\n    \n*/\nlong sub(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> mul(2L, 3L)\n    6L\n    >>> mul(5L, 7L)\n    35L\n    \n*/\nlong mul(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ div(2L, 3L)\n    0L\n    >>> div(5L, 7L)\n    0L\n    >>> div(5L, 2L)\n    2L\n\
    \    \n*/\nlong div(long x, long y) \n{\n    return x / y;\n}\n/*\nGet the remainder\
    \ of the two numbers x and y\n    >>> rem(2L, 3L)\n    2L\n    >>> rem(5L, 7L)\n\
    \    5L\n    >>> rem(5L, 2L)\n    1L\n    \n*/\nlong rem(long x, long y) \n{\n\
    \    return x % y;\n}\n/*\nDivide two numbers x and y returning the quotient and\
    \ remainder\n    >>> divRem(2L, 3L)\n    (0L, 2L)\n    >>> divRem(5L, 7L)\n  \
    \  (0L, 5L)\n    >>> divRem(5L, 2L)\n    (2L, 1L)\n    \n*/\nstd.Pair divRem(long\
    \ x, long y) \n{\n    return std.makePair(x / y, x % y);\n}\n/*\nDivide two numbers\
    \ x and y returning the quotient and remainder\n    >>> divRem(2L, 3L)\n    (0L,\
    \ 2L)\n    >>> divRem(5L, 7L)\n    (0L, 5L)\n    >>> divRem(5L, 2L)\n    (2L,\
    \ 1L)\n    \nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7p47sti0.d(81): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7p47sti0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    if (y==0) return x;\n    return add(x^y, (x&y)<<1);\n}\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n\
    \    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n\
    \    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    //typeof(x + y)\n    long result = x + y;\n    return result;\n\
    }\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) ==\
    \ 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L, 3L) ==\
    \ 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L, 5L) ==\
    \ 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSum the numbers in a list\n    >>>\
    \ sum([1L, 2L, 3L])\n    6L\n    >>> sum([])\n    0L\n*/\nlong sum(List<long>\
    \ nums) \n{\n    long result = 0L;\n    foreach (i; nums)\n    {\n        result\
    \ += i;\n    }\n    return result;\n}\n/*\nConcatenate lists in a list\n    >>>\
    \ concat([[1L, 2L], [3L], [4L, 5L, 6L]])\n    [1L, 2L, 3L, 4L, 5L, 6L]\n    >>>\
    \ concat([[1L, 2L], [3L], []])\n    [1L, 2L, 3L]\n*/\nList<long> concat(List<List<long>>\
    \ xss) \n{\n    List<long> result = [];\n    foreach (xs; xss)\n    {\n      \
    \  foreach (x; xs)\n        {\n            result ~= x;\n        }\n    }\n  \
    \  return result;\n}\n/*\nTake n items of a list\n    >>> take(2L, [1L, 2L, 3L])\n\
    \    [1L, 2L]\n    >>> take(3L, [1L, 2L])\n    [1L, 2L]\n    >>> take(4L, [1L,\
    \ 2L])\n    [1L, 2L]\n    >>> take(0L, [1L, 2L])\n    []\n*/\nList<long> take(long\
    \ n, List<long> xs) \n{\n    return xs[0..n];\n}\n/*\nDrop n items of a list\n\
    \    >>> drop(2L, [1L, 2L, 3L])\n    [3L]\n    >>> drop(3L, [1L, 2L])\n    []\n\
    \    >>> drop(4L, [1L, 2L])\n    []\n    >>> drop(0L, [1L, 2L])\n    [1L, 2L]\n\
    */\nList<long> drop(long n, List\nunittest\n{\n    alias candidate = add;\n\n\
    \    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwmnx_xle.d(22): Error: found `<` when expecting `)`

    /tmp/tmpwmnx_xle.d(22): Error: semicolon expected following function declaration

    /tmp/tmpwmnx_xle.d(22): Error: no identifier for declarator `long`

    /tmp/tmpwmnx_xle.d(22): Error: declaration expected, not `>`

    /tmp/tmpwmnx_xle.d(25): Error: declaration expected, not `foreach`

    /tmp/tmpwmnx_xle.d(25): Error: no identifier for declarator `nums`

    /tmp/tmpwmnx_xle.d(25): Error: declaration expected, not `)`

    /tmp/tmpwmnx_xle.d(28): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwmnx_xle.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y (integer\
    \ division)\n    >>> divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n    0L\n\
    */\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\nModulo two numbers\
    \ x and y (remainder from integer division)\n    >>> modulo(2L, 3L)\n    2L\n\
    \    >>> modulo(5L, 7L)\n    5L\n*/\nlong modulo(long x, long y) \n{\n    return\
    \ x % y;\n}\n/*\nNth power of a number x\n    >>> power(2L, 3L)\n    8L\n    >>>\
    \ power(5L, 2L)\n    25L\n*/\nlong power(long x, long y) \n{\n    return pow(x,\
    \ y);\n}\n/*\nSquare root of a number x\n    >>> square_root(9L)\n    3L\n   \
    \ >>> square_root(100L)\n    10L\n*/\nlong square_root(long x) \n{\n    return\
    \ sqrt(x);\n}\n/*\nLargest number from a tuple of numbers\n    >>> max([1L, 2L,\
    \ 3L])\n    3L\n    >>> max([1L, 3L, 2L])\n    3L\n*/\nlong max(in long[] x) \n\
    {\n    return max(x);\n}\n/*\nSmallest number from a tuple of numbers\n    >>>\
    \ min([1L, 2L, 3L])\n    1\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsde27scn.d(92): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsde27scn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(6L, 3L)\n    2L\n    >>> divide(10L, 2L)\n    5L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nModulo of two numbers x and y\n  \
    \  >>> modulo(6L, 3L)\n    0L\n    >>> modulo(10L, 5L)\n    0L\n*/\nlong modulo(long\
    \ x, long y) \n{\n    return x % y;\n}\n/*\nPower of two numbers x and y\n   \
    \ >>> power(3L, 2L)\n    9L\n    >>> power(10L, 2L)\n    100L\n*/\nlong power(long\
    \ x, long y) \n{\n    return long(std.math.pow(x, y));\n}\n/*\nAbsolute value\
    \ of a number x\n    >>> absolute(2L)\n    2L\n    >>> absolute(-2L)\n    2L\n\
    */\nlong absolute(long x) \n{\n    return long(std.math.abs(x));\n}\n/*\nGreatest\
    \ common divisor of a list of number x\n    >>> gcd([5L, 7L, 12L])\n    1L\n \
    \   >>> gcd([2L, 3L, 4L])\n    1L\n*/\nlong gcd(long[] x) \n{\n    return long(std.math.gcd(x));\n\
    }\n/*\nFactorial of a number x\n    >>> factorial(2L)\n   \nunittest\n{\n    alias\
    \ candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsw_tnmeu.d(92): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsw_tnmeu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n\"\"\"\nunittest\n{\n    alias candidate\
    \ = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L)\
    \ == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L)\
    \ == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpys66gv0l.d(15): Error: declaration expected, not `""`

    /tmp/tmpys66gv0l.d(15): Error: unterminated string constant starting at /tmp/tmpys66gv0l.d(15)

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpys66gv0l.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(10L, 3L)\n    7L\n    >>> subtract(5L, 7L)\n    -2L\n    \n*/\n\
    long subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(6L, 3L)\n    2L\n    >>> divide(5L, 7L)\n\
    \    0L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Returns the remainder of dividing two numbers x and y\n    >>> remainder(6L, 3L)\n\
    \    0L\n    >>> remainder(7L, 5L)\n    2L\n    \n*/\nlong remainder(long x, long\
    \ y) \n{\n    return x % y;\n}\n/*\nReturns the result of dividing two numbers\
    \ x and y\n    >>> divideAndRemainder(6L, 3L)\n    Tuple!(long, long)(2L, 0L)\n\
    \    >>> divideAndRemainder(7L, 5L)\n    Tuple!(long, long)(1L, 2L)\n    \n*/\n\
    Tuple!(long, long) divideAndRemainder(long x, long y) \n{\n    return tuple(x\
    \ / y, x % y);\n}\n/*\nCheck if x is even\n    >>> isEven(3L)\n    false\n   \
    \ >>> isEven(4L)\n    true\n    >>> isEven(5L)\n    false\n    >>> isEven(6L)\n\
    \    true\n    >>> isEven(7L)\n    false\n    \n*/\nunittest\n{\n    alias candidate\
    \ = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L)\
    \ == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L)\
    \ == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163938
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nCalculate the sum of a list of numbers\
    \ xs\n    >>> sum([2L, 3L, 5L])\n    10L\n    >>> sum([1L, 1L, 1L, 1L, 1L])\n\
    \    5L\n*/\nlong sum(std.range.R) xs) \n{\n    long result = 0L;\n    foreach\
    \ (x; xs) \n    {\n        result += x;\n    }\n    return result;\n}\n/*\nConcatenate\
    \ a list of strings xs\n    >>> cat([\"a\", \"b\", \"c\"])\n    \"abc\"\n    >>>\
    \ cat([\"hello, \", \"world\"])\n    \"hello, world\"\n*/\nstring cat(std.range.R)\
    \ xs) \n{\n    string result = \"\";\n    foreach (x; xs) \n    {\n        result\
    \ ~= x;\n    }\n    return result;\n}\n/*\nCapitalize a string x\n    >>> cap(\"\
    foo\")\n    \"Foo\"\n    >>> cap(\"bar\")\n    \"Bar\"\n*/\nstring cap(string\
    \ x) \n{\n    return to!string(x[0]).toUpper ~ x[1 .. $];\n}\n/*\nDrop the first\
    \ n elements of a list xs\n    >>> drop(2, [1, 2, 3, 4, 5])\n    [3, 4, 5]\n \
    \   >>> drop(3, [1, 2, 3, 4, 5])\n    [4, 5]\n*/\nstd.range.R) drop(size_t n,\
    \ std.range.R) xs) \n{\n    return xs[n .. $];\n}\n/*\nReverse a list xs\n   \
    \ >>> rev([1, 2, 3, 4, 5])\n    [5, 4, 3, 2, 1]\n    >>> rev([5, 5, 5, 5, 5])\n\
    \    [5, 5, 5, 5, 5]\n*/\nstd.range.R) rev(std.range.R) xs) \n{\n    return xs[$\
    \ .. 0];\n}\n/*\nCheck if\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp45i39z65.d(22): Error: semicolon expected following function declaration

    /tmp/tmp45i39z65.d(22): Error: no identifier for declarator `xs`

    /tmp/tmp45i39z65.d(22): Error: declaration expected, not `)`

    /tmp/tmp45i39z65.d(25): Error: declaration expected, not `foreach`

    /tmp/tmp45i39z65.d(25): Error: no identifier for declarator `xs`

    /tmp/tmp45i39z65.d(25): Error: declaration expected, not `)`

    /tmp/tmp45i39z65.d(28): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp45i39z65.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n\treturn x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    long sum = 0L;\n    long carryin = 0L;\n    long carryout\
    \ = 0L;\n    int i = 0;\n    while(i < 64)\n    {\n        carryout = (x[i] &\
    \ y[i]) | (x[i] & carryin) | (y[i] & carryin);\n        sum[i] = x[i] ^ y[i] ^\
    \ carryin;\n        carryin = carryout << 1;\n        i += 1;\n    }\n    return\
    \ sum;\n}\n/*\nGet the different bits between the two numbers\n    >>> different(2L,\
    \ 3L)\n    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0,\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L, 1L)\
    \ == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L, 3L)\
    \ == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L, 5L)\
    \ == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdntl1y_c.d(26): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdntl1y_c.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nFind the remainder of x divded by\
    \ y\n    >>> add(5L, 2L)\n    1L\n    >>> add(10L, 2L)\n    0L\n    \n*/\nlong\
    \ mod(long x, long y) \n{\n    return x % y;\n}\n/*\nFind the result of a number\
    \ raised to a power.\n    >>> pow(3L, 4L)\n    81L\n    >>> pow(2L, 1L)\n    2L\n\
    \    \n*/\nlong pow(long x, long y) \n{\n    return long(pow(to!double(x), to!double(y)));\n\
    }\n/*\nFind the sum of all numbers from 0 to n\n    >>> sum(3L)\n    6L\n    >>>\
    \ sum(5L)\n    15L\n    \n*/\nlong sum(long n) \n{\n    auto r = 0L;\n    foreach\
    \ (i; 0 .. n + 1) \n    {\n        r += i;\n    }\n    return r;\n}\n/*\nFind\
    \ the factorial of a number\n    >>> factorial(5L)\n    120L\n    >>> factorial(2L)\n\
    \    2L\n    \n*/\nlong factorial(long n) \n{\n    if (n < 2L) \n    {\n     \
    \   return 1L;\n    }\n    else \n    {\n        return n * factorial(n - 1L);\n\
    \    }\n}\n/*\nFind the value of the Fibonacci sequence at position n\n    >>>\
    \ fibonacci(5L)\n    5L\n    >>> fibonacci(3L)\n    2L\n    \n*/\nlong fibonacci(long\
    \ n) \n{\n    if (n < 2L) \n    {\n        return n;\n    }\n    else \n    {\n\
    \        return fibonacci(n - 1L) + fibonacci(n - 2L);\n    }\n}\n/*\nFind the\
    \ value of the nth prime number\n    >>> prime(5L)\n    11L\n    >>> prime(1L)\n\
    \    2L\n    \n*/\nlong prime(long\nunittest\n{\n    alias candidate = add;\n\n\
    \    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbeniw0gb.d(103): Error: found `unittest` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbeniw0gb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n    0L\n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nModulo two numbers x and y\n    >>>\
    \ modulo(2L, 3L)\n    2L\n    >>> modulo(5L, 7L)\n    5L\n*/\nlong modulo(long\
    \ x, long y) \n{\n    return x % y;\n}\n/*\nCheck if 2 long values are equal or\
    \ not\n    >>> isEqual(2L, 3L)\n    false\n    >>> isEqual(5L, 5L)\n    true\n\
    */\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) ==\
    \ 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L, 3L) ==\
    \ 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L, 5L) ==\
    \ 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163938
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n \n/*\nMultiply two numbers x and y\n\
    \    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong\
    \ multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nSubtract two numbers\
    \ x and y\n    >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n\
    */\nlong subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nDivide two numbers\
    \ x and y\n    >>> divide(2L, 3L)\n    0L\n    >>> divide(5L, 7L)\n    0L\n*/\n\
    long divide(long x, long y) \n{\n    if (y == 0L) \n    {\n        throw new DivideByZeroException(\"\
    Division by zero\");\n    }\n    return x / y;\n}\nunittest\n{\n    alias candidate\
    \ = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L)\
    \ == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L)\
    \ == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpccxh0w4q.d(49): Error: undefined identifier `DivideByZeroException`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpccxh0w4q.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n// Tests\nimport std.stdio;\nimport std.assert;\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n\
    \    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n\
    \    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp30zeydxz.d(17): Error: identifier expected following `package`

    /tmp/tmp30zeydxz.d(17): Error: `;` expected

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp30zeydxz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nProvide the base 2 logarithm of x\n\
    \    >>> log2(8L)\n    3L\n    >>> log2(7L)\n    2L\n    \n*/\nlong log2(long\
    \ x) \n{\n    return (long) ceil(log2(x));\n}\n/*\nProvide the minimum value of\
    \ x and y\n    >>> min(3L, 4L)\n    3L\n    >>> min(4L, 3L)\n    3L\n    \n*/\n\
    long min(long x, long y) \n{\n    return (x < y) ? x : y;\n}\n/*\nProvide the\
    \ minimum of a tuple of n values.\n    >>> min(1L, 2L, 3L)\n    1L\n    >>> min(2L,\
    \ 3L, 1L)\n    1L\n    \n*/\nlong min(ref Tuple!(long[]) x) \n{\n    return min(x.expand);\n\
    }\n/*\nCalculate the power of a number x^y.\n    >>> pow(2L, 3L)\n    8L\n   \
    \ >>> pow(2L, 4L)\n    16L\n    \n*/\nlong pow(long x, long y) \n{\n    return\
    \ (long) pow(x, y);\n}\n/*\nProvide the maximum value of x and y\n    >>> max(3L,\
    \ 4L)\n    4L\n    >>> max(4L, 3L)\n    4L\n    \n*/\nlong max(long x, long y)\
    \ \n{\n    return (x > y) ? x : y;\n}\n/*\nProvide the maximum of a tuple of n\
    \ values.\n    >>> max(1L, 2L, 3L)\n    3L\n    >>> max(2L, 3L, 1L)\n    3L\n\
    \    \n*/\nlong max(ref Tuple!(long[]) x) \n{\n    return max(x.expand);\n}\n\
    /*\nGenerate a random value between min and max.\n    >>> import std.random;\n\
    \    >>> import std.range;\n    >>> minmax(1L, 5L\nunittest\n{\n    alias candidate\
    \ = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L)\
    \ == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L)\
    \ == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpeyrul6f_.d(25): Error: C style cast illegal, use `cast(long)ceil(log2(x))`

    /tmp/tmpeyrul6f_.d(61): Error: C style cast illegal, use `cast(long)pow(x, y)`

    /tmp/tmpeyrul6f_.d(87): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeyrul6f_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n    >>> add(2,\
    \ 3)\n    5\n    >>> add(5, 7)\n    12\n    \n*/\nunittest\n{\n    alias candidate\
    \ = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L)\
    \ == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L)\
    \ == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163938
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n//[LongTuple(2L, 3L)];\n//[LongTuple(5L,\
    \ 7L)];\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L, 1L)\
    \ == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L, 3L)\
    \ == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L, 5L)\
    \ == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163938
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> sub(2L, 3L)\n    -1L\n    >>> sub(5L, 7L)\n    -2L\n    \n*/\nlong sub(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> mul(2L, 3L)\n    6L\n    >>> mul(5L, 7L)\n    35L\n    \n*/\nlong mul(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ div(2L, 3L)\n    0L\n    >>> div(5L, 7L)\n    0L\n    \n*/\nlong div(long x,\
    \ long y) \n{\n    return x / y;\n}\n/*\nMod two numbers x and y\n    >>> mod(2L,\
    \ 3L)\n    2L\n    >>> mod(5L, 7L)\n    5L\n    \n*/\nlong mod(long x, long y)\
    \ \n{\n    return x % y;\n}\n/*\nIs x less than y\n    >>> lt(2L, 3L)\n    true\n\
    \    >>> lt(5L, 7L)\n    true\n    \n*/\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n\treturn x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nGenerate the sequence of Fibonacci\
    \ numbers\n    >>> fib(5L)\n    [0L, 1L, 1L, 2L, 3L]\n    >>> fib(10L)\n    [0L,\
    \ 1L, 1L, 2L, 3L, 5L, 8L, 13L, 21L, 34L]\n*/\nlong[] fib(long n) \n{\n    long[]\
    \ a = new long[n];\n    a[0] = 0L;\n    a[1] = 1L;\n    for (long i = 2L; i <\
    \ n; i++) {\n        a[i] = a[i - 1L] + a[i - 2L];\n    }\n    return a;\n}\n\
    /*\nCompute the factorial of a non-negative integer\n    >>> factorial(4L)\n \
    \   24L\n    >>> factorial(10L)\n    3628800L\n*/\nlong factorial(long n) \n{\n\
    \    if (n == 0L) {\n        return 1L;\n    }\n    else {\n        return n *\
    \ factorial(n - 1L);\n    }\n}\n/*\nCompute the square root of a non-negative\
    \ real number using Newton's method.\n    >>> square_root(1.0)\n    1.0\n    >>>\
    \ square_root(2.0)\n    1.414213562373095\n    >>> square_root(3.0)\n    1.732050807568877\n\
    */\ndouble square_root(double x) \n{\n    double guess = 1.0;\n    for (long i\
    \ = 0L; i < 20L; i++) {\n        guess = (guess + x / guess) / 2.0;\n    }\n \
    \   return guess;\n}\n/*\nGenerate a vector of evenly spaced numbers over a specified\
    \ interval.\n    >>> linspace(0.0, 1.0, 10L)\n    [0.0, 0.1111111111111111, 0.2222222222222222,\
    \ 0.3333333333333333, 0.4444444444444444, 0.555555555555\nunittest\n{\n    alias\
    \ candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbpyb9zcn.d(65): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbpyb9zcn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n   long result = x + y;\n   return result;\n}\n/*\nx^2 = sqrt(x)\n\
    \    >>> square(2L)\n    4L\n    >>> square(4L)\n    16L\n    \n*/\nlong square(long\
    \ x) \n{\n   long result = x * x;\n   return result;\n}\n/*\nx^3 = cbrt(x)\n \
    \   >>> cube(2L)\n    8L\n    >>> cube(4L)\n    64L\n    \n*/\nlong cube(long\
    \ x) \n{\n   long result = x * x * x;\n   return result;\n}\n/*\nFind the maximum\
    \ of a set of values\n    >>> maximum([2L, 3L, 4L])\n    4L\n    >>> maximum([3L,\
    \ 8L, 1L])\n    8L\n    \n*/\nlong maximum(long[] xs) \n{\n   long result = xs[0];\n\
    \   for (long i = 1; (i < xs.length); i++)\n   {\n      if ((xs[i] > result))\n\
    \      {\n         result = xs[i];\n      }\n   }\n   return result;\n}\n/*\n\
    Find the minimum of a set of values\n    >>> minimum([2L, 3L, 4L])\n    2L\n \
    \   >>> minimum([3L, 8L, 1L])\n    1L\n    \n*/\nlong minimum(long[] xs) \n{\n\
    \   long result = xs[0];\n   for (long i = 1; (i < xs.length); i++)\n   {\n  \
    \    if ((xs[i] < result))\n      {\n         result = xs[i];\n      }\n   }\n\
    \   return result;\n}\n/*\nFind the sum of a set of values\n    >>> sum([2L, 3L,\
    \ 4L])\n    9L\n    >>> sum([3L, 8L, 1L])\n    12L\n    \n*/\nlong sum(long[]\
    \ xs) \n{\n   long result = 0L;\n   for (long x : xs)\n   {\n      result = (result\
    \ + x);\n   }\n\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6i7z40le.d(93): Error: semicolon expected, not `:`

    /tmp/tmp6i7z40le.d(93): Error: expression expected, not `:`

    /tmp/tmp6i7z40le.d(93): Error: found `xs` when expecting `;` following `for` condition

    /tmp/tmp6i7z40le.d(98): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6i7z40le.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n    in(x, y) out(result) \n{\n    long result = x + y;\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdoxacnwo.d(11): Error: function `tmpdoxacnwo.add` `in` and `out`
    contracts can only appear without a body when they are virtual interface functions
    or abstract

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdoxacnwo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n    \n*/\n\
    long multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers\
    \ x and y\n    >>> divide(9L, 3L)\n    3L\n    >>> divide(7L, 5L)\n    1L\n  \
    \  \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\nExponentiate\
    \ x by y\n    >>> exponentiate(2L, 3L)\n    8L\n    >>> exponentiate(5L, 7L)\n\
    \    78125L\n    \n*/\nlong exponentiate(long x, long y) \n{\n    return pow(x,\
    \ y);\n}\n/*\nFind the square root of x\n    >>> squareRoot(4L)\n    2L\n    >>>\
    \ squareRoot(9L)\n    3L\n    \n*/\nlong squareRoot(long x) \n{\n    return sqrt(x);\n\
    }\n/*\nFind the square of x\n    >>> square(4L)\n    16L\n    >>> square(9L)\n\
    \    81L\n    \n*/\nlong square(long x) \n{\n    return pow(x, 2L);\n}\n/*\nCalculate\
    \ the hypotenuse of a right triangle with sides of length x and y\n    >>> hypotenuse(3L,\
    \ 4L)\n    5L\n    >>> hypotenuse(5L, 12L)\n    13L\n    \n*/\nlong hypotenuse(long\
    \ x, long y) \n{\n    return hypot(x, y);\n}\n/*\nDivide two numbers x and y and\
    \ return the remainder\n    >>> remainder(9L, 3L)\n    0L\n    >>> remainder(7L,\
    \ 5L)\n    2L\n    \n*/\nlong remainder(long x, long y) \n{\n    return x % y;\n\
    }\n/*\nReturn the absolute value of x\n    >>> absoluteValue(-4L)\n    4L\n  \
    \ \nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) ==\
    \ 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L, 3L) ==\
    \ 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L, 5L) ==\
    \ 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4mm2srsf.d(99): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4mm2srsf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    long result = 0L;\n    long carry = 0L;\n    long x_i, y_i,\
    \ b_i;\n    foreach (int i; 0 .. max(x.digitCount, y.digitCount)) {\n        b_i\
    \ = (x[i] + y[i] + carry) % 2;\n        carry = (x[i] + y[i] + carry) / 2;\n \
    \       result[i] = b_i;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvscs2778.d(16): Error: undefined identifier `max`, did you mean
    function `fmax`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvscs2778.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n    return x + y;\nunittest\n{\n    alias candidate = add;\n\n\
    \    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqmf6ri43.d(12): Error: semicolon expected following function declaration

    /tmp/tmpqmf6ri43.d(12): Error: no identifier for declarator `x`

    /tmp/tmpqmf6ri43.d(12): Error: declaration expected, not `+`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqmf6ri43.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return (long)x + y;\n}\n/*\nMultiply two numbers x and y\n\
    \    >>> multiply(5L, 10L)\n    50L\n    >>> multiply(1L, 3L)\n    3L\n*/\nlong\
    \ multiply(long x, long y) \n{\n    return (long)x * y;\n}\n/*\nDivide two numbers\
    \ x and y\n    >>> divide(12L, 4L)\n    3L\n    >>> divide(24L, 3L)\n    8L\n\
    */\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) ==\
    \ 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L, 3L) ==\
    \ 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L, 5L) ==\
    \ 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkq89w70y.d(13): Error: C style cast illegal, use `cast(long)x`

    /tmp/tmpkq89w70y.d(24): Error: C style cast illegal, use `cast(long)x`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkq89w70y.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    long z = x + y;\n    return z;\n}\n/*\nDivide two numbers\
    \ x and y\n*/\ndouble divide(double x, double y)\n{\n    double z = x / y;\n \
    \   return z;\n}\n/*\nMultiply two numbers x and y\n*/\nlong multiply(long x,\
    \ long y)\n{\n    long z = x * y;\n    return z;\n}\n/*\nSubtract two numbers\
    \ x and y\n*/\nlong subtract(long x, long y)\n{\n    long z = x - y;\n    return\
    \ z;\n}\n/*\nA function to convert a string number to a double\n    >>> strToDouble(\"\
    1.2\")\n    1.2\n*/\ndouble strToDouble(string s)\n{\n    auto d = to!double(s);\n\
    \    return d;\n}\n/*\nA function to convert a string number to a long\n    >>>\
    \ strToLong(\"1\")\n    1L\n*/\nlong strToLong(string s)\n{\n    auto l = to!long(s);\n\
    \    return l;\n}\n/*\nA function to convert a string number to an int\n    >>>\
    \ strToInt(\"1\")\n    1\n*/\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnj88qr8j.d(47): Error: template instance `to!double` template `to`
    is not defined, did you mean No?

    /tmp/tmpnj88qr8j.d(57): Error: template instance `to!long` template `to` is not
    defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnj88qr8j.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \nin\n    assert(is(typeof(x + y) == long));\nout\n    assert(is(typeof(result)\
    \ == long));\nbody\n    return x + y;\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk4lwefpu.d(13): Error: statement expected to be `{ }`, not `assert`

    /tmp/tmpk4lwefpu.d(15): Error: found `assert` when expecting `(`

    /tmp/tmpk4lwefpu.d(15): Error: `(identifier) { ... }` or `(identifier; expression)`
    following `out` expected, not `(`

    /tmp/tmpk4lwefpu.d(15): Error: found `is` when expecting `)`

    /tmp/tmpk4lwefpu.d(15): Error: statement expected to be `{ }`, not `(`

    /tmp/tmpk4lwefpu.d(15): Error: found `)` when expecting `.` following long

    /tmp/tmpk4lwefpu.d(15): Error: found `)` when expecting identifier following `long`.

    /tmp/tmpk4lwefpu.d(15): Error: found `;` when expecting `)`

    /tmp/tmpk4lwefpu.d(16): Error: found `body` when expecting `;` following statement

    /tmp/tmpk4lwefpu.d(17): Error: declaration expected, not `return`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk4lwefpu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nFibonacci numbers up to n\n    >>>\
    \ fibonacci(1L)\n    [1L]\n    >>> fibonacci(10L)\n    [1L, 1L, 2L, 3L, 5L, 8L,\
    \ 13L, 21L, 34L, 55L]\n    >>> fibonacci(0L)\n    []\n*/\nList!long fibonacci(long\
    \ n) \n{\n    auto result = List!long();\n    while (n > 0) \n    {\n        if\
    \ (result.length < 2) \n        {\n            result.insertBack(1L);\n      \
    \  }\n        else \n        {\n            result.insertBack(result[$ - 1] +\
    \ result[$ - 2]);\n        }\n        n--;\n    }\n    return result;\n}\n/*\n\
    Return the n'th prime number\n    >>> nthPrime(2L)\n    3L\n    >>> nthPrime(6L)\n\
    \    13L\n*/\nlong nthPrime(long n) \n{\n    long primesFound = 0L;\n    long\
    \ x = 2L;\n    while (true) \n    {\n        if (isPrime(x)) \n        {\n   \
    \         primesFound++;\n            if (primesFound == n) \n            {\n\
    \                return x;\n            }\n        }\n        x++;\n    }\n}\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n\
    \    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n\
    \    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp48mofn87.d(35): Error: template instance `List!long` template `List`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp48mofn87.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nadd(x: long, y: long) -> long;\n/*\nSquare\
    \ a number x\n    >>> square(3L)\n    9L\n*/\nlong square(long x) \n{\n    return\
    \ x * x;\n}\nsquare(x: long) -> long;\n/*\nFind the minimum value in a container\n\
    \    >>> min(1L, 2L, 3L)\n    1L\n    >>> min(3L, 2L, 1L)\n    1L\n*/\nlong min(long...\
    \ xs) \n{\n    long minimum = xs[0];\n    for (auto x : xs) \n    {\n        if\
    \ (x < minimum) \n        {\n            minimum = x;\n        }\n    }\n    return\
    \ minimum;\n}\nmin(xs: long[]) -> long;\n/*\nFind the maximum value in a container\n\
    \    >>> max(1L, 2L, 3L)\n    3L\n    >>> max(3L, 2L, 1L)\n    3L\n*/\nlong max(long...\
    \ xs) \n{\n    long maximum = xs[0];\n    for (auto x : xs) \n    {\n        if\
    \ (x > maximum) \n        {\n            maximum = x;\n        }\n    }\n    return\
    \ maximum;\n}\nmax(xs: long[]) -> long;\n/*\nTake the absolute value of a number\n\
    \    >>> abs(-3L)\n    3L\n    >>> abs(3L)\n    3L\n*/\nlong abs(long x) \n{\n\
    \    return x < 0 ? -x : x;\n}\nabs(x: long) -> long;\n/*\nSum the elements of\
    \ a container\n    >>> sum(1L, 2L, 3L)\n    6L\n    >>> sum(1L, 2L, 3L, 4L)\n\
    \    10L\n*/\nlong sum(long... xs) \n{\n    long total = 0;\n    for (auto x :\
    \ xs) \n    {\n        total += x;\n    }\n    return total;\n}\nsum(xs: long[])\
    \ -> long;\n/*\nRaise\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwfmszc6o.d(15): Error: unexpected `(` in declarator

    /tmp/tmpwfmszc6o.d(15): Error: found `:` when expecting `)`

    /tmp/tmpwfmszc6o.d(15): Error: no identifier for declarator `add(x)`

    /tmp/tmpwfmszc6o.d(15): Error: semicolon expected following function declaration

    /tmp/tmpwfmszc6o.d(15): Error: no identifier for declarator `long`

    /tmp/tmpwfmszc6o.d(15): Error: declaration expected, not `,`

    /tmp/tmpwfmszc6o.d(25): Error: unexpected `(` in declarator

    /tmp/tmpwfmszc6o.d(25): Error: found `:` when expecting `)`

    /tmp/tmpwfmszc6o.d(25): Error: no identifier for declarator `square(x)`

    /tmp/tmpwfmszc6o.d(25): Error: semicolon expected following function declaration

    /tmp/tmpwfmszc6o.d(25): Error: no identifier for declarator `long`

    /tmp/tmpwfmszc6o.d(25): Error: declaration expected, not `)`

    /tmp/tmpwfmszc6o.d(33): Error: found `xs` when expecting `)`

    /tmp/tmpwfmszc6o.d(33): Error: semicolon expected following function declaration

    /tmp/tmpwfmszc6o.d(33): Error: declaration expected, not `)`

    /tmp/tmpwfmszc6o.d(36)'
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \nin {\n\tassert(x >= 0L);\n\tassert(y >= 0L);\n}\nout(z) {\n\tassert(z\
    \ == x + y);\n}\ndo {\n\tlong z = x + y;\n\tz;\n}\nunittest\n{\n    alias candidate\
    \ = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L)\
    \ == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L)\
    \ == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqb8_2z6n.d(21): Error: `z` has no effect

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqb8_2z6n.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n\treturn x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    long z = x + y;\n    return z;\n}\n/*\nSubtract two numbers\
    \ x and y\n    >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\n\
    \    \n*/\nlong subtract(long x, long y) \n{\n    long z = x - y;\n    return\
    \ z;\n}\n/*\nMultiply two numbers x and y\n    >>> multiply(2L, 3L)\n    6L\n\
    \    >>> multiply(5L, 7L)\n    35L\n    \n*/\nlong multiply(long x, long y) \n\
    {\n    long z = x * y;\n    return z;\n}\n/*\nDivide two numbers x and y\n   \
    \ >>> divide(4L, 2L)\n    2L\n    >>> divide(5L, 2L)\n    2L\n    >>> divide(7L,\
    \ 2L)\n    3L\n    \n*/\nlong divide(long x, long y) \n{\n    long z = x / y;\n\
    \    return z;\n}\n/*\nDivide two numbers x and y and return the result as a float\n\
    \    >>> divide_float(4L, 2L)\n    2.0f\n    >>> divide_float(5L, 2L)\n    2.5f\n\
    \    >>> divide_float(7L, 2L)\n    3.5f\n    \n*/\nfloat divide_float(long x,\
    \ long y) \n{\n    float z = cast(float) x / cast(float) y;\n    return z;\n}\n\
    /*\nRound a number to the nearest integer\n    >>> round(1.1f)\n    1L\n    >>>\
    \ round(1.4f)\n    1L\n    >>> round(1.5f)\n    2L\n    >>> round(1.6f)\n    2L\n\
    \    >>> round(1.9f)\n    2L\n    \n*/\nlong round(float x) \n{\n    long z =\
    \ cast(long) floor(x + 0.5f);\n    return z;\n}\n/*\nGet the absolute value of\
    \ a number\n    >>> abs(5L)\n   \nunittest\n{\n    alias candidate = add;\n\n\
    \    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgptmywwm.d(91): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgptmywwm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n    body\n    long z = x + y;\n    return z;\nend\nunittest\n{\n\
    \    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwzusfr9k.d(13): Error: statement expected to be `{ }`, not `long`

    /tmp/tmpwzusfr9k.d(14): Error: declaration expected, not `return`

    /tmp/tmpwzusfr9k.d(16): Error: no identifier for declarator `end`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwzusfr9k.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nMultiple two numbers x and y\n   \
    \ >>> mul(2L, 3L)\n    6L\n    >>> mul(5L, 7L)\n    35L\n*/\nlong mul(long x,\
    \ long y) \n{\n    return x * y;\n}\n/*\nThis function will calculate sum of all\
    \ elements of the list\n    >>> l = [1L, 2L, 3L, 4L]\n    >>> sumList(l)\n   \
    \ 10L\n    >>> l = [4L, 3L, 2L, 1L]\n    >>> sumList(l)\n    10L\n*/\nlong sumList(ref\
    \ long[] l)\n{\n    long res = 0L;\n    for (int i = 0; i < l.length; i++)\n \
    \   {\n        res += l[i];\n    }\n    return res;\n}\n/*\nThis function will\
    \ return largest number of the list\n    >>> l = [1L, 2L, 3L, 4L]\n    >>> maxElement(l)\n\
    \    4L\n    >>> l = [4L, 3L, 2L, 1L]\n    >>> maxElement(l)\n    4L\n*/\nlong\
    \ maxElement(ref long[] l)\n{\n    long max = 0L;\n    for (int i = 0; i < l.length;\
    \ i++)\n    {\n        if (l[i] > max)\n        {\n            max = l[i];\n \
    \       }\n    }\n    return max;\n}\n/*\nThis function will return minimum number\
    \ of the list\n    >>> l = [1L, 2L, 3L, 4L]\n    >>> minElement(l)\n    1L\n \
    \   >>> l = [4L, 3L, 2L, 1L]\n    >>> minElement(l)\n    1L\n*/\nlong minElement(ref\
    \ long[] l)\n{\n    long min = 1000000L;\n    for (int i = 0; i < l.length; i++)\n\
    \    {\n        if (l[i] < min)\n        {\n            min = l[i];\n        }\n\
    \    }\n    return min;\n}\n/*\nThis function\nunittest\n{\n    alias candidate\
    \ = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L)\
    \ == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L)\
    \ == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsdgg4rpw.d(86): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsdgg4rpw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n    {\n    return x + y;\n    }\n/*\nMultiply two numbers x and\
    \ y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\n\
    long multiply(long x, long y) \n    {\n    return x * y;\n    }\n/*\nDivide two\
    \ numbers x and y\n    >>> divide(6L, 3L)\n    2L\n    >>> divide(5L, 7L)\n  \
    \  0L\n*/\nlong divide(long x, long y) \n    {\n    return x / y;\n    }\n/*\n\
    Subtract two numbers x and y\n    >>> subtract(2L, 3L)\n    -1L\n    >>> subtract(5L,\
    \ 7L)\n    -2L\n*/\nlong subtract(long x, long y) \n    {\n    return x - y;\n\
    \    }\n/*\nFind the maximum of two numbers x and y\n    >>> max(2L, 3L)\n   \
    \ 3L\n    >>> max(5L, 7L)\n    7L\n*/\nlong max(long x, long y) \n    {\n    return\
    \ Math.max(x, y);\n    }\n/*\nFind the minimum of two numbers x and y\n    >>>\
    \ min(2L, 3L)\n    2L\n    >>> min(5L, 7L)\n    5L\n*/\nlong min(long x, long\
    \ y) \n    {\n    return Math.min(x, y);\n    }\n/*\nTake a number x and return\
    \ its absolute value\n    >>> abs(0L)\n    0L\n    >>> abs(-2L)\n    2L\n    >>>\
    \ abs(2L)\n    2L\n*/\nlong abs(long x) \n    {\n    return Math.abs(x);\n   \
    \ }\n/*\nFloor a number x, dropping the fractional part\n    >>> floor(0.0)\n\
    \    0L\n    >>> floor(0.1)\n    0L\n    >>> floor(0.9)\n    0L\n    >>> floor(1.0)\n\
    \    1L\n    >>> floor(1.1)\n    1L\n\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ty2s5hc.d(83): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ty2s5hc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    if (x == 0L) {\n        return y;\n    } else {\n      \
    \  return add(x - 1L, y + 1L);\n    }\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163938
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(7L, 5L)\n    2L\n    >>> subtract(12L, 2L)\n    10L\n    \n*/\n\
    long subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(21L, 7L)\n    3L\n    >>> divide(20L, 2L)\n\
    \    10L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Return the remainder of x divided by y\n    >>> modulo(11L, 3L)\n    2L\n    >>>\
    \ modulo(10L, 2L)\n    0L\n    \n*/\nlong modulo(long x, long y) \n{\n    return\
    \ x % y;\n}\n/*\nReturn x raised to the power of y\n    >>> power(3L, 2L)\n  \
    \  9L\n    >>> power(2L, 3L)\n    8L\n    \n*/\nlong power(long x, long y) \n\
    {\n    return to!long(pow(to!double(x), to!double(y)));\n}\n/*\nAdd two numbers\
    \ x and y\n    >>> add(2U, 3U)\n    5U\n    >>> add(5U, 7U)\n    12U\n    \n*/\n\
    uint add(uint x, uint y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x\
    \ and y\n    >>> subtract(7U, 5U)\n    2U\n    >>> subtract(12U, 2U)\n    10U\n\
    \    \n*/\nuint subtract(uint x, uint y) \n{\n    return x - y;\n}\n/*\nMultiply\
    \ two numbers x and y\n    >>> multiply(\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk6dafl8p.d(99): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk6dafl8p.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n// Add two numbers with template\n/*\n\
    Add two numbers x and y\n    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n  \
    \  12L\n    \n*/\nauto add(T)(T x, T y) \n{\n    return x + y;\n}\n// Add two\
    \ numbers with default type\n/*\nAdd two numbers x and y\n    >>> add(2L, 3L)\n\
    \    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nauto add(T = long)(T x, T y)\
    \ \n{\n    return x + y;\n}\n// Check if a number is between two other numbers\n\
    /*\nCheck whether x is between y and z\n    >>> between(3L, 1L, 5L)\n    true\n\
    \    >>> between(3L, 5L, 1L)\n    false\n    >>> between(3L, 1L, 1L)\n    false\n\
    */\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) ==\
    \ 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L, 3L) ==\
    \ 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L, 5L) ==\
    \ 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163938
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(7L, 5L)\n    2L\n    >>> subtract(10L, 3L)\n    7L\n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(5L, 2L)\n    10L\n    >>> multiply(7L, 3L)\n    21L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y. Throw\
    \ an IllegalArgumentException if y is zero.\n    >>> divide(6L, 2L)\n    3L\n\
    \    >>> divide(12L, 4L)\n    3L\n    >>> divide(3L, 7L)\n    0L\n    >>> divide(3L,\
    \ 0L)\n    Traceback (most recent call last):\n        ...\n    IllegalArgumentException:\
    \ divide by zero\n*/\nlong divide(long x, long y)\n{\n    if (y == 0L)\n    {\n\
    \        throw new IllegalArgumentException(\"divide by zero\");\n    }\n    return\
    \ x / y;\n}\n/*\nNegate the number x\n    >>> negate(7L)\n    -7L\n    >>> negate(-3L)\n\
    \    3L\n*/\nlong negate(long x)\n{\n    return -x;\n}\n/*\nFind the absolute\
    \ value of the number x\n    >>> absolute(-3L)\n    3L\n    >>> absolute(5L)\n\
    \    5L\n*/\nlong absolute(long x)\n{\n    return x < 0L ? -x : x;\n}\n/*\nFind\
    \ the minimum of x and y\n    >>> minimum(5L, 2L)\n    2L\n    >>> minimum(3L,\
    \ 7L)\n    3L\n*/\nlong minimum(long x, long y)\n{\n    return x < y ? x : y;\n\
    }\n/*\nFind the maximum of x and y\n    >>> maximum(2L, 5L)\n    5L\n    >>> maximum(3L,\
    \ 7L)\n   \nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp81twvq2b.d(91): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp81twvq2b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n\treturn x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    long sum = 0L;\n    long car = 0L;\n    long i = 0L;\n \
    \   while ((x != 0L) || (y != 0L)) {\n        sum = ((x & y) | (sum & (x | y)))\
    \ << i;\n        car = (x & y) << (i + 1L);\n        x = x >> 1L;\n        y =\
    \ y >> 1L;\n        i = i + 1L;\n    }\n    return (sum | car);\n}\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpuq2ogkbq.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ddd]

    ??:? void tmpuq2ogkbq.__unittest_L25_C1() [0x427aae]

    ??:? void tmpuq2ogkbq.__modtest() [0x427b60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fab5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]

    ??:? runModuleUnitTests [0x42b8d9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163938
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract y from x\n    >>> subtract(2L,\
    \ 3L)\n    -1L\n    >>> subtract(5L, 7L)\n    -2L\nunittest\n{\n    alias candidate\
    \ = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L)\
    \ == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L)\
    \ == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2756gxz7.d(15): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2756gxz7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nCalculate factorial of n\n    >>>\
    \ factorial(0L)\n    1L\n    >>> factorial(1L)\n    1L\n    >>> factorial(5L)\n\
    \    120L\n*/\nlong factorial(long n) \n{\n    if (n < 0L) \n    {\n        return\
    \ 0L;\n    }\n    else if (n == 0L) \n    {\n        return 1L;\n    }\n    else\
    \ \n    {\n        return mul(n, factorial(n - 1L));\n    }\n}\n/*\nMultiply two\
    \ numbers x and y\n    >>> mul(2L, 3L)\n    6L\n    >>> mul(5L, 7L)\n    35L\n\
    */\nlong mul(long x, long y) \n{\n    return x * y;\n}\n/*\nSubtract two numbers\
    \ x and y\n    >>> sub(2L, 3L)\n    -1L\n    >>> sub(5L, 7L)\n    -2L\n*/\nlong\
    \ sub(long x, long y) \n{\n    return x - y;\n}\n/*\nA struct that stores an email\
    \ address.\n*/\nstruct EmailAddress(string address, string domain) \n{\n    string\
    \ address;\n    string domain;\n}\n/*\nA struct that stores a person's name and\
    \ email address.\n*/\nstruct Person(string firstName, string lastName, EmailAddress\
    \ email) \n{\n    string firstName;\n    string lastName;\n    EmailAddress email;\n\
    }\n/*\nGet a person's full name\n    >>> getFullName(Person(\"John\", \"Doe\"\
    , EmailAddress(\"john\", \"example.com\")))\n    \"John Doe\"\n*/\nstring getFullName(Person\
    \ person) \n{\n    return std.string.join([\" \", person.firstName, person.lastName]);\n\
    }\n/*\nGet a person's email address\n    >>> getEmailAddress(Person(\"John\",\
    \ \"Doe\", EmailAddress(\"john\", \"example.com\")))\n    \"john@example.com\"\
    \n*/\nstring getEmailAddress(Person person) \n{\n    return std\nunittest\n{\n\
    \    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppbuxxs0l.d(95): Error: found `unittest` when expecting `;` following
    `return` statement

    /tmp/tmppbuxxs0l.d(105): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppbuxxs0l.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nDetermines if a given number x is\
    \ less than y\n    >>> isLessThan(2L, 3L)\n    True\n    >>> isLessThan(3L, 2L)\n\
    \    False\n    >>> isLessThan(2L, 2L)\n    False\n*/\nunittest\n{\n    alias\
    \ candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163938
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> sub(5L, 3L)\n    2L\n    >>> sub(7L, 5L)\n    2L\n*/\nlong sub(long x, long\
    \ y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n    >>> mul(2L,\
    \ 3L)\n    6L\n    >>> mul(5L, 7L)\n    35L\n*/\nlong mul(long x, long y) \n{\n\
    \    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>> div(8L, 2L)\n \
    \   4L\n    >>> div(7L, 5L)\n    1L\n*/\nlong div(long x, long y) \n{\n    return\
    \ x / y;\n}\n/*\nGet remainder of dividing x by y\n    >>> mod(8L, 3L)\n    2L\n\
    \    >>> mod(7L, 5L)\n    2L\n*/\nlong mod(long x, long y) \n{\n    return x %\
    \ y;\n}\n/*\nGet the power of x by y\n    >>> pow(2L, 3L)\n    8L\n    >>> pow(5L,\
    \ 7L)\n    78125L\n*/\nlong pow(long x, long y) \n{\n    return pow(x, y);\n}\n\
    /*\nSquare root of x\n    >>> sqrt(9L)\n    3L\n    >>> sqrt(144L)\n    12L\n\
    */\nlong sqrt(long x) \n{\n    return sqrt(x);\n}\n/*\nGet the maximum value of\
    \ x and y\n    >>> max(4L, 2L)\n    4L\n    >>> max(5L, 7L)\n    7L\n*/\nlong\
    \ max(long x, long y) \n{\n    return max(x, y);\n}\n/*\nGet the minimum value\
    \ of x and y\n    >>> min(4L, 2L)\n    2L\n    >>> min(5L, 7L)\n    5L\n*/\nlong\
    \ min(long x, long y)\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk9rnhwni.d(100): Error: semicolon expected following function declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk9rnhwni.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nCheck if number is prime\n    >>>\
    \ is_prime(1L)\n    True\n    >>> is_prime(2L)\n    True\n    >>> is_prime(3L)\n\
    \    True\n    >>> is_prime(4L)\n    False\n    >>> is_prime(37L)\n    True\n\
    \    >>> is_prime(38L)\n    False\n*/\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163938
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n    in(x, y) out(ret)\n{\n    // local variables which are not\
    \ declared should not be instrumented\n    long z = x + y; \n    return z;\n}\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n\
    \    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n\
    \    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp88q3ccd3.d(11): Error: function `tmp88q3ccd3.add` `in` and `out`
    contracts can only appear without a body when they are virtual interface functions
    or abstract

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp88q3ccd3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nConvert celsius to fahrenheit\n  \
    \  >>> c_to_f(0.0)\n    32.0\n    >>> c_to_f(100.0)\n    212.0\n*/\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163938
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nDivide two numbers x and y\n*/\nlong\
    \ divide(long x, long y) \n{\n    return x / y;\n}\n/*\nMultiply two numbers x\
    \ and y\n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nSubtract\
    \ two numbers x and y\n*/\nlong subtract(long x, long y) \n{\n    return x - y;\n\
    }\n/*\nSquare a number x\n*/\nlong square(long x) \n{\n    return pow(x, 2L);\n\
    }\n/*\nFind the square root of a number x\n*/\nreal square_root(long x) \n{\n\
    \    return sqrt(cast(real)x);\n}\n/*\nMake an integer negative\n*/\nlong negative(long\
    \ x) \n{\n    return -x;\n}\n/*\nMake an integer positive\n*/\nlong positive(long\
    \ x) \n{\n    return +x;\n}\n/*\nFind the absolute value of an integer\n*/\nlong\
    \ absolute(long x) \n{\n    return abs(x);\n}\n/*\nFind the length of an integer\n\
    */\nlong len(long x) \n{\n    return x.stringof.length;\n}\n/*\nRound an integer\
    \ to the nearest integer\n*/\nlong round(long x) \n{\n    return round(cast(real)x);\n\
    }\n/*\nRound up an integer to the nearest integer\n*/\nlong ceiling(long x) \n\
    {\n    return ceil(cast(real)x);\n}\n/*\nRound down an integer to the nearest\
    \ integer\n*/\nlong floor(long x) \n{\n    return floor(cast(real)x);\n}\n/*\n\
    Raise an integer to the power of another integer\n*/\nlong power(long x, long\
    \ y) \n{\n    return pow(x, y);\n}\n/*\nFind the remainder of an integer divided\
    \ by another integer\n*/\nlong remainder(long x, long y) \n{\n    return x % y;\n\
    }\n/*\nFind the sign of an integer\n*/\nlong sign(long x) \n{\n    return sign\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n\
    \    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n\
    \    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5wo5p2cu.d(119): Error: found `unittest` when expecting `;` following
    `return` statement

    /tmp/tmp5wo5p2cu.d(129): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5wo5p2cu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSquare a number x\n    >>> square(2L)\n\
    \    4L\n    >>> square(3L)\n    9L\n*/\nlong square(long x) \n{\n    return x\
    \ * x;\n}\n/*\nCube a number x\n    >>> cube(2L)\n    8L\n    >>> cube(3L)\n \
    \   27L\n*/\nlong cube(long x) \n{\n    return x * x * x;\n}\n/*\nReturn the largest\
    \ value in a list of numbers \n    >>> max([2L, 3L, 4L])\n    4L\n    >>> max([2L,\
    \ 4L, 3L])\n    4L\n*/\nlong max(long[] xs) \n{\n    return reduce!max(xs);\n\
    }\n/*\nReturn the smallest value in a list of numbers \n    >>> min([2L, 3L, 4L])\n\
    \    2L\n    >>> min([2L, 4L, 3L])\n    2L\n*/\nlong min(long[] xs) \n{\n    return\
    \ reduce!min(xs);\n}\n/*\nCompute the distance between two points\n    >>> dist([0L,\
    \ 0L], [3L, 4L])\n    5L\n    >>> dist([0L, 0L], [1L, 1L])\n    sqrt(2L)\n*/\n\
    long dist(long[] a, long[] b) \n{\n    assert(a.length == b.length);\n    long\
    \ sum = 0L;\n    foreach (i, x; a)\n    {\n        sum += (x - b[i]) * (x - b[i]);\n\
    \    }\n    return cast(long) (sqrt(sum));\n}\n/*\nFind the sum of a list of numbers\n\
    \    >>> sum([2L, 3L, 4L])\n    9L\n    >>> sum([])\n    0L\n*/\nlong sum(long[]\
    \ xs) \n{\n    return reduce!add(xs);\n}\n/*\nCheck if a list of numbers is sorted\n\
    \    >>> isSorted([1L, 2L, 3L])\n    true\n    >>> isSorted([\nunittest\n{\n \
    \   alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpcrm4adsd.d(87): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcrm4adsd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nCheck if given year is a leap year\n\
    \    >>> leapYear(2000L)\n    True\n    >>> leapYear(2018L)\n    False\n    >>>\
    \ leapYear(2020L)\n    True\n*/\nunittest\n{\n    alias candidate = add;\n\n \
    \   assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n \
    \   assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163938
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract y from x\n    >>> subtract(2L,\
    \ 3L)\n    -1L\n    >>> subtract(2L, 4L)\n    -2L\n    \n*/\nlong subtract(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(2L, 4L)\n    8L\n    \n*/\nlong\
    \ multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide x by y\n    >>>\
    \ divide(6L, 3L)\n    2L\n    >>> divide(10L, 2L)\n    5L\n    \n*/\nlong divide(long\
    \ x, long y) \n{\n    return x / y;\n}\n/*\nModulo of x and y\n    >>> modulo(7L,\
    \ 3L)\n    1L\n    >>> modulo(7L, 4L)\n    3L\n    \n*/\nlong modulo(long x, long\
    \ y) \n{\n    return x % y;\n}\n/*\nRaise x to the power of y\n    >>> power(2L,\
    \ 3L)\n    8L\n    >>> power(2L, 4L)\n    16L\n    \n*/\nlong power(long x, long\
    \ y) \n{\n    return pow(x, y);\n}\n/*\nCompare x and y\n    >>> compare(1L, 2L)\n\
    \    -1\n    >>> compare(2L, 1L)\n    1\n    >>> compare(2L, 2L)\n    0\n    \n\
    */\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) ==\
    \ 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L, 3L) ==\
    \ 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L, 5L) ==\
    \ 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163938
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    35L\n*/\nlong multiply(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nGet the square of a number x\n   \
    \ >>> square(2L)\n    4L\n    >>> square(5L)\n    25L\n*/\nlong square(long x)\
    \ \n{\n    return x * x;\n}\n/*\nGet the floor of a number x\n    >>> floor(2.6L)\n\
    \    2L\n    >>> floor(5.3L)\n    5L\n*/\nlong floor(long x) \n{\n    return cast(long)floor(cast(double)x);\n\
    }\n/*\nGet the ceiling of a number x\n    >>> ceiling(2.6L)\n    3L\n    >>> ceiling(5.3L)\n\
    \    6L\n*/\nlong ceiling(long x) \n{\n    return cast(long)ceil(cast(double)x);\n\
    }\n/*\nTruncate a number x\n    >>> truncate(2.6L)\n    2L\n    >>> truncate(5.3L)\n\
    \    5L\n*/\nlong truncate(long x) \n{\n    return cast(long)trunc(cast(double)x);\n\
    }\n/*\nRound a number x\n    >>> round(2.4L)\n    2L\n    >>> round(5.5L)\n  \
    \  6L\n*/\nlong round(long x) \n{\n    return cast(long)round(cast(double)x);\n\
    }\n/*\nGet the sign of a number x\n    >>> sign(2L)\n    1L\n    >>> sign(-2L)\n\
    \    -1L\n    >>> sign(0L)\n    0L\n*/\nlong sign(long x) \n{\n    return sign(cast(double)x);\n\
    }\n/*\nGet the absolute value of a number x\n    >>> abs(-2L)\n    2L\n    >>>\
    \ abs(2L)\n    2L\n*/\nlong abs\nunittest\n{\n    alias candidate = add;\n\n \
    \   assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n \
    \   assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpu6n4t73g.d(102): Error: semicolon expected, not `unittest`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu6n4t73g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163938
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n\treturn x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n   return (x + y);\n}\n \n/*\nMultiply two numbers x and y\n\
    >>> multiply(2L, 3L)\n6L\n>>> multiply(5L, 7L)\n35L\n*/\nlong multiply(long x,\
    \ long y) \n{\n    return (x * y);\n}\n/*\nSquare a number x\n>>> square(2L)\n\
    4L\n>>> square(5L)\n25L\n*/\nlong square(long x) \n{\n    return (x * x);\n}\n\
    /*\nSubtract two numbers x and y\n>>> subtract(2L, 3L)\n-1L\n>>> subtract(5L,\
    \ 7L)\n-2L\n*/\nlong subtract(long x, long y) \n{\n    return (x - y);\n}\n/*\n\
    Divide two numbers x and y\n>>> divide(2L, 3L)\n0L\n>>> divide(5L, 7L)\n0L\n*/\n\
    long divide(long x, long y) \n{\n    return (x / y);\n}\n/*\nBase\n>>> base(2L,\
    \ 7L)\n128L\n>>> base(5L, 7L)\n3125L\n*/\nlong base(long x, long y) \n{\n    return\
    \ pow(x, y);\n}\n/*\nModulus\n>>> modulus(2L, 7L)\n2L\n>>> modulus(5L, 7L)\n5L\n\
    */\nlong modulus(long x, long y) \n{\n    return (x % y);\n}\n/*\nFloor Divide\n\
    >>> floordivide(2L, 7L)\n0L\n>>> floordivide(5L, 7L)\n0L\n*/\nlong floordivide(long\
    \ x, long y) \n{\n    return (x / y);\n}\n/*\nAbsolute\n>>> absolute(2L)\n2L\n\
    >>> absolute(-5L)\n5L\n*/\nlong absolute(long x) \n{\n    return abs(x);\n}\n\
    /*\nNegate\n>>> negate(2L)\n-2L\n>>> negate(-5L)\n5L\n*/\nlong negate(long x\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n\
    \    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n\
    \    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpo16r0i_y.d(112): Error: found `unittest` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo16r0i_y.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nAdd three numbers x, y and z\n   \
    \ >>> add(2L, 3L, 4L)\n    9L\n    >>> add(5L, 7L, 9L)\n    21L\nunittest\n{\n\
    \    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2yc0b000.d(15): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2yc0b000.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nunittest\n{\n    alias candidate =\
    \ add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) ==\
    \ 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) ==\
    \ 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5ijv36pq.d(15): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5ijv36pq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n\treturn x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n\treturn x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    // base case\n    if (y == 0L) {\n        return x;\n  \
    \  }\n    return add(x ^ y, (x & y) << 1L);\n}\n/*\nAdd two numbers x and y\n\
    \    >>> add_alt(2L, 3L)\n    5L\n    >>> add_alt(5L, 7L)\n    12L\n    \n*/\n\
    long add_alt(long x, long y) \n{\n    // base case\n    if (y == 0L) {\n     \
    \   return x;\n    }\n    long sum = x ^ y;\n    long carry = (x & y) << 1L;\n\
    \    return add_alt(sum, carry);\n}\n// long add_alt_1(long x, long y) \n// {\n\
    //     long sum = x ^ y;\n//     long carry = (x & y) << 1L;\n//     while (carry\
    \ != 0L) {\n//         long temp_sum = sum ^ carry;\n//         carry = (sum &\
    \ carry) << 1L;\n//         sum = temp_sum;\n//     }\n//     return sum;\n//\
    \ }\n// long multiply(long x, long y) \n// {\n//     long product = 0L;\n//  \
    \   for (long i = 0L; i < y; i++) {\n//         product = add(product, x);\n//\
    \     }\n//     return product;\n// }\n// long multiply_alt(long x, long y) \n\
    // {\n//     if (y == 0L) {\n//         return 0L;\n//     }\n//     return x\
    \ + multiply_alt(x, y - 1L);\n// }\n// long multiply_alt_1(long x, long y) \n\
    // {\n//     if (y == 0L) {\n//         return 0L;\n//     }\n//     long product\
    \ = multiply_alt_1(x, y >> 1L);\n//     product += product;\n//     if (y & 1L)\
    \ {\n//         product += x;\n//     }\n//     return product;\n// }\n// long\
    \ multiply_alt_2(long x, long y) \n// {\n\nunittest\n{\n    alias candidate =\
    \ add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) ==\
    \ 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) ==\
    \ 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163938
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\n    Multiply two numbers\n*/\nlong\
    \ mul(long x, long y) \n{\n    return x * y;\n}\nlong mulBy10(long x)\n{\n   \
    \ return x * 10;\n}\n/*\nAccepts variable number of arguments\n*/\nstring writeAll(T...)(T\
    \ args)\n{\n    string result = \"\";\n    foreach(arg; args)\n    {\n       \
    \ result ~= arg;\n    }\n    return result;\n}\n/*\n    Return the sum of all\
    \ values in a tuple\n*/\nlong sumAll(T...)(T t) \n{\n    static if (t.length ==\
    \ 0)\n    {\n        return 0;\n    }\n    else \n    {\n        long result =\
    \ 0;\n        foreach(x; t) \n        {\n            result += x;\n        }\n\
    \        return result;\n    }\n}\n/*\n    Template struct to hold value and a\
    \ label\n*/\ntemplate NamedValue(V, S)\n{\n    V value;\n    S label;\n}\n/*\n\
    \    Add two NamedValue's. \n    The label is the concatenation of both labels\n\
    */\nNamedValue!(V, S) add(NamedValue!(V, S) a, NamedValue!(V, S) b) \n{\n    return\
    \ NamedValue!(V, S)(a.value + b.value, a.label ~ b.label);\n}\n/*\n    Return\
    \ the max of two values\n*/\nlong getMax(long a, long b) \n{\n    if (a > b) \n\
    \    {\n        return a;\n    }\n    else \n    {\n        return b;\n    }\n\
    }\n/*\n    Return the min of two values\n*/\nlong getMin(long a, long b) \n{\n\
    \    if (a < b) \n    {\n        return a;\n    }\n    else \n    {\n        return\
    \ b;\n    }\n}\n/*\n    Return the first element of a tuple\n*/\nT getFirst(T...)(T\
    \ t) \n{\n    return t[0];\n}\n/*\nunittest\n{\n    alias candidate = add;\n\n\
    \    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmgkku6ro.d(108): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmgkku6ro.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nCalculate the absolute value of a\
    \ number\n    >>> absolute(-5L)\n    5L\n    >>> absolute(5L)\n    5L\n*/\nlong\
    \ absolute(long x)\n{\n    if (x < 0L)\n        return -x;\n    else\n       \
    \ return x;\n}\n/*\nCalculate the sign of a number\n    >>> sign(-5L)\n    -1L\n\
    \    >>> sign(5L)\n    1L\n    >>> sign(0L)\n    0L\n*/\nlong sign(long x)\n{\n\
    \    if (x < 0L)\n        return -1L;\n    else if (x > 0L)\n        return 1L;\n\
    \    else\n        return 0L;\n}\n/*\nCalculate the maximum of two numbers\n \
    \   >>> maximum(5L, 6L)\n    6L\n    >>> maximum(6L, 5L)\n    6L\n*/\nlong maximum(long\
    \ x, long y)\n{\n    if (x > y)\n        return x;\n    else\n        return y;\n\
    }\n/*\nCalculate the minimum of two numbers\n    >>> minimum(5L, 6L)\n    5L\n\
    \    >>> minimum(6L, 5L)\n    5L\n*/\nlong minimum(long x, long y)\n{\n    if\
    \ (x < y)\n        return x;\n    else\n        return y;\n}\n/*\nClamp a number\
    \ to a certain range\n    >>> clamp(10L, 5L, 15L)\n    10L\n    >>> clamp(25L,\
    \ 5L, 15L)\n    15L\n    >>> clamp(2L, 5L, 15L)\n    5L\n*/\nlong clamp(long x,\
    \ long lower, long upper)\n{\n    return maximum(minimum(x, upper), lower);\n\
    }\n/*\nCheck if a number is even\n    >>> isEven(2L)\n    true\n    >>> isEven(3L)\n\
    \    false\n*/\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163938
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n    pure nothrow nogc @nogc\n{\n    return x + y;\n}\n \n/*\nAdd\
    \ all numbers in a numeric range\n    >>> addRange(2L, 4L)\n    9L\n    >>> addRange(10L,\
    \ 15L)\n    75L\n    \n*/\nlong addRange(long x, long y) \n    pure nothrow nogc\
    \ @nogc\n{\n    if (x == y)\n        return x;\n    return x + addRange(x + 1L,\
    \ y);\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqbqug_wq.d(12): Error: semicolon expected following function declaration

    /tmp/tmpqbqug_wq.d(12): Error: no identifier for declarator `nogc`

    /tmp/tmpqbqug_wq.d(14): Error: declaration expected, not `return`

    /tmp/tmpqbqug_wq.d(26): Error: semicolon expected following function declaration

    /tmp/tmpqbqug_wq.d(26): Error: no identifier for declarator `nogc`

    /tmp/tmpqbqug_wq.d(28): Error: declaration expected, not `if`

    /tmp/tmpqbqug_wq.d(30): Error: declaration expected, not `return`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqbqug_wq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163938
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nAdd two vectors of numbers x and y.\n\
    \    >>> add_vectors([1L, 2L, 3L], [4L, 5L, 6L])\n    [5L, 7L, 9L]\n*/\nlong[]\
    \ add_vectors(long[] x, long[] y) \n{\n    enforce(x.length == y.length, \"vectors\
    \ are not the same length\");\n    long[] z = new long[x.length];\n    for (int\
    \ i = 0; i < x.length; i++) \n    {\n        z[i] = x[i] + y[i];\n    }\n    return\
    \ z;\n}\n/*\nMultiply a number by a scalar (number).\n    >>> scalar_multiply(3L,\
    \ 10L)\n    30L\n    >>> scalar_multiply(20L, 5L)\n    100L\n*/\nlong scalar_multiply(long\
    \ x, long scalar) \n{\n    return x * scalar;\n}\n/*\nMultiply a vector by a scalar\
    \ (number).\n    >>> vector_multiply([2L, 3L, 4L], 3L)\n    [6L, 9L, 12L]\n  \
    \  >>> vector_multiply([4L, 5L, 6L], 2L)\n    [8L, 10L, 12L]\n*/\nlong[] vector_multiply(long[]\
    \ x, long scalar) \n{\n    long[] z = new long[x.length];\n    for (int i = 0;\
    \ i < x.length; i++) \n    {\n        z[i] = x[i] * scalar;\n    }\n    return\
    \ z;\n}\n/*\nReturn the dot product of two vectors.\n    >>> dot_product([1L,\
    \ 2L, 3L], [4L, 5L, 6L])\n    32L\n    >>> dot_product([-1L, -2L, -3L], [-4L,\
    \ -5L, -6L])\n    32L\n*/\nlong dot_product(long[] x, long[] y) \n{\n    enforce(x\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n\
    \    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n\
    \    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpu3xdhmry.d(67): Error: found `unittest` when expecting `,`

    /tmp/tmpu3xdhmry.d(77): Error: found `void` when expecting `,`

    /tmp/tmpu3xdhmry.d(77): Error: found `{` when expecting `,`

    /tmp/tmpu3xdhmry.d(77): Error: expression expected, not `}`

    /tmp/tmpu3xdhmry.d(77): Error: found `End of File` when expecting `,`

    /tmp/tmpu3xdhmry.d(77): Error: found `End of File` when expecting `)`

    /tmp/tmpu3xdhmry.d(77): Error: found `End of File` when expecting `;` following
    statement

    /tmp/tmpu3xdhmry.d(77): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu3xdhmry.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163938
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nCheck whether X is even or not\n \
    \   >>> isEven(1L)\n    False\n    >>> isEven(2L)\n    True\n    >>> isEven(101L)\n\
    \    False\n*/\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163938
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n\treturn x + y;\n}\n/*\nCompute factorial of a number x\n  \
    \  >>> factorial(3L)\n    6L\n    >>> factorial(4L)\n    24L\n*/\nlong factorial(long\
    \ x)\n{\n\tif (x == 0L) {\n\t\treturn 1L;\n\t}\n\t\n\telse {\n\t\treturn x * factorial(x\
    \ - 1L);\n\t}\n}\n/*\nCompute the n-th Fibonacci number\n    >>> fibonacci(0L)\n\
    \    0L\n    >>> fibonacci(1L)\n    1L\n    >>> fibonacci(2L)\n    1L\n    >>>\
    \ fibonacci(3L)\n    2L\n    >>> fibonacci(7L)\n    13L\n*/\nlong fibonacci(long\
    \ n)\n{\n\tif (n == 0L) {\n\t\treturn 0L;\n\t}\n\t\n\telse if (n == 1L) {\n\t\t\
    return 1L;\n\t}\n\t\n\telse {\n\t\treturn fibonacci(n - 1L) + fibonacci(n - 2L);\n\
    \t}\n}\n/*\nConvert Celsius to Fahrenheit\n    >>> c2f(0.0)\n    32.0\n    >>>\
    \ c2f(100.0)\n    212.0\n*/\ndouble c2f(double x)\n{\n\treturn x * 1.8 + 32.0;\n\
    }\n/*\nConvert Fahrenheit to Celsius\n    >>> f2c(32.0)\n    0.0\n    >>> f2c(212.0)\n\
    \    100.0\n*/\ndouble f2c(double x)\n{\n\treturn (x - 32.0) / 1.8;\n}\n/*\nCompute\
    \ the body mass index (BMI) of a person\n    >>> bmi(1.73, 75.0)\n    25.265224754423107\n\
    \    >>> bmi(1.68, 60.0)\n    21.323529411764707\n*/\ndouble bmi(double height,\
    \ double weight)\n{\n\treturn weight / (height * height);\n}\n/*\nCon\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppv77vs2f.d(92): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppv77vs2f.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163938

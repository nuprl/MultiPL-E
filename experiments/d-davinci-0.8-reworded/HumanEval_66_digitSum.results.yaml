name: HumanEval_66_digitSum
language: d
results:
- program: "import std.math;\nimport std.typecons;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(immutable\
    \ c; s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += (long)c;\n\
    \    }\n    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n \
    \   assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9dh9ok75.d(29): Error: C style cast illegal, use `cast(long)c`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9dh9ok75.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s) {\n        if(c.isUpper) sum += c;\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = digitSum;\n\n    assert(candidate(\"\") == 0L);\n   \
    \ assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n\
    \    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"woArBld\")\
    \ == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp4ev97esa.d(27): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp4ev97esa.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(char\
    \ c; s) \n    {\n        if (c >= 'A' && c <= 'Z')\n            sum += cast(long)c;\n\
    \    }\n    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n \
    \   assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\nimport std.typecons;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    for\
    \ (long i = 0; i < s.length; i++)\n    {\n        if (s[i] >= 65 && s[i] <= 90)\n\
    \        {\n            sum += (s[i] - 64);\n        }\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp983k7mv4.d(40): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427ead]\\n??:? void tmp983k7mv4.__unittest_L35_C1()\
    \ [0x427b0d]\\n??:? void tmp983k7mv4.__modtest() [0x427c2c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bc47]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aada]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc6d]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x43011c]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fbf9]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aab1]\\n??:? runModuleUnitTests [0x42ba1d]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x428370]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4282f7]\\n??:? _d_run_main [0x428262]\\n??:? main [0x427c3f]\\\
    n??:? __libc_start_main [0x301b554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    string upper = filter!(c\
    \ => isUpper(c))(s);\n    long sum = 0;\n    foreach(i;0..upper.length) {\n  \
    \      sum += upper[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate\
    \ = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\"\
    ) == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpg7lfyoky.d(25): Error: template instance `filter!((c) => isUpper(c))`\
    \ template `filter` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpg7lfyoky.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(char\
    \ c; s) \n    {\n        if (c >= 'A' && c <= 'Z') \n        {\n            sum\
    \ += (long)c;\n        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate\
    \ = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\"\
    ) == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpj6rbmevs.d(30): Error: C style cast illegal, use `cast(long)c`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj6rbmevs.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n\tlong sum = 0;\n\tfor (int\
    \ i = 0; i < s.length; i++)\n\t{\n\t\tint c = s[i];\n\t\tif (c >= 65 && c <= 90)\n\
    \t\t{\n\t\t\tsum += c;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate\
    \ = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\"\
    ) == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\nimport std.typecons;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(char.isUpper(c))\n        {\n            sum += cast(long)char.toUpper(c);\n\
    \        }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsye_z9tu.d(28): Error: no property `isUpper` for type `char`\\\
    n/tmp/tmpsye_z9tu.d(30): Error: no property `toUpper` for type `char`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsye_z9tu.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    auto result = 0L;\n  \
    \  auto upperBound = 'Z'.to!long;\n    auto lowerBound = 'A'.to!long;\n    foreach(character;\
    \ s)\n    {\n        if (character.to!long <= upperBound && character.to!long\
    \ >= lowerBound)\n        {\n            result += character.to!long;\n      \
    \  }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = digitSum;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpveptbkyv.d(26): Error: no property `to` for type `char`\\n/tmp/tmpveptbkyv.d(27):\
    \ Error: no property `to` for type `char`\\n/tmp/tmpveptbkyv.d(30): Error: no\
    \ property `to` for type `immutable(char)`\\n/tmp/tmpveptbkyv.d(30): Error: no\
    \ property `to` for type `immutable(char)`\\n/tmp/tmpveptbkyv.d(32): Error: no\
    \ property `to` for type `immutable(char)`\\nFailed: [\"dmd\", \"-unittest\",\
    \ \"-v\", \"-o-\", \"/tmp/tmpveptbkyv.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long result = 0;\n   \
    \ foreach(c; s)\n    {\n        result += c.toUpper().to!long();\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfbcasx2x.d(28): Error: no property `toUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfbcasx2x.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    return accumulate!(\"\
    a + b\")(map!(\"toUpper(a) == a ? to!int(a) : 0\")(s));\n}\nunittest\n{\n    alias\
    \ candidate = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abAB\") == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmprtnfj1pf.d(25): Error: template instance `accumulate!\"a + b\"\
    ` template `accumulate` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmprtnfj1pf.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    int ret = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c <= 'Z' && c >= 'A')\n            ret += c;\n    }\n\
    \    return ret;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\nimport std.typecons;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(char\
    \ c; s)\n    {\n        if (c >= 'A' && c <= 'Z')\n            sum += c;\n   \
    \ }\n    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\nimport std.typecons;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(c;\
    \ s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += (long)c;\n \
    \   }\n    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n  \
    \  assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwuvm91sg.d(29): Error: C style cast illegal, use `cast(long)c`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwuvm91sg.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n\tlong sum = 0;\n\tforeach(ch;\
    \ s)\n\t{\n\t\tif(ch >= 'A' && ch <= 'Z')\n\t\t\tsum += ch;\n\t}\n\treturn sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\nimport std.typecons;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    import std.ascii : isUpper;\n\
    \    return s.filter!(isUpper).sum!(a => a);\n}\n/*\nTask\n    Given an array\
    \ of integers, return the indexes of the two numbers that they add up to a specific\
    \ target.\n    You may assume that each input would have exactly one solution,\
    \ and you may not use the same element twice.\nunittest\n{\n    alias candidate\
    \ = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\"\
    ) == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzp04vco1.d(28): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzp04vco1.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    string temp = \"\";\n\
    \    long sum = 0;\n    foreach(c; s)\n    {\n        if(c.isUpper)\n        {\n\
    \            sum += c;\n        }\n    }\n    return sum;\n}\nunittest\n{\n  \
    \  alias candidate = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abAB\") == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpfwp5oa9f.d(29): Error: no property `isUpper` for type `immutable(char)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpfwp5oa9f.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long result = 0;\n   \
    \ foreach(c;s)\n    {\n        if(c >= 'A' && c <= 'Z')\n        {\n         \
    \   // printf(\"%c %lld\\n\",c,cast(long)c);\n            result += cast(long)c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = digitSum;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK
- program: "import std.math;\nimport std.typecons;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    import std.typecons;\n\
    \    import std.math;\n    auto uppers = s.filter!(c => c >= 'A' && c <= 'Z');\n\
    \    auto ints = uppers.map!(x => x.to!int);\n    auto sum = reduce!((acc, x)\
    \ => acc + x)(ints);\n    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpmbk1vji_.d(27): Error: no property `filter` for type `string`\\\
    n/tmp/tmpmbk1vji_.d(29): Error: template instance `reduce!((acc, x) => acc + x)`\
    \ template `reduce` is not defined\\nFailed: [\"dmd\", \"-unittest\", \"-v\",\
    \ \"-o-\", \"/tmp/tmpmbk1vji_.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(immutable\
    \ c; s)\n    {\n        if (c >= 'A' && c <= 'Z')\n            sum += c;\n   \
    \ }\n    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  stdout: b''
  stderr: b''
  exit_code: 0
  status: OK

language: d
name: HumanEval_35_max_element
results:
- exit_code: 0
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n  long max=l[0];\n\
    \  foreach(e; l) \n  {\n    if(e>max) max=e;\n  }\n  return max;\n}\nunittest\n\
    {\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) ==\
    \ 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L])\
    \ == 124L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = -LONG_MAX;\n    foreach(i; l)\n    {\n        if(i > max)\n        {\n   \
    \         max = i;\n        }\n    }\n    return max;\n}\nunittest\n{\n    alias\
    \ candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n   \
    \ assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpt8nhh9rx.d(12): Error: undefined identifier `LONG_MAX`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt8nhh9rx.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 0
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max=l[0];\n\
    \    foreach(e; l)\n    {\n        if(e>max)\n        {\n            max=e;\n\
    \        }\n    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max_element\
    \ = l[0];\n    foreach(long a; l) \n    {\n        if (a > max_element) \n   \
    \     {\n            max_element = a;\n        }\n    }\n    return max_element;\n\
    }\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    foreach(i; l) \n    {\n        if (max < i) \n        {\n     \
    \       max = i;\n        }\n    }\n    return max;\n}\n \n/*\nReturn sum of all\
    \ elements in the array.\n    >>> array_sum([1L, 1L, 1L])\n    3L\n    >>> array_sum([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n    164L\n    \n*/\nlong array_sum(long[]\
    \ l) \n{\n    long sum = 0;\n    foreach(i; l) \n    {\n        sum += i;\n  \
    \  }\n    return sum;\n}\n \n/*\nReturn all indices of the given element in the\
    \ array.\n    >>> find_all(4L, [5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L,\
    \ 4L, 4L, 4L])\n    [11L, 12L, 13L]\n    \n*/\nlong[] find_all(long t, long[]\
    \ a) \n{\n    long[] ans = [];\n    foreach(i; a) \n    {\n        if (i == t)\
    \ \n        {\n            ans ~= i;\n        }\n    }\n    return ans;\n}\n \n\
    /*\nReturn index of the first occurrence of the given element in the array.\n\
    \    >>> find(4L, [5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L, 4L, 4L, 4L])\n\
    \    11L\n    \n*/\nlong find(long t, long[] a) \n{\n    foreach(i; a) \n    {\n\
    \        if (i == t) \n        {\n            return i;\n        }\n    }\n  \
    \  return -1;\n}\n \n/*\nReturn the most frequent element in the array.\n    >>>\
    \ most_frequent([5L, 3L\nunittest\n{\n    alias candidate = max_element;\n\n \
    \   assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpea4t3y7a.d(78): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpea4t3y7a.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    foreach(num; l) {\n        if (num > max) {\n            max =\
    \ num;\n        }\n    }\n    return max;\n}\n/*\nReturn minimum element in the\
    \ array.\n    >>> min_element([1L, 2L, 3L])\n    1L\n    >>> min_element([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n    -10L\n    \n*/\nlong min_element(long[]\
    \ l) \n{\n    long min = l[0];\n    foreach(num; l) {\n        if (num < min)\
    \ {\n            min = num;\n        }\n    }\n    return min;\n}\n/*\nReturn\
    \ median element in the array.\n    >>> median_element([1L, 2L, 3L])\n    2L\n\
    \    >>> median_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n\
    \    2L\n*/\nlong median_element(long[] l) \n{\n    long[] sorted = l.dup;\n \
    \   sort(sorted);\n    if (sorted.length % 2 == 0) {\n        return sorted[(sorted.length\
    \ / 2) - 1];\n    } else {\n        return sorted[sorted.length / 2];\n    }\n\
    }\n/*\nReturn population standard deviation of the array.\n    >>> stddev([1L,\
    \ 2L, 3L])\n    1.0\n    >>> stddev([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L,\
    \ -10L])\n    42.097058892\n    \n*/\ndouble stddev(long[] l) \n{\n    long sum\
    \ = 0;\n    foreach(num; l) {\n        sum += num;\n    }\n    long mean = sum\
    \ / l.length;\n    long[] squares = new long[l.length];\n    foreach(i, num\n\
    unittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L,\
    \ 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjzglaxey.d(72): Error: no identifier for declarator `num`\n/tmp/tmpjzglaxey.d(72):
    Error: found `unittest` when expecting `;`\n/tmp/tmpjzglaxey.d(79): Error: found
    `void` when expecting `)`\n/tmp/tmpjzglaxey.d(79): Error: found `{` when expecting
    `;` following statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjzglaxey.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 0
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n  long m = l[0];\n\
    \  for (int i = 1; i < l.length; i++) \n  {\n    if (l[i] > m) \n    {\n     \
    \ m = l[i];\n    }\n  }\n  return m;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    foreach(i; l)\n    {\n        if(i > max)\n        {\n        \
    \    max = i;\n        }\n    }\n    return max;\n}\n/*\nReturn minimum element\
    \ in the array.\n    >>> min_element([1L, 2L, 3L])\n    1L\n    >>> min_element([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n    -10L\n    \n*/\nlong min_element(long[]\
    \ l) \n{\n    long min = l[0];\n    foreach(i; l)\n    {\n        if(i < min)\n\
    \        {\n            min = i;\n        }\n    }\n    return min;\n}\n/*\nReturn\
    \ the absolute value of a number.\n    >>> long abs(long l)\n    >>> abs(1L)\n\
    \    1L\n    >>> abs(-1L)\n    1L\n*/\nlong abs(long l)\n{\n    if(l >= 0)\n \
    \   {\n        return l;\n    }\n    else\n    {\n        return -l;\n    }\n\
    }\n/*\nCalculate the square root of a number.\n    >>> sqrt(1L)\n    1L\n    >>>\
    \ sqrt(4L)\n    2L\n    >>> sqrt(9L)\n    3L\n    >>> sqrt(16L)\n    4L\n*/\n\
    long sqrt(long l)\n{\n    long root = l / 2;\n    long square = root * root;\n\
    \    if(square == l)\n    {\n        return root;\n    }\n    else\n    {\n  \
    \      while(true)\n        {\n            root = (root + l / root) / 2;\n   \
    \         if(abs(square - l) < 5)\n            {\n                return root;\n\
    \            }\n            square = root * root;\n        }\n    }\n}\n/*\nCounts\
    \ the number of times a value appears in the array.\n    >>> count(1L, [1L, 1L,\
    \ 1L, 2L, 2L\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpetoodsnp.d(93): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpetoodsnp.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n\tlong max =\
    \ l[0];\n\tforeach(element; l)\n\t{\n\t\tif(element > max)\n\t\t{\n\t\t\tmax =\
    \ element;\n\t\t}\n\t}\n\treturn max;\n}\n/*\nReturn maximum element in the array.\n\
    \    >>> min_element([1L, 2L, 3L])\n    1L\n    >>> min_element([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n    -10L\n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tforeach(element; l)\n\t{\n\t\tif(element < min)\n\
    \t\t{\n\t\t\tmin = element;\n\t\t}\n\t}\n\treturn min;\n}\n/*\nReturn index of\
    \ minimum element in the array.\n    >>> min_index([1L, 2L, 3L])\n    0L\n   \
    \ >>> min_index([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n    10L\n\
    */\nlong min_index(long[] l) \n{\n\tlong index = 0;\n\tlong min = l[0];\n\tforeach(element;\
    \ l)\n\t{\n\t\tif(element < min)\n\t\t{\n\t\t\tmin = element;\n\t\t\tindex = cast(long)element.index;\n\
    \t\t}\n\t}\n\treturn index;\n}\n/*\nCheck that elements in the array are in ascending\
    \ order.\n    >>> is_sorted([1L, 2L, 3L])\n    true\n    >>> is_sorted([3L, 2L,\
    \ 1L])\n    false\n    >>> is_sorted([1L, 1L, 1L])\n    true\n*/\nunittest\n{\n\
    \    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n\
    \    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3h6vv9ww.d(57): Error: no property `index` for type `long`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3h6vv9ww.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 0
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    foreach(long x; l)\n    {\n        if(x > max)\n        {\n   \
    \         max = x;\n        }\n    }\n    return max;\n}\nunittest\n{\n    alias\
    \ candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n   \
    \ assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    for (uint i = 1; i < l.length; i++) \n    {\n        if (l[i] >\
    \ max) \n        {\n            max = l[i];\n        }\n    }\n    return max;\n\
    }\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max=l[0];\n\
    \    foreach(e; l[1..$])\n    {\n      if(e>max)\n      {\n        max=e;\n  \
    \    }\n    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long val\
    \ = l[0];\n    foreach(item; l)\n    {\n        if(item > val)\n        {\n  \
    \          val = item;\n        }\n    }\n    return val;\n}\n/*\nReturn maximum\
    \ element in the array, and its index.\n    >>> max_element_idx([1L, 2L, 3L])\n\
    \    (3L, 2)\n    >>> max_element_idx([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    (123L, 8)\n*/\nlong max_element_idx(long[] l) \n{\n    long\
    \ val = l[0];\n    long idx = 0;\n    long cnt = 0;\n    foreach(item; l)\n  \
    \  {\n        if(item > val)\n        {\n            val = item;\n           \
    \ idx = cnt;\n        }\n        cnt++;\n    }\n    return val;\n}\n/*\nReturn\
    \ maximum element in the array, and its index.\n    >>> max_element_idx([1.0,\
    \ 2.0, 3.0])\n    (3.0, 2)\n    >>> max_element_idx([5.0, 3.0, -5.0, 2.0, -3.0,\
    \ 3.0, 9.0, 0.0, 123.0, 1.0, -10.0])\n    (123.0, 8)\n*/\nlong max_element_idx(double[]\
    \ l) \n{\n    double val = l[0];\n    long idx = 0;\n    long cnt = 0;\n    foreach(item;\
    \ l)\n    {\n        if(item > val)\n        {\n            val = item;\n    \
    \        idx = cnt;\n        }\n        cnt++;\n    }\n    return val;\n}\n/*\n\
    Return minimum element in the array.\n    >>> min_element([1L, 2L, 3L])\n    1L\n\
    \    >>> min_element([5L, 3L, -5L, 2L, -3L, 3L,\nunittest\n{\n    alias candidate\
    \ = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdu8qnzjr.d(68): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpdu8qnzjr.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 0
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    foreach(i; l)\n    {\n        if(i > max)\n        {\n        \
    \    max = i;\n        }\n    }\n    return max;\n}\nunittest\n{\n    alias candidate\
    \ = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    for (int i = 1; i < l.length; i++)\n    {\n        if (l[i] > max)\n\
    \        {\n            max = l[i];\n        }\n    }\n    return max;\n}\nunittest\n\
    {\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) ==\
    \ 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L])\
    \ == 124L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long tmp=0L;\n\
    \    foreach(long i; l)\n    {\n        if(i>tmp)\n            tmp=i;\n    }\n\
    \    return tmp;\n}\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n\tif (l.length\
    \ == 0) {\n\t\treturn 0;\n\t}\n\telse {\n\t\treturn max(l);\n\t}\n}\nunittest\n\
    {\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) ==\
    \ 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L])\
    \ == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpus4v0mwk.d(16): Error: undefined identifier `max`, did you mean
    function `fmax`?\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpus4v0mwk.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 0
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = 0L;\n    long i = 0L;\n    for (; \n         i < l.length; \n         i++)\
    \ \n    {\n        if (l[i] > max) \n        {\n            max = l[i];\n    \
    \    }\n    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n\tlong max =\
    \ 0;\n\t\n\tforeach(elem; l) \n\t{\n\t\tif(elem > max) \n\t\t{\n\t\t\tmax = elem;\n\
    \t\t}\n\t}\n\t\n\treturn max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    if (l.length\
    \ == 0)\n        return long.min;\n    long max = l[0];\n    foreach (long m;\
    \ l)\n    {\n        if (m > max)\n            max = m;\n    }\n    return max;\n\
    }\n/*\nReturn minimum element in the array.\n    >>> min_element([1L, 2L, 3L])\n\
    \    1L\n    >>> min_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n\
    \    -10L\n    \n*/\nlong min_element(long[] l) \n{\n    if (l.length == 0)\n\
    \        return long.max;\n    long min = l[0];\n    foreach (long m; l)\n   \
    \ {\n        if (m < min)\n            min = m;\n    }\n    return min;\n}\n/*\n\
    Return max element in the array and its index\n    >>> max_element_with_index([1L,\
    \ 2L, 3L])\n    (3L, 2L)\n    >>> max_element_with_index([5L, 3L, -5L, 2L, -3L,\
    \ 3L, 9L, 0L, 123L, 1L, -10L])\n    (123L, 8L)\n    \n*/\nauto max_element_with_index(long[]\
    \ l) \n{\n    if (l.length == 0)\n        return tuple(long.min, 0L);\n    long\
    \ index = 0L;\n    long max = l[0];\n    foreach (i, m; l)\n    {\n        if\
    \ (m > max)\n        {\n            max = m;\n            index = i;\n       \
    \ }\n    }\n    return tuple(max, index);\n}\n/*\nReturn min element in the array\
    \ and its index\n    >>> min_element_with_index([1L, 2L, 3L])\n    (1L, 0L)\n\
    \    >>> min_element_with_index([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L,\nunittest\n\
    {\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) ==\
    \ 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L])\
    \ == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmwila29l.d(66): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpmwila29l.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 0
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    for (int i = 1; i < l.length; i++)\n    {\n        if (l[i] > max)\n\
    \        {\n            max = l[i];\n        }\n    }\n    return max;\n}\nunittest\n\
    {\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) ==\
    \ 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L])\
    \ == 124L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    int i = 1;\n    while (i < l.length) \n    {\n        if (l[i]\
    \ > max) \n        {\n            max = l[i];\n        }\n        i += 1;\n  \
    \  }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpos0gozv5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    if (l.length\
    \ == 0) \n    {\n        return 0;\n    }\n    long max = l[0];\n    for (int\
    \ i = 1; i < l.length; i++) \n    {\n        if (l[i] > max) \n        {\n   \
    \         max = l[i];\n        }\n    }\n    return max;\n}\nunittest\n{\n   \
    \ alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n\
    \    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd87u6946.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    foreach(elem; l)\n    {\n        if(elem > max)\n        {\n  \
    \          max = elem;\n        }\n    }\n    return max;\n}\nunittest\n{\n  \
    \  alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n\
    \    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr_53nr2v.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long currentMax\
    \ = l[0];\n    foreach(var i; l)\n    {\n        if(i > currentMax)\n        {\n\
    \            currentMax = i;\n        }\n    }\n    return currentMax;\n}\nunittest\n\
    {\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) ==\
    \ 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L])\
    \ == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkh_r02u5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = -2147483648L;\n    foreach(e; l)\n    {\n        if(e > max)\n        {\n\
    \            max = e;\n        }\n    }\n    return max;\n}\nunittest\n{\n   \
    \ alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n\
    \    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6efykfur.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max;\n\
    \    int i;\n    max = l[0];\n    for (i = 1; i < l.length; i++) \n    {\n   \
    \     if (l[i] > max) \n        {\n            max = l[i];\n        }\n    }\n\
    \    return max;\n}\n/*\nReturn minimum element in the array.\n    >>> min_element([1L,\
    \ 2L, 3L])\n    1L\n    >>> min_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    -10L\n*/\nlong min_element(long[] l) \n{\n    long min;\n  \
    \  int i;\n    min = l[0];\n    for (i = 1; i < l.length; i++) \n    {\n     \
    \   if (l[i] < min) \n        {\n            min = l[i];\n        }\n    }\n \
    \   return min;\n}\n/*\nReturn median of elements in the array.\n    >>> median([1L,\
    \ 2L, 3L])\n    2L\n    >>> median([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L,\
    \ -10L])\n    1L\n    \n*/\nlong median(long[] l) \n{\n    long[] copy = new long[l.length];\n\
    \    int i;\n    for (i = 0; i < l.length; i++) \n    {\n        copy[i] = l[i];\n\
    \    }\n    std.sort(copy);\n    return copy[copy.length / 2];\n}\n/*\nReturn\
    \ mode of elements in the array. If there are more than one mode, then return\
    \ the first one.\n    >>> mode([1L, 2L, 3L])\n    1L\n    >>> mode([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n    3L\n*/\nlong mode(long[] l) \n{\n\
    \    long[] copy =\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpy85ej283.d(74): Error: expression expected, not \''unittest\''\n/tmp/tmpy85ej283.d(75):
    Error: semicolon expected, not \''{\''\n/tmp/tmpy85ej283.d(81): Error: found \''EOF\''
    when expecting \''}\'' following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpy85ej283.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n\tassert(l.length\
    \ > 0L);\n\tlong max = l[0L];\n\tfor (long i = 1L; i < l.length; i++) \n\t{\n\t\
    \tif (l[i] > max) \n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n/*\n\
    Return the first index of the maximum element in the array.\n    >>> first_max_index([1L,\
    \ 2L, 3L])\n    2L\n    >>> first_max_index([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L,\
    \ 123L, 1L, -10L])\n    8L\n    \n*/\nlong first_max_index(long[] l) \n{\n\tassert(l.length\
    \ > 0L);\n\tlong max_index = 0L;\n\tlong max = l[0L];\n\tfor (long i = 1L; i <\
    \ l.length; i++) \n\t{\n\t\tif (l[i] > max) \n\t\t{\n\t\t\tmax = l[i];\n\t\t\t\
    max_index = i;\n\t\t}\n\t}\n\treturn max_index;\n}\n/*\nReturn the first index\
    \ of the minimum element in the array.\n    >>> first_min_index([1L, 2L, 3L])\n\
    \    0L\n    >>> first_min_index([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L,\
    \ -10L])\n    11L\n*/\nlong first_min_index(long[] l) \n{\n\tassert(l.length >\
    \ 0L);\n\tlong min_index = 0L;\n\tlong min = l[0L];\n\tfor (long i = 1L; i < l.length;\
    \ i++) \n\t{\n\t\tif (l[i] < min) \n\t\t{\n\t\t\tmin = l[i];\n\t\t\tmin_index\
    \ = i;\n\t\t}\n\t}\n\treturn min_index;\n}\n/*\nReturn (a\nunittest\n{\n    alias\
    \ candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n   \
    \ assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpys7vlu_c.d(68): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpys7vlu_c.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max=l[0];\n\
    \    foreach(x; l) \n    {\n        if(x>max) max=x;\n    }\n    return max;\n\
    }\n/*\nFind the sum of elements in the array.\n    >>> sum_element([1L, 2L, 3L])\n\
    \    6L\n    >>> sum_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n\
    \    154L\n    \n*/\nlong sum_element(long[] l) \n{\n    long s=0;\n    foreach(x;\
    \ l) \n    {\n        s+=x;\n    }\n    return s;\n}\n/*\nFind the arithmetic\
    \ mean of elements in the array.\n    >>> arith_mean([1L, 2L, 3L])\n    2L\n \
    \   >>> arith_mean([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n    13L\n\
    \    \n*/\nlong arith_mean(long[] l) \n{\n    long s=0;\n    foreach(x; l) \n\
    \    {\n        s+=x;\n    }\n    return s/l.length;\n}\n/*\nFind the median of\
    \ elements in the array.\n    >>> median([1L, 2L, 3L])\n    2L\n    >>> median([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n    2L\n    \n*/\nlong median(long[]\
    \ l) \n{\n    if(l.length%2==0) \n    {\n        return (l[l.length/2]+l[l.length/2-1])/2;\n\
    \    } \n    else \n    {\n        return l[l.length/2];\n    }\n}\n/*\nFind the\
    \ number of elements in the array which are greater than their both neighbours.\n\
    \    >>> greater_than_neighbours([1L, 2L\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5izu456y.d(72): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp5izu456y.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    return reduce(l,\
    \ max);\n}\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9ry1aq9p.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n\tlong max =\
    \ l[0];\n\tforeach(i; 1..l.length)\n\t{\n\t\tif(l[i] > max)\n\t\t\tmax = l[i];\n\
    \t}\n\treturn max;\n}\n/*\nReturn minimum element in the array.\n    >>> min_element([1L,\
    \ 2L, 3L])\n    1L\n    >>> min_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    -10L\n*/\nlong min_element(long[] l) \n{\n\tlong min = l[0];\n\
    \tforeach(i; 1..l.length)\n\t{\n\t\tif(l[i] < min)\n\t\t\tmin = l[i];\n\t}\n\t\
    return min;\n}\n/*\nReturn index of the maximum element in the array.\n    >>>\
    \ max_index([1L, 2L, 3L])\n    2L\n    >>> max_index([5L, 3L, -5L, 2L, -3L, 3L,\
    \ 9L, 0L, 123L, 1L, -10L])\n    8L\n*/\nlong max_index(long[] l) \n{\n\tlong max\
    \ = l[0];\n\tlong index = 0;\n\tforeach(i; 1..l.length)\n\t{\n\t\tif(l[i] > max)\n\
    \t\t{\n\t\t\tmax = l[i];\n\t\t\tindex = i;\n\t\t}\n\t}\n\treturn index;\n}\n/*\n\
    Return index of the minimum element in the array.\n    >>> min_index([1L, 2L,\
    \ 3L])\n    0L\n    >>> min_index([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L,\
    \ -10L])\n    10L\n*/\nlong min_index(long[] l) \n{\n\tlong min = l[0];\n\tlong\
    \ index = 0;\n\tforeach(i; 1..l.length)\n\t{\n\nunittest\n{\n    alias candidate\
    \ = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4m5u9de8.d(72): Error: found \''unittest\'' instead of statement\n/tmp/tmp4m5u9de8.d(79):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4m5u9de8.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    for (int i = 1; i < l.length; i++) \n    {\n        if (l[i] >\
    \ max) \n        {\n            max = l[i];\n        }\n    }\n    return max;\n\
    }\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk735pl3y.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n    in {\n    \
    \    //assert(l.length > 0);\n    }\n    out (result) {\n        //assert(l.length\
    \ > 0);\n        //assert(result in l);\n    }\n    do {\n    if (l.length ==\
    \ 1) {\n        return l[0];\n    }\n    long max = l[0];\n    for (int i = 1;\
    \ i < l.length; i++) {\n        if (l[i] > max) {\n            max = l[i];\n \
    \       }\n    }\n    return max;\n}\n/*\nReturn minimum element in the array.\n\
    \    >>> min_element([1L, 2L, 3L])\n    1L\n    >>> min_element([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n    -10L\n    \n*/\nlong min_element(long[]\
    \ l) \n    in {\n        //assert(l.length > 0);\n    }\n    out (result) {\n\
    \        //assert(l.length > 0);\n        //assert(result in l);\n    }\n    do\
    \ {\n    if (l.length == 1) {\n        return l[0];\n    }\n    long min = l[0];\n\
    \    for (int i = 1; i < l.length; i++) {\n        if (l[i] < min) {\n       \
    \     min = l[i];\n        }\n    }\n    return min;\n}\n/*\nFill the array with\
    \ the same element.\n    >>> fill_array([1L, 1L, 1L, 1L], 2L)\n    [2L, 2L, 2L,\
    \ 2L]\n    >>> fill_array([1L, 2L, -1L, 3L, 9L, 1L, 5L, 0L, 4L, 0L, 2L], 12L)\n\
    \    [12L, 12L, 12L, 12L, 12L, 12L, 12L, 12L, 12L, 12L, 12L]\n    \n*/\nlong[]\
    \ fill_array(long[] l, long value) \n    in {\n       \nunittest\n{\n    alias\
    \ candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n   \
    \ assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpv3g3dytj.d(18): Error: Declaration expected, not \''do\''\n/tmp/tmpv3g3dytj.d(21):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv3g3dytj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    if (l.length\
    \ == 0) {\n        throw new IllegalArgumentException(\"l must not be empty\"\
    );\n    }\n    long max = l[0];\n    for (int i = 1; i < l.length; i++) {\n  \
    \      if (l[i] > max) {\n            max = l[i];\n        }\n    }\n    return\
    \ max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa_ntxheo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    foreach(x; l) \n    {\n        if (x > max) \n        {\n     \
    \       max = x;\n        }\n    }\n    return max;\n}\n/*\nReturn minimum element\
    \ in the array.\n    >>> min_element([1L, 2L, 3L])\n    1L\n    >>> min_element([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n    -10L\n    \n*/\nlong min_element(long[]\
    \ l) \n{\n    long min = l[0];\n    foreach(x; l) \n    {\n        if (x < min)\
    \ \n        {\n            min = x;\n        }\n    }\n    return min;\n}\nunittest\n\
    {\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) ==\
    \ 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L])\
    \ == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnfpbdfi5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max;\n\
    \    max = l[0];\n    foreach(long x; l) {\n        if (x > max) {\n         \
    \   max = x;\n        }\n    }\n    return max;\n}\nunittest\n{\n    alias candidate\
    \ = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpojakvbv_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    foreach(long item; l)\n    {\n        if(item > max)\n        {\n\
    \            max = item;\n        }\n    }\n    return max;\n}\nunittest\n{\n\
    \    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n\
    \    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp487kfkje.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    foreach(x; l) \n    {\n        if (x > max) \n        {\n     \
    \       max = x;\n        }\n    }\n    return max;\n}\nunittest\n{\n    alias\
    \ candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n   \
    \ assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpog2zmj8d.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = -__INT_MAX__;\n    foreach (el; l) \n    {\n        if (el > max) \n     \
    \   {\n            max = el;\n        }\n    }\n    return max;\n}\n/*\nReturn\
    \ minimum element in the array.\n    >>> min_element([1L, 2L, 3L])\n    1L\n \
    \   >>> min_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n    -10L\n\
    \    \n*/\nlong min_element(long[] l) \n{\n    long min = __INT_MAX__;\n    foreach\
    \ (el; l) \n    {\n        if (el < min) \n        {\n            min = el;\n\
    \        }\n    }\n    return min;\n}\n/*\nRemove element with index i from the\
    \ array.\n    >>> a = [1L, 2L, 3L, 4L, 5L, 6L]\n    >>> remove_element(a, 0L)\n\
    \    >>> a\n    [2L, 3L, 4L, 5L, 6L]\n    >>> remove_element(a, 5L)\n    >>> a\n\
    \    [2L, 3L, 4L, 5L]\n    >>> remove_element(a, 2L)\n    >>> a\n    [2L, 3L,\
    \ 5L]\n    >>> a = [1L, 2L, 3L, 4L, 5L, 6L]\n    >>> remove_element(a, -1L)\n\
    \    >>> a\n    [1L, 2L, 3L, 4L, 5L, 6L]\n*/\nunittest\n{\n    alias candidate\
    \ = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9id9lztt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = 0L;\n    foreach(el; l) \n    {\n        if (el > max) \n        {\n     \
    \       max = el;\n        }\n    }\n    return max;\n}\nunittest\n{\n    alias\
    \ candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n   \
    \ assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf5r8_e8z.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long r =\
    \ l[0];\n    foreach(a; l) \n    {\n        if (a > r) \n        {\n         \
    \   r = a;\n        }\n    }\n    return r;\n}\nunittest\n{\n    alias candidate\
    \ = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphixua0eg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    for (int i = 1; i < l.length; i++) \n    {\n        if (l[i] >\
    \ max) \n        {\n            max = l[i];\n        }\n    }\n    return max;\n\
    }\n/*\nReturn minimum element in the array.\n    >>> min_element([1L, 2L, 3L])\n\
    \    1L\n    >>> min_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n\
    \    -10L\n*/\nlong min_element(long[] l) \n{\n    long min = l[0];\n    for (int\
    \ i = 1; i < l.length; i++) \n    {\n        if (l[i] < min) \n        {\n   \
    \         min = l[i];\n        }\n    }\n    return min;\n}\n/*\nReturn the square\
    \ root of a real number.\n    >>> sqrt(4.0)\n    2.0\n    >>> sqrt(16.0)\n   \
    \ 4.0\n    >>> sqrt(1.0)\n    1.0\n    >>> sqrt(2.0)\n    1.4142135623730951\n\
    */\nfloat sqrt(float x) \n{\n    float a = x;\n    float b = x;\n    float x0\
    \ = 0.0;\n    float y = 0.0;\n    while (a != b) \n    {\n        x0 = (a + b)\
    \ / 2.0;\n        y = a * a - x;\n        if (y > 0) \n        {\n           \
    \ b = x0;\n        } \n        else \n        {\n            a = x0;\n       \
    \ }\n    }\n    return x0;\n}\n/*\nReturn the square root of a real number.\n\
    \    >>> sqrt2(4.0)\n    2.0\n    >>> sqrt2(16.0)\n    4.0\n    >>> sqrt2(1.0)\n\
    \    1.0\n    >>> sqrt2(2.0)\n   \nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbbhtveoi.d(73): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpbbhtveoi.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max;\n\
    \    max = l[0];\n    for (int i = 1; i < l.length; i++)\n    {\n        if (l[i]\
    \ > max)\n        {\n            max = l[i];\n        }\n    }\n    return max;\n\
    }\n// Return minimum element in the array.\n//    >>> min_element([1L, 2L, 3L])\n\
    //    1L\n//    >>> min_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n\
    //    -10L\nlong min_element(long[] l) \n{\n    long min;\n    min = l[0];\n \
    \   for (int i = 1; i < l.length; i++)\n    {\n        if (l[i] < min)\n     \
    \   {\n            min = l[i];\n        }\n    }\n    return min;\n}\n// Return\
    \ the sum of all the elements in the array.\n//    >>> sum_array([1L, 2L, 3L])\n\
    //    6L\n//    >>> sum_array([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n\
    //    162L\nlong sum_array(long[] l) \n{\n    long sum;\n    sum = 0;\n    for\
    \ (int i = 0; i < l.length; i++)\n    {\n        sum += l[i];\n    }\n    return\
    \ sum;\n}\n// Return the sum of all the elements in the array.\n//    >>> sum_array([1L,\
    \ 2L, 3L])\n//    6L\n//    >>> sum_array([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n//    162L\nlong sum_array(long[] l) \n{\n    long sum;\n    sum\
    \ = 0;\n    for (int i = 0; i < l.length; i++)\n    {\n        sum += l[\nunittest\n\
    {\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) ==\
    \ 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L])\
    \ == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_jvesq91.d(68): Error: expression expected, not \''unittest\''\n/tmp/tmp_jvesq91.d(69):
    Error: found \''{\'' when expecting \'']\''\n/tmp/tmp_jvesq91.d(70): Error: found
    \''alias\'' when expecting \'';\'' following statement\n/tmp/tmp_jvesq91.d(75):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_jvesq91.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max_elem\
    \ = l[0];\n    foreach(el; l) {\n        if (el > max_elem) {\n            max_elem\
    \ = el;\n        }\n    }\n    return max_elem;\n}\n/*\nReturn minimum element\
    \ in the array.\n    >>> min_element([1L, 2L, 3L])\n    1L\n    >>> min_element([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n    -10L\n*/\nlong min_element(long[]\
    \ l) \n{\n    long min_elem = l[0];\n    foreach(el; l) {\n        if (el < min_elem)\
    \ {\n            min_elem = el;\n        }\n    }\n    return min_elem;\n}\n/*\n\
    Return dot product of two arrays.\n    \n    >>> dot_product([1L, 2L, 3L], [1L,\
    \ 2L, 3L])\n    14L\n    >>> dot_product([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L], [-2L, 5L, -1L, 0L, -10L, 9L, -5L, -3L, -1L, 0L, -4L])\n    -536L\n\
    \    >>> dot_product([1L, 2L, 3L], [1L, 2L, 3L, 4L])\n    Traceback (most recent\
    \ call last):\n        ...\n    AssertionError: [1L, 2L, 3L] vs [1L, 2L, 3L, 4L]\n\
    */\nlong dot_product(long[] a, long[] b) \n{\n    assert(a.length == b.length,\
    \ format(\"%s vs %s\", a, b));\n    long res = 0;\n    foreach(i; 0 .. a.length)\
    \ {\n        res += a[i] * b[i];\n    }\n    return res;\n}\nunittest\n{\n   \
    \ alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n\
    \    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4x_e2g7h.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    return reduce(l,\
    \ max);\n}\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9ry1aq9p.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long result\
    \ = l[0];\n    foreach(long x; l)\n    {\n        if (x > result) \n        {\n\
    \            result = x;\n        }\n    }\n    return result;\n}\n/*\nReverse\
    \ the array.\n    >>> reverse([1L, 2L, 3L])\n    [3L, 2L, 1L]\n    >>> reverse([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n    [-10L, 1L, 123L, 0L, 9L,\
    \ 3L, -3L, 2L, -5L, 3L, 5L]\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7w09lfx_.d(22): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp7w09lfx_.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n\tlong max =\
    \ l[0];\n\tforeach(l; e => { if (e > max) max = e; });\n\treturn max;\n}\nunittest\n\
    {\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) ==\
    \ 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L])\
    \ == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp68omxnbr.d(13): Error: use \''{ }\'' for an empty statement,
    not a \'';\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp68omxnbr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    foreach(num; l)\n    {\n        if(num > max)\n        {\n    \
    \        max = num;\n        }\n    }\n    return max;\n}\nunittest\n{\n    alias\
    \ candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n   \
    \ assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9ng_vbd3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    if (l.length\
    \ == 0) { return 0; }\n    long max = l[0];\n    foreach (long elem; l) {\n  \
    \      if (elem > max) {\n            max = elem;\n        }\n    }\n    return\
    \ max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2uxbya8l.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n\tlong max =\
    \ l[0];\n\tforeach(x; l) \n\t{\n\t\tif(x > max) \n\t\t{\n\t\t\tmax = x;\n\t\t\
    }\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwe55h8_8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    if (l.length\
    \ == 0) return null;\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpggk173uj.d(13): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpggk173uj.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    assert(l.length\
    \ > 0);\n    long max = l[0];\n    for (int i = 1; i < l.length; i++)\n    {\n\
    \        if (l[i] > max)\n        {\n            max = l[i];\n        }\n    }\n\
    \    return max;\n}\n/*\nReturn minimum element in the array.\n    >>> min_element([1L,\
    \ 2L, 3L])\n    1L\n    >>> min_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    -10L\n    \n*/\nlong min_element(long[] l) \n{\n    assert(l.length\
    \ > 0);\n    long min = l[0];\n    for (int i = 1; i < l.length; i++)\n    {\n\
    \        if (l[i] < min)\n        {\n            min = l[i];\n        }\n    }\n\
    \    return min;\n}\n/*\nReturn the sum of the elements in the array.\n    >>>\
    \ sum_array([1L, 2L, 3L])\n    6L\n    >>> sum_array([5L, 3L, -5L, 2L, -3L, 3L,\
    \ 9L, 0L, 123L, 1L, -10L])\n    166L\n    \n*/\nlong sum_array(long[] l) \n{\n\
    \    long sum = 0;\n    for (int i = 0; i < l.length; i++)\n    {\n        sum\
    \ += l[i];\n    }\n    return sum;\n}\n/*\nReturn the sum of the elements in the\
    \ 2D array.\n    >>> sum_2d_array([[1L, 2L, 3L], [4L, 5L, 6L]])\n    21L\n   \
    \ >>> sum_2d_array([[5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L], [1L, 2L,\
    \ 3L]])\n    180L\n    \n*/\nlong sum_2d_array(\nunittest\n{\n    alias candidate\
    \ = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpkyckb8m8.d(70): Error: basic type expected, not unittest\n/tmp/tmpkyckb8m8.d(70):
    Error: found \''unittest\'' when expecting \'')\''\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpkyckb8m8.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    foreach(e; l)\n    {\n        if(e > max) max = e;\n    }\n   \
    \ return max;\n}\n/*\nReturn minimum element in the array.\n    >>> min_element([1L,\
    \ 2L, 3L])\n    1L\n    >>> min_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    -10L\n*/\nlong min_element(long[] l) \n{\n    long min = l[0];\n\
    \    foreach(e; l)\n    {\n        if(e < min) min = e;\n    }\n    return min;\n\
    }\n/*\nReturn minimum and maximum in the array.\n    >>> min_max_element([1L,\
    \ 2L, 3L])\n    (1L, 3L)\n    >>> min_max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L,\
    \ 0L, 123L, 1L, -10L])\n    (-10L, 123L)\n*/\ntuple!(long, long) min_max_element(long[]\
    \ l) \n{\n    long min = l[0];\n    long max = l[0];\n    foreach(e; l)\n    {\n\
    \        if(e < min) min = e;\n        if(e > max) max = e;\n    }\n    return\
    \ tuple(min, max);\n}\n/*\nCalculate sum of elements in the array.\n    >>> sum_elements([1L,\
    \ 2L, 3L])\n    6L\n    >>> sum_elements([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    176L\n*/\nlong sum_elements(long[] l) \n{\n    long sum = 0;\n\
    \    foreach(e; l)\n    {\n        sum += e;\n    }\n    return sum;\n}\n/*\n\
    Calculate mean value of the array.\n   \nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxe6jgx_k.d(69): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpxe6jgx_k.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    foreach(i;\
    \ l) \n    {\n        if(l[i] > l[i-1]) \n        {\n            l[i-1] = l[i];\n\
    \        }\n    }\n    return l[0];\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv911py0i.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long result\
    \ = l[0];\n    foreach(ref long element; l) \n    {\n        if (element > result)\n\
    \            result = element;\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n\
    \    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfacqjdad.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    foreach(long tmp; l)\n    {\n        if(tmp > max)\n          \
    \  max = tmp;\n    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8bky9pir.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    foreach(long i; l)\n    {\n        if(i > max)\n        {\n   \
    \         max = i;\n        }\n    }\n    return max;\n}\nunittest\n{\n    alias\
    \ candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n   \
    \ assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpaqmuzd7c.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    foreach(i; l) \n    {\n        if (i > max) \n        {\n     \
    \       max = i;\n        }\n    }\n    return max;\n}\nunittest\n{\n    alias\
    \ candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n   \
    \ assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi74w4nh_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    foreach(long v; l)\n    {\n        if(v > max)\n            max\
    \ = v;\n    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp49at04ec.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    return l.max();\n\
    }\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphlar4uox.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    foreach(e; l) \n    {\n        if (e > max) \n        {\n     \
    \       max = e;\n        }\n    }\n    return max;\n}\n/*\n    Returns the maximum\
    \ element in the array.\n    >>> max_element([\"hello\", \"world\", \"!\", \"\
    hi\"])\n    \"world\"\n*/\nstring max_element(string[] s) \n{\n    string max\
    \ = s[0];\n    foreach(e; s) \n    {\n        if (e > max) \n        {\n     \
    \       max = e;\n        }\n    }\n    return max;\n}\n/*\n    Returns the maximum\
    \ element in the array.\n    >>> max_element([1.1, 1.5, 1.0, 5.9, 0.9])\n    5.9\n\
    */\ndouble max_element(double[] d) \n{\n    double max = d[0];\n    foreach(e;\
    \ d) \n    {\n        if (e > max) \n        {\n            max = e;\n       \
    \ }\n    }\n    return max;\n}\n/*\n    Returns the maximum element in the array.\n\
    \    >>> max_element([1.1, 1.5, 1.0, 5.9, 0.9])\n    5.9\n*/\nfloat max_element(float[]\
    \ f) \n{\n    float max = f[0];\n    foreach(e; f) \n    {\n        if (e > max)\
    \ \n        {\n            max = e;\n        }\n    }\n    return max;\n}\n/*\n\
    \    Returns the maximum element in the array.\n    >>> max_element([1, 5, 0,\
    \ 9, 9, 5, 2, 1, 2, 3, 2, 0, -3, -5, 4, 2, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 4, 2,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 4, 2, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 4, 2, 1, 2,\n\
    unittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L,\
    \ 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpe5jhb7qy.d(73): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpe5jhb7qy.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long mx\
    \ = l[0];\n    foreach(long i; l)\n    {\n        if(i > mx)\n            mx =\
    \ i;\n    }\n    return mx;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm4_5cwql.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max_element;\n\
    \    max_element = l[0];\n    for (int i = 1; i < l.length; i++) \n    {\n   \
    \     if (l[i] > max_element) \n        {\n            max_element = l[i];\n \
    \       }\n    }\n    return max_element;\n}\nunittest\n{\n    alias candidate\
    \ = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7fgucxnw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n\tlong max =\
    \ l[0];\n\tforeach(i; l)\n\t{\n\t\tif(max < i)\n\t\t\tmax = i;\n\t}\n\treturn\
    \ max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm14n0rk2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    foreach(x; l)\n    {\n        if(x > max)\n        {\n        \
    \    max = x;\n        }\n    }\n    return max;\n}\nunittest\n{\n    alias candidate\
    \ = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppegem__c.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n\tlong max =\
    \ l[0];\n\tforeach(long v; l) {\n\t\tif (v > max)\n\t\t\tmax = v;\n\t}\n\treturn\
    \ max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk1dfq_5z.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    for (int i = 1; i < l.length; i++) \n    {\n        if (l[i] >\
    \ max) \n        {\n            max = l[i];\n        }\n    }\n    return max;\n\
    }\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk735pl3y.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max=l[0];\n\
    \    for(size_t i=1;i<l.length;i++)\n    {\n\tif(l[i]>max)\n\t{\n\t    max=l[i];\n\
    \t}\n    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphaise5wl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    if (l.length\
    \ == 0)\n    {\n        return 0;\n    }\n    long max = l[0];\n    foreach (i;\
    \ l)\n    {\n        if (i > max)\n        {\n            max = i;\n        }\n\
    \    }\n    return max;\n}\n/*\nReturn minimum element in the array.\n    >>>\
    \ min_element([1L, 2L, 3L])\n    1L\n    >>> min_element([5L, 3L, -5L, 2L, -3L,\
    \ 3L, 9L, 0L, 123L, 1L, -10L])\n    -10L\n*/\nlong min_element(long[] l) \n{\n\
    \    if (l.length == 0)\n    {\n        return 0;\n    }\n    long min = l[0];\n\
    \    foreach (i; l)\n    {\n        if (i < min)\n        {\n            min =\
    \ i;\n        }\n    }\n    return min;\n}\n/*\nReturn the sum of all elements\
    \ in the array.\n    >>> sum_array([1L, 2L, 3L])\n    6L\n    >>> sum_array([1L,\
    \ -2L, 3L, -4L, 5L, -6L, 7L, -8L, 9L, -10L])\n    -10L\n*/\nlong sum_array(long[]\
    \ l) \n{\n    long sum = 0;\n    foreach (i; l)\n    {\n        sum += i;\n  \
    \  }\n    return sum;\n}\n/*\nReturn the average value of all elements in the\
    \ array.\n    >>> average([1L, 2L, 3L])\n    2L\n    >>> average([1L, -2L, 3L,\
    \ -4L, 5L, -6L, 7L, -8L, 9L, -10L])\n    -1L\n*/\nlong average(long[] l) \n{\n\
    \    return sum_array(l) / l.length;\n}\n/*\nReturn the median of all elements\
    \ in the array.\n    >>> median([1L, 2L, 3L])\n    2L\n    >>> median([1\nunittest\n\
    {\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) ==\
    \ 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L])\
    \ == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpklecjiou.d(76): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpklecjiou.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n  long result\
    \ = l[0];\n  foreach(long i; l)\n  {\n    if(i > result)\n      result = i;\n\
    \  }\n  return result;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmvg88sjc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    for (long val in l)\n    {\n        if (val > max)\n        {\n\
    \            max = val;\n        }\n    }\n    return max;\n}\nunittest\n{\n \
    \   alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n\
    \    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphzl4yvv6.d(13): Error: semicolon expected, not \''in\''\n/tmp/tmphzl4yvv6.d(13):
    Error: expression expected, not \''in\''\n/tmp/tmphzl4yvv6.d(13): Error: found
    \''l\'' when expecting \'';\'' following for condition\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmphzl4yvv6.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    if (l.length\
    \ == 0) return 0;\n    long max = l[0];\n    foreach (i; 1..l.length)\n    {\n\
    \        if (l[i] > max) max = l[i];\n    }\n    return max;\n}\nunittest\n{\n\
    \    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n\
    \    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoc7f0yo3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long result\
    \ = l[0];\n    foreach(el; l) \n    {\n        if (el > result) \n        {\n\
    \            result = el;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) ==\
    \ 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L])\
    \ == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcn_1ljrx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 0
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    foreach(i; l)\n    {\n        if(i > max)\n        {\n        \
    \    max = i;\n        }\n    }\n    return max;\n}\nunittest\n{\n    alias candidate\
    \ = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    for (int i = 1; i < l.length; i++) \n    {\n        if (l[i] >\
    \ max)\n        {\n            max = l[i];\n        }\n    }\n    return max;\n\
    }\n/*\nReturn minimum element in the array.\n    >>> min_element([1L, 2L, 3L])\n\
    \    1L\n    >>> min_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n\
    \    -10L\n*/\nlong min_element(long[] l) \n{\n    long min = l[0];\n    for (int\
    \ i = 1; i < l.length; i++) \n    {\n        if (l[i] < min)\n        {\n    \
    \        min = l[i];\n        }\n    }\n    return min;\n}\n/*\nReturn position\
    \ of element in the array\n    >>> find_element([1L, 2L, 3L], 2L)\n    1\n   \
    \ >>> find_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L], -10L)\n\
    \    10\n*/\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa14hvih0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n\tlong max =\
    \ l[0];\n\tforeach(element; l)\n\t{\n\t\tif(element > max)\n\t\t{\n\t\t\tmax =\
    \ element;\n\t\t}\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4ec8gzhk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n\tlong max =\
    \ l[0];\n\tforeach(index, elem; l)\n\t{\n\t\tif(elem > max)\n\t\t\tmax = elem;\n\
    \t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n   \
    \ assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L,\
    \ -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp53ka28nc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max_ele\
    \ = l[0];\n    for (int i = 1; i < l.length; i++) \n    {\n        if (l[i] >\
    \ max_ele) \n        {\n            max_ele = l[i];\n        }\n    }\n    return\
    \ max_ele;\n}\n/*\nReturn minium element in the array.\n    >>> min_element([1L,\
    \ 2L, 3L])\n    1L\n    >>> min_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    -10L\n*/\nlong min_element(long[] l) \n{\n    long min_ele =\
    \ l[0];\n    for (int i = 1; i < l.length; i++) \n    {\n        if (l[i] < min_ele)\
    \ \n        {\n            min_ele = l[i];\n        }\n    }\n    return min_ele;\n\
    }\n/*\nReturn the absolute value of the element.\n    >>> abs_element([1L, 2L,\
    \ 3L])\n    1L\n    >>> abs_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L,\
    \ -10L])\n    10L\n*/\nlong abs_element(long[] l) \n{\n    long abs_ele = l[0];\n\
    \    for (int i = 1; i < l.length; i++) \n    {\n        if (abs(l[i]) > abs(abs_ele))\
    \ \n        {\n            abs_ele = l[i];\n        }\n    }\n    return abs_ele;\n\
    }\n/*\nReturn the sum of the elements in the array.\n    >>> sum_element([1L,\
    \ 2L, 3L])\n    6L\n    >>> sum_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    156L\n*/\nlong sum_element(long[] l) \n{\n   \nunittest\n{\n\
    \    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n\
    \    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpngkqk_mx.d(70): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpngkqk_mx.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    foreach(x; l)\n    {\n        if(x > max)\n        {\n        \
    \    max = x;\n        }\n    }\n    return max;\n}\nunittest\n{\n    alias candidate\
    \ = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppegem__c.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n\tlong ret =\
    \ l[0];\n\tforeach(long i; l) \n\t{\n\t\tif(i > ret) \n\t\t{\n\t\t\tret = i;\n\
    \t\t}\n\t}\n\treturn ret;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfwp0nnjk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    int len\
    \ = l.length;\n    long m = l[0];\n    for (int i = 1; i < len; i++)\n    {\n\
    \        if (l[i] > m)\n        {\n            m = l[i];\n        }\n    }\n \
    \   return m;\n}\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyibyniti.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n\tlong max =\
    \ l[0];\n\tforeach(i; l)\n\t{\n\t\tif(max < i)\n\t\t\tmax = i;\n\t}\n\treturn\
    \ max;\n}\n/*\nReturn the index of maximum element in the array.\n    >>> max_index([1L,\
    \ 2L, 3L])\n    2L\n    >>> max_index([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    8L\n*/\nlong max_index(long[] l) \n{\n\tlong max = l[0];\n\t\
    long idx = 0;\n\tforeach(i; l)\n\t{\n\t\tif(max < i)\n\t\t{\n\t\t\tmax = i;\n\t\
    \t\tidx = i;\n\t\t}\n\t}\n\treturn idx;\n}\n/*\nReturn the minimum element in\
    \ the array.\n    >>> min_element([1L, 2L, 3L])\n    1L\n    >>> min_element([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n    -10L\n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tforeach(i; l)\n\t{\n\t\tif(min > i)\n\t\t\tmin\
    \ = i;\n\t}\n\treturn min;\n}\n/*\nReturn the index of minimum element in the\
    \ array.\n    >>> min_index([1L, 2L, 3L])\n    0L\n    >>> min_index([5L, 3L,\
    \ -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n    10L\n*/\nlong min_index(long[]\
    \ l) \n{\n\tlong min = l[0];\n\tlong idx = 0;\n\tforeach(i; l)\n\t{\n\t\tif(min\
    \ > i)\n\t\t{\n\t\t\tmin = i;\n\t\t\tidx\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf4uz12x6.d(75): Error: found \''unittest\'' when expecting \'';\''
    following statement\n/tmp/tmpf4uz12x6.d(82): Error: found \''EOF\'' when expecting
    \''}\'' following compound statement\n/tmp/tmpf4uz12x6.d(82): Error: found \''EOF\''
    when expecting \''}\'' following compound statement\n/tmp/tmpf4uz12x6.d(82): Error:
    found \''EOF\'' when expecting \''}\'' following compound statement\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpf4uz12x6.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n\tint max =\
    \ 0;\n\tfor (int i = 0; i < l.length; i++)\n\t{\n\t\tif (l[i] > max)\n\t\t{\n\t\
    \t\tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n/*\nReturn minimum element in the\
    \ array.\n    >>> min_element([1L, 2L, 3L])\n    1L\n    >>> min_element([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n    -10L\n*/\nlong min_element(long[]\
    \ l) \n{\n\tint min = 999999999;\n\tfor (int i = 0; i < l.length; i++)\n\t{\n\t\
    \tif (l[i] < min)\n\t\t{\n\t\t\tmin = l[i];\n\t\t}\n\t}\n\treturn min;\n}\n/*\n\
    Return the argmax (index of maximum element) in the array.\n    >>> argmax([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n    8L\n*/\nlong argmax(long[]\
    \ l) \n{\n\tint max = 0;\n\tint index = 0;\n\tfor (int i = 0; i < l.length; i++)\n\
    \t{\n\t\tif (l[i] > max)\n\t\t{\n\t\t\tmax = l[i];\n\t\t\tindex = i;\n\t\t}\n\t\
    }\n\treturn index;\n}\n/*\nReturn the argmin (index of minimum element) in the\
    \ array.\n    >>> argmin([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n\
    \    10L\n*/\nlong argmin(long[] l) \n{\n\tint min = 999999999;\n\tint index =\
    \ 0;\n\tfor (int i = 0; i < l.length; i++)\n\t{\n\t\tif (l[i]\nunittest\n{\n \
    \   alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n\
    \    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1ibiy6we.d(72): Error: found \''unittest\'' when expecting \'')\''\n/tmp/tmp1ibiy6we.d(79):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmp1ibiy6we.d(79):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ibiy6we.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n  long max;\n\
    \  max = l[0];\n  foreach(i; l)\n  {\n    if(max < i)\n    {\n      max = i;\n\
    \    }\n  }\n  return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpclwhgtfm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long ret\
    \ = l[0];\n    foreach(x; l)\n    {\n        if(x > ret) ret = x;\n    }\n   \
    \ return ret;\n}\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvi8lqofy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    foreach(long x; l) \n    {\n        if (x > max) \n        {\n\
    \            max = x;\n        }\n    }\n    return max;\n}\nunittest\n{\n   \
    \ alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n\
    \    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzxlp8fxg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n   long[] max_elements\
    \ = l[0..1];\n   foreach(elem; l) \n   {\n      if (elem > max_elements[0]) \n\
    \      {\n         max_elements[0] = elem;\n      }\n   }\n   return max_elements[0];\n\
    }\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0qyqmxg1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 0
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    foreach(i; l)\n    {\n        if(i > max)\n        {\n        \
    \    max = i;\n        }\n    }\n    return max;\n}\nunittest\n{\n    alias candidate\
    \ = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n\tlong max =\
    \ l[0];\n\tforeach(long item; l)\n\t{\n\t\tif(item > max)\n\t\t\tmax = item;\n\
    \t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n   \
    \ assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L,\
    \ -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmz9qxj8v.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    auto res\
    \ = 0L;\n    for (long v; l.popFront(v)) \n    {\n        res = max(res, v);\n\
    \    }\n    return res;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpe3l85oxt.d(13): Error: found \'')\'' when expecting \'';\''
    following for condition\n/tmp/tmpe3l85oxt.d(17): Error: found \''return\'' when
    expecting \'')\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe3l85oxt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max;\n\
    \    long i;\n    max = l[0];\n    for (i = 1L; i < l.length; i++) \n    {\n \
    \       if (l[i] > max) \n        {\n            max = l[i];\n        }\n    }\n\
    \    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn12n5qjr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = 0L;\n    foreach(i; l) \n    {\n        if (i > max) \n        {\n       \
    \     max = i;\n        }\n    }\n    return max;\n}\n/*\nReturn minimum element\
    \ in the array.\n    >>> min_element([1L, 2L, 3L])\n    1L\n    >>> min_element([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n    -10L\n    \n*/\nlong min_element(long[]\
    \ l) \n{\n    long min = 0L;\n    foreach(i; l) \n    {\n        if (i < min)\
    \ \n        {\n            min = i;\n        }\n    }\n    return min;\n}\n/*\n\
    Returns array with all elements squared.\n    >>> square_array([1L, 2L, 3L])\n\
    \    [1L, 4L, 9L]\n    >>> square_array([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    [25L, 9L, 25L, 4L, 9L, 9L, 81L, 0L, 15129L, 1L, 100L]\n*/\n\
    long[] square_array(long[] l) \n{\n    long[] result = new long[];\n    foreach(i;\
    \ l) \n    {\n        result ~= i*i;\n    }\n    return result;\n}\n/*\nReturns\
    \ array with the sum of each element and the next one.\n    >>> sum_next_array([1L,\
    \ 2L, 3L])\n    [3L, 5L]\n    >>> sum_next_array([5L, 3L, -5L, 2L, -3L, 3L, 9L,\
    \ 0L, 123L, 1L, -10L])\n    [8L, -2L, -1L, -1L, 0L, 12L, 9L, 123L, 124L, -9L]\n\
    */\nlong[] sum_next_array\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpra4ruim9.d(66): Error: semicolon expected, not \''unittest\''\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpra4ruim9.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long result\
    \ = -2147483648L;\n    foreach (long i; l) \n    {\n        if (i > result) \n\
    \        {\n            result = i;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L,\
    \ 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp747lqouc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long result;\n\
    \    result = -2147483648L;\n    for (int i = 0; i < len(l); i++)\n    {\n   \
    \     result = max(result, l[i]);\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n\
    \    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi0tw522q.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = 0L;\n    foreach(long x; l) \n    {\n        if (x > max) \n        {\n  \
    \          max = x;\n        }\n    }\n    return max;\n}\n/*\n    >>> max_element([])\n\
    \    0L\n*/\nlong max_element(long[] l) \n{\n    long max = 0L;\n    foreach(long\
    \ x; l) \n    {\n        if (x > max) \n        {\n            max = x;\n    \
    \    }\n    }\n    return max;\n}\n/*\n    >>> max_element([1, 2, 3])\n    3\n\
    \    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n*/\nunittest\n\
    {\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) ==\
    \ 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L])\
    \ == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcf5j9pes.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    for (int i = 1; i < l.length; i++) \n    {\n        if (l[i] >\
    \ max) \n        {\n            max = l[i];\n        }\n    }\n    return max;\n\
    }\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk735pl3y.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    if (l.length\
    \ == 0)\n        return 0;\n    long max = l[0];\n    foreach (m; l)\n       \
    \ if (m > max)\n            max = m;\n    return max;\n}\nunittest\n{\n    alias\
    \ candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n   \
    \ assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7yri41_a.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = 0L;\n    foreach(i; l)\n    {\n        if(i > max)\n        {\n          \
    \  max = i;\n        }\n    }\n    return max;\n}\nunittest\n{\n    alias candidate\
    \ = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkgcsiy58.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    foreach(m; l)\n    {\n        if(m > max)\n        {\n        \
    \    max = m;\n        }\n    }\n    return max;\n}\nunittest\n{\n    alias candidate\
    \ = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr7e2o_5g.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max_element;\n\
    \    long[] elements = l;\n    foreach (element; elements)\n    {\n        if\
    \ (element > max_element)\n        {\n            max_element = element;\n   \
    \     }\n    }\n    return max_element;\n}\nunittest\n{\n    alias candidate =\
    \ max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0tv2xs27.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n\tlong result\
    \ = l[0];\n\tforeach(i; l)\n\t{\n\t\tif(result < i)\n\t\t\tresult = i;\n\t}\n\t\
    return result;\n}\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1gir80tp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long current_max\
    \ = l[0];\n    for (size_t i = 1; i < l.length; i++)\n    {\n        if (l[i]\
    \ > current_max)\n        {\n            current_max = l[i];\n        }\n    }\n\
    \    return current_max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprqbbviiv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n    in\n    {\n\
    \        assert(l.length > 0);\n    } \n    body\n    {\n        long max = l[0];\n\
    \        foreach (i, e; l) {\n            if (e > max) {\n                max\
    \ = e;\n            }\n        }\n        return max;\n    }\nunittest\n{\n  \
    \  alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n\
    \    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp23ramfvh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    foreach(i; l) {\n        if (i > max)\n            max = i;\n \
    \   }\n    return max;\n}\n/*\nReturn minimum element in the array.\n    >>> min_element([1L,\
    \ 2L, 3L])\n    1L\n    >>> min_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    -10L\n    \n*/\nlong min_element(long[] l) \n{\n    long min\
    \ = l[0];\n    foreach(i; l) {\n        if (i < min)\n            min = i;\n \
    \   }\n    return min;\n}\n/*\nReturn the sum of elements in the array.\n    >>>\
    \ sum_array([1L, 2L, 3L])\n    6L\n    >>> sum_array([5L, 3L, -5L, 2L, -3L, 3L,\
    \ 9L, 0L, 123L, 1L, -10L])\n    142L\n    \n*/\nlong sum_array(long[] l) \n{\n\
    \    long sum = 0;\n    foreach(i; l) {\n        sum += i;\n    }\n    return\
    \ sum;\n}\n/*\nReturn the sum of elements in the array.\n    >>> sum_array([1L,\
    \ 2L, 3L])\n    6L\n    >>> sum_array([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    142L\n    \n*/\nlong sum_array(int[] l) \n{\n    long sum =\
    \ 0;\n    foreach(i; l) {\n        sum += i;\n    }\n    return sum;\n}\n/*\n\
    Return the average of elements in the array.\n    >>> average([1L, 2L, 3L])\n\
    \    2L\n    >>> average([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n\
    unittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L,\
    \ 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpuzoeabz_.d(68): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpuzoeabz_.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 0
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    for (int i = 1; i < l.length; i++)\n    {\n        if (l[i] > max)\n\
    \        {\n            max = l[i];\n        }\n    }\n    return max;\n}\nunittest\n\
    {\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) ==\
    \ 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L])\
    \ == 124L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    auto max\
    \ = l[0];\n    foreach(i; 1..l.length) \n    {\n        if (l[i] > max)\n    \
    \        max = l[i];\n    }\n    return max;\n}\n/*\nReturn minimum element in\
    \ the array.\n    >>> min_element([1L, 2L, 3L])\n    1L\n    >>> min_element([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n    -10L\n*/\nlong min_element(long[]\
    \ l) \n{\n    auto min = l[0];\n    foreach(i; 1..l.length) \n    {\n        if\
    \ (l[i] < min)\n            min = l[i];\n    }\n    return min;\n}\n/*\nReturn\
    \ the sum of elements in the array.\n    >>> sum_element([1L, 2L, 3L])\n    6L\n\
    \    >>> sum_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n   \
    \ 148L\n*/\nlong sum_element(long[] l) \n{\n    auto sum = 0L;\n    foreach(i;\
    \ 0..l.length) \n    {\n        sum += l[i];\n    }\n    return sum;\n}\n/*\n\
    Return the mean of elements in the array.\n    >>> mean_element([1L, 2L, 3L])\n\
    \    2L\n    >>> mean_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n\
    \    13L\n*/\nlong mean_element(long[] l) \n{\n    auto sum = 0L;\n    foreach(i;\
    \ 0..l.length) \n    {\n        sum += l[i];\n    }\n    return sum / l.length;\n\
    }\n/*\nReturn the median of elements in the array.\n    >>> median_element([1L,\
    \ 2L, 3L])\n\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpp4vmto2x.d(69): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpp4vmto2x.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n  long max;\n\
    \  max = l[0];\n  foreach(i; l) {\n    if (max < i) max = i;\n  }\n  return max;\n\
    }\n/*\nReturn maximum element in the array.\n    >>> max_element([1L, 2L, 3L])\n\
    \    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n\
    \    123L\n    \n*/\nlong max_element(long[] l) \n{\n  long max;\n  max = l[0];\n\
    \  foreach(i; l) {\n    if (max < i) max = i;\n  }\n  return max;\n}\nunittest\n\
    {\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) ==\
    \ 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L])\
    \ == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpir0eg54p.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    if (l.length==0)\n\
    \        return 0;\n    long max=l[0];\n    for (int i=1;i<l.length;i++)\n   \
    \     if (l[i]>max)\n            max=l[i];\n    return max;\n}\n/*\nReturn minimum\
    \ element in the array.\n    >>> min_element([1L, 2L, 3L])\n    1L\n    >>> min_element([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n    -10L\n*/\nlong min_element(long[]\
    \ l) \n{\n    if (l.length==0)\n        return 0;\n    long min=l[0];\n    for\
    \ (int i=1;i<l.length;i++)\n        if (l[i]<min)\n            min=l[i];\n   \
    \ return min;\n}\n/*\nReturn sum of all elements in the array.\n    >>> sum_array([1L,\
    \ 2L, 3L])\n    6L\n    >>> sum_array([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    156L\n*/\nlong sum_array(long[] l) \n{\n    long s=0;\n    for\
    \ (int i=0;i<l.length;i++)\n        s+=l[i];\n    return s;\n}\n/*\nReturn product\
    \ of all elements in the array.\n    >>> product_array([1L, 2L, 3L])\n    6L\n\
    \    >>> product_array([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n \
    \   -182260L\n*/\nlong product_array(long[] l) \n{\n    long p=1;\n    for (int\
    \ i=0;i<l.length;i++)\n        p*=l[i];\n    return p;\n}\n/*\nReturn all elements\
    \ in the array, except the maximum\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp35g4ytsx.d(65): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp35g4ytsx.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    foreach(i; l) \n    {\n        if (max < i) max = i;\n    }\n \
    \   return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpepjdna_w.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    foreach(item; l) \n    {\n        if (item > max) \n        {\n\
    \            max = item;\n        }\n    }\n    return max;\n}\nunittest\n{\n\
    \    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n\
    \    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqk6ze7aa.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = 0L;\n    foreach(i; l)\n    {\n        if(i > max)\n        {\n          \
    \  max = i;\n        }\n    }\n    return max;\n}\n/*\nReturn minimum element\
    \ in the array.\n    >>> min_element([1L, 2L, 3L])\n    1L\n    >>> min_element([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n    -10L\n    \n*/\nlong min_element(long[]\
    \ l) \n{\n    long min = 0L;\n    foreach(i; l)\n    {\n        if(i < min)\n\
    \        {\n            min = i;\n        }\n    }\n    return min;\n}\n/*\nReturn\
    \ sum of all elements in the array.\n    >>> sum_of_elements([1L, 2L, 3L])\n \
    \   6L\n    >>> sum_of_elements([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L])\n \
    \   55L\n*/\nlong sum_of_elements(long[] l) \n{\n    long sum = 0L;\n    foreach(i;\
    \ l)\n    {\n        sum += i;\n    }\n    return sum;\n}\n/*\nReturn mean of\
    \ all elements in the array.\n    >>> mean_of_elements([1L, 2L, 3L])\n    2L\n\
    \    >>> mean_of_elements([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L])\n    5L\n\
    */\nlong mean_of_elements(long[] l) \n{\n    long sum = 0L;\n    long count =\
    \ 0L;\n    foreach(i; l)\n    {\n        sum += i;\n        count++;\n    }\n\
    \    return (sum / count);\n}\n/*\nReturn variance of all elements in the array.\n\
    \    >>> variance_of_elements([1L, 2L, 3L])\n    1\nunittest\n{\n    alias candidate\
    \ = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpzagsmo99.d(76): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpzagsmo99.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    foreach(z; l) \n    {\n        if (z > max) \n        {\n     \
    \       max = z;\n        }\n    }\n    return max;\n}\n/*\nReturn minimum element\
    \ in the array.\n    >>> min_element([1L, 2L, 3L])\n    1L\n    >>> min_element([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n    -10L\n    \n*/\nlong min_element(long[]\
    \ l) \n{\n    long min = l[0];\n    foreach(z; l) \n    {\n        if (z < min)\
    \ \n        {\n            min = z;\n        }\n    }\n    return min;\n}\n/*\n\
    Return the median of a list of numbers.\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpzt3votup.d(42): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpzt3votup.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    foreach(i; l)\n    {\n        if(i > max)\n        {\n        \
    \    max = i;\n        }\n    }\n    return max;\n}\n/*\nReturn minimum element\
    \ in the array.\n    >>> min_element([1L, 2L, 3L])\n    1L\n    >>> min_element([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n    -10L\n*/\nlong min_element(long[]\
    \ l) \n{\n    long min = l[0];\n    foreach(i; l)\n    {\n        if(i < min)\n\
    \        {\n            min = i;\n        }\n    }\n    return min;\n}\n/*\nReturn\
    \ the mean value of the array.\n    >>> mean([1L, 2L, 3L])\n    2L\n    >>> mean([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n    6L\n*/\nlong mean(long[]\
    \ l) \n{\n    long sum = 0;\n    foreach(i; l)\n    {\n        sum += i;\n   \
    \ }\n    return sum / l.length;\n}\n/*\nReturn median value of the array.\n  \
    \  >>> median([1L, 2L, 3L])\n    2L\n    >>> median([5L, 3L, -5L, 2L, -3L, 3L,\
    \ 9L, 0L, 123L, 1L, -10L])\n    3L\n*/\nlong median(long[] l) \n{\n    sort(l);\n\
    \    return l[l.length / 2];\n}\n/*\nReturn the variance of the array.\n    >>>\
    \ variance([1L, 2L, 3L])\n    1L\n    >>> variance([5L, 3L, -5L, 2L, -3L, 3L,\
    \ 9L, 0L, 123L, 1L, -10L])\n    594L\n*/\nlong variance(long[] l)\nunittest\n\
    {\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) ==\
    \ 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L])\
    \ == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpewjg6u57.d(77): Error: semicolon expected following function
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpewjg6u57.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n  in {\n    forall(long\
    \ i; 0L <= i && i < l.length)\n      l[i] >= 0L;\n  }\n  out(result) {\n    result\
    \ == max(l);\n  }\n{\n  long max = 0L;\n  for (long i = 0L; i < l.length; i++)\
    \ {\n    if (l[i] > max) {\n      max = l[i];\n    }\n  }\n  return max;\n}\n\
    unittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L,\
    \ 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyesfe7eu.d(12): Error: found \''i\'' when expecting \''.\''
    following long\n/tmp/tmpyesfe7eu.d(12): Error: found \'';\'' when expecting identifier
    following \''long.\''\n/tmp/tmpyesfe7eu.d(12): Error: found \''0L\'' when expecting
    \'',\''\n/tmp/tmpyesfe7eu.d(12): Error: expression expected, not \''<=\''\n/tmp/tmpyesfe7eu.d(12):
    Error: found \''i\'' when expecting \'',\''\n/tmp/tmpyesfe7eu.d(12): Error: expression
    expected, not \''&&\''\n/tmp/tmpyesfe7eu.d(12): Error: found \''i\'' when expecting
    \'',\''\n/tmp/tmpyesfe7eu.d(12): Error: expression expected, not \''<\''\n/tmp/tmpyesfe7eu.d(12):
    Error: found \''l\'' when expecting \'',\''\n/tmp/tmpyesfe7eu.d(13): Error: found
    \''l\'' when expecting \'';\'' following statement\n/tmp/tmpyesfe7eu.d(18): Error:
    missing body { ... } after in or out\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpyesfe7eu.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max_elem\
    \ = l[0];\n    foreach(elem; l)\n    {\n        if (elem > max_elem)\n       \
    \ {\n            max_elem = elem;\n        }\n    }\n    return max_elem;\n}\n\
    /*\nReturn the number of occurences of the maximum element in the array.\n   \
    \ >>> number_of_max_element([1L, 2L, 3L])\n    1L\n    >>> number_of_max_element([1L,\
    \ 2L, 2L, 3L, 3L, 3L])\n    3L\n    >>> number_of_max_element([5L, 3L, -5L, 2L,\
    \ -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n    1L\n*/\nlong number_of_max_element(long[]\
    \ l) \n{\n    long num_max_elem = 0;\n    long max_elem = max_element(l);\n  \
    \  foreach(elem; l)\n    {\n        if (elem == max_elem)\n        {\n       \
    \     num_max_elem++;\n        }\n    }\n    return num_max_elem;\n}\nunittest\n\
    {\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) ==\
    \ 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L])\
    \ == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpovbxyvgq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    foreach(var i; l)\n    {\n        if(i > max)\n        {\n    \
    \        max = i;\n        }\n    }\n    return max;\n}\nunittest\n{\n    alias\
    \ candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n   \
    \ assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7yebvaxl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max;\n\
    \    foreach(x; l) \n    {\n        if (l.length == 0) return 0; // if the list\
    \ is empty, return 0 (instead of -inf)\n        if (x > max) max = x;\n    }\n\
    \    return max;\n}\n/*\nReturn minimum element in the array.\n    >>> min_element([1L,\
    \ 2L, 3L])\n    1L\n    >>> min_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    -10L\n    \n*/\nlong min_element(long[] l) \n{\n    long min;\n\
    \    foreach(x; l) \n    {\n        if (l.length == 0) return 0; // if the list\
    \ is empty, return 0 (instead of +inf)\n        if (x < min) min = x;\n    }\n\
    \    return min;\n}\n/*\nReturn array with elements in random order.\n    >>>\
    \ shuffle([1L, 2L, 3L])\n    [2L, 3L, 1L]\n    >>> shuffle([5L, 3L, -5L, 2L, -3L,\
    \ 3L, 9L, 0L, 123L, 1L, -10L])\n    [3L, 0L, 9L, -5L, -10L, 3L, 123L, 5L, -3L,\
    \ 2L, 1L]\n    \n*/\nlong[] shuffle(long[] l) \n{\n    long[] l_shuffled;\n  \
    \  foreach(x; l)\n    {\n        l_shuffled ~= l[rand() % l.length];\n    }\n\
    \    return l_shuffled;\n}\n/*\nReturn the sum of elements in array.\n    >>>\
    \ sum_elements([1L, 2L, 3L])\n    6L\n    >>> sum_elements([5L, 3L, -5L, 2L, -3L,\
    \ 3L, 9L, 0L, 123L, 1L, -10L])\n    150L\n    \n*/\nlong sum_elements(long\nunittest\n\
    {\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) ==\
    \ 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L])\
    \ == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpkdad5vn9.d(64): Error: found \''unittest\'' when expecting \'')\''\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkdad5vn9.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long result\
    \ = l[0];\n    foreach(n; l)\n    {\n        if(n > result)\n        {\n     \
    \       result = n;\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n\
    \    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp03adkokp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    foreach(long x; l)\n    {\n        if(x > max)\n        {\n   \
    \         max = x;\n        }\n    }\n    return max;\n}\n/*\nReturn the minimum\
    \ element in the array.\n    >>> min_element([1L, 2L, 3L])\n    1L\n    >>> min_element([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n    -10L\n    \n*/\nlong min_element(long[]\
    \ l) \n{\n    long min = l[0];\n    foreach(long x; l)\n    {\n        if(x <\
    \ min)\n        {\n            min = x;\n        }\n    }\n    return min;\n}\n\
    /*\nReturn maximum element in the array.\n    >>> max_element([1.0, 2.0, 3.0])\n\
    \    3.0\n    >>> max_element([5.0, 3.0, -5.0, 2.0, -3.0, 3.0, 9.0, 0.0, 123.0,\
    \ 1.0, -10.0])\n    123.0\n    \n*/\ndouble max_element(double[] l) \n{\n    double\
    \ max = l[0];\n    foreach(double x; l)\n    {\n        if(x > max)\n        {\n\
    \            max = x;\n        }\n    }\n    return max;\n}\n/*\nReturn the minimum\
    \ element in the array.\n    >>> min_element([1.0, 2.0, 3.0])\n    1.0\n    >>>\
    \ min_element([5.0, 3.0, -5.0, 2.0, -3.0, 3.0, 9.0, 0.0, 123.0, 1.0, -10.0])\n\
    \    -10.0\n    \n*/\ndouble min_element(double[] l) \n{\n    double min = l[0];\n\
    \    foreach(double x; l)\n    {\n        if(x < min)\n        {\n           \
    \ min\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjkug8dl4.d(78): Error: found \''unittest\'' when expecting \'';\''
    following statement\n/tmp/tmpjkug8dl4.d(85): Error: found \''EOF\'' when expecting
    \''}\'' following compound statement\n/tmp/tmpjkug8dl4.d(85): Error: found \''EOF\''
    when expecting \''}\'' following compound statement\n/tmp/tmpjkug8dl4.d(85): Error:
    found \''EOF\'' when expecting \''}\'' following compound statement\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpjkug8dl4.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    foreach(e; l) \n    {\n        if (e > max) \n        {\n     \
    \       max = e;\n        }\n    }\n    return max;\n}\n/*\nReturn minimum element\
    \ in the array.\n    >>> min_element([1L, 2L, 3L])\n    1L\n    >>> min_element([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n    -10L\n*/\nlong min_element(long[]\
    \ l) \n{\n    long min = l[0];\n    foreach(e; l) \n    {\n        if (e < min)\
    \ \n        {\n            min = e;\n        }\n    }\n    return min;\n}\n/*\n\
    Return mean of the array.\n    >>> mean([1L, 2L, 3L])\n    2L\n    >>> mean([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n    10L\n*/\nlong mean(long[]\
    \ l) \n{\n    return sum(l) / l.length;\n}\n/*\nReturn median of the array.\n\
    \    >>> median([1L, 2L, 3L])\n    2L\n    >>> median([1L, 2L, 3L, 4L])\n    2L\n\
    \    >>> median([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n    2L\n\
    */\nlong median(long[] l) \n{\n    sort(l);\n    return l[l.length / 2];\n}\n\
    /*\nReturn index of first occurence of element in the array.\n    >>> first_index_of(1L,\
    \ [1L, 2L, 3L])\n    0\n    >>> first_index_of(10L, [5L, 3L, -5L, 2L, -3L, 3L,\
    \ 9L, 0L, 123L, 1L, -\nunittest\n{\n    alias candidate = max_element;\n\n   \
    \ assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L,\
    \ -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpa49hb2dy.d(66): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpa49hb2dy.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max_elem\
    \ = l[0];\n    foreach(i; l) \n    {\n        if (max_elem < i) \n        {\n\
    \            max_elem = i;\n        }\n    }\n    return max_elem;\n}\nunittest\n\
    {\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) ==\
    \ 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L])\
    \ == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp28sz0rme.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    foreach(el; l)\n    {\n        if(el > max)\n        {\n      \
    \      max = el;\n        }\n    }\n    return max;\n}\nunittest\n{\n    alias\
    \ candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n   \
    \ assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfgj2m06x.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    for (int i = 1; i < l.length; i++) \n    {\n        if (l[i] >\
    \ max)\n        {\n            max = l[i];\n        }\n    }\n    return max;\n\
    }\n/*\n Return maximum element in the array.\n    >>> max_element([1.0, 2.0, 3.0])\n\
    \    3.0\n    >>> max_element([5.0, 3.0, -5.0, 2.0, -3.0, 3.0, 9.0, 0.0, 123.0,\
    \ 1.0, -10.0])\n    123.0\n*/\ndouble max_element(double[] d) \n{\n    double\
    \ max = d[0];\n    for (int i = 1; i < d.length; i++) \n    {\n        if (d[i]\
    \ > max)\n        {\n            max = d[i];\n        }\n    }\n    return max;\n\
    }\n/*\nReturn minimum element in the array.\n    >>> min_element([1L, 2L, 3L])\n\
    \    1L\n    >>> min_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n\
    \    -10L\n*/\nlong min_element(long[] l) \n{\n    long min = l[0];\n    for (int\
    \ i = 1; i < l.length; i++) \n    {\n        if (l[i] < min)\n        {\n    \
    \        min = l[i];\n        }\n    }\n    return min;\n}\n/*\nReturn minimum\
    \ element in the array.\n    >>> min_element([1.0, 2.0, 3.0])\n    1.0\n    >>>\
    \ min_element([5.0, 3.0, -5.0, 2.0, -3.0, 3.0, 9.0, 0.0, 123.0, 1.0, -10.0])\n\
    \    -10.0\n*/\ndouble min_element(double[] d) \n{\n    double min =\nunittest\n\
    {\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) ==\
    \ 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L])\
    \ == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyzdzakgp.d(70): Error: expression expected, not \''unittest\''\n/tmp/tmpyzdzakgp.d(71):
    Error: semicolon expected, not \''{\''\n/tmp/tmpyzdzakgp.d(77): Error: found \''EOF\''
    when expecting \''}\'' following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpyzdzakgp.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long tmp\
    \ = 0L;\n    foreach(n; l)\n    {\n        if(tmp < n)\n        {\n          \
    \  tmp = n;\n        }\n    }\n    return tmp;\n}\nunittest\n{\n    alias candidate\
    \ = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphp1_1g_7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n\tlong max =\
    \ l[0];\n\tforeach(long i; l) \n\t{\n\t\tif(i > max)\n\t\t\tmax = i;\n\t}\n\t\
    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqooait7b.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    for (long i = 1; i < l.length; i++) \n    {\n        if (l[i] >\
    \ max) \n        {\n            max = l[i];\n        }\n    }\n    return max;\n\
    }\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5s14245g.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 0
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    for (int i = 1; i < l.length; i++)\n    {\n        if (l[i] > max)\n\
    \        {\n            max = l[i];\n        }\n    }\n    return max;\n}\nunittest\n\
    {\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) ==\
    \ 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L])\
    \ == 124L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max_value\
    \ = long.min_value;\n    foreach(e; l)\n    {\n        if(e > max_value)\n   \
    \     {\n            max_value = e;\n        }\n    }\n    return max_value;\n\
    }\n/*\nReturn minimum element in the array.\n    >>> min_element([1L, 2L, 3L])\n\
    \    1L\n    >>> min_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n\
    \    -10L\n    \n*/\nlong min_element(long[] l) \n{\n    long min_value = long.max_value;\n\
    \    foreach(e; l)\n    {\n        if(e < min_value)\n        {\n            min_value\
    \ = e;\n        }\n    }\n    return min_value;\n}\n/*\nReturn the maximum and\
    \ minimum elements in the array.\n    >>> min_max_element([1L, 2L, 3L])\n    (1L,\
    \ 3L)\n    >>> min_max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n\
    \    (-10L, 123L)\n    >>> min_max_element([])\n    (0L, 0L)\n*/\ntuple(long,\
    \ long) min_max_element(long[] l) \n{\n    return (min_element(l), max_element(l));\n\
    }\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgfbf08i9.d(51): Error: function declaration without return type.
    (Note that constructors are always named \''this\'')\n/tmp/tmpgfbf08i9.d(51):
    Error: no identifier for declarator tuple(long, long)\n/tmp/tmpgfbf08i9.d(51):
    Error: semicolon expected following function declaration\n/tmp/tmpgfbf08i9.d(51):
    Error: function declaration without return type. (Note that constructors are always
    named \''this\'')\n/tmp/tmpgfbf08i9.d(52): Error: no identifier for declarator
    min_max_element(long[] l)\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgfbf08i9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n\tlong max;\n\
    \tlong i;\n\tmax = l[0];\n\ti = 1;\n\twhile (i < l.length) \n\t{\n\t\tif (l[i]\
    \ > max) \n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t\ti = i + 1;\n\t}\n\treturn max;\n\
    }\n/*\nReturn minimum element in the array.\n    >>> min_element([1L, 2L, 3L])\n\
    \    1L\n    >>> min_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n\
    \    -10L\n*/\nlong min_element(long[] l) \n{\n\tlong min;\n\tlong i;\n\tmin =\
    \ l[0];\n\ti = 1;\n\twhile (i < l.length) \n\t{\n\t\tif (l[i] < min) \n\t\t{\n\
    \t\t\tmin = l[i];\n\t\t}\n\t\ti = i + 1;\n\t}\n\treturn min;\n}\n/*\nReturn k-th\
    \ element from the end in the array.\n    >>> element_from_end([1L, 2L, 3L], 1L)\n\
    \    3L\n    >>> element_from_end([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L,\
    \ -10L], 3L)\n    -5L\n*/\nlong element_from_end(long[] l, long k) \n{\n\treturn\
    \ l[l.length - k - 1];\n}\n/*\nReturn number of occurences of x in the array.\n\
    \    >>> number_of_occurences([1L, 2L, 3L], 1L)\n    1L\n    >>> number_of_occurences([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L], 3L)\n    2L\n*/\nlong number_of_occurences(long[]\
    \ l, long\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpu5cf13lo.d(68): Error: found \''unittest\'' when expecting \'')\''\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu5cf13lo.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long m =\
    \ std.numeric.min_long;\n    for (long n : l)\n        m = max(m, n);\n    return\
    \ m;\n}\n/*\nRead elements from the stdin.\n    >>> read_elements()\n    [1L,\
    \ 3L, 5L, 7L, 9L]\n*/\nlong[] read_elements() \n{\n    long[] l = new long[5];\n\
    \    for (int i = 0; i < 5; i++) \n    {\n        l[i] = std.io.read_long();\n\
    \    }\n    return l;\n}\n/*\nPrint elements of the array.\n    >>> print_elements([0L,\
    \ 1L, 2L, 3L, 4L])\n    0L\n    1L\n    2L\n    3L\n    4L\n*/\nunittest\n{\n\
    \    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n\
    \    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5lq2m9bp.d(13): Error: semicolon expected, not \'':\''\n/tmp/tmp5lq2m9bp.d(13):
    Error: expression expected, not \'':\''\n/tmp/tmp5lq2m9bp.d(13): Error: found
    \''l\'' when expecting \'';\'' following for condition\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp5lq2m9bp.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = 0L;\n    foreach(x; l) \n    {\n        if (x > max) \n        {\n       \
    \     max = x;\n        }\n    }\n    return max;\n}\n/*\nRemove duplicates.\n\
    \    >>> unique([1L, 2L, 3L, 3L, 2L, 1L])\n    [1L, 2L, 3L]\n*/\nlong[] unique(long[]\
    \ l) \n{\n    long[] result = new long[0L];\n    foreach(item; l) \n    {\n  \
    \      if (std.algorithm.any!(a => item == a)(result)) \n        {\n         \
    \   continue;\n        }\n        result ~= item;\n    }\n    return result;\n\
    }\n/*\nSort the array by ascending.\n    >>> sort([5L, 3L, -5L, 2L, -3L, 3L, 9L,\
    \ 0L, 123L, 1L, -10L])\n    [-10L, -5L, -3L, 0L, 1L, 2L, 3L, 3L, 5L, 9L, 123L]\n\
    */\nlong[] sort(long[] l) \n{\n    return std.algorithm.sort(l);\n}\n/*\nRemove\
    \ element from array.\n    >>> remove([1L, 2L, 3L, 4L, 2L, 3L], 2L)\n    [1L,\
    \ 3L, 4L, 3L]\n*/\nlong[] remove(long[] l, long item) \n{\n    auto result = new\
    \ long[0L];\n    foreach(i; l) \n    {\n        if (i != item) \n        {\n \
    \           result ~= i;\n        }\n    }\n    return result;\n}\n/*\nCalculate\
    \ GCD of two numbers.\n    >>> gcd(6L, 9L)\n    3L\n*/\nlong gcd(long a, long\
    \ b) \n{\n    if (a == 0L || b == 0L) \n    {\n        return 0L;\n    }\n   \
    \ long c = a % b;\n    while (c != 0L) \n\nunittest\n{\n    alias candidate =\
    \ max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9be6j9a_.d(80): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9be6j9a_.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n\tlong max =\
    \ 0;\n\tforeach(e; l)\n\t{\n\t\tif(e > max)\n\t\t\tmax = e;\n\t}\n\treturn max;\n\
    }\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsqczwm86.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n\tlong m = l[0];\n\
    \tforeach(e; l)\n\t{\n\t\tif(e > m)\n\t\t\tm = e;\n\t}\n\treturn m;\n}\nunittest\n\
    {\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) ==\
    \ 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L])\
    \ == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpllu66xi8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n\tlong maximum\
    \ = l[0];\n\tforeach(long element; l) \n\t{\n\t\tif(element > maximum) \n\t\t\
    {\n\t\t\tmaximum = element;\n\t\t}\n\t}\n\treturn maximum;\n}\nunittest\n{\n \
    \   alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n\
    \    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkgt3zzn2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    foreach(l) \n    {\n        if (l < max) \n        {\n        \
    \    max = l;\n        }\n    }\n    return max;\n}\n/*\nReturn minimum element\
    \ in the array.\n    >>> min_element([1L, 2L, 3L])\n    1L\n    >>> min_element([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n    -10L\n*/\nlong min_element(long[]\
    \ l) \n{\n    long min = l[0];\n    foreach(l) \n    {\n        if (l > min) \n\
    \        {\n            min = l;\n        }\n    }\n    return min;\n}\n/*\nReturn\
    \ sum of elements of the array.\n    >>> sum_element([5L, 3L, -5L, 2L, -3L, 3L,\
    \ 9L, 0L, 123L, 1L, -10L])\n    137L\n*/\nlong sum_element(long[] l) \n{\n   \
    \ long sum = 0;\n    foreach(l) \n    {\n        sum += l;\n    }\n    return\
    \ sum;\n}\n/*\nReturn an array containing all elements of the array except\n \
    \   the i-th element.\n    >>> range(0L, 1L)\n    [0L]\n    >>> range(1L, 2L)\n\
    \    [0L, 1L]\n    >>> range(1L, 4L)\n    [0L, 1L, 2L, 3L]\n    >>> range(1L,\
    \ -1L)\n    [1L, 0L]\n    >>> range(0L, 4L)\n    [0L, 1L, 2L, 3L]\n    >>> range(0L,\
    \ 0L)\n    []\n    >>> range(0L, 1L)\n    [0L]\n    >>> range(2L, -2L)\n    [2L,\
    \ 1L, 0L, -1L]\n    >>> range(4L, 4L)\n    []\n    >>> range\nunittest\n{\n  \
    \  alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n\
    \    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpq8lq1iwd.d(13): Error: no identifier for declarator l\n/tmp/tmpq8lq1iwd.d(13):
    Error: found \'')\'' when expecting \'';\''\n/tmp/tmpq8lq1iwd.d(20): Error: found
    \''return\'' when expecting \'')\''\n/tmp/tmpq8lq1iwd.d(32): Error: no identifier
    for declarator l\n/tmp/tmpq8lq1iwd.d(32): Error: found \'')\'' when expecting
    \'';\''\n/tmp/tmpq8lq1iwd.d(39): Error: found \''return\'' when expecting \'')\''\n/tmp/tmpq8lq1iwd.d(49):
    Error: no identifier for declarator l\n/tmp/tmpq8lq1iwd.d(49): Error: found \'')\''
    when expecting \'';\''\n/tmp/tmpq8lq1iwd.d(53): Error: found \''return\'' when
    expecting \'')\''\n/tmp/tmpq8lq1iwd.d(55): Error: unterminated /* */ comment\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq8lq1iwd.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    for (int i = 1; i < l.length; i++) \n    {\n        if (l[i] >\
    \ max) \n        {\n            max = l[i];\n        }\n    }\n    return max;\n\
    }\n/*\nReturn minimum element in the array.\n    >>> min_element([1L, 2L, 3L])\n\
    \    1L\n    >>> min_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n\
    \    -10L\n*/\nlong min_element(long[] l) \n{\n    long min = l[0];\n    for (int\
    \ i = 1; i < l.length; i++) \n    {\n        if (l[i] < min) \n        {\n   \
    \         min = l[i];\n        }\n    }\n    return min;\n}\nunittest\n{\n   \
    \ alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n\
    \    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdwcsiypc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n  long r = l[0];\n\
    \  foreach(v; l) r = max(r, v);\n  return r;\n}\n/*\nReturn length of array.\n\
    \    >>> length([1L, 2L, 3L])\n    3L\n    >>> length([5L, 3L, -5L, 2L, -3L, 3L,\
    \ 9L, 0L, 123L, 1L, -10L])\n    11L\n    \n*/\nlong length(long[] l)\n{\n  return\
    \ l.length;\n}\n/*\nReturn minimum element in the array.\n    >>> min_element([1L,\
    \ 2L, 3L])\n    1L\n    >>> min_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    -10L\n    \n*/\nlong min_element(long[] l)\n{\n  long r = l[0];\n\
    \  foreach(v; l) r = min(r, v);\n  return r;\n}\n/*\nReturn sum of elements in\
    \ the array.\n    >>> sum([1L, 2L, 3L])\n    6L\n    >>> sum([5L, 3L, -5L, 2L,\
    \ -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n    178L\n    \n*/\nlong sum(long[] l)\n\
    {\n  long r = 0;\n  foreach(v; l) r += v;\n  return r;\n}\nunittest\n{\n    alias\
    \ candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n   \
    \ assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0fveneo_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n\tint n = l.length;\n\
    \tlong max = l[0];\n\tforeach(i; 1..n)\n\t{\n\t\tif(l[i] > max)\n\t\t\tmax = l[i];\n\
    \t}\n\treturn max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n   \
    \ assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L,\
    \ -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3r8ub74j.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    for (int i = 1; i < l.length; i++) \n    {\n        if (l[i] >\
    \ max)\n        {\n            max = l[i];\n        }\n    }\n    return max;\n\
    }\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbm9zaaqt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max_elem\
    \ = l[0];\n    foreach(long i; l)\n    {\n        if (i > max_elem)\n        {\n\
    \            max_elem = i;\n        }\n    }\n    return max_elem;\n}\nunittest\n\
    {\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) ==\
    \ 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L])\
    \ == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfiyxo9lm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max=l[0];\n\
    \    foreach(long el; l) {\n        if (el > max) {\n            max = el;\n \
    \       }\n    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfye1wazm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max;\n\
    \    for (int n = 0; n < l.length; n++) \n    {\n        max = l[0];\n       \
    \ if (l[n] > max) \n        {\n            max = l[n];\n        }\n    }\n   \
    \ return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpojfbwzha.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    foreach(v; l) \n    {\n        if (v > max)\n            max =\
    \ v;\n    }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzz1bd_b7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n\treturn reduce!((a,\
    \ b) => max(a, b))(l);\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyn1opgho.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max;\n\
    \    int i = 0;\n    max = l[0];\n    for (i = 0; i < l.length; i++)\n    {\n\
    \        if (l[i] > max)\n        {\n            max = l[i];\n        }\n    }\n\
    \    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp31d4_erc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long maxx\
    \ = l[0];\n    for (long i = 1; i < l.length; i++)\n    {\n        if (l[i] >\
    \ maxx) maxx = l[i];\n    }\n    return maxx;\n}\nunittest\n{\n    alias candidate\
    \ = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1x5zetdg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n\tlong max =\
    \ l[0];\n\tforeach(item; l)\n\t{\n\t\tif(item > max)\n\t\t\tmax = item;\n\t}\n\
    \treturn max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq_n9yq0o.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n  long max;\n\
    \  max = l[0];\n  foreach(long k; l) {\n    if (k > max) max = k;\n  }\n  return\
    \ max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw_8wofhp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = -1000000L;\n    foreach(long i; l)\n    {\n        if(i > max)\n        {\n\
    \            max = i;\n        }\n    }\n    return max;\n}\nunittest\n{\n   \
    \ alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n\
    \    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw5ruofcs.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    foreach(ref n; l)\n    {\n        if(n > max) max = n;\n    }\n\
    \    return max;\n}\n/*\nReturn the value of x to the power of y.\n    >>> power(2L,\
    \ 3L)\n    8L\n    >>> power(0L, 10L)\n    0L\n    >>> power(5L, 5L)\n    3125L\n\
    \    \n*/\nlong power(long x, long y) \n{\n    long result = 1L;\n    foreach(i;\
    \ 0..y)\n    {\n        result *= x;\n    }\n    return result;\n}\n/*\nReturn\
    \ maximum difference of two consecutive elements in the array.\n    >>> max_difference([1L,\
    \ 2L, 3L])\n    1L\n    >>> max_difference([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L,\
    \ 123L, 1L, -10L])\n    126L\n    \n*/\nlong max_difference(long[] l) \n{\n  \
    \  long max = l[0];\n    long min = l[0];\n    foreach(n; l)\n    {\n        if(n\
    \ > max) max = n;\n        if(n < min) min = n;\n    }\n    return max - min;\n\
    }\n/*\nReturn number of occurrences of x in array.\n    >>> count_occurrences(1L,\
    \ [1L, 2L, 3L])\n    1L\n    >>> count_occurrences(3L, [5L, 3L, -5L, 2L, -3L,\
    \ 3L, 9L, 0L, 123L, 1L, -10L])\n    2L\n    \n*/\nlong count_occurrences(long\
    \ x, long[] l) \n{\n    long count = 0L;\n    foreach(n; l)\n    {\n        if(n\
    \ == x) count++;\n    }\n    return count;\n}\n/*\nReturn number of occurrences\
    \ of x in array.\n    >>> count_occurrences('z', ['c', 'd', '\nunittest\n{\n \
    \   alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n\
    \    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpi6q2a49n.d(74): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpi6q2a49n.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max;\n\
    \    max = l[0];\n    foreach(long m; l) \n    {\n        if (m > max) \n    \
    \    {\n            max = m;\n        }\n    }\n    return max;\n}\nunittest\n\
    {\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) ==\
    \ 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L])\
    \ == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp31v2un6s.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max;\n\
    \    if (l.length==0)\n    {\n        return 0;\n    }\n    else\n    {\n    \
    \    max = l[0];\n        for (int i = 1; i < l.length; i++)\n        {\n    \
    \        if (l[i] > max)\n            {\n                max = l[i];\n       \
    \     }\n        }\n        return max;\n    }\n}\n/*\nReturn minimum element\
    \ in the array.\n    >>> min_element([1L, 2L, 3L])\n    1L\n    >>> min_element([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n    -10L\n    \n*/\nlong min_element(long[]\
    \ l) \n{\n    long min;\n    if (l.length==0)\n    {\n        return 0;\n    }\n\
    \    else\n    {\n        min = l[0];\n        for (int i = 1; i < l.length; i++)\n\
    \        {\n            if (l[i] < min)\n            {\n                min =\
    \ l[i];\n            }\n        }\n        return min;\n    }\n}\n/*\nReturn average\
    \ of all the elements in the array.\n    >>> avg_element([1L, 2L, 3L])\n    2L\n\
    \    >>> avg_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n   \
    \ 9L\n    \n*/\nlong avg_element(long[] l) \n{\n    long sum;\n    if (l.length==0)\n\
    \    {\n        return 0;\n    }\n    else\n    {\n        sum = 0;\n        for\
    \ (int i = 0; i < l.length; i++)\n        {\n            sum = sum + l[i];\n \
    \       }\n        return sum/l.length;\n    }\n}\n/*\nReturn index of first ocurrence\
    \ of element in the array.\n    >>> index_of([1L, 2L, 3L], 2L)\n   \nunittest\n\
    {\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) ==\
    \ 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L])\
    \ == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjbyw7w9a.d(83): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpjbyw7w9a.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    if (l.length\
    \ == 0) \n    {\n        return 0;\n    }\n    long max = l[0];\n    for (int\
    \ i = 1; i < l.length; i++) \n    {\n        if (l[i] > max) \n        {\n   \
    \         max = l[i];\n        }\n    }\n    return max;\n}\n/*\nReturn minimum\
    \ element in the array.\n    >>> min_element([1L, 2L, 3L])\n    1L\n    >>> min_element([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n    -10L\n    \n*/\nlong min_element(long[]\
    \ l) \n{\n    if (l.length == 0) \n    {\n        return 0;\n    }\n    long min\
    \ = l[0];\n    for (int i = 1; i < l.length; i++) \n    {\n        if (l[i] <\
    \ min) \n        {\n            min = l[i];\n        }\n    }\n    return min;\n\
    }\n/*\nReturn i, j such that l[i] = max(l) and l[j] = min(l).\n    >>> max_min_element([1L,\
    \ 2L, 3L])\n    (2L, 0L)\n    >>> max_min_element([5L, 3L, -5L, 2L, -3L, 3L, 9L,\
    \ 0L, 123L, 1L, -10L])\n    (8L, 10L)\n    \n*/\nlong[] max_min_element(long[]\
    \ l) \n{\n    long[] res = new long[2];\n    if (l.length == 0) \n    {\n    \
    \    return res;\n    }\n    long max = l[0];\n    long min = l[0];\n    res[0]\
    \ = 0;\n    res[1] = 0;\n    for (int i = 1; i < l.length; i++) \n    {\n    \
    \    if (l[i] > max) \n        {\n            max = l\nunittest\n{\n    alias\
    \ candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n   \
    \ assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyn_z9bhl.d(74): Error: found \''unittest\'' when expecting \'';\''
    following statement\n/tmp/tmpyn_z9bhl.d(81): Error: found \''EOF\'' when expecting
    \''}\'' following compound statement\n/tmp/tmpyn_z9bhl.d(81): Error: found \''EOF\''
    when expecting \''}\'' following compound statement\n/tmp/tmpyn_z9bhl.d(81): Error:
    found \''EOF\'' when expecting \''}\'' following compound statement\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpyn_z9bhl.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    int d =\
    \ 0;\n    int e = 0;\n    foreach(i; l)\n    {\n        if(l[i] > l[d])\n    \
    \    {\n            d = i;\n        }\n    }\n    return l[d];\n}\n/*\nReturn\
    \ minimum element in the array.\n    >>> min_element([1L, 2L, 3L])\n    1L\n \
    \   >>> min_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n    -10L\n\
    \    \n*/\nlong min_element(long[] l) \n{\n    int d = 0;\n    int e = 0;\n  \
    \  foreach(i; l)\n    {\n        if(l[i] < l[d])\n        {\n            d = i;\n\
    \        }\n    }\n    return l[d];\n}\n/*\nReturns the index of the first occurrence\
    \ of x in the array or -1 if x is not found.\n    >>> find_first_of([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L], 3L)\n    1L\n    >>> find_first_of([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L], -3L)\n    4L\n    >>> find_first_of([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L], -3L, 4L)\n    4L\n    >>> find_first_of([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L], -3L, 5L)\n    -1L\n    \n*/\n\
    long find_first_of(long[] l, long x, long from = 0L) \n{\n    long count = 0L;\n\
    \    for(int i = 0; i <\nunittest\n{\n    alias candidate = max_element;\n\n \
    \   assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpo3wukjq_.d(60): Error: expression expected, not \''unittest\''\n/tmp/tmpo3wukjq_.d(61):
    Error: found \''{\'' when expecting \'';\'' following for condition\n/tmp/tmpo3wukjq_.d(62):
    Error: expression expected, not \''alias\''\n/tmp/tmpo3wukjq_.d(62): Error: found
    \''candidate\'' when expecting \'')\''\n/tmp/tmpo3wukjq_.d(62): Error: found \''=\''
    instead of statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo3wukjq_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    for (int i = 1; i < l.length; i++) \n    {\n        if (l[i] >\
    \ max) \n        {\n            max = l[i];\n        }\n    }\n    return max;\n\
    }\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk735pl3y.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long result\
    \ = 0L;\n    foreach (long x; l)\n    {\n        if (x > result)\n        {\n\
    \            result = x;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) ==\
    \ 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L])\
    \ == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxsk7yx_m.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    foreach(i; 1..l.length)\n    {\n        if(l[i] > max)\n      \
    \  {\n            max = l[i];\n        }\n    }\n    return max;\n}\n \n/*\nReturn\
    \ an array containing the minimum and maximum elements in the array.\n    >>>\
    \ min_max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n    [-10L,\
    \ 123L]\n*/\nlong[] min_max_element(long[] l) \n{\n    long[] ret = [l[0], l[0]];\n\
    \    foreach(i; 1..l.length)\n    {\n        if(l[i] < ret[0])\n        {\n  \
    \          ret[0] = l[i];\n        }\n        if(l[i] > ret[1])\n        {\n \
    \           ret[1] = l[i];\n        }\n    }\n    return ret;\n}\n \n/*\nReturn\
    \ an array containing the sum of all elements in the array.\n    >>> sum_elements([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n    143L\n*/\nlong sum_elements(long[]\
    \ l) \n{\n    long sum = 0;\n    foreach(i; l)\n    {\n        sum += i;\n   \
    \ }\n    return sum;\n}\n \n/*\nReturn an array containing the product of all\
    \ elements in the array.\n    >>> product_elements([5L, 3L, -5L, 2L, -3L, 3L,\
    \ 9L, 0L, 123L, 1L, -10L])\n    -8836760000L\n*/\nlong product_elements(long[]\
    \ l) \n{\n    long prod = 1;\n    foreach(i; l)\n    {\n        prod *= i;\n \
    \   }\n    return prod;\n}\n \n/*\nReturn an array containing the mean of all\
    \ elements in the array.\n\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmps6h4qmgh.d(75): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmps6h4qmgh.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    int i;\n    for (i = 1; i < l.length; i++) \n    {\n        if\
    \ (l[i] > max) \n        {\n            max = l[i];\n        }\n    }\n    return\
    \ max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiz7uycar.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max_el\
    \ = l[0];\n    foreach(long el; l) \n    {\n        if (el > max_el)\n       \
    \     max_el = el;\n    }\n    return max_el;\n}\nunittest\n{\n    alias candidate\
    \ = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp17mxtwjy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = std.long.min;\n    foreach (e; l)\n    {\n        if (e > max)\n        {\n\
    \            max = e;\n        }\n    }\n    return max;\n}\nunittest\n{\n   \
    \ alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n\
    \    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpx9sybhbu.d(12): Error: identifier expected following \''.\'',
    not \''long\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx9sybhbu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n\tlong  max\
    \ = l[0];\n\tforeach(i; l)\n\t{\n\t\tif(i > max)\n\t\t\tmax = i;\n\t}\n\treturn\
    \ max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc886oepa.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    // write\
    \ your code here!\n    long max_value = 0;\n    foreach(i, value; l)\n    {\n\
    \        if(value > max_value) max_value = value;\n    }\n    return max_value;\n\
    }\n/*\nReturn maximum element in the array.\n    >>> max_element([1L, 2L, 3L])\n\
    \    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n\
    \    123L\n    \n*/\nlong min_element(long[] l) \n{\n    // write your code here!\n\
    \    long min_value = max_element(l);\n    foreach(i, value; l)\n    {\n     \
    \   if(value < min_value) min_value = value;\n    }\n    return min_value;\n}\n\
    /*\nReturn a list of factorials for the first `n` non-negative numbers.\n    >>>\
    \ factorials(0L)\n    []\n    >>> factorials(1L)\n    [1L]\n    >>> factorials(5L)\n\
    \    [1L, 1L, 2L, 6L, 24L]\n*/\nlong[] factorials(long n)\n{\n    // write your\
    \ code here!\n    long[] result = [];\n    long sum = 1;\n    foreach(i; 0..n)\n\
    \    {\n        sum *= i;\n        result ~= sum;\n    }\n    return result;\n\
    }\n/*\nReturn a list of factorials for the first `n` non-negative numbers.\n \
    \   >>> factorials(0L)\n    []\n    >>> factorials(1L)\n    [1L]\n    >>> factorials(5L)\n\
    \    [1L, 1L, 2L, 6L, 24L]\n*/\nlong[] factorials2(long n)\n{\n    // write your\
    \ code here!\n    long[] result = [];\n    long sum = 1;\n    for(int i = 0; i\
    \ < n; i++)\n    {\n        sum *= i;\n       \nunittest\n{\n    alias candidate\
    \ = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpoog6tzn9.d(77): Error: found \''unittest\'' instead of statement\n/tmp/tmpoog6tzn9.d(84):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoog6tzn9.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n    pure \n{\n\
    \    long current_max = l[0];\n    foreach (index, e; l) \n    {\n        if (e\
    \ > current_max) \n        {\n            current_max = e;\n        }\n    }\n\
    \    return current_max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvgzgf8rd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    auto max\
    \ = l[0];\n    foreach(e; l)\n    {\n        if(e > max)\n        {\n        \
    \    max = e;\n        }\n    }\n    return max;\n}\nunittest\n{\n    alias candidate\
    \ = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_lbv8lh5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    int len = l.length;\n    foreach (index, elem; l)\n    {\n\tmax\
    \ = max(max, elem);\n    }\n    return max;\n}\nunittest\n{\n    alias candidate\
    \ = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp9ylmxaq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    if (l.length\
    \ == 0) \n    {\n        return 0;\n    }\n    if (l.length == 1) \n    {\n  \
    \      return l[0];\n    }\n    if (l.length == 2) \n    {\n        return max(l[0],\
    \ l[1]);\n    }\n    long max = l[0];\n    for (int i = 1; i < l.length; i++)\
    \ \n    {\n        max = max(max, l[i]);\n    }\n    return max;\n}\nunittest\n\
    {\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) ==\
    \ 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L])\
    \ == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvjoeocga.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n   long max=l[0];\n\
    \   foreach(long i; l) \n     if(i>max) max=i;\n   return max;\n}\nunittest\n\
    {\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) ==\
    \ 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L])\
    \ == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg9fzb7n2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    foreach(index, value; l)\n    {\n        if(value > max)\n    \
    \    {\n            max = value;\n        }\n    }\n    return max;\n}\nunittest\n\
    {\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) ==\
    \ 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L])\
    \ == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3tnf0dus.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n\tlong max;\n\
    \tint i;\n\tmax = l[0];\n\tfor (i = 1; i < l.length; i++)\n\t{\n\t\tif (l[i] >\
    \ max)\n\t\t{\n\t\t\tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n/*\nReturn minimal\
    \ element in the array.\n    >>> min_element([1L, 2L, 3L])\n    1L\n    >>> min_element([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n    -10L\n    \n*/\nlong min_element(long[]\
    \ l) \n{\n\tlong min;\n\tint i;\n\tmin = l[0];\n\tfor (i = 1; i < l.length; i++)\n\
    \t{\n\t\tif (l[i] < min)\n\t\t{\n\t\t\tmin = l[i];\n\t\t}\n\t}\n\treturn min;\n\
    }\n/*\nReturn 2nd maximum element in the array.\n    >>> second_max_element([1L,\
    \ 2L, 3L])\n    2L\n    >>> second_max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L,\
    \ 0L, 123L, 1L, -10L])\n    9L\n*/\nlong second_max_element(long[] l) \n{\n\t\
    long max;\n\tlong second_max;\n\tint i;\n\tmax = l[0];\n\tsecond_max = l[0];\n\
    \tfor (i = 1; i < l.length; i++)\n\t{\n\t\tif (l[i] > max)\n\t\t{\n\t\t\tsecond_max\
    \ = max;\n\t\t\tmax = l[i];\n\t\t}\n\t\telse if (l[i] > second_max)\n\t\t{\n\t\
    \t\tsecond_max = l[i];\n\t\t}\n\t}\n\treturn second_max;\n}\n/*\nReturn 2nd minimal\
    \ element in the array.\n    >>> second_min_element\nunittest\n{\n    alias candidate\
    \ = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxgg7hory.d(74): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpxgg7hory.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 0
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    for (int i = 1; i < l.length; i++)\n    {\n        if (l[i] > max)\n\
    \        {\n            max = l[i];\n        }\n    }\n    return max;\n}\nunittest\n\
    {\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) ==\
    \ 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L])\
    \ == 124L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max_el\
    \ = l[0];\n    for (int i = 1; i < l.length; i++)\n    {\n        if (l[i] > max_el)\n\
    \        {\n            max_el = l[i];\n        }\n    }\n    return max_el;\n\
    }\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1tbmna48.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n  long max =\
    \ l[0];\n  foreach(long num; l) \n  {\n    if (num > max)\n    {\n      max =\
    \ num;\n    }\n  }\n  return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzz4o0xpc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max_el\
    \ = l[0];\n    foreach(el; l) \n    {\n        if (el > max_el) \n        {\n\
    \            max_el = el;\n        }\n    }\n    return max_el;\n}\nunittest\n\
    {\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) ==\
    \ 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L])\
    \ == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgzzg7e25.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    for (long i = 1; i < l.length; i++)\n    {\n        if (l[i] >\
    \ max)\n        {\n            max = l[i];\n        }\n    }\n    return max;\n\
    }\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_ykg3mn2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = -999999999L;\n    foreach(long x; l)\n    {\n        if(x > max)\n       \
    \ {\n            max = x;\n        }\n    }\n    return max;\n}\n//\nlong[][]\
    \ mem_transpose(long[][] l) \n{\n    long[][] r = new long[][](l[0].length, l.length);\n\
    \    for(int i = 0; i < l.length; i++)\n    {\n        for(int j = 0; j < l[0].length;\
    \ j++)\n        {\n            r[j][i] = l[i][j];\n        }\n    }\n    return\
    \ r;\n}\n/*\nReturn the \"box blur\" of an image.\nThe input image is a 2D-array,\
    \ whose elements are integers between 0 and 255.\n    >>> box_blur([[1, 1, 1],\
    \ [1, 7, 1], [1, 1, 1]])\n    [[1]]\n    >>> box_blur([[7, 4, 0, 1], [5, 6, 2,\
    \ 2], [6, 10, 7, 8], [1, 4, 2, 0]])\n    [[5, 4], [4, 4]]\n    >>> box_blur([[36,\
    \ 0, 18, 9], [27, 54, 9, 0], [81, 63, 72, 45]])\n    [[40, 30]]\n*/\nlong[][]\
    \ box_blur(long[][] image) \n{\n    long[][] result = new long[][](image.length\
    \ - 2, image[0].length - 2);\n    for(int i = 0; i < image.length - 2; i++)\n\
    \    {\n        for(int j = 0; j < image[0].length - 2; j++)\n        {\n    \
    \        long sum = 0;\n            foreach(long x; image[i .. i + 3])\n     \
    \       {\n                foreach(long y; x[j .. j + 3])\n                {\n\
    \                    sum += y;\n                }\n            }\n           \
    \ result[i][j] = sum / 9;\n        }\n    }\n    return result\nunittest\n{\n\
    \    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n\
    \    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpc2f0g4kk.d(64): Error: found \''unittest\'' when expecting \'';\''
    following return statement\n/tmp/tmpc2f0g4kk.d(71): Error: found \''EOF\'' when
    expecting \''}\'' following compound statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpc2f0g4kk.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    if (l.length\
    \ == 0) \n    {\n        return l[0];\n    } \n    else \n    {\n        long\
    \ max = l[0];\n        for (int i = 1; i < l.length; i++) \n        {\n      \
    \      if (l[i] > max) \n            {\n                max = l[i];\n        \
    \    }\n        }\n        return max;\n    }\n}\n/*\nReturn minimum element in\
    \ the array.\n    >>> min_element([1L, 2L, 3L])\n    1L\n    >>> min_element([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n    -10L\n*/\nlong min_element(long[]\
    \ l) \n{\n    if (l.length == 0) \n    {\n        return l[0];\n    } \n    else\
    \ \n    {\n        long min = l[0];\n        for (int i = 1; i < l.length; i++)\
    \ \n        {\n            if (l[i] < min) \n            {\n                min\
    \ = l[i];\n            }\n        }\n        return min;\n    }\n}\n/*\nReturn\
    \ sum of all elements in the array.\n    >>> sum_elements([1L, 2L, 3L])\n    6L\n\
    \    >>> sum_elements([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n  \
    \  177L\n*/\nlong sum_elements(long[] l) \n{\n    long sum = 0;\n    for (int\
    \ i = 0; i < l.length; i++) \n    {\n        sum += l[i];\n    }\n    return sum;\n\
    }\n/*\nReturn the median of all elements in the array.\n    >>> median([1L, 2L,\
    \ 3L])\n    2L\n    >>> median([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n\
    unittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L,\
    \ 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp932fnmx8.d(71): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp932fnmx8.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = -999999L;\n    foreach(e; l)\n    {\n        if(e > max)\n        {\n    \
    \        max = e;\n        }\n    }\n    return max;\n}\nunittest\n{\n    alias\
    \ candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n   \
    \ assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxmct3343.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n    in {\n    \
    \    assert(l.length > 0);\n    }\n    out (result) {\n        assert(exists(long\
    \ k; (0 <= k && k < l.length) && l[k] == result));\n    }\n    do {\n        long\
    \ ret = l[0];\n        foreach (i, e; l) {\n            if (e > ret) {\n     \
    \           ret = e;\n            }\n        }\n        return ret;\n    }\nunittest\n\
    {\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) ==\
    \ 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L])\
    \ == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpu5vzj18s.d(15): Error: found \''k\'' when expecting \''.\''
    following long\n/tmp/tmpu5vzj18s.d(15): Error: found \'';\'' when expecting identifier
    following \''long.\''\n/tmp/tmpu5vzj18s.d(17): Error: Declaration expected, not
    \''do\''\n/tmp/tmpu5vzj18s.d(19): Error: Declaration expected, not \''foreach\''\n/tmp/tmpu5vzj18s.d(19):
    Error: no identifier for declarator l\n/tmp/tmpu5vzj18s.d(19): Error: Declaration
    expected, not \'')\''\n/tmp/tmpu5vzj18s.d(22): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu5vzj18s.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 0
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    for (int i = 1; i < l.length; i++)\n    {\n        if (l[i] > max)\n\
    \        {\n            max = l[i];\n        }\n    }\n    return max;\n}\nunittest\n\
    {\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) ==\
    \ 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L])\
    \ == 124L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long m =\
    \ l[0];\n    foreach(inout elem; l) {\n        if (elem > m) {\n            m\
    \ = elem;\n        }\n    }\n    return m;\n}\n/*\nReturn range of the array.\n\
    \    >>> data = [1L, 2L, 3L]\n    >>> range(data)\n    2L\n    >>> data = [5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L]\n    >>> range(data)\n    133L\n\
    \    \n*/\nlong range(long[] l) \n{\n    return max_element(l) - min_element(l);\n\
    }\n/*\nReturn range of the array.\n    >>> data = [1L, 2L, 3L]\n    >>> range(data)\n\
    \    2L\n    >>> data = [5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L]\n \
    \   >>> range(data)\n    133L\n    \n*/\nlong range(long[] l) \n{\n    return\
    \ max_element(l) - min_element(l);\n}\n/*\nReturn minimum element in the array.\n\
    \    >>> min_element([1L, 2L, 3L])\n    1L\n    >>> min_element([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n    -10L\n    \n*/\nlong min_element(long[]\
    \ l) \n{\n    long m = l[0];\n    foreach(inout elem; l) {\n        if (elem <\
    \ m) {\n            m = elem;\n        }\n    }\n    return m;\n}\n/*\nReturn\
    \ position of the element in the array.\n    >>> data = [1L, 2L, 3L]\n    >>>\
    \ data.index_of(1L)\n    0L\n    >>> data.index_of(3L)\n    2L\n    >>> data.index_of(4\n\
    unittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L,\
    \ 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7arsezj4.d(66): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp7arsezj4.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    foreach(i; l) \n    {\n        if (i > max) \n        {\n     \
    \       max = i;\n        }\n    }\n    return max;\n}\n/*\nFunction to return\
    \ minimum of array elements\n    >>> min_element([1L, 2L, 3L])\n    1L\n    >>>\
    \ min_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n    -10L\n\
    */\nlong min_element(long[] l) \n{\n    long min = l[0];\n    foreach(i; l) \n\
    \    {\n        if (i < min) \n        {\n            min = i;\n        }\n  \
    \  }\n    return min;\n}\n/*\nRemove the item from the list. Throw exception if\
    \ the item is not present in the list.\n>>> remove([1L, 2L, 3L], 2L)\n[1L, 3L]\n\
    >>> remove([1L, 2L, 3L], 0L)\nElement not found\n*/\nlong[] remove(long[] l, long\
    \ k) \n{\n    // Define a new array to store the result\n    long[] res;\n   \
    \ foreach(i; l) \n    {\n        if (i != k) \n        {\n            res ~= i;\n\
    \        }\n    }\n    if (res.length == l.length) \n    {\n        throw new\
    \ Exception(\"Element not found\");\n    }\n    return res;\n}\n/*\nReturn array\
    \ with unique elements of the array.\n>>> unique([1L, 2L, 1L, 3L, 2L, 4L, 3L,\
    \ 1L, 2L, 3L, 4L, 5L])\n[1L, 2L, 3L, 4L, 5L]\n*/\nlong[] unique(long[] l) \n{\n\
    \    // Define a new array to store the result\n    long[] res;\n    foreach(i;\
    \ l) \n    {\n        if (res.length == 0) \n        {\n            res ~= i;\n\
    \nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsp076j_n.d(80): Error: found \''unittest\'' instead of statement\n/tmp/tmpsp076j_n.d(87):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmpsp076j_n.d(87):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsp076j_n.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n    in {\n    \
    \    assert(l.length > 0);\n    }\n    out (result) {\n        assert(forall<int>(i;\
    \ 0 <= i && i < l.length ==> l[i] <= result));\n    }\n{\n    long[] s = new long[l.length];\n\
    \    long max = l[0];\n    s[0] = max;\n    for (int i = 1; i < l.length; i++)\
    \ {\n        s[i] = max(l[i], s[i-1]);\n        max = s[i];\n    }\n    return\
    \ max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpu53ug8mo.d(15): Error: found \''>\'' when expecting \''.\''
    following int\n/tmp/tmpu53ug8mo.d(15): Error: found \''(\'' when expecting identifier
    following \''int.\''\n/tmp/tmpu53ug8mo.d(15): Error: found \''i\'' when expecting
    \'')\''\n/tmp/tmpu53ug8mo.d(15): Error: found \''==\'' when expecting \'';\''
    following statement\n/tmp/tmpu53ug8mo.d(15): Error: found \''>\'' instead of statement\n/tmp/tmpu53ug8mo.d(17):
    Error: missing body { ... } after in or out\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpu53ug8mo.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long maximum;\n\
    \    long n = l.length;\n    maximum = l[0];\n    int i;\n    for (i = 1; i <\
    \ n; i++)\n    {\n        if (l[i] > maximum)\n        {\n            maximum\
    \ = l[i];\n        }\n    }\n    return maximum;\n}\nunittest\n{\n    alias candidate\
    \ = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptuou4it6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 0
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    foreach(i; l)\n    {\n        if(i > max)\n        {\n        \
    \    max = i;\n        }\n    }\n    return max;\n}\nunittest\n{\n    alias candidate\
    \ = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = -9223372036854775807L;\n    foreach(i; l) {\n        if (i > max) {\n    \
    \        max = i;\n        }\n    }\n    return max;\n}\nunittest\n{\n    alias\
    \ candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n   \
    \ assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb34onyin.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    for (long item in l) \n    {\n        if (item > max) \n      \
    \  {\n            max = item;\n        }\n    }\n    return max;\n}\nunittest\n\
    {\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) ==\
    \ 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L])\
    \ == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1yurxxl1.d(13): Error: semicolon expected, not \''in\''\n/tmp/tmp1yurxxl1.d(13):
    Error: expression expected, not \''in\''\n/tmp/tmp1yurxxl1.d(13): Error: found
    \''l\'' when expecting \'';\'' following for condition\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp1yurxxl1.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n  long max=l[0];\n\
    \  foreach(i;l)\n    if(i>max)\n      max=i;\n  return max;\n}\nunittest\n{\n\
    \    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n\
    \    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbk8456ck.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n  long max =\
    \ l[0];\n  foreach(elem; l)\n  {\n    if(elem > max)\n      max = elem;\n  }\n\
    \  return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjjpas_go.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    foreach(i; l) {\n        if (i > max)\n            max = i;\n \
    \   }\n    return max;\n}\nunittest\n{\n    alias candidate = max_element;\n\n\
    \    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmrsvdoa2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long res\
    \ = l[0];\n    for (int i = 1; i < l.length; i++)\n        res = max(res, l[i]);\n\
    \    return res;\n}\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplxf7rdcn.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    foreach(var i; l) {\n        if (i > max) {\n            max =\
    \ i;\n        }\n    }\n    return max;\n}\nunittest\n{\n    alias candidate =\
    \ max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3bwsb9ql.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n\tlong max =\
    \ l[0];\n\tfor (int i = 1; i < l.length; i++)\n\t{\n\t\tif (l[i] > max)\n\t\t\
    {\n\t\t\tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\nunittest\n{\n    alias candidate\
    \ = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbd6h0l8r.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n   long m =\
    \ l[0];\n   foreach(m1; l) \n   {\n      if (m1 > m)\n         m = m1;\n   }\n\
    \   return m;\n}\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfyn5iyk4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    foreach(x; l)\n    {\n        if(x > max)\n        {\n        \
    \    max = x;\n        }\n    }\n    return max;\n}\nunittest\n{\n    alias candidate\
    \ = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppegem__c.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n\tlong _return=0L;\n\
    \tforeach(long l0; l)\n\t{\n\t\tif(l0>_return)\n\t\t{\n\t\t\t_return=l0;\n\t\t\
    }\n\t}\n\treturn _return;\n}\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwe27cdc9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long i =\
    \ 0L;\n    long max_element = l[0L];\n    while (i < size(l))\n    {\n       \
    \ if (l[i] > max_element) \n        {\n            max_element = l[i];\n     \
    \   }\n        i = i + 1L;\n    }\n    return max_element;\n}\nunittest\n{\n \
    \   alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n\
    \    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5m_fo36g.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long m =\
    \ l[0];\n    foreach(long n; l) \n    {\n        if (n > m) \n        {\n    \
    \        m = n;\n        }\n    }\n    return m;\n}\n/*\nReturn minimum element\
    \ in the array.\n    >>> min_element([1L, 2L, 3L])\n    1L\n    >>> min_element([5L,\
    \ 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n    -10L\n*/\nlong min_element(long[]\
    \ l) \n{\n    long m = l[0];\n    foreach(long n; l) \n    {\n        if (n <\
    \ m) \n        {\n            m = n;\n        }\n    }\n    return m;\n}\n/*\n\
    Return sum of all elements in the array.\n    >>> sum_elements([1L, 2L, 3L])\n\
    \    6L\n    >>> sum_elements([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L])\n\
    \    151L\n*/\nlong sum_elements(long[] l) \n{\n    long m = 0;\n    foreach(long\
    \ n; l) \n    {\n        m += n;\n    }\n    return m;\n}\n/*\nReturn array of\
    \ elements that belong to both arrays.\n    >>> intersect([1L, 2L, 3L], [3L, 4L,\
    \ 5L])\n    [3L]\n    >>> intersect([1L, 2L, 3L], [3L, 2L, 1L])\n    [1L, 2L,\
    \ 3L]\n    >>> intersect([1L, 2L, 3L], [])\n    []\n    >>> intersect([1L, 2L,\
    \ 3L], [5L, 6L, 7L])\n    []\n    >>> intersect([1L, 2L, 3L], [3L, 4L, 5L, 1L,\
    \ 2L, 3L])\n    [1L, 2L, 3L]\n*/\nlong[]\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphtetqlwu.d(71): Error: no identifier for declarator long[]\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphtetqlwu.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long result\
    \ = l[0];\n    for (int i = 1; i < l.length; i++) \n    {\n        if (l[i] >\
    \ result) \n        {\n            result = l[i];\n        }\n    }\n    return\
    \ result;\n}\n/*\nSort an array.\n    >>> sort([5L, 2L, -3L, 3L, 9L, 0L, 1L, -10L])\n\
    \    [-10L, -3L, 0L, 1L, 2L, 3L, 5L, 9L]\n    >>> sort([])\n    []\n*/\nlong[]\
    \ sort(long[] l) \n{\n    long[] l_copy = l.dup;\n    for (int i = 0; i < l_copy.length;\
    \ i++) \n    {\n        for (int j = i + 1; j < l_copy.length; j++) \n       \
    \ {\n            if (l_copy[i] > l_copy[j]) \n            {\n                long\
    \ temp = l_copy[i];\n                l_copy[i] = l_copy[j];\n                l_copy[j]\
    \ = temp;\n            }\n        }\n    }\n    return l_copy;\n}\nunittest\n\
    {\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) ==\
    \ 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L])\
    \ == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpail_4hbt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    if (l.length\
    \ == 0)\n    {\n        return -1;\n    }\n    long max = l[0];\n    foreach (e;\
    \ l)\n    {\n        if (e > max)\n        {\n            max = e;\n        }\n\
    \    }\n    return max;\n}\n/*\nReturn minimum element in the array.\n    >>>\
    \ min_element([1L, 2L, 3L])\n    1L\n    >>> min_element([5L, 3L, -5L, 2L, -3L,\
    \ 3L, 9L, 0L, 123L, 1L, -10L])\n    -10L\n*/\nlong min_element(long[] l) \n{\n\
    \    if (l.length == 0)\n    {\n        return -1;\n    }\n    long min = l[0];\n\
    \    foreach (e; l)\n    {\n        if (e < min)\n        {\n            min =\
    \ e;\n        }\n    }\n    return min;\n}\n/*\nReturn maximum element in the\
    \ 2D array.\n    >>> max_element([[1L, 2L, 3L], [4L, 5L, 6L]])\n    6L\n    >>>\
    \ max_element([[5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L, 1L, -10L], [1L, 2L, 3L,\
    \ 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L]])\n    123L\n*/\nlong max_element(long[][]\
    \ l) \n{\n    if (l.length == 0)\n    {\n        return -1;\n    }\n    long max\
    \ = max_element(l[0]);\n    foreach (i; l)\n    {\n        if (max_element(i)\
    \ > max)\n        {\n            max = max_element(i);\n        }\n    }\n   \
    \ return max;\n}\n/*\nReturn minimum element in the 2D array.\n    >>> min_element([[1L,\
    \ 2L, 3L], [4L, 5L, 6L]])\n\nunittest\n{\n    alias candidate = max_element;\n\
    \n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L,\
    \ 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnxhu34qi.d(72): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpnxhu34qi.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977687
- exit_code: 1
  program: "import std.math;\n/*\nReturn maximum element in the array.\n    >>> max_element([1L,\
    \ 2L, 3L])\n    3L\n    >>> max_element([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 123L,\
    \ 1L, -10L])\n    123L\n    \n*/\nlong max_element(long[] l) \n{\n    long max\
    \ = l[0];\n    for (int i = 1; i < l.length; i++) \n    {\n        if (l[i] >\
    \ max) \n        {\n            max = l[i];\n        }\n    }\n    return max;\n\
    }\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L,\
    \ 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L,\
    \ 1L, -10L]) == 124L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk735pl3y.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977686

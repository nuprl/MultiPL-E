language: d
name: HumanEval_60_sum_to_n
results:
- exit_code: 0
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    if (n<=0)\n\
    \        return sum;\n    else\n        return n + sum_to_n(n-1);\n}\nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n\tlong sum = 0;\n\tfor (int i =\
    \ 1; i <= n; i++)\n\t{\n\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n  \
    \  alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    return (n * (n + 1L)) / 2L;\n\
    }\n/*\nsum_of_squares is a function that sums the squares of numbers from 1 to\
    \ n.\n    >>> sum_of_squares(5L)\n    55L\n    >>> sum_of_squares(10L)\n    385L\n\
    \    >>> sum_of_squares(1L)\n    1L\n    >>> sum_of_squares(30L)\n    945L\n \
    \   >>> sum_of_squares(100L)\n    338350L\n    \n*/\nlong sum_of_squares(long\
    \ n) \n{\n    return (n * (n + 1L) * (2L * n + 1L)) / 6L;\n}\n/*\ndiff_sum_of_squares_and_sum_to_n\
    \ is a function that \nreturns the difference between the sum of the squares \n\
    of the first n natural numbers and the square of the sum.\n    >>> diff_sum_of_squares_and_sum_to_n(10L)\n\
    \    2640L\n    >>> diff_sum_of_squares_and_sum_to_n(1L)\n    0L\n    >>> diff_sum_of_squares_and_sum_to_n(30L)\n\
    \    -420L\n    >>> diff_sum_of_squares_and_sum_to_n(100L)\n    -25164150L\n \
    \   \n*/\nlong diff_sum_of_squares_and_sum_to_n(long n) \n{\n    return ((n *\
    \ (n + 1L)) / 2L) * ((n * (n + 1L)) / 2L) - ((n * (n + 1L) * (2L * n + 1L)) /\
    \ 6L);\n}\n/*\nsum_of_squares_of_odd_numbers is a function that returns the sum\
    \ of squares of odd numbers from 1 to n.\n    >>> sum_of_squares_of_odd_numbers(1L)\n\
    \    1L\n    >>> sum_of_squares_of_odd_numbers(10L)\n    385L\n    >>> sum_\n\
    unittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L)\
    \ == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6aj6ltye.d(56): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp6aj6ltye.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    long i =\
    \ 1;\n    for (i = 1; i <= n; i++)\n    {\n        sum += i;\n    }\n    return\
    \ sum;\n}\n/*\n    >>> sum_digits(456L)\n    15L\n    >>> sum_digits(1234567890L)\n\
    \    45L\n    >>> sum_digits(0L)\n    0L\n    >>> sum_digits(10L)\n    1L\n  \
    \  >>> sum_digits(123456L)\n    21L\n*/\nlong sum_digits(long n) \n{\n    long\
    \ digit_sum = 0;\n    long digit;\n    while (n > 0)\n    {\n        digit = n\
    \ % 10;\n        digit_sum += digit;\n        n = n / 10;\n    }\n    return digit_sum;\n\
    }\n/*\n    >>> factorial(1L)\n    1L\n    >>> factorial(3L)\n    6L\n    >>> factorial(5L)\n\
    \    120L\n    >>> factorial(10L)\n    3628800L\n    >>> factorial(30L)\n    265252859812191058636308480000000L\n\
    */\nlong factorial(long n) \n{\n    long factorial = 1;\n    long i = 1;\n   \
    \ for (i = 1; i <= n; i++)\n    {\n        factorial *= i;\n    }\n    return\
    \ factorial;\n}\n/*\n    >>> fibonacci(0L)\n    0L\n    >>> fibonacci(1L)\n  \
    \  1L\n    >>> fibonacci(2L)\n    1L\n    >>> fibonacci(3L)\n    2L\n    >>> fibonacci(10L)\n\
    \    55L\n    >>> fibonacci(20L)\n    6765L\n    >>> fibonacci(40L)\n    102334155L\n\
    */\nlong fibonacci(long n) \n{\n    long fib = 0;\n    long prev_fib = 0;\n  \
    \  long next_fib = 1;\n    long i = 1;\n    for (i = 1; i <=\nunittest\n{\n  \
    \  alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1s_gaiuc.d(95): Error: expression expected, not `unittest`\n/tmp/tmp1s_gaiuc.d(96):
    Error: found `{` when expecting `;` following `for` condition\n/tmp/tmp1s_gaiuc.d(97):
    Error: expression expected, not `alias`\n/tmp/tmp1s_gaiuc.d(97): Error: found
    `candidate` when expecting `)`\n/tmp/tmp1s_gaiuc.d(97): Error: found `=` instead
    of statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1s_gaiuc.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 0
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    //finds the sum from 1 to n\n\
    \    long sum = 0;\n    for (long i = 1; i <= n; i++)\n    {\n        sum += i;\n\
    \    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n \
    \   assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L)\
    \ == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) ==\
    \ 5050L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    if (n == 1L)\n    {\n      \
    \  return 1L;\n    }\n    return n + sum_to_n(n - 1L);\n}\nunittest\n{\n    alias\
    \ candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    return (n * (n + 1L)) / 2L;\n\
    }\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) ==\
    \ 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    if (n==1)\n    {\n        return\
    \ 1;\n    }\n    else\n    {\n        return sum_to_n(n-1)+n;\n    }\n}\nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long result = 0L;\n    long\
    \ i = 1L;\n    while (i <= n) \n    {\n        result = result + i;\n        i\
    \ = i + 1L;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n\
    \    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n   \
    \ assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    long i =\
    \ 1;\n    while (i <= n) {\n        sum += i;\n        i += 1;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long res = 0;\n    foreach (i;\
    \ 1..n+1)\n    {\n        res += i;\n    }\n    return res;\n}\nunittest\n{\n\
    \    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n\treturn (n * (n + 1L)) / 2L;\n\
    }\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) ==\
    \ 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    // your code goes here\n   \
    \ if (n == 1)\n        return 1;\n    else\n        return n + sum_to_n(n-1);\n\
    }\n/*\nfactorial is a function that calculates factorial of n.\n    >>> factorial(5L)\n\
    \    120L\n    >>> factorial(1L)\n    1L\n    >>> factorial(3L)\n    6L\n    >>>\
    \ factorial(4L)\n    24L\n    >>> factorial(2L)\n    2L\n    \n*/\nlong factorial(long\
    \ n) \n{\n    // your code goes here\n    if (n == 1)\n        return 1;\n   \
    \ else\n        return n * factorial(n-1);\n}\n/*\nfibonacci is a function that\
    \ returns the nth value in the fibonacci sequence.\n    >>> fibonacci(1L)\n  \
    \  1L\n    >>> fibonacci(2L)\n    1L\n    >>> fibonacci(3L)\n    2L\n    >>> fibonacci(4L)\n\
    \    3L\n    >>> fibonacci(5L)\n    5L\n    >>> fibonacci(6L)\n    8L\n    \n\
    */\nlong fibonacci(long n) \n{\n    // your code goes here\n    if (n == 1)\n\
    \        return 1;\n    else if (n == 2)\n        return 1;\n    else\n      \
    \  return fibonacci(n-1) + fibonacci(n-2);\n}\n/*\nsum_digits is a function that\
    \ calculates the sum of the digits of a number.\n    >>> sum_digits(123L)\n  \
    \  6L\n    >>> sum_digits(0L)\n    0L\n    >>> sum_digits(1L)\n    1L\n    >>>\
    \ sum_digits(45L)\n    9L\n    >>> sum_digits(8910L)\n    19L\n    \n*/\nlong\
    \ sum_digits(long n) \n{\n    // your code goes here\n    if (n == 0)\n      \
    \  return 0;\n    else if (n > 0)\n        return n % 10 + sum_digits(n\nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpeaj3pira.d(93): Error: found `unittest` when expecting `,`\n/tmp/tmpeaj3pira.d(103):
    Error: found `void` when expecting `,`\n/tmp/tmpeaj3pira.d(103): Error: found
    `{` when expecting `,`\n/tmp/tmpeaj3pira.d(103): Error: expression expected, not
    `}`\n/tmp/tmpeaj3pira.d(103): Error: found `End of File` when expecting `,`\n/tmp/tmpeaj3pira.d(103):
    Error: found `End of File` when expecting `)`\n/tmp/tmpeaj3pira.d(103): Error:
    found `End of File` when expecting `;` following `return` statement\n/tmp/tmpeaj3pira.d(103):
    Error: found `End of File` when expecting `}` following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeaj3pira.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 0
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    return n * (n + 1L) / 2L;\n\
    }\n// ##sum_to_n\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long result = 0L;\n    long\
    \ i = 1L;\n    while (i <= n) \n    {\n        result = result + i;\n        i\
    \ = i + 1L;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n\
    \    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n   \
    \ assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n\treturn n*(n+1)/2;\n}\nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    if (n <= 0)\n        return\
    \ 0;\n    else\n        return n + sum_to_n(n - 1);\n}\nunittest\n{\n    alias\
    \ candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    return n*(n+1)/2;\n}\n/*\nsum_triangular_numbers\
    \ is a function that sums triangular numbers.\nTriangular numbers are numbers\
    \ made by the following scheme:\n    1\n    1+2\n    1+2+3\n    1+2+3+4\n    1+2+3+4+5\n\
    \    1+2+3+4+5+6\n    1+2+3+4+5+6+7\n    etc.\n    >>> sum_triangular_numbers(4L)\n\
    \    10L\n    >>> sum_triangular_numbers(1L)\n    1L\n    >>> sum_triangular_numbers(5L)\n\
    \    15L\n    >>> sum_triangular_numbers(10L)\n    55L\n    >>> sum_triangular_numbers(100L)\n\
    \    5050L\n*/\nlong sum_triangular_numbers(long n) \n{\n    return sum_to_n(n)*(n+1)/2;\n\
    }\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) ==\
    \ 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    /*\n    n^2 + n - 2*sum_to_n(n-1)\n\
    \    */\n    if (n < 1)\n        return 0;\n    else\n        return n*n + n -\
    \ 2*sum_to_n(n-1);\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpxjmu0zqb.d(30): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d6d]\n??:? void tmpxjmu0zqb.__unittest_L26_C1() [0x427a54]\n??:?
    void tmpxjmu0zqb.__modtest() [0x427af0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42ba93]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a926]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fab9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff68]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa45]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a8fd]\n??:? runModuleUnitTests [0x42b869]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281bc]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428143]\n??:? _d_run_main [0x4280ae]\n??:? main [0x427b03]\n??:?
    __libc_start_main [0x873cf554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    return (n * (n + 1L)) / 2L;\n\
    }\n/*\nsum_to_n_cubes is a function that sums the cubes of integers from 1 to\
    \ n.\n    >>> sum_to_n_cubes(4L)\n    100L\n    >>> sum_to_n_cubes(5L)\n    225L\n\
    \    >>> sum_to_n_cubes(6L)\n    441L\n    >>> sum_to_n_cubes(2L)\n    9L\n  \
    \  >>> sum_to_n_cubes(3L)\n    36L\n*/\nlong sum_to_n_cubes(long n) \n{\n    return\
    \ (n * (n + 1L) * ((2L * n) + 1L)) / 6L;\n}\n/*\nsum_of_squares(n) is a function\
    \ that sums the squares of the integers from 1 to n.\n    >>> sum_of_squares(3L)\n\
    \    14L\n    >>> sum_of_squares(4L)\n    30L\n    >>> sum_of_squares(2L)\n  \
    \  5L\n    >>> sum_of_squares(5L)\n    55L\n    >>> sum_of_squares(6L)\n    91L\n\
    */\nlong sum_of_squares(long n) \n{\n    return (n * (n + 1L) * ((2L * n) + 1L))\
    \ / 6L;\n}\n/*\nsum_of_cubes(n) is a function that sums the cubes of the integers\
    \ from 1 to n.\n    >>> sum_of_cubes(1L)\n    1L\n    >>> sum_of_cubes(2L)\n \
    \   9L\n    >>> sum_of_cubes(3L)\n    36L\n    >>> sum_of_cubes(4L)\n    100L\n\
    \    >>> sum_of_cubes(5L)\n    225L\n*/\nlong sum_of_cubes(long n) \n{\n    return\
    \ (n * n * (n + 1L) * (n + 1L)) / 4L;\n}\n/*\nsum_of_nats\nunittest\n{\n    alias\
    \ candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpy2wdqp3r.d(71): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpy2wdqp3r.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 0
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long result = 0L;\n    long\
    \ i = 1L;\n    while (i <= n) \n    {\n        result = result + i;\n        i\
    \ = i + 1L;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n\
    \    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n   \
    \ assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long\
    \ i = 1; i <= n; i++)\n    {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_r0eh3r_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n  return n*(n+1)/2;\n}\nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphkb3ecnd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    if (n > 0)\n    {\n        return\
    \ n + sum_to_n(n - 1);\n    }\n    else\n    {\n        return 0;\n    }\n}\n\
    unittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L)\
    \ == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp055z74_z.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long i = 1L;\n    long sum =\
    \ 0L;\n    while (i <= n) {\n        sum += i;\n        i++;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1p6r0kof.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n\tlong ret = 0;\n\tint i;\n\tfor\
    \ (i = 1; i <= n; i++)\n\t{\n\t\tret += i;\n\t}\n\treturn ret;\n}\nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpim8lbw6p.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    long i =\
    \ 1;\n    while (i <= n) {\n        sum += i;\n        i++;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl43i9j1w.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long result;\n    result = (n\
    \ * (n + 1L)) / 2L;\n    return result;\n}\n/*\nprint_pattern_of_numbers() is\
    \ a function that prints numbers from 1 to n.\n    >>> print_pattern_of_numbers(5L)\n\
    \    1\n    2\n    3\n    4\n    5\n*/\nunittest\n{\n    alias candidate = sum_to_n;\n\
    \n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L)\
    \ == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) ==\
    \ 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpimy1cmld.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long\
    \ x = 1; x <= n; x++)\n    {\n        sum += x;\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplo_yu0iy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long r = 0L;\n    for (long\
    \ i = 1L; i <= n; i++) \n    {\n        r += i;\n    }\n    return r;\n}\n/*\n\
    square_root gives the square root of a number\n    >>> square_root(4L)\n    2L\n\
    \    >>> square_root(9L)\n    3L\n    >>> square_root(1L)\n    1L\n    >>> square_root(0L)\n\
    \    0L\n*/\nlong square_root(long n) \n{\n    long r = 0L;\n    while (r * r\
    \ < n) \n    {\n        r++;\n    }\n    if (r * r == n) \n    {\n        return\
    \ r;\n    } \n    else \n    {\n        return -1L;\n    }\n}\n/*\nis_prime tests\
    \ if n is a prime number\n    >>> is_prime(1L)\n    False\n    >>> is_prime(2L)\n\
    \    True\n    >>> is_prime(17L)\n    True\n    >>> is_prime(18L)\n    False\n\
    \    >>> is_prime(3L)\n    True\n    >>> is_prime(4L)\n    False\n    >>> is_prime(11L)\n\
    \    True\n    >>> is_prime(15L)\n    False\n    >>> is_prime(15L)\n    False\n\
    \    >>> is_prime(18L)\n    False\n    >>> is_prime(19L)\n    True\n    >>> is_prime(20L)\n\
    \    False\n    >>> is_prime(1000000000000000000L)\n    False\n    >>> is_prime(1000000000000000001L)\n\
    \    True\n*/\nlong is_prime(long n) \n{\n    long r = 2L;\n    while (r < n &&\
    \ n % r != 0L) \n    {\n        r++;\n    }\n    return r == n;\n}\n/*\nfind_divisor\
    \ finds a divisor of n which is less than n\n    >>> find_divisor(10L)\n    2L\n\
    \    >>> find_divisor(11L)\n    -1L\n    >>>\nunittest\n{\n    alias candidate\
    \ = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) ==\
    \ 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyofv6oc_.d(92): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpyofv6oc_.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    return 0L;\n}\nunittest\n{\n\
    \    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_qvygxzq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n\tlong result = 0;\n\tfor (int i\
    \ = 1; i <= n; i++)\n\t{\n\t\tresult += i;\n\t}\n\treturn result;\n}\nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjqk_hdgk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long result;\n    result = 0;\n\
    \    for (long i = 1; i <= n; i++) {\n        result = result + i;\n    }\n  \
    \  return result;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph464ox6_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long accum = 0L;\n    for (int\
    \ i = 1; i <= n; i++)\n    {\n        accum += i;\n    }\n    return accum;\n\
    }\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) ==\
    \ 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6j9dqftb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 0
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    return (n * (n + 1L)) / 2L;\n\
    }\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) ==\
    \ 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long res = 0;\n    for (long\
    \ i = 1; i <= n; i++)\n    {\n        res += i;\n    }\n    return res;\n}\nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptbsxyxs5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long\
    \ i = 1; i <= n; i++)\n    {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_r0eh3r_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long\
    \ i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzsqsflp8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long acc = 0L;\n    for (int\
    \ i = 1; i <= n; i++)\n    {\n        acc += i;\n    }\n    return acc;\n}\nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqfbmcdtl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    return n * (n + 1L) / 2L;\n\
    }\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) ==\
    \ 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc4x3yaa0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long total = 0;\n    for (;\
    \ n >= 1; n--)\n    {\n        total += n;\n    }\n    return total;\n}\n// @exclude\n\
    unittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L)\
    \ == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfxwmrurv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    return ((n * (n + 1L)) / 2L);\n\
    }\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) ==\
    \ 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfjuj6oel.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    // use Gauss's formula\n   \
    \ return n * (n + 1L) / 2L;\n}\n \n \n \n \n/*\nis_prime returns true if n is\
    \ prime, and false otherwise.\n    >>> is_prime(11L)\n    True\n    >>> is_prime(2L)\n\
    \    True\n    >>> is_prime(5L)\n    True\n    >>> is_prime(17L)\n    True\n \
    \   >>> is_prime(1L)\n    False\n    >>> is_prime(6L)\n    False\n    >>> is_prime(24L)\n\
    \    False\n    >>> is_prime(4L)\n    False\n    >>> is_prime(9L)\n    False\n\
    \    >>> is_prime(10L)\n    False\n    >>> is_prime(15L)\n    False\n    >>> is_prime(21L)\n\
    \    False\n    >>> is_prime(22L)\n    False\n*/\nunittest\n{\n    alias candidate\
    \ = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) ==\
    \ 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpft2bxs6w.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long i;\n    long sum = 0;\n\
    \    for (i = 1; i <= n; i += 1) {\n        sum += i;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) ==\
    \ 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5zvfmlrw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n   long sum = n * (n + 1) / 2;\n\
    \   return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxd2f1_qv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n   /* return (n*(n+1))/2; */\n \
    \   /* return reduce!((a,b) => a+b)(iota(1L,n+1L)); */\n    return n <= 0 ? 0\
    \ : n + sum_to_n(n-1);\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n  \
    \  assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L)\
    \ == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) ==\
    \ 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8j94h2_b.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n\tlong sum = 0;\n\tlong i = 1;\n\
    \tfor (; i <= n; i += 1)\n\t{\n\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpen4bslgj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long result = 0L;\n    for (long\
    \ i = 1L; i <= n; i++) \n    {\n        result += i;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) ==\
    \ 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5o0jdeiv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long i;\n    long sum = 0;\n\
    \    for (i = 1; i <= n; i += 1) \n    {\n        sum += i;\n    }\n    return\
    \ sum;\n}\n/*\nsquare_of_sum is a function that squares the sum of the numbers\
    \ from 1 to n.\n    >>> square_of_sum(30L)\n    467650L\n    >>> square_of_sum(100L)\n\
    \    25502500L\n    >>> square_of_sum(5L)\n    225L\n    >>> square_of_sum(10L)\n\
    \    3025L\n    >>> square_of_sum(1L)\n    1L\n*/\nlong square_of_sum(long n)\
    \ \n{\n    long square = pow(sum_to_n(n), 2);\n    return square;\n}\n/*\nsum_of_squares\
    \ is a function that sums the squares of the numbers from 1 to n.\n    >>> sum_of_squares(30L)\n\
    \    344550L\n    >>> sum_of_squares(100L)\n    338350L\n    >>> sum_of_squares(5L)\n\
    \    55L\n    >>> sum_of_squares(10L)\n    385L\n    >>> sum_of_squares(1L)\n\
    \    1L\n*/\nlong sum_of_squares(long n) \n{\n    long i;\n    long sum = 0;\n\
    \    for (i = 1; i <= n; i += 1) \n    {\n        sum += pow(i, 2);\n    }\n \
    \   return sum;\n}\n/*\ndifference is a function that subtracts the sum of the\
    \ squares from the square of the sum.\n    >>> difference(30L)\n    13225L\n \
    \   >>> difference(100L)\n    25164150L\n    >>> difference(5L)\n    170L\n  \
    \  >>> difference(10L)\n    2640L\n    >>> difference(1L)\n    0L\n*/\nlong difference(long\
    \ n) \n{\n    long square = square_of_sum(n);\n    long sumsq = sum_of_squares(n);\n\
    \    long diff =\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp99s58z4e.d(85): Error: expression expected, not \''unittest\''\n/tmp/tmp99s58z4e.d(86):
    Error: semicolon expected, not \''{\''\n/tmp/tmp99s58z4e.d(95): Error: found \''EOF\''
    when expecting \''}\'' following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp99s58z4e.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long\
    \ i = 1; i <= n; i++)\n    {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_r0eh3r_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long total = 0;\n    long i\
    \ = 1;\n    for (; i <= n; i++) {\n        total += i;\n    }\n    return total;\n\
    }\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) ==\
    \ 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzo7igt6f.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n\tlong a = 0;\n\tfor (long i = 1;\
    \ i <= n; i++)\n\t{\n\t\ta += i;\n\t}\n\treturn a;\n}\nunittest\n{\n    alias\
    \ candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplpp5htd3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long result = 0L;\n    if (n\
    \ <= 0L)\n        return result;\n    else \n    {\n        result = n;\n    \
    \    n = n - 1L;\n        while (n > 0L) \n        {\n            result = result\
    \ + n;\n            n = n - 1L;\n        }\n        return result;\n    }\n}\n\
    unittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L)\
    \ == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7a1eo03b.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long n_plus_one = n + 1;\n \
    \   return (n_plus_one * n) / 2;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\
    \n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L)\
    \ == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) ==\
    \ 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpscnin38_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    return n * (n + 1L) / 2L;\n\
    }\n/*\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmppemj6kii.d(20): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmppemj6kii.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long ret = 0;\n    long i =\
    \ 0;\n    for (i = 1; i <= n; i++)\n    {\n        ret += i;\n    }\n    return\
    \ ret;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdeq2lqkt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    return n * (n + 1L) / 2L;\n\
    }\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) ==\
    \ 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc4x3yaa0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long result = 0L;\n    for (long\
    \ i = 1L; i <= n; i++) {\n        result += i;\n    }\n    return result;\n}\n\
    /*\n* sum_to_n(n)=n*(n+1)/2\n*/\nlong sum_to_n_formula(long n) \n{\n    return\
    \ n*(n+1)/2;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwsyxoczz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n\tlong count = 1;\n\tlong sum =\
    \ 0;\n\twhile (count <= n)\n\t{\n\t\tsum += count;\n\t\tcount += 1;\n\t}\n\treturn\
    \ sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplszimfkl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long\
    \ i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzsqsflp8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    return (n*(n+1L))/2L;\n}\nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4p83tkey.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long\
    \ i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzsqsflp8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long\
    \ i = 1; i <= n; i++)\n    {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_r0eh3r_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    if (n < 1)\n    {\n        return\
    \ 0;\n    }\n    else\n    {\n        return n + sum_to_n(n - 1);\n    }\n}\n\
    unittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L)\
    \ == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxwd_o0ia.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    return n*(n+1)/2;\n}\nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsykvt5kv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n  long result = 0L;\n  long a =\
    \ 0L;\n  while (a < n) {\n    result = result + a;\n    a = a + 1L;\n  }\n  return\
    \ result;\n}\n/*\ncalculate_geo_mean is a function that calculates geometric mean.\n\
    \    >>> calculate_geo_mean(1.0, 2.0)\n    1.4142135623730951\n    >>> calculate_geo_mean(1.0,\
    \ 1.0)\n    1.0\n    >>> calculate_geo_mean(1.0, 0.0)\n    0.0\n    >>> calculate_geo_mean(0.0,\
    \ 0.0)\n    0.0\n    >>> calculate_geo_mean(1.0, 3.0)\n    1.7320508075688772\n\
    \    \n*/\ndouble calculate_geo_mean(double num1, double num2) \n{\n  double result\
    \ = 0.0;\n  if (num1 == 0.0 && num2 == 0.0) {\n    result = 0.0;\n  }\n  else\
    \ {\n    result = sqrt(num1 * num2);\n  }\n  return result;\n}\n/*\nis_even_month\
    \ is a function that checks if the month is even.\n    >>> is_even_month(1)\n\
    \    False\n    >>> is_even_month(2)\n    True\n    >>> is_even_month(7)\n   \
    \ False\n    >>> is_even_month(12)\n    True\n    \n*/\nunittest\n{\n    alias\
    \ candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnetah_l6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n\tlong ret;\n\tret = (n * (n + 1L))\
    \ / 2L;\n\treturn ret;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n  \
    \  assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L)\
    \ == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) ==\
    \ 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplqi9esiu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n  long result = 0L;\n  for (int\
    \ i = 1; i <= n; i++)\n  {\n      result += i;\n  }\n  return result;\n}\nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_1vn77yb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n\tlong sum = 0;\n\tfor (long i =\
    \ 1; i <= n; i++)\n\t{\n\t\tsum += i;\n\t}\n\treturn sum;\n}\nunittest\n{\n  \
    \  alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwzhzkd3g.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    /* \n    if (n < 1) {\n    \
    \    return 0;\n    } else {\n        return n + sum_to_n(n - 1);\n    }\n   \
    \ */\n    /* \u8FD9\u4E48\u5199\u4F1A\u4EA7\u751F\u9012\u5F52\u8FC7\u6DF1\uFF0C\
    \u539F\u56E0\u53EF\u4EE5\u7528\u6808\u6765\u5C55\u793A\n    return n + sum_to_n(n\
    \ - 1);\n    */\n    return n * (n + 1) / 2;\n}\nunittest\n{\n    alias candidate\
    \ = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) ==\
    \ 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp22pe6ma_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long r = 0L;\n    long a;\n\
    \    long i;\n    a = 1L;\n    i = 1L;\n    while (i <= n) {\n        r = r +\
    \ i;\n        i = i + 1L;\n    }\n    return r;\n}\nlong sqrt(long n) \n{\n  \
    \  long r = n;\n    while ((r * r) > n) {\n        r = (r + (n / r)) / 2L;\n \
    \   }\n    return r;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp68o8ljp9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long i;\n    long sum = 0;\n\
    \    for (i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n\
    unittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L)\
    \ == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3zwf6afe.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long i;\n    long sum;\n   \
    \ sum = 0L;\n    i = 1L;\n    while (i <= n) \n    {\n        sum = sum + i;\n\
    \        i = i + 1L;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate\
    \ = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) ==\
    \ 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb878k8w1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long\
    \ i = 1; i <= n; i += 1) {\n        sum += i;\n    }\n    return sum;\n}\n/*\n\
    factorial is a function that calculates factorials.\n    >>> factorial(1L)\n \
    \   1L\n    >>> factorial(5L)\n    120L\n    >>> factorial(6L)\n    720L\n   \
    \ >>> factorial(7L)\n    5040L\n    >>> factorial(15L)\n    1307674368000L\n \
    \   >>> factorial(30L)\n    265252859812191058636308480000000L\n*/\nlong factorial(long\
    \ n) \n{\n    long product = 1;\n    for (long i = 2; i <= n; i += 1) {\n    \
    \    product *= i;\n    }\n    return product;\n}\n/*\nfactors is a function that\
    \ calculates all factors of a number.\n    >>> factors(1L)\n    [1L]\n    >>>\
    \ factors(2L)\n    [1L, 2L]\n    >>> factors(4L)\n    [1L, 2L, 4L]\n    >>> factors(8L)\n\
    \    [1L, 2L, 4L, 8L]\n    >>> factors(10L)\n    [1L, 2L, 5L, 10L]\n    >>> factors(20L)\n\
    \    [1L, 2L, 4L, 5L, 10L, 20L]\n    >>> factors(30L)\n    [1L, 2L, 3L, 5L, 6L,\
    \ 10L, 15L, 30L]\n    >>> factors(36L)\n    [1L, 2L, 3L, 4L, 6L, 9L, 12L, 18L,\
    \ 36L]\n    >>> factors(60L)\n    [1L, 2L, 3L, 4L, 5L, 6L, 10L, 12L, 15L, 20L,\
    \ 30L, 60L]\n    >>> factors(120L)\n    [1L, 2L, 3L, 4L, 5L, 6L, 8L, 10L, 12L,\
    \ 15L, 20L,\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcyfuo63b.d(47): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpcyfuo63b.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    if (n < 0) {\n        return\
    \ 0;\n    } else {\n        return n + sum_to_n(n - 1);\n    }\n}\nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzk40jt98.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long result = 0L;\n    long\
    \ i = 1L;\n    while (i <= n) {\n        result = result + i;\n        i = i +\
    \ 1L;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\
    \n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L)\
    \ == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) ==\
    \ 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqlij0brg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long k = n;\n    long sum =\
    \ 0;\n    while (k > 0) {\n        sum += k;\n        k -= 1;\n    }\n    return\
    \ sum;\n}\n/*\n    fib_to_n is a function that fibonacci numbers from 1 to n.\n\
    \    >>> fib_to_n(30L)\n    832040L\n    >>> fib_to_n(100L)\n    354224848179261915075L\n\
    \    >>> fib_to_n(5L)\n    5L\n    >>> fib_to_n(10L)\n    55L\n    >>> fib_to_n(1L)\n\
    \    1L\n*/\nlong fib_to_n(long n) \n{\n    long pre_pre = 0;\n    long pre =\
    \ 1;\n    long cur = 0;\n    long k = n;\n    while (k > 0) {\n        cur = pre_pre\
    \ + pre;\n        pre_pre = pre;\n        pre = cur;\n        k -= 1;\n    }\n\
    \    return cur;\n}\n/*\nis_prime is a function that test if a number is prime.\n\
    \    >>> is_prime(3L)\n    true\n    >>> is_prime(5L)\n    true\n    >>> is_prime(100L)\n\
    \    false\n    >>> is_prime(2L)\n    true\n    >>> is_prime(6L)\n    false\n\
    \    >>> is_prime(11L)\n    true\n*/\nunittest\n{\n    alias candidate = sum_to_n;\n\
    \n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L)\
    \ == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) ==\
    \ 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp65laoqnn.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    while (n\
    \ > 0) {\n        sum += n;\n        n--;\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp43j961st.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum;\n    for (sum = 0L;\
    \ n; n--)\n        sum += n;\n    return sum;\n}\n/*\nfactorial is a function\
    \ that computes factorials.\n    >>> factorial(5L)\n    120L\n    >>> factorial(0L)\n\
    \    1L\n    >>> factorial(1L)\n    1L\n    >>> factorial(3L)\n    6L\n    >>>\
    \ factorial(10L)\n    3628800L\n    >>> factorial(15L)\n    1307674368000L\n*/\n\
    long factorial(long n) \n{\n    long fact;\n    for (fact = 1L; n; n--)\n    \
    \    fact *= n;\n    return fact;\n}\n/*\nsum_digits_to_n is a function that sums\
    \ the digits in an integer.\n    >>> sum_digits_to_n(10000L)\n    1L\n    >>>\
    \ sum_digits_to_n(1999L)\n    27L\n    >>> sum_digits_to_n(10L)\n    1L\n    >>>\
    \ sum_digits_to_n(20L)\n    2L\n    >>> sum_digits_to_n(30L)\n    3L\n    >>>\
    \ sum_digits_to_n(40L)\n    4L\n    >>> sum_digits_to_n(50L)\n    5L\n    >>>\
    \ sum_digits_to_n(60L)\n    6L\n    >>> sum_digits_to_n(70L)\n    7L\n    >>>\
    \ sum_digits_to_n(80L)\n    8L\n    >>> sum_digits_to_n(90L)\n    9L\n    >>>\
    \ sum_digits_to_n(100L)\n    1L\n    >>> sum_digits_to_n(110L)\n    2L\n    >>>\
    \ sum_digits_to_n(120L)\n    3L\n    >>> sum_digits_to_n(130L)\n    4L\n    >>>\
    \ sum_digits_to_n(140L)\n    5L\n    >>> sum_digits\nunittest\n{\n    alias candidate\
    \ = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) ==\
    \ 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpycu0z12p.d(45): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpycu0z12p.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    return n * (n + 1L) / 2L;\n\
    }\n/*\nfactorial is a function that multiplies numbers from 1 to n.\n    >>> factorial(4L)\n\
    \    24L\n    >>> factorial(0L)\n    1L\n    >>> factorial(1L)\n    1L\n    >>>\
    \ factorial(5L)\n    120L\n    >>> factorial(6L)\n    720L\n*/\nlong factorial(long\
    \ n) \n{\n    long res = 1L;\n    foreach (i; 0 .. n)\n        res *= i + 1L;\n\
    \    return res;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjumygwmc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    return ((n * (n + 1L)) / 2L);\n\
    }\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) ==\
    \ 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfjuj6oel.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long\
    \ i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzsqsflp8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum;\n    int i;\n    //\
    \ YOUR CODE GOES HERE \n    sum = 0;\n    for (i = 1; i <= n; i++) {\n       \
    \ sum += i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\
    \n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L)\
    \ == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) ==\
    \ 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgvvqa4nm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    if (n == 1L) \n        return\
    \ 1L;\n    return n + sum_to_n(n - 1L);\n}\nunittest\n{\n    alias candidate =\
    \ sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n\
    \    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n   \
    \ assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfr1ao5wj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    if (n <= 0)\n        return\
    \ 0;\n    return n + sum_to_n(n - 1);\n}\n/*\nsum_to_i is a function that sums\
    \ numbers from 1 to i.\n    >>> sum_to_i(10L)\n    55L\n    >>> sum_to_i(20L)\n\
    \    210L\n    >>> sum_to_i(100L)\n    5050L\n    >>> sum_to_i(5L)\n    15L\n\
    \    >>> sum_to_i(1L)\n    1L\n*/\nlong sum_to_i(long i) \n{\n    if (i <= 0)\n\
    \        return 0;\n    return i + sum_to_i(i - 1);\n}\n/*\nfibonacci returns\
    \ the nth Fibonacci number using a recursive function.\n    >>> fibonacci(0L)\n\
    \    0L\n    >>> fibonacci(1L)\n    1L\n    >>> fibonacci(2L)\n    1L\n    >>>\
    \ fibonacci(3L)\n    2L\n    >>> fibonacci(5L)\n    5L\n    >>> fibonacci(10L)\n\
    \    55L\n    >>> fibonacci(20L)\n    6765L\n*/\nlong fibonacci(long n) \n{\n\
    \    if (n == 0)\n        return 0;\n    if (n == 1)\n        return 1;\n    return\
    \ fibonacci(n - 1) + fibonacci(n - 2);\n}\n/*\nfactorial computes the factorial\
    \ of a number using a recursive function.\n    >>> factorial(0L)\n    1L\n   \
    \ >>> factorial(1L)\n    1L\n    >>> factorial(2L)\n    2L\n    >>> factorial(3L)\n\
    \    6L\n    >>> factorial(4L)\n    24L\n    >>> factorial(5L)\n    120L\n   \
    \ >>> factorial(6L)\n    720L\n    >>> factorial(7L)\n    5040L\n    >>> factorial(8L)\n\
    \    40320L\n    >>> factorial(9L)\n    362880L\n\nunittest\n{\n    alias candidate\
    \ = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) ==\
    \ 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9nqruah9.d(66): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp9nqruah9.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n  if (n==1) return 1;\n  else return\
    \ n + sum_to_n(n-1);\n}\n/*\nproduct_to_n is a function that computes the product\
    \ of numbers 1 to n.\n    >>> product_to_n(1L)\n    1L\n    >>> product_to_n(2L)\n\
    \    2L\n    >>> product_to_n(3L)\n    6L\n    >>> product_to_n(4L)\n    24L\n\
    \    >>> product_to_n(5L)\n    120L\n    >>> product_to_n(10L)\n    3628800L\n\
    */\nlong product_to_n(long n) \n{\n  if (n==1) return 1;\n  else return n * product_to_n(n-1);\n\
    }\n/*\nfactorial is a function that returns n!\n    >>> factorial(0L)\n    1L\n\
    \    >>> factorial(1L)\n    1L\n    >>> factorial(2L)\n    2L\n    >>> factorial(3L)\n\
    \    6L\n    >>> factorial(4L)\n    24L\n    >>> factorial(5L)\n    120L\n   \
    \ >>> factorial(10L)\n    3628800L\n*/\nlong factorial(long n) \n{\n  if (n==0)\
    \ return 1;\n  else return n * factorial(n-1);\n}\n/*\nfibonacci is a function\
    \ that computes the nth fibonacci number\n    >>> fibonacci(0L)\n    0L\n    >>>\
    \ fibonacci(1L)\n    1L\n    >>> fibonacci(2L)\n    1L\n    >>> fibonacci(3L)\n\
    \    2L\n    >>> fibonacci(4L)\n    3L\n    >>> fibonacci(5L)\n    5L\n    >>>\
    \ fibonacci(6L)\n    8L\n    >>> fibonacci(8L)\n    21L\n    >>> fibonacci(9L)\n\
    \    34L\n    >>> fibonacci(10L)\n    55L\n*/\nlong fibonacci(long n) \nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxkoobd_9.d(87): Error: semicolon expected following function
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxkoobd_9.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    // base case\n    if (n == 1L)\n\
    \        return 1L;\n    else\n        return n + sum_to_n(n - 1L);\n}\nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppcki5qn0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 0
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    long i =\
    \ 1;\n    while (i <= n) {\n        sum += i;\n        i += 1;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n\treturn n*(n+1)/2;\n}\nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long s;\n    s = (n * (n + 1L))\
    \ / 2L;\n    return s;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n  \
    \  assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L)\
    \ == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) ==\
    \ 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi79ux_n4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n  long sum = 0;\n  for (long i =\
    \ 1; i <= n; i++) {\n    sum += i;\n  }\n  return sum;\n}\nunittest\n{\n    alias\
    \ candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm9x698wn.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long result = 0L;\n    long\
    \ i = 1L;\n    while (i < n) {\n        result = result + i;\n        i = i +\
    \ 1L;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\
    \n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L)\
    \ == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) ==\
    \ 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm__6hv4d.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    return n * (n + 1L) / 2L;\n\
    }\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) ==\
    \ 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc4x3yaa0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 0
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    return (n * (n + 1L)) / 2L;\n\
    }\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) ==\
    \ 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    if (n <= 0)\n        return\
    \ 0;\n    return n + sum_to_n(n - 1);\n}\n/*\nis_prime takes a long n as input,\n\
    and returns True if n is prime and False otherwise.\nA number is prime if it's\
    \ divisible only by 1 and itself.\n    >>> is_prime(2L)\n    True\n    >>> is_prime(4L)\n\
    \    False\n    >>> is_prime(5L)\n    True\n    >>> is_prime(1L)\n    False\n\
    \    \n*/\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnuz_437a.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long\
    \ i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n/*\nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfr25k76w.d(24): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpfr25k76w.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long acc = 0L;\n    long i =\
    \ 1L;\n    while (i <= n) \n    {\n        acc += i;\n        i += 1L;\n    }\n\
    \    return acc;\n}\n/*\nfactorial is a function that calculates factorial of\
    \ n.\n    >>> factorial(5L)\n    120L\n    >>> factorial(6L)\n    720L\n    >>>\
    \ factorial(1L)\n    1L\n    >>> factorial(2L)\n    2L\n    >>> factorial(3L)\n\
    \    6L\n    >>> factorial(10L)\n    3628800L\n    \n*/\nlong factorial(long n)\
    \ \n{\n    long acc = 1L;\n    long i = 1L;\n    while (i <= n) \n    {\n    \
    \    acc *= i;\n        i += 1L;\n    }\n    return acc;\n}\n/*\nfibonacci is\
    \ a function that calculates the nth fibonacci number.\n    >>> fibonacci(8L)\n\
    \    21L\n    >>> fibonacci(3L)\n    2L\n    >>> fibonacci(4L)\n    3L\n    >>>\
    \ fibonacci(1L)\n    1L\n    >>> fibonacci(2L)\n    1L\n    >>> fibonacci(6L)\n\
    \    8L\n    >>> fibonacci(10L)\n    55L\n    \n*/\nlong fibonacci(long n) \n\
    {\n    if (n == 1L) \n    {\n        return 1L;\n    }\n    if (n == 2L) \n  \
    \  {\n        return 1L;\n    }\n    long acc = 1L;\n    long temp = 1L;\n   \
    \ long acc_1 = 1L;\n    long i = 3L;\n    while (i <= n) \n    {\n        temp\
    \ = acc;\n        acc = acc + acc_1;\n        acc_1 = temp;\n        i += 1L;\n\
    \    }\n    return acc;\n}\n/*\nsum_of_squares is a function that calculates the\
    \ sum of the squares of integers from 1 to n.\n    >>> sum_of\nunittest\n{\n \
    \   alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnhyfh_sj.d(95): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpnhyfh_sj.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long\
    \ i = 1; i <= n; i++)\n    {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_r0eh3r_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (int\
    \ i = 1; i <= n; i++)\n    {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqv8nf1h4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    if (n > 0) {\n        return\
    \ n + sum_to_n(n - 1);\n    }\n    else {\n        return 0;\n    }\n}\nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl03i0w_s.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    return n * (n + 1L) / 2L;\n\
    }\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) ==\
    \ 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc4x3yaa0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    return n*(n+1)/2;\n}\nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsykvt5kv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    return (n*(n+1))/2;\n}\nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgt2s8ear.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long temp = 0;\n    for (long\
    \ i = 1; i <= n; i++)\n    {\n        temp += i;\n    }\n    return temp;\n}\n\
    unittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L)\
    \ == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq29bilge.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long\
    \ i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\n/*\nsum_of_squares\
    \ is a function that sums squares of numbers from 1 to n.\n    >>> sum_of_squares(30L)\n\
    \    44150L\n    >>> sum_of_squares(100L)\n    338350L\n    >>> sum_of_squares(5L)\n\
    \    55L\n    >>> sum_of_squares(10L)\n    385L\n    >>> sum_of_squares(1L)\n\
    \    1L\n    \n*/\nlong sum_of_squares(long n) \n{\n    long sum = 0;\n    for\
    \ (long i = 1; i <= n; i++) {\n        sum += i * i;\n    }\n    return sum;\n\
    }\n/*\nsquares_of_sum is a function that sums numbers from 1 to n and then squares\n\
    \    >>> squares_of_sum(30L)\n    14176L\n    >>> squares_of_sum(100L)\n    25502500L\n\
    \    >>> squares_of_sum(5L)\n    225L\n    >>> squares_of_sum(10L)\n    3025L\n\
    \    >>> squares_of_sum(1L)\n    1L\n    \n*/\nlong squares_of_sum(long n) \n\
    {\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i;\n\
    \    }\n    return sum * sum;\n}\n/*\ndifference_of_squares is a function that\
    \ finds the difference between the\nsum of squares of the first n natural numbers\
    \ and the square of the sum.\n    >>> difference_of_squares(30L)\n    41730L\n\
    \    >>> difference_of_squares(100L)\n    25164150L\n    >>> difference_of_squares(5L)\n\
    \    170L\n    >>> difference_of_squares(10L)\n    2640L\n    >>> difference_of_squares(1L)\n\
    \    0L\n    \n*/\nlong difference_of_\nunittest\n{\n    alias candidate = sum_to_n;\n\
    \n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L)\
    \ == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) ==\
    \ 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpoyi4r0m3.d(84): Error: semicolon expected, not \''unittest\''\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoyi4r0m3.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    if (n < 0) {\n        return\
    \ 0;\n    }\n    return n * (n + 1) / 2;\n}\n/*\nsum_to_n_reversed is a function\
    \ that sums numbers from n to 1.\n    >>> sum_to_n_reversed(30L)\n    465L\n \
    \   >>> sum_to_n_reversed(100L)\n    5050L\n    >>> sum_to_n_reversed(5L)\n  \
    \  15L\n    >>> sum_to_n_reversed(10L)\n    55L\n    >>> sum_to_n_reversed(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n_reversed(long n) \n{\n    if (n < 0) {\n    \
    \    return 0;\n    }\n    return n * (n + 1) / 2;\n}\n/*\nsum_for_n is a function\
    \ that sums numbers from 1 to n.\n    >>> sum_for_n(30L)\n    465L\n    >>> sum_for_n(100L)\n\
    \    5050L\n    >>> sum_for_n(5L)\n    15L\n    >>> sum_for_n(10L)\n    55L\n\
    \    >>> sum_for_n(1L)\n    1L\n    \n*/\nlong sum_for_n(long n) \n{\n    long\
    \ result = 0;\n    for (long i = 1; i <= n; i++) {\n        result += i;\n   \
    \ }\n    return result;\n}\n/*\nsum_for_n_reversed is a function that sums numbers\
    \ from n to 1.\n    >>> sum_for_n_reversed(30L)\n    465L\n    >>> sum_for_n_reversed(100L)\n\
    \    5050L\n    >>> sum_for_n_reversed(5L)\n    15L\n    >>> sum_for_n_reversed(10L)\n\
    \    55L\n    >>> sum_for_n_reversed(1L)\n    1L\n    \n*/\nlong sum_for_n_reversed(long\
    \ n)\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpco2c2yes.d(81): Error: semicolon expected following function
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpco2c2yes.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n  /* Work out the answer. */\n \
    \ long sum=0;\n  while(n>0)\n  {\n\t  sum+=n;\n\t  n--;\n  }\n  return sum;\n\
    }\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) ==\
    \ 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1cf54quw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long mySum = 0;\n    for (long\
    \ i = 1; i <= n; i++) \n    {\n        mySum += i;\n    }\n    return mySum;\n\
    }\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) ==\
    \ 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7_zz5zus.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long\
    \ i = 1; i <= n; i += 1) \n    {\n        sum += i;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) ==\
    \ 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi_bxp8it.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long result = 0L;\n    for (long\
    \ i = 1L; i <= n; i++) \n    {\n        result += i;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) ==\
    \ 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5o0jdeiv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    //Your code\n    long result\
    \ = 0;\n    for (long i = 0; i <= n; i++)\n    {\n        result += i;\n    }\n\
    \    return result;\n}\n/*\n    >>> sum_cubes_to_n(1L)\n    1L\n    >>> sum_cubes_to_n(5L)\n\
    \    225L\n    >>> sum_cubes_to_n(10L)\n    3025L\n    >>> sum_cubes_to_n(100L)\n\
    \    25502500L\n*/\nlong sum_cubes_to_n(long n) \n{\n    //Your code\n    long\
    \ result = 0;\n    for (long i = 0; i <= n; i++)\n    {\n        result += (i\
    \ * i * i);\n    }\n    return result;\n}\n/*\n    >>> factorial(1L)\n    1L\n\
    \    >>> factorial(5L)\n    120L\n    >>> factorial(10L)\n    3628800L\n    >>>\
    \ factorial(20L)\n    2432902008176640000L\n*/\nlong factorial(long n) \n{\n \
    \   //Your code\n    long result = 1;\n    for (long i = 1; i <= n; i++)\n   \
    \ {\n        result *= i;\n    }\n    return result;\n}\n/*\n    >>> factorial_recursive(1L)\n\
    \    1L\n    >>> factorial_recursive(5L)\n    120L\n    >>> factorial_recursive(10L)\n\
    \    3628800L\n    >>> factorial_recursive(20L)\n    2432902008176640000L\n*/\n\
    long factorial_recursive(long n) \n{\n    //Your code\n    if (n == 1)\n    {\n\
    \        return 1;\n    }\n    else\n    {\n        return n * factorial_recursive(n\
    \ - 1);\n    }\n}\n/*\n    >>> dec2bin(5L)\n    101L\n    >>> dec2bin(6L)\n  \
    \  110L\n    >>> dec2bin(7L)\n    111L\n    >>> dec2bin(10L\nunittest\n{\n   \
    \ alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpwd3qah4t.d(88): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpwd3qah4t.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n\treturn n*(n+1L)/2L;\n}\n/*\nsum_to_n_slow\
    \ is a function that sums numbers from 1 to n, using a slow implementation.\n\
    \    >>> sum_to_n_slow(30L)\n    465L\n    >>> sum_to_n_slow(100L)\n    5050L\n\
    \    >>> sum_to_n_slow(5L)\n    15L\n    >>> sum_to_n_slow(10L)\n    55L\n   \
    \ >>> sum_to_n_slow(1L)\n    1L\n    \n*/\nlong sum_to_n_slow(long n) \n{\n\t\
    long r = 0L;\n\tfor (long i = 1L; i <= n; i++) \n\t{\n\t\tr += i;\n\t}\n\treturn\
    \ r;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw6062lf8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long i;\n    long result;\n\
    \    for (i = 1; i <= n; i++)\n    {\n        result += i;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6y30k9w2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    return n * (n + 1L) / 2L;\n\
    }\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) ==\
    \ 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc4x3yaa0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n\treturn (n * (n + 1L)) / 2L;\n\
    }\n/*\nproduct_to_n is a function that multiplies numbers from 1 to n.\n    >>>\
    \ product_to_n(1L)\n    1L\n    >>> product_to_n(2L)\n    2L\n    >>> product_to_n(3L)\n\
    \    6L\n    >>> product_to_n(4L)\n    24L\n    >>> product_to_n(5L)\n    120L\n\
    \    >>> product_to_n(6L)\n    720L\n*/\nlong product_to_n(long n) \n{\n\treturn\
    \ n <= 1L ? 1L : n * product_to_n(n - 1L);\n}\n/*\nproduct_to_n_by_2 is a function\
    \ that multiplies every other number from 1 to n.\n    >>> product_to_n_by_2(1L)\n\
    \    1L\n    >>> product_to_n_by_2(2L)\n    2L\n    >>> product_to_n_by_2(3L)\n\
    \    6L\n    >>> product_to_n_by_2(4L)\n    12L\n    >>> product_to_n_by_2(5L)\n\
    \    30L\n    >>> product_to_n_by_2(6L)\n    60L\n*/\nlong product_to_n_by_2(long\
    \ n) \n{\n\tif (n <= 1L) {\n\t\treturn 1L;\n\t}\n\tif (n % 2L == 0L) {\n\t\treturn\
    \ n * product_to_n_by_2(n - 2L);\n\t}\n\treturn n * product_to_n_by_2(n - 1L);\n\
    }\n/*\ncross_product is a function that calculates the product of two vectors.\n\
    \    >>> cross_product([1L, 2L, 3L], [1L, 2L, 3L])\n    14L\n    >>> cross_product([1L,\
    \ 2L, 3L], [1L, 1L, 1L])\n    6L\n    >>> cross_product([1L, 1L\nunittest\n{\n\
    \    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpblhdd7fp.d(64): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpblhdd7fp.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long result = (n*(n+1))/2;\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps0818g7g.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    return (((n * (n + 1L)) / 2L));\n\
    }\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) ==\
    \ 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm14bcdnq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    while (n\
    \ > 0) {\n        sum += n;\n        n -= 1;\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo5hcfxto.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long result = 0L;\n    foreach\
    \ (i; 1L .. n + 1L) \n    {\n        result += i;\n    }\n    return result;\n\
    }\n/*\nsum_geom_series is a function that sums geometric series\n    >>> sum_geom_series(5L,\
    \ 3L)\n    23L\n    >>> sum_geom_series(100L, 3L)\n    4950L\n    >>> sum_geom_series(30L,\
    \ 2L)\n    14L\n    >>> sum_geom_series(1L, 3L)\n    3L\n    >>> sum_geom_series(10L,\
    \ 10L)\n    11L\n    >>> sum_geom_series(1L, 1L)\n    1L\n    \n*/\nlong sum_geom_series(long\
    \ n, long a) \n{\n    if (n == 1L) \n    {\n        return a;\n    } \n    else\
    \ \n    {\n        long result = 0L;\n        long i = 0L;\n        foreach (j;\
    \ 0L .. n) \n        {\n            result += a * pow(2L, i);\n            i++;\n\
    \        }\n        return result;\n    }\n}\n/*\n    >>> factorial(1L)\n    1L\n\
    \    >>> factorial(2L)\n    2L\n    >>> factorial(3L)\n    6L\n    >>> factorial(4L)\n\
    \    24L\n    >>> factorial(5L)\n    120L\n    >>> factorial(6L)\n    720L\n \
    \   >>> factorial(7L)\n    5040L\n    >>> factorial(8L)\n    40320L\n    >>> factorial(9L)\n\
    \    362880L\n    >>> factorial(10L)\n    3628800L\n*/\nlong factorial(long n)\
    \ \n{\n    if (n <= 1L) \n    {\n        return 1L;\n    } \n    else \n    {\n\
    \        return n * factorial(n - 1L);\n    }\n}\n/*\n    >>> harmonic_number(5L)\n\
    \    1.72916\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplj_u79sq.d(92): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmplj_u79sq.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n\tlong result;\n\tresult = (n *\
    \ (n + 1L)) / 2L;\n\treturn result;\n}\n/*\nunittest\n{\n    alias candidate =\
    \ sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n\
    \    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n   \
    \ assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpho_o4aya.d(22): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpho_o4aya.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum;\n    for (long i =\
    \ 0; i <= n; i++)\n    {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeonwaf2k.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    return n * (n + 1L) / 2L;\n\
    }\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) ==\
    \ 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc4x3yaa0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    return (n*(n+1))/2;\n}\nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgt2s8ear.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long result;\n    long index;\n\
    \    index = 1L;\n    result = 0L;\n    while (index <= n) {\n        result =\
    \ result + index;\n        index = index + 1L;\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L)\
    \ == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcdhoo8g6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    // This is a stub, insert your\
    \ code here.\n    return (n * (n + 1L)) / 2L;\n}\nunittest\n{\n    alias candidate\
    \ = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) ==\
    \ 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpezu5d64_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n\tlong i = 1L;\n\tlong sum = 0L;\n\
    \twhile (i <= n) {\n\t\tsum += i;\n\t\ti++;\n\t}\n\treturn sum;\n}\nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptfhez_0v.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n\tlong sum = 0;\n\tlong i = 1;\n\
    \twhile (i <= n) {\n\t\tsum += i;\n\t\ti++;\n\t}\n\treturn sum;\n}\nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq9xeqtfw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n\treturn (n*(n+1))/2;\n}\n/*\nsum_from_n_to_m\
    \ is a function that sums numbers from n to m.\n    >>> sum_from_n_to_m(30L, 100L)\n\
    \    4370L\n    >>> sum_from_n_to_m(10L, 100L)\n    4950L\n    >>> sum_from_n_to_m(1L,\
    \ 5L)\n    15L\n    >>> sum_from_n_to_m(5L, 10L)\n    40L\n    >>> sum_from_n_to_m(1L,\
    \ 1L)\n    1L\n*/\nlong sum_from_n_to_m(long n, long m) \n{\n\treturn sum_to_n(m)\
    \ - sum_to_n(n-1);\n}\n/*\nsum_of_squares is a function that sums the squares\
    \ of all numbers from 1 to n.\n    >>> sum_of_squares(30L)\n    43680L\n    >>>\
    \ sum_of_squares(100L)\n    338350L\n    >>> sum_of_squares(5L)\n    55L\n   \
    \ >>> sum_of_squares(10L)\n    385L\n    >>> sum_of_squares(1L)\n    1L\n    \n\
    */\nlong sum_of_squares(long n) \n{\n\treturn (n*(n+1)*(2*n+1))/6;\n}\n/*\nsquare_of_sum\
    \ is a function that squares the sum of all numbers from 1 to n.\n    >>> square_of_sum(30L)\n\
    \    25502500L\n    >>> square_of_sum(100L)\n    25502500L\n    >>> square_of_sum(5L)\n\
    \    225L\n    >>> square_of_sum(10L)\n    3025L\n    >>> square_of_sum(1L)\n\
    \    1L\n    \n*/\nlong square_of_sum(long n) \n{\n\treturn (long)pow(sum_to_n(n),\
    \ 2);\n}\n/*\ndifference is a\nunittest\n{\n    alias candidate = sum_to_n;\n\n\
    \    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L)\
    \ == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) ==\
    \ 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpy7slgowj.d(71): Error: C style cast illegal, use cast(long)pow(sum_to_n(n),
    2)\n/tmp/tmpy7slgowj.d(73): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpy7slgowj.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long res = (n * (n + 1L)) /\
    \ 2L;\n    return res;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n  \
    \  assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L)\
    \ == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) ==\
    \ 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuujp1s94.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    return n * (n + 1L) / 2L;\n\
    }\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) ==\
    \ 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc4x3yaa0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n\treturn ((n * (n + 1L)) / 2L);\n\
    }\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) ==\
    \ 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_v32yor1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 0
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    long i =\
    \ 1;\n    while (i <= n) {\n        sum += i;\n        i += 1;\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long\
    \ i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzsqsflp8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    return (n+1)*n/2;\n}\nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4pszswac.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    return n*(n+1)/2;\n}\n/*\n \
    \  sum_of_squares is a function that calculates the sum of squares from 1 to n.\n\
    \   >>> sum_of_squares(5L)\n   55L\n   >>> sum_of_squares(1L)\n   1L\n   >>> sum_of_squares(10L)\n\
    \   385L\n   >>> sum_of_squares(30L)\n   2970L\n   >>> sum_of_squares(100L)\n\
    \   338350L\n*/\nlong sum_of_squares(long n)\n{\n    return (n*(n+1)*(2*n+1))/6;\n\
    }\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) ==\
    \ 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp82m6crqp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    int i;\n    long x;\n    for\
    \ (i = 0; i < n; i++)\n    {\n        x = x + i;\n    }\n    return x;\n}\n/*\n\
    factorial is a function that returns the factorial of n.\n    >>> factorial(4L)\n\
    \    24L\n    >>> factorial(5L)\n    120L\n    >>> factorial(8L)\n    40320L\n\
    \    >>> factorial(9L)\n    362880L\n    >>> factorial(10L)\n    3628800L\n*/\n\
    long factorial(long n) \n{\n    long x = 1;\n    while (n > 0)\n    {\n      \
    \  x = x * n;\n        n = n - 1;\n    }\n    return x;\n}\n/*\nLargest even is\
    \ a function that returns the largest even number less than or equal to n.\n \
    \   >>> largest_even(10L)\n    10L\n    >>> largest_even(21L)\n    20L\n    >>>\
    \ largest_even(16L)\n    16L\n    >>> largest_even(17L)\n    16L\n    >>> largest_even(2L)\n\
    \    2L\n*/\nlong largest_even(long n) \n{\n    if (n % 2 == 0)\n    {\n     \
    \   return n;\n    }\n    else\n    {\n        return n - 1;\n    }\n}\n/*\ndivisor_sum\
    \ is a function that returns the sum of all positive divisors of n.\n    >>> divisor_sum(6L)\n\
    \    12L\n    >>> divisor_sum(10L)\n    18L\n    >>> divisor_sum(24L)\n    60L\n\
    \    >>> divisor_sum(36L)\n    108L\n    >>> divisor_sum(12L)\n    28L\n*/\nlong\
    \ divisor_sum(long n) \n{\n    int x = 0;\n    int i;\n    for (i = 1; i < n;\
    \ i++)\n    {\n        if (n % i == 0)\n        {\n            x = x + i;\n  \
    \      }\n    }\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf39921bl.d(97): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf39921bl.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long result = 0L;\n    long\
    \ i = 1L;\n    while (i <= n) \n    {\n        result += i;\n        i += 1L;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n\
    \    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L)\
    \ == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) ==\
    \ 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2d3b0zvf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = n;\n    for (long\
    \ i = 1; i < n; i++)\n    {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgcjp717k.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    //define a sum that represents\
    \ the sum of all numbers from 1 to n\n    long sum = 0;\n    //define a counter\
    \ that represents how many times the loop has been executed\n    long counter\
    \ = 0;\n    //define a final loop value that represents the number of iterations\
    \ needed to accomplish\n    //summing all numbers from 1 to n\n    long final_loop_value\
    \ = n;\n    //make sure that final_loop_value is greater than 0\n    assert(final_loop_value\
    \ > 0);\n    //as long as the counter is less than the loop value\n    while (counter\
    \ < final_loop_value)\n    {\n        //increment counter by 1\n        counter\
    \ = counter + 1;\n        //add counter to sum\n        sum = sum + counter;\n\
    \    }\n    //return the value of sum\n    return sum;\n}\nunittest\n{\n    alias\
    \ candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7s3u_z7j.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    return (n * (n + 1L)) >> 1;\n\
    }\n/*\nsum_squares_to_n is a function that sums the squares of numbers from 1\
    \ to n.\n    >>> sum_squares_to_n(30L)\n    435L\n    >>> sum_squares_to_n(100L)\n\
    \    338350L\n    >>> sum_squares_to_n(5L)\n    55L\n    >>> sum_squares_to_n(10L)\n\
    \    385L\n    >>> sum_squares_to_n(1L)\n    1L\n    \n*/\nlong sum_squares_to_n(long\
    \ n) \n{\n    return (n * (n + 1L) * (2L * n + 1L)) / 6L;\n}\n/*\nsum_squares_to_n_slow\
    \ is a naive implementation of sum_squares_to_n.\n    >>> sum_squares_to_n_slow(30L)\n\
    \    435L\n    >>> sum_squares_to_n_slow(100L)\n    338350L\n    >>> sum_squares_to_n_slow(5L)\n\
    \    55L\n    >>> sum_squares_to_n_slow(10L)\n    385L\n    >>> sum_squares_to_n_slow(1L)\n\
    \    1L\n    \n*/\nlong sum_squares_to_n_slow(long n) \n{\n    long sum = 0L;\n\
    \    foreach (i; 0L .. n + 1L) \n    {\n        sum += i * i;\n    }\n    return\
    \ sum;\n}\n/*\nsum_squares_to_n_fp is a function that sums the squares of numbers\
    \ from 1 to n using floating point math.\n    >>> sum_squares_to_n_fp(30L)\n \
    \   435.000000\n    >>> sum_squares_to_n_fp(100L)\n    338350.000000\n    >>>\
    \ sum_squares_to_n_fp(5L)\n    55.000000\n    >>> sum_squares_to_n_fp(10L)\n \
    \   385.000000\n   \nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_hmxnmys.d(61): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp_hmxnmys.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    return n * (n + 1L) / 2L;\n\
    }\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) ==\
    \ 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc4x3yaa0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long result;\n    result = n\
    \ * (n + 1L) / 2L;\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n\
    \    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n   \
    \ assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0i60bwd1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long\
    \ i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzsqsflp8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n\tif (n == 1) \n\t{\n\t\treturn\
    \ 1;\n\t}\n\treturn n + sum_to_n(n - 1);\n}\nunittest\n{\n    alias candidate\
    \ = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) ==\
    \ 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt0lpp1c4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    // long accum = 0L;\n    //\
    \ while (n > 0L) {\n    //     accum += n;\n    //     n--;\n    // }\n    //\
    \ return accum;\n    return n * (n + 1L) / 2L;\n}\n/*\nmax_n_times computes (n\
    \ * max(lst)).\n    >>> max_n_times([30L,50L,22L,6L,7L,9L,1L,1L,1L,1L,1L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2L,2\n\
    unittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L)\
    \ == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1wfmha1m.d(26): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp1wfmha1m.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long total = 0;\n    for (long\
    \ i = 1; i <= n; i++) {\n        total += i;\n    }\n    return total;\n}\nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnvvns_g_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 0
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n\treturn n*(n+1)/2;\n}\nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n\t/*\n\t\tlong sum = 0;\n\t\tfor\
    \ (long i = 1; i <= n; i++) {\n\t\t\tsum += i;\n\t\t}\n\t\treturn sum;\n\t*/\n\
    \treturn n * (n + 1) / 2;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n\
    \    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L)\
    \ == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) ==\
    \ 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8nyykp2z.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long result = 0L;\n    foreach\
    \ (n; 0..n)\n    {\n        result += n;\n    }\n    return result;\n}\n/*\nsum_to_n_pow\
    \ is a function that sums the squared numbers from 1 to n.\n    >>> sum_to_n_pow(30L)\n\
    \    135135L\n    >>> sum_to_n_pow(100L)\n    338350L\n    >>> sum_to_n_pow(5L)\n\
    \    55L\n    >>> sum_to_n_pow(10L)\n    385L\n    >>> sum_to_n_pow(1L)\n    1L\n\
    */\nlong sum_to_n_pow(long n) \n{\n    long result = 0L;\n    foreach (n; 0..n)\n\
    \    {\n        result += pow(n, 2);\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdc8jvk48.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum=0;\n    for(long i=1;i<=n;i++)\n\
    \    {\n        sum+=i;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate\
    \ = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) ==\
    \ 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuah6du51.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long out_sum = 0L;\n    long\
    \ i = 1L;\n    for (i = 1L; i <= n; i++) {\n        out_sum += i;\n    }\n   \
    \ return out_sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpki21hbzv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    return (n*(n+1L))/2L;\n}\nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4p83tkey.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    return n*(n+1)/2;\n}\n/*\ncount_digits\
    \ returns the number of digits in a long\n    >>> count_digits(1L)\n    1\n  \
    \  >>> count_digits(0L)\n    1\n    >>> count_digits(9L)\n    1\n    >>> count_digits(10L)\n\
    \    2\n    >>> count_digits(100L)\n    3\n    >>> count_digits(1234L)\n    4\n\
    \    >>> count_digits(9876543210L)\n    10\n    >>> count_digits(12345678901234567890L)\n\
    \    20\n*/\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp84r8fnmr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long s;\n    s = ((n + 1) *\
    \ n) / 2;\n    return s;\n}\n/*\nis_factor checks whether a number is a factor\
    \ of another.\n    >>> is_factor(3L, 12L)\n    True\n    >>> is_factor(5L, 12L)\n\
    \    False\n    >>> is_factor(7L, 14L)\n    True\n    >>> is_factor(2L, 14L)\n\
    \    True\n    >>> is_factor(7L, 15L)\n    False\n*/\nunittest\n{\n    alias candidate\
    \ = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) ==\
    \ 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptjzv3rzh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    return n * (n + 1L) / 2L;\n\
    }\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) ==\
    \ 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc4x3yaa0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    return n*(n+1)/2;\n}\nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsykvt5kv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long result = 0L;\n    long\
    \ i = 1L;\n    while (i <= n) \n    {\n        result += i;\n        i++;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n\
    \    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L)\
    \ == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) ==\
    \ 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph0awyfs1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long x;\n    long y;\n    y\
    \ = n * (n + 1L) / 2L;\n    return y;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\
    \n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L)\
    \ == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) ==\
    \ 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpprirywn4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n  return n*(n+1)/2;\n}\nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphkb3ecnd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long\
    \ i = 1; i <= n; i++)\n    {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_r0eh3r_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    if (n == 1L) {\n        return\
    \ 1L;\n    }\n    else {\n        return sum_to_n(n - 1L) + n;\n    }\n}\nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfou3zcnv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    return n * (n + 1L) / 2L;\n\
    }\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) ==\
    \ 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc4x3yaa0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    if (n < 1) \n    {\n       \
    \ return 0;\n    }\n    return n + sum_to_n(n - 1);\n}\n/*\nfactorial is a function\
    \ that calculates n!\n>>> factorial(1L)\n1L\n>>> factorial(2L)\n2L\n>>> factorial(3L)\n\
    6L\n>>> factorial(4L)\n24L\n>>> factorial(5L)\n120L\n>>> factorial(6L)\n720L\n\
    >>> factorial(7L)\n5040L\n>>> factorial(8L)\n40320L\n>>> factorial(9L)\n362880L\n\
    >>> factorial(10L)\n3628800L\n*/\nlong factorial(long n) \n{\n    if (n == 1)\
    \ \n    {\n        return 1;\n    }\n    return n * factorial(n - 1);\n}\n/*\n\
    pow is a function that calculates n^power\n    >>> pow(2L, 3L)\n    8L\n    >>>\
    \ pow(5L, 0L)\n    1L\n    >>> pow(2L, 0L)\n    1L\n    >>> pow(5L, 2L)\n    25L\n\
    \    >>> pow(7L, 3L)\n    343L\n    >>> pow(3L, 4L)\n    81L\n    >>> pow(3L,\
    \ 6L)\n    729L\n    >>> pow(2L, 6L)\n    64L\n    >>> pow(2L, 7L)\n    128L\n\
    \    >>> pow(4L, 5L)\n    1024L\n    >>> pow(6L, 3L)\n    216L\n    >>> pow(8L,\
    \ 2L)\n    64L\n    >>> pow(10L, 4L)\n    10000L\n    >>> pow(10L, 3L)\n    1000L\n\
    \    >>> pow(2L, 8L)\n    256L\n    >>> pow(3L, 2L)\n    9L\n    >>> pow(10L,\
    \ 2L)\n    100L\n    >>> pow(5L, 3L)\n    125L\n    >>> pow(5L, 4L)\n    625\n\
    unittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L)\
    \ == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4qsp4rui.d(55): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp4qsp4rui.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (int\
    \ i = 1; i <= n; i++)\n    {\n        sum += i;\n    }\n    return sum;\n}\n/*\n\
    factorial is a function that computes factorial of n.\n    >>> factorial(30L)\n\
    \    265252859812191058636308480000000L\n    >>> factorial(100L)\n    93326215443944152681699238856266700490715968264381621468592963895217599993229915608941463976156518286253697920827223758251185210916864000000000000000000000000L\n\
    \    >>> factorial(5L)\n    120L\n    >>> factorial(10L)\n    3628800L\n    >>>\
    \ factorial(1L)\n    1L\n    \n*/\nlong factorial(long n) \n{\n    long result\
    \ = 1;\n    for (int i = 1; i <= n; i++)\n    {\n        result *= i;\n    }\n\
    \    return result;\n}\n/*\nfibonacci is a function that computes the nth fibonacci\
    \ number.\n    >>> fibonacci(30L)\n    832040L\n    >>> fibonacci(100L)\n    354224848179261915075L\n\
    \    >>> fibonacci(5L)\n    5L\n    >>> fibonacci(10L)\n    55L\n    >>> fibonacci(1L)\n\
    \    1L\n    \n*/\nlong fibonacci(long n) \n{\n    long a = 0;\n    long b = 1;\n\
    \    for (int i = 0; i < n; i++)\n    {\n        long temp = a;\n        a = b;\n\
    \        b = temp + b;\n    }\n    return a;\n}\n/*\nprint_numbers is a function\
    \ that prints the first n integers starting with 1.\n    >>> print_numbers(30L)\n\
    \    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21,\
    \ 22, 23,\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnwpy2cd2.d(74): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpnwpy2cd2.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long\
    \ i = 1; i <= n; i += 1) \n    {\n        sum += i;\n    }\n    return sum;\n\
    }\n/*\nfactorial is a function that calculates n!.\n    >>> factorial(3L)\n  \
    \  6L\n    >>> factorial(5L)\n    120L\n    >>> factorial(1L)\n    1L\n    >>>\
    \ factorial(0L)\n    1L\n    >>> factorial(2L)\n    2L\n*/\nlong factorial(long\
    \ n) \n{\n    long fac = 1;\n    for (long i = 1; i <= n; i += 1) \n    {\n  \
    \      fac *= i;\n    }\n    return fac;\n}\n/*\nsquare_root is a function that\
    \ calculates the sqrt of n.\n    >>> square_root(9L)\n    3L\n    >>> square_root(64L)\n\
    \    8L\n    >>> square_root(4L)\n    2L\n    >>> square_root(1L)\n    1L\n  \
    \  >>> square_root(2L)\n    1L\n*/\nlong square_root(long n) \n{\n    long sqrt\
    \ = 1;\n    for (long i = 1; i <= n; i += 1) \n    {\n        if (i * i == n)\
    \ \n        {\n            sqrt = i;\n        }\n    }\n    return sqrt;\n}\n\
    /*\nsquare_sum is a function that calculates the sum of the square of n numbers.\n\
    \    >>> square_sum(1L)\n    1L\n    >>> square_sum(2L)\n    5L\n    >>> square_sum(3L)\n\
    \    14L\n    >>> square_sum(4L)\n    30L\n    >>> square_sum(5L)\n    55L\n*/\n\
    long square_sum(long n) \n{\n    long sum = 0;\n    for (long i = 1; i <= n; i\
    \ += 1) \n    {\n        sum += i * i;\n    }\n    return sum;\n}\n/*\nsum_of_square\
    \ is a function that calculates the square of\nunittest\n{\n    alias candidate\
    \ = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) ==\
    \ 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxi2pif4u.d(94): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpxi2pif4u.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 0
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    return (n * (n + 1L)) / 2L;\n\
    }\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) ==\
    \ 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n\treturn n < 1 ? 0 : n * (n + 1)\
    \ / 2;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo5py72ko.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    return n * (n + 1L) / 2L;\n\
    }\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) ==\
    \ 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc4x3yaa0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long result = 0L;\n    for (long\
    \ i = 1L; i <= n; i++) \n    {\n        result += i;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) ==\
    \ 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5o0jdeiv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long result = 0L;\n    long\
    \ i = 1L;\n    while (i <= n) {\n        result = result + i;\n        i = i +\
    \ 1L;\n    }\n    return result;\n}\n/*\nsum_to_n_for is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n_for(30L)\n    465L\n    >>> sum_to_n_for(100L)\n\
    \    5050L\n    >>> sum_to_n_for(5L)\n    15L\n    >>> sum_to_n_for(10L)\n   \
    \ 55L\n    >>> sum_to_n_for(1L)\n    1L\n    \n*/\nlong sum_to_n_for(long n) \n\
    {\n    long result = 0L;\n    long i = 1L;\n    for (i = 1L; i <= n; i = i + 1L)\
    \ {\n        result = result + i;\n    }\n    return result;\n}\n/*\nsum_from_m_to_n\
    \ is a function that sums numbers from m to n.\n    >>> sum_from_m_to_n(30L, 1L)\n\
    \    465L\n    >>> sum_from_m_to_n(100L, 1L)\n    5050L\n    >>> sum_from_m_to_n(5L,\
    \ 1L)\n    15L\n    >>> sum_from_m_to_n(10L, 1L)\n    55L\n    >>> sum_from_m_to_n(1L,\
    \ 1L)\n    1L\n    >>> sum_from_m_to_n(10L, 3L)\n    54L\n    >>> sum_from_m_to_n(5L,\
    \ 6L)\n    0L\n    >>> sum_from_m_to_n(10L, 10L)\n    10L\n    \n*/\nlong sum_from_m_to_n(long\
    \ m, long n) \n{\n    long result = 0L;\n    long i = m;\n    while (i <= n) {\n\
    \        result = result + i;\n        i = i +\nunittest\n{\n    alias candidate\
    \ = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) ==\
    \ 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfgxh3uv9.d(76): Error: expression expected, not \''unittest\''\n/tmp/tmpfgxh3uv9.d(77):
    Error: found \''{\'' when expecting \'';\'' following statement\n/tmp/tmpfgxh3uv9.d(86):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfgxh3uv9.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    if (n <= 0)\n    {\n       \
    \ return 0;\n    }\n    return n + sum_to_n(n - 1);\n}\nunittest\n{\n    alias\
    \ candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuoslz4sm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long x = 0L;\n    long result\
    \ = 0L;\n    long i = 0L;\n    i = 1L;\n    while (i <= n) \n    {\n        result\
    \ = x + i;\n        x = result;\n        i = i + 1L;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) ==\
    \ 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnqy93gaa.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977857
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    if (n < 1) {\n        return\
    \ 0;\n    }\n    else {\n        return n + sum_to_n(n - 1);\n    }\n}\nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcfbfdbp5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    /* your code goes here */\n\t\
    long a=0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\ta=a+i;\n\t}\n\treturn a;\n}\n/*\n\
    \ *  * print_up_to_n is a function that prints the numbers from 1 to n.\n *  \
    \ *     >>> print_up_to_n(5L)\n *    *     1\n *     *     2\n *      *     3\n\
    \ *       *     4\n *        *     5\n *         *     >>> print_up_to_n(100L)\n\
    \ *          *     1\n *           *     2\n *            *     3\n *        \
    \     *     4\n *              *     5\n *               *     6\n *         \
    \       *     7\n *                 *     8\n *                  *     9\n * \
    \                  *     10\n *                    *     11\n *              \
    \       *     12\n *                      *     13\n *                       *\
    \     14\n *                        *     15\n *                         *   \
    \  16\n *                          *     17\n *                           *  \
    \   18\n *                            *     19\n *                           \
    \  *     20\n *                              *     21\n *                    \
    \           *     22\n *                                *     23\n *         \
    \                        *     24\n *                                  *     25\n\
    \ *                                   *     26\n *                           \
    \         *     27\n *                                     *     28\n *      \
    \                                *     29\n *                                \
    \       *     30\n *                                        *     31\n *     \
    \                                    *     32\n *                            \
    \              *     33\n *                                           *     34\n\
    \ *                                            *     35\n *                  \
    \                           *     36\n *                                     \
    \         *     37\n *                                               *     38\n\
    \ *                                                *     39\n *              \
    \                                   *     40\n *                             \
    \                     *     41\n *                                           \
    \        *     42\n *                                                    *   \
    \  43\n *                                                     *     44\n *   \
    \                                                   *     45\n *             \
    \                                          *     46\n *                      \
    \                                  *     47\n *                              \
    \                           *     48\n *                                     \
    \                     *     49\n *                                           \
    \                *     50\n *                                                \
    \            *     51\n *                                                \nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpn7lyd_gc.d(26): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpn7lyd_gc.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 0
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    return (n * (n + 1L)) / 2L;\n\
    }\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) ==\
    \ 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    return (long)(n * (n + 1L) /\
    \ 2L);\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1je2q09m.d(18): Error: C style cast illegal, use cast(long)(n
    * (n + 1L) / 2L)\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1je2q09m.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    if (n == 1L)\n        return\
    \ 1L;\n    else if (n > 1L)\n        return n + sum_to_n(n - 1L);\n    else\n\
    \        return 0L;\n}\n/*\nfactorial is a function that computes factorials.\n\
    \    >>> factorial(30L)\n    265252859812191058636308480000000L\n    >>> factorial(100L)\n\
    \    93326215443944152681699238856266700490715968264381621468592963895217599993229915608941463976156518286253697920827223758251185210916864000000000000000000000000L\n\
    \    >>> factorial(5L)\n    120L\n    >>> factorial(10L)\n    3628800L\n    >>>\
    \ factorial(1L)\n    1L\n*/\nlong factorial(long n) \n{\n    if (n == 1L)\n  \
    \      return 1L;\n    else if (n > 1L)\n        return n * factorial(n - 1L);\n\
    \    else\n        return 0L;\n}\n/*\nfibonacci is a function that returns the\
    \ nth fibonacci number.\n    >>> fibonacci(30L)\n    832040L\n    >>> fibonacci(100L)\n\
    \    354224848179261915075L\n    >>> fibonacci(5L)\n    5L\n    >>> fibonacci(10L)\n\
    \    55L\n    >>> fibonacci(1L)\n    1L\n*/\nlong fibonacci(long n) \n{\n    if\
    \ (n == 1L)\n        return 1L;\n    else if (n == 2L)\n        return 1L;\n \
    \   else if (n > 2L)\n        return fibonacci(n - 1L) + fibonacci(n - 2L);\n\
    \    else\n        return 0L;\n}\n/*\nlength_of_string is a function that returns\
    \ the length of a string.\n    >>> length_of_string(\"abc\")\n    3\n    >>> length_of_string(\"\
    hi\")\n    2\n    >>> length_of_string(\"\nunittest\n{\n    alias candidate =\
    \ sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n\
    \    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n   \
    \ assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmppau7ciyc.d(71): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmppau7ciyc.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n  long result = 0L;\n  for (long\
    \ i = 1L; i <= n; i++) \n  {\n    result += i;\n  }\n  return result;\n}\n/*\n\
    use this function to check you answer.\n*/\nunittest\n{\n    alias candidate =\
    \ sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n\
    \    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n   \
    \ assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptptb_ec0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    return (n*(n+1L))/2L;\n}\nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4p83tkey.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n\tif (n <= 0) return 0;\n\treturn\
    \ n + sum_to_n(n - 1);\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n  \
    \  assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L)\
    \ == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) ==\
    \ 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv3ctx7la.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    return n * (n + 1L) / 2L;\n\
    }\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) ==\
    \ 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc4x3yaa0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long result = 0L;\n    long\
    \ i = 1L;\n    while (i <= n) {\n        result = result + i;\n        i = i +\
    \ 1L;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\
    \n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L)\
    \ == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) ==\
    \ 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqlij0brg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    long i =\
    \ 1;\n    while (i <= n) \n    {\n        sum += i;\n        i++;\n    }\n   \
    \ return sum;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0uen9dyc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long result;\n    if (n == 1L)\
    \ \n    {\n        result = 1L;\n    }\n    else \n    {\n        result = n +\
    \ sum_to_n(n - 1L);\n    }\n    return result;\n}\n/*\ndouble_n is a function\
    \ that doubles a number n.\n    >>> double_n(4L)\n    8L\n    >>> double_n(5L)\n\
    \    10L\n    >>> double_n(10L)\n    20L\n    >>> double_n(100L)\n    200L\n \
    \   >>> double_n(1000L)\n    2000L\n*/\nlong double_n(long n) \n{\n    return\
    \ 2L * n;\n}\n/*\nfactorial is a function that calculates the factorial of n.\n\
    \    >>> factorial(1L)\n    1L\n    >>> factorial(2L)\n    2L\n    >>> factorial(3L)\n\
    \    6L\n    >>> factorial(4L)\n    24L\n    >>> factorial(5L)\n    120L\n   \
    \ >>> factorial(6L)\n    720L\n    >>> factorial(7L)\n    5040L\n    >>> factorial(8L)\n\
    \    40320L\n    >>> factorial(9L)\n    362880L\n    >>> factorial(10L)\n    3628800L\n\
    */\nlong factorial(long n) \n{\n    long result;\n    if (n == 1L) \n    {\n \
    \       result = 1L;\n    }\n    else \n    {\n        result = n * factorial(n\
    \ - 1L);\n    }\n    return result;\n}\n/*\nis_prime is a function that determines\
    \ if a number n is prime.\n    >>> is_prime(2L)\n    True\n    >>> is_prime(3L)\n\
    \    True\n    >>> is_prime(4L)\n    False\n    >>> is_prime(5L)\n    True\n \
    \   >>> is_prime(6L)\n    False\n    >>> is_prime(7L)\n    True\n    >>> is_prime(8L)\n\
    \    False\n    >>> is_prime\nunittest\n{\n    alias candidate = sum_to_n;\n\n\
    \    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L)\
    \ == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) ==\
    \ 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3_orudch.d(82): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp3_orudch.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977857
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    if (n == 1L)\n        return\
    \ 1L;\n    return n + sum_to_n(n - 1L);\n}\n/*\nfactorial is a function that calculates\
    \ factorial of a given number.\n    >>> factorial(1L)\n    1L\n    >>> factorial(5L)\n\
    \    120L\n    >>> factorial(10L)\n    3628800L\n    >>> factorial(30L)\n    265252859812191058636308480000000L\n\
    */\nlong factorial(long n) \n{\n    if (n == 1L)\n        return 1L;\n    return\
    \ n * factorial(n - 1L);\n}\n/*\nfibonacci is a function that calculates fibonacci\
    \ number of a given number.\n    >>> fibonacci(0L)\n    0L\n    >>> fibonacci(1L)\n\
    \    1L\n    >>> fibonacci(2L)\n    1L\n    >>> fibonacci(3L)\n    2L\n    >>>\
    \ fibonacci(4L)\n    3L\n    >>> fibonacci(5L)\n    5L\n    >>> fibonacci(6L)\n\
    \    8L\n    >>> fibonacci(7L)\n    13L\n    >>> fibonacci(8L)\n    21L\n    >>>\
    \ fibonacci(9L)\n    34L\n    >>> fibonacci(10L)\n    55L\n    >>> fibonacci(11L)\n\
    \    89L\n    >>> fibonacci(12L)\n    144L\n    >>> fibonacci(13L)\n    233L\n\
    \    >>> fibonacci(14L)\n    377L\n    >>> fibonacci(15L)\n    610L\n    >>> fibonacci(16L)\n\
    \    987L\n    >>> fibonacci(17L)\n    1597L\n    >>> fibonacci(18L)\n    2584L\n\
    \    >>> fibonacci(19L)\n    4181L\n    >>> fibonacci(20L)\n    6765L\n    >>>\
    \ fibonacci(21L)\n    10946L\n    >>> fibonacci(22L)\n    17711L\n   \nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvd88rd0k.d(39): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpvd88rd0k.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n\treturn n * (n + 1) / 2;\n}\nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk5pqjb8f.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long ret = 0;\n    for (long\
    \ i = 1; i <= n; i++)\n    {\n        ret += i;\n    }\n    return ret;\n}\nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzjg_aman.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977857
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    return n*(n+1)/2;\n}\nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsykvt5kv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    return n * (n + 1L) / 2L;\n\
    }\n/*\nThe binary operations are just the normal operations you would expect to\
    \ operate on binary strings. \n    >>> bitwise_xor(\"10010010\", \"10010001\"\
    )\n    '00000011'\n    >>> bitwise_or(\"10010010\", \"10010001\")\n    '10010011'\n\
    \    >>> bitwise_and(\"10010010\", \"10010001\")\n    '10010001'\n    >>> bitwise_not(\"\
    10010010\")\n    '01101101'\n    >>> bitwise_xor(\"10010010\", \"10100101\")\n\
    \    '00100111'\n    >>> bitwise_or(\"10010010\", \"10100101\")\n    '10100101'\n\
    \    >>> bitwise_and(\"10010010\", \"10100101\")\n    '10010010'\n    >>> bitwise_not(\"\
    10100101\")\n    '01011010'\n    \n*/\nstring bitwise_xor(string x, string y)\
    \ \n{\n    int i = 0;\n    string result = \"\";\n    while (i < x.length && i\
    \ < y.length) \n    {\n        int x_char = x[i] - '0';\n        int y_char =\
    \ y[i] - '0';\n        if (x_char != y_char) \n        {\n            result +=\
    \ \"1\";\n        }\n        else \n        {\n            result += \"0\";\n\
    \        }\n        i++;\n    }\n    return result;\n}\nstring bitwise_or(string\
    \ x, string y) \n{\n    int i = 0;\n    string result = \"\";\n    while (i <\
    \ x.length && i < y.length) \n    {\n        int x_char = x[i] - '0';\n      \
    \  int y_char = y[i] - '0';\n        if (x_char == 1 || y_char == 1) \n      \
    \  {\n            result += \"1\";\n        }\n        else \n        {\n    \
    \        result += \"0\";\n        }\n        i++;\n    }\n    return result;\n\
    }\nstring bitwise_\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmprmvxdz45.d(81): Error: semicolon expected, not \''unittest\''\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprmvxdz45.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    return n * (n + 1L) / 2L;\n\
    }\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) ==\
    \ 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc4x3yaa0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long sum = 0;\n    for (long\
    \ i = 1; i <= n; i++)\n    {\n        sum += i;\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_r0eh3r_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    return n * (n + 1L) / 2L;\n\
    }\n/*\nproduct_to_n is a function that calculates the product from 1 to n.\n \
    \   >>> product_to_n(5L)\n    120L\n    >>> product_to_n(10L)\n    3628800L\n\
    \    >>> product_to_n(30L)\n    265252859812191058636308480000000L\n    >>> product_to_n(100L)\n\
    \    93326215443944152681699238856266700490715968264381621468592963895217599993229915608941463976156518286253697920827223758251185210916864000000000000000000000000L\n\
    */\nlong product_to_n(long n) \n{\n    long result = 1L;\n    long i = 1L;\n \
    \   while (i <= n) {\n        result *= i;\n        i++;\n    }\n    return result;\n\
    }\n/*\nlargest_power_of_two is a function that returns the largest power of two\
    \ less than or equal to n.\n    >>> largest_power_of_two(3L)\n    2L\n    >>>\
    \ largest_power_of_two(4L)\n    4L\n    >>> largest_power_of_two(5L)\n    4L\n\
    \    >>> largest_power_of_two(10L)\n    8L\n    >>> largest_power_of_two(2L **\
    \ 20L)\n    1048576L\n    >>> largest_power_of_two(2L ** 40L)\n    1099511627776L\n\
    */\nlong largest_power_of_two(long n) \n{\n    long result = 1L;\n    while (result\
    \ <= n) {\n        result <<= 1L;\n    }\n    return result >> 1L;\n}\n/*\ncount_nibbles_in_binary\
    \ is a function that counts the number of 1s in the binary representation of n.\n\
    \    >>> count_nibbles_in_binary(1L)\n    1L\n    >>> count_nibbles_in_binary(2L)\n\
    \    1L\n    >>>\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5ycew7io.d(64): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp5ycew7io.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    return (n*(n+1))/2;\n}\nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgt2s8ear.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    return n * (n + 1L) / 2L;\n\
    }\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) ==\
    \ 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc4x3yaa0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    return (n*(n+1L))/2L;\n}\nunittest\n\
    {\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L)\
    \ == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n\
    \    assert(candidate(100L) == 5050L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4p83tkey.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977856
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n  long result = 0L;\n  long i =\
    \ 1L;\n  while (i <= n) \n  {\n    result = result + i;\n    i = i + 1L;\n  }\n\
    \  return result;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuakh_b0q.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977857
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    return n*(n+1)/2;\n}\n/*\nsums_to_n\
    \ is a function that returns the sum of the first n terms of a geometric sequence.\n\
    \    >>> sums_to_n(0L, 20L, -3L)\n    0L\n    >>> sums_to_n(1L, 20L, -3L)\n  \
    \  10L\n    >>> sums_to_n(1L, 5L, 4L)\n    35L\n    >>> sums_to_n(10L, 2L, 5L)\n\
    \    20L\n    >>> sums_to_n(10L, 2L, -5L)\n    -30L\n*/\nlong sums_to_n(long a,\
    \ long n, long r) \n{\n    return (long)(a*(1-pow(r,n))/(1-r));\n}\n/*\ncent_price\
    \ is a function that converts change to the correct denominations.\n    >>> cent_price(101)\n\
    \    [100, 1]\n    >>> cent_price(8237)\n    [5000, 2000, 1000, 200, 200, 100,\
    \ 10, 10, 5, 1, 1]\n    >>> cent_price(105)\n    [100, 5]\n    >>> cent_price(512)\n\
    \    [500, 10, 1, 1]\n    >>> cent_price(7)\n    [5, 1, 1]\n*/\nlist[long] cent_price(long\
    \ m) \n{\n    list[long] xs = [];\n    while (m >= 500) {xs = [500 | xs]; m =\
    \ m - 500;}\n    while (m >= 200) {xs = [200 | xs]; m = m - 200;}\n    while (m\
    \ >= 100) {xs = [100 | xs]; m = m - 100;}\n    while (m >= 50) {xs = [50 | xs];\
    \ m = m - 50;}\n    while (m >= 20) {xs = [20 | xs]; m = m - 20;}\n    while (m\
    \ >= 10) {xs = [10 | xs]; m = m - 10;}\n    while (m >= 5) {xs = [5 | xs]; m =\
    \ m - 5\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmptvdolpzt.d(35): Error: C style cast illegal, use cast(long)(a
    * (1 - pow(r, n)) / (1 - r))\n/tmp/tmptvdolpzt.d(60): Error: found \''unittest\''
    when expecting \'';\'' following statement\n/tmp/tmptvdolpzt.d(70): Error: found
    \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmptvdolpzt.d(70):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptvdolpzt.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977857
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    long result;\n    result = n*(n+1)/2;\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3eh1t4fu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977857
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n    return cast(long)(n*(n+1)/2);\n\
    }\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) ==\
    \ 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj8n1htxm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977857
- exit_code: 1
  program: "import std.math;\n/*\nsum_to_n is a function that sums numbers from 1\
    \ to n.\n    >>> sum_to_n(30L)\n    465L\n    >>> sum_to_n(100L)\n    5050L\n\
    \    >>> sum_to_n(5L)\n    15L\n    >>> sum_to_n(10L)\n    55L\n    >>> sum_to_n(1L)\n\
    \    1L\n    \n*/\nlong sum_to_n(long n) \n{\n\treturn n * (n + 1) / 2;\n}\n/*\n\
    \    >>> sum_to_n_squared(30L)\n    44909965L\n    >>> sum_to_n_squared(100L)\n\
    \    338350L\n    >>> sum_to_n_squared(5L)\n    55L\n    >>> sum_to_n_squared(10L)\n\
    \    385L\n    >>> sum_to_n_squared(1L)\n    1L\n*/\nlong sum_to_n_squared(long\
    \ n) \n{\n\treturn n * (n + 1) * (2 * n + 1) / 6;\n}\n/*\n    >>> sum_to_n_cubed(30L)\n\
    \    2085752600L\n    >>> sum_to_n_cubed(100L)\n    25502500L\n    >>> sum_to_n_cubed(5L)\n\
    \    225L\n    >>> sum_to_n_cubed(10L)\n    3025L\n    >>> sum_to_n_cubed(1L)\n\
    \    1L\n*/\nlong sum_to_n_cubed(long n) \n{\n\treturn (n * (n + 1) / 2) * (n\
    \ * (n + 1) / 2);\n}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n\
    \    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1qptreqg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977857

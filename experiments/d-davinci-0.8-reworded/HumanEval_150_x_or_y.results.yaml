name: HumanEval_150_x_or_y
language: d
results:
- program: "import std.math;\nimport std.typecons;\n/*\nA simple program which should\
    \ return the value of x if n is \n    a prime number and should return the value\
    \ of y otherwise.\n\n    Examples:\n    >>> x_or_y(7L, 34L, 12L)\n    34L\n  \
    \  >>> x_or_y(15L, 8L, 5L)\n    5L\n    \n    \n*/\nlong x_or_y(long n, long x,\
    \ long y) \n{\n    long m;\n    long i;\n    for (i = 2L; (i <= (n / 2L)); ++i)\
    \ \n    {\n        m = n % i;\n        if (m == 0L) \n        {\n            return\
    \ y;\n        }\n    }\n    return x;\n}\n/*\nA program which returns the length\
    \ of the longest collatz \n    sequence starting from a given positive number\
    \ less than \n    or equal to n.\nunittest\n{\n    alias candidate = x_or_y;\n\
    \n    assert(candidate(7L, 34L, 12L) == 34L);\n    assert(candidate(15L, 8L, 5L)\
    \ == 5L);\n    assert(candidate(3L, 33L, 5212L) == 33L);\n    assert(candidate(1259L,\
    \ 3L, 52L) == 3L);\n    assert(candidate(7919L, -1L, 12L) == -1L);\n    assert(candidate(3609L,\
    \ 1245L, 583L) == 583L);\n    assert(candidate(91L, 56L, 129L) == 129L);\n   \
    \ assert(candidate(6L, 34L, 1234L) == 1234L);\n    assert(candidate(1L, 2L, 0L)\
    \ == 0L);\n    assert(candidate(2L, 2L, 0L) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp5ct3v0jc.d(29): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp5ct3v0jc.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nA simple program which should\
    \ return the value of x if n is \n    a prime number and should return the value\
    \ of y otherwise.\n\n    Examples:\n    >>> x_or_y(7L, 34L, 12L)\n    34L\n  \
    \  >>> x_or_y(15L, 8L, 5L)\n    5L\n    \n    \n*/\nlong x_or_y(long n, long x,\
    \ long y) \n{\n    return isPrime(n) ? x : y;\n}\nunittest\n{\n    alias candidate\
    \ = x_or_y;\n\n    assert(candidate(7L, 34L, 12L) == 34L);\n    assert(candidate(15L,\
    \ 8L, 5L) == 5L);\n    assert(candidate(3L, 33L, 5212L) == 33L);\n    assert(candidate(1259L,\
    \ 3L, 52L) == 3L);\n    assert(candidate(7919L, -1L, 12L) == -1L);\n    assert(candidate(3609L,\
    \ 1245L, 583L) == 583L);\n    assert(candidate(91L, 56L, 129L) == 129L);\n   \
    \ assert(candidate(6L, 34L, 1234L) == 1234L);\n    assert(candidate(1L, 2L, 0L)\
    \ == 0L);\n    assert(candidate(2L, 2L, 0L) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpb4jihlgo.d(17): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpb4jihlgo.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nA simple program which should\
    \ return the value of x if n is \n    a prime number and should return the value\
    \ of y otherwise.\n\n    Examples:\n    >>> x_or_y(7L, 34L, 12L)\n    34L\n  \
    \  >>> x_or_y(15L, 8L, 5L)\n    5L\n    \n    \n*/\nlong x_or_y(long n, long x,\
    \ long y) \n{\n    if(n < 2)\n        return y;\n    if(isPrime(n))\n        return\
    \ x;\n    return y;\n}\nunittest\n{\n    alias candidate = x_or_y;\n\n    assert(candidate(7L,\
    \ 34L, 12L) == 34L);\n    assert(candidate(15L, 8L, 5L) == 5L);\n    assert(candidate(3L,\
    \ 33L, 5212L) == 33L);\n    assert(candidate(1259L, 3L, 52L) == 3L);\n    assert(candidate(7919L,\
    \ -1L, 12L) == -1L);\n    assert(candidate(3609L, 1245L, 583L) == 583L);\n   \
    \ assert(candidate(91L, 56L, 129L) == 129L);\n    assert(candidate(6L, 34L, 1234L)\
    \ == 1234L);\n    assert(candidate(1L, 2L, 0L) == 0L);\n    assert(candidate(2L,\
    \ 2L, 0L) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpvi1zjraf.d(19): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpvi1zjraf.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nA simple program which should\
    \ return the value of x if n is \n    a prime number and should return the value\
    \ of y otherwise.\n\n    Examples:\n    >>> x_or_y(7L, 34L, 12L)\n    34L\n  \
    \  >>> x_or_y(15L, 8L, 5L)\n    5L\n    \n    \n*/\nlong x_or_y(long n, long x,\
    \ long y) \n{ \n  long i = 2L;\n  long result = 0L;\n  long sqrt_n = (long)sqrt((double)n);\n\
    \  while ((i <= sqrt_n))\n  {\n    if (((n % i) == 0L))\n    {\n      result =\
    \ y;\n      return result;\n    }\n    else\n    {\n      i = (i + 1L);\n    }\n\
    \  }\n  result = x;\n  return result;\n}\nunittest\n{\n    alias candidate = x_or_y;\n\
    \n    assert(candidate(7L, 34L, 12L) == 34L);\n    assert(candidate(15L, 8L, 5L)\
    \ == 5L);\n    assert(candidate(3L, 33L, 5212L) == 33L);\n    assert(candidate(1259L,\
    \ 3L, 52L) == 3L);\n    assert(candidate(7919L, -1L, 12L) == -1L);\n    assert(candidate(3609L,\
    \ 1245L, 583L) == 583L);\n    assert(candidate(91L, 56L, 129L) == 129L);\n   \
    \ assert(candidate(6L, 34L, 1234L) == 1234L);\n    assert(candidate(1L, 2L, 0L)\
    \ == 0L);\n    assert(candidate(2L, 2L, 0L) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpzw8im4_5.d(19): Error: C style cast illegal, use `cast(double)n`\\\
    n/tmp/tmpzw8im4_5.d(19): Error: C style cast illegal, use `cast(long)sqrt(cast(double)n)`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpzw8im4_5.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nA simple program which should\
    \ return the value of x if n is \n    a prime number and should return the value\
    \ of y otherwise.\n\n    Examples:\n    >>> x_or_y(7L, 34L, 12L)\n    34L\n  \
    \  >>> x_or_y(15L, 8L, 5L)\n    5L\n    \n    \n*/\nlong x_or_y(long n, long x,\
    \ long y) \n{ \n  long i = 3L;\n  while (i < sqrt(n))\n  {\n    if (n % i == 0L)\n\
    \      return y;\n    i = i + 2L;\n  }\n  return x;\n}\nunittest\n{\n    alias\
    \ candidate = x_or_y;\n\n    assert(candidate(7L, 34L, 12L) == 34L);\n    assert(candidate(15L,\
    \ 8L, 5L) == 5L);\n    assert(candidate(3L, 33L, 5212L) == 33L);\n    assert(candidate(1259L,\
    \ 3L, 52L) == 3L);\n    assert(candidate(7919L, -1L, 12L) == -1L);\n    assert(candidate(3609L,\
    \ 1245L, 583L) == 583L);\n    assert(candidate(91L, 56L, 129L) == 129L);\n   \
    \ assert(candidate(6L, 34L, 1234L) == 1234L);\n    assert(candidate(1L, 2L, 0L)\
    \ == 0L);\n    assert(candidate(2L, 2L, 0L) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp6u21wgj8.d(18): Error: `std.math.sqrt` called with argument types\
    \ `(long)` matches both:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):\
    \     `std.math.sqrt(float x)`\\nand:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):\
    \     `std.math.sqrt(real x)`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmp6u21wgj8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nA simple program which should\
    \ return the value of x if n is \n    a prime number and should return the value\
    \ of y otherwise.\n\n    Examples:\n    >>> x_or_y(7L, 34L, 12L)\n    34L\n  \
    \  >>> x_or_y(15L, 8L, 5L)\n    5L\n    \n    \n*/\nlong x_or_y(long n, long x,\
    \ long y) \n{ \n    return (n % 2 == 0) ? (x) : (y);\n}\nunittest\n{\n    alias\
    \ candidate = x_or_y;\n\n    assert(candidate(7L, 34L, 12L) == 34L);\n    assert(candidate(15L,\
    \ 8L, 5L) == 5L);\n    assert(candidate(3L, 33L, 5212L) == 33L);\n    assert(candidate(1259L,\
    \ 3L, 52L) == 3L);\n    assert(candidate(7919L, -1L, 12L) == -1L);\n    assert(candidate(3609L,\
    \ 1245L, 583L) == 583L);\n    assert(candidate(91L, 56L, 129L) == 129L);\n   \
    \ assert(candidate(6L, 34L, 1234L) == 1234L);\n    assert(candidate(1L, 2L, 0L)\
    \ == 0L);\n    assert(candidate(2L, 2L, 0L) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmp6i57pufo.d(23): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e6d]\\n??:? void tmp6i57pufo.__unittest_L19_C1()\
    \ [0x427a46]\\n??:? void tmp6i57pufo.__modtest() [0x427bf0]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb93]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa26]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbb9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430068]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb45]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9fd]\\n??:? runModuleUnitTests [0x42b969]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282bc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428243]\\n??:? _d_run_main [0x4281ae]\\n??:? main [0x427c03]\\\
    n??:? __libc_start_main [0xcb236554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\nA simple program which should\
    \ return the value of x if n is \n    a prime number and should return the value\
    \ of y otherwise.\n\n    Examples:\n    >>> x_or_y(7L, 34L, 12L)\n    34L\n  \
    \  >>> x_or_y(15L, 8L, 5L)\n    5L\n    \n    \n*/\nlong x_or_y(long n, long x,\
    \ long y) \n{ \n    if(isPrime(n)) \n        return x; \n    else \n        return\
    \ y; \n}\nunittest\n{\n    alias candidate = x_or_y;\n\n    assert(candidate(7L,\
    \ 34L, 12L) == 34L);\n    assert(candidate(15L, 8L, 5L) == 5L);\n    assert(candidate(3L,\
    \ 33L, 5212L) == 33L);\n    assert(candidate(1259L, 3L, 52L) == 3L);\n    assert(candidate(7919L,\
    \ -1L, 12L) == -1L);\n    assert(candidate(3609L, 1245L, 583L) == 583L);\n   \
    \ assert(candidate(91L, 56L, 129L) == 129L);\n    assert(candidate(6L, 34L, 1234L)\
    \ == 1234L);\n    assert(candidate(1L, 2L, 0L) == 0L);\n    assert(candidate(2L,\
    \ 2L, 0L) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjqi9py0w.d(17): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjqi9py0w.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nA simple program which should\
    \ return the value of x if n is \n    a prime number and should return the value\
    \ of y otherwise.\n\n    Examples:\n    >>> x_or_y(7L, 34L, 12L)\n    34L\n  \
    \  >>> x_or_y(15L, 8L, 5L)\n    5L\n    \n    \n*/\nlong x_or_y(long n, long x,\
    \ long y) \n{\n    if (isPrime(n))\n        return x;\n    else\n        return\
    \ y;\n}\nunittest\n{\n    alias candidate = x_or_y;\n\n    assert(candidate(7L,\
    \ 34L, 12L) == 34L);\n    assert(candidate(15L, 8L, 5L) == 5L);\n    assert(candidate(3L,\
    \ 33L, 5212L) == 33L);\n    assert(candidate(1259L, 3L, 52L) == 3L);\n    assert(candidate(7919L,\
    \ -1L, 12L) == -1L);\n    assert(candidate(3609L, 1245L, 583L) == 583L);\n   \
    \ assert(candidate(91L, 56L, 129L) == 129L);\n    assert(candidate(6L, 34L, 1234L)\
    \ == 1234L);\n    assert(candidate(1L, 2L, 0L) == 0L);\n    assert(candidate(2L,\
    \ 2L, 0L) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp80vq8d9u.d(17): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp80vq8d9u.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nA simple program which should\
    \ return the value of x if n is \n    a prime number and should return the value\
    \ of y otherwise.\n\n    Examples:\n    >>> x_or_y(7L, 34L, 12L)\n    34L\n  \
    \  >>> x_or_y(15L, 8L, 5L)\n    5L\n    \n    \n*/\nlong x_or_y(long n, long x,\
    \ long y) \n{\n    // if n is prime the return x, if n is not prime return y.\n\
    \    return 0;\n}\nunittest\n{\n    alias candidate = x_or_y;\n\n    assert(candidate(7L,\
    \ 34L, 12L) == 34L);\n    assert(candidate(15L, 8L, 5L) == 5L);\n    assert(candidate(3L,\
    \ 33L, 5212L) == 33L);\n    assert(candidate(1259L, 3L, 52L) == 3L);\n    assert(candidate(7919L,\
    \ -1L, 12L) == -1L);\n    assert(candidate(3609L, 1245L, 583L) == 583L);\n   \
    \ assert(candidate(91L, 56L, 129L) == 129L);\n    assert(candidate(6L, 34L, 1234L)\
    \ == 1234L);\n    assert(candidate(1L, 2L, 0L) == 0L);\n    assert(candidate(2L,\
    \ 2L, 0L) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpkaqm7cus.d(24): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e55]\\n??:? void tmpkaqm7cus.__unittest_L20_C1()\
    \ [0x427a2a]\\n??:? void tmpkaqm7cus.__modtest() [0x427bd4]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb7b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa0e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fba1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430050]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb2d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9e5]\\n??:? runModuleUnitTests [0x42b951]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282a4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42822b]\\n??:? _d_run_main [0x428196]\\n??:? main [0x427be7]\\\
    n??:? __libc_start_main [0xd4b32554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\nA simple program which should\
    \ return the value of x if n is \n    a prime number and should return the value\
    \ of y otherwise.\n\n    Examples:\n    >>> x_or_y(7L, 34L, 12L)\n    34L\n  \
    \  >>> x_or_y(15L, 8L, 5L)\n    5L\n    \n    \n*/\nlong x_or_y(long n, long x,\
    \ long y) \n{\n  return isPrime(n) ? x : y;\n}\nunittest\n{\n    alias candidate\
    \ = x_or_y;\n\n    assert(candidate(7L, 34L, 12L) == 34L);\n    assert(candidate(15L,\
    \ 8L, 5L) == 5L);\n    assert(candidate(3L, 33L, 5212L) == 33L);\n    assert(candidate(1259L,\
    \ 3L, 52L) == 3L);\n    assert(candidate(7919L, -1L, 12L) == -1L);\n    assert(candidate(3609L,\
    \ 1245L, 583L) == 583L);\n    assert(candidate(91L, 56L, 129L) == 129L);\n   \
    \ assert(candidate(6L, 34L, 1234L) == 1234L);\n    assert(candidate(1L, 2L, 0L)\
    \ == 0L);\n    assert(candidate(2L, 2L, 0L) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpr3lqwd06.d(17): Error: undefined identifier `isPrime`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpr3lqwd06.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nA simple program which should\
    \ return the value of x if n is \n    a prime number and should return the value\
    \ of y otherwise.\n\n    Examples:\n    >>> x_or_y(7L, 34L, 12L)\n    34L\n  \
    \  >>> x_or_y(15L, 8L, 5L)\n    5L\n    \n    \n*/\nlong x_or_y(long n, long x,\
    \ long y) \n{\n    long tmp = 0L;\n    long j = 1L;\n    long s_range = 2L;\n\
    \    if (j == 1L) {\n        tmp = s_range;\n        j = 0L;\n    }\n    for (;\
    \ tmp < n; tmp = tmp + 1L) {\n        if (n % tmp == 0L) {\n            j = 1L;\n\
    \            break;\n        }\n    }\n    return (j == 1L) ? x : y;\n}\nunittest\n\
    {\n    alias candidate = x_or_y;\n\n    assert(candidate(7L, 34L, 12L) == 34L);\n\
    \    assert(candidate(15L, 8L, 5L) == 5L);\n    assert(candidate(3L, 33L, 5212L)\
    \ == 33L);\n    assert(candidate(1259L, 3L, 52L) == 3L);\n    assert(candidate(7919L,\
    \ -1L, 12L) == -1L);\n    assert(candidate(3609L, 1245L, 583L) == 583L);\n   \
    \ assert(candidate(91L, 56L, 129L) == 129L);\n    assert(candidate(6L, 34L, 1234L)\
    \ == 1234L);\n    assert(candidate(1L, 2L, 0L) == 0L);\n    assert(candidate(2L,\
    \ 2L, 0L) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmphdz7h5z4.d(36): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427edd]\\n??:? void tmphdz7h5z4.__unittest_L32_C1()\
    \ [0x427ab2]\\n??:? void tmphdz7h5z4.__modtest() [0x427c5c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bc03]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa96]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fc29]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x4300d8]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fbb5]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa6d]\\n??:? runModuleUnitTests [0x42b9d9]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x42832c]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x4282b3]\\n??:? _d_run_main [0x42821e]\\n??:? main [0x427c6f]\\\
    n??:? __libc_start_main [0xa5401554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\nA simple program which should\
    \ return the value of x if n is \n    a prime number and should return the value\
    \ of y otherwise.\n\n    Examples:\n    >>> x_or_y(7L, 34L, 12L)\n    34L\n  \
    \  >>> x_or_y(15L, 8L, 5L)\n    5L\n    \n    \n*/\nlong x_or_y(long n, long x,\
    \ long y) \n{\n    // ...\n    // ...\n    // ...\n    return n;\n}\nunittest\n\
    {\n    alias candidate = x_or_y;\n\n    assert(candidate(7L, 34L, 12L) == 34L);\n\
    \    assert(candidate(15L, 8L, 5L) == 5L);\n    assert(candidate(3L, 33L, 5212L)\
    \ == 33L);\n    assert(candidate(1259L, 3L, 52L) == 3L);\n    assert(candidate(7919L,\
    \ -1L, 12L) == -1L);\n    assert(candidate(3609L, 1245L, 583L) == 583L);\n   \
    \ assert(candidate(91L, 56L, 129L) == 129L);\n    assert(candidate(6L, 34L, 1234L)\
    \ == 1234L);\n    assert(candidate(1L, 2L, 0L) == 0L);\n    assert(candidate(2L,\
    \ 2L, 0L) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmposnil8sk.d(26): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e55]\\n??:? void tmposnil8sk.__unittest_L22_C1()\
    \ [0x427a2e]\\n??:? void tmposnil8sk.__modtest() [0x427bd8]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb7b]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa0e]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fba1]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430050]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb2d]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9e5]\\n??:? runModuleUnitTests [0x42b951]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282a4]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42822b]\\n??:? _d_run_main [0x428196]\\n??:? main [0x427beb]\\\
    n??:? __libc_start_main [0xf34ce554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\nA simple program which should\
    \ return the value of x if n is \n    a prime number and should return the value\
    \ of y otherwise.\n\n    Examples:\n    >>> x_or_y(7L, 34L, 12L)\n    34L\n  \
    \  >>> x_or_y(15L, 8L, 5L)\n    5L\n    \n    \n*/\nlong x_or_y(long n, long x,\
    \ long y) \n{ \n    bool is_prime = true;\n    foreach (i; 2 .. cast(long) sqrt(n)\
    \ + 1) \n    {\n        if (n % i == 0)\n        {\n            is_prime = false;\n\
    \            break;\n        }\n    }\n    return is_prime ? x : y;\n}\nunittest\n\
    {\n    alias candidate = x_or_y;\n\n    assert(candidate(7L, 34L, 12L) == 34L);\n\
    \    assert(candidate(15L, 8L, 5L) == 5L);\n    assert(candidate(3L, 33L, 5212L)\
    \ == 33L);\n    assert(candidate(1259L, 3L, 52L) == 3L);\n    assert(candidate(7919L,\
    \ -1L, 12L) == -1L);\n    assert(candidate(3609L, 1245L, 583L) == 583L);\n   \
    \ assert(candidate(91L, 56L, 129L) == 129L);\n    assert(candidate(6L, 34L, 1234L)\
    \ == 1234L);\n    assert(candidate(1L, 2L, 0L) == 0L);\n    assert(candidate(2L,\
    \ 2L, 0L) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpudrltpqd.d(18): Error: `std.math.sqrt` called with argument types\
    \ `(long)` matches both:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):\
    \     `std.math.sqrt(float x)`\\nand:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):\
    \     `std.math.sqrt(real x)`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmpudrltpqd.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nA simple program which should\
    \ return the value of x if n is \n    a prime number and should return the value\
    \ of y otherwise.\n\n    Examples:\n    >>> x_or_y(7L, 34L, 12L)\n    34L\n  \
    \  >>> x_or_y(15L, 8L, 5L)\n    5L\n    \n    \n*/\nlong x_or_y(long n, long x,\
    \ long y) \n    if (n > 1L) \n    {\n        foreach (i; 2L .. n) \n        {\n\
    \            if (n % i == 0L) \n            {\n                return y;\n   \
    \         }\n        }\n        return x;\n    } \n    else \n    {\n        return\
    \ y;\n    }\n    \nunittest\n{\n    alias candidate = x_or_y;\n\n    assert(candidate(7L,\
    \ 34L, 12L) == 34L);\n    assert(candidate(15L, 8L, 5L) == 5L);\n    assert(candidate(3L,\
    \ 33L, 5212L) == 33L);\n    assert(candidate(1259L, 3L, 52L) == 3L);\n    assert(candidate(7919L,\
    \ -1L, 12L) == -1L);\n    assert(candidate(3609L, 1245L, 583L) == 583L);\n   \
    \ assert(candidate(91L, 56L, 129L) == 129L);\n    assert(candidate(6L, 34L, 1234L)\
    \ == 1234L);\n    assert(candidate(1L, 2L, 0L) == 0L);\n    assert(candidate(2L,\
    \ 2L, 0L) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpjnrqmkyi.d(16): Error: cannot use function constraints for non-template\
    \ functions. Use `static if` instead\\n/tmp/tmpjnrqmkyi.d(16): Error: declaration\
    \ expected, not `if`\\n/tmp/tmpjnrqmkyi.d(18): Error: declaration expected, not\
    \ `2L`\\n/tmp/tmpjnrqmkyi.d(23): Error: unrecognized declaration\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjnrqmkyi.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nA simple program which should\
    \ return the value of x if n is \n    a prime number and should return the value\
    \ of y otherwise.\n\n    Examples:\n    >>> x_or_y(7L, 34L, 12L)\n    34L\n  \
    \  >>> x_or_y(15L, 8L, 5L)\n    5L\n    \n    \n*/\nlong x_or_y(long n, long x,\
    \ long y) \n{\n   if (n % 2 == 0 || n % 3 == 0)\n      return y;\n   else\n  \
    \    return x;\n}\nunittest\n{\n    alias candidate = x_or_y;\n\n    assert(candidate(7L,\
    \ 34L, 12L) == 34L);\n    assert(candidate(15L, 8L, 5L) == 5L);\n    assert(candidate(3L,\
    \ 33L, 5212L) == 33L);\n    assert(candidate(1259L, 3L, 52L) == 3L);\n    assert(candidate(7919L,\
    \ -1L, 12L) == -1L);\n    assert(candidate(3609L, 1245L, 583L) == 583L);\n   \
    \ assert(candidate(91L, 56L, 129L) == 129L);\n    assert(candidate(6L, 34L, 1234L)\
    \ == 1234L);\n    assert(candidate(1L, 2L, 0L) == 0L);\n    assert(candidate(2L,\
    \ 2L, 0L) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpdalco644.d(28): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427e8d]\\n??:? void tmpdalco644.__unittest_L22_C1()\
    \ [0x427ac0]\\n??:? void tmpdalco644.__modtest() [0x427c0c]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bbb3]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa46]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fbd9]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430088]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb65]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42aa1d]\\n??:? runModuleUnitTests [0x42b989]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282dc]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x428263]\\n??:? _d_run_main [0x4281ce]\\n??:? main [0x427c1f]\\\
    n??:? __libc_start_main [0x5bb86554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception
- program: "import std.math;\nimport std.typecons;\n/*\nA simple program which should\
    \ return the value of x if n is \n    a prime number and should return the value\
    \ of y otherwise.\n\n    Examples:\n    >>> x_or_y(7L, 34L, 12L)\n    34L\n  \
    \  >>> x_or_y(15L, 8L, 5L)\n    5L\n    \n    \n*/\nlong x_or_y(long n, long x,\
    \ long y) \n{\n    long[] prime = { 2L, 3L, 5L, 7L, 11L, 13L, 17L, 19L, 23L, 29L,\
    \ 31L, 37L, 41L, 43L, 47L, 53L, 59L, 61L, 67L, 71L, 73L, 79L, 83L, 89L, 97L, 101L,\
    \ 103L, 107L, 109L, 113L, 127L, 131L, 137L, 139L, 149L, 151L, 157L, 163L, 167L,\
    \ 173L, 179L, 181L, 191L, 193L, 197L, 199L, 211L, 223L, 227L, 229L, 233L, 239L,\
    \ 241L, 251L, 257L, 263L, 269L, 271L, 277L, 281L, 283L, 293L, 307L, 311L, 313L,\
    \ 317L, 331L, 337L, 347L, 349L, 353L, 359L, 367L, 373L, 379L, 383L, 389L, 397L,\
    \ 401L, 409L, 419L, 421L, 431L, 433L, 439L, 443L, 449L, 457L, 461L, 463L, 467L,\
    \ 479L, 487L, 491L, 499L, 503L, 509L, 521L, 523L, 541L, 547L, 557L, 563L, 569L,\
    \ 571L, 577L, 587L, 593L, 599L, 601L, 607L, 613L, 617L, 619L, 631L, 641L, 643L,\
    \ 647L, 653L, 659L, 661L, 673L, 677L, 683L, 691L, 701L, 709L, 719L, 727L, 733L,\
    \ 739L, 743L, 751L, 757L, 761L, 769L, 773L, 787L, 797L, 809L, 811L, 821L, 823L,\
    \ 827L, 829L, 839L, 853L, 857L\nunittest\n{\n    alias candidate = x_or_y;\n\n\
    \    assert(candidate(7L, 34L, 12L) == 34L);\n    assert(candidate(15L, 8L, 5L)\
    \ == 5L);\n    assert(candidate(3L, 33L, 5212L) == 33L);\n    assert(candidate(1259L,\
    \ 3L, 52L) == 3L);\n    assert(candidate(7919L, -1L, 12L) == -1L);\n    assert(candidate(3609L,\
    \ 1245L, 583L) == 583L);\n    assert(candidate(91L, 56L, 129L) == 129L);\n   \
    \ assert(candidate(6L, 34L, 1234L) == 1234L);\n    assert(candidate(1L, 2L, 0L)\
    \ == 0L);\n    assert(candidate(2L, 2L, 0L) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpr6hfteo6.d(18): Error: comma expected separating field initializers\\\
    n/tmp/tmpr6hfteo6.d(18): Error: expression expected, not `unittest`\\n/tmp/tmpr6hfteo6.d(19):\
    \ Error: comma expected separating field initializers\\n/tmp/tmpr6hfteo6.d(33):\
    \ Error: comma expected separating field initializers\\n/tmp/tmpr6hfteo6.d(33):\
    \ Error: found `main` when expecting `.` following void\\n/tmp/tmpr6hfteo6.d(33):\
    \ Error: found `(` when expecting identifier following `void`.\\n/tmp/tmpr6hfteo6.d(33):\
    \ Error: comma expected separating field initializers\\n/tmp/tmpr6hfteo6.d(33):\
    \ Error: expression expected, not `)`\\n/tmp/tmpr6hfteo6.d(33): Error: comma expected\
    \ separating field initializers\\n/tmp/tmpr6hfteo6.d(33): Error: found end of\
    \ file instead of initializer\\n/tmp/tmpr6hfteo6.d(33): Error: semicolon expected,\
    \ not `End of File`\\n/tmp/tmpr6hfteo6.d(33): Error: found `End of File` when\
    \ expecting `}` following compound statement\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpr6hfteo6.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nA simple program which should\
    \ return the value of x if n is \n    a prime number and should return the value\
    \ of y otherwise.\n\n    Examples:\n    >>> x_or_y(7L, 34L, 12L)\n    34L\n  \
    \  >>> x_or_y(15L, 8L, 5L)\n    5L\n    \n    \n*/\nlong x_or_y(long n, long x,\
    \ long y) \n{ \n    long i;\n    foreach (i; 2..n) \n    {\n        if (n % i\
    \ == 0) \n        {\n            return y;\n        }\n    } \n    return x;\n\
    }\nunittest\n{\n    alias candidate = x_or_y;\n\n    assert(candidate(7L, 34L,\
    \ 12L) == 34L);\n    assert(candidate(15L, 8L, 5L) == 5L);\n    assert(candidate(3L,\
    \ 33L, 5212L) == 33L);\n    assert(candidate(1259L, 3L, 52L) == 3L);\n    assert(candidate(7919L,\
    \ -1L, 12L) == -1L);\n    assert(candidate(3609L, 1245L, 583L) == 583L);\n   \
    \ assert(candidate(91L, 56L, 129L) == 129L);\n    assert(candidate(6L, 34L, 1234L)\
    \ == 1234L);\n    assert(candidate(1L, 2L, 0L) == 0L);\n    assert(candidate(2L,\
    \ 2L, 0L) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpkmo1me58.d(18): Error: variable `i` is shadowing variable `tmpkmo1me58.x_or_y.i`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpkmo1me58.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nA simple program which should\
    \ return the value of x if n is \n    a prime number and should return the value\
    \ of y otherwise.\n\n    Examples:\n    >>> x_or_y(7L, 34L, 12L)\n    34L\n  \
    \  >>> x_or_y(15L, 8L, 5L)\n    5L\n    \n    \n*/\nlong x_or_y(long n, long x,\
    \ long y) \n{\n    if (n < 2L)\n    {\n        return y;\n    }\n    long max\
    \ = (long)sqrt(n);\n    foreach (i; 2L .. max)\n    {\n        if (n % i == 0L)\n\
    \        {\n            return y;\n        }\n    }\n    return x;\n}\n/*\nunittest\n\
    {\n    alias candidate = x_or_y;\n\n    assert(candidate(7L, 34L, 12L) == 34L);\n\
    \    assert(candidate(15L, 8L, 5L) == 5L);\n    assert(candidate(3L, 33L, 5212L)\
    \ == 33L);\n    assert(candidate(1259L, 3L, 52L) == 3L);\n    assert(candidate(7919L,\
    \ -1L, 12L) == -1L);\n    assert(candidate(3609L, 1245L, 583L) == 583L);\n   \
    \ assert(candidate(91L, 56L, 129L) == 129L);\n    assert(candidate(6L, 34L, 1234L)\
    \ == 1234L);\n    assert(candidate(1L, 2L, 0L) == 0L);\n    assert(candidate(2L,\
    \ 2L, 0L) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpj4w68kn1.d(21): Error: C style cast illegal, use `cast(long)sqrt(n)`\\\
    n/tmp/tmpj4w68kn1.d(31): Error: unterminated /* */ comment\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpj4w68kn1.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nA simple program which should\
    \ return the value of x if n is \n    a prime number and should return the value\
    \ of y otherwise.\n\n    Examples:\n    >>> x_or_y(7L, 34L, 12L)\n    34L\n  \
    \  >>> x_or_y(15L, 8L, 5L)\n    5L\n    \n    \n*/\nlong x_or_y(long n, long x,\
    \ long y) \n{\n    // your code\n    if (n < 2) return y;\n    for (long i = 2;\
    \ i < sqrt(n) + 1; i++) {\n        if (n % i == 0) {\n            return y;\n\
    \        }\n    }\n    return x;\n}\nunittest\n{\n    alias candidate = x_or_y;\n\
    \n    assert(candidate(7L, 34L, 12L) == 34L);\n    assert(candidate(15L, 8L, 5L)\
    \ == 5L);\n    assert(candidate(3L, 33L, 5212L) == 33L);\n    assert(candidate(1259L,\
    \ 3L, 52L) == 3L);\n    assert(candidate(7919L, -1L, 12L) == -1L);\n    assert(candidate(3609L,\
    \ 1245L, 583L) == 583L);\n    assert(candidate(91L, 56L, 129L) == 129L);\n   \
    \ assert(candidate(6L, 34L, 1234L) == 1234L);\n    assert(candidate(1L, 2L, 0L)\
    \ == 0L);\n    assert(candidate(2L, 2L, 0L) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3tgfach3.d(19): Error: `std.math.sqrt` called with argument types\
    \ `(long)` matches both:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):\
    \     `std.math.sqrt(float x)`\\nand:\\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):\
    \     `std.math.sqrt(real x)`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\"\
    , \"/tmp/tmp3tgfach3.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\nimport std.typecons;\n/*\nA simple program which should\
    \ return the value of x if n is \n    a prime number and should return the value\
    \ of y otherwise.\n\n    Examples:\n    >>> x_or_y(7L, 34L, 12L)\n    34L\n  \
    \  >>> x_or_y(15L, 8L, 5L)\n    5L\n    \n    \n*/\nlong x_or_y(long n, long x,\
    \ long y) \n{\n    bool is_prime(long n) {\n        foreach (i; 2 .. cast(long)sqrt(n))\
    \ {\n            if (n % i == 0) {\n                return false;\n          \
    \  }\n        }\n        return true;\n    }\n    return is_prime(n) ? x : y;\n\
    }\n/*\nA program which should take a list of integers and return a list \n   \
    \ of those integers which are primes.\nunittest\n{\n    alias candidate = x_or_y;\n\
    \n    assert(candidate(7L, 34L, 12L) == 34L);\n    assert(candidate(15L, 8L, 5L)\
    \ == 5L);\n    assert(candidate(3L, 33L, 5212L) == 33L);\n    assert(candidate(1259L,\
    \ 3L, 52L) == 3L);\n    assert(candidate(7919L, -1L, 12L) == -1L);\n    assert(candidate(3609L,\
    \ 1245L, 583L) == 583L);\n    assert(candidate(91L, 56L, 129L) == 129L);\n   \
    \ assert(candidate(6L, 34L, 1234L) == 1234L);\n    assert(candidate(1L, 2L, 0L)\
    \ == 0L);\n    assert(candidate(2L, 2L, 0L) == 2L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp86a1l4sk.d(27): Error: unterminated /* */ comment\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp86a1l4sk.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError

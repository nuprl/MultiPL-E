name: HumanEval_91_is_bored
language: d
results:
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long n = 0;\n    foreach(string word; split(S,\
    \ \".\"))\n    {\n        string first_word = split(word, \" \")[0];\n       \
    \ if(first_word == \"I\")\n            n++;\n    }\n    return n;\n}\nunittest\n\
    {\n    alias candidate = is_bored;\n\n    assert(candidate(\"Hello world\") ==\
    \ 0L);\n    assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"\
    I love It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8tj40y67.d(18): Error: undefined identifier `split`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8tj40y67.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] strList = S.split('.');\n\
    \    foreach(str; strList) {\n        string[] wordList = str.split(' ');\n  \
    \      if(wordList[0] == \"I\") {\n            boredoms++;\n        }\n    }\n\
    \    return boredoms;\n}\nunittest\n{\n    alias candidate = is_bored;\n\n   \
    \ assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"Is the sky\
    \ blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n    assert(candidate(\"\
    bIt\") == 0L);\n    assert(candidate(\"I feel good today. I will be productive.\
    \ will kill It\") == 2L);\n    assert(candidate(\"You and I are going for a walk\"\
    ) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpk65y7k2i.d(18): Error: no property `split` for type `string`\\\
    n/tmp/tmpk65y7k2i.d(20): Error: no property `split` for type `string`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk65y7k2i.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    long start = 0;\n   \
    \ long last = 0;\n    for (;;)\n    {\n        last = findFirstNotOf(S, \" \\\
    t\\n.!?\", start);\n        if (last == -1) \n            break;\n        last\
    \ = findFirstOf(S, \" \\t\\n.!?\", last);\n        if (last == -1) \n        \
    \    break;\n        string temp = S[last-1..last];\n        if (temp == \"I\"\
    )\n            boredoms++;\n        start = last;\n    }\n    return boredoms;\n\
    }\nunittest\n{\n    alias candidate = is_bored;\n\n    assert(candidate(\"Hello\
    \ world\") == 0L);\n    assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"\
    I love It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpu46rxfkz.d(22): Error: undefined identifier `findFirstNotOf`\\\
    n/tmp/tmpu46rxfkz.d(25): Error: undefined identifier `findFirstOf`\\nFailed: [\"\
    dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu46rxfkz.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long n = 0;\n    foreach(it; (split(S, \".\"\
    ) ~= \" \").byChunk(2))\n    {\n        string s = it[0];\n        if (s[0] ==\
    \ 'I')\n            n++;\n    }\n    return n;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpwhvz9ugf.d(18): Error: undefined identifier `split`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwhvz9ugf.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    S = \" \" + S;\n    long num = 0;\n    long slen\
    \ = S.length;\n    long i = 0;\n    while (i < slen)\n    {\n        i = S.find(\"\
    I\", i);\n        if (i == -1)\n            break;\n        if (i > 0 && (isalpha(S[i-1])\
    \ || S[i-1] == ' '))\n        {\n            i++;\n            continue;\n   \
    \     }\n        num++;\n        i++;\n    }\n    return num;\n}\nunittest\n{\n\
    \    alias candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n\
    \    assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I\
    \ love It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp8mo24ulv.d(17): Error: invalid array operation `\" \" + S` (possible\
    \ missing [])\\n/tmp/tmp8mo24ulv.d(23): Error: no property `find` for type `string`\\\
    n/tmp/tmp8mo24ulv.d(26): Error: undefined identifier `isalpha`\\nFailed: [\"dmd\"\
    , \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8mo24ulv.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(strip(S), \".!?\");\n    for (string sentence : sentences)\n    {\n  \
    \      if (startsWith(strip(sentence), \"I\"))\n        {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate =\
    \ is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpz3gt5s2z.d(19): Error: found `sentence` when expecting `;` following\
    \ statement\\n/tmp/tmpz3gt5s2z.d(19): Error: expression expected, not `:`\\n/tmp/tmpz3gt5s2z.d(19):\
    \ Error: found `sentences` when expecting `;` following `for` condition\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpz3gt5s2z.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".!?\");\n    foreach(sentence; sentences)\n    {\n        if(sentence.front\
    \ == 'I')\n            boredoms++;\n    }\n    return boredoms;\n}\nunittest\n\
    {\n    alias candidate = is_bored;\n\n    assert(candidate(\"Hello world\") ==\
    \ 0L);\n    assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"\
    I love It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpug7t6fq8.d(18): Error: undefined identifier `split`\\n/tmp/tmpug7t6fq8.d(21):\
    \ Error: no property `front` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmpug7t6fq8.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string [] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences) {\n        string [] words\
    \ = split(sentence, \" \");\n        foreach(string word; words) {\n         \
    \   if(word == \"I\") {\n                boredoms++;\n                break;\n\
    \            }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp3oqomzov.d(18): Error: undefined identifier `split`\\n/tmp/tmp3oqomzov.d(20):\
    \ Error: undefined identifier `split`\\nFailed: [\"dmd\", \"-unittest\", \"-v\"\
    , \"-o-\", \"/tmp/tmp3oqomzov.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    long i = 0;\n    string\
    \ tempString = \"\";\n    while(i < S.length)\n    {\n        while(S[i] != '.'\
    \ && S[i] != '?' && S[i] != '!')\n        {\n            tempString += S[i];\n\
    \            i++;\n        }\n        if(tempString.length >= 2 && tempString[0..1]\
    \ == \"I \")\n        {\n            boredoms++;\n        }\n        tempString\
    \ = \"\";\n        i++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpxbkqk4v8.d(24): Error: slice `tempString` is not mutable\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxbkqk4v8.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    if (S.countChar('.') == 0)\n        return 0;\n\
    \    string[] sentences = S.split(\"[.|!|?]\");\n    int count = 0;\n    foreach\
    \ (string sent; sentences)\n    {\n        if (sent.countChar(' ') == 0)\n   \
    \         continue;\n        else if (sent.split(\" \")[0] == \"I\")\n       \
    \     count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmppwaadd9g.d(17): Error: no property `countChar` for type `string`\\\
    n/tmp/tmppwaadd9g.d(19): Error: no property `split` for type `string`\\n/tmp/tmppwaadd9g.d(23):\
    \ Error: no property `countChar` for type `string`\\n/tmp/tmppwaadd9g.d(25): Error:\
    \ no property `split` for type `string`\\nFailed: [\"dmd\", \"-unittest\", \"\
    -v\", \"-o-\", \"/tmp/tmppwaadd9g.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    string[] arr = split(S, \".?!\");\n    long count\
    \ = 0;\n    foreach(item; arr) {\n        count += item.startsWith(\"I\");\n \
    \   }\n    return count;\n}\nunittest\n{\n    alias candidate = is_bored;\n\n\
    \    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"Is the\
    \ sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n    assert(candidate(\"\
    bIt\") == 0L);\n    assert(candidate(\"I feel good today. I will be productive.\
    \ will kill It\") == 2L);\n    assert(candidate(\"You and I are going for a walk\"\
    ) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmphops5mwc.d(17): Error: undefined identifier `split`\\n/tmp/tmphops5mwc.d(20):\
    \ Error: no property `startsWith` for type `string`\\nFailed: [\"dmd\", \"-unittest\"\
    , \"-v\", \"-o-\", \"/tmp/tmphops5mwc.d\", \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n\tlong count = 0;\n\t\n\tS = S.split('.').concat('.');\n\
    \tS = S.split('?').concat('?');\n\tS = S.split('!').concat('!');\n\t\n\tforeach(string\
    \ s; S)\n\t{\n\t\tif(s[0..1] == \"I\") count++;\n\t}\n\t\n\treturn count;\n}\n\
    unittest\n{\n    alias candidate = is_bored;\n\n    assert(candidate(\"Hello world\"\
    ) == 0L);\n    assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"\
    I love It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpshc7ypzs.d(19): Error: no property `split` for type `string`\\\
    n/tmp/tmpshc7ypzs.d(20): Error: no property `split` for type `string`\\n/tmp/tmpshc7ypzs.d(21):\
    \ Error: no property `split` for type `string`\\n/tmp/tmpshc7ypzs.d(23): Error:\
    \ cannot implicitly convert expression `__r16[__key17]` of type `immutable(char)`\
    \ to `string`\\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpshc7ypzs.d\"\
    , \"-I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    string[] words = S.split(' ');\n    long boredoms\
    \ = 0;\n    foreach(string word; words)\n    {\n        if(word.length && word[0]\
    \ == 'I')\n            boredoms++;\n    }\n    return boredoms;\n}\nunittest\n\
    {\n    alias candidate = is_bored;\n\n    assert(candidate(\"Hello world\") ==\
    \ 0L);\n    assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"\
    I love It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplldztfof.d(17): Error: no property `split` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplldztfof.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    // TODO: Write your code here.\n    long count\
    \ = 0;\n    foreach(line; split(S, \".\"))\n    {\n        if(strip(line, \"\\\
    n\\t ?!\").length > 0 && strip(line, \"\\n\\t ?!\")[0..1] == \"I \")\n       \
    \     count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpdp7ozyax.d(19): Error: undefined identifier `split`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpdp7ozyax.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long total = 0;\n    foreach(c; S)\n    {\n \
    \       if(c == '.' || c == '?' || c == '!')\n        {\n            S = \"\"\
    ;\n            break;\n        }\n        if(c == 'I')\n        {\n          \
    \  total++;\n            S = \"\";\n            break;\n        }\n    }\n   \
    \ if(S != \"\")\n    {\n        total += is_bored(S);\n    }\n    return total;\n\
    }\nunittest\n{\n    alias candidate = is_bored;\n\n    assert(candidate(\"Hello\
    \ world\") == 0L);\n    assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"\
    I love It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    return count(split(S, \".!?\"));\n}\nunittest\n\
    {\n    alias candidate = is_bored;\n\n    assert(candidate(\"Hello world\") ==\
    \ 0L);\n    assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"\
    I love It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpsu0rj947.d(17): Error: undefined identifier `count`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpsu0rj947.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    long N = length(S);\n\
    \    for (long i = 0; i < N; i++) {\n        if (S[i] == 'I') {\n            if\
    \ (i == 0 || S[i-1] == '.' || S[i-1] == '?' || S[i-1] == '!')\n              \
    \  boredoms++;\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmplzqiazcv.d(18): Error: undefined identifier `length`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplzqiazcv.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    auto sentences = S.split(\"\
    .\");\n    sentences ~= \"\";\n    string longest_sentence = \"\";\n    foreach(sentence;\
    \ sentences)\n    {\n        auto words = sentence.split(\" \");\n        if(words[0]\
    \ == \"I\")\n        {\n            if(sentence.length > longest_sentence.length)\n\
    \            {\n                longest_sentence = sentence;\n            }\n\
    \            boredoms++;\n        }\n    }\n    return longest_sentence.length;\n\
    }\nunittest\n{\n    alias candidate = is_bored;\n\n    assert(candidate(\"Hello\
    \ world\") == 0L);\n    assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"\
    I love It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmp9c_1dvmz.d(18): Error: no property `split` for type `string`\\\
    nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9c_1dvmz.d\", \"\
    -I/tmp\"]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long result = 0;\n    auto words = split(S, \"\
    \ .!?\", true);\n    foreach(word; words)\n    {\n        if(word == \"I\") result++;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = is_bored;\n\n\
    \    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"Is the\
    \ sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n    assert(candidate(\"\
    bIt\") == 0L);\n    assert(candidate(\"I feel good today. I will be productive.\
    \ will kill It\") == 2L);\n    assert(candidate(\"You and I are going for a walk\"\
    ) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'/tmp/tmpk7s8ssk6.d(18): Error: undefined identifier `split`\\nFailed:\
    \ [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk7s8ssk6.d\", \"-I/tmp\"\
    ]\\n'"
  exit_code: 1
  status: SyntaxError
- program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    int bored = 0;\n    for (int i = 0; i < S.length;\
    \ i++)\n    {\n        if (S[i] == 'I')\n        {\n            bored++;\n   \
    \     }\n    }\n    return bored;\n}\nunittest\n{\n    alias candidate = is_bored;\n\
    \n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"Is the\
    \ sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n    assert(candidate(\"\
    bIt\") == 0L);\n    assert(candidate(\"I feel good today. I will be productive.\
    \ will kill It\") == 2L);\n    assert(candidate(\"You and I are going for a walk\"\
    ) == 0L);\n}\nvoid main(){}"
  stdout: b''
  stderr: "b'core.exception.AssertError@/tmp/tmpwt6epayr.d(32): unittest failure\\\
    n----------------\\n??:? _d_unittestp [0x427de5]\\n??:? void tmpwt6epayr.__unittest_L27_C1()\
    \ [0x427aab]\\n??:? void tmpwt6epayr.__modtest() [0x427b68]\\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)\
    \ [0x42bb7f]\\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))\
    \ [0x42aa12]\\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref\
    \ rt.sections_elf_shared.DSO) [0x42fba5]\\n??:? int rt.sections_elf_shared.DSO.opApply(scope\
    \ int delegate(ref rt.sections_elf_shared.DSO)) [0x430054]\\n??:? int rt.minfo.moduleinfos_apply(scope\
    \ int delegate(immutable(object.ModuleInfo*))) [0x42fb31]\\n??:? int object.ModuleInfo.opApply(scope\
    \ int delegate(object.ModuleInfo*)) [0x42a9e9]\\n??:? runModuleUnitTests [0x42b955]\\\
    n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()\
    \ [0x4282a8]\\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope\
    \ void delegate()) [0x42822f]\\n??:? _d_run_main [0x42819a]\\n??:? main [0x427b7b]\\\
    n??:? __libc_start_main [0xcd9cd554]\\n1/1 unittests FAILED\\n'"
  exit_code: 1
  status: Exception

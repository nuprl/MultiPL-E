language: d
name: HumanEval_100_make_a_pile
results:
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] res = new\
    \ long[n];\n    res[0] = n;\n    for (long i = 1; i < n; i++)\n    {\n       \
    \ if (res[i-1] % 2 == 0)\n            res[i] = res[i-1] + 2;\n        else\n \
    \           res[i] = res[i-1] + 1;\n    }\n    return res;\n}\nunittest\n{\n \
    \   alias candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n\
    \    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) ==\
    \ [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L,\
    \ 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp76df3j4i.d(34): unittest failure\n----------------\n??:?
    _d_unittestp [0x4284fd]\n??:? void tmp76df3j4i.__unittest_L30_C1() [0x427fc2]\n??:?
    void tmp76df3j4i.__modtest() [0x42827c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c5b7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b44a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306d5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430b84]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430661]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b421]\n??:? runModuleUnitTests [0x42c38d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4289c0]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428947]\n??:? _d_run_main [0x4288b2]\n??:? main [0x42828f]\n??:?
    __libc_start_main [0xf357a554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] ans = new\
    \ long[n];\n    long count = n;\n    for (long i = 0; i < n; i++)\n    {\n   \
    \     ans[i] = count;\n        if (count % 2 == 0)\n            count++;\n   \
    \     else\n            count += 2;\n    }\n    return ans;\n}\nunittest\n{\n\
    \    alias candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n\
    \    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) ==\
    \ [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L,\
    \ 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpumbesqsb.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x42844d]\n??:? void tmpumbesqsb.__unittest_L31_C1() [0x427f8b]\n??:?
    void tmpumbesqsb.__modtest() [0x4281cc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c507]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b39a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430625]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430ad4]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x4305b1]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b371]\n??:? runModuleUnitTests [0x42c2dd]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428910]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428897]\n??:? _d_run_main [0x428802]\n??:? main [0x4281df]\n??:?
    __libc_start_main [0xfebbc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    return iota(n).map!(i\
    \ => n + i + i + 1L)().array();\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqfbyesn3.d(19): Error: undefined identifier `iota`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqfbyesn3.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] arr;\n \
    \   arr ~= n;\n    long level = n;\n    while(n--) {\n        if(level % 2 ==\
    \ 0) {\n            arr ~= arr[$-1] + 2;\n        } else {\n            arr ~=\
    \ arr[$-1] + 1;\n        }\n        level--;\n    }\n    return arr;\n}\n/*\n\
    \    This function is intended to help to solve the following problem:\n    Given\
    \ a positive integer n, you have to make a pile of n levels of stones.\n    The\
    \ first level has n stones.\n    The number of stones in the next level is:\n\
    \        - the next odd number if n is odd.\n        - the next even number if\
    \ n is even.\n    Return the number of stones in each level in an array, where\
    \ element at index\n    i represents the number of stones in the level (i+1).\n\
    unittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L) ==\
    \ [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpuxrr9b00.d(32): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpuxrr9b00.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] res = new\
    \ long[n];\n    res[0] = n;\n    for (int i = 1; i < n; i++)\n    {\n        res[i]\
    \ = res[i-1] + (res[i-1] % 2 == 0 ? 2 : 1);\n    }\n    return res;\n}\nunittest\n\
    {\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L,\
    \ 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpm26cc4im.d(31): unittest failure\n----------------\n??:?
    _d_unittestp [0x4284ad]\n??:? void tmpm26cc4im.__unittest_L27_C1() [0x427f76]\n??:?
    void tmpm26cc4im.__modtest() [0x428230]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c567]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3fa]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430685]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430b34]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430611]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b3d1]\n??:? runModuleUnitTests [0x42c33d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428970]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4288f7]\n??:? _d_run_main [0x428862]\n??:? main [0x428243]\n??:?
    __libc_start_main [0xb5df6554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    immutable m = n;\n\
    \    long[] result = new long[m];\n    result[0] = n;\n    for (int i = 1; i <\
    \ m; i++)\n    {\n        if (modulo(n, 2) == 0)\n        {\n            result[i]\
    \ = result[i-1] + 2;\n        }\n        else\n        {\n            result[i]\
    \ = result[i-1] + 1;\n        }\n    }\n    return result;\n}\nunittest\n{\n \
    \   alias candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n\
    \    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) ==\
    \ [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L,\
    \ 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6aux4jsk.d(24): Error: undefined identifier `modulo`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6aux4jsk.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] result =\
    \ new long[n];\n    result[0] = n;\n    for (long i = 1; i < n; i++) {\n     \
    \   if (n % 2 == 0) {\n            result[i] = n + 2;\n        } else {\n    \
    \        result[i] = n + 1;\n        }\n        n = result[i];\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.RangeError@/tmp/tmpbqs5fn6i.d(23): Range violation\n----------------\n??:?
    _d_arrayboundsp [0x42856e]\n??:? long[] tmpbqs5fn6i.make_a_pile(long) [0x427e7d]\n??:?
    void tmpbqs5fn6i.__unittest_L31_C1() [0x427f21]\n??:? void tmpbqs5fn6i.__modtest()
    [0x428240]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c577]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b40a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430695]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430b44]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430621]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b3e1]\n??:? runModuleUnitTests [0x42c34d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428980]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428907]\n??:? _d_run_main [0x428872]\n??:? main [0x428253]\n??:?
    __libc_start_main [0x92eb7554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    /*\n        The\
    \ result array is initialized to be n elements long.\n        The first element\
    \ is n.\n        There are n elements, so n levels.\n    */\n    long[] result\
    \ = new long[n];\n    /*\n        The result array is populated in a loop.\n \
    \       The loop counter \"i\" starts from zero.\n        The number of iterations\
    \ is n.\n        The type of \"i\" is long.\n    */\n    for (long i = 0L; i <\
    \ n; i = i + 1L)\n    {\n        /*\n            If the value of i is odd, then\
    \ the previous value\n            of i is even.\n            1L is added to the\
    \ previous value of i\n            and stored in the result array at the index\
    \ i.\n        */\n        if (i % 2L == 1L)\n        {\n            result[i]\
    \ = i + 1L;\n        }\n        /*\n            If the value of i is even, then\
    \ the previous value\n            of i is odd.\n            2L is added to the\
    \ previous value of i\n            and stored in the result array at the index\
    \ i.\n        */\n        else\n        {\n            result[i] = i + 2L;\n \
    \       }\n    }\n    /*\n        The array is returned.\n    */\n    return result;\n\
    }\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpbk47eos2.d(63): unittest failure\n----------------\n??:?
    _d_unittestp [0x42847d]\n??:? void tmpbk47eos2.__unittest_L59_C1() [0x427f42]\n??:?
    void tmpbk47eos2.__modtest() [0x4281fc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c537]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430655]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430b04]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x4305e1]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b3a1]\n??:? runModuleUnitTests [0x42c30d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428940]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4288c7]\n??:? _d_run_main [0x428832]\n??:? main [0x42820f]\n??:?
    __libc_start_main [0x81f7b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    auto size = (int)log2(n)\
    \ + 1;\n    auto result = new long[size];\n    result[0] = n;\n    auto current\
    \ = n;\n    foreach (i; 1 .. size)\n    {\n        current = ((current % 2) ?\
    \ (current + 2) : (current + 1));\n        result[i] = current;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4jcwpg2j.d(19): Error: C style cast illegal, use `cast(int)log2(n)`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4jcwpg2j.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    int size = int(n);\n\
    \    long[] result = new long[n];\n    result[0] = n;\n    for (int i = 1; i <\
    \ size; i++) {\n        if (n % 2 == 0) {\n            result[i] = n + 2;\n  \
    \      } else {\n            result[i] = n + 1;\n        }\n        n = result[i];\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpuif2i1ue.d(19): Error: cannot implicitly convert expression
    `n` of type `long` to `int`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuif2i1ue.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] result =\
    \ new long[n];\n    result[0] = n;\n    long level = 1;\n    while (level < n)\n\
    \    {\n        result[level] = result[level-1] + (level % 2 == 0 ? 2 : 1);\n\
    \        level++;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpi6z3s5pb.d(33): unittest failure\n----------------\n??:?
    _d_unittestp [0x428495]\n??:? void tmpi6z3s5pb.__unittest_L29_C1() [0x427f5a]\n??:?
    void tmpi6z3s5pb.__modtest() [0x428214]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c54f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3e2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43066d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430b1c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x4305f9]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b3b9]\n??:? runModuleUnitTests [0x42c325]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428958]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4288df]\n??:? _d_run_main [0x42884a]\n??:? main [0x428227]\n??:?
    __libc_start_main [0xb5faa554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] result =\
    \ new long[n];\n    result[0] = n;\n    long i = 1;\n    while (i < n)\n    {\n\
    \        if (result[i-1]%2 == 0)\n            result[i] = result[i-1] + 2;\n \
    \       else\n            result[i] = result[i-1] + 1;\n        i++;\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n  \
    \  assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L,\
    \ 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpdxd2bqes.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x4284fd]\n??:? void tmpdxd2bqes.__unittest_L32_C1() [0x427fc2]\n??:?
    void tmpdxd2bqes.__modtest() [0x42827c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c5b7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b44a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306d5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430b84]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430661]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b421]\n??:? runModuleUnitTests [0x42c38d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4289c0]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428947]\n??:? _d_run_main [0x4288b2]\n??:? main [0x42828f]\n??:?
    __libc_start_main [0x47091554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] pile = new\
    \ long[n];\n    pile[0] = n;\n    for (size_t i = 1; i < n; i++)\n    {\n    \
    \    pile[i] = pile[i-1] + 2*(i%2==0?1:-1);\n    }\n    return pile;\n}\nunittest\n\
    {\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L,\
    \ 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp6ovvtofb.d(31): unittest failure\n----------------\n??:?
    _d_unittestp [0x42847d]\n??:? void tmp6ovvtofb.__unittest_L27_C1() [0x427f42]\n??:?
    void tmp6ovvtofb.__modtest() [0x4281fc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c537]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3ca]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430655]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430b04]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x4305e1]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b3a1]\n??:? runModuleUnitTests [0x42c30d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428940]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4288c7]\n??:? _d_run_main [0x428832]\n??:? main [0x42820f]\n??:?
    __libc_start_main [0x13704554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    auto result = new\
    \ long[](n);\n    for (int i = 0; i < n; i++)\n    {\n        result[i] = n;\n\
    \        if (n % 2 == 0)\n            n += 1;\n        else\n            n +=\
    \ 2;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.RangeError@/tmp/tmp0tt4lsxg.d(22): Range violation\n----------------\n??:?
    _d_arrayboundsp [0x4284ee]\n??:? long[] tmp0tt4lsxg.make_a_pile(long) [0x427e42]\n??:?
    void tmp0tt4lsxg.__unittest_L30_C1() [0x427ea1]\n??:? void tmp0tt4lsxg.__modtest()
    [0x4281c0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4f7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b38a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430615]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430ac4]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x4305a1]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b361]\n??:? runModuleUnitTests [0x42c2cd]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428900]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428887]\n??:? _d_run_main [0x4287f2]\n??:? main [0x4281d3]\n??:?
    __libc_start_main [0x8b5d9554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long a = n;\n \
    \   long b = a % 2 == 0 ? a + 2 : a + 1;\n    long c = b % 2 == 0 ? b + 2 : b\
    \ + 1;\n    return [a, b, c];\n}\n/*\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpi_hzo3yb.d(24): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpi_hzo3yb.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] result =\
    \ new long[n];\n    long count = n;\n    foreach(i; 0..n)\n    {\n        result[i]\
    \ = count;\n        if(count % 2 == 0)\n            count++;\n        else\n \
    \           count+=2;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpl_dpz9gt.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x428455]\n??:? void tmpl_dpz9gt.__unittest_L31_C1() [0x427f97]\n??:?
    void tmpl_dpz9gt.__modtest() [0x4281d8]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c50f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3a2]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43062d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430adc]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x4305b9]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b379]\n??:? runModuleUnitTests [0x42c2e5]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428918]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42889f]\n??:? _d_run_main [0x42880a]\n??:? main [0x4281eb]\n??:?
    __libc_start_main [0xa28d7554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    auto pile = [n](inout\
    \ long[] result)\n    {\n        long k = 0;\n        while (n > 0)\n        {\n\
    \            result ~= n;\n            if (n & 1)\n                n = n + 2;\n\
    \            else\n                n = n + 1;\n        }\n    };\n    auto arr\
    \ = appender!(long[])();\n    pile(arr);\n    return arr.data;\n}\nunittest\n\
    {\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L,\
    \ 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpka7lraxx.d(19): Error: `(arguments)` expected following `inout(long)`\n/tmp/tmpka7lraxx.d(19):
    Error: found `[` when expecting `,`\n/tmp/tmpka7lraxx.d(19): Error: expression
    expected, not `]`\n/tmp/tmpka7lraxx.d(19): Error: found `result` when expecting
    `,`\n/tmp/tmpka7lraxx.d(20): Error: semicolon expected following auto declaration,
    not `{`\n/tmp/tmpka7lraxx.d(30): Deprecation: use `{ }` for an empty statement,
    not `;`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpka7lraxx.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] result =\
    \ new long[(int)n];\n    long levelNum = n;\n    result[0] = n;\n    for (long\
    \ i = 1; i < n; i++) {\n        levelNum = (levelNum % 2 == 0) ? levelNum + 1\
    \ : levelNum + 2;\n        result[(int)i] = levelNum;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp85olwelv.d(19): Error: C style cast illegal, use `cast(int)n`\n/tmp/tmp85olwelv.d(24):
    Error: C style cast illegal, use `cast(int)i`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp85olwelv.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    import std.range;\n\
    \    return iota(n).map!(a => n += n%2 ? 2 : 1).array;\n}\nunittest\n{\n    alias\
    \ candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n   \
    \ assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L,\
    \ 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n\
    \    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyf5u64ga.d(20): Error: no property `map` for type `Result`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyf5u64ga.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n  // (2x + 1)**2 +\
    \ x*(x+1)\n  auto s = n * (n + 1) / 2;\n  return [s + n * n, s + n * (n + 1)];\n\
    }\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpeb799bvr.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x42840d]\n??:? void tmpeb799bvr.__unittest_L23_C1() [0x427ed6]\n??:?
    void tmpeb799bvr.__modtest() [0x428190]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3f7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b28a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43041d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x4308cc]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x4303a9]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b261]\n??:? runModuleUnitTests [0x42c1cd]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42885c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4287e3]\n??:? _d_run_main [0x42874e]\n??:? main [0x4281a3]\n??:?
    __libc_start_main [0xffe40554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] result =\
    \ new long[(int)n];\n    long n0 = n;\n    long n1 = (n % 2 == 0) ? n + 1 : n\
    \ + 2;\n    long n2 = n1 + 2;\n    result[0] = n0;\n    result[1] = n1;\n    result[2]\
    \ = n2;\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplwau35rt.d(19): Error: C style cast illegal, use cast(int)n\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplwau35rt.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] stones;\n\
    \    stones.length = n;\n    for (int i = 0; i < n; i++)\n    {\n        stones[i]\
    \ = n;\n        n = isEven(n) ? n + 2 : n + 1;\n    }\n    return stones;\n}\n\
    unittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L) ==\
    \ [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiw35e8ku.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    auto result = new\
    \ long[];\n    if (n == 0L)\n        return result;\n    auto level = n;\n   \
    \ while (level > 0L)\n    {\n        result ~= level;\n        if (level % 2 ==\
    \ 0L)\n            level += 1L;\n        else\n            level += 2L;\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n  \
    \  assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L,\
    \ 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgj3dvobg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] numbers\
    \ = new long[(int)n];\n    for (int i = 0; i < n; i++) {\n        if (numbers[i]\
    \ % 2 == 0)\n            numbers[i] = n + 2 * i;\n        else\n            numbers[i]\
    \ = n + 2 * i + 1;\n    }\n    return numbers;\n}\nunittest\n{\n    alias candidate\
    \ = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpzsfhpufq.d(19): Error: C style cast illegal, use cast(int)n\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzsfhpufq.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] rez = new\
    \ long[(int)n];\n    rez[0] = n;\n    for (int i = 1; i < n; i++)\n    {\n   \
    \     if (i % 2 == 0)\n            rez[i] = rez[i - 1] + 2;\n        else \n \
    \           rez[i] = rez[i - 1] + 1;\n    }\n    return rez;\n}\nunittest\n{\n\
    \    alias candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n\
    \    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) ==\
    \ [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L,\
    \ 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7zuphkon.d(19): Error: C style cast illegal, use cast(int)n\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7zuphkon.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n\tlong[] result = new\
    \ long[n];\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tresult[i] = (i+1)*2-1;\n\t\
    }\n\treturn result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n  \
    \  assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L,\
    \ 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphrlymf8d.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] arr = new\
    \ long[n];\n    arr[0] = n;\n    for (int i = 1; i < n; i++)\n    {\n        if\
    \ (n % 2 == 0)\n        {\n            arr[i] = arr[i-1] + 2;\n        }\n   \
    \     else\n        {\n            arr[i] = arr[i-1] + 1;\n        }\n    }\n\
    \    return arr;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu38lsm8y.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] result =\
    \ new long[n];\n    result[0] = n;\n    for (size_t i = 1; i < n; i++)\n    {\n\
    \        result[i] = (n & 1) != 0 ? result[i - 1] + 2 : result[i - 1] + 1;\n \
    \   }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgx0ga256.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] ret = new\
    \ long[n];\n    ret[0] = n;\n    int i;\n    for (i = 1; i < n; i++) {\n     \
    \   ret[i] = ret[i-1] + ((ret[i-1] & 1) == 0 ? 2 : 1);\n    }\n    return ret;\n\
    }\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdb58kq4g.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    auto result = appender!(long[])();\n\
    \    while (n != 0)\n    {\n        result.put(n);\n        n = (n & 1) == 0 ?\
    \ n + 1 : n + 2;\n    }\n    return result.data;\n}\nunittest\n{\n    alias candidate\
    \ = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgd65zt5_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] ret;\n \
    \   ret[] = cast(long[]) n;\n    for (int i = 0; i < n; i++)\n    {\n        if(n\
    \ % 2 == 0)\n        {\n            ret[i] = ret[i] + ret[i] + 1;\n        }\n\
    \        else\n        {\n            ret[i] = ret[i] + ret[i] + 2;\n        }\n\
    \    }\n    return ret;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n\
    \    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpplwgka63.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long level = n;\n\
    \    long[] result = new long[level];\n    for (int i = 0; i < level; i++) {\n\
    \        result[i] = n;\n        n = n % 2 == 0 ? n + 2 : n + 1;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4f0qqbp2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] arr = new\
    \ long[n];\n    long nxtnum = n;\n    for (long i = 0; i < n; i++)\n    {\n  \
    \      arr[i] = nxtnum;\n        if (isEven(nxtnum))\n            nxtnum += 2;\n\
    \        else\n            nxtnum += 1;\n    }\n    return arr;\n}\nunittest\n\
    {\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L,\
    \ 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdhrbyt52.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] array;\n\
    \    auto index = 0;\n    while (index < n) \n    {\n        n = n + (n % 2 ==\
    \ 0 ? 1 : -1);\n        array ~= n;\n        index++;\n    }\n    return array;\n\
    }\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy_zrn7x_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] stones =\
    \ new long[n];\n    for (long i = 0L; i < n; i++)\n    {\n        if (i == 0L)\n\
    \        {\n            stones[0L] = n;\n        }\n        else\n        {\n\
    \            if (stones[i-1L] % 2L == 0L)\n            {\n                stones[i]\
    \ = stones[i-1L] + 2L;\n            }\n            else\n            {\n     \
    \           stones[i] = stones[i-1L] + 1L;\n            }\n        }\n    }\n\
    \    return stones;\n}\n/*\n    ### Make a Box\nunittest\n{\n    alias candidate\
    \ = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfa272d3v.d(40): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpfa272d3v.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    if (n == 0) return\
    \ new long[0];\n    auto stones = new long[](n);\n    stones[0] = n;\n    for\
    \ (size_t i = 1; i < n; i++) {\n        stones[i] = stones[i-1] + (stones[i-1]\
    \ % 2 == 0 ? 2 : 1);\n    }\n    return stones;\n}\nunittest\n{\n    alias candidate\
    \ = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf_85qk3a.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long level[];\n\
    \    long level_i;\n    level.length = cast(long)ceil(log2(n));\n    foreach(level_i;\
    \ 0..level.length)\n    {\n        level[level_i] = n;\n        if(n % 2 == 0)\n\
    \            n += 1;\n        else\n            n += 2;\n    }\n    return level;\n\
    }\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwlz4qz0d.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    auto result = new\
    \ long[];\n    while (true)\n    {\n        result ~= n;\n        if (n == 1)\
    \ break;\n        n = isEven(n) ? n + 2 : n + 1;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp13hxil86.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n  long[] arr;\n  arr.length\
    \ = n;\n  long init_n = n;\n  foreach(i; 0 .. n)\n  {\n    arr[i] = init_n;\n\
    \    if(init_n % 2 == 0)\n      init_n++;\n    else\n      init_n += 2;\n  }\n\
    \  return arr;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0dj5ar63.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] result =\
    \ new long[n];\n    long sum = 0;\n    for (int i = 0; i < n; i++)\n    {\n  \
    \      sum += n;\n        result[i] = sum;\n        n = (n % 2) == 0 ? n + 1 :\
    \ n + 2;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwv1ur_ec.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] r;\n   \
    \ r[0] = n;\n    for (int i = 1; i < n; i++)\n    {\n        r[i] = r[i-1] + 2;\n\
    \    }\n    return r;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n\
    \    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5fjw_5vq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    //implement me\n\
    \    long[] level = new long[n];\n    level[0] = n;\n    long next_value = 1;\n\
    \    for (long i = 1; i < n; i++) {\n        if(level[cast(int)i-1] % 2 == 0)\
    \ {\n            next_value = level[cast(int)i-1] + 1;\n        }\n        else\
    \ {\n            next_value = level[cast(int)i-1] + 2;\n        }\n        level[cast(int)i]\
    \ = next_value;\n    }\n    return level;\n}\n \nunittest\n{\n    alias candidate\
    \ = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqmbkkqaw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] result =\
    \ new long[n];\n    for (int i = 0; i < n; i++)\n    {\n        result[i] = n\
    \ + 2*i;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphwmw__nj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] x;\n   \
    \ x.length = n;\n    for (int i = 0; i < n; i++)\n    {\n        x[i] = (n - i)\
    \ * 2 - 1;\n    }\n    return x;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvby79_je.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] stones_in_level\
    \ = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        stones_in_level[i]\
    \ = i + 1;\n        if (i % 2 == 0)\n        {\n            stones_in_level[i]\
    \ += 1;\n        }\n    }\n    return stones_in_level;\n}\n// @exclude\nunittest\n\
    {\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L,\
    \ 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8ukoe9gk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] res = new\
    \ long[(int)n];\n    if (n == 1) \n    {\n        res[0] = 1;\n        return\
    \ res;\n    }\n    long curr = n;\n    for (long i = 0; i < n; i++) \n    {\n\
    \        res[(int)i] = curr;\n        if (curr % 2 == 0) \n        {\n       \
    \     curr += 2;\n        } \n        else \n        {\n            curr += 1;\n\
    \        }\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfnf7cqbk.d(19): Error: C style cast illegal, use cast(int)n\n/tmp/tmpfnf7cqbk.d(28):
    Error: C style cast illegal, use cast(int)i\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpfnf7cqbk.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    auto result = appender!(long[])();\n\
    \    foreach(i; 1 .. n + 1)\n    {\n        if (i % 2 == 0)\n        {\n     \
    \       result.put(i + 1);\n        }\n        else\n        {\n            result.put(i);\n\
    \        }\n    }\n    return result.data;\n}\nunittest\n{\n    alias candidate\
    \ = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9h275zz2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] result =\
    \ new long[n];\n    result[0] = n;\n    for (long i = 1; i < n; i++)\n    {\n\
    \        result[i] = ((n + i) % 2 == 0) ? result[i - 1] + 2 : result[i - 1] +\
    \ 1;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqsvue9em.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] result =\
    \ new long[n];\n    result[0] = n;\n    for (long i = 1; i < n; i++)\n    {\n\
    \        result[i] = (n + 1) % 2 == 0 ? n + 2 : n + 1;\n        n = result[i];\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsxfsnonk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] result =\
    \ new long[n];\n    int i = 0;\n    while (n > 0) {\n        result[i] = n;\n\
    \        n = n % 2 == 0 ? n + 1 : n + 2;\n        i++;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxejp05_d.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] result =\
    \ new long[cast(int)n];\n    foreach(i; 0 .. n) {\n        result[i] = n+2*i;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkm1pl2yr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] result =\
    \ new long[n];\n    result[0] = n;\n    for (int i = 1; i < n; i++) {\n      \
    \  result[i] = result[i-1] + (n%2==0?2L:1L);\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L,\
    \ 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3wbbum9q.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] i = new\
    \ long[n];\n    i[0] = n;\n    for (int ndx = 1; ndx < n; ndx++)\n    {\n    \
    \    long num = i[ndx-1];\n        if(num % 2 == 0)\n        {\n            i[ndx]\
    \ = num + 1;\n        }\n        else\n        {\n            i[ndx] = num + 2;\n\
    \        }\n    }\n    return i;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa2akqlna.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    assert(n > 0L);\n\
    \    long[] v = new long[n];\n    v[0] = n;\n    foreach (size_t i, ref long c;\
    \ v)\n    {\n        if (c % 2L == 0L) \n            c += 1L;\n        else \n\
    \            c += 2L;\n    }\n    return v;\n}\nunittest\n{\n    alias candidate\
    \ = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzbogjhds.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] res = new\
    \ long[n];\n    res[0] = n;\n    for (int i = 1; i < n; i++)\n    {\n        if(res[i-1]%2\
    \ == 0)\n            res[i] = res[i-1] + 2;\n        else\n            res[i]\
    \ = res[i-1] + 1;\n    }\n    return res;\n}\n/*\n    Given an array of n integers,\
    \ return an array of integers, where element at\n    index i represents the number\
    \ of zeros in the binary representation of the\n    element from input array at\
    \ index i.\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgen65ikq.d(30): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpgen65ikq.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] result =\
    \ new long[n];\n    result[0] = n;\n    long new_level_size = (n % 2L == 0L) ?\
    \ n + 2L : n + 1L;\n    for (long i = 1L; i < n; i++)\n    {\n        result[i]\
    \ = new_level_size;\n        new_level_size = (new_level_size % 2L == 0L) ? new_level_size\
    \ + 2L : new_level_size + 1L;\n    }\n    return result;\n}\nunittest\n{\n   \
    \ alias candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n\
    \    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) ==\
    \ [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L,\
    \ 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjz4ndbhj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] result =\
    \ new long[n];\n    result[0] = n;\n    foreach (long i; 0 .. n - 1)\n    {\n\
    \        if (n % 2 == 0)\n        {\n            result[i] = n + 2 * i + 2;\n\
    \        }\n        else\n        {\n            result[i] = n + 2 * i + 1;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp916qpday.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    immutable long[]\
    \ pile = [n];\n    immutable long next = n % 2 ? n + 2 : n + 1;\n    while (next\
    \ <= n)\n    {\n        pile ~= next;\n        next += next % 2 ? 2 : 1;\n   \
    \ }\n    return pile;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n\
    \    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_u0ycxzp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] res = new\
    \ long[n];\n    res[0] = n;\n    foreach(i; 1..n)\n    {\n        res[i] = n+2*i;\n\
    \    }\n    return res;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n\
    \    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3r538ktl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n\tstatic assert(n >\
    \ 0L);\n\tlong[] pile = new long[];\n\tauto i = 0L;\n\twhile (i < n)\n\t{\n\t\t\
    pile ~= n + 2*i;\n\t\ti++;\n\t}\n\treturn pile;\n}\nunittest\n{\n    alias candidate\
    \ = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyryr5qr9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    int maxNumber =\
    \ n;\n    while (n >= 1)\n    {\n        maxNumber += n;\n        n -= 2;\n  \
    \  }\n    long[] pile = new long[maxNumber];\n    long[] stones = new long[maxNumber];\n\
    \    int j = 0;\n    for (int i = 0; i < maxNumber; i++)\n    {\n        if (j\
    \ == 0) \n        {\n            stones[i] = n;\n            j = 1;\n        }\n\
    \        else\n        {\n            if (n % 2 == 0) \n            {\n      \
    \          stones[i] = n + 1;\n            }\n            else\n            {\n\
    \                stones[i] = n + 2;\n            }\n            j = 0;\n     \
    \   }\n        n -= 2;\n    }\n    return stones;\n}\nunittest\n{\n    alias candidate\
    \ = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwlehbh9b.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] res = new\
    \ long[n];\n    foreach (long i; 0..n)\n    {\n        if (i == 0) res[i] = n;\n\
    \        else if (res[i-1]%2 == 0) res[i] = res[i-1] + 2;\n        else res[i]\
    \ = res[i-1] + 1;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate\
    \ = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp49ayfhck.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    return make_a_pile(n,\
    \ [n]);\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4ueacr75.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    // Remove this\
    \ line and fix the code!\n    long[] res;\n    res[0] = n;\n    for (int i = 1;\
    \ i < n; i++)\n    {\n        if (res[i-1] % 2 == 0)\n        {\n            res[i]\
    \ = res[i-1] + 2;\n        }\n        else\n        {\n            res[i] = res[i-1]\
    \ + 1;\n        }\n    }\n    return res;\n}\nunittest\n{\n    alias candidate\
    \ = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpirobagg0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    // We will use\
    \ this array to store the number of stones in each level\n    long[] stones =\
    \ new long[n];\n    // We start with the number of stones of the first level\n\
    \    long stones_num = n;\n    for (long i = 0; i < n; i++)\n    {\n        //\
    \ We put the number of stones of the current level in the array\n        stones[i]\
    \ = stones_num;\n        // We calculate the number of stones of the next level\n\
    \        stones_num = stones_num % 2 != 0 ? stones_num + 2 : stones_num + 1;\n\
    \    }\n    return stones;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd0patenn.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] stack;\n\
    \    foreach (i; 0..n)\n    {\n        stack ~= n + 2 * i + (n & 1);\n    }\n\
    \    return stack;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n   \
    \ assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L,\
    \ 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsv7r83zh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] res = new\
    \ long[n];\n    res[0] = n;\n    for (long i = 1; i < n; i++)\n    {\n       \
    \ if (n % 2 == 0)\n            res[i] = res[i-1] + 2;\n        else\n        \
    \    res[i] = res[i-1] + 1;\n    }\n    return res;\n}\nunittest\n{\n    alias\
    \ candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n   \
    \ assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L,\
    \ 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n\
    \    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpekope1xk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] pile;\n\
    \    pile.length = n;\n    if (n == 1)\n    {\n        pile[0] = 1;\n        return\
    \ pile;\n    }\n    else\n    {\n        pile[0] = n;\n        long i = 1;\n \
    \       while (i < n)\n        {\n            if (pile[i-1] % 2)\n           \
    \     pile[i] = pile[i-1] + 2;\n            else\n                pile[i] = pile[i-1]\
    \ + 1;\n            i++;\n        }\n        return pile;\n    }\n}\nunittest\n\
    {\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L,\
    \ 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5jpl9um9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n  long[] result = new\
    \ long[n];\n  result[0] = n;\n  for (long i = 1; i < n; i++)\n  {\n    if (result[i-1]\
    \ % 2 == 0) result[i] = result[i-1] + 2;\n    else result[i] = result[i-1] + 1;\n\
    \  }\n  return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n\
    \    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq_woxoj9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] arr;\n \
    \   arr.length = (int)n;\n    for (int i = 0; i < n; i++) {\n        if (i ==\
    \ 0) {\n            arr[i] = n;\n        } else {\n            if (i % 2 == 0)\
    \ {\n                arr[i] = arr[i-1] + 2;\n            } else {\n          \
    \      arr[i] = arr[i-1] + 1;\n            }\n        }\n    }\n    return arr;\n\
    }\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpd2u7ns8s.d(20): Error: C style cast illegal, use cast(int)n\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd2u7ns8s.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    return map!(a =>\
    \ a, recursive!(x => (x % 2 == 0) ? x + 2 : x + 1)(n)).array();\n}\nunittest\n\
    {\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L,\
    \ 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjqh1qzt8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    auto res = new\
    \ long[];\n    while (n >= 1)\n    {\n        res ~= n;\n        n = n % 2 ? n\
    \ + 2 : n + 1;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate =\
    \ make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcd8tz20u.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] res = new\
    \ long[n];\n    for (int i = 0; i < n; i++) {\n        res[i] = n + (2 * i) +\
    \ (n + i) % 2;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate =\
    \ make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxfxc596v.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] result =\
    \ new long[n];\n    for (int i = 0; i < n; i++)\n    {\n        result[i] = n\
    \ + 2*i;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphwmw__nj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] array =\
    \ new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        array[i] = (long)pow(n,\
    \ 2) + n + 1;\n        n--;\n    }\n    return array;\n}\nunittest\n{\n    alias\
    \ candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n   \
    \ assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L,\
    \ 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n\
    \    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4k9y9vm8.d(22): Error: C style cast illegal, use cast(long)pow(n,
    2)\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4k9y9vm8.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    auto levels = long[](n);\n\
    \    levels[0] = n;\n    long i = 1;\n    while (i < n) {\n        levels[i] =\
    \ levels[i-1] + 2*((levels[i-1] & 1) ^ 1);\n        i++;\n    }\n    return levels;\n\
    }\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmppzkgim82.d(19): Error: found \''[\'' when expecting \''.\''
    following long\n/tmp/tmppzkgim82.d(19): Error: found \'']\'' when expecting identifier
    following \''long.\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppzkgim82.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] ans = new\
    \ long[n];\n    ans[0] = n;\n    for (int i = 1; i < n; i++) {\n        if (ans[i-1]\
    \ % 2 == 0)\n            ans[i] = ans[i-1] + 2;\n        else\n            ans[i]\
    \ = ans[i-1] + 1;\n    }\n    return ans;\n}\n/*\n    This is a very nice, simple\
    \ problem with a very simple solution!\n    It seems to be interesting for students\
    \ with little experience.\n*/\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt5wv78c1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    // Your code here.\n\
    \    long[] arr = new long[(int)n];\n    arr[0] = n;\n    int i = 1;\n    while(n\
    \ != 1)\n    {\n        if(n % 2 == 0)\n        {\n            n = n / 2;\n  \
    \          arr[i] = 2 * arr[i-1];\n        }\n        else\n        {\n      \
    \      n = (n-1) / 2;\n            arr[i] = 2 * arr[i-1] - 1;\n        }\n   \
    \     i++;\n    }\n    return arr;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmppn_l4iw2.d(20): Error: C style cast illegal, use cast(int)n\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppn_l4iw2.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] a;\n   \
    \ long k = n;\n    while (k != 0) {\n        a ~= k;\n        if (k % 2 == 0)\
    \ {\n            k -= 1;\n        } else {\n            k -= 2;\n        }\n \
    \   }\n    return a;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n \
    \   assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L,\
    \ 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9nfx8h15.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] result =\
    \ new long[n];\n    long num_stones = n;\n    for (long i = 0; i < n; i++) {\n\
    \        result[i] = num_stones;\n        if (is_odd(num_stones)) {\n        \
    \    num_stones += 2;\n        } else {\n            num_stones += 1;\n      \
    \  }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2jqhsksg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] res;\n \
    \   res.length = (int)n;\n    foreach(i; 0..n)\n    {\n        if(i == 0)\n  \
    \          res[i] = n;\n        else if(i % 2 == 0)\n            res[i] = res[i-1]\
    \ + 2;\n        else\n            res[i] = res[i-1] + 1;\n    }\n    return res;\n\
    }\n/*\n    >>> make_a_pile(0L)\n    []\n    >>> make_a_pile(1L)\n    [1L]\n  \
    \  >>> make_a_pile(5L)\n    [5L, 7L, 9L, 11L, 13L]\n    >>> make_a_pile(2L)\n\
    \    [2L, 4L]\n*/\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpoymvtcyj.d(20): Error: C style cast illegal, use cast(int)n\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoymvtcyj.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    // for this particular\
    \ solution, it is necessary that the number of levels to the pile are the same.\n\
    \    // the variable \"levels\" can't be changed because it is the lenght of the\
    \ array, and it is necessary\n    // that the return has the same lenght. This\
    \ solution is a good example of dynamic programming.\n    int levels = (int)n;\n\
    \    long[] stones_number = new long[levels];\n    stones_number[0] = n;\n   \
    \ if (n % 2 == 0) \n    {\n        for (int i = 1; i < stones_number.length; i++)\
    \ \n        {\n            stones_number[i] = stones_number[i - 1] + 2;\n    \
    \    }\n    } \n    else \n    {\n        for (int i = 1; i < stones_number.length;\
    \ i++) \n        {\n            stones_number[i] = stones_number[i - 1] + 1;\n\
    \        }\n    }\n    return stones_number;\n}\nunittest\n{\n    alias candidate\
    \ = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1pofru2p.d(22): Error: C style cast illegal, use cast(int)n\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1pofru2p.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] result =\
    \ new long[n];\n    long count = n;\n    for (long i = 0; i < n; i++)\n    {\n\
    \        result[i] = count;\n        if (count % 2 == 0)\n            count++;\n\
    \        else\n            count += 2;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L,\
    \ 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ah20mb0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    int i;\n    long\
    \ []arr;\n    arr.length = n;\n    arr[0] = n;\n    for(i = 1; i < n; i++)\n \
    \   {\n        if(isEven(arr[i-1]))\n        {\n            arr[i] = arr[i-1]\
    \ + 2;\n        }\n        else\n        {\n            arr[i] = arr[i-1] + 1;\n\
    \        }\n    }\n    return arr;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjp9kbuxv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    return iota(1L,\
    \ n + 1L).map!(e => (e % 2 ? n + 2L : n + 1L) - e).array;\n}\nunittest\n{\n  \
    \  alias candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n\
    \    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) ==\
    \ [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L,\
    \ 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyjkbn1cv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] result =\
    \ new long[n];\n    result[0] = n;\n    for (long i = 1; i < n; i++)\n    {\n\
    \        if (n % 2 == 0)\n        {\n            result[i] = result[i-1] + 2;\n\
    \        }\n        else\n        {\n            result[i] = result[i-1] + 1;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptc4dbso8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    assert(n > 0L);\n\
    \    long[] result = new long[n];\n    for (long i = 0L; i < n; i++)\n    {\n\
    \        result[i] = 2L * i + 1L;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n\
    \    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) ==\
    \ [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L,\
    \ 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpua8neqtn.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] result =\
    \ new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        result[i] = n\
    \ + 2 * i + (1 - (n & 1)) * (1 - 2 * (i & 1));\n    }\n    return result;\n}\n\
    long[] make_a_pile2(long n) \n{\n    long[] result = new long[n];\n    for (long\
    \ i = 0; i < n; i++)\n    {\n        result[i] = n + 2 * i;\n        if (n % 2\
    \ == 0)\n        {\n            result[i] += i % 2 == 0 ? 0 : 2;\n        }\n\
    \        else\n        {\n            result[i] += i % 2 == 0 ? 2 : 0;\n     \
    \   }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_hi6a63_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    int len = int(n);\n\
    \    long[] arr = new long[len];\n    for (int i = 0; i < len; i++) {\n      \
    \  arr[i] = n;\n        if (n % 2 == 0) n += 2;\n        else n += 1;\n    }\n\
    \    return arr;\n}\n// Alternative solution\nlong[] make_a_pile_alt(long n) \n\
    {\n    long[] arr = new long[n];\n    for (int i = 0; i < n; i++)\n        arr[i]\
    \ = n+(i*2);\n    return arr;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpko6mfikp.d(19): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpko6mfikp.d(19): Error: semicolon expected, not \'')\''\n/tmp/tmpko6mfikp.d(19):
    Error: found \'')\'' instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpko6mfikp.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    int prev = (int)n;\n\
    \    long[] ret = new long[(int)n];\n    for (int i = 0; i < n; i++) {\n     \
    \   ret[i] = prev;\n        prev = prev & 1 ? prev + 2 : prev + 1;\n    }\n  \
    \  return ret;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp81y9ugzu.d(19): Error: C style cast illegal, use cast(int)n\n/tmp/tmp81y9ugzu.d(20):
    Error: C style cast illegal, use cast(int)n\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp81y9ugzu.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] result =\
    \ new long[n];\n    result[0] = n;\n    long odd_even = (n % 2) + 1;\n    for\
    \ (long i = 1; i < n; i++) {\n        result[i] = result[i - 1] + odd_even;\n\
    \        odd_even = ((result[i] + 1) % 2) + 1;\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L) ==\
    \ [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzcfz9g4t.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    n = n == 0 ? 1\
    \ : n;\n    return map!(a => n += a)(iota(n / 2 + n % 2).map!(a => a % 2 == 0\
    \ ? 2 : 1).array);\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n   \
    \ assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L,\
    \ 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf1ui25v0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    import std.algorithm;\n\
    \    import std.range;\n    return iota(n).map!(i => n + (i%2? 1 : 2)).array;\n\
    }\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxz7sq74u.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] res = new\
    \ long[(int)n];\n    for (long i = 0; i < n; i++) {\n        res[(int)i] = 1 +\
    \ 2 * i;\n    }\n    return res;\n}\n/*\n    Given a positive integer n and you\
    \ have to make a pile of n levels of stones.\n    The first level has n stones.\n\
    \    The number of stones in the next level is:\n        - the next odd number\
    \ if n is odd.\n        - the next even number if n is even.\n    Return the number\
    \ of stones in each level in an array, where element at index\n    i represents\
    \ the number of stones in the level (i+1).\nunittest\n{\n    alias candidate =\
    \ make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpq2z3hpj3.d(19): Error: C style cast illegal, use cast(int)n\n/tmp/tmpq2z3hpj3.d(21):
    Error: C style cast illegal, use cast(int)i\n/tmp/tmpq2z3hpj3.d(25): Error: unterminated
    /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq2z3hpj3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    // creates a list\
    \ of n elements\n    long[] lst = new long[n];\n    // fills each element with\
    \ the corresponding number\n    foreach (immutable i, ref e; lst) \n    {\n  \
    \      e = (i+1)*n + (i%2 ? 1 : 2);\n    }\n    return lst;\n}\nunittest\n{\n\
    \    alias candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n\
    \    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) ==\
    \ [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L,\
    \ 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7pkvvqpp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long next_level\
    \ = n;\n    long stones_in_level = n;\n    long[] result = new long[n];\n    while\
    \ (stones_in_level-- > 0)\n    {\n        result[stones_in_level] = next_level;\n\
    \        next_level = next_level % 2 == 0 ? next_level + 1 : next_level + 2;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4jn5y8go.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    int index = 0;\n\
    \    long[] pile = new long[n];\n    for (int i = n; i > 0; i--)\n    {\n    \
    \    if (i % 2 == 0)\n        {\n            pile[index] = i;\n            pile[index]++;\n\
    \        }\n        else\n        {\n            pile[index] = i;\n          \
    \  pile[index]--;\n        }\n        index++;\n    }\n    return pile;\n}\nunittest\n\
    {\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L,\
    \ 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjvw9tkss.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long [] stones\
    \ = new long[n];\n    stones[0] = n;\n    for (int i = 1; i < n; i++) {\n    \
    \    stones[i] = stones[i-1] + ((stones[i-1] % 2 == 0) ? 2 : 1);\n    }\n    return\
    \ stones;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6tvrr9v1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] ret;\n \
    \   ret.reserve(n);\n    for (n; n > 0; n--) {\n        ret ~= n * 2 - 1;\n  \
    \  }\n    return ret;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n\
    \    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6iv5biv5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    auto a = to!(long[])([n]);\n\
    \    while (n > 1) {\n        if (n % 2 == 0)\n            n = n + 1;\n      \
    \  else\n            n = n + 2;\n        a ~= n;\n    }\n    return a;\n}\nunittest\n\
    {\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L,\
    \ 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoj46xiuj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] result =\
    \ new long[n];\n    for (int i = 0; i < n; i++) {\n        if (i == 0) {\n   \
    \         result[i] = n;\n        } else {\n            if (i % 2 == 0) {\n  \
    \              result[i] = result[i - 1] + 2;\n            } else {\n        \
    \        result[i] = result[i - 1] + 1;\n            }\n        }\n    }\n   \
    \ return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptwuot26b.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    assert(n > 0);\n\
    \    import std.algorithm;\n    import std.range;\n    return iota(n).map!((x)\
    \ => (n + 2) - x).map!((x) => (n + 2) - x).array;\n}\nunittest\n{\n    alias candidate\
    \ = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_fmu0bf1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    return iota(n)\n\
    \        .map!(i => n + 2*i + (n%2 == 0 ? 1 : 0))\n        .array;\n}\nunittest\n\
    {\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L,\
    \ 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzb98jh4w.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] result =\
    \ new long[(int)n];\n    for (long i = 0; i < n; i++)\n    {\n        if (i ==\
    \ 0) \n        {\n            result[(int)i] = n;\n        }\n        else\n \
    \       {\n            if (result[(int)i-1] % 2 == 0)\n            {\n       \
    \         result[(int)i] = result[(int)i-1] + 2;\n            }\n            else\n\
    \            {\n                result[(int)i] = result[(int)i-1] + 1;\n     \
    \       }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbnxyv8cd.d(19): Error: C style cast illegal, use cast(int)n\n/tmp/tmpbnxyv8cd.d(24):
    Error: C style cast illegal, use cast(int)i\n/tmp/tmpbnxyv8cd.d(28): Error: C
    style cast illegal, use cast(int)i\n/tmp/tmpbnxyv8cd.d(30): Error: C style cast
    illegal, use cast(int)i\n/tmp/tmpbnxyv8cd.d(30): Error: C style cast illegal,
    use cast(int)i\n/tmp/tmpbnxyv8cd.d(34): Error: C style cast illegal, use cast(int)i\n/tmp/tmpbnxyv8cd.d(34):
    Error: C style cast illegal, use cast(int)i\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpbnxyv8cd.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] result =\
    \ new long[n];\n    long prev = n;\n    for (long i = 0; i < n; i++) {\n     \
    \   result[i] = prev;\n        prev = prev + 2 - (prev & 1);\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp52vxarre.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    return [n, n +\
    \ 2, n + 4];\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv30on8i8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] arr = new\
    \ long[n];\n    foreach (i; 0 .. n)\n    {\n        arr[i] = n + i*2 + 1;\n  \
    \  }\n    return arr;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n\
    \    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps0os8p0e.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] pile = new\
    \ long[n];\n    for (long i = 0; i < n; i++)\n    {\n        if (i == 0) \n  \
    \      {\n            pile[cast(int)i] = n;\n        }\n        else\n       \
    \ {\n            pile[cast(int)i] = pile[cast(int)i-1] + 2*(1 - (pile[cast(int)i-1]\
    \ % 2));\n        }\n    }\n    return pile;\n}\nunittest\n{\n    alias candidate\
    \ = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqqvc14fz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    return n < 1 ?\
    \ [] : make_a_pile(n - 1) ~ n + n % 2 + 1;\n}\nunittest\n{\n    alias candidate\
    \ = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkl7gbx6v.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n  int i = 0;\n  long[]\
    \ ret = new long[(int)n];\n  long cur = n;\n  for (i = 0; i < (int)n; i++) {\n\
    \    ret[i] = cur;\n    if (cur % 2) {\n      cur += 2;\n    } else {\n      cur\
    \ += 1;\n    }\n  }\n  return ret;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvs6hvspx.d(20): Error: C style cast illegal, use cast(int)n\n/tmp/tmpvs6hvspx.d(22):
    Error: C style cast illegal, use cast(int)n\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpvs6hvspx.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    auto n_iterations\
    \ = n;\n    auto n_stones = n;\n    long[] pile;\n    pile.length = n_iterations;\n\
    \    pile[0] = n_stones;\n    foreach(i; 1..n_iterations) \n    {\n        if(n_stones%2\
    \ == 0)\n        {\n            n_stones++;\n        }\n        else\n       \
    \ {\n            n_stones += 2;\n        }\n        pile[i] = n_stones;\n    }\n\
    \    return pile;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp41jfv03n.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] arr = new\
    \ long[n];\n    arr[0] = n;\n    for (int i = 1; i < n; i++)\n    {\n        if\
    \ (i % 2 == 0)\n        {\n            arr[i] = arr[i - 1] + 2;\n        }\n \
    \       else\n        {\n            arr[i] = arr[i - 1] + 1;\n        }\n   \
    \ }\n    return arr;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n \
    \   assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L,\
    \ 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp73bi00b1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] res = new\
    \ long[n];\n    for (long i = 0; i < n; i++) {\n        res[i] = n + 2 * i + 1;\n\
    \    }\n    return res;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n\
    \    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptxo5hqqi.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] result =\
    \ new long[n];\n    result[0] = n;\n    long i = 1;\n    while (i < n)\n    {\n\
    \        result[i] = result[i-1] + 2*(i % 2) + 1;\n        i++;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzn6678zt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n\tlong[] ret = new\
    \ long[n];\n\tlong count = n;\n\tfor (long i = 0; i < n; i++)\n\t{\n\t\tret[i]\
    \ = count;\n\t\tcount = (count % 2 == 0) ? count + 2 : count + 1;\n\t}\n\treturn\
    \ ret;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqtngo3q8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] res = new\
    \ long[n];\n    res[0] = n;\n    for (long i = 1; i < n; i++)\n    {\n       \
    \ if (n % 2 == 0)\n            res[i] = res[i-1] + 2;\n        else\n        \
    \    res[i] = res[i-1] + 1;\n    }\n    return res;\n}\nunittest\n{\n    alias\
    \ candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n   \
    \ assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L,\
    \ 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n\
    \    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpekope1xk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    import std.string;\n\
    \    import std.array;\n    import std.stdio;\n    import std.math;\n    auto\
    \ result = new long[0];\n    while (n > 0) {\n        if (n % 2 == 0) {\n    \
    \        result ~= n;\n            n -= 1;\n        } else {\n            result\
    \ ~= n;\n            n -= 2;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L,\
    \ 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyqumq05e.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    auto result = new\
    \ long[][];\n    while (n > 0) {\n        result ~= n;\n        n += n % 2 ? 2\
    \ : 1;\n    }\n    return result.array;\n}\nunittest\n{\n    alias candidate =\
    \ make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq0k4iipc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] pile = new\
    \ long[(int)n];\n    for (long i = 0; i < n; i++) {\n        pile[(int)i] = (i\
    \ + 1) * 2 + 1L;\n    }\n    return pile;\n}\nunittest\n{\n    alias candidate\
    \ = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpuqdywdls.d(19): Error: C style cast illegal, use cast(int)n\n/tmp/tmpuqdywdls.d(21):
    Error: C style cast illegal, use cast(int)i\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpuqdywdls.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long next = n;\n\
    \    long[] res = new long[n];\n    for (long i = 0; i < n; i++)\n    {\n    \
    \    if (next % 2 == 0)\n            next++;\n        res[i] = next;\n       \
    \ next += 2;\n    }\n    return res;\n}\n/*\n    A set of integers is called a\
    \ Pythagorean Set if there exists at least one triplet of integers\n    (a, b,\
    \ c) where a^2 + b^2 = c^2. A non-empty subset S of n integers is called Pythagorean\n\
    \    Subset if each element of S can be made a part of a Pythagorean Triplet,\
    \ when one or more\n    elements from the set are taken.\n    Given an array of\
    \ integers, return the number of Pythagorean Subsets.\n    Examples:\n    >>>\
    \ pythagorean_subsets([1L, 2L, 3L, 4L, 5L])\n    1L\n    >>> pythagorean_subsets([3L,\
    \ 5L, 2L, 7L, 6L])\n    3L\n    >>> pythagorean_subsets([2L, 4L, 1L, 3L, 9L])\n\
    \    1L\n    >>> pythagorean_subsets([7L, 8L, 11L, 13L, 14L])\n    6L\n*/\nlong\
    \ pythagorean_subsets(long[] arr) \n{\n    long res = 0;\n    for (long i = 0;\
    \ i < arr.length; i++)\n    {\n        for (long j = i + 1; j < arr.length; j++)\n\
    \        {\n            if (arr[i] * arr[i] + arr[j] * arr[j] == arr[i] * arr[i])\n\
    \                res++;\n            if (arr[i] * arr[i] + arr[j] * arr[j] ==\
    \ arr[j] * arr[j])\n                res++;\n            if (arr[i] * arr[i] +\
    \ arr[j] * arr[j] == arr[i] * arr[i] + arr[j] * arr[j])\n                res++;\n\
    \        }\n    }\n   \nunittest\n{\n    alias candidate = make_a_pile;\n\n  \
    \  assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L,\
    \ 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpd10gm2so.d(62): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd10gm2so.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    int i = 0;\n  \
    \  int size = 0;\n    long[] result;\n    while (n > 0) {\n        n = n - (i\
    \ % 2 == 0 ? i : i + 1);\n        i++;\n        size++;\n    }\n    result = new\
    \ long[size];\n    while (n < i) {\n        result[size - 1] = n + (i % 2 == 0\
    \ ? i : i + 1);\n        n += result[size - 1];\n        i--;\n        size--;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpojk_1nnn.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] result =\
    \ new long[n];\n    result[0] = n;\n    long value = (n % 2 == 0) ? result[0]\
    \ + 1 : result[0] + 2;\n    foreach (i; 1..n)\n    {\n        result[i] = value;\n\
    \        value += (value % 2 == 0) ? 1 : 2;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L,\
    \ 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvzpe2ecu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] res;\n \
    \   int i = 0;\n    int count = 0;\n    foreach(long level; n){\n        count\
    \ += 1;\n    }\n    res = new long[count];\n    foreach(long level; n){\n    \
    \    res[i] = level;\n        i += 1;\n        n = (n % 2 == 0) ? n/2 : n/2 +\
    \ 1;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4181bt71.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    import std.algorithm\
    \ : map;\n    import std.range : iota;\n    return n.iota().map!(x => n + (2 *\
    \ x + 1) * (n % 2)).array;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv5qrmzu6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    // given an index,\
    \ the number of stones in the level is:\n    // index * 2 + 1 if the index is\
    \ odd\n    // index * 2 if the index is even\n    // we can just use the index\
    \ to generate the list of stones in the level\n    long[] stones = new long[n];\n\
    \    foreach (ind; 0 .. n)\n    {\n        stones[ind] = ind * 2 + (ind % 2);\n\
    \    }\n    return stones;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfa4eviie.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978106
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] pile = new\
    \ long[n];\n    pile[0] = n;\n    for (int i = 1; i < n; i++)\n    {\n       \
    \ if (pile[i-1] % 2 == 0)\n            pile[i] = pile[i-1] + 2;\n        else\n\
    \            pile[i] = pile[i-1] + 1;\n    }\n    return pile;\n}\nunittest\n\
    {\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L,\
    \ 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg37xx2ua.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] result =\
    \ new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        result[i] = ((long)pow(n+i,\
    \ 2)+n+i)/2;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpzoq7mp3w.d(22): Error: C style cast illegal, use cast(long)pow(n
    + i, 2)\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzoq7mp3w.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] tmp = new\
    \ long[n];\n    for (int i = 0; i < n; i++)\n    {\n        if (i == 0)\n    \
    \    {\n            tmp[i] = n;\n        }\n        else\n        {\n        \
    \    tmp[i] = (n % 2 == 0) ? (tmp[i-1] + 2) : (tmp[i-1] + 1);\n        }\n   \
    \ }\n    return tmp;\n}\n/*\n    Example Tests:\n    >>> make_a_pile(3L)\n   \
    \ [3L, 5L, 7L]\n    >>> make_a_pile(5L)\n    [5L, 7L, 9L, 11L, 13L]\n    >>> make_a_pile(6L)\n\
    \    [6L, 8L, 10L, 12L, 14L, 16L]\n    >>> make_a_pile(1L)\n    [1L]\n    >>>\
    \ make_a_pile(0L)\n    []\n*/\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9m8hf7_6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] result =\
    \ new long[n];\n    result[0] = n;\n    for (long i = 1; i < n; i++)\n    {\n\
    \        if (isOdd(n))\n        {\n            result[i] = result[i-1] + 2;\n\
    \        }\n        else\n        {\n            result[i] = result[i-1] + 2;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjhftohi1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    int i = 0;\n  \
    \  long[] result = new long[n];\n    while (i < n) {\n        result[i] = n;\n\
    \        i++;\n        n = n % 2 == 0 ? n + 1 : n + 2;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp51uhgdw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] res;\n \
    \   res.length = n;\n    res[0] = n;\n    foreach(i; 1..n)\n    {\n        res[i]\
    \ = (isEven(res[i-1])) ? res[i-1] + 2 : res[i-1] + 1;\n    }\n    return res;\n\
    }\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjpnesz0a.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long [] ret = new\
    \ long[n];\n    ret[0] = n;\n    for (long i = 1; i < n; i++)\n    {\n       \
    \ if (i % 2 == 0)\n            ret[i] = ret[i-1] + 2;\n        else\n        \
    \    ret[i] = ret[i-1] + 1;\n    }\n    return ret;\n}\nunittest\n{\n    alias\
    \ candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n   \
    \ assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L,\
    \ 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n\
    \    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkaoz10qw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] res = new\
    \ long[n];\n    long s = n;\n    res[0] = s;\n    for (int i = 1; i < n; i++)\n\
    \    {\n        s = (s % 2 == 0) ? s + 2 : s + 1;\n        res[i] = s;\n    }\n\
    \    return res;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxf2d_oyy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] res = new\
    \ long[n];\n    long stones = n;\n    res[0] = stones;\n    for (int i = 1; i\
    \ < n; i++) {\n        stones = n % 2 == 0 ? stones + 2 : stones + 1;\n      \
    \  res[i] = stones;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate\
    \ = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxt4v64g5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] result =\
    \ new long[n];\n    result[0] = n;\n    for (int i = 1; i < n; i++)\n    {\n \
    \       if (i % 2 == 0)\n        {\n            result[i] = result[i - 1] + 2;\n\
    \        }\n        else\n        {\n            result[i] = result[i - 1] + 1;\n\
    \        }\n    }\n    return result;\n}\n/*\n    Given a string containing different\
    \ words, count the number of times each word\n    appears. Return a dictionary,\
    \ where the key is the word and the value is the\n    number of times it appeared.\n\
    unittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L) ==\
    \ [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6_ufa2oc.d(34): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp6_ufa2oc.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] result =\
    \ new long[n];\n    result[0] = n;\n    for (long i = 1; i < n; i++)\n    {\n\
    \        if (i % 2 == 0)\n        {\n            result[i] = result[i - 1] + 2;\n\
    \        }\n        else\n        {\n            result[i] = result[i - 1] + 1;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2hywn4o7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] result =\
    \ new long[to!int(n)];\n    for (int i = 0; i < n; i++)\n    {\n        result[i]\
    \ = n + 2 * i;\n    }\n    return result;\n}\n/*\n    >>> make_a_pile(4L)\n  \
    \  [4L, 6L, 8L, 10L]\n*/\nunittest\n{\n    alias candidate = make_a_pile;\n\n\
    \    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6xb248y_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    assert(n >= 1);\n\
    \    long[] result = new long[n];\n    result[0] = n;\n    for (int i = 1; i <\
    \ n; i++)\n    {\n        if (result[i-1] % 2 == 0)\n            result[i] = result[i-1]\
    \ + 1;\n        else\n            result[i] = result[i-1] + 2;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwkqg_iiq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] result =\
    \ new long[n];\n    long i = 0;\n    for (; i < n; i++)\n    {\n        result[i]\
    \ = n + 2 * i;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptpaqxt22.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] a;\n   \
    \ long f = 1;\n    while (n > 0)\n    {\n        a ~= n;\n        n += (2 - n\
    \ % 2);\n    }\n    return a;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppwwpuexx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    auto nums = array();\n\
    \    while (n) \n    {\n        nums ~= n;\n        n = (n + (n % 2) + 1) & ~1;\n\
    \    }\n    return nums;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp19zq6r5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n\tassert(n > 0L);\n\
    \tlong[] result = new long[n];\n\tlong number_of_stones = n;\n\tfor (int i = 0;\
    \ i < n; i++)\n\t{\n\t\tresult[i] = number_of_stones;\n\t\tif (number_of_stones\
    \ % 2L == 0L)\n\t\t{\n\t\t\tnumber_of_stones += 1L;\n\t\t}\n\t\telse\n\t\t{\n\t\
    \t\tnumber_of_stones += 2L;\n\t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n  \
    \  alias candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n\
    \    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) ==\
    \ [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L,\
    \ 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz14n40ia.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] result =\
    \ new long[n];\n    if (n == 1) {\n        result[0] = 1;\n        return result;\n\
    \    }\n    result[0] = n;\n    for (int i = 1; i < n; i++) {\n        result[i]\
    \ = result[i-1] + n % 2 == 0 ? 2 : 1;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L,\
    \ 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpolnibq_h.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] result =\
    \ new long[n];\n    result[0] = n;\n    for (int i = 1; i < n; i++)\n    {\n \
    \       result[i] = result[i-1] + 2*(1-abs(i%2-n%2));\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkgjuzshu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    import std.algorithm\
    \ : map;\n    import std.range : take, put;\n    return n.take().put(n+1).map!(a\
    \ => a*a).array;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxsy_4dd7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] ret;\n \
    \   ret.length = 0;\n    for (; n > 0; --n) {\n        ret ~= n;\n    }\n    return\
    \ ret;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpec0j_3am.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] result =\
    \ new long[n];\n    result[0] = n;\n    for (int i = 1; i < n; i++) {\n      \
    \  if (i % 2 == 0) {\n            result[i] = result[i - 1] + (i + 1);\n     \
    \   } else {\n            result[i] = result[i - 1] + (i + 2);\n        }\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp638qbn3t.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] result =\
    \ new long[n];\n    long count = n;\n    foreach(i; 0 .. n)\n    {\n        result[i]\
    \ = count;\n        if(count % 2 == 0)\n            count++;\n        else\n \
    \           count += 2;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n   \
    \ assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L,\
    \ 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n\
    \    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppy2vm8cy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] stones =\
    \ new long[(int)n];\n    stones[0] = n;\n    for (int i = 1; i < n; i++) {\n \
    \       stones[i] = (n + (stones[i-1] % 2 == 0 ? 1 : 2)) / 2;\n    }\n    return\
    \ stones;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphk5a9x4c.d(19): Error: C style cast illegal, use cast(int)n\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphk5a9x4c.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    // Initialize an\
    \ array that will represent the pile\n    long[] pile = new long[n];\n    long\
    \ numberOfStones = n;\n    for (long i = 0; i < n; i++)\n    {\n        // Add\
    \ the number of stones to the pile at that level\n        pile[i] = numberOfStones;\n\
    \        // The number of stones for the next level is either even or odd depending\
    \ on whether n is even or odd\n        numberOfStones = (numberOfStones % 2 ==\
    \ 0) ? numberOfStones + 2 : numberOfStones + 1;\n    }\n    return pile;\n}\n\
    unittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L) ==\
    \ [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0ncsnwj8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    if (n <= 0) return\
    \ [];\n    long[] res = [n];\n    while (true)\n    {\n        n = n % 2 ? n +\
    \ 2 : n + 1;\n        if (n > n * n) break;\n        res ~= n;\n    }\n    return\
    \ res;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6qryqx15.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] pile = new\
    \ long[n];\n    pile[0] = n;\n    int ind = 1;\n    while (ind < n) {\n      \
    \  pile[ind] = pile[ind-1] + (pile[ind-1] % 2) + 1;\n        ind++;\n    }\n \
    \   return pile;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpusi2_4xr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] result =\
    \ new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        result[i] = n\
    \ + 2*i;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_kjnqx46.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    assert(n > 0);\n\
    \    long[] result = new long[n];\n    if (n > 0)\n    {\n        result[0] =\
    \ n;\n        for (int i = 1; i < n; i++)\n        {\n            if (result[i-1]\
    \ % 2 == 0)\n                result[i] = result[i-1] + 2;\n            else\n\
    \                result[i] = result[i-1] + 1;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptocoib84.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] pile = new\
    \ long[n];\n    foreach (i; 0 .. n)\n    {\n        if (n % 2 == 0)\n        {\n\
    \            pile[i] = n + 2;\n        }\n        else\n        {\n          \
    \  pile[i] = n + 1;\n        }\n    }\n    return pile;\n}\nunittest\n{\n    alias\
    \ candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n   \
    \ assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L,\
    \ 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n\
    \    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3cqgoz0w.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] result =\
    \ new long[n];\n    result[0] = n;\n    for (long i = 1; i < n; i++)\n    {\n\
    \        result[i] = result[i-1] + 2;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L,\
    \ 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf3cg5yv5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] res = new\
    \ long[n];\n    for (int i = 0; i < n; i++) {\n        res[i] = n + 2 * i + (i\
    \ % 2 == 0 ? 1 : 0);\n    }\n    return res;\n}\nunittest\n{\n    alias candidate\
    \ = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpticfdbu4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] result =\
    \ new long[n];\n    for (long i = 0; i < n; i++)\n    {\n        if (i % 2 ==\
    \ 0)\n        {\n            result[i] = n + i;\n        }\n        else\n   \
    \     {\n            result[i] = n + i + 1;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdy17una7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] ret = new\
    \ long[n];\n    for (int i = 0; i < n; i++) {\n        if (i % 2 == 0) {\n   \
    \         ret[i] = n + i;\n        } else {\n            ret[i] = n + i + 1;\n\
    \        }\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9ye0es39.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] res = new\
    \ long[n];\n    bool is_odd = true;\n    for (long i = 0; i < n; i++)\n    {\n\
    \        if (is_odd)\n        {\n            res[i] = n + 2 * i + 1;\n       \
    \     is_odd = false;\n        }\n        else\n        {\n            res[i]\
    \ = n + 2 * i + 2;\n            is_odd = true;\n        }\n    }\n    return res;\n\
    }\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbb5t2v1t.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    if (n==0) \n  \
    \      return [];\n    int[] r= new int[];\n    r~= n;\n    while (n>1) \n   \
    \ {\n        n= n-1;\n        if (n%2) \n            n= n+1;\n        else \n\
    \            n= n+2;\n        r~= n;\n    }\n    return r;\n}\nunittest\n{\n \
    \   alias candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n\
    \    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) ==\
    \ [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L,\
    \ 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppd5pfiim.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] result =\
    \ new long[n];\n    result[0] = n;\n    foreach (size_t i; 1..n)\n    {\n    \
    \    if (result[i-1] % 2 == 0)\n            result[i] = result[i-1] + 2;\n   \
    \     else\n            result[i] = result[i-1] + 1;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_o223k8e.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    // make a new list\
    \ of longs to store the levels\n    long[] levels = new long[n];\n    // let's\
    \ start with the first level\n    long[] current_level = new long[1];\n    current_level[0]\
    \ = n;\n    // loop through the number of levels we have to make\n    for (long\
    \ i = 0; i < n; i++)\n    {\n        // add the current level to the levels list\n\
    \        levels[i] = current_level[0];\n        // determine if we need to increase\
    \ the number of stones in the next level by 1\n        long offset = 0;\n    \
    \    if (current_level[0] % 2 == 0)\n        {\n            offset = 1;\n    \
    \    }\n        // create the next level\n        current_level = new long[1];\n\
    \        current_level[0] = levels[i] + offset + i + 1;\n    }\n    return levels;\n\
    }\n// TEST DRIVER\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1t6ucorl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    //TODO: test\n\
    \    long[] res = new long[n];\n    foreach(i; 0 .. n)\n    {\n        res[i]\
    \ = i + 1;\n        if(i % 2)\n            res[i] += 1;\n    }\n    return res;\n\
    }\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9rpq6cpy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] result =\
    \ new long[n];\n    result[0] = n;\n    for (long i = 1; i < n; i++) {\n     \
    \   if (result[i-1]%2 == 0) {\n            result[i] = result[i-1] + 2;\n    \
    \    } else {\n            result[i] = result[i-1] + 1;\n        }\n    }\n  \
    \  return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpokvn78rc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] pile = new\
    \ long[n];\n    pile[0] = n;\n    for (int i = 1; i < n; i++)\n    {\n       \
    \ if (pile[i-1] % 2 == 0)\n            pile[i] = pile[i-1] + 2;\n        else\n\
    \            pile[i] = pile[i-1] + 1;\n    }\n    return pile;\n}\nunittest\n\
    {\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L,\
    \ 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg37xx2ua.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] ret = new\
    \ long[n];\n    for (long i = 0; i < n; i++) {\n        ret[i] = (i * 2) + n;\n\
    \    }\n    return ret;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n\
    \    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpivnkeftw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] ret;\n \
    \   ret.length = n;\n    for (int i = 0; i < n; i++)\n    {\n        ret[i] =\
    \ n + 2*i + ((n+i)%2);\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate\
    \ = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp62e7jpz1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] result =\
    \ new long[n];\n    long stones_in_next_level = n;\n    long step = 1;\n    for\
    \ (long i = 0; i < n; i++) {\n        result[i] = stones_in_next_level;\n    \
    \    if (is_even(stones_in_next_level)) {\n            step += 2;\n        }\n\
    \        stones_in_next_level += step;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L,\
    \ 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx8pcga13.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] stones =\
    \ new long[];\n    foreach(c; 0 .. n)\n    {\n        stones ~= n;\n        n\
    \ += n % 2 == 0 ? 2 : 1;\n    }\n    return stones;\n}\nunittest\n{\n    alias\
    \ candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n   \
    \ assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L,\
    \ 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n\
    \    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7bj6mezf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] res = new\
    \ long[n];\n    res[0] = n;\n    foreach(i; 1..n)\n    {\n        if(n % 2 ==\
    \ 0)\n            res[i] = res[i-1] + 2;\n        else\n            res[i] = res[i-1]\
    \ + 1;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpssccrhy8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] result =\
    \ new long[n];\n    result[0] = n;\n    for (long i = 1; i < n; i++)\n    {\n\
    \        if (n % 2 == 0)\n        {\n            result[i] = result[i-1] + 2;\n\
    \        }\n        else\n        {\n            result[i] = result[i-1] + 1;\n\
    \        }\n    }\n    return result;\n}\n/*\nunittest\n{\n    alias candidate\
    \ = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4z67uc7v.d(34): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp4z67uc7v.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] levels;\n\
    \    long i;\n    levels = new long[n];\n    levels[0] = n;\n    for (i = 1; i\
    \ < n; i++)\n    {\n        levels[i] = (levels[i-1] % 2 == 0 ? levels[i-1] +\
    \ 2 : levels[i-1] + 1);\n    }\n    return levels;\n}\nunittest\n{\n    alias\
    \ candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n   \
    \ assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L,\
    \ 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n\
    \    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3gjcsy9j.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long next = n;\n\
    \    long[] nums = new long[n];\n    for (int i = 0; i < n; i++)\n    {\n    \
    \    nums[i] = next;\n        next = next % 2 == 0 ? next + 2 : next + 1;\n  \
    \  }\n    return nums;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n\
    \    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2be45cah.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] ans = new\
    \ long[n];\n    long it = n;\n    for (long i = 0; i < n; i++)\n    {\n      \
    \  ans[i] = it;\n        it = (n % 2 == 0) ? it + 2 : it + 1;\n    }\n    return\
    \ ans;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa3p7nncy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    import std.stdio;\n\
    \    long[] output;\n    while(n > 0)\n    {\n        output ~= n;\n        if(n\
    \ % 2 == 0)\n            n -= 2;\n        else\n            n -= 1;\n    }\n \
    \   output.reverse();\n    return output;\n}\nunittest\n{\n    alias candidate\
    \ = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwxtp0ytg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] pile = new\
    \ long[n];\n    long stone = 1;\n    for (int i = 0; i < n; i++) {\n        pile[i]\
    \ = stone;\n        stone += (n + (i % 2));\n    }\n    return pile;\n}\nunittest\n\
    {\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L,\
    \ 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu7tdnsyr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] result =\
    \ new long[n];\n    long cur = n;\n    for (int i = 0; i < n; i++)\n    {\n  \
    \      result[i] = cur;\n        cur = cur % 2 == 0 ? cur + 2 : cur + 1;\n   \
    \ }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n\
    \    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi7csse61.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n\tlong[] r = new long[n];\n\
    \tr[0] = n;\n\tlong nn = n;\n\tfor (int i = 1; i < n; i++) {\n\t\tif (nn & 1)\n\
    \t\t\tnn += 2;\n\t\telse\n\t\t\tnn += 1;\n\t\tr[i] = nn;\n\t}\n\treturn r;\n}\n\
    unittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L) ==\
    \ [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0c2kmn23.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] res = new\
    \ long[n];\n    for (long i = 0; i < n; i++) {\n        res[i] = n + (2 * i) +\
    \ (n % 2);\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqhdud2os.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    assert(n > 0L);\n\
    \    assert(n < max_value);\n    long[] array = new long[n];\n    long current_level\
    \ = n;\n    long current_stones = n;\n    for (int i = 0; i < n; i++)\n    {\n\
    \        current_stones = (current_level % 2 == 0L) ? current_stones + 2L : current_stones\
    \ + 1L;\n        array[i] = current_stones;\n        current_level--;\n    }\n\
    \    return array;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n   \
    \ assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L,\
    \ 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz764pkur.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] res = new\
    \ long[n];\n    for (int i = 0; i < n; i++) {\n        res[i] = n + i * 2 + (i\
    \ % 2 == 0 ? 1 : 0);\n    }\n    return res;\n}\n/*\n    http://rosettacode.org/wiki/Harshad_or_Niven_series#D\n\
    */\nT[] harshad(long start, long end, long step) \n{\n    auto res = new T[]((end\
    \ - start) / step + 1);\n    for (long i = start, j = 0; i <= end; i += step,\
    \ j++) {\n        int sum = 0;\n        int n = i;\n        while (n > 0) {\n\
    \            sum += n % 10;\n            n /= 10;\n        }\n        res[j] =\
    \ i % sum == 0 ? i : 0;\n    }\n    return res;\n}\n/*\n    http://rosettacode.org/wiki/Happy_numbers#D\n\
    */\n// Uncomment this function and copy it to the solution to get the test to\
    \ pass.\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptvyazktz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] result =\
    \ new long[n];\n    foreach (ref long level; result) \n    {\n        level =\
    \ n;\n        if (n % 2 == 0)\n            n += 2;\n        else\n           \
    \ n += 1;\n    }\n    return result;\n}\n// Second variant\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    foreach (ref long level; result)\
    \ \n    {\n        level = n;\n        n += n % 2 + 1;\n    }\n    return result;\n\
    }\n// Third variant\nlong[] make_a_pile(long n) \n{\n    long[] result = new long[n];\n\
    \    foreach (ref long level; result) \n    {\n        level = n;\n        n +=\
    \ cast(long)(n % 2) * 2 + 1;\n    }\n    return result;\n}\n// Fourth variant\n\
    long[] make_a_pile(long n) \n{\n    long[] result = new long[n];\n    foreach\
    \ (ref long level; result) \n    {\n        level = n;\n        n += isEven(n)\
    \ * 2 + 1;\n    }\n    return result;\n}\n// Fifth variant\nlong[] make_a_pile(long\
    \ n) \n{\n    long[] result = new long[n];\n    foreach (ref long level; result)\
    \ \n    {\n        level = n;\n        n += cast(long)((n + 1) % 2) * 2;\n   \
    \ }\n    return result;\n}\n// Sixth variant\nlong[] make_a_pile(long n) \n{\n\
    \    long[] result = new long[n];\n    foreach (ref long level; result) \n   \
    \ {\n        level = n;\n        n += (1 - n % 2) * 2;\n    }\n    return result;\n\
    }\n// Seventh variant\nlong[] make_a_pile(long n) \n{\n    long[] result = new\
    \ long[n];\n    foreach (ref long level; result) \n    {\n        level = n;\n\
    \        n += n % 2\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmx7vvmim.d(93): Error: found \''unittest\'' when expecting \'';\''
    following statement\n/tmp/tmpmx7vvmim.d(103): Error: found \''EOF\'' when expecting
    \''}\'' following compound statement\n/tmp/tmpmx7vvmim.d(103): Error: found \''EOF\''
    when expecting \''}\'' following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpmx7vvmim.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] result =\
    \ new long[n];\n    for (long i = 0L; i < n; i++)\n    {\n        result[i] =\
    \ n + 2L * i;\n    }\n    return result;\n}\nlong[] make_a_pile(long n) \n{\n\
    \    return std.iota(n).map!(a => a * 2 + 1).array;\n}\nunittest\n{\n    alias\
    \ candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n   \
    \ assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L,\
    \ 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n\
    \    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx40rk38z.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] pile;\n\
    \    // the first level in the pile has n stones\n    pile ~= n;\n    while (n\
    \ > 1) {\n        // the number of stones in the next level is the next odd\n\
    \        // number if n is odd, or the next even number if n is even\n       \
    \ pile ~= n & 1 ? n + 2 : n + 1;\n        n = (n - 1) / 2;\n    }\n    return\
    \ pile;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1f_iba9d.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    assert(n > 0);\n\
    \    long[] result = new long[];\n    while (n > 0)\n    {\n        result ~=\
    \ n;\n        n = (n & 1) ? n + 2 : n + 1;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L,\
    \ 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptvav6ikl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] result =\
    \ new long[n];\n    long i;\n    long nb_stones;\n    result[0] = n;\n    nb_stones\
    \ = n;\n    foreach(i;1..n)\n    {\n        if(n%2==0)\n        {\n          \
    \  nb_stones += 2;\n        }\n        else\n        {\n            nb_stones\
    \ += 1;\n        }\n        result[i] = nb_stones;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnqd_voba.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    import std.math;\n\
    \    long[] ret = new long[];\n    for (long i = 0; i < n; i++)\n    {\n     \
    \   if (i % 2 == 0)\n            ret ~= i + 1;\n        else\n            ret\
    \ ~= i + 2;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcpui91lz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    import std.math;\n\
    \    long[] result = new long[(long)n];\n    for (long i = 0; i < n; i++) {\n\
    \        result[i] = n + 2 * i + (n % 2);\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L,\
    \ 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_p1izkwy.d(20): Error: C style cast illegal, use cast(long)n\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_p1izkwy.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] result =\
    \ new long[n];\n    result[0] = n;\n    for (long i = 1; i < n; i++) {\n     \
    \   result[i] = n % 2 == 0 ? n+2 : n+1;\n        n = result[i];\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxnfp_vsx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] result =\
    \ new long[];\n    for (size_t i = 0; i < n; i++)\n    {\n        result ~= n;\n\
    \        if (n % 2 == 0)\n            n += 2;\n        else\n            n +=\
    \ 1;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzjc9zqh6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] pile = new\
    \ long[(int)n];\n    for (int i = 0; i < n; i++) {\n        pile[i] = n + 2*i\
    \ + (n%2 != 0 ? 1 : 0);\n    }\n    return pile;\n}\nunittest\n{\n    alias candidate\
    \ = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbmqa8lla.d(19): Error: C style cast illegal, use cast(int)n\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbmqa8lla.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    int x = int.max;\n\
    \    long[] y = new long[x];\n    y[0] = n;\n    long temp = 0;\n    if(n%2==0)\n\
    \    {\n        temp = n+2;\n    }\n    else\n    {\n        temp = n+1;\n   \
    \ }\n    int i = 1;\n    while(n-- > 1)\n    {\n        y[i] = temp;\n       \
    \ if(temp%2==0)\n        {\n            temp = temp+2;\n        }\n        else\n\
    \        {\n            temp = temp+1;\n        }\n        i++;\n    }\n    return\
    \ y;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8xnvsi_i.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long level1 = n;\n\
    \    long level2 = n & 1 ? n + 2 : n + 1;\n    long level3 = level2 + 2;\n   \
    \ long[] res = new long[3];\n    res[0] = level1;\n    res[1] = level2;\n    res[2]\
    \ = level3;\n    return res;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8dot8up1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] r;\n   \
    \ r ~= n;\n    if (n > 1)\n    {\n        r ~= make_a_pile(n % 2 ? n + 2 : n +\
    \ 1);\n    }\n    return r;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy63x2nnc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] result =\
    \ new long[n];\n    for (long i = 0; i < n; i++) {\n        if (i % 2 == 0) {\n\
    \            result[i] = i + n;\n        } else {\n            result[i] = i +\
    \ n + 1;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L)\
    \ == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n\
    \    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L)\
    \ == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7iep9hwf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] pile = new\
    \ long[n];\n    pile[0] = n;\n    for (int i = 1; i < n; i++)\n    {\n       \
    \ pile[i] = pile[i-1] + (pile[i-1] % 2 == 0 ? 2 : 1);\n    }\n    return pile;\n\
    }\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjp3dgv3d.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    long[] result =\
    \ new long[n];\n    bool is_odd = n%2==1;\n    result[0] = n;\n    for (long i\
    \ = 1; i < n; i++)\n    {\n        if (is_odd)\n        {\n            result[i]\
    \ = result[i-1] + 2;\n        }\n        else\n        {\n            result[i]\
    \ = result[i-1] + 1;\n        }\n        is_odd = !is_odd;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L)\
    \ == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L)\
    \ == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L,\
    \ 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L,\
    \ 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb527tsyz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n\tlong[] pile = new\
    \ long[n];\n\tpile[0] = n;\n\tfor (int i = 1; i < n; i++)\n\t{\n\t\tpile[i] =\
    \ pile[i-1] + (2 * sign(pile[i-1]));\n\t}\n\treturn pile;\n}\nunittest\n{\n  \
    \  alias candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n\
    \    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) ==\
    \ [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L,\
    \ 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsaz1zelx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a positive integer n, you have to make\
    \ a pile of n levels of stones.\n    The first level has n stones.\n    The number\
    \ of stones in the next level is:\n        - the next odd number if n is odd.\n\
    \        - the next even number if n is even.\n    Return the number of stones\
    \ in each level in an array, where element at index\n    i represents the number\
    \ of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3L)\n  \
    \  [3L, 5L, 7L]\n    \n*/\nlong[] make_a_pile(long n) \n{\n    return iota(n).map!(i\
    \ => n + 2*i + 1).array;\n}\nunittest\n{\n    alias candidate = make_a_pile;\n\
    \n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L,\
    \ 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L)\
    \ == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L,\
    \ 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphte4356d.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978107

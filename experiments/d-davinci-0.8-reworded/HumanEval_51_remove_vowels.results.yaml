language: d
name: HumanEval_51_remove_vowels
results:
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ vowels = \"aeiouAEIOU\";\n    int k = text.length;\n    string output = \"\"\
    ;\n    for (int i = 0; i < k; i++) {\n        bool b = false;\n        for (int\
    \ j = 0; j < vowels.length; j++) {\n            if (text[i] == vowels[j]) {\n\
    \                b = true;\n                break;\n            }\n        }\n\
    \        if (!b) {\n            output += text[i];\n        }\n    }\n    return\
    \ output;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpj8qv8a_1.d(20): Error: cannot implicitly convert expression `text.length`
    of type `ulong` to `int`

    /tmp/tmpj8qv8a_1.d(31): Error: slice `output` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj8qv8a_1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 0
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ ret = \"\";\n    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' &&\
    \ c != 'i' && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c !=\
    \ 'O' && c != 'U')\n        {\n            ret ~= c;\n        }\n    }\n    return\
    \ ret;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result;\n    foreach(ch; text) \n    {\n        if (ch == 'a' || ch == 'e' ||\
    \ ch == 'i' || ch == 'o' || ch == 'u' || ch == 'A' || ch == 'E' || ch == 'I' ||\
    \ ch == 'O' || ch == 'U')\n        {\n            result ~= ch;\n        }\n \
    \   }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpoy_xed1u.d(34): unittest failure

    ----------------

    ??:? _d_unittestp [0x428085]

    ??:? void tmpoy_xed1u.__unittest_L29_C1() [0x427bde]

    ??:? void tmpoy_xed1u.__modtest() [0x427e08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c71b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b62a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430001]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4304b0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff8d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b601]

    ??:? runModuleUnitTests [0x42c4f1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4284d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163954
- exit_code: 0
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result;\n    foreach(c; text) \n    {\n        if (c != 'a' && c != 'e' && c\
    \ != 'i' && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O'\
    \ && c != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    if(text.length()\
    \ == 0)\n        return \"\";\n    if(text[0] == 'a' || text[0] == 'A' || text[0]\
    \ == 'e' || text[0] == 'E' || text[0] == 'i' || text[0] == 'I' || text[0] == 'o'\
    \ || text[0] == 'O' || text[0] == 'u' || text[0] == 'U')\n        return remove_vowels(text[1..$]);\n\
    \    else\n        return text[0..0] ~ remove_vowels(text[1..$]);\n}\nunittest\n\
    {\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"\
    fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5k0gr6rq.d(19): Error: no property `length` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5k0gr6rq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 0
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result = \"\";\n    foreach(c; text)\n    {\n        if (c != 'a' && c != 'e'\
    \ && c != 'i' && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c\
    \ != 'O' && c != 'U')\n        {\n            result ~= c;\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result = \"\";\n    for (int i = 0; i < text.length; i++) \n    {\n        char\
    \ c = text[i];\n        if (c != 'a' && c != 'e' && c != 'i' && c != 'o' && c\
    \ != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U') \n     \
    \   {\n            result += c;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"\
    fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpweczsphk.d(25): Error: slice `result` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpweczsphk.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    return\
    \ filter!(ch => !(\"aeiouAEIOU\".canFind(ch)))(text);\n}\nunittest\n{\n    alias\
    \ candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") ==\
    \ \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp82wpqj1k.d(19): Error: template instance `filter!((ch) => !"aeiouAEIOU".canFind(ch))`
    template `filter` is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp82wpqj1k.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n\tstring\
    \ output = \"\";\n\t// Loop through each letter.\n\tfor (size_t i = 0; i < text.length();\
    \ i++) \n\t{\n\t\t// If the letter is a vowel, continue to the next loop.\n\t\t\
    if (text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i]\
    \ == 'u' ||\n\t\t\ttext[i] == 'A' || text[i] == 'E' || text[i] == 'I' || text[i]\
    \ == 'O' || text[i] == 'U')\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\telse\n\t\t{\n\t\
    \t\t// Add the letter to the output string if it is not a vowel.\n\t\t\toutput\
    \ += text[i];\n\t\t}\n\t}\n\treturn output;\n}\nunittest\n{\n    alias candidate\
    \ = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") ==\
    \ \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpu7z5k2j3.d(21): Error: no property `length` for type `string`

    /tmp/tmpu7z5k2j3.d(32): Error: slice `output` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu7z5k2j3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result = \"\";\n    foreach(c; text)\n    {\n        switch(tolower(c)) \n \
    \       {\n            case 'a':\n            case 'e':\n            case 'i':\n\
    \            case 'o':\n            case 'u':\n                break;\n      \
    \      default:\n                result ~= c;\n        }\n    }\n    return result;\n\
    }\n/*\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpu3828als.d(36): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu3828als.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 0
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result = \"\";\n    foreach(c; text)\n    {\n        if (c != 'a' && c != 'e'\
    \ && c != 'i' && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c\
    \ != 'O' && c != 'U')\n        {\n            result ~= c;\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ vowel_letters = \"aeiou\";\n    string output = \"\";\n    foreach(c; text)\n\
    \    {\n        foreach(v; vowel_letters)\n        {\n            if(c == v)\n\
    \            {\n                goto next_letter;\n            }\n        }\n\
    \        output ~= c;\n        next_letter:\n    }\n    return output;\n}\n/*\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbns7brib.d(35): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbns7brib.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{ \n    if(text\
    \ == \"\") \n        return \"\";\n    if(text.front == 'a' || text.front == 'e'\
    \ || text.front == 'i' || text.front == 'o' || text.front == 'u' || text.front\
    \ == 'A' || text.front == 'E' || text.front == 'I' || text.front == 'O' || text.front\
    \ == 'U') \n        return remove_vowels(text.popFront);\n    return text.front\
    \ ~ remove_vowels(text.popFront);\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpocgxz5af.d(21): Error: no property `front` for type `string`

    /tmp/tmpocgxz5af.d(21): Error: no property `front` for type `string`

    /tmp/tmpocgxz5af.d(21): Error: no property `front` for type `string`

    /tmp/tmpocgxz5af.d(21): Error: no property `front` for type `string`

    /tmp/tmpocgxz5af.d(21): Error: no property `front` for type `string`

    /tmp/tmpocgxz5af.d(21): Error: no property `front` for type `string`

    /tmp/tmpocgxz5af.d(21): Error: no property `front` for type `string`

    /tmp/tmpocgxz5af.d(21): Error: no property `front` for type `string`

    /tmp/tmpocgxz5af.d(21): Error: no property `front` for type `string`

    /tmp/tmpocgxz5af.d(21): Error: no property `front` for type `string`

    /tmp/tmpocgxz5af.d(22): Error: no property `popFront` for type `string`

    /tmp/tmpocgxz5af.d(23): Error: no property `front` for type `string`

    /tmp/tmpocgxz5af.d(23): Error: no property `popFront` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpocgxz5af.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result = \"\";\n    for (int i = 0; i < text.length; i++)\n    {\n        if\
    \ (text[i] != 'a' && text[i] != 'A' && text[i] != 'e' && text[i] != 'E' && text[i]\
    \ != 'o' && text[i] != 'O' && text[i] != 'u' && text[i] != 'U' && text[i] != 'i'\
    \ && text[i] != 'I')\n        {\n            result += text[i];\n        }\n \
    \   }\n    return result;\n}\n/*\nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4s__aq0r.d(29): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4s__aq0r.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    return\
    \ replace_all(text, \"a|e|i|o|u|A|E|I|O|U\", \"\");\n}\nunittest\n{\n    alias\
    \ candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") ==\
    \ \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmps85gbx5l.d(19): Error: undefined identifier `replace_all`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps85gbx5l.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n  return\
    \ text.replace(\"a\", \"\").replace(\"e\", \"\").replace(\"i\", \"\").replace(\"\
    o\", \"\").replace(\"u\", \"\");\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp46p_vnk_.d(19): Error: no property `replace` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp46p_vnk_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ vowels = \"aeiou\";\n    for (int i = 0; i < text.length; i++) {\n        char\
    \ c = text[i];\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c\
    \ == 'u') {\n            text = text.replace(c, \"\");\n        }\n    }\n   \
    \ return text;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvwqf4dsz.d(23): Error: no property `replace` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvwqf4dsz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 0
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result = \"\";\n    // your code here\n    foreach(i, c; text)\n    {\n    \
    \    if (c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' && c != 'A'\
    \ && c != 'E' && c != 'I' && c != 'O' && c != 'U')\n        {\n            result\
    \ ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") ==\
    \ \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result = \"\";\n    foreach(c; text) \n    {\n        if (c != 'a' && c != 'e'\
    \ && c != 'i' && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c\
    \ != 'O' && c != 'U') \n        {\n            result ~= c;\n        }\n    }\n\
    \    return result;\n}\n/*\nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpm2upve8c.d(29): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm2upve8c.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ vowels = \"aeiouAEIOU\";\n    string result = \"\";\n    foreach(r; text)\n\
    \    {\n        if(indexOf(vowels, r) == -1)\n        {\n            result ~=\
    \ r;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") ==\
    \ \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk81s9l37.d(23): Error: undefined identifier `indexOf`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk81s9l37.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    return\
    \ text.toUpper().erase(\"AEIOU\");\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpi6c8zfzc.d(19): Error: no property `toUpper` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi6c8zfzc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result = \"\";\n    foreach(c; text)\n    {\n        if (c != 'a' && c != 'e'\
    \ && c != 'i' && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c\
    \ != 'O' && c != 'U')\n        {\n            result ~= c;\n        }\n    }\n\
    \    return result;\n}\n/*\nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpeiuxq238.d(29): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeiuxq238.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ new_string = \"\";\n    foreach(w; text)\n    {\n        if(!isVowel(w)) \n\
    \        {\n            new_string ~= w;\n        }\n    }\n    return new_string;\n\
    }\n/*\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpetfcmtzp.d(29): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpetfcmtzp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    text\
    \ = lower(text);\n    string res;\n    foreach(char c; text)\n    {\n        if\
    \ (c!='a' && c!='e' && c!='i' && c!='o' && c!='u')\n            res ~= c;\n  \
    \  }\n    return res;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0nc57fj1.d(19): Error: undefined identifier `lower`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0nc57fj1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    auto\
    \ result = \"\";\n    auto vowel = \"aAeEiIoOuU\";\n    auto letters = text.split;\n\
    \    foreach(letter; letters)\n    {\n        if(vowel.find(letter) == -1)\n \
    \       {\n            result ~= letter;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpob1seszc.d(21): Error: no property `split` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpob1seszc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result = \"\";\n    for (size_t i = 0; i < text.length(); i++) \n    {\n   \
    \     if (text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o'\
    \ && text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i]\
    \ != 'O' && text[i] != 'U')\n        {\n            result += text[i];\n     \
    \   }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppw5b0omv.d(20): Error: no property `length` for type `string`

    /tmp/tmppw5b0omv.d(24): Error: slice `result` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppw5b0omv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n    foreach(c;\
    \ consonants)\n    {\n        text = replace(text, c, \"\");\n    }\n    return\
    \ text;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpcrs3ztd1.d(22): Error: undefined identifier `replace`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcrs3ztd1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result;\n    foreach(c; text)\n    {\n        if(!(c == 'a' || c == 'e' || c\
    \ == 'i' || c == 'o' || c == 'u'))\n        {\n            result ~= c;\n    \
    \    }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpmhvy0pju.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x428075]

    ??:? void tmpmhvy0pju.__unittest_L29_C1() [0x427cb3]

    ??:? void tmpmhvy0pju.__modtest() [0x427df8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c70b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b61a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fff1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4304a0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff7d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5f1]

    ??:? runModuleUnitTests [0x42c4e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4284c4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    return\
    \ text.replace(\"a\", \"\").replace(\"e\", \"\").replace(\"i\", \"\").replace(\"\
    o\", \"\").replace(\"u\", \"\");\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp70tswurf.d(19): Error: no property `replace` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp70tswurf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    import\
    \ std.string;\n    import std.stdio;\n    import std.array;\n    import std.range;\n\
    \    import std.conv;\n    import std.array;\n    import std.algorithm;\n    import\
    \ std.math;\n    import std.traits;\n    import std.range;\n    import std.file;\n\
    \    import std.ascii;\n    import std.math;\n    import std.range;\n    import\
    \ std.typecons;\n    import std.conv;\n    import std.math;\n    import std.random;\n\
    \    import std.algorithm;\n    import std.range;\n    import std.math;\n    import\
    \ std.typecons;\n    import std.range;\n    import std.math;\n    import std.datetime;\n\
    \    import std.math;\n    import std.conv;\n    import std.algorithm;\n    import\
    \ std.range;\n    import std.math;\n    import std.string;\n    import std.string;\n\
    \    import std.algorithm;\n    import std.datetime;\n    import std.math;\n \
    \   import std.random;\n    import std.algorithm;\n    import std.range;\n   \
    \ import std.string;\n    import std.string;\n    import std.array;\n    import\
    \ std.range;\n    import std.math;\n    import std.range;\n    import std.math;\n\
    \    import std.algorithm;\n    import std.math;\n    import std.range;\n    import\
    \ std.conv;\n    import std.range;\n    import std.datetime;\n    import std.string;\n\
    \    import std.string;\n    import std.range;\n    import std.algorithm;\n  \
    \  import std.random;\n    import std.range;\n    import std.math;\n    import\
    \ std.random;\n    import std.string;\n    import std.algorithm;\n    import std.range;\n\
    \    import std.math;\n    import std.math;\n    import std.math;\n    import\
    \ std.math;\n    import std.conv;\n    import std.math;\n    import std.array;\n\
    \    import std.range;\n    import\nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7w1zs0dz.d(90): Error: identifier expected following `import`

    /tmp/tmp7w1zs0dz.d(90): Error: `;` expected

    /tmp/tmp7w1zs0dz.d(104): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7w1zs0dz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ vowels = \"aeiouAEIOU\";\n    string result = \"\";\n    foreach(char c; text)\n\
    \    {\n        if (vowels.find(c) == -1)\n        {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2o2sms2x.d(23): Error: no property `find` for type `string`

    /tmp/tmp2o2sms2x.d(25): Error: slice `result` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2o2sms2x.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    char[]\
    \ vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'};\n    string result\
    \ = \"\";\n    foreach(c; text) \n    {\n        if(!any!(char[])((v) => v ==\
    \ c)(vowels)) \n        {\n            result ~= c;\n        }\n    }\n    return\
    \ result;\n}\n/*\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwhxdrbws.d(30): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwhxdrbws.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ vowels = \"aeiouAEIOU\";\n    string result = \"\";\n    foreach(ch; text)\n\
    \    {\n        if(vowels.find(ch) < 0)\n        {\n            result = result\
    \ ~ ch;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") ==\
    \ \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0kk6oa3h.d(23): Error: no property `find` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0kk6oa3h.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result;\n    bool vowel = false;\n    foreach(char c; text) {\n        c = tolower(c);\n\
    \        switch(c) {\n            case 'a':\n            case 'e':\n         \
    \   case 'i':\n            case 'o':\n            case 'u':\n                vowel\
    \ = true;\n                break;\n            default:\n                result\
    \ ~= c;\n        }\n    }\n    if(vowel) return result;\n    else return text;\n\
    }\n/*\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2ed43se8.d(38): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2ed43se8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ vowels = \"aeiouAEIOU\";\n    string ret = \"\";\n    foreach(c; text) {\n \
    \       if(vowels.find(c) == -1) {\n            ret ~= c;\n        }\n    }\n\
    \    return ret;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n   \
    \ assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\")\
    \ == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxkn7peyv.d(22): Error: no property `find` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxkn7peyv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 0
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ new_text;\n    foreach(char c; text)\n    {\n        if(c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I' || c\
    \ == 'O' || c == 'U')\n        {\n            continue;\n        }\n        else\n\
    \        {\n            new_text ~= c;\n        }\n    }\n    return new_text;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ listOfVowels = \"aeiouAEIOU\";\n    // create a new string from text without\
    \ vowels\n    string withoutVowels = \"\";\n    foreach(int i; 0 .. text.length)\n\
    \    {\n        if (listOfVowels.find(text[i]) == -1)\n        {\n           \
    \ withoutVowels ~= text[i];\n        }\n    }\n    return withoutVowels;\n}\n\
    //@+node:gcross.20110309024201.1468: *3* Two-Complement Checksum\n/*\nunittest\n\
    {\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"\
    fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_oje3h33.d(32): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_oje3h33.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 0
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result;\n    foreach(c; text) \n    {\n        if (c == 'a' || c == 'A' || c\
    \ == 'e' || c == 'E' || c == 'i' || c == 'I' || c == 'o' || c == 'O' || c == 'u'\
    \ || c == 'U') \n        {\n            continue;\n        }\n        result ~=\
    \ c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    immutable\
    \ vowels = \"aeiouAEIOU\";\n    string result = \"\";\n    for (size_t i = 0;\
    \ i < text.length; i++)\n    {\n        if (vowels.find(text[i]) == -1)\n    \
    \    {\n            result ~= text[i];\n        }\n    }\n    return result;\n\
    }\n/*\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdlhj_o_l.d(30): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdlhj_o_l.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    char[]\
    \ vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'};\n    string no_vowels\
    \ = \"\";\n    foreach(char c; text) {\n        if (c in vowels) {\n         \
    \   continue;\n        }\n        no_vowels ~= c;\n    }\n    return no_vowels;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpocek0usw.d(19): Error: a struct is not a valid initializer for
    a `char[]`

    /tmp/tmpocek0usw.d(22): Error: incompatible types for `(c) in (vowels)`: `char`
    and `char[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpocek0usw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 0
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result;\n    foreach(char c; text)\n    {\n        switch(c)\n        {\n  \
    \          case 'a':\n            case 'e':\n            case 'i':\n         \
    \   case 'o':\n            case 'u':\n            case 'A':\n            case\
    \ 'E':\n            case 'I':\n            case 'O':\n            case 'U':\n\
    \                break;\n            default:\n                result ~= c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{ \n    char[]\
    \ vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'];\n    char[] textArray\
    \ = text.toCharArray();\n    foreach(v; vowels)\n    {\n        textArray = textArray.filter!(ch\
    \ => ch != v)();\n    }\n    return textArray.join(\"\");\n}\nunittest\n{\n  \
    \  alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"\
    fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp133zev50.d(20): Error: no property `toCharArray` for type `string`

    /tmp/tmp133zev50.d(23): Error: no property `filter` for type `char[]`

    /tmp/tmp133zev50.d(25): Error: no property `join` for type `char[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp133zev50.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result = \"\";\n    char lower;\n    for (int i = 0; i < text.length; i++) {\n\
    \        lower = tolower(text[i]);\n        if (!(lower == 'a' || lower == 'e'\
    \ || lower == 'i' || lower == 'o' || lower == 'u')) {\n            result += text[i];\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8gtlaagw.d(22): Error: undefined identifier `tolower`, did you
    mean variable `lower`?

    /tmp/tmp8gtlaagw.d(24): Error: slice `result` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8gtlaagw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 0
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result = \"\";\n    foreach(c; text) \n    {\n        if(c != 'a' && c != 'A'\
    \ && c != 'e' && c != 'E' && c != 'i' && c != 'I' && c != 'o' && c != 'O' && c\
    \ != 'u' && c != 'U') \n        {\n            result ~= c;\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    immutable\
    \ string vowels = \"aeiouAEIOU\";\n    string result = \"\";\n    foreach(c; text)\n\
    \    {\n        if (vowels.find(c) == -1) \n        {\n            result ~= c;\n\
    \        }\n    }\n    return result;\n}\n/*\nunittest\n{\n    alias candidate\
    \ = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") ==\
    \ \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpw05jctu6.d(30): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw05jctu6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 0
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ no_vowels;\n    foreach(c; text) \n    {\n        if (c != 'a' && c != 'e' &&\
    \ c != 'i' && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c !=\
    \ 'O' && c != 'U') \n        {\n            no_vowels ~= c;\n        }\n    }\n\
    \    return no_vowels;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    foreach(char\
    \ c;text)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c\
    \ == 'u' || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n      \
    \  {\n            text = text[0..text.length-1];\n        }\n    }\n    return\
    \ text;\n}\n/*\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkcqrmfm3.d(28): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkcqrmfm3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ vowels = \"aeiouAEIOU\";\n    string textWithoutVowels = \"\";\n    foreach(character;\
    \ text)\n    {\n        if(vowels.indexOf(character) == -1)\n        {\n     \
    \       textWithoutVowels ~= character;\n        }\n    }\n    return textWithoutVowels;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8p499l5n.d(23): Error: no property `indexOf` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8p499l5n.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result = \"\";\n    string vowels = \"aeiou\";\n    foreach(ch; text)\n    {\n\
    \        if (vowels.find(toLower(ch)) == -1)\n        {\n            result ~=\
    \ ch;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") ==\
    \ \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphvjr58za.d(23): Error: no property `find` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphvjr58za.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    text\
    \ = replace(text, \"a\", \"\");\n    text = replace(text, \"e\", \"\");\n    text\
    \ = replace(text, \"i\", \"\");\n    text = replace(text, \"o\", \"\");\n    text\
    \ = replace(text, \"u\", \"\");\n    text = replace(text, \"A\", \"\");\n    text\
    \ = replace(text, \"E\", \"\");\n    text = replace(text, \"I\", \"\");\n    text\
    \ = replace(text, \"O\", \"\");\n    text = replace(text, \"U\", \"\");\n    return\
    \ text;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9k1l282r.d(19): Error: undefined identifier `replace`

    /tmp/tmp9k1l282r.d(20): Error: undefined identifier `replace`

    /tmp/tmp9k1l282r.d(21): Error: undefined identifier `replace`

    /tmp/tmp9k1l282r.d(22): Error: undefined identifier `replace`

    /tmp/tmp9k1l282r.d(23): Error: undefined identifier `replace`

    /tmp/tmp9k1l282r.d(24): Error: undefined identifier `replace`

    /tmp/tmp9k1l282r.d(25): Error: undefined identifier `replace`

    /tmp/tmp9k1l282r.d(26): Error: undefined identifier `replace`

    /tmp/tmp9k1l282r.d(27): Error: undefined identifier `replace`

    /tmp/tmp9k1l282r.d(28): Error: undefined identifier `replace`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9k1l282r.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    //\
    \ your code here\n    return \"\";\n}\n/*\nunittest\n{\n    alias candidate =\
    \ remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") ==\
    \ \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpezvj26xw.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpezvj26xw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    text\
    \ = remove(text, 'a');\n    text = remove(text, 'e');\n    text = remove(text,\
    \ 'i');\n    text = remove(text, 'o');\n    text = remove(text, 'u');\n    text\
    \ = remove(text, 'A');\n    text = remove(text, 'E');\n    text = remove(text,\
    \ 'I');\n    text = remove(text, 'O');\n    text = remove(text, 'U');\n    return\
    \ text;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb_ypnhx_.d(19): Error: undefined identifier `remove`

    /tmp/tmpb_ypnhx_.d(20): Error: undefined identifier `remove`

    /tmp/tmpb_ypnhx_.d(21): Error: undefined identifier `remove`

    /tmp/tmpb_ypnhx_.d(22): Error: undefined identifier `remove`

    /tmp/tmpb_ypnhx_.d(23): Error: undefined identifier `remove`

    /tmp/tmpb_ypnhx_.d(24): Error: undefined identifier `remove`

    /tmp/tmpb_ypnhx_.d(25): Error: undefined identifier `remove`

    /tmp/tmpb_ypnhx_.d(26): Error: undefined identifier `remove`

    /tmp/tmpb_ypnhx_.d(27): Error: undefined identifier `remove`

    /tmp/tmpb_ypnhx_.d(28): Error: undefined identifier `remove`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb_ypnhx_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n\tstring\
    \ ret = \"\";\n\tfor (size_t i = 0; i < text.length; i++) \n\t{\n\t\tswitch (tolower(text[i]))\
    \ \n\t\t{\n\t\t\tcase 'a':\n\t\t\tcase 'e':\n\t\t\tcase 'i':\n\t\t\tcase 'o':\n\
    \t\t\tcase 'u':\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tret ~= text[i];\n\t\t\
    }\n\t}\n\treturn ret;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpw6_b1_h0.d(22): Error: undefined identifier `tolower`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw6_b1_h0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result;\n    foreach(char letter; text) \n    {\n        if(!isVowel(letter))\
    \ \n        {\n            result ~= letter;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2i1cmlf4.d(22): Error: undefined identifier `isVowel`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2i1cmlf4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    import\
    \ std.string;\n    //std.string.tolower(string a);\n    text = tolower(text);\n\
    \    string result = \"\";\n    string vowels = \"aeiou\";\n    foreach(ch; text)\n\
    \    {\n        if(vowels.find(ch) == -1)\n        {\n            result ~= ch;\n\
    \        }\n    }\n    return result;\n}\n/*\n    Basic tests\n*/\nunittest\n\
    {\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"\
    fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppbdps8p7.d(21): Error: undefined identifier `tolower`, did you
    mean alias `toLower`?

    /tmp/tmppbdps8p7.d(26): Error: no property `find` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppbdps8p7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ without_vowels = text;\n    foreach(char c; without_vowels)\n    {\n       \
    \ if (isVowel(c))\n        {\n            without_vowels = without_vowels[0..c]\
    \ ~ without_vowels[c+1..$];\n        }\n    }\n    return without_vowels;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxfjax1e5.d(22): Error: undefined identifier `isVowel`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxfjax1e5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result = \"\";\n    foreach(char letter; text)\n    {\n        if (tolower(letter)\
    \ != 'a' && tolower(letter) != 'e' && tolower(letter) != 'i' && tolower(letter)\
    \ != 'o' && tolower(letter) != 'u')\n        {\n            result ~= letter;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk5v44f9e.d(22): Error: undefined identifier `tolower`

    /tmp/tmpk5v44f9e.d(22): Error: undefined identifier `tolower`

    /tmp/tmpk5v44f9e.d(22): Error: undefined identifier `tolower`

    /tmp/tmpk5v44f9e.d(22): Error: undefined identifier `tolower`

    /tmp/tmpk5v44f9e.d(22): Error: undefined identifier `tolower`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk5v44f9e.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ vowels = \"AEIOUaeiou\";\n    string result = \"\";\n    foreach(c; text)\n\
    \    {\n        if(vowels.indexOf(c) == -1)\n        {\n            result ~=\
    \ c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") ==\
    \ \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp07b3osf1.d(23): Error: no property `indexOf` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp07b3osf1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ vowels = \"aeiouAEIOU\";\n    string no_vowels = \"\";\n    for (int i = 0;\
    \ i < text.length; i++)\n    {\n        if (vowels.findFirstOf(text[i]) == -1)\n\
    \        {\n            no_vowels += text[i];\n        }\n    }\n    return no_vowels;\n\
    }\n/*\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdlysskwz.d(30): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdlysskwz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result = \"\";\n    foreach(ch; text)\n    {\n        if (is_vowel(ch))\n  \
    \          continue;\n        result ~= ch;\n    }\n    return result;\n}\n \n\
    /*\n    is_vowel is a function that returns true if char is vowel, otherwise false.\n\
    \    >>> is_vowel('a')\n    true\n    >>> is_vowel('A')\n    true\n    >>> is_vowel('b')\n\
    \    false\n    >>> is_vowel('x')\n    false\n*/\nunittest\n{\n    alias candidate\
    \ = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") ==\
    \ \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp00txjh4i.d(22): Error: undefined identifier `is_vowel`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp00txjh4i.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int\
    \ i;\n    string newString = \"\";\n    int start = 0;\n    int end = text.length;\n\
    \    int length = end - start;\n    int pos;\n    string vowels = \"aeiouAEIOU\"\
    ;\n    for (i = 0; i < length; i++)\n    {\n        pos = text.findFirstOf(vowels,\
    \ start, end - start);\n        if (pos < 0)\n        {\n            newString\
    \ = text.substr(start, end - start);\n            break;\n        }\n        else\n\
    \        {\n            newString += text.substr(start, pos - start);\n      \
    \      start = pos + 1;\n        }\n    }\n    return newString;\n}\nunittest\n\
    {\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"\
    fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpv9tr48qh.d(22): Error: cannot implicitly convert expression `text.length`
    of type `ulong` to `int`

    /tmp/tmpv9tr48qh.d(28): Error: no property `findFirstOf` for type `string`

    /tmp/tmpv9tr48qh.d(31): Error: no property `substr` for type `string`

    /tmp/tmpv9tr48qh.d(36): Error: no property `substr` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv9tr48qh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    if\
    \ (text == \"\")\n        return \"\";\n    else if (text[0] == 'a' || text[0]\
    \ == 'e' || text[0] == 'i' || text[0] == 'o' || text[0] == 'u' || text[0] == 'A'\
    \ || text[0] == 'E' || text[0] == 'I' || text[0] == 'O' || text[0] == 'U')\n \
    \       return remove_vowels(text[1..$]);\n    else\n        return text[0..0]\
    \ ~ remove_vowels(text[1..$]);\n}\n// find_longest_word is a function that takes\
    \ array of strings and returns \n// a string with the longest word.\n// >>> find_longest_word([])\n\
    // \"\"\n// >>> find_longest_word([\"Hello\", \"World\", \"of\", \"D\", \"todo\"\
    ])\n// \"Hello\"\n// >>> find_longest_word([\"Hello\", \"D\", \"todo\"])\n// \"\
    Hello\"\n// >>> find_longest_word([\"This\", \"is\", \"a\", \"string\"])\n// \"\
    string\"\nstring find_longest_word(string [] words)\n{\n    int i = 0;\n    int\
    \ max = 0;\n    int index = 0;\n    while (i < words.length) {\n        if (words[i].length\
    \ > max) {\n            max = words[i].length;\n            index = i;\n     \
    \   }\n        i = i + 1;\n    }\n    return words[index];\n}\n// count_spaces\
    \ is a function that takes string and returns number of spaces.\n// >>> count_spaces(\"\
    \")\n// 0\n// >>> count_spaces(\"abc\")\n// 0\n// >>> count_spaces(\"a b\")\n\
    // 1\n// >>> count_spaces(\"a  b\")\n// 2\n// >>> count_spaces(\"a  b \")\n//\
    \ 2\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0d6igo3s.d(43): Error: cannot implicitly convert expression `words[cast(ulong)i].length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0d6igo3s.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{ \n    return\
    \ text.replace('a','').replace('e','').replace('i','').replace('o','').replace('u','');\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp04mpju5i.d(19): Error: unterminated character constant

    /tmp/tmp04mpju5i.d(19): Error: unterminated character constant

    /tmp/tmp04mpju5i.d(19): Error: unterminated character constant

    /tmp/tmp04mpju5i.d(19): Error: unterminated character constant

    /tmp/tmp04mpju5i.d(19): Error: unterminated character constant

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp04mpju5i.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    return\
    \ text.filter!(x => x != 'a' && x != 'e' && x != 'i' && x != 'o' && x != 'u' &&\
    \ x != 'A' && x != 'E' && x != 'I' && x != 'O' && x != 'U');\n}\nunittest\n{\n\
    \    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"\
    fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzgcd79_2.d(19): Error: no property `filter` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzgcd79_2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 0
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n\tstring\
    \ result = \"\";\n\t// TODO: your code here\n\t\n\t//loop through all letters\
    \ in the string\n\tfor (uint i = 0; i < text.length; i++)\n\t{\n\t\t//test if\
    \ the letter is a vowel\n\t\tif (text[i] != 'a' && text[i] != 'e' && text[i] !=\
    \ 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A' && text[i] != 'E'\
    \ && text[i] != 'I' && text[i] != 'O' && text[i] != 'U')\n\t\t{\n\t\t\t//add the\
    \ letter to the result string if it isnt a vowel\n\t\t\tresult ~= text[i];\n\t\
    \t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ _vowels = \"aeiou\";\n    string result = \"\";\n    uint len = text.length;\n\
    \    for (uint i = 0; i < len; i++) \n    {\n        char c = text[i];\n     \
    \   if (_vowels.find(c) == -1)\n            result += c;\n    }\n    return result;\n\
    }\n/*\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3brwddbx.d(30): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3brwddbx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ new_text = \"\";\n    for (int i = 0; i < text.length; i++)\n    {\n       \
    \ if (text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' &&\
    \ text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i]\
    \ != 'O' && text[i] != 'U')\n        {\n            new_text += text[i];\n   \
    \     }\n    }\n    return new_text;\n}\n/*\nunittest\n{\n    alias candidate\
    \ = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") ==\
    \ \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdn_km_x4.d(29): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdn_km_x4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result = \"\";\n    if (text.empty)\n        return result;\n    for (int i\
    \ = 0; i < text.length; i++) \n    {\n        if (text[i] != 'a' && text[i] !=\
    \ 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u' && text[i] != 'A'\
    \ && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i] != 'U')\n \
    \           result += text[i];\n    }\n    return result;\n}\n/*\nunittest\n{\n\
    \    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"\
    fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp51nda68_.d(29): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp51nda68_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result = \"\";\n    foreach( c; text )\n    {\n        if( c != 'a' && c !=\
    \ 'e' && c != 'i' && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I'\
    \ && c != 'O' && c != 'U' )\n        {\n            result ~= c;\n        }\n\
    \    }\n    return result;\n}\n/*\nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6nc4j5o_.d(29): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6nc4j5o_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ ans = \"\";\n    for (int i = 0; i < text.length; i++)\n    {\n        if (text[i]\
    \ == 'a' || text[i] == 'A' || text[i] == 'e' || text[i] == 'E' || text[i] == 'i'\
    \ || text[i] == 'I' || text[i] == 'o' || text[i] == 'O' || text[i] == 'u' || text[i]\
    \ == 'U')\n        {\n            ans = ans;\n        }\n        else \n     \
    \   {\n            ans = ans + text[i];\n        }\n    }\n    return ans;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqooaqgjd.d(28): Error: incompatible types for `(ans) + (text[cast(ulong)i])`:
    `string` and `immutable(char)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqooaqgjd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result = \"\";\n    int text_len = text.length;\n    string vowels = \"aeiou\"\
    ;\n    int vowels_len = vowels.length;\n    for (int i = 0; i < text_len; i++)\n\
    \    {\n        int a = 0;\n        for (int j = 0; j < vowels_len; j++)\n   \
    \     {\n            if (text[i] == vowels[j])\n            {\n              \
    \  a = 1;\n                break;\n            }\n        }\n        if (a ==\
    \ 0)\n        {\n            result = result ~ text[i];\n        }\n    }\n  \
    \  return result;\n}\n/*\nunittest\n{\n    alias candidate = remove_vowels;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmph2qde7tt.d(41): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph2qde7tt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    const\
    \ string vowels = \"aeiouAEIOU\";\n    auto result = \"\";\n    for (int i = 0;\
    \ i < text.length; i++)\n    {\n        auto found = vowels.find(text[i]);\n \
    \       if (found == -1)\n        {\n            result += text[i];\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpewiy_j1y.d(23): Error: no property `find` for type `const(string)`

    /tmp/tmpewiy_j1y.d(26): Error: slice `result` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpewiy_j1y.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n\tstring\
    \ result = \"\";\n\tfor (int i = 0; i < text.length; i++)\n\t{\n\t\tif (!\"aeiouAEIOU\"\
    .canFind(text[i]))\n\t\t{\n\t\t\tresult ~= text[i];\n\t\t}\n\t}\n\treturn result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0ek6botd.d(22): Error: no property `canFind` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0ek6botd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 0
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ s = \"\";\n    foreach(c; text)\n    {\n        if(c!='a' && c!='e' && c!='i'\
    \ && c!='o' && c!='u' && c!='A' && c!='E' && c!='I' && c!='O' && c!='U')\n   \
    \     {\n            s ~= c;\n        }\n    }\n    return s;\n}\nunittest\n{\n\
    \    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"\
    fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ non_vowels = \"\";\n    int len = text.length;\n    for (int i = 0; i < len;\
    \ i++) {\n        if (tolower(text[i]) != 'a' && tolower(text[i]) != 'e' && tolower(text[i])\
    \ != 'i' && tolower(text[i]) != 'o' && tolower(text[i]) != 'u') {\n          \
    \  non_vowels += text[i];\n        }\n    }\n    return non_vowels;\n}\nunittest\n\
    {\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"\
    fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbx4zx368.d(20): Error: cannot implicitly convert expression `text.length`
    of type `ulong` to `int`

    /tmp/tmpbx4zx368.d(22): Error: undefined identifier `tolower`

    /tmp/tmpbx4zx368.d(22): Error: undefined identifier `tolower`

    /tmp/tmpbx4zx368.d(22): Error: undefined identifier `tolower`

    /tmp/tmpbx4zx368.d(22): Error: undefined identifier `tolower`

    /tmp/tmpbx4zx368.d(22): Error: undefined identifier `tolower`

    /tmp/tmpbx4zx368.d(23): Error: slice `non_vowels` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbx4zx368.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ vowels = \"aeiouAEIOU\";\n    return replace(text, vowels, \"\");\n}\nunittest\n\
    {\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"\
    fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpykj6pitt.d(20): Error: undefined identifier `replace`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpykj6pitt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result = \"\";\n    string vowels = \"aeiouAEIOU\";\n    foreach(char c; text)\n\
    \    {\n        if (vowels.find(c) == -1)\n        {\n            result ~= c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwew38vpg.d(23): Error: no property `find` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwew38vpg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    text\
    \ = replace(text, \"a\", \"\");\n    text = replace(text, \"e\", \"\");\n    text\
    \ = replace(text, \"i\", \"\");\n    text = replace(text, \"o\", \"\");\n    text\
    \ = replace(text, \"u\", \"\");\n    text = replace(text, \"A\", \"\");\n    text\
    \ = replace(text, \"E\", \"\");\n    text = replace(text, \"I\", \"\");\n    text\
    \ = replace(text, \"O\", \"\");\n    text = replace(text, \"U\", \"\");\n    return\
    \ text;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9k1l282r.d(19): Error: undefined identifier `replace`

    /tmp/tmp9k1l282r.d(20): Error: undefined identifier `replace`

    /tmp/tmp9k1l282r.d(21): Error: undefined identifier `replace`

    /tmp/tmp9k1l282r.d(22): Error: undefined identifier `replace`

    /tmp/tmp9k1l282r.d(23): Error: undefined identifier `replace`

    /tmp/tmp9k1l282r.d(24): Error: undefined identifier `replace`

    /tmp/tmp9k1l282r.d(25): Error: undefined identifier `replace`

    /tmp/tmp9k1l282r.d(26): Error: undefined identifier `replace`

    /tmp/tmp9k1l282r.d(27): Error: undefined identifier `replace`

    /tmp/tmp9k1l282r.d(28): Error: undefined identifier `replace`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9k1l282r.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    text\
    \ = tolower(text);\n    for (int i = 0; i < text.length; i++)\n    {\n       \
    \ if (text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' ||\
    \ text[i] == 'u')\n        {\n            text = text.erase(i,1);\n          \
    \  i--;\n        }\n    }\n    return text;\n}\nunittest\n{\n    alias candidate\
    \ = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") ==\
    \ \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqqapzm5o.d(19): Error: undefined identifier `tolower`

    /tmp/tmpqqapzm5o.d(24): Error: no property `erase` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqqapzm5o.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result = \"\";\n    text = toLowerCase(text);\n    foreach(c; text) \n    {\n\
    \        if(c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u') \n     \
    \   {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"\
    fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2pfa55dz.d(20): Error: undefined identifier `toLowerCase`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2pfa55dz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ temp = \"\";\n    for (int i = 0; i < text.length; i++)\n    {\n        if (text[i]\
    \ != 'a' && text[i] != 'A' && text[i] != 'e' && text[i] != 'E' && text[i] != 'i'\
    \ && text[i] != 'I' && text[i] != 'o' && text[i] != 'O' && text[i] != 'u' && text[i]\
    \ != 'U')\n        {\n            temp += text[i];\n        }\n    }\n    return\
    \ temp;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6il5ui5z.d(24): Error: slice `temp` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6il5ui5z.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result;\n    for (int i = 0; i < text.length; i++) \n    {\n        if (text[i]\
    \ == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u'\
    \ || text[i] == 'A' || text[i] == 'E' || text[i] == 'I' || text[i] == 'O' || text[i]\
    \ == 'U') {\n            continue;\n        }\n        result += text[i];\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp64ofvf4e.d(25): Error: slice `result` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp64ofvf4e.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    text\
    \ = text.tolower();\n    char[] res = text.dup;\n    foreach(int i,char c; res)\n\
    \    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\n\
    \        {\n            res.remove(i);\n        }\n    }\n    return res.join(\"\
    \");\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5nha_5jf.d(19): Error: no property `tolower` for type `string`

    /tmp/tmp5nha_5jf.d(25): Error: no property `remove` for type `char[]`

    /tmp/tmp5nha_5jf.d(28): Error: no property `join` for type `char[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5nha_5jf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result = \"\";\n    for (in\nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmebkug7d.d(20): Error: found `in` instead of statement

    /tmp/tmpmebkug7d.d(28): Error: found `;` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmebkug7d.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ r;\n    foreach(c; text) {\n        if (!is_vowel(c)) r ~= c;\n    }\n    return\
    \ r;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_be9l4lj.d(21): Error: undefined identifier `is_vowel`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_be9l4lj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    foreach(immutable\
    \ char letter; text)\n    {\n        if (letter == 'a' || letter == 'e' || letter\
    \ == 'i' || letter == 'o' || letter == 'u')\n        {\n            text = text.replace(letter,\
    \ \"\");\n        }\n    }\n    return text;\n}\nunittest\n{\n    alias candidate\
    \ = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") ==\
    \ \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4u_ll346.d(23): Error: no property `replace` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4u_ll346.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result;\n    foreach(char c; text) \n    {\n        if(c != 'a' && c != 'e'\
    \ && c != 'i' && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c\
    \ != 'O' && c != 'U')\n        {\n            result ~= c;\n        }\n    }\n\
    \    return result;\n}\n/*\nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpn5kkwba3.d(29): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn5kkwba3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result = \"\";\n    int len = text.length;\n    for (int i = 0; i < len; i++)\n\
    \    {\n        char c = text[i];\n        if (c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c\
    \ != 'U')\n        {\n            result += c;\n        }\n    }\n    return result;\n\
    }\n/*\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpikk9hnwg.d(31): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpikk9hnwg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n  string\
    \ result = \"\";\n  foreach(character; text) \n  {\n    if (character != 'a' &&\
    \ character != 'e' && character != 'i' && character != 'o' && character != 'u')\
    \ \n    {\n      result ~= character;\n    }\n  }\n  return result;\n}\n/*\nunittest\n\
    {\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"\
    fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphrurwlw2.d(29): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphrurwlw2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ vowels = \"aeiouAEIOU\";\n    string new_text = \"\";\n    for (int i = 0; i\
    \ < text.length; i++)\n    {\n        if (vowels.find(text[i]) < 0)\n        {\n\
    \            new_text += text[i];\n        }\n    }\n    return new_text;\n}\n\
    /*\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0ny0zg0f.d(30): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0ny0zg0f.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n  string\
    \ new_text = \"\";\n  for (size_t i = 0; i < text.length(); i++) \n  {\n    char\
    \ c = text[i];\n    if (!(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c ==\
    \ 'u' || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')) \n    {\n\
    \      new_text += c;\n    }\n  }\n  return new_text;\n}\n/*\nunittest\n{\n  \
    \  alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"\
    fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3on1yz3t.d(30): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3on1yz3t.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 0
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ s = \"\";\n    foreach(char c; text) \n    {\n        if(c != 'a' && c != 'e'\
    \ && c != 'i' && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c\
    \ != 'O' && c != 'U') \n        {\n            s ~= c;\n        }\n    }\n   \
    \ return s;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int\
    \ textSize = text.length;\n    int outputSize = textSize;\n    string output =\
    \ \"\";\n    int[] vowels = [97, 101, 105, 111, 117]; // Decimal values for lower\
    \ case a, e, i, o, u\n    for (int i = 0; i < textSize; i++)\n    {\n        char\
    \ currentChar = text[i];\n        int currentCharValue = cast(int)currentChar;\n\
    \        if (currentCharValue >= 97 && currentCharValue <= 122)\n        {\n \
    \           for (int j = 0; j < 5; j++)\n            {\n                if (currentCharValue\
    \ == vowels[j])\n                {\n                    outputSize--;\n      \
    \              break;\n                }\n            }\n        }\n    }\n  \
    \  if (outputSize > 0)\n    {\n        char[] outputList = new char[outputSize];\n\
    \        int p = 0;\n        for (int i = 0; i < textSize; i++)\n        {\n \
    \           char currentChar = text[i];\n            int currentCharValue = cast(int)currentChar;\n\
    \            if (currentCharValue >= 97 && currentCharValue <= 122)\n        \
    \    {\n                for (int j = 0; j < 5; j++)\n                {\n     \
    \               if (currentCharValue == vowels[j])\n                    {\n  \
    \                      break;\n                    }\n                    else\
    \ if (j == 4)\n                    {\n                        outputList[p] =\
    \ currentChar;\n                        p++;\n                    }\n        \
    \        }\n            }\n            else\n            {\n                outputList[p]\
    \ = currentChar;\n                p++;\n            }\n        }\n        foreach\
    \ (char c; outputList)\n        {\n            output ~= c;\n        }\n    }\n\
    \    return output;\n}\n/*\nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppbwzdue3.d(75): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppbwzdue3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    assert(text\
    \ != \"\");\n    string result;\n    foreach(char c; text)\n    {\n        if(c\
    \ == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'A' || c == 'E'\
    \ || c == 'I' || c == 'O' || c == 'U')\n        {\n            continue;\n   \
    \     }\n        else\n        {\n            result ~= c;\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpu2gmbzzb.d(19): Assertion failure

    ----------------

    ??:? _d_assertp [0x4280c5]

    ??:? immutable(char)[] tmpu2gmbzzb.remove_vowels(immutable(char)[]) [0x427adc]

    ??:? void tmpu2gmbzzb.__unittest_L34_C1() [0x427bcc]

    ??:? void tmpu2gmbzzb.__modtest() [0x427e74]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c83f]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b74e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430125]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4305d4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4300b1]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b725]

    ??:? runModuleUnitTests [0x42c615]

    ??:? void rt.dmain2._d_run_main(int, char**, ex'
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{ \n    string\
    \ result;\n    foreach(ch; text)\n    {\n        if(!is_vowel(ch))\n        {\n\
    \            result ~= ch;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"\
    fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpm2ri097t.d(22): Error: undefined identifier `is_vowel`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm2ri097t.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n\tint\
    \ length = text.length;\n\tint i = 0;\n\tstring result = \"\";\n\twhile (i < length)\n\
    \t{\n\t\tif (text[i] != 'a' && text[i] != 'A' && text[i] != 'e' && text[i] !=\
    \ 'E' && text[i] != 'i' && text[i] != 'I' && text[i] != 'o' && text[i] != 'O'\
    \ && text[i] != 'u' && text[i] != 'U')\n\t\t{\n\t\t\tresult = result + text[i];\n\
    \t\t}\n\t\ti++;\n\t}\n\treturn result;\n}\n/*\nunittest\n{\n    alias candidate\
    \ = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") ==\
    \ \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3txei_j0.d(32): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3txei_j0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 0
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result;\n    foreach(c; text)\n    {\n        if(c == 'a' || c == 'e' || c ==\
    \ 'i' || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I' || c == 'O'\
    \ || c == 'U')\n        {\n            continue;\n        }\n        else\n  \
    \      {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ vowels = \"aeiouAEIOU\";\n    string result = \"\";\n    for (char c : text)\
    \ \n    {\n        if (vowels.find(c) == -1) \n        {\n            result +=\
    \ c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") ==\
    \ \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgea_ds9l.d(21): Error: semicolon expected, not `:`

    /tmp/tmpgea_ds9l.d(21): Error: expression expected, not `:`

    /tmp/tmpgea_ds9l.d(21): Error: found `text` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgea_ds9l.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    char[]\
    \ vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'];\n    string no_vowels\
    \ = \"\";\n    foreach(char c; text)\n    {\n        if (c in vowels)\n      \
    \  {\n            continue;\n        }\n        else\n        {\n            no_vowels\
    \ ~= c;\n        }\n    }\n    return no_vowels;\n}\n// Please write your own\
    \ tests here\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpiuz_ez_h.d(23): Error: incompatible types for `(c) in (vowels)`:
    `char` and `char[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiuz_ez_h.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    return\
    \ text.replace(\"a\", \"\").replace(\"e\", \"\").replace(\"i\", \"\").replace(\"\
    o\", \"\").replace(\"u\", \"\");\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp70tswurf.d(19): Error: no property `replace` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp70tswurf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ vowels = \"aeiouAEIOU\";\n    string text_without_vowels = \"\";\n    for (size_t\
    \ i = 0; i < text.length(); i++)\n    {\n        if (vowels.find(text[i]) == -1)\n\
    \        {\n            text_without_vowels += text[i];\n        }\n    }\n  \
    \  return text_without_vowels;\n}\n/*\nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpz_zyfr0a.d(30): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz_zyfr0a.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 0
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result = \"\";\n    foreach(char ch; text)\n    {\n        if(ch != 'a' && ch\
    \ != 'e' && ch != 'i' && ch != 'o' && ch != 'u' && ch != 'A' && ch != 'E' && ch\
    \ != 'I' && ch != 'O' && ch != 'U')\n        {\n            result = result ~\
    \ ch;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") ==\
    \ \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{ \n    string\
    \ ans = \"\";\n    for (int i = 0; i < text.length; i++) {\n        if (text[i]\
    \ == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u'\
    \ || text[i] == 'A' || text[i] == 'E' || text[i] == 'I' || text[i] == 'O' || text[i]\
    \ == 'U') {\n            continue;\n        }\n        ans += text[i];\n    }\n\
    \    return ans;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n   \
    \ assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\")\
    \ == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphehevloo.d(24): Error: slice `ans` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphehevloo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result = \"\";\n    foreach(char c; text) \n    {\n        if(!c.isVowel) \n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp994ojmrr.d(22): Error: no property `isVowel` for type `char`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp994ojmrr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    return\
    \ text.replace(\"a\", \"\").replace(\"e\", \"\").replace(\"i\", \"\").replace(\"\
    o\", \"\").replace(\"u\", \"\");\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp70tswurf.d(19): Error: no property `replace` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp70tswurf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ vowels = \"aeiou\";\n    string result = \"\";\n    for (int i = 0; i < text.length;\
    \ i++)\n    {\n        if (vowels.find(text[i]) == -1)\n        {\n          \
    \  result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"\
    fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvw28thot.d(23): Error: no property `find` for type `string`

    /tmp/tmpvw28thot.d(25): Error: slice `result` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvw28thot.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 0
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result;\n    foreach(i,c; text)\n    {\n        if (c != 'a' && c != 'e' &&\
    \ c != 'i' && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c !=\
    \ 'O' && c != 'U') \n        {\n            result ~= c;\n        }\n    }\n \
    \   return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n \
    \   assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result = \"\";\n    for (int i = 0; i < text.length; i++)\n    {\n        if\
    \ (text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i]\
    \ == 'u' || text[i] == 'A' || text[i] == 'E' || text[i] == 'I' || text[i] == 'O'\
    \ || text[i] == 'U')\n        {\n            text[i] = ' ';\n        }\n    }\n\
    \    for (int i = 0; i < text.length; i++)\n    {\n        if (text[i] != ' ')\n\
    \        {\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx5eu9d_4.d(24): Error: cannot modify `immutable` expression `text[cast(ulong)i]`

    /tmp/tmpx5eu9d_4.d(31): Error: slice `result` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx5eu9d_4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ res = \"\";\n    foreach(char c; text)\n    {\n        if(!is_vowel(c))\n  \
    \          res ~= c;\n    }\n    return res;\n}\n/*\nunittest\n{\n    alias candidate\
    \ = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") ==\
    \ \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbdr23hbw.d(27): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbdr23hbw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ vowels = \"aeiou\";\n    string ret = \"\";\n    foreach(string char; text)\n\
    \    {\n        if (vowels.find(char.toLower()) != -1)\n            continue;\n\
    \        ret += char;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate\
    \ = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") ==\
    \ \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjbi6lxow.d(21): Error: no identifier for declarator `string`

    /tmp/tmpjbi6lxow.d(21): Error: found `char` when expecting `;`

    /tmp/tmpjbi6lxow.d(21): Error: expression expected, not `;`

    /tmp/tmpjbi6lxow.d(21): Error: found `text` when expecting `)`

    /tmp/tmpjbi6lxow.d(21): Error: found `)` instead of statement

    /tmp/tmpjbi6lxow.d(25): Error: found `;` when expecting `.` following char

    /tmp/tmpjbi6lxow.d(26): Error: found `}` when expecting identifier following `char`.

    /tmp/tmpjbi6lxow.d(27): Error: found `return` when expecting `;` following statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjbi6lxow.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ vowels = \"aAeEiIoOuU\";\n    string result = \"\";\n    foreach(c; text)\n\
    \    {\n        if(vowels.find(c) == -1)\n        {\n            result ~= c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp102mm29z.d(23): Error: no property `find` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp102mm29z.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ out;\n    text = toLower(text);\n    foreach(c; text)\n    {\n        if(!(c=='a'\
    \ || c=='e' || c=='i' || c=='o' || c=='u'))\n        {\n            out ~= c;\n\
    \        }\n    }\n    return out;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp89mfmr8j.d(19): Error: found `out` when expecting `;` following
    statement

    /tmp/tmp89mfmr8j.d(19): Deprecation: use `{ }` for an empty statement, not `;`

    /tmp/tmp89mfmr8j.d(25): Error: found `out` instead of statement

    /tmp/tmp89mfmr8j.d(28): Error: expression expected, not `out`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp89mfmr8j.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    return\
    \ replace(text, \"aAeEiIoOuU\", \"\");\n}\nunittest\n{\n    alias candidate =\
    \ remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") ==\
    \ \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpz24vt2xq.d(19): Error: undefined identifier `replace`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz24vt2xq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ s = \"\";\n    foreach(char c; text) {\n        if (c.tolower() !in ['a', 'e',\
    \ 'i', 'o', 'u']) {\n            s ~= c;\n        }\n    }\n    return s;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjfe4imfx.d(21): Error: no property `tolower` for type `char`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjfe4imfx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    auto\
    \ result = text.dup;\n    string vowels = \"aeiouAEIOU\";\n    auto it = text.begin;\n\
    \    while (it != text.end) \n    {\n        auto pos = result.find(it.idup);\n\
    \        if (pos != -1) \n        {\n            result = result[0..pos] ~ result[pos+1..$];\n\
    \        }\n        ++it;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") ==\
    \ \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7eruxvmf.d(21): Error: no property `begin` for type `string`

    /tmp/tmp7eruxvmf.d(22): Error: no property `end` for type `string`

    /tmp/tmp7eruxvmf.d(24): Error: no property `find` for type `char[]`

    /tmp/tmp7eruxvmf.d(31): Error: cannot implicitly convert expression `result` of
    type `char[]` to `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7eruxvmf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ vowels = \"aeiou\";\n    string result = \"\";\n    for (int i = 0; i < text.length;\
    \ i++)\n    {\n        if (vowels.find(tolower(text[i])) == -1)\n        {\n \
    \           result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"\
    fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpprw_44_4.d(23): Error: no property `find` for type `string`

    /tmp/tmpprw_44_4.d(25): Error: slice `result` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpprw_44_4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ ret = \"\";\n    for (int i = 0; i < text.length; i++)\n    {\n        if (text[i]\
    \ != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i] != 'u'\
    \ && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O' && text[i]\
    \ != 'U')\n        {\n            ret ~= text[i];\n        }\n    }\n    return\
    \ ret;\n}\n/*\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzj47c63g.d(29): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzj47c63g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int\
    \ text_len = text.length;\n    int i = 0;\n    string no_vowels = \"\";\n    char\
    \ a[] = \"a\";\n    char e[] = \"e\";\n    char i[] = \"i\";\n    char o[] = \"\
    o\";\n    char u[] = \"u\";\n    char A[] = \"A\";\n    char E[] = \"E\";\n  \
    \  char I[] = \"I\";\n    char O[] = \"O\";\n    char U[] = \"U\";\n    for (;\
    \ i < text_len; i++)\n    {\n        if (text[i] != a && text[i] != e && text[i]\
    \ != i && text[i] != o && text[i] != u && text[i] != A && text[i] != E && text[i]\
    \ != I && text[i] != O && text[i] != U)\n        {\n            no_vowels = no_vowels\
    \ ~ text[i];\n        }\n    }\n    return no_vowels;\n}\nunittest\n{\n    alias\
    \ candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") ==\
    \ \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6chz8sxe.d(22): Deprecation: instead of C-style syntax, use D-style
    syntax `char[] a`

    /tmp/tmp6chz8sxe.d(23): Deprecation: instead of C-style syntax, use D-style syntax
    `char[] e`

    /tmp/tmp6chz8sxe.d(24): Deprecation: instead of C-style syntax, use D-style syntax
    `char[] i`

    /tmp/tmp6chz8sxe.d(25): Deprecation: instead of C-style syntax, use D-style syntax
    `char[] o`

    /tmp/tmp6chz8sxe.d(26): Deprecation: instead of C-style syntax, use D-style syntax
    `char[] u`

    /tmp/tmp6chz8sxe.d(27): Deprecation: instead of C-style syntax, use D-style syntax
    `char[] A`

    /tmp/tmp6chz8sxe.d(28): Deprecation: instead of C-style syntax, use D-style syntax
    `char[] E`

    /tmp/tmp6chz8sxe.d(29): Deprecation: instead of C-style syntax, use D-style syntax
    `char[] I`

    /tmp/tmp6chz8sxe.d(30): Deprecation: instead of C-style syntax, use D-style syntax
    `char[] O`

    /tmp/tmp6chz8sxe.d(31): Deprecation: instead of C-style syntax, use D-style syntax
    `char[] U`

    /tmp/tmp6chz8sxe.d(19): Error: cannot implicitly convert expression `text.length`
    of'
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    assert(text.length\
    \ > 0, \"remove_vowels\");\n    //assert((text[0] != 'a' || text[0] != 'e' ||\
    \ text[0] != 'i' || text[0] != 'o' || text[0] != 'u') && text.length == 1, \"\
    remove_vowels\");\n    if(text.length == 1)\n    {\n        if(text[0] == 'a'\
    \ || text[0] == 'e' || text[0] == 'i' || text[0] == 'o' || text[0] == 'u')\n \
    \       {\n            return \"\";\n        }\n        else\n        {\n    \
    \        return text;\n        }\n    }\n    else\n    {\n        if(text[0] ==\
    \ 'a' || text[0] == 'e' || text[0] == 'i' || text[0] == 'o' || text[0] == 'u')\n\
    \        {\n            return remove_vowels(text[1..$]);\n        }\n       \
    \ else\n        {\n            return text[0..0] ~ remove_vowels(text[1..$]);\n\
    \        }\n    }\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n  \
    \  assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpsrv3vigf.d(19): remove_vowels

    ----------------

    ??:? _d_assert_msg [0x42821e]

    ??:? immutable(char)[] tmpsrv3vigf.remove_vowels(immutable(char)[]) [0x427adb]

    ??:? void tmpsrv3vigf.__unittest_L44_C1() [0x427d0c]

    ??:? void tmpsrv3vigf.__modtest() [0x427fb4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c16b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b07a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430049]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4304f8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ffd5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b051]

    ??:? runModuleUnitTests [0x42bf41]

    ??:? void rt.dmain2._d_run_main(int, char**, ext'
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ vowels = \"aeiouAEIOU\";\n    int l = text.length;\n    string res = \"\";\n\
    \    for (int i = 0; i < l; i++)\n    {\n        if (vowels.find(text[i]) == -1)\n\
    \        {\n            res += text[i];\n        }\n    }\n    return res;\n}\n\
    /*\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpcw65tzv7.d(31): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcw65tzv7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    uint\
    \ length = text.length;\n    string result = \"\";\n    if (length == 0) return\
    \ result;\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwzc930im.d(22): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwzc930im.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 0
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ ret = \"\";\n    foreach(c; text)\n    {\n        switch(c)\n        {\n   \
    \         case 'a':\n            case 'e':\n            case 'i':\n          \
    \  case 'o':\n            case 'u':\n            case 'A':\n            case 'E':\n\
    \            case 'I':\n            case 'O':\n            case 'U':\n       \
    \         break;\n            default:\n                ret ~= c;\n        }\n\
    \    }\n    return ret;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163955
- exit_code: 0
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result = \"\";\n    foreach(c; text)\n    {\n        if (c != 'a' && c != 'e'\
    \ && c != 'i' && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c\
    \ != 'O' && c != 'U')\n        {\n            result ~= c;\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ vowels = \"aeiouAEIOU\";\n    int j = 0;\n    string result = \"\";\n    for\
    \ (int i = 0; i < text.length; i++)\n    {\n        if (vowels.find(text[i]) ==\
    \ -1)\n        {\n            result += text[i];\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk2xs6knx.d(24): Error: no property `find` for type `string`

    /tmp/tmpk2xs6knx.d(26): Error: slice `result` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk2xs6knx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result = \"\";\n    foreach(i, c; text)\n    {\n        if (!c.in('a', 'e',\
    \ 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'))\n        {\n            result ~= c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6oxjx0nc.d(22): Error: identifier expected following `.`, not `in`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6oxjx0nc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    return\
    \ text.replace(\"a\", \"\").replace(\"e\", \"\").replace(\"i\", \"\").replace(\"\
    o\", \"\").replace(\"u\", \"\");\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp70tswurf.d(19): Error: no property `replace` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp70tswurf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result;\n    for (int i = 0; i < text.length; i++)\n    {\n        if (!is_vowel(text[i]))\n\
    \        {\n            result ~= text[i];\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_5vs5thl.d(22): Error: undefined identifier `is_vowel`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_5vs5thl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    foreach(c;\
    \ text) \n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c\
    \ == 'u' ||\n            c == 'A' || c == 'E' || c == 'I' || c == 'O' || c ==\
    \ 'U')\n            c = ' ';\n    }\n    text = remove(text, ' ');\n    return\
    \ text;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpcnlpjvtr.d(23): Error: cannot modify `immutable` expression `c`

    /tmp/tmpcnlpjvtr.d(25): Error: undefined identifier `remove`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcnlpjvtr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 0
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    if(text\
    \ == \"\")\n        return \"\";\n    else\n    {\n        char c = text[0];\n\
    \        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'A'\
    \ || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n            return remove_vowels(text[1..$]);\n\
    \        else\n            return c ~ remove_vowels(text[1..$]);\n    }\n}\nunittest\n\
    {\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"\
    fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result;\n    for (int i = 0; i < text.length; i++)\n    {\n        if(text[i]\
    \ == 'a' || text[i] == 'A' ||\n           text[i] == 'e' || text[i] == 'E' ||\n\
    \           text[i] == 'i' || text[i] == 'I' ||\n           text[i] == 'o' ||\
    \ text[i] == 'O' ||\n           text[i] == 'u' || text[i] == 'U')\n        {\n\
    \            result += \"\";\n        }\n        else\n        {\n           \
    \ result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n \
    \   alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"\
    fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdnqopq1i.d(28): Error: slice `result` is not mutable

    /tmp/tmpdnqopq1i.d(32): Error: slice `result` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdnqopq1i.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    return\
    \ replace(replace(replace(replace(replace(text, \"a\", \"\"), \"e\", \"\"), \"\
    i\", \"\"), \"o\", \"\"), \"u\", \"\");\n}\nunittest\n{\n    alias candidate =\
    \ remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") ==\
    \ \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpekrhzd7u.d(19): Error: undefined identifier `replace`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpekrhzd7u.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 0
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ new_text = \"\";\n    for (uint i = 0; i < text.length; i++)\n    {\n      \
    \  if (text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' &&\
    \ text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i]\
    \ != 'O' && text[i] != 'U')\n        {\n            new_text = new_text ~ text[i];\n\
    \        }\n    }\n    return new_text;\n}\nunittest\n{\n    alias candidate =\
    \ remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") ==\
    \ \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ vowels = \"aeiouAEIOU\";\n    foreach(vowel; vowels)\n    {\n        text =\
    \ replace(text, vowel, \"\");\n    }\n    return text;\n}\nunittest\n{\n    alias\
    \ candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") ==\
    \ \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5gezoktx.d(22): Error: undefined identifier `replace`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5gezoktx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ vowels = \"aeiou\";\n    string result = \"\";\n    foreach(ch; text) \n   \
    \ {\n        if (vowels.find(ch.tolower()) == -1)\n            result ~= ch;\n\
    \    }\n    return result;\n}\n/*\nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpa7rh7yus.d(28): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa7rh7yus.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    //\
    \ taking the first string\n    string result = text;\n    // iterating through\
    \ the second string\n    foreach(vowel; \"aeiouAEIOU\")\n    {\n        // replacing\
    \ vowels with empty string\n        result = result.replace(vowel, \"\");\n  \
    \  }\n    return result;\n}\n/*\nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp91mrm5mv.d(29): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp91mrm5mv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ vowels = \"aeiou\";\n    string new_text = \"\";\n    foreach(char c; text)\
    \ \n    {\n        if (vowels.find(c) == -1) \n        {\n            new_text\
    \ ~= c;\n        }\n    }\n    return new_text;\n}\n/*\nunittest\n{\n    alias\
    \ candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") ==\
    \ \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpv4n4omiy.d(30): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv4n4omiy.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ vowels = \"aeiou\";\n    string result = \"\";\n    foreach(char c; text) {\n\
    \        if (vowels.indexOf(tolower(c)) == -1) {\n            result ~= c;\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpuskjs2go.d(22): Error: no property `indexOf` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuskjs2go.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result = \"\";\n    foreach(c; text)\n    {\n        if(!(c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u'))\n        {\n            result ~= c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpywdd0yme.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x428075]

    ??:? void tmpywdd0yme.__unittest_L29_C1() [0x427cb3]

    ??:? void tmpywdd0yme.__modtest() [0x427df8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c70b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b61a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fff1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4304a0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42ff7d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b5f1]

    ??:? runModuleUnitTests [0x42c4e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4284c4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ new_text = \"\";\n    for (int i = 0; i < text.length; i++)\n    {\n       \
    \ if (text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' &&\
    \ text[i] != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i]\
    \ != 'O' && text[i] != 'U')\n        {\n            new_text += text[i];\n   \
    \     }\n    }\n    return new_text;\n}\n/*\nunittest\n{\n    alias candidate\
    \ = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") ==\
    \ \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdn_km_x4.d(29): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdn_km_x4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    //\
    \ char[] vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'];\n    char[]\
    \ vowels = [ 'a', 'e', 'i', 'o', 'u' ];\n    char[] textArray = text.dup;\n  \
    \  int i = 0;\n    while (i < textArray.length) \n    {\n        if (vowels.find(textArray[i])\
    \ != -1)\n        {\n            textArray.remove(i);\n        }\n        else\n\
    \        {\n            i += 1;\n        }\n    }\n    return to!string(textArray);\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4mopjkuh.d(25): Error: no property `find` for type `char[]`

    /tmp/tmp4mopjkuh.d(27): Error: no property `remove` for type `char[]`

    /tmp/tmp4mopjkuh.d(34): Error: template instance `to!string` template `to` is
    not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4mopjkuh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 0
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result = \"\";\n    foreach(c; text)\n    {\n        if(c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I' || c\
    \ == 'O' || c == 'U')\n        {\n            continue;\n        }\n        else\n\
    \        {\n            result ~= c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n\tstring\
    \ vowels=\"aeiou\";\n\t\n\tstring result = \"\";\n\t\n\tforeach(c; text)\n\t{\n\
    \t\tif(!in(c,vowels)) result ~= c;\n\t}\n\t\n\treturn result;\n}\n/*\nunittest\n\
    {\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"\
    fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsjv6dl4s.d(25): Error: expression expected, not `in`

    /tmp/tmpsjv6dl4s.d(30): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsjv6dl4s.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int\
    \ length = text.length;\n    string t = \"\";\n    char c;\n    for (int i = 0;\
    \ i < length; i++)\n    {\n        c = text[i];\n        if (c != 'a' && c !=\
    \ 'e' && c != 'i' && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I'\
    \ && c != 'O' && c != 'U')\n        {\n            t += c;\n        }\n    }\n\
    \    return t;\n}\n/*\nunittest\n{\n    alias candidate = remove_vowels;\n\n \
    \   assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpc51appvu.d(32): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc51appvu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ a = \"\";\n    foreach(c; text)\n    {\n        string n = c.to!string();\n\
    \        if(n != \"a\" && n != \"e\" && n != \"i\" && n != \"o\" && n != \"u\"\
    \ && n != \"A\" && n != \"E\" && n != \"I\" && n != \"O\" && n != \"U\")\n   \
    \     {\n            a = a ~ n;\n        }\n    }\n    return a;\n}\n//\n/*\n\
    \    function count_digits is a function that takes string and returns the number\
    \ of digits.\n    >>> count_digits(\"\")\n    0\n    >>> count_digits(\"abcdef\"\
    )\n    0\n    >>> count_digits(\"aaaaa\")\n    0\n    >>> count_digits(\"12345\"\
    )\n    5\n    >>> count_digits(\"aaBAA1AA123\")\n    4\n    >>> count_digits(\"\
    zbcd1230\")\n    3\n*/\nunittest\n{\n    alias candidate = remove_vowels;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyh95wfzv.d(22): Error: no property `to` for type `immutable(char)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyh95wfzv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    assert(text\
    \ != null);\n    string result = \"\";\n    for (size_t i = 0; i < text.length;\
    \ i++)\n    {\n        if(!text[i].is_vowel())\n        {\n            result\
    \ += text[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") ==\
    \ \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpcs8eesh5.d(23): Error: no property `is_vowel` for type `immutable(char)`

    /tmp/tmpcs8eesh5.d(25): Error: slice `result` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcs8eesh5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 0
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ text_without_vowels = \"\";\n    foreach(char c; text)\n    {\n        if(c\
    \ == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'A' || c == 'E'\
    \ || c == 'I' || c == 'O' || c == 'U') \n        {\n            continue;\n  \
    \      }\n        text_without_vowels ~= c;\n    }\n    return text_without_vowels;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result = \"\";\n    for (int i = 0; i < text.length; i++) \n    {\n        if\
    \ (text[i] != 'a' && text[i] != 'e' && text[i] != 'i' && text[i] != 'o' && text[i]\
    \ != 'u' && text[i] != 'A' && text[i] != 'E' && text[i] != 'I' && text[i] != 'O'\
    \ && text[i] != 'U') \n        {\n            result += text[i];\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6a9j1dl1.d(24): Error: slice `result` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6a9j1dl1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result = \"\";\n    foreach(c; text)\n    {\n        if (!isVowel(c))\n    \
    \    {\n            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"\
    fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7g0s66cr.d(22): Error: undefined identifier `isVowel`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7g0s66cr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 0
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result;\n    foreach(c; text) \n    {\n        if(c == 'a' || c == 'e' || c\
    \ == 'i' || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I' || c == 'O'\
    \ || c == 'U')\n        {\n        }\n        else\n        {\n            result\
    \ ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") ==\
    \ \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    if\
    \ (text == \"\")\n        return \"\";\n    char c = text[0];\n    if (c == 'a'\
    \ || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c\
    \ == 'I' || c == 'O' || c == 'U')\n        return remove_vowels(text[1..$]);\n\
    \    else\n        return text[0..0] ~ remove_vowels(text[1..$]);\n}\nunittest\n\
    {\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"\
    fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpot3plnzc.d(32): unittest failure

    ----------------

    ??:? _d_unittestp [0x4280e5]

    ??:? void tmpot3plnzc.__unittest_L27_C1() [0x427c3e]

    ??:? void tmpot3plnzc.__modtest() [0x427e68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bf4b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42ae5a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fe29]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4302d8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fdb5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42ae31]

    ??:? runModuleUnitTests [0x42bd21]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285a8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    auto\
    \ to_remove = \"aeiouAEIOU\";\n    string result = text;\n    // Iterate over\
    \ a string.\n    foreach (ch; text) \n    {\n        if (to_remove.find(ch) !=\
    \ -1) \n        {\n            result = remove(result, ch);\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2lynp6xq.d(24): Error: no property `find` for type `string`

    /tmp/tmp2lynp6xq.d(26): Error: undefined identifier `remove`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2lynp6xq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result = \"\";\n    foreach(ch; text)\n    {\n        if(ch == 'a' || ch ==\
    \ 'e' || ch == 'i' || ch == 'o' || ch == 'u' ||\n           ch == 'A' || ch ==\
    \ 'E' || ch == 'I' || ch == 'O' || ch == 'U')\n        {\n            //Do nothing\n\
    \        }\n        else\n        {\n            result ~= ch;\n        }\n  \
    \  }\n    return result;\n}\n/*\nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7mp0s541.d(34): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7mp0s541.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result = \"\";\n    foreach(c; text) \n    {\n        if(!isVowel(c))\n    \
    \        result~=c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") ==\
    \ \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjboyt74c.d(22): Error: undefined identifier `isVowel`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjboyt74c.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{ \n  string\
    \ ans = \"\"; \n  for (int i = 0; i < text.length; i++) \n  { \n    if(text[i]\
    \ != 'a' && text[i] != 'e' && text[i] != 'i' && \n       text[i] != 'o' && text[i]\
    \ != 'u' && text[i] != 'A' && \n       text[i] != 'E' && text[i] != 'I' && text[i]\
    \ != 'O' && \n       text[i] != 'U') \n    { \n      ans += text[i]; \n    } \n\
    \  } \n  return ans; \n} \n/*\nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpp3szcjln.d(32): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp3szcjln.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    text\
    \ = toLower(text);\n    string result = \"\";\n    foreach(dchar x; text)\n  \
    \  {\n        if(x == 'a' || x == 'e' || x == 'i' || x == 'o' || x == 'u')\n \
    \       {\n            result = result;\n        }\n        else\n        {\n\
    \            result ~= x;\n        }\n    }\n    return result;\n}\n/*\nunittest\n\
    {\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"\
    fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpj59o3s2z.d(34): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj59o3s2z.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result;\n    foreach(c; text)\n    {\n        switch(tolower(c))\n        {\n\
    \            case 'a':\n            case 'e':\n            case 'i':\n       \
    \     case 'o':\n            case 'u':\n                break;\n            default:\n\
    \                result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"\
    fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe875fk4i.d(22): Error: undefined identifier `tolower`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe875fk4i.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 0
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result = \"\";\n    foreach(char c; text) \n    {\n        if(c == 'a' || c\
    \ == 'A' ||\n           c == 'e' || c == 'E' ||\n           c == 'i' || c == 'I'\
    \ ||\n           c == 'o' || c == 'O' ||\n           c == 'u' || c == 'U')\n \
    \       {\n            // pass\n        }\n        else\n        {\n         \
    \   result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") ==\
    \ \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result = \"\";\n    string vowels = \"AEIOUaeiou\";\n    foreach(wchar ch; text)\n\
    \    {\n        if(vowels.find(ch) == -1)\n        {\n            result ~= ch;\n\
    \        }\n    }\n    return result;\n}\n/*\nunittest\n{\n    alias candidate\
    \ = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") ==\
    \ \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmptph09oxm.d(30): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptph09oxm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n  int\
    \ i;\n  string vowels = \"aeiouAEIOU\";\n  int len = text.length;\n  for (i =\
    \ 0; i < len; i++)\n    if (vowels.indexOf(text[i]) >= 0)\n      text = text.remove(i,\
    \ 1);\n  return text;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmplieqauuv.d(21): Error: cannot implicitly convert expression `text.length`
    of type `ulong` to `int`

    /tmp/tmplieqauuv.d(23): Error: no property `indexOf` for type `string`

    /tmp/tmplieqauuv.d(24): Error: no property `remove` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplieqauuv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ vowels = \"aeiouAEIOU\";\n    string removed = \"\";\n    for (int i = 0; i\
    \ < text.length; i++) {\n        if (vowels.find(text[i]) == string.npos) {\n\
    \            removed = removed ~ text[i];\n        }\n    }\n    return removed;\n\
    }\n/*\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6xbmcox4.d(28): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6xbmcox4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 0
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result = \"\";\n    foreach(c; text) \n    {\n        if(c != 'a' && c != 'A'\
    \ && c != 'e' && c != 'E' && c != 'i' && c != 'I' && c != 'o' && c != 'O' && c\
    \ != 'u' && c != 'U')\n        {\n            result ~= c;\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ vowels = \"aeiouAEIOU\";\n    string result = \"\";\n    foreach(dchar dchar;\
    \ text)\n    {\n        if(vowels.find(dchar) != -1)\n        {\n            continue;\n\
    \        }\n        result ~= dchar;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"\
    fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpr_95bs3p.d(21): Error: no identifier for declarator `dchar`

    /tmp/tmpr_95bs3p.d(21): Error: found `dchar` when expecting `;`

    /tmp/tmpr_95bs3p.d(21): Error: expression expected, not `;`

    /tmp/tmpr_95bs3p.d(21): Error: found `text` when expecting `)`

    /tmp/tmpr_95bs3p.d(21): Error: found `)` instead of statement

    /tmp/tmpr_95bs3p.d(27): Error: no identifier for declarator `result`

    /tmp/tmpr_95bs3p.d(27): Error: declaration expected, not `~=`

    /tmp/tmpr_95bs3p.d(28): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr_95bs3p.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result = \"\";\n    for (char c : text) \n    {\n        if (!(c == 'a' || c\
    \ == 'e' || c == 'i' || c == 'o' || c == 'u')) \n        {\n            result\
    \ ~= c;\n        }\n    }\n    return result;\n}\n/*\nunittest\n{\n    alias candidate\
    \ = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") ==\
    \ \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnq345sgp.d(20): Error: semicolon expected, not `:`

    /tmp/tmpnq345sgp.d(20): Error: expression expected, not `:`

    /tmp/tmpnq345sgp.d(20): Error: found `text` when expecting `;` following `for`
    condition

    /tmp/tmpnq345sgp.d(29): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnq345sgp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ vowels = \"AEIOUaeiou\";\n    string result = \"\";\n    foreach(char ch; text)\n\
    \    {\n        if(vowels.find(ch) == -1)\n        {\n            result ~= ch;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpaey92jgd.d(23): Error: no property `find` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpaey92jgd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    text\
    \ = text.toLower();\n    string txt=\"\";\n    foreach(char c; text)\n    {\n\
    \        switch(c)\n        {\n            case 'a':\n            case 'e':\n\
    \            case 'i':\n            case 'o':\n            case 'u':\n       \
    \     case 'y':\n                break;\n            default:\n              \
    \  txt ~= c;\n        }\n    }\n    return txt;\n}\n/*\nunittest\n{\n    alias\
    \ candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") ==\
    \ \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyj0g2rhe.d(38): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyj0g2rhe.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result = \"\";\n    if (text.length == 0) \n    {\n        return \"\";\n  \
    \  }\n    char current = text[0];\n    char to_lower = lowercase(current);\n \
    \   char to_uppercase = uppercase(current);\n    string vowels = \"aeiou\";\n\
    \    char to_char = to_lower;\n    if (vowels.indexOf(to_lower) == -1 && vowels.indexOf(to_uppercase)\
    \ == -1) \n    {\n        result += to_char;\n    }\n    return result + remove_vowels(text.substring(1));\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9j15zea2.d(25): Error: undefined identifier `lowercase`

    /tmp/tmp9j15zea2.d(26): Error: undefined identifier `uppercase`

    /tmp/tmp9j15zea2.d(29): Error: no property `indexOf` for type `string`

    /tmp/tmp9j15zea2.d(29): Error: no property `indexOf` for type `string`

    /tmp/tmp9j15zea2.d(31): Error: slice `result` is not mutable

    /tmp/tmp9j15zea2.d(33): Error: no property `substring` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9j15zea2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 0
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result;\n    foreach(c; text)\n    {\n        if(c != 'a' && c != 'e' && c !=\
    \ 'i' && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O'\
    \ && c != 'U')\n        {\n            result ~= c;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163956
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{ \n    //\
    \ todo\n    string result = \"\";\n    foreach(char ch; text)\n    {\n       \
    \ if(!isVowel(ch))\n        {\n            result ~= ch;\n        }\n    }\n \
    \   return result;\n}\n/*\nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0__8auxm.d(30): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0__8auxm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result;\n    for (uint i = 0; i < text.length; i++) \n    {\n        char c\
    \ = text[i];\n        switch (c) \n        {\n            case 'a':\n        \
    \    case 'e':\n            case 'i':\n            case 'o':\n            case\
    \ 'u':\n            case 'A':\n            case 'E':\n            case 'I':\n\
    \            case 'O':\n            case 'U':\n                break;\n      \
    \      default:\n                result += c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3x59ssxt.d(37): Error: slice `result` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3x59ssxt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 0
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{ \n    string\
    \ result = \"\"; \n    foreach(char c; text) \n    { \n        if (c != 'a' &&\
    \ c != 'e' && c != 'i' && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c !=\
    \ 'I' && c != 'O' && c != 'U') \n        { \n            result ~= c; \n     \
    \   } \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ ret = \"\";\n    foreach(char c; text)\n    {\n        if (c == 'a' || c ==\
    \ 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I'\
    \ || c == 'O' || c == 'U')\n        {\n        }\n        else\n        {\n  \
    \          ret ~= c;\n        }\n    }\n    return ret;\n}\n/*\nunittest\n{\n\
    \    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"\
    fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdjqb5uq0.d(32): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdjqb5uq0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    int\
    \ len = text.length;\n    string new_text = \"\";\n    for (int i = 0; i < len;\
    \ i++)\n    {\n        char ch = text[i];\n        if (tolower(ch) != 'a' &&\n\
    \            tolower(ch) != 'e' &&\n            tolower(ch) != 'i' &&\n      \
    \      tolower(ch) != 'o' &&\n            tolower(ch) != 'u')\n        {\n   \
    \         new_text += ch;\n        }\n    }\n    return new_text;\n}\n/*\nunittest\n\
    {\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"\
    fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4c95zdz3.d(35): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4c95zdz3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 0
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{ \n    string\
    \ result = \"\";\n    foreach(const char c; text)\n    {\n        if(c!='a' &&\
    \ c!='e' && c!='i' && c!='o' && c!='u' && c!='A' && c!='E' && c!='I' && c!='O'\
    \ && c!='U')\n        {\n            result ~= c;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ str = \"\";\n    foreach(ch; text)\n    {\n        if(ch != 'a' && ch != 'e'\
    \ && ch != 'i' && ch != 'o' && ch != 'u' && ch != 'A' && ch != 'E' && ch != 'I'\
    \ && ch != 'O' && ch != 'U')\n        {\n            str ~= ch;\n        }\n \
    \   }\n    return str;\n}\n/*\nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpppmrus2i.d(29): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpppmrus2i.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 0
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n  string\
    \ result = \"\";\n  foreach(i, c; text)\n  {\n    if (c != 'a' && c != 'e' &&\
    \ c != 'i' && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c !=\
    \ 'O' && c != 'U')\n    {\n      result ~= c;\n    }\n  }\n  return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163956
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ ret = \"\";\n    foreach(char c; text)\n    {\n        if(tolower(c) == 'a'\
    \ || tolower(c) == 'e' || tolower(c) == 'i' || tolower(c) == 'o' || tolower(c)\
    \ == 'u')\n        {\n            continue;\n        }\n        ret ~= c;\n  \
    \  }\n    return ret;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpcffh257v.d(22): Error: undefined identifier `tolower`

    /tmp/tmpcffh257v.d(22): Error: undefined identifier `tolower`

    /tmp/tmpcffh257v.d(22): Error: undefined identifier `tolower`

    /tmp/tmpcffh257v.d(22): Error: undefined identifier `tolower`

    /tmp/tmpcffh257v.d(22): Error: undefined identifier `tolower`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcffh257v.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    //\
    \ remove vowels\n    text = text.filter!(letter => letter != 'a' && letter !=\
    \ 'e' && letter != 'i' && letter != 'o' && letter != 'u')();\n    return text;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpli77ueie.d(20): Error: no property `filter` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpli77ueie.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ vowel = \"aeiouAEIOU\";\n    string result = \"\";\n    foreach(c; text)\n \
    \   {\n        if(vowel.find(c) == -1)\n        {\n            result ~= c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp19nd_bls.d(23): Error: no property `find` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp19nd_bls.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result = \"\";\n    foreach(char c; text) \n    {\n        if(!strchr(\"aeiouAEIOU\"\
    , c)) \n        {\n            result ~= c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe46x36nr.d(22): Error: undefined identifier `strchr`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe46x36nr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result = \"\";\n    foreach(c; text)\n    {\n        switch(c)\n        {\n\
    \            case 'a':\n            case 'e':\n            case 'i':\n       \
    \     case 'o':\n            case 'u':\n            case 'A':\n            case\
    \ 'E':\n            case 'I':\n            case 'O':\n            case 'U':\n\
    \                break;\n            default:\n                result ~= c;\n\
    \        }\n    }\n    return result;\n}\n/*\nunittest\n{\n    alias candidate\
    \ = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") ==\
    \ \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2esks8n5.d(41): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2esks8n5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 0
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result = \"\";\n    foreach(c; text)\n    {\n        if(c != 'a' && c != 'A'\
    \ && c != 'e' && c != 'E' && c != 'i' && c != 'I' && c != 'o' && c != 'O' && c\
    \ != 'u' && c != 'U') \n        {\n            result ~= c;\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163956
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result = \"\";\n    foreach(element; text)\n    {\n        if((element != 'a')\
    \ && (element != 'e') && (element != 'i') && (element != 'o') && (element != 'u'))\n\
    \        {\n            result = result ~ element;\n        }\n    }\n    return\
    \ result;\n}\n/*\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2zz0i_w6.d(29): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2zz0i_w6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result = \"\";\n    foreach(ch; text) \n    {\n        if (!\"aeiouAEIOU\".canFind(ch))\
    \ \n        {\n            result ~= ch;\n        }\n    }\n    return result;\n\
    }\n/*\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp78vf9mh3.d(29): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp78vf9mh3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result = \"\";\n    string vowels = \"aeiouAEIOU\";\n    for (int i = 0; i <\
    \ text.length; i++)\n    {\n        if (vowels.find(text[i]) == -1)\n        {\n\
    \            result += text[i];\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"\
    fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmptxq7inix.d(23): Error: no property `find` for type `string`

    /tmp/tmptxq7inix.d(25): Error: slice `result` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptxq7inix.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ out;\n    foreach(c; text) \n    {\n        if(c=='a'||c=='e'||c=='i'||c=='o'||c=='u'||c=='A'||c=='E'||c=='I'||c=='O'||c=='U')\
    \ \n        {\n            out ~= c;\n        }\n    }\n    return out;\n}\nunittest\n\
    {\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"\
    fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpuhda8krx.d(19): Error: found `out` when expecting `;` following
    statement

    /tmp/tmpuhda8krx.d(19): Deprecation: use `{ }` for an empty statement, not `;`

    /tmp/tmpuhda8krx.d(24): Error: found `out` instead of statement

    /tmp/tmpuhda8krx.d(27): Error: expression expected, not `out`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuhda8krx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    /*\n\
    \        remove_vowels should:\n            \u2022 initialize output string\n\
    \            \u2022 loop over every character of input string\n            \u2022\
    \ if current character is not vowel\n                \u2022 append it to output\
    \ string\n            \u2022 return output string\n    */\n    string output =\
    \ \"\";\n    foreach(character; text)\n    {\n        if(character != 'a' && character\
    \ != 'e' && character != 'i' && character != 'o' && character != 'u')\n      \
    \  {\n            output ~= character;\n        }\n    }\n    return output;\n\
    }\n/*\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpry27g7_m.d(37): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpry27g7_m.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ vowel_set = \"aeiou\";\n    string new_text = \"\";\n    foreach(char c; text)\n\
    \    {\n        if(c in vowel_set) continue;\n        new_text ~= c;\n    }\n\
    \    return new_text;\n}\n/*\nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzyg0d63r.d(28): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzyg0d63r.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    immutable\
    \ vowels = \"aeiouAEIOU\";\n    string result = \"\";\n    foreach(char letter;\
    \ text) \n    {\n        if(!vowels.canFind(letter))\n            result ~= letter;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6vim3bli.d(23): Error: no property `canFind` for type `immutable(string)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6vim3bli.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ consonants = \"\";\n    foreach(char c; text) \n    {\n        if (! isvowel(c))\n\
    \            consonants ~= c;\n    }\n    return consonants;\n}\n/*\nunittest\n\
    {\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"\
    fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbu55y6wr.d(27): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbu55y6wr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 0
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{ \n    string\
    \ result = \"\"; \n    foreach(c; text) \n    { \n        if(c != 'a' && c !=\
    \ 'e' && c != 'i' && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I'\
    \ && c != 'O' && c != 'U') \n        { \n            result ~= c; \n        }\
    \ \n    } \n    return result; \n} \nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163956
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result;\n    foreach(ch; text)\n    {\n        char lower = toLower(ch);\n \
    \       if(lower != 'a' && lower != 'e' && lower != 'i' && lower != 'o' && lower\
    \ != 'u')\n        {\n            result ~= ch;\n        }\n    }\n    return\
    \ result;\n}\n/*\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpd8t3ti5y.d(30): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd8t3ti5y.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ vowels = \"aeiouAEIOU\";\n    string result = \"\";\n    for (int i = 0; i <\
    \ text.length; i++)\n    {\n        bool isvowel = false;\n        for (int j\
    \ = 0; j < vowels.length; j++)\n        {\n            if (text[i] == vowels[j])\n\
    \            {\n                isvowel = true;\n                break;\n    \
    \        }\n        }\n        if (!isvowel)\n        {\n            result ~=\
    \ text[i];\n        }\n    }\n    return result;\n}\n/*\nunittest\n{\n    alias\
    \ candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") ==\
    \ \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp08cajpoa.d(39): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp08cajpoa.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ res = \"\";\n    foreach(chr; text)\n    {\n        if(!chr.is_vowel) res ~=\
    \ chr;\n    }\n    return res;\n}\n/*\nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbui9s9hz.d(26): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbui9s9hz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    return\
    \ text.replace(\"a\", \"\").replace(\"e\", \"\").replace(\"i\", \"\").replace(\"\
    o\", \"\").replace(\"u\", \"\");\n}\n/*\nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsi6oij3d.d(21): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsi6oij3d.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 0
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{ \n    string\
    \ result = \"\"; \n  \n    // Loop through all characters of \n    // the given\
    \ string and append \n    // character to result if it is \n    // not a vowel\
    \ \n    foreach (i, c; text) \n        if (c != 'a' && c != 'e' && \n        \
    \    c != 'i' && c != 'o' && \n            c != 'u' && c != 'A' && \n        \
    \    c != 'E' && c != 'I' && \n            c != 'O' && c != 'U') \n          \
    \  result ~= c; \n  \n    return result; \n} \nunittest\n{\n    alias candidate\
    \ = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") ==\
    \ \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163956
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ vowels = \"aeiouAEIOU\";\n    string result = \"\";\n    for (char c : text)\n\
    \    {\n        if (vowels.find(c) == string.npos)\n        {\n            result\
    \ += c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") ==\
    \ \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmplqty_gnj.d(21): Error: semicolon expected, not `:`

    /tmp/tmplqty_gnj.d(21): Error: expression expected, not `:`

    /tmp/tmplqty_gnj.d(21): Error: found `text` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplqty_gnj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ ret = \"\";\n    for (int i = 0; i < text.length; i++)\n    {\n        char\
    \ c = text[i];\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c\
    \ == 'u' || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n      \
    \  {\n            continue;\n        }\n        ret += c;\n    }\n    return ret;\n\
    }\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n\
    \    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\"\
    ) == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzygwa6n_.d(27): Error: slice `ret` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzygwa6n_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result;\n    foreach(char letter; text)\n    {\n        bool is_vowel = letter\
    \ == 'a' || letter == 'e' || letter == 'i' || letter == 'o' || letter == 'u';\n\
    \        if(!is_vowel)\n        {\n            result ~= letter;\n        }\n\
    \    }\n    return result;\n}\n/*\nunittest\n{\n    alias candidate = remove_vowels;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmwp72c_1.d(30): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmwp72c_1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 0
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result = \"\";\n    foreach(c; text)\n    {\n        if (c != 'a' && c != 'e'\
    \ && c != 'i' && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c\
    \ != 'O' && c != 'U')\n        {\n            result ~= c;\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = remove_vowels;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\"\
    ) == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"\
    eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"\
    EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\n/*\n\n    remove_vowels is a function that takes string\
    \ and returns string without vowels.\n    >>> remove_vowels(\"\")\n    \"\"\n\
    \    >>> remove_vowels(\"abcdef\")\n    \"bcdf\"\n    >>> remove_vowels(\"aaaaa\"\
    )\n    \"\"\n    >>> remove_vowels(\"aaBAA\")\n    \"B\"\n    >>> remove_vowels(\"\
    zbcd\")\n    \"zbcd\"\n    \n*/\nstring remove_vowels(string text) \n{\n    string\
    \ result;\n    foreach(c; text) \n    {\n        if(!c.isVowel) \n        {\n\
    \            result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\"\
    );\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"\
    fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"\
    acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"\
    ybcd\") == \"ybcd\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpo1qekco_.d(22): Error: no property `isVowel` for type `immutable(char)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo1qekco_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955

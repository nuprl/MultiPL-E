language: d
name: HumanEval_161_solve
results:
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   if(s.canFind(\"[a-zA-Z]\"))\n    {\n        string res;\n        foreach(char\
    \ c; s)\n        {\n            if(c.isLetter)\n                res ~= c.toupper;\n\
    \            else\n                res ~= c.tolower;\n        }\n        return\
    \ res;\n    }\n    else\n        return s.dup.reverse;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjf7r02kx.d(20): Error: no property `canFind` for type `string`

    /tmp/tmpjf7r02kx.d(25): Error: no property `isLetter` for type `char`

    /tmp/tmpjf7r02kx.d(26): Error: no property `toupper` for type `char`

    /tmp/tmpjf7r02kx.d(28): Error: no property `tolower` for type `char`

    /tmp/tmpjf7r02kx.d(33): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(char[])`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjf7r02kx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   auto it = s.front;\n    auto end = s.back;\n    string res = \"\";\n    while(it\
    \ != end)\n    {\n        res ~= it;\n        it = it.next;\n    }\n    res ~=\
    \ it;\n    return res;\n}\n/*\n    int size = s.length;\n    if(!size)\n     \
    \   return s;\n    string res = \"\";\n    if(!std.typecons.isAlpha(s[0]))\n \
    \   {\n        for(int i = 0; i < size; i++)\n        {\n            if(std.typecons.isAlpha(s[i]))\n\
    \            {\n                res ~= std.string.tolower(s[i]);\n           \
    \ }\n            else\n            {\n                res ~= s[i];\n         \
    \   }\n        }\n    }\n    else\n    {\n        for(int i = 0; i < size; i++)\n\
    \        {\n            if(std.typecons.isAlpha(s[i]))\n            {\n      \
    \          res ~= std.string.toupper(s[i]);\n            }\n            else\n\
    \            {\n                res ~= s[i];\n            }\n        }\n    }\n\
    \    return res;\n*/\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzvanyaaw.d(20): Error: no property `front` for type `string`

    /tmp/tmpzvanyaaw.d(21): Error: no property `back` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzvanyaaw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string str;\n    if (std.algorithm.all!(isLetter)(s))\n    {\n        str\
    \ = s.dup;\n        std.algorithm.retro(str);\n        return str;\n    }\n  \
    \  else \n    {\n        auto a = s.map!(a => isLetter(a) ? (a > 'Z' ? a.toUpper\
    \ : a.toLower) : a);\n        return a.toString;\n    }\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2x54pej5.d(21): Error: undefined identifier `algorithm` in package
    `std`

    /tmp/tmp2x54pej5.d(24): Error: undefined identifier `algorithm` in package `std`

    /tmp/tmp2x54pej5.d(29): Error: no property `map` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2x54pej5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   typeof(return) r;\n    r.length = s.length;\n    for (int i = 0; i < s.length;\
    \ i++)\n    {\n        if (('a' <= s[i] && s[i] <= 'z') || ('A' <= s[i] && s[i]\
    \ <= 'Z'))\n        {\n            r[i] = s[i] ^ 0x20;\n        }\n        else\n\
    \        {\n            r[i] = s[i];\n        }\n    }\n    return r;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3e2w7e03.d(26): Error: cannot modify `immutable` expression `r[cast(ulong)i]`

    /tmp/tmp3e2w7e03.d(30): Error: cannot modify `immutable` expression `r[cast(ulong)i]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3e2w7e03.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   static if (is(typeof(s[0]) : char))\n    {\n        string s2;\n        foreach\
    \ (immutable c; s)\n        {\n            if (isLetter(c))\n                s2\
    \ ~= c.toUpper() ~ c.toLower();\n            else\n                s2 ~= c;\n\
    \        }\n        return s2.dup.idup;\n    }\n    else\n    {\n        string\
    \ s2;\n        foreach (immutable c; s)\n        {\n            if (isDigit(c))\n\
    \                s2 ~= c;\n            else\n                s2 ~= to!string(c);\n\
    \        }\n        return s2.dup.idup;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpr4ojsecw.d(25): Error: undefined identifier `isLetter`

    /tmp/tmpr4ojsecw.d(26): Error: no property `toUpper` for type `immutable(char)`

    /tmp/tmpr4ojsecw.d(26): Error: no property `toLower` for type `immutable(char)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr4ojsecw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    if(s.length < 2) return s;\n    foreach(ch; s)\n\
    \    {\n        if(isalpha(ch)) result ~= \n            (isupper(ch) ? tolower(ch)\
    \ : toupper(ch));\n        else result ~= ch;\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") ==\
    \ \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnsrr7s0j.d(24): Error: undefined identifier `isalpha`

    /tmp/tmpnsrr7s0j.d(25): Error: undefined identifier `isupper`

    /tmp/tmpnsrr7s0j.d(25): Error: undefined identifier `tolower`

    /tmp/tmpnsrr7s0j.d(25): Error: undefined identifier `toupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnsrr7s0j.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   return replace(s,(a){ \n        if(a>='a' && a<='z') \n            return\
    \ to!char(a+'A'-'a');\n        else if(a>='A' && a<='Z') \n            return\
    \ to!char(a+'a'-'A');\n        else return a;\n    });\n}\n// import std.stdio;\n\
    // void main()\n// {\n//     writefln(\"%s\",solve(\"aBcDe\"));\n// }\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9r_4sc5n.d(20): Error: undefined identifier `replace`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9r_4sc5n.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n\t\
    bool isOk=false;\n\tforeach(e;s)\n\t{\n\t\tif(('a'..'z').canFind(e)||('A'..'Z').canFind(e))\n\
    \t\t{\n\t\t\tisOk=true;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(isOk)\n\t{\n\t\tforeach(e;s)\n\
    \t\t{\n\t\t\tif(('a'..'z').canFind(e))\n\t\t\t{\n\t\t\t\ts=s.replace(e,to!string(toUpper(e)));\n\
    \t\t\t}\n\t\t\telse if(('A'..'Z').canFind(e))\n\t\t\t{\n\t\t\t\ts=s.replace(e,to!string(toLower(e)));\n\
    \t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\ts=s.dup.reverse;\n\t}\n    return s;\n}\n\
    unittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") ==\
    \ \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprwkthm67.d(23): Error: found `..` when expecting `)`

    /tmp/tmprwkthm67.d(23): Error: found `122U` when expecting `)`

    /tmp/tmprwkthm67.d(23): Error: found `)` instead of statement

    /tmp/tmprwkthm67.d(29): Error: declaration expected, not `if`

    /tmp/tmprwkthm67.d(31): Error: no identifier for declarator `s`

    /tmp/tmprwkthm67.d(31): Error: declaration expected, not `)`

    /tmp/tmprwkthm67.d(36): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprwkthm67.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   if (s.canFind('a') == false && s.canFind('A') == false)\n        return reverse(s);\n\
    \    string result = \"\";\n    foreach (c; s)\n    {\n        auto low = to!char(c);\n\
    \        auto high = to!char(c);\n        if (c == low)\n            result ~=\
    \ high;\n        else if (c == high)\n            result ~= low;\n        else\n\
    \            result ~= c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpy4gnd70m.d(20): Error: no property `canFind` for type `string`

    /tmp/tmpy4gnd70m.d(20): Error: no property `canFind` for type `string`

    /tmp/tmpy4gnd70m.d(21): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(string)`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    /tmp/tmpy4gnd70m.d(25): Error: template instance `to!char` template `to` is not
    defined, did you mean No?

    /tmp/tmpy4gnd70m.d(26): Error: template instance `to!char` template `to` is not
    defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy4gnd70m.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string temp = \"\";\n    bool letters = false;\n    foreach(c; s)\n    {\n\
    \        letters = letters || isAlpha(c);\n        temp ~= (isAlpha(c) ? (c.isUpper\
    \ ? c.toLower : c.toUpper) : c);\n    }\n    return letters ? temp : temp.reverse;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpks4fohwj.d(24): Error: undefined identifier `isAlpha`

    /tmp/tmpks4fohwj.d(25): Error: undefined identifier `isAlpha`

    /tmp/tmpks4fohwj.d(25): Error: no property `isUpper` for type `immutable(char)`

    /tmp/tmpks4fohwj.d(25): Error: no property `toLower` for type `immutable(char)`

    /tmp/tmpks4fohwj.d(25): Error: no property `toUpper` for type `immutable(char)`

    /tmp/tmpks4fohwj.d(27): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(string)`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpks4fohwj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \ string result;\n  enum {upper, lower} letter_mode;\n  foreach(ch; s)\n  {\n\
    \    if(!isLetter(ch))\n    {\n      if(result.length != 0)\n      {\n       \
    \ result = reverse(result);\n      }\n      if(ch.isUpper)\n      {\n        letter_mode\
    \ = lower;\n      }\n      else if(ch.isLower)\n      {\n        letter_mode =\
    \ upper;\n      }\n      else\n      {\n        letter_mode = nothrow;\n     \
    \ }\n      result ~= ch;\n    }\n    else\n    {\n      if(letter_mode == lower)\n\
    \      {\n        result ~= ch.toLower;\n      }\n      else if(letter_mode ==\
    \ upper)\n      {\n        result ~= ch.toUpper;\n      }\n      else\n      {\n\
    \        result ~= ch;\n      }\n    }\n  }\n  if(result.length != 0)\n  {\n \
    \   result = reverse(result);\n  }\n  return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmph3dgy6qb.d(40): Error: expression expected, not `nothrow`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph3dgy6qb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   auto res = s.empty ? \"\" : s.dup;\n    auto count = 0;\n    foreach(i, c;\
    \ s) {\n        if (c.isLetter) {\n            res[i] = to!string(c)[0] ^ \" \"\
    ;\n            count++;\n        }\n    }\n    if (count == 0) res = reverse(res);\n\
    \    return res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9rxtotai.d(20): Error: no property `empty` for type `string`

    /tmp/tmp9rxtotai.d(23): Error: no property `isLetter` for type `immutable(char)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9rxtotai.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n\t\
    return s.split()\n\t\t.map!(c => !c.isLetter() ? c : c.toUpper() ^ c.toLower())\n\
    \t\t.join;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvuen7x0p.d(20): Error: no property `split` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvuen7x0p.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \  string str;\n   foreach(c; s)\n   {\n       if(c>='a' && c<='z')\n        \
    \    str ~= toupper(c);\n       else if(c>='A' && c<='Z')\n            str ~=\
    \ tolower(c);\n       else \n            str ~= c;\n   }\n   return str;\n}\n\
    /*\nYou are given a string s.\n    The function should return a string that contains\
    \ the digits of s in the same order, but grouped by threes.\n    Examples\n  \
    \  >>> solve(\"123456789\")\n    \"123 456 789\"\n    >>> solve(\"123 456 789\"\
    )\n    \"123 456 789\"\n    >>> solve(\"9\")\n    \"9\"\n*/\nstring solve(string\
    \ s) \n{\n   string str;\n   int k = 0;\n   foreach(c; s)\n   {\n       if(k ==\
    \ 3)\n       {\n            str ~= \" \";\n            k = 0;\n       }\n    \
    \   if(c>='0' && c<='9')\n       {\n            str ~= c;\n            k++;\n\
    \       }\n   }\n   return str;\n}\n/*\nYou are given two strings s and t.\n \
    \   The function should return true if s and t contain the same characters but\
    \ in a different order, false otherwise.\n    Examples\n    >>> solve(\"abcd\"\
    , \"bacd\")\n    true\n    >>> solve(\"bacd\", \"abcd\")\n    true\n    >>> solve(\"\
    aaab\", \"aabb\")\n    true\n    >>> solve(\"bacd\", \"abcd\")\n    true\n   \
    \ >>> solve(\"bcad\", \"abcd\")\n    false\n    >>> solve(\"abcd\", \"aaaa\")\n\
    \    false\n*/\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe4ostf5t.d(24): Error: undefined identifier `toupper`

    /tmp/tmpe4ostf5t.d(26): Error: undefined identifier `tolower`

    /tmp/tmpe4ostf5t.d(83): Error: `tmpe4ostf5t.solve` called with argument types
    `(string)` matches both:

    /tmp/tmpe4ostf5t.d(18):     `tmpe4ostf5t.solve(string s)`

    and:

    /tmp/tmpe4ostf5t.d(43):     `tmpe4ostf5t.solve(string s)`

    /tmp/tmpe4ostf5t.d(84): Error: `tmpe4ostf5t.solve` called with argument types
    `(string)` matches both:

    /tmp/tmpe4ostf5t.d(18):     `tmpe4ostf5t.solve(string s)`

    and:

    /tmp/tmpe4ostf5t.d(43):     `tmpe4ostf5t.solve(string s)`

    /tmp/tmpe4ostf5t.d(85): Error: `tmpe4ostf5t.solve` called with argument types
    `(string)` matches both:

    /tmp/tmpe4ostf5t.d(18):     `tmpe4ostf5t.solve(string s)`

    and:

    /tmp/tmpe4ostf5t.d(43):     `tmpe4ostf5t.solve(string s)`

    /tmp/tmpe4ostf5t.d(86): Error: `tmpe4ostf5t.solve` called with argument types
    `(string)` matches both:

    /tmp/tmpe4ostf5t.d(18):     `tmpe4ostf5t.solve(string s)`

    and:

    /tmp/tmpe4ostf5t.d(43):     `tmpe4ostf5t.solve(string s)`

    /tmp'
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   int len = s.length;\n    string ans = \"\";\n    for (int i = 0; i < len;\
    \ i++)\n    {\n        if (s[i] >= 'a' && s[i] <= 'z')\n        {\n          \
    \  ans += (char)(s[i] - 32);\n        }\n        else if (s[i] >= 'A' && s[i]\
    \ <= 'Z')\n        {\n            ans += (char)(s[i] + 32);\n        }\n     \
    \   else\n        {\n            ans += s[i];\n        }\n    }\n    return len\
    \ == 0 ? s : ans;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpm3b50_b_.d(26): Error: C style cast illegal, use `cast(char)(s[i]
    - 32)`

    /tmp/tmpm3b50_b_.d(30): Error: C style cast illegal, use `cast(char)(s[i] + 32)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm3b50_b_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   int len = s.length;\n    string ltr = \"abcdefghijklmnopqrstuvwxyz\";\n  \
    \  string ret;\n    foreach(i; 0 .. len)\n    {\n        if(s[i] in ltr)\n   \
    \     {\n            char ch = toUpper(s[i]);\n            ret ~= ch;\n      \
    \  }\n        else\n        {\n            char ch = toLower(s[i]);\n        \
    \    ret ~= ch;\n        }\n    }\n    return ret;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp10r_34a6.d(20): Error: cannot implicitly convert expression `s.length`
    of type `ulong` to `int`

    /tmp/tmp10r_34a6.d(25): Error: incompatible types for `(s[cast(ulong)i]) in (ltr)`:
    `immutable(char)` and `string`

    /tmp/tmp10r_34a6.d(27): Error: undefined identifier `toUpper`

    /tmp/tmp10r_34a6.d(32): Error: undefined identifier `toLower`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp10r_34a6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   foreach(c; s) \n    {\n        if(isAlpha(c))\n            c = toUpper(c);\n\
    \        else\n            c = toLower(c);\n    }\n    return s;\n}\n/*\n    More\
    \ Efficient Solution\n    It is a bit faster, because it only runs over characters\
    \ \n    which are already letters (or digits), and avoids the \n    toLower and\
    \ toUpper calls.\n*/\nstring solve(string s) \n{\n    return s\n    .replace!(c\
    \ => !isAlpha(c) ? c : \n                isLower(c) ? toUpper(c) : toLower(c));\n\
    }\n/*\n    The most direct way is to use map\n*/\nstring solve(string s) \n{\n\
    \    return s.map!(c => !isAlpha(c) ? c : \n                  isLower(c) ? toUpper(c)\
    \ : toLower(c));\n}\n/*\n    For a somewhat more efficient solution, create \n\
    \    a dictionary (mapping) from characters to characters \n    to be used by\
    \ replace.\n*/\nstring solve(string s) \n{\n    immutable mapping = ['a':'A',\
    \ 'b':'B', 'c':'C', 'd':'D', 'e':'E', 'f':'F',\n                         'g':'G',\
    \ 'h':'H', 'i':'I', 'j':'J', 'k':'K', 'l':'L',\n                         'm':'M',\
    \ 'n':'N', 'o':'O', 'p':'P', 'q':'Q', 'r':'R',\n                         's':'S',\
    \ 't':'T', 'u':'U', 'v':'V', 'w':'W', 'x':'X',\n                         'y':'Y',\
    \ 'z':'Z', 'A':'a', 'B':'b', 'C':'c', 'D':'d',\n                         'E':'e',\
    \ 'F':'f', 'G':'g', 'H':'h', 'I':'i', 'J':'j',\n                         'K':'k',\
    \ 'L\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpq5egxmoq.d(56): Error: unterminated character constant

    /tmp/tmpq5egxmoq.d(63): Error: comma expected separating array initializers, not
    `unittest`

    /tmp/tmpq5egxmoq.d(64): Error: semicolon expected following auto declaration,
    not `{`

    /tmp/tmpq5egxmoq.d(76): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq5egxmoq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string reverse = \"\";\n    // First condition to check if there is any letter\
    \ in string\n    if(s.canFind('a') || s.canFind('A') || s.canFind('b') || s.canFind('B')\
    \ || s.canFind('c') || s.canFind('C') || s.canFind('d') || s.canFind('D') || s.canFind('e')\
    \ || s.canFind('E') || s.canFind('f') || s.canFind('F') || s.canFind('g') || s.canFind('G')\
    \ || s.canFind('h') || s.canFind('H') || s.canFind('i') || s.canFind('I') || s.canFind('j')\
    \ || s.canFind('J') || s.canFind('k') || s.canFind('K') || s.canFind('l') || s.canFind('L')\
    \ || s.canFind('m') || s.canFind('M') || s.canFind('n') || s.canFind('N') || s.canFind('o')\
    \ || s.canFind('O') || s.canFind('p') || s.canFind('P') || s.canFind('q') || s.canFind('Q')\
    \ || s.canFind('r') || s.canFind('R') || s.canFind('s') || s.canFind('S') || s.canFind('t')\
    \ || s.canFind('T') || s.canFind('u') || s.canFind('U') || s.canFind('v') || s.canFind('V')\
    \ || s.canFind('w') || s.canFind('W') || s.canFind('x') || s.canFind('X') || s.canFind('y')\
    \ || s.canFind('Y') || s.canFind('z') || s.canFind('Z')){\n        // Reverse\
    \ case function\n        for(in i = 0; i < s.length; i++){\n            // if\
    \ char is uppercase reverse it to lower\n            if(s[i] == 'A' || s[i] ==\
    \ 'B' || s[i] == 'C' || s\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5ksy0i_2.d(24): Error: found `in` instead of statement

    /tmp/tmp5ksy0i_2.d(27): Error: found `unittest` when expecting `)`

    /tmp/tmp5ksy0i_2.d(40): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmp5ksy0i_2.d(40): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmp5ksy0i_2.d(40): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5ksy0i_2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string no_letters = \"\", letters = \"\";\n    foreach(immutable char c; s)\n\
    \    {\n        static bool isLower = false;\n        static bool isUpper = false;\n\
    \        isLower = isLower || isLowerAlpha(c);\n        isUpper = isUpper || isUpperAlpha(c);\n\
    \        if(isLowerAlpha(c) || isUpperAlpha(c))\n        {\n            letters\
    \ ~= c;\n        }\n        else\n        {\n            no_letters ~= c;\n  \
    \      }\n    }\n    if(isLower || isUpper)\n    {\n        string result = \"\
    \";\n        foreach(immutable char c; letters)\n        {\n            static\
    \ bool isLower = false;\n            static bool isUpper = false;\n          \
    \  isLower = isLower || isLowerAlpha(c);\n            isUpper = isUpper || isUpperAlpha(c);\n\
    \            if(isLowerAlpha(c))\n            {\n                result ~= toUpper(c);\n\
    \            }\n            else if(isUpperAlpha(c))\n            {\n        \
    \        result ~= toLower(c);\n            }\n        }\n        return result\
    \ ~ no_letters;\n    }\n    else\n    {\n        return no_letters.dup.idup.retro;\n\
    \    }\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgj06zb8v.d(25): Error: undefined identifier `isLowerAlpha`

    /tmp/tmpgj06zb8v.d(26): Error: undefined identifier `isUpperAlpha`

    /tmp/tmpgj06zb8v.d(27): Error: undefined identifier `isLowerAlpha`

    /tmp/tmpgj06zb8v.d(27): Error: undefined identifier `isUpperAlpha`

    /tmp/tmpgj06zb8v.d(36): Error: undefined identifier `isLower`

    /tmp/tmpgj06zb8v.d(36): Error: undefined identifier `isUpper`

    /tmp/tmpgj06zb8v.d(41): Error: declaration `tmpgj06zb8v.solve.isLower` is already
    defined in another scope in `solve` at line `23`

    /tmp/tmpgj06zb8v.d(42): Error: declaration `tmpgj06zb8v.solve.isUpper` is already
    defined in another scope in `solve` at line `24`

    /tmp/tmpgj06zb8v.d(43): Error: undefined identifier `isLowerAlpha`

    /tmp/tmpgj06zb8v.d(44): Error: undefined identifier `isUpperAlpha`

    /tmp/tmpgj06zb8v.d(45): Error: undefined identifier `isLowerAlpha`

    /tmp/tmpgj06zb8v.d(47): Error: undefined identifier `toUpper`, did you mean variable
    `isUpper`?

    /tmp/tmpgj06zb8v.d(49): Error: undefined identifier `isUpperAlpha`

    /tmp/tmpgj06zb8v.d(51): Error: undefined identifier `toLower`, did you mean variable
    `isLower`?

    /tmp/tmpgj06zb8v.d(58): Error: no property `retro` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgj06zb8v.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \ if(!s.canFind('a') && !s.canFind('b') && !s.canFind('c') && !s.canFind('d')\
    \ && !s.canFind('e') && !s.canFind('f') && !s.canFind('g') && !s.canFind('h')\
    \ && !s.canFind('i') && !s.canFind('j') && !s.canFind('k') && !s.canFind('l')\
    \ && !s.canFind('m') && !s.canFind('n') && !s.canFind('o') && !s.canFind('p')\
    \ && !s.canFind('q') && !s.canFind('r') && !s.canFind('s') && !s.canFind('t')\
    \ && !s.canFind('u') && !s.canFind('v') && !s.canFind('w') && !s.canFind('x')\
    \ && !s.canFind('y') && !s.canFind('z') && !s.canFind('A') && !s.canFind('B')\
    \ && !s.canFind('C') && !s.canFind('D') && !s.canFind('E') && !s.canFind('F')\
    \ && !s.canFind('G') && !s.canFind('H') && !s.canFind('I') && !s.canFind('J')\
    \ && !s.canFind('K') && !s.canFind('L') && !s.canFind('M') && !s.canFind('N')\
    \ && !s.canFind('O') && !s.canFind('P') && !s.canFind('Q') && !s.canFind('R')\
    \ && !s.canFind('S') && !s.canFind('T') && !s.canFind('U') && !s.canFind('V')\
    \ && !s.canFind('W') && !s.canFind('X') && !s.canFind('Y') && !s.canFind('Z'))\n\
    \  {\n    return s.to!string.dup.reverse;\n  }\n  else\n  {\n    foreach(l; s)\n\
    \    {\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2acmhl83.d(28): Error: found `unittest` instead of statement

    /tmp/tmp2acmhl83.d(41): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmp2acmhl83.d(41): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2acmhl83.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   int i = 0;\n    if (s.length == 0)\n        return \"\";\n    string res =\
    \ \"\";\n    while (i < s.length)\n    {\n        if (isLower(s[i]))\n       \
    \     res ~= toUpper(s[i]);\n        else if (isUpper(s[i]))\n            res\
    \ ~= toLower(s[i]);\n        else\n            res ~= s[i];\n        i++;\n  \
    \  }\n    if (!isLetter(res[0]))\n        return reverse(res);\n    return res;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2jul5inq.d(26): Error: undefined identifier `isLower`

    /tmp/tmp2jul5inq.d(27): Error: undefined identifier `toUpper`

    /tmp/tmp2jul5inq.d(28): Error: undefined identifier `isUpper`

    /tmp/tmp2jul5inq.d(29): Error: undefined identifier `toLower`

    /tmp/tmp2jul5inq.d(34): Error: undefined identifier `isLetter`

    /tmp/tmp2jul5inq.d(35): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(string)`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2jul5inq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   return staticMap!(\"ch >= 'a' && ch <= 'z' ? toupper(ch) : ch >= 'A' && ch\
    \ <= 'Z' ? tolower(ch) : ch\", s).joined;\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_u2pv5ce.d(20): Error: template instance `staticMap!("ch >= ''a''
    && ch <= ''z'' ? toupper(ch) : ch >= ''A'' && ch <= ''Z'' ? tolower(ch) : ch",
    s)` template `staticMap` is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_u2pv5ce.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   if(s.all!(c => c.isDigit))\n    {\n        return s.map!(c => c.isLetter ?\
    \ c.flipCase : c).array.join;\n    }\n    else\n    {\n        return s.array.reverse.join;\n\
    \    }\n    \n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpu60ibgc_.d(20): Error: no property `all` for type `string`

    /tmp/tmpu60ibgc_.d(22): Error: no property `map` for type `string`

    /tmp/tmpu60ibgc_.d(26): Error: no property `array` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu60ibgc_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   // check if it is empty\n    if (s.empty) \n        return s;\n    // check\
    \ if all the chars are digits\n    if (s.all!(char.isDigit)) \n        return\
    \ s;\n    //reverse all the digits\n    auto result = s.map!(c => c.isDigit ?\
    \ c : c.isLower ? c.toUpper : c.toLower).reverse;\n    return result;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb61gb94t.d(21): Error: no property `empty` for type `string`

    /tmp/tmpb61gb94t.d(24): Error: no property `all` for type `string`

    /tmp/tmpb61gb94t.d(27): Error: no property `map` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb61gb94t.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   return s.all!(c => !c.isLetter) ? s.retro : s.map!(c => c.isLetter ? c.isUpper\
    \ ? c.toLower : c.toUpper : c).join;\n}\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\"\
    ) == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5eenp5vb.d(20): Error: no property `all` for type `string`

    /tmp/tmp5eenp5vb.d(20): Error: no property `retro` for type `string`

    /tmp/tmp5eenp5vb.d(20): Error: no property `map` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5eenp5vb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   if(s.length() > 0)\n    {\n        string result = \"\";\n        foreach(immutable\
    \ c; s)\n        {\n            if(isalpha(c))\n            {\n              \
    \  auto upper = toupper(c);\n                if(c == upper)\n                {\n\
    \                    result ~= tolower(c);\n                }\n              \
    \  else\n                {\n                    result ~= upper;\n           \
    \     }\n            }\n            else\n            {\n                result\
    \ ~= c;\n            }\n        }\n        return result;\n    }\n    else\n \
    \   {\n        return s;\n    }\n}\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\"\
    ) == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4a2lk5z8.d(20): Error: no property `length` for type `string`

    /tmp/tmp4a2lk5z8.d(25): Error: undefined identifier `isalpha`

    /tmp/tmp4a2lk5z8.d(27): Error: undefined identifier `toupper`

    /tmp/tmp4a2lk5z8.d(30): Error: undefined identifier `tolower`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4a2lk5z8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    for (int i = 0; i < s.length; i++) \n    {\n  \
    \      if (isLetter(s[i]))\n        {\n            if (s[i] >= 'a' && s[i] <=\
    \ 'z')\n            {\n                result ~= (char)((int)s[i] - 32);\n   \
    \         }\n            else\n            {\n                result ~= (char)((int)s[i]\
    \ + 32);\n            }\n        }\n        else\n        {\n            result\
    \ ~= s[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdfg1qsrr.d(27): Error: C style cast illegal, use `cast(int)s[i]`

    /tmp/tmpdfg1qsrr.d(27): Error: C style cast illegal, use `cast(char)(cast(int)s[i]
    - 32)`

    /tmp/tmpdfg1qsrr.d(31): Error: C style cast illegal, use `cast(int)s[i]`

    /tmp/tmpdfg1qsrr.d(31): Error: C style cast illegal, use `cast(char)(cast(int)s[i]
    + 32)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdfg1qsrr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string reversedString;\n    bool isLetterFlag;\n    foreach(i; 0 .. s.length)\n\
    \    {\n        isLetterFlag = false;\n        if(s[i] >= 'a' && s[i] <= 'z')\n\
    \        {\n            isLetterFlag = true;\n            reversedString ~= (s[i]\
    \ - 'a' + 'A');\n        }\n        else if(s[i] >= 'A' && s[i] <= 'Z')\n    \
    \    {\n            isLetterFlag = true;\n            reversedString ~= (s[i]\
    \ - 'A' + 'a');\n        }\n        else\n        {\n            reversedString\
    \ ~= s[i];\n        }\n    }\n    if(!isLetterFlag)\n    {\n        return reversedString.dup.reverse;\n\
    \    }\n    return reversedString;\n}\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\"\
    ) == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_z91x3zd.d(42): Error: template `std.typecons.reverse` cannot deduce
    function from argument types `!()(char[])`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_z91x3zd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string output = \"\";\n    bool isLetter = false;\n    foreach(d; s)\n   \
    \ {\n        if(isLetter)\n        {\n            output = d.toUpper ~ output;\n\
    \        }else{\n            output = d.toLower ~ output;\n        }\n       \
    \ isLetter = d.isLetter;\n    }\n    return output;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwol3p9n5.d(26): Error: no property `toUpper` for type `immutable(char)`

    /tmp/tmpwol3p9n5.d(28): Error: no property `toLower` for type `immutable(char)`

    /tmp/tmpwol3p9n5.d(30): Error: no property `isLetter` for type `immutable(char)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwol3p9n5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string str = \"\";\n    foreach(immutable char; s)\n    {\n        if (isLetter(char))\n\
    \        {\n            char = tolower(char);\n            str ~= char;\n    \
    \    }\n        else\n        {\n            str ~= char;\n        }\n    }\n\
    \    return str;\n}\n/*\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8k2p4m8u.d(21): Error: no identifier for declarator `char`

    /tmp/tmp8k2p4m8u.d(23): Error: found `)` when expecting `.` following char

    /tmp/tmp8k2p4m8u.d(23): Error: found `)` when expecting identifier following `char`.

    /tmp/tmp8k2p4m8u.d(24): Error: found `{` when expecting `,`

    /tmp/tmp8k2p4m8u.d(25): Error: found `=` when expecting `.` following char

    /tmp/tmp8k2p4m8u.d(25): Error: found `)` when expecting `.` following char

    /tmp/tmp8k2p4m8u.d(25): Error: found `;` when expecting identifier following `char`.

    /tmp/tmp8k2p4m8u.d(26): Error: found `str` when expecting `,`

    /tmp/tmp8k2p4m8u.d(26): Error: expression expected, not `~=`

    /tmp/tmp8k2p4m8u.d(26): Error: found `char` when expecting `,`

    /tmp/tmp8k2p4m8u.d(26): Error: expression expected, not `;`

    /tmp/tmp8k2p4m8u.d(27): Error: found `}` when expecting `,`

    /tmp/tmp8k2p4m8u.d(28): Error: expression expected, not `else`

    /tmp/tmp8k2p4m8u.d(29): Error: found `{` when expecting `,`

    /tmp/tmp8k2p4m8u.d(30): Error: found `;` when expecting `.` following cha'
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   return s.idup.map!(a => !isLetter(a) ? a : a.toUpper.isUpper ? a.toLower :\
    \ a.toUpper).idup.idup.idup.idup.join;\n}\n/*\n    public static string solve(string\
    \ s)\n    {\n        int len = s.Length;\n        char[] output = new char[len];\n\
    \        for (int i = 0; i < len; i++)\n        {\n            output[i] = s[len\
    \ - i - 1];\n        }\n        return new string(output);\n    }\n*/\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpc0ygf4nz.d(20): Error: no property `map` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc0ygf4nz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   int length = s.length;\n    string res = \"\";\n    for (int i = 0; i < length;\
    \ i++)\n    {\n        string temp = s[i..i+1];\n        if (temp.isLetter)\n\
    \        {\n            if (temp == temp.toUpper)\n            {\n           \
    \     res ~= temp.toLower;\n            }\n            else\n            {\n \
    \               res ~= temp.toUpper;\n            }\n        }\n        else\n\
    \        {\n            res ~= temp;\n        }\n    }\n    return (length > 0)\
    \ ? res : res.reverse;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2mdf6b0i.d(20): Error: cannot implicitly convert expression `s.length`
    of type `ulong` to `int`

    /tmp/tmp2mdf6b0i.d(25): Error: no property `isLetter` for type `string`

    /tmp/tmp2mdf6b0i.d(27): Error: no property `toUpper` for type `string`

    /tmp/tmp2mdf6b0i.d(29): Error: no property `toLower` for type `string`

    /tmp/tmp2mdf6b0i.d(33): Error: no property `toUpper` for type `string`

    /tmp/tmp2mdf6b0i.d(41): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(string)`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2mdf6b0i.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   if (s.empty) return s;\n    foreach (i; 0 .. s.length) \n    {\n        if\
    \ (s[i] >= 'a' && s[i] <= 'z') \n        {\n            s[i] = s[i].toUpper;\n\
    \        } \n        else if (s[i] >= 'A' && s[i] <= 'Z') \n        {\n      \
    \      s[i] = s[i].toLower;\n        }\n    }\n    return s;\n}\nunittest\n{\n\
    \    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n\
    \    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") ==\
    \ \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpm3eqqmvo.d(20): Error: no property `empty` for type `string`

    /tmp/tmpm3eqqmvo.d(25): Error: no property `toUpper` for type `immutable(char)`

    /tmp/tmpm3eqqmvo.d(29): Error: no property `toLower` for type `immutable(char)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm3eqqmvo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   auto b = s.begin();\n    auto e = s.end();\n    uint n = s.length;\n    if(n\
    \ == 0)\n        return s;\n    if(n == 1)\n        return toUpper(s);\n    if(n\
    \ == 2)\n        return s.equal(\"ab\") ? \"AB\" : \"ab\";\n    string res = s[0..$-1];\n\
    \    if(s[0] == '#')\n    {\n        res = s[1..$-1];\n        res[0] = toUpper(res[0]);\n\
    \        res = res.idup;\n        return res;\n    }\n    res[$-1] = toUpper(res[$-1]);\n\
    \    return res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpcz9m_ucp.d(20): Error: no property `begin` for type `string`

    /tmp/tmpcz9m_ucp.d(21): Error: no property `end` for type `string`

    /tmp/tmpcz9m_ucp.d(22): Error: cannot implicitly convert expression `s.length`
    of type `ulong` to `uint`

    /tmp/tmpcz9m_ucp.d(26): Error: undefined identifier `toUpper`

    /tmp/tmpcz9m_ucp.d(28): Error: no property `equal` for type `string`

    /tmp/tmpcz9m_ucp.d(33): Error: undefined identifier `toUpper`

    /tmp/tmpcz9m_ucp.d(37): Error: undefined identifier `toUpper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcz9m_ucp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   return s.trimRight().trimLeft().length == 0 \n    ? new string(s.rbegin(),\
    \ s.rend()) \n    : s.transform!(a => isAlpha(a) ? a ^ ' ' : a).map!(a => isLower(a)\
    \ ? a.toUpper : a.toLower);\n}\nunittest\n{\n    alias candidate = solve;\n\n\
    \    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\")\
    \ == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2jjcng0k.d(20): Error: no property `trimRight` for type `string`

    /tmp/tmp2jjcng0k.d(21): Error: no property `rbegin` for type `string`

    /tmp/tmp2jjcng0k.d(21): Error: no property `rend` for type `string`

    /tmp/tmp2jjcng0k.d(22): Error: no property `transform` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2jjcng0k.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   if(s.empty)\n        return s;\n    auto res = s.transform!(a => a.isLetter()\
    \ ? a.toupper().toLower().iota : a.iota);\n    res.reverse;\n    return res.join;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6s26j9vu.d(20): Error: no property `empty` for type `string`

    /tmp/tmp6s26j9vu.d(22): Error: no property `transform` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6s26j9vu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    if(s.length < 1) return s;\n    foreach(i,ch; s)\n\
    \    {\n        if(!isAlpha(ch))\n        {\n            result ~= ch;\n     \
    \       continue;\n        }\n        result ~= toLower(ch);\n    }\n    return\
    \ result.reverse;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpi_2x9opr.d(24): Error: undefined identifier `isAlpha`

    /tmp/tmpi_2x9opr.d(29): Error: undefined identifier `toLower`

    /tmp/tmpi_2x9opr.d(31): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(string)`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi_2x9opr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   return s.map!(d => \n     {\n       auto t = d;\n       if( d >= 'a' && d\
    \ <= 'z')\n         t = d.toUpper;\n       else if( d >= 'A' && d <= 'Z')\n  \
    \       t = d.toLower;\n       return t;\n     }).reverse.dup;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqt6434gr.d(20): Error: no property `map` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqt6434gr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    foreach(c; s)\n    {\n        if (isLetter(c))\n     \
    \   {\n            result ~= to!string(c)[0] ^ \" \";\n        }\n        else\n\
    \        {\n            result ~= c;\n        }\n    }\n    if (s.length == result.length)\n\
    \    {\n        return result;\n    }\n    else\n    {\n        auto reversed\
    \ = result.reverse;\n        return reversed;\n    }\n    \n}\nunittest\n{\n \
    \   alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n\
    \    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") ==\
    \ \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpp3v5gvwf.d(23): Error: undefined identifier `isLetter`

    /tmp/tmpp3v5gvwf.d(25): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmpp3v5gvwf.d(38): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(string)`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp3v5gvwf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   if(s.empty) \n        return s;\n    string res = \"\";\n    foreach(c; s)\
    \ \n    {\n        if(isAlpha(c)) \n            res ~= toUpper(c) == c ? toLower(c)\
    \ : toUpper(c);\n        else\n            res ~= c;\n    }\n    return res;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprzozprpj.d(20): Error: no property `empty` for type `string`

    /tmp/tmprzozprpj.d(25): Error: undefined identifier `isAlpha`

    /tmp/tmprzozprpj.d(26): Error: undefined identifier `toUpper`

    /tmp/tmprzozprpj.d(26): Error: undefined identifier `toLower`

    /tmp/tmprzozprpj.d(26): Error: undefined identifier `toUpper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprzozprpj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   // your code goes here\n    import std.conv : to;\n    import std.string :\
    \ split;\n    import std.algorithm : map;\n    import std.range;\n    import std.array;\n\
    \    import std.algorithm : sort;\n    import std.algorithm : uniq;\n    auto\
    \ arr = s.to!char[];\n    if(arr.all!(\"isDigit\"(a) || \"isPunctuation\"(a)))\n\
    \    {\n        return reverse(arr).dup.idup.text;\n    }\n    else\n    {\n \
    \       return arr.map!((a) => (a.isLetter) ? (a.isUpper ? a.toLower : a.toUpper)\
    \ : a).text;\n    }\n}\n/*\n    The GCD (Greatest Common Divisor) is the largest\
    \ divisor that both numbers share. \n    You are given a list lst that contains\
    \ positive integers. \n    Return the GCD of the list. \n    If the list is empty\
    \ return -1.\n    Examples\n    >>> solve([15, 30, 45])\n    15\n    >>> solve([2,\
    \ 6, 18, 54])\n    2\n    >>> solve([5, 25, 125])\n    5\n*/\nunittest\n{\n  \
    \  alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n\
    \    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") ==\
    \ \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmplmp89zgx.d(28): Error: only one index allowed to index `char`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplmp89zgx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string t = \"\";\n    int k = 0;\n    foreach(ch; s)\n    {\n        if(isAlpha(ch))\n\
    \        {\n            if(isLower(ch))\n            {\n                t ~= toUpper(ch);\n\
    \            }\n            else\n            {\n                t ~= toLower(ch);\n\
    \            }\n        }\n        else\n        {\n            t ~= ch;\n   \
    \     }\n    }\n    if(t.length == 0)\n    {\n        string r = \"\";\n     \
    \   foreach(ch; s)\n        {\n            r = ch ~ r;\n        }\n        return\
    \ r;\n    }\n    return t;\n}\nunittest\n{\n    alias candidate = solve;\n\n \
    \   assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") ==\
    \ \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpaihwy1ms.d(24): Error: undefined identifier `isAlpha`

    /tmp/tmpaihwy1ms.d(26): Error: undefined identifier `isLower`

    /tmp/tmpaihwy1ms.d(28): Error: undefined identifier `toUpper`

    /tmp/tmpaihwy1ms.d(32): Error: undefined identifier `toLower`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpaihwy1ms.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string res;\n    foreach(i; 0 .. s.length)\n    {\n        if(isAlpha(s[i]))\n\
    \        {\n            res ~= to!string(isUpper(s[i]) ? toLower(s[i]) : toUpper(s[i]));\n\
    \        }\n        else\n        {\n            res ~= s[i];\n        }\n   \
    \ }\n    return res.length > 0 ? res : s.dup.reverse;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppmjtr9rn.d(23): Error: undefined identifier `isAlpha`

    /tmp/tmppmjtr9rn.d(25): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmppmjtr9rn.d(32): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(char[])`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppmjtr9rn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   import std.algorithm : map;\n    import std.array : array;\n    import std.conv\
    \ : to;\n    import std.range : filter;\n    import std.typecons : tuple;\n  \
    \  return s.filter!(a => a.isLetter).array.map!(a => a.isUpper ? a.toLower : a.toUpper).tuple.reverse.array.join();\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8opssu3t.d(23): Error: module `std.range` import `filter` not found,
    did you mean template `std.meta.Filter(alias pred, TList...)`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8opssu3t.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   auto res = s.dup;\n    if(s.find('a') != -1 || s.find('A') != -1)\n    {\n\
    \        foreach(chr; s)\n        {\n            if(chr.isAlpha)\n           \
    \ {\n                chr = chr.tolower.toupper;\n            }\n        }\n  \
    \  }\n    else\n    {\n        reverse(res);\n    }\n    return res;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsoiowljy.d(21): Error: no property `find` for type `string`

    /tmp/tmpsoiowljy.d(21): Error: no property `find` for type `string`

    /tmp/tmpsoiowljy.d(25): Error: no property `isAlpha` for type `immutable(char)`

    /tmp/tmpsoiowljy.d(27): Error: no property `tolower` for type `immutable(char)`

    /tmp/tmpsoiowljy.d(33): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(char[])`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    /tmp/tmpsoiowljy.d(35): Error: cannot implicitly convert expression `res` of type
    `char[]` to `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsoiowljy.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   return s.length.isEven ? s.swap : s.onlyLetters.swap;\n}\nunittest\n{\n  \
    \  alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n\
    \    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") ==\
    \ \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpuikpgrla.d(20): Error: no property `isEven` for type `ulong`

    /tmp/tmpuikpgrla.d(20): Error: no property `swap` for type `string`

    /tmp/tmpuikpgrla.d(20): Error: no property `onlyLetters` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuikpgrla.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \ char[] res = s.dup;\n  for (int i = 0; i < s.length; i++)\n    if (isAlpha(s[i]))\n\
    \      res[i] = isUpperCase(s[i]) ? toLower(s[i]) : toUpper(s[i]);\n  \n  return\
    \ res.reverse.join;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpagmrhq3o.d(22): Error: undefined identifier `isAlpha`

    /tmp/tmpagmrhq3o.d(23): Error: undefined identifier `isUpperCase`

    /tmp/tmpagmrhq3o.d(23): Error: undefined identifier `toLower`

    /tmp/tmpagmrhq3o.d(23): Error: undefined identifier `toUpper`

    /tmp/tmpagmrhq3o.d(25): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(char[])`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpagmrhq3o.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   auto n = s.length;\n    if (n == 0) return s;\n    for (size_t i = 0; i <\
    \ n; i++) \n    {\n        if(isAlpha(s[i]))\n        {\n            if(isUpper(s[i]))\
    \ s[i] = toLower(s[i]);\n            else if(isLower(s[i])) s[i] = toUpper(s[i]);\n\
    \        }\n    }\n    if(!isAlpha(s[0])) \n    {\n        string ts = s[0..$];\n\
    \        ts ~= s[0..0];\n        ts = ts[1..$];\n        return ts;\n    }\n \
    \   return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpupdyowri.d(24): Error: undefined identifier `isAlpha`

    /tmp/tmpupdyowri.d(26): Error: undefined identifier `isUpper`

    /tmp/tmpupdyowri.d(26): Error: undefined identifier `toLower`

    /tmp/tmpupdyowri.d(27): Error: undefined identifier `isLower`

    /tmp/tmpupdyowri.d(27): Error: undefined identifier `toUpper`

    /tmp/tmpupdyowri.d(30): Error: undefined identifier `isAlpha`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpupdyowri.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string res = \"\";\n    if (s.length() == 0) \n        return res;\n    int\
    \ i = 0;\n    if (s[i] >= 'a' && s[i] <= 'z')\n        res.insert(i, 1, char(s[i]\
    \ - 32));\n    else if (s[i] >= 'A' && s[i] <= 'Z')\n        res.insert(i, 1,\
    \ char(s[i] + 32));\n    else\n        res.insert(i, 1, s[i]);\n    i++;\n   \
    \ for (; i < s.length(); i++) \n    {\n        if (s[i] >= 'a' && s[i] <= 'z')\n\
    \            res.insert(i, 1, char(s[i] - 32));\n        else if (s[i] >= 'A'\
    \ && s[i] <= 'Z')\n            res.insert(i, 1, char(s[i] + 32));\n        else\n\
    \            res.insert(i, 1, s[i]);\n    }\n    return res;\n}\nunittest\n{\n\
    \    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n\
    \    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") ==\
    \ \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpo6yiqvji.d(21): Error: no property `length` for type `string`

    /tmp/tmpo6yiqvji.d(25): Error: no property `insert` for type `string`

    /tmp/tmpo6yiqvji.d(27): Error: no property `insert` for type `string`

    /tmp/tmpo6yiqvji.d(29): Error: no property `insert` for type `string`

    /tmp/tmpo6yiqvji.d(31): Error: no property `length` for type `string`

    /tmp/tmpo6yiqvji.d(34): Error: no property `insert` for type `string`

    /tmp/tmpo6yiqvji.d(36): Error: no property `insert` for type `string`

    /tmp/tmpo6yiqvji.d(38): Error: no property `insert` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo6yiqvji.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string ret = \"\";\n    foreach(c; s)\n    {\n        if(isalpha(c))\n   \
    \     {\n            if(isupper(c))\n                ret ~= tolower(c);\n    \
    \        else\n                ret ~= toupper(c);\n        }\n        else\n \
    \           ret ~= c;\n    }\n    return ret.length == 0 ? s : ret;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpctd4qrsv.d(23): Error: undefined identifier `isalpha`

    /tmp/tmpctd4qrsv.d(25): Error: undefined identifier `isupper`

    /tmp/tmpctd4qrsv.d(26): Error: undefined identifier `tolower`

    /tmp/tmpctd4qrsv.d(28): Error: undefined identifier `toupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpctd4qrsv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   if (s.canFindInString(\"[a-zA-Z]\"))\n    {\n        return s.joinMap!(c =>\
    \ isUpper(c) ? toLower(c) : toUpper(c)).toString();\n    }\n    else\n    {\n\
    \        return s.idup.reverse.toString();\n    }\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgfilxqua.d(20): Error: no property `canFindInString` for type `string`

    /tmp/tmpgfilxqua.d(22): Error: no property `joinMap` for type `string`

    /tmp/tmpgfilxqua.d(26): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(string)`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgfilxqua.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   s = s.filter!\"a\".isUpper() && \"b\".isLower() && \"c\".isUpper() && \"d\"\
    .isLower() && \"e\".isUpper() && \"f\".isLower() && \"g\".isUpper() && \"h\".isLower()\
    \ && \"i\".isUpper() && \"j\".isLower() && \"k\".isUpper() && \"l\".isLower()\
    \ && \"m\".isUpper() && \"n\".isLower() && \"o\".isUpper() && \"p\".isLower()\
    \ && \"q\".isUpper() && \"r\".isLower() && \"s\".isUpper() && \"t\".isLower()\
    \ && \"u\".isUpper() && \"v\".isLower() && \"w\".isUpper() && \"x\".isLower()\
    \ && \"y\".isUpper() && \"z\".isLower();\n    string temp;\n    foreach(ch; s)\
    \ \n    {\n        temp ~= ch.isUpper() ? ch.toLower : ch.isLower() ? ch.toUpper\
    \ : ch;\n    }\n    return temp.length == 0 ? s.dup.reverse : temp.dup.reverse;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb2cimpzh.d(20): Error: no property `filter` for type `string`

    /tmp/tmpb2cimpzh.d(20): Error: no property `isLower` for type `string`

    /tmp/tmpb2cimpzh.d(20): Error: no property `isUpper` for type `string`

    /tmp/tmpb2cimpzh.d(20): Error: no property `isLower` for type `string`

    /tmp/tmpb2cimpzh.d(20): Error: no property `isUpper` for type `string`

    /tmp/tmpb2cimpzh.d(20): Error: no property `isLower` for type `string`

    /tmp/tmpb2cimpzh.d(20): Error: no property `isUpper` for type `string`

    /tmp/tmpb2cimpzh.d(20): Error: no property `isLower` for type `string`

    /tmp/tmpb2cimpzh.d(20): Error: no property `isUpper` for type `string`

    /tmp/tmpb2cimpzh.d(20): Error: no property `isLower` for type `string`

    /tmp/tmpb2cimpzh.d(20): Error: no property `isUpper` for type `string`

    /tmp/tmpb2cimpzh.d(20): Error: no property `isLower` for type `string`

    /tmp/tmpb2cimpzh.d(20): Error: no property `isUpper` for type `string`

    /tmp/tmpb2cimpzh.d(20): Error: no property `isLower` for type `string`

    /tmp/tmpb2cimpzh.d(20): Error: '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   return s.empty ? string.empty : s.map!(a => a.isUpper ? a.toLower : a.isLower\
    \ ? a.toUpper : a);\n}\n/*\nimport std.math;\nimport std.string;\nimport std.typecons;\n\
    import std.algorithm;\nimport std.array;\nimport std.functional;\nimport std.range;\n\
    import std.stdio;\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ojns__a.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ojns__a.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   int i;\n    string result = \"\";\n    foreach(ch; s)\n    {\n        if (isLetter(ch))\n\
    \        {\n            if (isUpper(ch))\n            {\n                ch =\
    \ toLower(ch);\n            }\n            else\n            {\n             \
    \   ch = toUpper(ch);\n            }\n        }\n        result ~= ch;\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2_wpa3xg.d(24): Error: undefined identifier `isLetter`

    /tmp/tmp2_wpa3xg.d(26): Error: undefined identifier `isUpper`

    /tmp/tmp2_wpa3xg.d(28): Error: undefined identifier `toLower`

    /tmp/tmp2_wpa3xg.d(32): Error: undefined identifier `toUpper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2_wpa3xg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \ string result = s;\n  bool not_found = true;\n  foreach(immutable char c; s)\n\
    \  {\n    if (isAlpha(c))\n    {\n      not_found = false;\n      break;\n   \
    \ }\n  }\n  if (not_found)\n  {\n    result = s.dup.mirror;\n  }\n  else\n  {\n\
    \    foreach (immutable index, immutable char c; s)\n    {\n      result[index]\
    \ = isAlpha(c) ? (isUpper(c) ? toLower(c) : toUpper(c)) : c;\n    }\n  }\n  return\
    \ result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpiwver0im.d(24): Error: undefined identifier `isAlpha`

    /tmp/tmpiwver0im.d(32): Error: no property `mirror` for type `char[]`

    /tmp/tmpiwver0im.d(38): Error: undefined identifier `isAlpha`

    /tmp/tmpiwver0im.d(38): Error: undefined identifier `isUpper`

    /tmp/tmpiwver0im.d(38): Error: undefined identifier `toLower`

    /tmp/tmpiwver0im.d(38): Error: undefined identifier `toUpper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiwver0im.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \  string result = \"\";\n   int i = 0;\n   foreach(ch; s)\n   {\n        if(ch\
    \ >= 'a' && ch <= 'z')\n            result ~= (char) (ch - 32);\n        else\
    \ if(ch >= 'A' && ch <= 'Z')\n            result ~= (char) (ch + 32);\n      \
    \  else\n            result ~= ch;\n   }\n   return result;\n}\nunittest\n{\n\
    \    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n\
    \    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") ==\
    \ \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4cfxyepq.d(25): Error: C style cast illegal, use `cast(char)(ch
    - 32)`

    /tmp/tmp4cfxyepq.d(27): Error: C style cast illegal, use `cast(char)(ch + 32)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4cfxyepq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   auto res = \"\";\n    bool empty = true;\n    for (int i = 0; i < s.length;\
    \ i++) \n    {\n        if (s[i] >= 'a' && s[i] <= 'z') \n        {\n        \
    \    res += toupper(s[i]);\n            empty = false;\n        }\n        else\
    \ if (s[i] >= 'A' && s[i] <= 'Z') \n        {\n            res += tolower(s[i]);\n\
    \            empty = false;\n        }\n        else \n        {\n           \
    \ res += s[i];\n        }\n    }\n    if (empty) \n    {\n        return string(s.rbegin,\
    \ s.rend);\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\"\
    ) == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqgmtpy3q.d(26): Error: undefined identifier `toupper`

    /tmp/tmpqgmtpy3q.d(31): Error: undefined identifier `tolower`

    /tmp/tmpqgmtpy3q.d(36): Error: slice `res` is not mutable

    /tmp/tmpqgmtpy3q.d(41): Error: no property `rbegin` for type `string`

    /tmp/tmpqgmtpy3q.d(41): Error: no property `rend` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqgmtpy3q.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string a=\"\";\n    for(int i=0;i<s.length;i++)\n    {\n        if(s[i]>='a'\
    \ && s[i]<='z')\n        {\n            s[i]=s[i]-32;\n        }\n        else\
    \ if(s[i]>='A' && s[i]<='Z')\n        {\n            s[i]=s[i]+32;\n        }\n\
    \    }\n    string a=reverse(s);\n    return a;\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvk3n11vd.d(25): Error: cannot modify `immutable` expression `s[cast(ulong)i]`

    /tmp/tmpvk3n11vd.d(29): Error: cannot modify `immutable` expression `s[cast(ulong)i]`

    /tmp/tmpvk3n11vd.d(32): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(string)`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    /tmp/tmpvk3n11vd.d(32): Error: declaration `tmpvk3n11vd.solve.a` is already defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvk3n11vd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   // code here\n    if (s.length == 0)\n    {\n        return \"\";\n    }\n\
    \    foreach(ref char c; s)\n    {\n        if (isAlpha(c))\n        {\n     \
    \       c = toLower(c);\n        }\n    }\n    return s.dup.reverse;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpm1qto99v.d(25): Error: argument type mismatch, `immutable(char)`
    to `ref char`

    /tmp/tmpm1qto99v.d(32): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(char[])`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm1qto99v.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   if(count(all(s), (c){return isAlpha(c);}) == 0) \n        return reverse(s);\n\
    \    else \n        return s.map!(a => {return isLower(a) ? toUpper(a) : isUpper(a)\
    \ ? toLower(a) : a;}).reversed.array.join(\"\");\n}\n/*\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphc63nywq.d(25): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphc63nywq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   if (s.countUntil(\"@\") == -1) {\n    string r;\n    for (int i = 0; i < s.length;\
    \ i++) {\n        r ~= (char)toupper(s[i]);\n    }\n    return r;\n}\n    if (s.countUntil(\"\
    @\") == s.length - 1) {\n    string r;\n    for (int i = 0; i < s.length; i++)\
    \ {\n        r ~= (char)tolower(s[i]);\n    }\n    return r;\n}\n    string r;\n\
    \    for (int i = 0; i < s.length; i++) {\n        if (s[i] == tolower(s[i]))\
    \ {\n            r ~= (char)toupper(s[i]);\n        } else {\n            r ~=\
    \ (char)tolower(s[i]);\n        }\n    }\n    return r;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpcegoc6we.d(23): Error: C style cast illegal, use `cast(char)toupper(s[i])`

    /tmp/tmpcegoc6we.d(30): Error: C style cast illegal, use `cast(char)tolower(s[i])`

    /tmp/tmpcegoc6we.d(37): Error: C style cast illegal, use `cast(char)toupper(s[i])`

    /tmp/tmpcegoc6we.d(39): Error: C style cast illegal, use `cast(char)tolower(s[i])`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcegoc6we.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \  string str1 = \"\";\n    foreach(c; s)\n    {\n        if(c.isLower)\n    \
    \    {\n            str1 ~= c.toUpper;\n        }\n        else if(c.isUpper)\n\
    \        {\n            str1 ~= c.toLower;\n        }\n        else\n        {\n\
    \            str1 ~= c;\n        }\n    }\n    return str1.reverse;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpow5_qdkc.d(23): Error: no property `isLower` for type `immutable(char)`

    /tmp/tmpow5_qdkc.d(25): Error: no property `toUpper` for type `immutable(char)`

    /tmp/tmpow5_qdkc.d(27): Error: no property `isUpper` for type `immutable(char)`

    /tmp/tmpow5_qdkc.d(29): Error: no property `toLower` for type `immutable(char)`

    /tmp/tmpow5_qdkc.d(36): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(string)`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpow5_qdkc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   auto len = s.length;\n    foreach(i; 0 .. len)\n    {\n        if(s[i] >=\
    \ 'a' && s[i] <= 'z')\n        {\n            s[i] = toupper(s[i]);\n        }\n\
    \        else if(s[i] >= 'A' && s[i] <= 'Z')\n        {\n            s[i] = tolower(s[i]);\n\
    \        }\n    }\n    if(len == 0)\n    {\n        return s;\n    }\n    else\n\
    \    {\n        return s.reverse;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_2dj_31d.d(25): Error: undefined identifier `toupper`

    /tmp/tmp_2dj_31d.d(29): Error: undefined identifier `tolower`

    /tmp/tmp_2dj_31d.d(38): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(string)`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_2dj_31d.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   if (s.canFind('a'))\n    {\n        return s.map!(a =>\n            isUpper(a)\
    \ ? toLower(a) : toUpper(a)\n        );\n    }\n    else\n    {\n        return\
    \ s.reverse;\n    }\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmk7yoo_0.d(20): Error: no property `canFind` for type `string`

    /tmp/tmpmk7yoo_0.d(22): Error: no property `map` for type `string`

    /tmp/tmpmk7yoo_0.d(28): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(string)`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmk7yoo_0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \ string result;\n  foreach(d; s)\n  {\n    if (d >= 'a' && d <= 'z')\n    {\n\
    \      d = toUpper(d);\n    } else if (d >= 'A' && d <= 'Z')\n    {\n      d =\
    \ toLower(d);\n    }\n    result ~= d;\n  }\n  return result;\n}\nunittest\n{\n\
    \    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n\
    \    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") ==\
    \ \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp81v0_5tz.d(25): Error: undefined identifier `toUpper`

    /tmp/tmp81v0_5tz.d(28): Error: undefined identifier `toLower`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp81v0_5tz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   auto is_letter = (i, c) => (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z');\n\
    \    bool result = false;\n    foreach(i, c; s) {\n        if(is_letter(i, c))\
    \ {\n            result = true;\n            break;\n        }\n    }\n    if(!result)\
    \ {\n        s = s.dup.reverse;\n    }\n    else {\n        foreach(i, c; s) {\n\
    \            if(is_letter(i, c)) {\n                if(c >= 'a' && c <= 'z') {\n\
    \                    s[i] = c.toUpper;\n                }\n                else\
    \ {\n                    s[i] = c.toLower;\n                }\n            }\n\
    \        }\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\"\
    ) == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpw5wp_xna.d(20): Error: variable `tmpw5wp_xna.solve.is_letter` type
    `void` is inferred from initializer `(i, c) => c >= ''a'' && (c <= ''z'') || c
    >= ''A'' && (c <= ''Z'')`, and variables cannot be of type `void`

    /tmp/tmpw5wp_xna.d(20): Error: template lambda has no value

    /tmp/tmpw5wp_xna.d(29): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(char[])`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    /tmp/tmpw5wp_xna.d(35): Error: no property `toUpper` for type `immutable(char)`

    /tmp/tmpw5wp_xna.d(38): Error: no property `toLower` for type `immutable(char)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw5wp_xna.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    foreach(immutable char ch; s)\n    {\n        if(isAlpha(ch))\n\
    \        {\n            if(isUpper(ch))\n                result ~= toLower(ch);\n\
    \            else\n                result ~= toUpper(ch);\n        }\n       \
    \ else\n            result ~= ch;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n\
    \    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") ==\
    \ \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpug7apbn7.d(23): Error: undefined identifier `isAlpha`

    /tmp/tmpug7apbn7.d(25): Error: undefined identifier `isUpper`

    /tmp/tmpug7apbn7.d(26): Error: undefined identifier `toLower`

    /tmp/tmpug7apbn7.d(28): Error: undefined identifier `toUpper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpug7apbn7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   if (s.length == 0) \n        return s;\n    foreach (immutable c; s) \n  \
    \  {\n        if (isLetter(c)) \n            s[$-1] = c.isLower ? c.toUpper :\
    \ c.toLower;\n    }\n    return s.length == 0 ? s : reverse(s);\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpslqmd007.d(24): Error: undefined identifier `isLetter`

    /tmp/tmpslqmd007.d(25): Error: no property `isLower` for type `immutable(char)`

    /tmp/tmpslqmd007.d(25): Error: no property `toUpper` for type `immutable(char)`

    /tmp/tmpslqmd007.d(25): Error: no property `toLower` for type `immutable(char)`

    /tmp/tmpslqmd007.d(27): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(string)`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpslqmd007.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    if(s.empty)\n    {\n        return result;\n    }\n  \
    \  if(!s.canFind(\"[a-zA-Z]\"))\n    {\n        return s.dup.reverse;\n    }\n\
    \    for(auto c : s)\n    {\n        if(c.isAlpha)\n        {\n            result\
    \ ~= c.tolower.toupper;\n        }\n        else\n        {\n            result\
    \ ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2d8_r1m7.d(29): Error: no identifier for declarator `c`

    /tmp/tmp2d8_r1m7.d(29): Error: expression expected, not `:`

    /tmp/tmp2d8_r1m7.d(29): Error: found `s` when expecting `;` following `for` condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2d8_r1m7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   // checking whether the string contains letters\n    int count = 0;\n    foreach(immutable\
    \ c; s)\n    {\n        if(isalpha(c))\n            count++;\n    }\n    if(count\
    \ == 0)\n        return string(s.reverse);\n    // iterating over the string to\
    \ change the case of the letters\n    string retval;\n    foreach(immutable c;\
    \ s)\n    {\n        if(isalpha(c))\n        {\n            if(isupper(c))\n \
    \               retval ~= tolower(c);\n            else\n                retval\
    \ ~= toupper(c);\n        }\n        else\n            retval ~= c;\n    }\n \
    \   return retval;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvbbyqual.d(24): Error: undefined identifier `isalpha`

    /tmp/tmpvbbyqual.d(28): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(string)`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    /tmp/tmpvbbyqual.d(33): Error: undefined identifier `isalpha`

    /tmp/tmpvbbyqual.d(35): Error: undefined identifier `isupper`

    /tmp/tmpvbbyqual.d(36): Error: undefined identifier `tolower`

    /tmp/tmpvbbyqual.d(38): Error: undefined identifier `toupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvbbyqual.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   if(s.length == 0) return s;\n    else\n    {\n        //I could have just\
    \ done a foreach loop, but I wanted to practice with range and filters..\n   \
    \     auto foo = s.byChunk(1);\n        int[] k = new int[];\n        auto range\
    \ = foo.length;\n        foreach(i; 0..range)\n        {\n            if(foo[i]\
    \ >= 'a' && foo[i] <= 'z')\n            {\n                k ~= (int)(foo[i]-'a'+'A');\n\
    \            }\n            else if(foo[i] >= 'A' && foo[i] <= 'Z')\n        \
    \    {\n                k ~= (int)(foo[i]-'A'+'a');\n            }\n         \
    \   else\n            {\n                k ~= (int)foo[i];\n            }\n  \
    \      }\n        return cast(string) k;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmps_lbqrag.d(31): Error: C style cast illegal, use `cast(int)(foo[i]
    - ''a'' + ''A'')`

    /tmp/tmps_lbqrag.d(35): Error: C style cast illegal, use `cast(int)(foo[i] - ''A''
    + ''a'')`

    /tmp/tmps_lbqrag.d(39): Error: C style cast illegal, use `cast(int)foo[i]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps_lbqrag.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   return s.isEmpty ? \"\" : s.map!(c => isAlpha(c) ? toUpper(c) : toLower(c)).join;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdddzqu0l.d(20): Error: no property `isEmpty` for type `string`

    /tmp/tmpdddzqu0l.d(20): Error: no property `map` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdddzqu0l.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   if (s.findFirst(' ') == -1)\n    {\n        string newS;\n        foreach(inout\
    \ i; s)\n        {\n            if (isUpper(i))\n                newS ~= toLower(i);\n\
    \            else if (isLower(i))\n                newS ~= toUpper(i);\n     \
    \       else\n                newS ~= i;\n        }\n        return newS;\n  \
    \  }\n    else\n    {\n        string[] arr = split(s);\n        foreach(i; 0\
    \ .. arr.length)\n        {\n            string newS;\n            foreach(inout\
    \ j; arr[i])\n            {\n                if (isUpper(j))\n               \
    \     newS ~= toLower(j);\n                else if (isLower(j))\n            \
    \        newS ~= toUpper(j);\n                else\n                    newS ~=\
    \ j;\n            }\n            arr[i] = newS;\n        }\n        string result;\n\
    \        foreach(i; 0 .. arr.length)\n        {\n            result ~= arr[i];\n\
    \            if (i != arr.length - 1)\n                result ~= \" \";\n    \
    \    }\n        return result;\n    }\n}\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\"\
    ) == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpu0a0l074.d(20): Error: no property `findFirst` for type `string`

    /tmp/tmpu0a0l074.d(25): Error: undefined identifier `isUpper`

    /tmp/tmpu0a0l074.d(26): Error: undefined identifier `toLower`

    /tmp/tmpu0a0l074.d(27): Error: undefined identifier `isLower`

    /tmp/tmpu0a0l074.d(28): Error: undefined identifier `toUpper`

    /tmp/tmpu0a0l074.d(36): Error: undefined identifier `split`

    /tmp/tmpu0a0l074.d(42): Error: undefined identifier `isUpper`

    /tmp/tmpu0a0l074.d(43): Error: undefined identifier `toLower`

    /tmp/tmpu0a0l074.d(44): Error: undefined identifier `isLower`

    /tmp/tmpu0a0l074.d(45): Error: undefined identifier `toUpper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu0a0l074.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string reversed;\n    foreach(i, char c; s)\n    {\n        if(isLetter(c))\n\
    \        {\n            reversed ~= isUpperCase(c) ? toLower(c) : toUpper(c);\n\
    \        }\n        else\n        {\n            reversed ~= c;\n        }\n \
    \   }\n    return reversed.length ? reversed : reversed[$ - 1..0];\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpytbga9xu.d(23): Error: undefined identifier `isLetter`

    /tmp/tmpytbga9xu.d(25): Error: undefined identifier `isUpperCase`

    /tmp/tmpytbga9xu.d(25): Error: undefined identifier `toLower`

    /tmp/tmpytbga9xu.d(25): Error: undefined identifier `toUpper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpytbga9xu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string r=\"\";\n    for(size_t i=0;i<s.length;i++)\n    {\n        if(s[i]!='\
    \ ')\n        {\n            if((int)s[i]>96)\n            {\n               \
    \ r+=toUpper(s[i]);\n            }\n            else if((int)s[i]<91)\n      \
    \      {\n                r+=toLower(s[i]);\n            }\n            else\n\
    \            {\n                r+=s[i];\n            }\n        }\n        else\n\
    \        {\n            r+=s[i];\n        }\n    }\n    return r;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppre7pipr.d(25): Error: C style cast illegal, use `cast(int)s[i]`

    /tmp/tmppre7pipr.d(29): Error: C style cast illegal, use `cast(int)s[i]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppre7pipr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   if(s.length==0)return s;\n    string res;\n    foreach(c;s)\n    {\n     \
    \   res~=isLetter(c)?toUpper(c):toLower(c);\n    }\n    return res;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwu86yqlw.d(24): Error: undefined identifier `isLetter`

    /tmp/tmpwu86yqlw.d(24): Error: undefined identifier `toUpper`

    /tmp/tmpwu86yqlw.d(24): Error: undefined identifier `toLower`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwu86yqlw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   enum int Islower(immutable(char) c)\n    {\n        return (c >= 'a' && c\
    \ <= 'z');\n    }\n    enum int Isupper(immutable(char) c)\n    {\n        return\
    \ (c >= 'A' && c <= 'Z');\n    }\n    bool has_alpha = false;\n    foreach(ch;\
    \ s)\n    {\n        if (islower(ch) || isupper(ch))\n        {\n            has_alpha\
    \ = true;\n            break;\n        }\n    }\n    if (!has_alpha)\n    {\n\
    \        // s is purely numeric\n        string rev_s = s[$-1..0];\n        return\
    \ rev_s;\n    }\n    string res = \"\";\n    foreach(ch; s)\n    {\n        if\
    \ (islower(ch))\n        {\n            res ~= char.toUpper(ch);\n        }\n\
    \        else if (isupper(ch))\n        {\n            res ~= char.toLower(ch);\n\
    \        }\n        else\n        {\n            res ~= ch;\n        }\n    }\n\
    \    return res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgwt2ms9o.d(31): Error: undefined identifier `islower`, did you
    mean function `Islower`?

    /tmp/tmpgwt2ms9o.d(31): Error: undefined identifier `isupper`, did you mean function
    `Isupper`?

    /tmp/tmpgwt2ms9o.d(46): Error: undefined identifier `islower`, did you mean function
    `Islower`?

    /tmp/tmpgwt2ms9o.d(48): Error: no property `toUpper` for type `char`

    /tmp/tmpgwt2ms9o.d(50): Error: undefined identifier `isupper`, did you mean function
    `Isupper`?

    /tmp/tmpgwt2ms9o.d(52): Error: no property `toLower` for type `char`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgwt2ms9o.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    immutable lower = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    immutable upper = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    foreach(i; 0 ..\
    \ s.length)\n    {\n        if(std.string.indexOf(lower, s[i]) != -1)\n      \
    \  {\n            result ~= upper[std.string.indexOf(lower, s[i])];\n        }\n\
    \        else if(std.string.indexOf(upper, s[i]) != -1)\n        {\n         \
    \   result ~= lower[std.string.indexOf(upper, s[i])];\n        }\n        else\n\
    \        {\n            result ~= s[i];\n        }\n    }\n    return result;\n\
    }\n/*\n    ==================================================\n*/\nstring reverseCase(string\
    \ s) \n{\n    string result = \"\";\n    immutable lower = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    immutable upper = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    foreach(i; 0 ..\
    \ s.length)\n    {\n        if(std.string.indexOf(lower, s[i]) != -1)\n      \
    \  {\n            result ~= upper[std.string.indexOf(lower, s[i])];\n        }\n\
    \        else if(std.string.indexOf(upper, s[i]) != -1)\n        {\n         \
    \   result ~= lower[std.string.indexOf(upper, s[i])];\n        }\n        else\n\
    \        {\n            result ~= s[i];\n        }\n    }\n    return result;\n\
    }\nstring solve2(string s) \n{\n    if(s.canFind('a'))\n    {\n        return\
    \ reverseCase(s);\n    }\n    else\n    {\n        return s.reverse;\n    }\n\
    }\n/*\n    ==================================================\n*/\nimport std.algorithm;\n\
    string solve3(string s) \n{\n    if(s.canFind('a'))\n    {\n        return s.map!((c)\
    \ =>\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpj8y3fcp2.d(85): Error: expression expected, not `unittest`

    /tmp/tmpj8y3fcp2.d(86): Error: found `{` when expecting `)` following template
    argument list

    /tmp/tmpj8y3fcp2.d(87): Error: found `alias` when expecting `;` following `return`
    statement

    /tmp/tmpj8y3fcp2.d(98): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj8y3fcp2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    if(s.empty) \n    {\n        return result;\n \
    \   }\n    for(int i = 0; i < s.length; i++) \n    {\n        if(s[i] in ('A'..'Z')\
    \ || s[i] in ('a'..'z')) \n        {\n            if(s[i] in ('A'..'Z')) \n  \
    \          {\n                result ~= to!string(to!int(s[i]) + 32);\n      \
    \      }\n            else \n            {\n                result ~= to!string(to!int(s[i])\
    \ - 32);\n            }\n        }\n        else \n        {\n            result\
    \ ~= s[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsgqthr4r.d(27): Error: found `..` when expecting `)`

    /tmp/tmpsgqthr4r.d(27): Error: found `90U` when expecting `)`

    /tmp/tmpsgqthr4r.d(27): Error: found `)` instead of statement

    /tmp/tmpsgqthr4r.d(33): Error: found `else` without a corresponding `if`, `version`
    or `debug` statement

    /tmp/tmpsgqthr4r.d(37): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsgqthr4r.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string res = \"\";\n    for (int i = 0; i < s.length; i++)\n    {\n      \
    \  if (s[i] >= 'a' && s[i] <= 'z')\n        {\n            res += toUpper(s[i]);\n\
    \        }\n        else if (s[i] >= 'A' && s[i] <= 'Z')\n        {\n        \
    \    res += toLower(s[i]);\n        }\n        else\n        {\n            res\
    \ += s[i];\n        }\n    }\n    if (res.length() == s.length)\n    {\n     \
    \   return res;\n    }\n    else\n    {\n        return reverse(res);\n    }\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdnjdq36y.d(25): Error: undefined identifier `toUpper`

    /tmp/tmpdnjdq36y.d(29): Error: undefined identifier `toLower`

    /tmp/tmpdnjdq36y.d(33): Error: slice `res` is not mutable

    /tmp/tmpdnjdq36y.d(36): Error: no property `length` for type `string`

    /tmp/tmpdnjdq36y.d(42): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(string)`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdnjdq36y.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string ans = \"\";\n    foreach(i;0..s.length)\n    {\n        char t = s[i];\n\
    \        if (t >= 'a' && t <= 'z')\n        {\n            ans ~= to!string(toupper(t));\n\
    \        }\n        else if (t >= 'A' && t <= 'Z')\n        {\n            ans\
    \ ~= to!string(tolower(t));\n        }\n        else\n        {\n            ans\
    \ ~= to!string(t);\n        }\n    }\n    return ans;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3t0t4914.d(26): Error: template instance `to!string` template `to`
    is not defined, did you mean t?

    /tmp/tmp3t0t4914.d(30): Error: template instance `to!string` template `to` is
    not defined, did you mean t?

    /tmp/tmp3t0t4914.d(34): Error: template instance `to!string` template `to` is
    not defined, did you mean t?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3t0t4914.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   auto result = new string();\n    foreach(c; s)\n    {\n        if (isAlpha(c))\n\
    \        {\n            result ~= c.isUpper ? toLower(c) : toUpper(c);\n     \
    \   }\n        else\n        {\n            result ~= c;\n        }\n    }\n \
    \   return reverse(result);\n}\nunittest\n{\n    alias candidate = solve;\n\n\
    \    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\")\
    \ == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpf7b2f0lc.d(20): Error: new can only create structs, dynamic arrays
    or class objects, not `string`''s

    /tmp/tmpf7b2f0lc.d(23): Error: undefined identifier `isAlpha`

    /tmp/tmpf7b2f0lc.d(25): Error: no property `isUpper` for type `immutable(char)`

    /tmp/tmpf7b2f0lc.d(25): Error: undefined identifier `toLower`

    /tmp/tmpf7b2f0lc.d(25): Error: undefined identifier `toUpper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf7b2f0lc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   static int a = 'a';\n    static int z = 'z';\n    static int A = 'A';\n  \
    \  static int Z = 'Z';\n    foreach(i, char c; s)\n    {\n        if (a <= c &&\
    \ c <= z)\n            s[i] = char(A + c - a);\n        else if (A <= c && c <=\
    \ Z)\n            s[i] = char(a + c - A);\n    }\n    if (a <= s[0] && s[0] <=\
    \ z)\n        return s;\n    else if (A <= s[0] && s[0] <= Z)\n        return\
    \ s;\n    else\n        return s.dup.reverse();\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpse3cj50w.d(27): Error: cannot implicitly convert expression `A
    + cast(int)c - a` of type `int` to `char`

    /tmp/tmpse3cj50w.d(29): Error: cannot implicitly convert expression `a + cast(int)c
    - A` of type `int` to `char`

    /tmp/tmpse3cj50w.d(36): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(char[])`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpse3cj50w.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string res = \"\";\n    if (s.length == 0)\n        return res;\n    if (s.length\
    \ == 1)\n        return (s[0].isAlpha() ? (s[0].isUpper() ? s[0].toLower() : s[0].toUpper()).toString()\
    \ : s);\n    if (s.length > 1)\n    {\n        bool isTouched = false;\n     \
    \   foreach (i, elem; s)\n        {\n            if (elem.isAlpha())\n       \
    \     {\n                res ~= (elem.isUpper() ? elem.toLower() : elem.toUpper()).toString();\n\
    \                isTouched = true;\n            }\n            else\n        \
    \        res ~= elem.toString();\n        }\n        if (!isTouched)\n       \
    \     return s.reverse();\n    }\n    return res;\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprz44o38s.d(24): Error: no property `isAlpha` for type `immutable(char)`

    /tmp/tmprz44o38s.d(24): Error: no property `isUpper` for type `immutable(char)`

    /tmp/tmprz44o38s.d(24): Error: no property `toLower` for type `immutable(char)`

    /tmp/tmprz44o38s.d(24): Error: no property `toUpper` for type `immutable(char)`

    /tmp/tmprz44o38s.d(30): Error: no property `isAlpha` for type `immutable(char)`

    /tmp/tmprz44o38s.d(32): Error: no property `isUpper` for type `immutable(char)`

    /tmp/tmprz44o38s.d(32): Error: no property `toLower` for type `immutable(char)`

    /tmp/tmprz44o38s.d(32): Error: no property `toUpper` for type `immutable(char)`

    /tmp/tmprz44o38s.d(36): Error: no property `toString` for type `immutable(char)`

    /tmp/tmprz44o38s.d(39): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(string)`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):    '
  stdout: ''
  timestamp: 1660163953
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   if (s.all!(ch => !\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    .canFind(ch)))\n        return s.dup.reverse;\n    string ret;\n    foreach (i,\
    \ ch; s)\n    {\n        auto lo = cast(char)ch.toLower;\n        auto up = cast(char)ch.toUpper;\n\
    \        if (\"abcdefghijklmnopqrstuvwxyz\".canFind(lo))\n            ret ~= up;\n\
    \        else if (\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".canFind(up))\n            ret\
    \ ~= lo;\n        else \n            ret ~= ch;\n    }\n    return ret;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpm8cxyk7t.d(20): Error: no property `all` for type `string`

    /tmp/tmpm8cxyk7t.d(21): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(char[])`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    /tmp/tmpm8cxyk7t.d(25): Error: no property `toLower` for type `immutable(char)`

    /tmp/tmpm8cxyk7t.d(26): Error: no property `toUpper` for type `immutable(char)`

    /tmp/tmpm8cxyk7t.d(27): Error: no property `canFind` for type `string`

    /tmp/tmpm8cxyk7t.d(29): Error: no property `canFind` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm8cxyk7t.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    foreach(c; s)\n    {\n        char d = c;\n        if(isLetter(c))\
    \ d = to!char(isUpper(c) ? toLower(c) : toUpper(c));\n        result ~= d;\n \
    \   }\n    return result.length == 0 ? s : result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx1z_vd5x.d(24): Error: undefined identifier `isLetter`

    /tmp/tmpx1z_vd5x.d(24): Error: template instance `to!char` template `to` is not
    defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx1z_vd5x.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   bool z = true;\n    string ret = \"\";\n    foreach(c; s)\n    {\n       \
    \ if((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z'))\n        {\n          \
    \  ret ~= c.swapCase;\n            z = false;\n        }\n        else\n     \
    \   {\n            ret ~= c;\n        }\n    }\n    if(z)\n    {\n        ret\
    \ = ret.dup.reverse();\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3tci5f62.d(26): Error: no property `swapCase` for type `immutable(char)`

    /tmp/tmp3tci5f62.d(36): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(char[])`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3tci5f62.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   auto a = s.map!(c => { return c.isLetter ? (c.isUpper ? c.toLower : c.toUpper)\
    \ : c; });\n    return a.length > 0 ? a : a.dup.reverse;\n}\nunittest\n{\n   \
    \ alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n \
    \   assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") ==\
    \ \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9suas9_3.d(20): Error: no property `map` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9suas9_3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   bool letter = false;\n    string r = \"\";\n    foreach(ref c; s) \n    {\n\
    \        if(isAlpha(c))\n        {\n            letter = true;\n            if(isUpper(c))\n\
    \                r ~= toLower(c);\n            else\n                r ~= toUpper(c);\n\
    \        }\n        else\n            r ~= c;\n    }\n    if(!letter)\n      \
    \  r = r.reverse;\n    return r;\n}\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\"\
    ) == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdav1ety_.d(24): Error: undefined identifier `isAlpha`

    /tmp/tmpdav1ety_.d(27): Error: undefined identifier `isUpper`

    /tmp/tmpdav1ety_.d(28): Error: undefined identifier `toLower`

    /tmp/tmpdav1ety_.d(30): Error: undefined identifier `toUpper`

    /tmp/tmpdav1ety_.d(36): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(string)`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdav1ety_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   return s.reversed.map!((c) => isLetter(c) ? toLower(c) : toUpper(c)).array.join;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpczo3c94r.d(20): Error: no property `reversed` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpczo3c94r.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    static struct fun_t \n    {\n        static char eval(char\
    \ c)\n        {\n            if(std.typecons.isLetter(c))\n                return\
    \ to!char(c ^ ' ');\n            return c;\n        }\n    }\n    fun;\n    result\
    \ = s.map!fun.eval();\n    if(result.length == 0)\n        return s.dup.reverse;\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfqpw1lx6.d(25): Error: undefined identifier `isLetter` in module
    `std.typecons`

    /tmp/tmpfqpw1lx6.d(26): Error: template instance `to!char` template `to` is not
    defined, did you mean No?

    /tmp/tmpfqpw1lx6.d(30): Error: undefined identifier `fun`

    /tmp/tmpfqpw1lx6.d(31): Error: no property `map` for type `string`

    /tmp/tmpfqpw1lx6.d(33): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(char[])`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfqpw1lx6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n\t\
    string res = \"\";\n\tif (s.length == 0)\n\t\treturn res;\n\telse\n\t{\n\t\tbool\
    \ isLetter = false;\n\t\tforeach (c; s)\n\t\t{\n\t\t\tisLetter = isLetter || (c.isAlpha\
    \ || c.isDigit);\n\t\t}\n\t\tif (isLetter)\n\t\t{\n\t\t\tforeach (c; s)\n\t\t\t\
    {\n\t\t\t\tif (c.isAlpha)\n\t\t\t\t{\n\t\t\t\t\tres ~= c.isUpper ? to!char(to!int(c)\
    \ + 32) : to!char(to!int(c) - 32);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\
    \t\tres ~= c;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tforeach_reverse\
    \ (c; s)\n\t\t\t{\n\t\t\t\tres ~= c;\n\t\t\t}\n\t\t}\n\t}\n\treturn res;\n}\n\
    unittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") ==\
    \ \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppt9uevy9.d(28): Error: no property `isAlpha` for type `immutable(char)`

    /tmp/tmppt9uevy9.d(28): Error: no property `isDigit` for type `immutable(char)`

    /tmp/tmppt9uevy9.d(34): Error: no property `isAlpha` for type `immutable(char)`

    /tmp/tmppt9uevy9.d(36): Error: no property `isUpper` for type `immutable(char)`

    /tmp/tmppt9uevy9.d(36): Error: template instance `to!char` template `to` is not
    defined, did you mean No?

    /tmp/tmppt9uevy9.d(36): Error: template instance `to!char` template `to` is not
    defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppt9uevy9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   // your code\n    bool hasAlpha = false;\n    foreach(e; s)\n    {\n     \
    \   if(e.isLetter)\n        {\n            hasAlpha = true;\n            break;\n\
    \        }\n    }\n    if(!hasAlpha)\n    {\n        return s.idup.mirror;\n \
    \   }\n    else\n    {\n        string result = \"\";\n        foreach(e; s)\n\
    \        {\n            if(e.isLetter)\n            {\n                result\
    \ ~= (e.isUpper ? e.toLower : e.toUpper);\n            }\n            else\n \
    \           {\n                result ~= e;\n            }\n        }\n      \
    \  return result;\n    }\n}\nunittest\n{\n    alias candidate = solve;\n\n   \
    \ assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") ==\
    \ \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpichtc98n.d(24): Error: no property `isLetter` for type `immutable(char)`

    /tmp/tmpichtc98n.d(32): Error: no property `mirror` for type `string`

    /tmp/tmpichtc98n.d(39): Error: no property `isLetter` for type `immutable(char)`

    /tmp/tmpichtc98n.d(41): Error: no property `isUpper` for type `immutable(char)`

    /tmp/tmpichtc98n.d(41): Error: no property `toLower` for type `immutable(char)`

    /tmp/tmpichtc98n.d(41): Error: no property `toUpper` for type `immutable(char)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpichtc98n.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    if(!any(c => isLetter(c), s))\n        return reverse(s);\n\
    \    foreach(c; s)\n    {\n        if(isLetter(c))\n            result ~= to!string(swapCase(c));\n\
    \        else\n            result ~= c;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpt5sf5roc.d(21): Error: undefined identifier `any`

    /tmp/tmpt5sf5roc.d(22): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(string)`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    /tmp/tmpt5sf5roc.d(25): Error: undefined identifier `isLetter`

    /tmp/tmpt5sf5roc.d(26): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt5sf5roc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \ string result = \"\";\n  foreach(i; 0 .. s.length)\n  {\n      if(s[i] >= 'a'\
    \ && s[i] <= 'z')\n      {\n          result ~= to!string(toUpper(s[i]));\n  \
    \    }\n      else if(s[i] >= 'A' && s[i] <= 'Z')\n      {\n          result ~=\
    \ to!string(toLower(s[i]));\n      }\n      else\n      {\n          result ~=\
    \ s[i];\n      }\n  }\n  return result;\n}\nunittest\n{\n    alias candidate =\
    \ solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_smc6b31.d(25): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmp_smc6b31.d(29): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_smc6b31.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string res = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n   \
    \     {\n            if(isUpper(c))\n                res ~= toLower(c);\n    \
    \        else\n                res ~= toUpper(c);\n        }\n        else\n \
    \           res ~= c;\n    }\n    return res.length ? res : reverse(s);\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0tjea0ee.d(23): Error: undefined identifier `isAlpha`

    /tmp/tmp0tjea0ee.d(25): Error: undefined identifier `isUpper`

    /tmp/tmp0tjea0ee.d(26): Error: undefined identifier `toLower`

    /tmp/tmp0tjea0ee.d(28): Error: undefined identifier `toUpper`

    /tmp/tmp0tjea0ee.d(33): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(string)`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0tjea0ee.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   if(!s.all!(x => isAlpha(x)))\n        return s.reversed;\n    return s.map!(x\
    \ => isUpper(x) ? toLower(x) : toUpper(x)).reversed;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpscnzdoyz.d(20): Error: no property `all` for type `string`

    /tmp/tmpscnzdoyz.d(21): Error: no property `reversed` for type `string`

    /tmp/tmpscnzdoyz.d(22): Error: no property `map` for type `string`

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string[] letters = new string[];\n    uint countLetters = 0;\n    foreach(immutable\
    \ char c; s)\n    {\n        if(c.isLetter)\n        {\n            letters ~=\
    \ c.toUpper.toString;\n            countLetters += 1;\n        }\n        else\n\
    \        {\n            letters ~= c.toString;\n        }\n    }\n    string result\
    \ = \"\";\n    if(countLetters > 0)\n    {\n        foreach(immutable char c;\
    \ s)\n        {\n            if(c.isLetter)\n            {\n                auto\
    \ elem = letters.front;\n                result ~= c.toString == elem ? c.toLower.toString\
    \ : c.toUpper.toString;\n                letters = letters[1..$];\n          \
    \  }\n            else\n            {\n                result ~= c.toString;\n\
    \            }\n        }\n    }\n    else\n    {\n        foreach(immutable char\
    \ c; s)\n        {\n            result = c.toString ~ result;\n        }\n   \
    \ }\n    return result;\n}\n/*\nYou are given an array of integers and a number\
    \ (the target). You need to find 4 integers from that array, such that their sum\
    \ is equal to the target, or return an empty array if it's not possible. Your\
    \ function should return an array with four values.\n    Examples\n    >>> solve([10,\
    \ 2, 3, 4, 5, 9, 7, 8], 23)\n    [5, 7, 8, 3]\n    >>> solve([3, 34, 4, 12, 5,\
    \ 2], 9)\n    [4, 5, 2, 3]\n    >>> solve([-2, 0, 1, 2, -1, -4], -1)\n    []\n\
    */\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2bjj91h0.d(20): Error: new can only create structs, dynamic arrays
    or class objects, not `string[]`''s

    /tmp/tmp2bjj91h0.d(24): Error: no property `isLetter` for type `immutable(char)`

    /tmp/tmp2bjj91h0.d(26): Error: no property `toUpper` for type `immutable(char)`

    /tmp/tmp2bjj91h0.d(31): Error: no property `toString` for type `immutable(char)`

    /tmp/tmp2bjj91h0.d(39): Error: no property `isLetter` for type `immutable(char)`

    /tmp/tmp2bjj91h0.d(41): Error: no property `front` for type `string[]`

    /tmp/tmp2bjj91h0.d(42): Error: no property `toString` for type `immutable(char)`

    /tmp/tmp2bjj91h0.d(42): Error: no property `toLower` for type `immutable(char)`

    /tmp/tmp2bjj91h0.d(42): Error: no property `toUpper` for type `immutable(char)`

    /tmp/tmp2bjj91h0.d(47): Error: no property `toString` for type `immutable(char)`

    /tmp/tmp2bjj91h0.d(55): Error: no property `toString` for type `immutable(char)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2bjj91h0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   if (s.empty) return s;\n    else if (s.length == 1) return s[0].isAlpha ?\
    \ s[0].toUpper : s[0].toLower;\n    else\n    {\n        bool hasLetter = false;\n\
    \        foreach (i, c; s) \n        {\n            if (c.isAlpha) \n        \
    \    {\n                hasLetter = true;\n                break;\n          \
    \  }\n        }\n        if (hasLetter)\n        {\n            string result\
    \ = \"\";\n            foreach (i, c; s)\n            {\n                if (c.isAlpha)\n\
    \                {\n                    if (c.isUpper) result ~= c.toLower;\n\
    \                    else result ~= c.toUpper;\n                }\n          \
    \      else result ~= c;\n            }\n            return result;\n        }\n\
    \        else\n        {\n            string result = \"\";\n            foreach\
    \ (i, c; s)\n            {\n                result = c ~ result;\n           \
    \ }\n            return result;\n        }\n    }\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk3d7sfj3.d(20): Error: no property `empty` for type `string`

    /tmp/tmpk3d7sfj3.d(21): Error: no property `isAlpha` for type `immutable(char)`

    /tmp/tmpk3d7sfj3.d(21): Error: no property `toUpper` for type `immutable(char)`

    /tmp/tmpk3d7sfj3.d(21): Error: no property `toLower` for type `immutable(char)`

    /tmp/tmpk3d7sfj3.d(27): Error: no property `isAlpha` for type `immutable(char)`

    /tmp/tmpk3d7sfj3.d(38): Error: no property `isAlpha` for type `immutable(char)`

    /tmp/tmpk3d7sfj3.d(40): Error: no property `isUpper` for type `immutable(char)`

    /tmp/tmpk3d7sfj3.d(40): Error: no property `toLower` for type `immutable(char)`

    /tmp/tmpk3d7sfj3.d(41): Error: no property `toUpper` for type `immutable(char)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk3d7sfj3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   return s.empty || s.all!\"a\" < 'A' || 'Z' < \"a\"\n        ? s.reversed\n\
    \        : s.map!(a =>\n            a < 'A' || 'Z' < a\n                ? a.toLower\n\
    \                : a.toUpper);\n}\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\"\
    ) == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6gu16ku4.d(20): Error: no property `empty` for type `string`

    /tmp/tmp6gu16ku4.d(20): Error: no property `all` for type `string`

    /tmp/tmp6gu16ku4.d(20): Error: incompatible types for `(''Z'') < ("a")`: `char`
    and `string`

    /tmp/tmp6gu16ku4.d(21): Error: no property `reversed` for type `string`

    /tmp/tmp6gu16ku4.d(22): Error: no property `map` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6gu16ku4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string s2 = s.front ~ s.back;\n    return s.length == 0 || s.length == 1 ?\
    \ s : s2.toUpper ~ s.drop(1).dropRight(1).map!(a => isAlpha(a) ? toUpper(a) :\
    \ toLower(a)).join ~ s2.toLower;\n}\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\"\
    ) == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpr61s10o1.d(20): Error: no property `front` for type `string`

    /tmp/tmpr61s10o1.d(20): Error: no property `back` for type `string`

    /tmp/tmpr61s10o1.d(21): Error: no property `toUpper` for type `string`

    /tmp/tmpr61s10o1.d(21): Error: no property `drop` for type `string`

    /tmp/tmpr61s10o1.d(21): Error: no property `toLower` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr61s10o1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   static assert(!allSatisfy!(is(typeof(s[0]) == char))(s));\n    static assert(!allSatisfy!(is(typeof(s[0])\
    \ == dchar))(s));\n    bool is_letter = false;\n    foreach(i, c; s)\n    {\n\
    \        if (c.isLetter)\n        {\n            is_letter = true;\n         \
    \   break;\n        }\n    }\n    if (is_letter)\n    {\n        string result\
    \ = new string[s.length];\n        foreach(i, c; s)\n        {\n            if\
    \ (c.isLetter)\n            {\n                result[i] = c.toUpper;\n      \
    \      }\n            else\n            {\n                result[i] = c;\n  \
    \          }\n        }\n        return result;\n    }\n    else\n    {\n    \
    \    return s.dup.reverse;\n    }\n}\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\"\
    ) == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpv_g78_gs.d(20): Error: template instance `allSatisfy!(is(typeof(s[0])
    == char))` template `allSatisfy` is not defined

    /tmp/tmpv_g78_gs.d(20):        while evaluating: `static assert(!allSatisfy!(is(typeof(s[0])
    == char))(s))`

    /tmp/tmpv_g78_gs.d(21): Error: template instance `allSatisfy!(is(typeof(s[0])
    == dchar))` template `allSatisfy` is not defined

    /tmp/tmpv_g78_gs.d(21):        while evaluating: `static assert(!allSatisfy!(is(typeof(s[0])
    == dchar))(s))`

    /tmp/tmpv_g78_gs.d(25): Error: no property `isLetter` for type `immutable(char)`

    /tmp/tmpv_g78_gs.d(33): Error: cannot implicitly convert expression `new string[](s.length)`
    of type `string[]` to `string`

    /tmp/tmpv_g78_gs.d(36): Error: no property `isLetter` for type `immutable(char)`

    /tmp/tmpv_g78_gs.d(38): Error: no property `toUpper` for type `immutable(char)`

    /tmp/tmpv_g78_gs.d(42): Error: cannot modify `immutable` expression `result[i]`

    /tmp/tmpv_g78_gs.d(49): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!'
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   return s.length == 0 ? s : s.replace(a => isAlpha(a) ? (isUpper(a) ? toLower(a)\
    \ : toUpper(a)) : a);\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4y7hi6q5.d(20): Error: no property `replace` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4y7hi6q5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string output = \"\";\n    if (s.empty) \n    {\n        return s;\n    }\n\
    \    int i = 0;\n    foreach (l; s) \n    {\n        if (l.isLetter) \n      \
    \  {\n            if (l.isUpper) \n            {\n                output ~= l.toLower;\n\
    \            } \n            else \n            {\n                output ~= l.toUpper;\n\
    \            }\n        } \n        else \n        {\n            output ~= l;\n\
    \        }\n    }\n    if (output.length == s.length) \n    {\n        return\
    \ output;\n    } \n    else \n    {\n        return s.dup.reverse;\n    }\n}\n\
    unittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") ==\
    \ \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4p282vdp.d(21): Error: no property `empty` for type `string`

    /tmp/tmp4p282vdp.d(28): Error: no property `isLetter` for type `immutable(char)`

    /tmp/tmp4p282vdp.d(30): Error: no property `isUpper` for type `immutable(char)`

    /tmp/tmp4p282vdp.d(32): Error: no property `toLower` for type `immutable(char)`

    /tmp/tmp4p282vdp.d(36): Error: no property `toUpper` for type `immutable(char)`

    /tmp/tmp4p282vdp.d(50): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(char[])`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4p282vdp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \ string result = \"\";\n  bool isLetter = false;\n  foreach(c; s)\n  {\n    \
    \  isLetter = isLetter || isalpha(c);\n      if(isalpha(c))\n          result\
    \ ~= tolower(c);\n      else\n          result ~= c;\n  }\n  return isLetter ?\
    \ result.toUpper() : result.dup.reverse;\n}\n/*\n \n \n assert(solve(\"1234\"\
    ) == \"4321\");\nassert(solve(\"ab\") == \"AB\");\nassert(solve(\"#a@C\") == \"\
    #A@c\");\nassert(solve(\"aBcDe\") == \"AbCdE\");\nassert(solve(\"#f$G@!@#!@#@G$f#\"\
    ) == \"#F$g@!@#!@#@g$F#\");\nassert(solve(\"1A2b3C\") == \"1a2B3c\");\nassert(solve(\"\
    A0Ba\") == \"a0bA\");\nassert(solve(\"\") == \"\");\nassert(solve(\"A\") == \"\
    a\");\nassert(solve(\"A0\") == \"a0\");\nassert(solve(\"0A\") == \"0a\");\nassert(solve(\"\
    0\") == \"0\");\nassert(solve(\"abcdefgHIJKLMNOpqrstuVWXYZ\") == \"ABCDEFGhijklmnoPQRSTUvwxyz\"\
    );\nassert(solve(\"AbcdeFGhijklmnOPQrstUvwXyZ\") == \"aBCDEFghIJKLMNoPQRSTuVWxYz\"\
    );\nassert(solve(\"a1b2c3d4e5f6g7h8i9j10k11l12m13n14o15p16q17r18s19t20u21v22w23x24y25z26\"\
    ) == \"A1B2C3D4E5F6G7H8I9J10K11L12M13N14O15P16Q17R18S19T20U21V22W23X24Y25Z26\"\
    );\n \n */\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4qtprn7x.d(24): Error: undefined identifier `isalpha`

    /tmp/tmp4qtprn7x.d(25): Error: undefined identifier `isalpha`

    /tmp/tmp4qtprn7x.d(26): Error: undefined identifier `tolower`

    /tmp/tmp4qtprn7x.d(30): Error: no property `toUpper` for type `string`

    /tmp/tmp4qtprn7x.d(30): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(char[])`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4qtprn7x.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string letters = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n    string result = \"\";\n    foreach(c; s)\n    {\n        if(letters.find(c)\
    \ != -1)\n        {\n            result ~= (c.isUpper) ? toLower(c) : toUpper(c);\n\
    \        }\n        else\n        {\n            result ~= c;\n        }\n   \
    \ }\n    return (result.length == 0) ? s : result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpopvmwusi.d(24): Error: no property `find` for type `string`

    /tmp/tmpopvmwusi.d(26): Error: no property `isUpper` for type `immutable(char)`

    /tmp/tmpopvmwusi.d(26): Error: undefined identifier `toLower`

    /tmp/tmpopvmwusi.d(26): Error: undefined identifier `toUpper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpopvmwusi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \ if(s.canFind(\"a\")){\n    string result = \"\";\n    foreach(immutable char\
    \ c; s){\n      if(c.isLetter){\n        if(c.isUpper){\n          result ~= c.toLower;\n\
    \        }else{\n          result ~= c.toUpper;\n        }\n      }else{\n   \
    \     result ~= c;\n      }\n    }\n    return result;\n  }else{\n    string result\
    \ = \"\";\n    foreach(immutable char c; s){\n      result = c ~ result;\n   \
    \ }\n    return result;\n  }\n}\nunittest\n{\n    alias candidate = solve;\n\n\
    \    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\")\
    \ == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbvi3q8gx.d(20): Error: no property `canFind` for type `string`

    /tmp/tmpbvi3q8gx.d(23): Error: no property `isLetter` for type `immutable(char)`

    /tmp/tmpbvi3q8gx.d(24): Error: no property `isUpper` for type `immutable(char)`

    /tmp/tmpbvi3q8gx.d(25): Error: no property `toLower` for type `immutable(char)`

    /tmp/tmpbvi3q8gx.d(27): Error: no property `toUpper` for type `immutable(char)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbvi3q8gx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   enum letters = \"abcdefghijklmnopqrstuvwxyz\";\n    enum letters2 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n    string res;\n    foreach(c; s)\n    {\n        if(c >= 'a' && c <= 'z')\n\
    \        {\n            int index = c-'a';\n            res ~= letters2[index];\n\
    \        }\n        else if(c >= 'A' && c <= 'Z')\n        {\n            int\
    \ index = c-'A';\n            res ~= letters[index];\n        }\n        else\n\
    \        {\n            res ~= c;\n        }\n    }\n    return res;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp7lesih7g.d(47): unittest failure

    ----------------

    ??:? _d_unittestp [0x42815d]

    ??:? void tmp7lesih7g.__unittest_L42_C1() [0x427c69]

    ??:? void tmp7lesih7g.__modtest() [0x427edc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c867]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b776]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43014d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4305fc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4300d9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b74d]

    ??:? runModuleUnitTests [0x42c63d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428620]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n\t\
    return s.map!(x => !isAlpha(x) ? x : (x.isUpper ? toLower(x) : toUpper(x))).reverse();\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmph3muh0oc.d(20): Error: no property `map` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph3muh0oc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   auto isLetter = (Char c) { return isAlpha(c); };\n    auto toUpper = (Char\
    \ c) { return toUpper(c); };\n    auto toLower = (Char c) { return toLower(c);\
    \ };\n    return\n        s.chunks(isLetter).map!(\n            s.equal!(c =>\
    \ toUpper(c),\n                     c => toLower(c)\n                     ));\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpacofv2d7.d(20): Error: undefined identifier `Char`

    /tmp/tmpacofv2d7.d(21): Error: undefined identifier `Char`

    /tmp/tmpacofv2d7.d(22): Error: undefined identifier `Char`

    /tmp/tmpacofv2d7.d(24): Error: no property `chunks` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpacofv2d7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   auto upper = Algorithm.map!(\"a\" .. \"z\", \"A\" .. \"Z\");\n    auto lower\
    \ = Algorithm.map!(\"A\" .. \"Z\", \"a\" .. \"z\");\n    auto l = zip(s.byChunk(1),\
    \ s.byChunk(1).take(1).cycle);\n    auto l2 = l.map!(a => (a[0].noCasecmp(a[1])\
    \ == 0 ? a[0] : upper.count(a[0]) > 0 ? lower[a[0]] : upper[a[0]])).array;\n \
    \   //return l2.reversed.join(\"\");\n    return l2.join(\"\");\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp57b8bm5c.d(20): Error: found `..` when expecting `)` following
    template argument list

    /tmp/tmp57b8bm5c.d(20): Error: semicolon expected following auto declaration,
    not `"z"`

    /tmp/tmp57b8bm5c.d(20): Error: found `..` when expecting `;` following statement

    /tmp/tmp57b8bm5c.d(20): Error: found `)` when expecting `;` following statement

    /tmp/tmp57b8bm5c.d(20): Deprecation: use `{ }` for an empty statement, not `;`

    /tmp/tmp57b8bm5c.d(21): Error: found `..` when expecting `)` following template
    argument list

    /tmp/tmp57b8bm5c.d(21): Error: semicolon expected following auto declaration,
    not `"Z"`

    /tmp/tmp57b8bm5c.d(21): Error: found `..` when expecting `;` following statement

    /tmp/tmp57b8bm5c.d(21): Error: found `)` when expecting `;` following statement

    /tmp/tmp57b8bm5c.d(21): Deprecation: use `{ }` for an empty statement, not `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp57b8bm5c.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   if(s.length == 0)\n    {\n        return s;\n    }\n    int flag = 0;\n  \
    \  foreach(c; s)\n    {\n        if(c.isAlpha)\n        {\n            flag =\
    \ 1;\n            break;\n        }\n    }\n    if(flag == 0)\n    {\n       \
    \ return s.reversed;\n    }\n    else\n    {\n        foreach(c; s)\n        {\n\
    \            if(c.isAlpha)\n            {\n                c = c.flip;\n     \
    \       }\n        }\n        return s;\n    }\n    \n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqzmvowjk.d(27): Error: no property `isAlpha` for type `immutable(char)`

    /tmp/tmpqzmvowjk.d(35): Error: no property `reversed` for type `string`

    /tmp/tmpqzmvowjk.d(41): Error: no property `isAlpha` for type `immutable(char)`

    /tmp/tmpqzmvowjk.d(43): Error: no property `flip` for type `immutable(char)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqzmvowjk.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   if(s.all!(ch => ch.isDigit))\n    {\n        return s.reverse;\n    }\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpu3edvrkx.d(24): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu3edvrkx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string ss;\n    for(uint i = 0; i < s.length; i++)\n    {\n        if(!s[i].isLetter)\n\
    \        {\n            ss ~= s[i];\n        }\n        else\n        {\n    \
    \        ss ~= s[i].toUpper;\n        }\n    }\n    if(ss == s)\n    {\n     \
    \   string p;\n        for(uint i = 0; i < s.length; i++)\n        {\n       \
    \     if(!s[i].isLetter)\n            {\n                p ~= s[i];\n        \
    \    }\n            else\n            {\n                p ~= s[i].toLower;\n\
    \            }\n        }\n        return p;\n    }\n    return ss;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpl0mqduet.d(23): Error: no property `isLetter` for type `immutable(char)`

    /tmp/tmpl0mqduet.d(29): Error: no property `toUpper` for type `immutable(char)`

    /tmp/tmpl0mqduet.d(37): Error: no property `isLetter` for type `immutable(char)`

    /tmp/tmpl0mqduet.d(43): Error: no property `toLower` for type `immutable(char)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl0mqduet.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    if (s.empty)\n        return result;\n    foreach(c; s)\n\
    \    {\n        if (isdigit(c))\n            result ~= c;\n        else\n    \
    \        result ~= islower(c) ? toupper(c) : tolower(c);\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpz21uy6b6.d(21): Error: no property `empty` for type `string`

    /tmp/tmpz21uy6b6.d(25): Error: undefined identifier `isdigit`

    /tmp/tmpz21uy6b6.d(28): Error: undefined identifier `islower`

    /tmp/tmpz21uy6b6.d(28): Error: undefined identifier `toupper`

    /tmp/tmpz21uy6b6.d(28): Error: undefined identifier `tolower`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz21uy6b6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string res = \"\";\n    if(s.length != 0) \n    {\n        bool b = isLetter(s[0]);\n\
    \        bool b1 = isLower(s[0]);\n        foreach(i; s) \n        {\n       \
    \     if(isLetter(i)) \n            {\n                if(isLower(i)) \n     \
    \           {\n                    res ~= toUpper(i);\n                } \n  \
    \              else \n                {\n                    res ~= toLower(i);\n\
    \                }\n            } \n            else \n            {\n       \
    \         res ~= i;\n            }\n        }\n        if(b) \n        {\n   \
    \         return res;\n        } \n        else \n        {\n            return\
    \ res.dup.idup;\n        }\n    } \n    else \n    {\n        return res;\n  \
    \  }\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpa2chko0a.d(23): Error: undefined identifier `isLetter`

    /tmp/tmpa2chko0a.d(24): Error: undefined identifier `isLower`

    /tmp/tmpa2chko0a.d(27): Error: undefined identifier `isLetter`

    /tmp/tmpa2chko0a.d(29): Error: undefined identifier `isLower`

    /tmp/tmpa2chko0a.d(31): Error: undefined identifier `toUpper`

    /tmp/tmpa2chko0a.d(35): Error: undefined identifier `toLower`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa2chko0a.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   static bool isAlpha(char c) {\n      return ('a' <= c && c <= 'z') || ('A'\
    \ <= c && c <= 'Z');\n    }\n    \n    // Write your code here\n    int n = s.length;\n\
    \    string lower = \"abcdefghijklmnopqrstuvwxyz\";\n    string upper = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n    string ans = \"\";\n    bool flag = true;\n    for(int i = 0; i < n; i++)\
    \ {\n        if(isAlpha(s[i])) {\n            flag = false;\n            if(lower.find(s[i])\
    \ != -1)\n                ans += to!string(upper[lower.find(s[i])]);\n       \
    \     else\n                ans += to!string(lower[upper.find(s[i])]);\n     \
    \   }\n        else\n            ans += s[i];\n    }\n    if(flag)\n        return\
    \ s[n-1..0];\n    return ans;\n}\nunittest\n{\n    alias candidate = solve;\n\n\
    \    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\")\
    \ == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp60w2p0c2.d(25): Error: cannot implicitly convert expression `s.length`
    of type `ulong` to `int`

    /tmp/tmp60w2p0c2.d(33): Error: no property `find` for type `string`

    /tmp/tmp60w2p0c2.d(34): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmp60w2p0c2.d(36): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmp60w2p0c2.d(39): Error: slice `ans` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp60w2p0c2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    if (s.canFind(\"a\") || s.canFind(\"b\") || s.canFind(\"\
    c\") || s.canFind(\"d\") || s.canFind(\"e\") || s.canFind(\"f\") || s.canFind(\"\
    g\") || s.canFind(\"h\") || s.canFind(\"i\") || s.canFind(\"j\") || s.canFind(\"\
    k\") || s.canFind(\"l\") || s.canFind(\"m\") || s.canFind(\"n\") || s.canFind(\"\
    o\") || s.canFind(\"p\") || s.canFind(\"q\") || s.canFind(\"r\") || s.canFind(\"\
    s\") || s.canFind(\"t\") || s.canFind(\"u\") || s.canFind(\"v\") || s.canFind(\"\
    w\") || s.canFind(\"x\") || s.canFind(\"y\") || s.canFind(\"z\"))\n    {\n   \
    \     for (int i = 0; i < s.length; i++)\n        {\n            if (s[i] >= 'a'\
    \ && s[i] <= 'z')\n            {\n                result ~= cast(char)(s[i] -\
    \ 32);\n            }\n            else if (s[i] >= 'A' && s[i] <= 'Z')\n    \
    \        {\n                result ~= cast(char)(s[i] + 32);\n            }\n\
    \            else\n            {\n                result ~= s[i];\n          \
    \  }\n        }\n    }\n    else\n    {\n        result = s.dup.reverse;\n   \
    \ }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphhrwz3sx.d(21): Error: no property `canFind` for type `string`

    /tmp/tmphhrwz3sx.d(21): Error: no property `canFind` for type `string`

    /tmp/tmphhrwz3sx.d(21): Error: no property `canFind` for type `string`

    /tmp/tmphhrwz3sx.d(21): Error: no property `canFind` for type `string`

    /tmp/tmphhrwz3sx.d(21): Error: no property `canFind` for type `string`

    /tmp/tmphhrwz3sx.d(21): Error: no property `canFind` for type `string`

    /tmp/tmphhrwz3sx.d(21): Error: no property `canFind` for type `string`

    /tmp/tmphhrwz3sx.d(21): Error: no property `canFind` for type `string`

    /tmp/tmphhrwz3sx.d(21): Error: no property `canFind` for type `string`

    /tmp/tmphhrwz3sx.d(21): Error: no property `canFind` for type `string`

    /tmp/tmphhrwz3sx.d(21): Error: no property `canFind` for type `string`

    /tmp/tmphhrwz3sx.d(21): Error: no property `canFind` for type `string`

    /tmp/tmphhrwz3sx.d(21): Error: no property `canFind` for type `string`

    /tmp/tmphhrwz3sx.d(21): Error: no property `canFind` for type `string`

    /tmp/tmphhrwz3sx.d(21): Error:'
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    bool hasLetter = false;\n    foreach(i, x; s)\n\
    \    {\n        if(isalpha(x))\n        {\n            hasLetter = true;\n   \
    \         result ~= toLower(x);\n        }\n        else\n        {\n        \
    \    result ~= x;\n        }\n    }\n    if(hasLetter)\n    {\n        return\
    \ result.ucase;\n    }\n    else\n    {\n        return result.retro;\n    }\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp16x59631.d(24): Error: undefined identifier `isalpha`

    /tmp/tmp16x59631.d(27): Error: undefined identifier `toLower`

    /tmp/tmp16x59631.d(36): Error: no property `ucase` for type `string`

    /tmp/tmp16x59631.d(40): Error: no property `retro` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp16x59631.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string res = \"\";\n    if(s.filter!(a => isLetter(a)).empty)\n    {\n   \
    \     foreach(a; s)\n        {\n            if(isLetter(a))\n            {\n \
    \               if(isUpper(a))\n                    res ~= toLower(a);\n     \
    \           else\n                    res ~= toUpper(a);\n            }\n    \
    \        else\n                res ~= a;\n        }\n    }\n    else\n       \
    \ res = s.retro;\n    return res;\n}\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\"\
    ) == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppiba2muc.d(21): Error: no property `filter` for type `string`

    /tmp/tmppiba2muc.d(25): Error: undefined identifier `isLetter`

    /tmp/tmppiba2muc.d(27): Error: undefined identifier `isUpper`

    /tmp/tmppiba2muc.d(28): Error: undefined identifier `toLower`

    /tmp/tmppiba2muc.d(30): Error: undefined identifier `toUpper`

    /tmp/tmppiba2muc.d(37): Error: no property `retro` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppiba2muc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   int len = s.length;\n    string s2 = \"\";\n    foreach(c; s)\n    {\n   \
    \     char c2 = to!char(tolower(c));\n        if(c != c2)\n        {\n       \
    \     s2 ~= c2;\n        }\n        else\n        {\n            s2 ~= to!char(toupper(c));\n\
    \        }\n    }\n    return s2;\n}\n// int main()\n// {\n//     auto result\
    \ = solve(\"1234\");\n//     writeln(result);\n//     return 0;\n// }\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfyl2kx9a.d(20): Error: cannot implicitly convert expression `s.length`
    of type `ulong` to `int`

    /tmp/tmpfyl2kx9a.d(24): Error: template instance `to!char` template `to` is not
    defined, did you mean No?

    /tmp/tmpfyl2kx9a.d(31): Error: template instance `to!char` template `to` is not
    defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfyl2kx9a.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   //vise versa = vice versa = reverse\n    if(s.contains(\"[a-zA-Z]\")){\n \
    \       char[] temp = to!char[](s);\n        for(int i = 0; i < temp.length; i++){\n\
    \            if(isLowerCase(temp[i])){\n                temp[i] = toUpperCase(temp[i]);\n\
    \            }\n            else if(isUpperCase(temp[i])){\n                temp[i]\
    \ = toLowerCase(temp[i]);\n            }\n        }\n        s = to!string(temp);\n\
    \    }\n    else{\n        s = temp.reverse().idup;\n    }\n    return s;\n}\n\
    unittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") ==\
    \ \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0g_j78l2.d(21): Error: no property `contains` for type `string`

    /tmp/tmp0g_j78l2.d(22): Error: template instance `to!char` template `to` is not
    defined, did you mean No?

    /tmp/tmp0g_j78l2.d(24): Error: undefined identifier `isLowerCase`

    /tmp/tmp0g_j78l2.d(25): Error: undefined identifier `toUpperCase`

    /tmp/tmp0g_j78l2.d(27): Error: undefined identifier `isUpperCase`

    /tmp/tmp0g_j78l2.d(28): Error: undefined identifier `toLowerCase`

    /tmp/tmp0g_j78l2.d(31): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmp0g_j78l2.d(34): Error: undefined identifier `temp`, did you mean template
    `cmp(T)(const(T) x, const(T) y) if (isFloatingPoint!T)`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0g_j78l2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string tmp=s;\n    bool isLetterFound=false;\n    for(int i=0;i<s.length;i++)\n\
    \    {\n        if(s[i]>=65 && s[i]<=90)\n        {\n            tmp[i]=tolower(s[i]);\n\
    \            isLetterFound=true;\n        }\n        else if(s[i]>=97 && s[i]<=122)\n\
    \        {\n            tmp[i]=toupper(s[i]);\n            isLetterFound=true;\n\
    \        }\n    }\n    if(isLetterFound)\n        return tmp;\n    else\n    \
    \    return reverse(tmp);\n}\nunittest\n{\n    alias candidate = solve;\n\n  \
    \  assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") ==\
    \ \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9zw8faf3.d(26): Error: undefined identifier `tolower`

    /tmp/tmp9zw8faf3.d(31): Error: undefined identifier `toupper`

    /tmp/tmp9zw8faf3.d(38): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(string)`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9zw8faf3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   int count = 0;\n    bool toUpper = false;\n    string result = \"\";\n   \
    \ foreach(char c; s)\n    {\n        if (isAlpha(c))\n        {\n            count++;\n\
    \            if (isLower(c))\n                toUpper = true;\n            else\n\
    \                toUpper = false;\n        }\n    }\n    if (count == 0)\n   \
    \     return reverse(s);\n    else\n    {\n        if (toUpper)\n        {\n \
    \           foreach(char c; s)\n            {\n                if (isAlpha(c))\n\
    \                    result ~= toUpper(c);\n                else\n           \
    \         result ~= c;\n            }\n        }\n        else\n        {\n  \
    \          foreach(char c; s)\n            {\n                if (isAlpha(c))\n\
    \                    result ~= toLower(c);\n                else\n           \
    \         result ~= c;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxh374key.d(25): Error: undefined identifier `isAlpha`

    /tmp/tmpxh374key.d(28): Error: undefined identifier `isLower`

    /tmp/tmpxh374key.d(35): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(string)`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    /tmp/tmpxh374key.d(42): Error: undefined identifier `isAlpha`

    /tmp/tmpxh374key.d(43): Error: function expected before `()`, not `toUpper` of
    type `bool`

    /tmp/tmpxh374key.d(52): Error: undefined identifier `isAlpha`

    /tmp/tmpxh374key.d(53): Error: undefined identifier `toLower`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxh374key.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   static bool isletter(dchar c) \n    {\n        return isAlpha(c) || isDigit(c);\n\
    \    }\n    string result;\n    foreach(c; s)\n    {\n        if(isletter(c))\n\
    \        {\n            if(isUpper(c))\n                result ~= toLower(c);\n\
    \            else\n                result ~= toUpper(c);\n        }\n        else\n\
    \            result ~= c;\n    }\n    return result.dup.reverse;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpo_ve4rqd.d(22): Error: undefined identifier `isAlpha`

    /tmp/tmpo_ve4rqd.d(22): Error: undefined identifier `isDigit`

    /tmp/tmpo_ve4rqd.d(29): Error: undefined identifier `isUpper`

    /tmp/tmpo_ve4rqd.d(30): Error: undefined identifier `toLower`

    /tmp/tmpo_ve4rqd.d(32): Error: undefined identifier `toUpper`

    /tmp/tmpo_ve4rqd.d(37): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(char[])`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo_ve4rqd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    foreach(i; 0 .. s.length)\n    {\n        if (s[i]\
    \ in ['a' .. 'z'])\n        {\n            result ~= toupper(s[i]);\n        }\n\
    \        else if (s[i] in ['A' .. 'Z'])\n        {\n            result ~= tolower(s[i]);\n\
    \        }\n        else\n        {\n            result ~= s[i];\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n \
    \   assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") ==\
    \ \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5mn2y3es.d(23): Error: found `..` when expecting `,`

    /tmp/tmp5mn2y3es.d(27): Error: found `..` when expecting `,`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5mn2y3es.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string rev = \"\";\n    //checking if the string is empty, if so return rev\
    \ string.\n    if(s.empty) return rev;\n    //checking if the string contains\
    \ no letters.\n    if(!s.find('a') && !s.find('b') && !s.find('c') && !s.find('d')\
    \ && !s.find('e') && !s.find('f') && !s.find('g') && !s.find('h') && !s.find('i')\
    \ && !s.find('j') && !s.find('k') && !s.find('l') && !s.find('m') && !s.find('n')\
    \ && !s.find('o') && !s.find('p') && !s.find('q') && !s.find('r') && !s.find('s')\
    \ && !s.find('t') && !s.find('u') && !s.find('v') && !s.find('w') && !s.find('x')\
    \ && !s.find('y') && !s.find('z') && !s.find('A') && !s.find('B') && !s.find('C')\
    \ && !s.find('D') && !s.find('E') && !s.find('F') && !s.find('G') && !s.find('H')\
    \ && !s.find('I') && !s.find('J') && !s.find('K') && !s.find('L') && !s.find('M')\
    \ && !s.find('N') && !s.find('O') && !s.find('P') && !s.find('Q') && !s.find('R')\
    \ && !s.find('S') && !s.find('T') && !s.find('U') && !s.find('V') && !s.find('W')\
    \ && !s.find('X') && !s.find('Y') && !s.find('Z'))\n    {\n        //if so, reverse\
    \ the string.\n        rev = s.dup.reverse;\n        return rev;\n    }\n    //checking\
    \ if the string is not empty.\n   \nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\"\
    ) == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe62g6qxr.d(32): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe62g6qxr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string res = s.dup;\n    res = res.split();\n    if (res.length == 0)\n  \
    \      res = s.dup;\n    for (i,j ; res.length ; i++)\n    {\n        if (res[i]\
    \ == \"a\" || res[i] == \"b\" || res[i] == \"c\" || res[i] == \"d\" || res[i]\
    \ == \"e\" || res[i] == \"f\" || res[i] == \"g\" || res[i] == \"h\" || res[i]\
    \ == \"i\" || res[i] == \"j\" || res[i] == \"k\" || res[i] == \"l\" || res[i]\
    \ == \"m\" || res[i] == \"n\" || res[i] == \"o\" || res[i] == \"p\" || res[i]\
    \ == \"q\" || res[i] == \"r\" || res[i] == \"s\" || res[i] == \"t\" || res[i]\
    \ == \"u\" || res[i] == \"v\" || res[i] == \"w\" || res[i] == \"x\" || res[i]\
    \ == \"y\" || res[i] == \"z\")\n        {\n            j = res[i].toUpper();\n\
    \            res[i] = j;\n        }\n        else if (res[i] == \"A\" || res[i]\
    \ == \"B\" || res[i] == \"C\" || res[i] == \"D\" || res[i] == \"E\" || res[i]\
    \ == \"F\" || res[i] == \"G\" || res[i] == \"H\" || res[i] == \"I\" || res[i]\
    \ == \"J\" || res[i] == \"K\" || res[i] == \"L\" || res[i] == \"M\" || res[i]\
    \ == \"N\" || res[i] == \"O\" || res[i] == \"P\" || res[i] == \"Q\" || res[i]\
    \ == \"R\" || res[i] == \"S\" || res[i] == \"T\" || res[i] == \"U\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb2zp3g0m.d(36): Error: found `AsDf` when expecting `)`

    /tmp/tmpb2zp3g0m.d(36): Error: found `aSdF` when expecting `;` following statement

    /tmp/tmpb2zp3g0m.d(37): Error: found `1234` when expecting `;` following statement

    /tmp/tmpb2zp3g0m.d(37): Error: found `4321` when expecting `;` following statement

    /tmp/tmpb2zp3g0m.d(38): Error: found `ab` when expecting `;` following statement

    /tmp/tmpb2zp3g0m.d(38): Error: found `AB` when expecting `;` following statement

    /tmp/tmpb2zp3g0m.d(39): Error: found `#` when expecting `;` following statement

    /tmp/tmpb2zp3g0m.d(39): Error: basic type expected, not `") == "`

    /tmp/tmpb2zp3g0m.d(39): Error: no identifier for declarator `_error_`

    /tmp/tmpb2zp3g0m.d(39): Error: found `#` when expecting `;` following statement

    /tmp/tmpb2zp3g0m.d(39): Error: basic type expected, not `");\x0a    assert(candidate("`

    /tmp/tmpb2zp3g0m.d(39): Error: no identifier for declarator `_error_`

    /tmp/tmpb2zp3g0m.d(40): Error: found `#` when expecting `;` following statement

    /tmp/tmpb2zp3g0m'
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   import std.string;\n    import std.algorithm;\n    //string s1;\n    //string\
    \ s2;\n    auto s1 = split(s, (a)=>a.isAlpha);\n    auto s2 = join(s1.map!(a=>a.reversed));\n\
    \    //return s2;\n    auto s3 = s2.map!(a=>a.isUpper ? a.toLower : a.toUpper);\n\
    \    return s3;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7n_a1u5o.d(24): Error: template `std.array.split` cannot deduce
    function from argument types `!()(string, void)`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/array.d(1505):        `std.array.split(S)(S
    s) if (isSomeString!S)`

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/array.d(1611):        `std.array.split(Range,
    Separator)(Range range, Separator sep) if (isForwardRange!Range && (is(typeof(ElementType!Range.init
    == Separator.init)) || is(typeof(ElementType!Range.init == ElementType!Separator.init))
    && isForwardRange!Separator))`

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/array.d(1621):        `std.array.split(alias
    isTerminator, Range)(Range range) if (isForwardRange!Range && is(typeof(unaryFun!isTerminator(range.front))))`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7n_a1u5o.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string t = \"\";\n    foreach(immutable c; s)\n    {\n        if(isLetter(c))\n\
    \        {\n            t ~= toLower(c);\n        }\n        else\n        {\n\
    \            t ~= toUpper(c);\n        }\n    }\n    return t;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfm274ncb.d(23): Error: undefined identifier `isLetter`

    /tmp/tmpfm274ncb.d(25): Error: undefined identifier `toLower`

    /tmp/tmpfm274ncb.d(29): Error: undefined identifier `toUpper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfm274ncb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   foreach(ref e; s)\n    {\n        if(isAlpha(e))\n        {\n            e\
    \ = toLower(e);\n        }\n    }\n    string rev = s.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.dup.du\n\
    unittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") ==\
    \ \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpw2jwjdv1.d(28): Error: semicolon expected, not `unittest`

    /tmp/tmpw2jwjdv1.d(28): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw2jwjdv1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   return s.noneOf(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\")\
    \ ? \n           s.reverse :\n           s.map!(a => a > 'Z' ? a.toUpper : a.toLower);\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpexk5zwzv.d(20): Error: no property `noneOf` for type `string`

    /tmp/tmpexk5zwzv.d(21): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(string)`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    /tmp/tmpexk5zwzv.d(22): Error: no property `map` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpexk5zwzv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   if (s.empty)\n        return s;\n    \n    string r = \"\";\n    foreach(char\
    \ c; s)\n    {\n        r ~= c.isLetter ? c.isUpper ? c.toLower : c.toUpper :\
    \ c;\n    }\n    return r;\n}\nunittest\n{\n    alias candidate = solve;\n\n \
    \   assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") ==\
    \ \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpj1nep19h.d(20): Error: no property `empty` for type `string`

    /tmp/tmpj1nep19h.d(26): Error: no property `isLetter` for type `char`

    /tmp/tmpj1nep19h.d(26): Error: no property `isUpper` for type `char`

    /tmp/tmpj1nep19h.d(26): Error: no property `toLower` for type `char`

    /tmp/tmpj1nep19h.d(26): Error: no property `toUpper` for type `char`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj1nep19h.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string r;\n    foreach(c; s)\n    {\n        if(isLetter(c))\n        {\n\
    \            r ~= toUpper(c);\n        }\n        else\n        {\n          \
    \  r ~= c;\n        }\n    }\n    return r;\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpa47jopu4.d(23): Error: undefined identifier `isLetter`

    /tmp/tmpa47jopu4.d(25): Error: undefined identifier `toUpper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa47jopu4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    int length = s.length;\n    auto isLetter = (c)\
    \ {\n        return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z');\n    };\n\
    \    for (int i = 0; i < length; i++) {\n        if (isLetter(s[i])) {\n     \
    \       if (s[i] >= 'a' && s[i] <= 'z') {\n                result ~= toupper(s[i]);\n\
    \            } else {\n                result ~= tolower(s[i]);\n            }\n\
    \        } else {\n            result ~= s[i];\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpto6lppnr.d(21): Error: cannot implicitly convert expression `s.length`
    of type `ulong` to `int`

    /tmp/tmpto6lppnr.d(22): Error: variable `tmpto6lppnr.solve.isLetter` type `void`
    is inferred from initializer `(c)

    {

    return c >= ''a'' && (c <= ''z'') || c >= ''A'' && (c <= ''Z'');

    }

    `, and variables cannot be of type `void`

    /tmp/tmpto6lppnr.d(22): Error: template lambda has no value

    /tmp/tmpto6lppnr.d(28): Error: undefined identifier `toupper`

    /tmp/tmpto6lppnr.d(30): Error: undefined identifier `tolower`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpto6lppnr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   int range = s.length;\n    //char rev[range];\n    string rev=\"\";\n    foreach(i;\
    \ 0..range)\n    {\n        switch(s[i])\n        {\n            case 'a'..'z':\n\
    \                //rev[i] = toupper(s[i]);\n                rev=rev~toupper(s[i]);\n\
    \                break;\n            case 'A'..'Z':\n                //rev[i]\
    \ = tolower(s[i]);\n                rev=rev~tolower(s[i]);\n                break;\n\
    \            default:\n                //rev[i] = s[i];\n                rev=rev~s[i];\n\
    \                break;\n        }\n    }\n    //return rev;\n    return reverse(rev);\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmptaj91zfg.d(27): Error: found `..` when expecting `:`

    /tmp/tmptaj91zfg.d(27): Error: found `:` when expecting `;` following statement

    /tmp/tmptaj91zfg.d(31): Error: found `..` when expecting `:`

    /tmp/tmptaj91zfg.d(31): Error: found `:` when expecting `;` following statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptaj91zfg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string res = \"\";\n    int n = s.length;\n    foreach(i; 0 .. n)\n    {\n\
    \        if (s[i] > 'a' && s[i] < 'z')\n        {\n            res ~= to!string(s[i]).toUpper();\n\
    \        }\n        else if (s[i] > 'A' && s[i] < 'Z')\n        {\n          \
    \  res ~= to!string(s[i]).toLower();\n        }\n        else\n        {\n   \
    \         res ~= to!string(s[i]);\n        }\n    }\n    return res;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp256v4vmh.d(21): Error: cannot implicitly convert expression `s.length`
    of type `ulong` to `int`

    /tmp/tmp256v4vmh.d(26): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmp256v4vmh.d(30): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmp256v4vmh.d(34): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp256v4vmh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   if (s.countUntil(\"@\") == 0) return s.retro();\n    string result = \"\"\
    ;\n    foreach (i, ch; s) \n    {\n        if (isAlpha(ch)) \n        {\n    \
    \        if (isUpper(ch)) \n            {\n                result ~= ch.toLower();\n\
    \            } \n            else \n            {\n                result ~= ch.toUpper();\n\
    \            }\n        } \n        else \n        {\n            result ~= ch;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\"\
    ) == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpw_dfyln3.d(20): Error: no property `countUntil` for type `string`

    /tmp/tmpw_dfyln3.d(20): Error: no property `retro` for type `string`

    /tmp/tmpw_dfyln3.d(24): Error: undefined identifier `isAlpha`

    /tmp/tmpw_dfyln3.d(26): Error: undefined identifier `isUpper`

    /tmp/tmpw_dfyln3.d(28): Error: no property `toLower` for type `immutable(char)`

    /tmp/tmpw_dfyln3.d(32): Error: no property `toUpper` for type `immutable(char)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw_dfyln3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   auto v = [](bool c) {\n        if(c) return 'A';\n        return 'a';\n  \
    \  };\n    auto u = [](bool c) {\n        if(c) return '1';\n        return '2';\n\
    \    };\n    string d = \"\";\n    if(s.all!(a => !isAlpha(a)))\n    {\n     \
    \   d = s.map!(a => v(isUpper(a)));\n    }\n    else\n    {\n        d = s.map!(a\
    \ => u(isDigit(a)));\n    }\n    return d;\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0o235x4y.d(20): Error: found `c` when expecting `.` following bool

    /tmp/tmp0o235x4y.d(20): Error: found `)` when expecting identifier following `bool`.

    /tmp/tmp0o235x4y.d(20): Error: found `{` when expecting `,`

    /tmp/tmp0o235x4y.d(21): Error: expression expected, not `if`

    /tmp/tmp0o235x4y.d(21): Error: found `return` when expecting `,`

    /tmp/tmp0o235x4y.d(21): Error: found `;` when expecting `,`

    /tmp/tmp0o235x4y.d(22): Error: expression expected, not `return`

    /tmp/tmp0o235x4y.d(22): Error: found `97U` when expecting `,`

    /tmp/tmp0o235x4y.d(22): Error: expression expected, not `;`

    /tmp/tmp0o235x4y.d(23): Error: found `}` when expecting `,`

    /tmp/tmp0o235x4y.d(23): Error: expression expected, not `;`

    /tmp/tmp0o235x4y.d(24): Error: found `auto` when expecting `,`

    /tmp/tmp0o235x4y.d(24): Error: found `c` when expecting `.` following bool

    /tmp/tmp0o235x4y.d(24): Error: found `)` when expecting identifier following `bool`.

    /tmp/tmp0o235x4y.d(24): Error: found `{` when expecting `,`

    /tmp/tmp0o235x4y.d(25): Erro'
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    string letters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\
    ;\n    foreach(letter;s)\n    {\n        if(letters.canFind(letter))\n       \
    \ {\n            result ~= lowercase(letter);\n        }\n        else\n     \
    \   {\n            result ~= uppercase(letter);\n        }\n    }\n    return\
    \ reverse(result);\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpuh5i_fqt.d(24): Error: no property `canFind` for type `string`

    /tmp/tmpuh5i_fqt.d(26): Error: undefined identifier `lowercase`

    /tmp/tmpuh5i_fqt.d(30): Error: undefined identifier `uppercase`

    /tmp/tmpuh5i_fqt.d(33): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(string)`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuh5i_fqt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   if(s.all!(a => a == '0' || a == '1' || a == '2' || a == '3' || a == '4' ||\
    \ a == '5' || a == '6' || a == '7' || a == '8' || a == '9' ))\n    {\n       \
    \ return s.reverse();\n    }\n    else\n    {\n        string result;\n      \
    \  foreach(index, item; s)\n        {\n            if(item == 'A' || item == 'a'\
    \ || item == 'E' || item == 'e' || item == 'I' || item == 'i' || item == 'O' ||\
    \ item == 'o' || item == 'U' || item == 'u')\n            {\n                result\
    \ ~= to!string(item).toLower();\n            }\n            else\n           \
    \ {\n                result ~= to!string(item).toUpper();\n            }\n   \
    \     }\n        return result;\n    }\n}\nunittest\n{\n    alias candidate =\
    \ solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk27jtyb9.d(20): Error: no property `all` for type `string`

    /tmp/tmpk27jtyb9.d(22): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(string)`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    /tmp/tmpk27jtyb9.d(31): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmpk27jtyb9.d(35): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk27jtyb9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   if (s.empty) return s;\n    string result = \"\";\n    foreach (c; s)\n  \
    \  {\n        if (c.isAlpha)\n        {\n            result ~= c.isUpper ? c.toLower\
    \ : c.toUpper;\n        }\n        else\n        {\n            result ~= c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\"\
    ) == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprdrxwfzv.d(20): Error: no property `empty` for type `string`

    /tmp/tmprdrxwfzv.d(24): Error: no property `isAlpha` for type `immutable(char)`

    /tmp/tmprdrxwfzv.d(26): Error: no property `isUpper` for type `immutable(char)`

    /tmp/tmprdrxwfzv.d(26): Error: no property `toLower` for type `immutable(char)`

    /tmp/tmprdrxwfzv.d(26): Error: no property `toUpper` for type `immutable(char)`

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   if (s.empty)\n        return s;\n    foreach (i; 0 .. s.length)\n    {\n \
    \       if (isAlpha(s[i]))\n        {\n            s[i] = toUpper(s[i]);\n   \
    \     }\n        else\n        {\n            s[i] = toLower(s[i]);\n        }\n\
    \    }\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6u2inbb5.d(20): Error: no property `empty` for type `string`

    /tmp/tmp6u2inbb5.d(24): Error: undefined identifier `isAlpha`

    /tmp/tmp6u2inbb5.d(26): Error: undefined identifier `toUpper`

    /tmp/tmp6u2inbb5.d(30): Error: undefined identifier `toLower`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6u2inbb5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string res = \"\";\n    if(s.find('a') != -1)\n    {\n        foreach(immutable\
    \ c; s)\n        {\n            if(isLetter(c))\n            {\n             \
    \   if(c.isUpper())\n                    res ~= toLower(c);\n                else\n\
    \                    res ~= toUpper(c);\n            }\n            else\n   \
    \             res ~= c;\n        }\n    }\n    else\n        res = reverse(s);\n\
    \    return res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8f6v8ldg.d(21): Error: no property `find` for type `string`

    /tmp/tmp8f6v8ldg.d(25): Error: undefined identifier `isLetter`

    /tmp/tmp8f6v8ldg.d(27): Error: no property `isUpper` for type `immutable(char)`

    /tmp/tmp8f6v8ldg.d(28): Error: undefined identifier `toLower`

    /tmp/tmp8f6v8ldg.d(30): Error: undefined identifier `toUpper`

    /tmp/tmp8f6v8ldg.d(37): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(string)`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8f6v8ldg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   auto it = s.find_if(unaryFun!(isLetter));\n    if (it == s.length)\n     \
    \   return s.dup.reverse;\n    \n    return s.map!(i => (isLetter(i)) ? to!char(i\
    \ ^ ' ') : i).idup;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpn43gkj7k.d(20): Error: no property `find_if` for type `string`

    /tmp/tmpn43gkj7k.d(22): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(char[])`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    /tmp/tmpn43gkj7k.d(24): Error: no property `map` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn43gkj7k.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string res = \"\";\n    bool isFound = false;\n    foreach(i,c;s)\n    {\n\
    \        if(!isAlpha(c))\n        {\n            res ~= c;\n        }\n      \
    \  else\n        {\n            isFound = true;\n            res ~= swapCase(c);\n\
    \        }\n    }\n    if(!isFound)\n    {\n        return swapCase(s);\n    }\n\
    \    return res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsysw0o3f.d(24): Error: undefined identifier `isAlpha`

    /tmp/tmpsysw0o3f.d(31): Error: undefined identifier `swapCase`

    /tmp/tmpsysw0o3f.d(36): Error: undefined identifier `swapCase`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsysw0o3f.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    if(s.length == 0)\n        return result;\n   \
    \ foreach(d; s)\n    {\n        if(isLetter(d))\n        {\n            if(isLower(d))\n\
    \                result ~= toUpper(d);\n            else if(isUpper(d))\n    \
    \            result ~= toLower(d);\n        }\n        else\n            result\
    \ ~= d;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\"\
    ) == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpecdpy28w.d(25): Error: undefined identifier `isLetter`

    /tmp/tmpecdpy28w.d(27): Error: undefined identifier `isLower`

    /tmp/tmpecdpy28w.d(28): Error: undefined identifier `toUpper`

    /tmp/tmpecdpy28w.d(29): Error: undefined identifier `isUpper`

    /tmp/tmpecdpy28w.d(30): Error: undefined identifier `toLower`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpecdpy28w.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \  string rs = \"\";\n   foreach(i; 0 .. s.length)\n      if(isAlpha(s[i]))\n\
    \         rs ~= to!string(s[i]) == toUpper(s[i]) \n                  ? toLower(s[i])\
    \ \n                  : toUpper(s[i]);\n      else\n         rs ~= s[i];\n   return\
    \ s.length == 0 ? reverse(s) : reverse(rs); \n}\n/*\nimport std.conv : to;\nimport\
    \ std.string : toUpper, toLower;\nunittest\n{\n    alias candidate = solve;\n\n\
    \    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\")\
    \ == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprmpzmgmu.d(30): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprmpzmgmu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   if(s.empty)\n    {\n        return s;\n    }\n    return s.map!(a => !isLetter(a)\
    \ ? a : isUpper(a) ? toLower(a) : toUpper(a)).reversed;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5242ka27.d(20): Error: no property `empty` for type `string`

    /tmp/tmp5242ka27.d(24): Error: no property `map` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5242ka27.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   auto revCase = (x) =>\n    {\n        if(x >= 'a' && x <= 'z')\n         \
    \   return x - 'a' + 'A';\n        else if(x >= 'A' && x <= 'Z')\n           \
    \ return x - 'A' + 'a';\n        else\n            return x;\n    };\n    if(s.length\
    \ == 0)\n        return s;\n    else if(s.filter!(x => x >= 'a' && x <= 'z' ||\
    \ x >= 'A' && x <= 'Z').length == 0)\n        return s.dup.reverse;\n    else\n\
    \        return s.map!(revCase).join;\n}\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\"\
    ) == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpd0xma888.d(20): Error: variable `tmpd0xma888.solve.revCase` type
    `void` is inferred from initializer `(x) => ()

    {

    if (x >= ''a'' && (x <= ''z''))

    return x - ''a'' + ''A'';

    else if (x >= ''A'' && (x <= ''Z''))

    return x - ''A'' + ''a'';

    else

    return x;

    }

    `, and variables cannot be of type `void`

    /tmp/tmpd0xma888.d(20): Error: template lambda has no value

    /tmp/tmpd0xma888.d(31): Error: no property `filter` for type `string`

    /tmp/tmpd0xma888.d(32): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(char[])`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    /tmp/tmpd0xma888.d(34): Error: no property `map` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd0xma888.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \ int n = s.length;\n  char c;\n  for (int i = 0; i < n; i++) \n  {\n    c = s[i];\n\
    \    if (isLetter(c)) \n    {\n      if (isLower(c)) \n      {\n        s[i] =\
    \ toUpper(c);\n      } \n      else \n      {\n        s[i] = toLower(c);\n  \
    \    }\n    }\n  }\n  return s;\n}\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\"\
    ) == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfos9djqp.d(20): Error: cannot implicitly convert expression `s.length`
    of type `ulong` to `int`

    /tmp/tmpfos9djqp.d(25): Error: undefined identifier `isLetter`

    /tmp/tmpfos9djqp.d(27): Error: undefined identifier `isLower`

    /tmp/tmpfos9djqp.d(29): Error: undefined identifier `toUpper`

    /tmp/tmpfos9djqp.d(33): Error: undefined identifier `toLower`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfos9djqp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   /*\n    auto dgts = filter!(a => a.isDigit)(s.dup);\n    auto lets = filter!(a\
    \ => a.isLetter)(s.dup);\n    return dgts.length ? dgts.reverse() : lets.length\
    \ ? lets.map!(a => (a.isUpper ? a.toLower : a.toUpper)).array : s.reverse();\n\
    \    */\n    /*\n    if(s.isDigit) \n        return s.reverse;\n    else if(s.isUpper)\n\
    \        return s.toLower;\n    else if(s.isLower)\n        return s.toUpper;\n\
    \    else\n        return s;\n    */\n    return s.isDigit ? s.reverse : \n  \
    \  (s.isUpper ? s.toLower : \n    (s.isLower ? s.toUpper : \n    s));\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpcxxka9mt.d(35): Error: no property `isDigit` for type `string`

    /tmp/tmpcxxka9mt.d(35): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(string)`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    /tmp/tmpcxxka9mt.d(36): Error: no property `isUpper` for type `string`

    /tmp/tmpcxxka9mt.d(36): Error: no property `toLower` for type `string`

    /tmp/tmpcxxka9mt.d(37): Error: no property `isLower` for type `string`

    /tmp/tmpcxxka9mt.d(37): Error: no property `toUpper` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcxxka9mt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string r = \"\";\n    size_t i = 0;\n    while(i<s.length)\n    {\n      \
    \  if(s[i]<='z' && s[i]>='a')\n        {\n            r = r ~ to!string(to!char(s[i]-'a'+'A'));\n\
    \        }\n        else if(s[i]<='Z' && s[i]>='A')\n        {\n            r\
    \ = r ~ to!string(to!char(s[i]-'A'+'a'));\n        }\n        else\n        {\n\
    \            r = r ~ to!string(s[i]);\n        }\n        i++;\n    }\n    return\
    \ r;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpcev3pel6.d(26): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmpcev3pel6.d(30): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmpcev3pel6.d(34): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcev3pel6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string res;\n    foreach(c; s) \n    {\n        if(c.isLetter)\n         \
    \   c.isUpper ? res ~= c.toLower : res ~= c.toUpper;\n        else\n         \
    \   res ~= c;\n    }\n    return res.length == 0 ? s.reverse : res;\n}\n/*\nstring\
    \ solve(string s) \n{\n    string res;\n    foreach(c; s) \n    {\n        if(c.isLetter)\n\
    \            c.isUpper ? res ~= c.toLower : res ~= c.toUpper;\n        else\n\
    \            res ~= c;\n    }\n    return res.length == 0 ? s.reverse : res;\n\
    }\n*/\n//\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsvdlc6li.d(23): Error: no property `isLetter` for type `immutable(char)`

    /tmp/tmpsvdlc6li.d(24): Error: no property `isUpper` for type `immutable(char)`

    /tmp/tmpsvdlc6li.d(24): Error: no property `toLower` for type `immutable(char)`

    /tmp/tmpsvdlc6li.d(24): Error: no property `toUpper` for type `immutable(char)`

    /tmp/tmpsvdlc6li.d(28): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(string)`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsvdlc6li.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   return s.chunks(1).map!(a => \n        a[0].isLetter ? a[0].isUpper ? a[0].toLower\
    \ : a[0].toUpper : a[0]\n    ).joiner.chunk;\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpeovkjbdd.d(20): Error: no property `chunks` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeovkjbdd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   // write your code here\n    if(s.findFirstNotOf(\"0123456789\") == -1)\n\
    \    {\n        s = s.dup.reverse;\n    }else{\n        foreach(i, c; s)\n   \
    \     {\n            if(isLetter(c))\n            {\n                s[i] = s[i].toUpper;\n\
    \            }\n        }\n    }\n    return s;\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfp7gm3_1.d(21): Error: no property `findFirstNotOf` for type `string`

    /tmp/tmpfp7gm3_1.d(23): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(char[])`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    /tmp/tmpfp7gm3_1.d(27): Error: undefined identifier `isLetter`

    /tmp/tmpfp7gm3_1.d(29): Error: no property `toUpper` for type `immutable(char)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfp7gm3_1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   bool is_changed = false;\n    string res;\n    foreach(c; s)\n    {\n    \
    \    if (c >= 'a' && c <= 'z')\n        {\n            is_changed = true;\n  \
    \          res ~= to!string(c).toUpper();\n        }\n        else if (c >= 'A'\
    \ && c <= 'Z')\n        {\n            is_changed = true;\n            res ~=\
    \ to!string(c).toLower();\n        }\n        else\n        {\n            res\
    \ ~= to!string(c);\n        }\n    }\n    if (is_changed)\n    {\n        return\
    \ res;\n    }\n    else\n    {\n        return s.dup.reversed;\n    }\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1rrv_0jk.d(27): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmp1rrv_0jk.d(32): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmp1rrv_0jk.d(36): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmp1rrv_0jk.d(45): Error: no property `reversed` for type `char[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1rrv_0jk.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = s.dup;\n    auto&& letters = result.joinCopy.filter!((char\
    \ c) => c.isLetter);\n    letters.each!((a) => a = a.toLower);\n    auto&& nonLetters\
    \ = result.joinCopy.filter!((char c) => !c.isLetter);\n    nonLetters.each!((a)\
    \ => a = a.toUpper);\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_si3f643.d(21): Error: basic type expected, not `&&`

    /tmp/tmp_si3f643.d(21): Error: no identifier for declarator `_error_`

    /tmp/tmp_si3f643.d(21): Error: found `&&` instead of statement

    /tmp/tmp_si3f643.d(23): Error: basic type expected, not `&&`

    /tmp/tmp_si3f643.d(23): Error: no identifier for declarator `_error_`

    /tmp/tmp_si3f643.d(23): Error: found `&&` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_si3f643.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    auto letters = s.filter!(a => a.isLetter);\n    if(letters.empty)\n\
    \        return result = s.reverse;\n    foreach(c; s)\n    {\n        if(c.isLetter)\n\
    \            result ~= c.toLower.toUpper;\n        else\n            result ~=\
    \ c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\"\
    ) == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpo_sy1msd.d(21): Error: no property `filter` for type `string`

    /tmp/tmpo_sy1msd.d(23): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(string)`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    /tmp/tmpo_sy1msd.d(26): Error: no property `isLetter` for type `immutable(char)`

    /tmp/tmpo_sy1msd.d(27): Error: no property `toLower` for type `immutable(char)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo_sy1msd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string str = s;\n    if (std.regex.find(str, \"[a-zA-Z]\"))\n    {\n     \
    \   foreach (i, elem; str)\n        {\n            if (isAlpha(elem))\n      \
    \      {\n                int temp = to!int(elem);\n                if (temp >=\
    \ 65 && temp <= 90) str[i] = to!char(temp + 32);\n                else if (temp\
    \ >= 97 && temp <= 122) str[i] = to!char(temp - 32);\n            }\n        }\n\
    \    }\n    else\n    {\n        auto temp = str.dup;\n        str = \"\";\n \
    \       foreach (i, elem; temp)\n        {\n            str ~= temp[$ - i - 1];\n\
    \        }\n    }\n    return str;\n}\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\"\
    ) == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfoqqqx2d.d(21): Error: undefined identifier `regex` in package
    `std`

    /tmp/tmpfoqqqx2d.d(25): Error: undefined identifier `isAlpha`

    /tmp/tmpfoqqqx2d.d(27): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmpfoqqqx2d.d(28): Error: template instance `to!char` template `to` is not
    defined, did you mean No?

    /tmp/tmpfoqqqx2d.d(29): Error: template instance `to!char` template `to` is not
    defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfoqqqx2d.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    if (s.empty) \n    {\n        return result;\n\
    \    }\n    foreach (c; s) \n    {\n        if (c.isAlpha) \n        {\n     \
    \       auto caseResult = (c.isUpper) ? to!char(c.toLower) : to!char(c.toUpper);\n\
    \            result ~= caseResult;\n        } \n        else \n        {\n   \
    \         result ~= c;\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n\
    \    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") ==\
    \ \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwhxrznz3.d(21): Error: no property `empty` for type `string`

    /tmp/tmpwhxrznz3.d(27): Error: no property `isAlpha` for type `immutable(char)`

    /tmp/tmpwhxrznz3.d(29): Error: no property `isUpper` for type `immutable(char)`

    /tmp/tmpwhxrznz3.d(29): Error: template instance `to!char` template `to` is not
    defined, did you mean No?

    /tmp/tmpwhxrznz3.d(29): Error: template instance `to!char` template `to` is not
    defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwhxrznz3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   // Returns the original string if no letters are detected\n    if (s.all!(x\
    \ => x < 'a' || x > 'z')) \n        return s.reverse;\n    string result = \"\"\
    ;\n    foreach (i, c; s) \n    {\n        // Checks if the character is lowercase\n\
    \        if (c >= 'a' && c <= 'z') \n            result ~= c.toUpper;\n      \
    \  // Checks if the character is uppercase\n        else if (c >= 'A' && c <=\
    \ 'Z') \n            result ~= c.toLower;\n        // If not a letter just append\
    \ it to the resulting string\n        else \n            result ~= c;\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp27tz5hnb.d(21): Error: no property `all` for type `string`

    /tmp/tmp27tz5hnb.d(22): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(string)`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    /tmp/tmp27tz5hnb.d(28): Error: no property `toUpper` for type `immutable(char)`

    /tmp/tmp27tz5hnb.d(31): Error: no property `toLower` for type `immutable(char)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp27tz5hnb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string res;\n    foreach(c; s) \n    {\n        res ~= c.isLetter ? c.toUpper.toLower.front\
    \ : c;\n    }\n    return res.swap;\n}\n/*\n    Input:\n    >>> solve(\"1234\"\
    )\n    \"\"\"\n    4321\n    \"\"\"\n    \n    >>> solve(\"ab\")\n    \"\"\"\n\
    \    AB\n    \"\"\"\n    \n    >>> solve(\"#a@C\")\n    \"\"\"\n    #A@c\n   \
    \ \"\"\"\n*/\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpexlivn77.d(23): Error: no property `isLetter` for type `immutable(char)`

    /tmp/tmpexlivn77.d(23): Error: no property `toUpper` for type `immutable(char)`

    /tmp/tmpexlivn77.d(25): Error: no property `swap` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpexlivn77.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    enum isLetter = true;\n    foreach(i; s)\n    {\n    \
    \    if(isLetter)\n        {\n            if(isAlpha(i))\n            {\n    \
    \            result ~= (toUpper(i)) ? toLower(i) : toUpper(i);\n            }else{\n\
    \                result ~= i;\n            }\n        }else{\n            result\
    \ ~= toUpper(i);\n        }\n    }\n    return (isLetter) ? reverse(result) :\
    \ result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnvari3be.d(26): Error: undefined identifier `isAlpha`

    /tmp/tmpnvari3be.d(28): Error: undefined identifier `toUpper`

    /tmp/tmpnvari3be.d(28): Error: undefined identifier `toLower`

    /tmp/tmpnvari3be.d(28): Error: undefined identifier `toUpper`

    /tmp/tmpnvari3be.d(33): Error: undefined identifier `toUpper`

    /tmp/tmpnvari3be.d(36): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(string)`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnvari3be.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n\t\
    string r;\n\tforeach(c; s)\n\t{\n\t\tif(isAlpha(c))\n\t\t{\n\t\t\tif(isLower(c))\n\
    \t\t\t\tr ~= toUpper(c);\n\t\t\telse\n\t\t\t\tr ~= toLower(c);\n\t\t}\n\t\telse\n\
    \t\t\tr ~= c;\n\t}\n\tif(r.length == 0)\n\t\treturn s;\n\treturn r;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp66m9dwf9.d(23): Error: undefined identifier `isAlpha`

    /tmp/tmp66m9dwf9.d(25): Error: undefined identifier `isLower`

    /tmp/tmp66m9dwf9.d(26): Error: undefined identifier `toUpper`

    /tmp/tmp66m9dwf9.d(28): Error: undefined identifier `toLower`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp66m9dwf9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   if(s.findFirstOf(\"abcdefghijklmnopqrstuvwxyz\") == -1 && s.findFirstOf(\"\
    ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == -1) return s.reverse();\n    string res = \"\"\
    ;\n    foreach(c; s)\n    {\n        if(c.isAlpha) res ~= c.swapCase;\n      \
    \  else res ~= c;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk3o6awy7.d(20): Error: no property `findFirstOf` for type `string`

    /tmp/tmpk3o6awy7.d(20): Error: no property `findFirstOf` for type `string`

    /tmp/tmpk3o6awy7.d(20): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(string)`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    /tmp/tmpk3o6awy7.d(24): Error: no property `isAlpha` for type `immutable(char)`

    /tmp/tmpk3o6awy7.d(24): Error: no property `swapCase` for type `immutable(char)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk3o6awy7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   if (s.length == 0)\n        return s;\n    string result = \"\";\n    for\
    \ (int i = 0; i < s.length; i++)\n    {\n        if (s[i] >= 'a' && s[i] <= 'z')\n\
    \            result += to!char(s[i] - 32);\n        else if (s[i] >= 'A' && s[i]\
    \ <= 'Z')\n            result += to!char(s[i] + 32);\n        else\n         \
    \   result += s[i];\n    }\n    if (result.length != s.length)\n        return\
    \ result;\n    else\n        return result.reverse;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprfo5aesa.d(26): Error: template instance `to!char` template `to`
    is not defined, did you mean No?

    /tmp/tmprfo5aesa.d(28): Error: template instance `to!char` template `to` is not
    defined, did you mean No?

    /tmp/tmprfo5aesa.d(30): Error: slice `result` is not mutable

    /tmp/tmprfo5aesa.d(35): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(string)`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprfo5aesa.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    static string alpha=\"abcdefghijklmnopqrstuvwxyz\";\n\
    \    static string Alpha=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    for(int i=0;i<s.length;i++)\n\
    \    {\n        if(isalpha(s[i]))\n        {\n            result+=toupper(s[i]);\n\
    \        }\n        else\n        {\n            result+=s[i];\n        }\n  \
    \  }\n    if(result.length==0)\n    {\n        return reverse(s);\n    }\n   \
    \ else\n    {\n        return result;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_dv8ivt8.d(25): Error: undefined identifier `isalpha`, did you
    mean variable `alpha`?

    /tmp/tmp_dv8ivt8.d(27): Error: undefined identifier `toupper`

    /tmp/tmp_dv8ivt8.d(31): Error: slice `result` is not mutable

    /tmp/tmp_dv8ivt8.d(36): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(string)`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_dv8ivt8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string rev = \"\";\n    if (s.length == 0) return s;\n    //if(isAlpha(s[0]))\n\
    \    else if (s[0] == 'a' || s[0] == 'A' || s[0] == 'e' || s[0] == 'E' || s[0]\
    \ == 'i' || s[0] == 'I' || s[0] == 'o' || s[0] == 'O' || s[0] == 'u' || s[0] ==\
    \ 'U')\n    {\n        rev = rev.idup;\n        rev = rev.idup;\n        rev =\
    \ rev.idup;\n        rev = rev.idup;\n        rev = rev.idup;\n        rev = rev.idup;\n\
    \        rev = rev.idup;\n        rev = rev.idup;\n        rev = rev.idup;\n \
    \       rev = rev.idup;\n        rev = rev.idup;\n        rev = rev.idup;\n  \
    \      rev = rev.idup;\n        rev = rev.idup;\n        rev = rev.idup;\n   \
    \     rev = rev.idup;\n        rev = rev.idup;\n        rev = rev.idup;\n    \
    \    rev = rev.idup;\n        rev = rev.idup;\n        rev = rev.idup;\n     \
    \   rev = rev.idup;\n        rev = rev.idup;\n        rev = rev.idup;\n      \
    \  rev = rev.idup;\n        rev = rev.idup;\n        rev = rev.idup;\n       \
    \ rev = rev.idup;\n        rev = rev.idup;\n        rev = rev.idup;\n        rev\
    \ = rev.idup;\n        rev = rev.idup;\n        rev = rev.idup;\n        rev =\
    \ rev.idup;\n        rev = rev.idup;\n        rev = rev.idup;\n        rev = rev.idup;\n\
    \        rev = rev.idup;\n        rev = rev.idup;\n        rev = rev.idup;\n \
    \       rev = rev.idup;\n        rev = rev.idup;\n       \nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgl74j8pz.d(68): Error: found `unittest` instead of statement

    /tmp/tmpgl74j8pz.d(81): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgl74j8pz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   bool t = true;\n    foreach(c; s)\n    {\n        if(c.isLetter)\n       \
    \ {\n            t = false;\n            break;\n        }\n    }\n    if(t)\n\
    \    {\n        s = s.reversed;\n    }\n    else\n    {\n        foreach(i, c;\
    \ s)\n        {\n            if(c.isLetter)\n            {\n                s[i]\
    \ = c.toUpper.toLower.toUpper;\n            }\n        }\n    }\n    return s;\n\
    }\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
    ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_efnwi_c.d(23): Error: no property `isLetter` for type `immutable(char)`

    /tmp/tmp_efnwi_c.d(31): Error: no property `reversed` for type `string`

    /tmp/tmp_efnwi_c.d(37): Error: no property `isLetter` for type `immutable(char)`

    /tmp/tmp_efnwi_c.d(39): Error: no property `toUpper` for type `immutable(char)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_efnwi_c.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   import std.string : toLower, toUpper;\n    import std.algorithm : map;\n \
    \   // My solution\n    // return s.map!(a => a.isLetter ? (a.isUpper ? a.toLower\
    \ : a.toUpper) : a).array.join;\n    return s.length == 0 ? s : s.map!(x => x.isLetter\
    \ ? (x.isUpper ? x.toLower : x.toUpper) : x).array.join;\n}\nunittest\n{\n   \
    \ alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n \
    \   assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") ==\
    \ \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpr8_73z0l.d(24): Error: no property `isLetter` for type `dchar`

    /tmp/tmpr8_73z0l.d(24): Error: no property `isUpper` for type `dchar`

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/algorithm/iteration.d(499):        instantiated
    from here: `MapResult!(__lambda2, string)`

    /tmp/tmpr8_73z0l.d(24):        instantiated from here: `map!string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr8_73z0l.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string new_str;\n    int i;\n    foreach(i,ch;s)\n    {\n        if(isalpha(ch))\n\
    \        {\n            if(isupper(ch))\n                new_str ~= tolower(ch);\n\
    \            else\n                new_str ~= toupper(ch);\n        }\n      \
    \  else\n            new_str ~= ch;\n    }\n    if(new_str.length == 0)\n    \
    \    return s.dup.reverse;\n    return new_str;\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpinfn1bz7.d(22): Error: variable `i` is shadowing variable `tmpinfn1bz7.solve.i`

    /tmp/tmpinfn1bz7.d(24): Error: undefined identifier `isalpha`

    /tmp/tmpinfn1bz7.d(26): Error: undefined identifier `isupper`

    /tmp/tmpinfn1bz7.d(27): Error: undefined identifier `tolower`

    /tmp/tmpinfn1bz7.d(29): Error: undefined identifier `toupper`

    /tmp/tmpinfn1bz7.d(35): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(char[])`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpinfn1bz7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   if(s.length == 0) return s;\n    immutable(string) t = s.idup;\n    foreach(i,\
    \ elem; t)\n    {\n        if(isLetter(elem))\n        {\n            char[] c\
    \ = t.idup;\n            if(isUpper(elem))\n                c[i] = toLower(elem);\n\
    \            else\n                c[i] = toUpper(elem);\n            t = c.idup;\n\
    \        }\n    }\n    return t.dup.reverse;\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb6nzhgai.d(24): Error: undefined identifier `isLetter`

    /tmp/tmpb6nzhgai.d(26): Error: cannot implicitly convert expression `idup(t)`
    of type `string` to `char[]`

    /tmp/tmpb6nzhgai.d(27): Error: undefined identifier `isUpper`

    /tmp/tmpb6nzhgai.d(28): Error: undefined identifier `toLower`

    /tmp/tmpb6nzhgai.d(30): Error: undefined identifier `toUpper`

    /tmp/tmpb6nzhgai.d(31): Error: cannot modify `immutable` expression `t`

    /tmp/tmpb6nzhgai.d(34): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(char[])`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb6nzhgai.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   immutable tup = tuple(0,0);\n    immutable cnt = tup[0];\n    immutable f\
    \ = tup[1];\n    size_t n = s.length;\n    if(n==0)\n        return s;\n    else\n\
    \    {\n        foreach(immutable i;0..n)\n        {\n            if((s[i]>='a'\
    \ && s[i]<='z') || (s[i]>='A' && s[i]<='Z'))\n            {\n                cnt\
    \ = 1;\n                f = i;\n                break;\n            }\n      \
    \  }\n        if(cnt==0)\n            return s.dup.reverse;\n        else\n  \
    \      {\n            for(immutable i = n-1; i>f; --i)\n            {\n      \
    \          if((s[i]>='a' && s[i]<='z') || (s[i]>='A' && s[i]<='Z'))\n        \
    \        {\n                    s[i] = s[i] ^ ' ';\n                    s[f] =\
    \ s[f] ^ ' ';\n                    ++f;\n                }\n            }\n  \
    \          return s;\n        }\n    }\n}\nunittest\n{\n    alias candidate =\
    \ solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjbxjc9my.d(32): Error: cannot modify `immutable` expression `cnt`

    /tmp/tmpjbxjc9my.d(33): Error: cannot modify `immutable` expression `f`

    /tmp/tmpjbxjc9my.d(38): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(char[])`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    /tmp/tmpjbxjc9my.d(41): Error: cannot modify `immutable` expression `i`

    /tmp/tmpjbxjc9my.d(45): Error: cannot modify `immutable` expression `s[i]`

    /tmp/tmpjbxjc9my.d(46): Error: cannot modify `immutable` expression `s[cast(ulong)f]`

    /tmp/tmpjbxjc9my.d(47): Error: cannot modify `immutable` expression `f`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjbxjc9my.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   bool hasLetter = false;\n    bool upper = false;\n    foreach(c; s)\n    {\n\
    \        if(isLetter(c))\n        {\n            hasLetter = true;\n         \
    \   if(isUpper(c))\n                upper = true;\n            break;\n      \
    \  }\n    }\n    if(!hasLetter)\n        return s.reverse;\n    else\n    {\n\
    \        if(upper)\n            return s.toLower;\n        else\n            return\
    \ s.toUpper;\n    }\n    return \"\";\n}\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\"\
    ) == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp58wd6b2q.d(24): Error: undefined identifier `isLetter`, did you
    mean variable `hasLetter`?

    /tmp/tmp58wd6b2q.d(27): Error: undefined identifier `isUpper`

    /tmp/tmp58wd6b2q.d(33): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(string)`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    /tmp/tmp58wd6b2q.d(37): Error: no property `toLower` for type `string`

    /tmp/tmp58wd6b2q.d(39): Error: no property `toUpper` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp58wd6b2q.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string tmp = s;\n    foreach(i,c;tmp)\n    {\n        if(isAlpha(c))\n   \
    \     {\n            tmp[i] = c ^ ' ';\n        }\n    }\n    if(isUpper(tmp[0]))\n\
    \    {\n        reverse(tmp);\n    }\n    return tmp;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsqbdx8o0.d(23): Error: undefined identifier `isAlpha`

    /tmp/tmpsqbdx8o0.d(25): Error: cannot modify `immutable` expression `tmp[i]`

    /tmp/tmpsqbdx8o0.d(28): Error: undefined identifier `isUpper`

    /tmp/tmpsqbdx8o0.d(30): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(string)`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsqbdx8o0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string res;\n    int n = s.length;\n    for (int i = 0; i < n; i++)\n    {\n\
    \        char c = s[i];\n        if (isalpha(c))\n        {\n            c = (islower(c))\
    \ ? toupper(c) : tolower(c);\n        }\n        res += c;\n    }\n    return\
    \ (any!(isalpha)(s)) ? res.reverse : res;\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3y_vocs5.d(21): Error: cannot implicitly convert expression `s.length`
    of type `ulong` to `int`

    /tmp/tmp3y_vocs5.d(25): Error: undefined identifier `isalpha`

    /tmp/tmp3y_vocs5.d(27): Error: undefined identifier `islower`

    /tmp/tmp3y_vocs5.d(27): Error: undefined identifier `toupper`

    /tmp/tmp3y_vocs5.d(27): Error: undefined identifier `tolower`

    /tmp/tmp3y_vocs5.d(29): Error: slice `res` is not mutable

    /tmp/tmp3y_vocs5.d(31): Error: template instance `any!isalpha` template `any`
    is not defined

    /tmp/tmp3y_vocs5.d(31): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(string)`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3y_vocs5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   static import std.algorithm.comparison : equal;\n    static struct lower\n\
    \    {\n        static bool opCall(char ch) { return ch.toLower() == ch; }\n \
    \   }\n    static struct upper\n    {\n        static bool opCall(char ch) { return\
    \ ch.toUpper() == ch; }\n    }\n    static struct isLetter\n    {\n        static\
    \ bool opCall(char ch) { return ch.isLetter; }\n    }\n    static struct complement\n\
    \    {\n        static char opCall(char ch) { return (lower(ch)) ? ch.toUpper()\
    \ : ch.toLower(); }\n    }\n    static struct reverse\n    {\n        static char\
    \ opCall(char ch) { return ch.toLower(); }\n    }\n    static struct complementAndReverse\n\
    \    {\n        static char opCall(char ch) { return (lower(ch)) ? ch.toUpper()\
    \ : ch.toLower(); }\n    }\n    static struct complementNotReverse\n    {\n  \
    \      static char opCall(char ch) { return (lower(ch)) ? ch.toUpper() : ch.toLower();\
    \ }\n    }\n    static struct reverseNotComplement\n    {\n        static char\
    \ opCall(char ch) { return ch.toLower(); }\n    }\n    static import std.algorithm.mutation\
    \ : replace;\n    static struct combine\n    {\n        static char opCall(char\
    \ ch) { return (lower(ch)) ? ch.toUpper() : ch.toLower(); }\n    }\n    static\
    \ struct unCombine\n    {\n        static char opCall(char ch) { return (lower(ch))\
    \ ? ch.toUpper() : ch.toLower(); }\n    }\n    static import std.algorithm.comparison\
    \ : equal;\n    static import std.algorithm.searching : all;\n    static import\
    \ std.algorithm.iteration : transform;\n    static import std.algorithm.mutation\
    \ : replace;\n    static import std.algorithm.mutation : reverse;\n    static\
    \ import std.algorithm.mutation : move;\n    static import std.algorithm.mutation\
    \ : swap;\n    static import std.\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\"\
    ) == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpc47m6q8c.d(20): Error: static import `std` cannot have an import
    bind list

    /tmp/tmpc47m6q8c.d(53): Error: static import `std` cannot have an import bind
    list

    /tmp/tmpc47m6q8c.d(62): Error: static import `std` cannot have an import bind
    list

    /tmp/tmpc47m6q8c.d(63): Error: static import `std` cannot have an import bind
    list

    /tmp/tmpc47m6q8c.d(64): Error: static import `std` cannot have an import bind
    list

    /tmp/tmpc47m6q8c.d(65): Error: static import `std` cannot have an import bind
    list

    /tmp/tmpc47m6q8c.d(66): Error: static import `std` cannot have an import bind
    list

    /tmp/tmpc47m6q8c.d(67): Error: static import `std` cannot have an import bind
    list

    /tmp/tmpc47m6q8c.d(68): Error: static import `std` cannot have an import bind
    list

    /tmp/tmpc47m6q8c.d(70): Error: identifier expected following `package`

    /tmp/tmpc47m6q8c.d(70): Error: `;` expected

    /tmp/tmpc47m6q8c.d(83): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc47m6q8c.d",'
  stdout: ''
  timestamp: 1660163954
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   if(s.all!(c => c >= '0' && c <= '9')) \n    {\n        return s.map!(c =>\
    \ c >= 'a' && c <= 'z' ? c.toUpper : c.toLower).array.idup;\n    }\n    else\n\
    \    {\n        return s.reverse;\n    }\n}\n/*\n#sum_two_smallest_numbers\nYou\
    \ are given a list of integers.\n    Return the sum of the two smallest positive\
    \ integers.\n    Examples\n    >>> solve([5, 8, 12, 18, 22])\n    13\n    >>>\
    \ solve([7, 15, 12, 18, 22])\n    19\n    >>> solve([25, 42, 12, 18, 22])\n  \
    \  30\n*/\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4nnbcq1h.d(20): Error: no property `all` for type `string`

    /tmp/tmp4nnbcq1h.d(22): Error: no property `map` for type `string`

    /tmp/tmp4nnbcq1h.d(26): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(string)`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4nnbcq1h.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   import std.algorithm : filter, map;\n    import std.conv : to;\n    import\
    \ std.range : take;\n    auto length = s.length;\n    if(length==0)\n        return\
    \ \"\";\n    auto result = s.filter!(a=>a.isLetter).map!(a=>a.isUpper ? to!string(a).toLower\
    \ : to!string(a).toUpper);\n    if(result.empty) \n        return to!string(s.take(length).reverse);\n\
    \    return to!string(result);\n}\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\"\
    ) == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6lzacdnz.d(26): Error: no property `isLetter` for type `dchar`

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/algorithm/iteration.d(1122):        instantiated
    from here: `FilterResult!(__lambda2, string)`

    /tmp/tmp6lzacdnz.d(26):        instantiated from here: `filter!string`

    /tmp/tmp6lzacdnz.d(28): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(Take!string)`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6lzacdnz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   auto result = typeof(return)();\n    //for each (immutable ch; s)\n    foreach\
    \ (immutable ch; s)\n    {\n        if (isAlpha(ch))\n        {\n            result\
    \ ~= toLower(ch) ? toUpper(ch) : toLower(ch);\n        }\n        else\n     \
    \   {\n            result ~= ch;\n        }\n    }\n    if (result.length == 0)\n\
    \    {\n        return s.dup.reverse();\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmph2woku3r.d(20): Error: function expected before `()`, not `string`
    of type `string`

    /tmp/tmph2woku3r.d(24): Error: undefined identifier `isAlpha`

    /tmp/tmph2woku3r.d(26): Error: undefined identifier `toLower`

    /tmp/tmph2woku3r.d(26): Error: undefined identifier `toUpper`

    /tmp/tmph2woku3r.d(26): Error: undefined identifier `toLower`

    /tmp/tmph2woku3r.d(35): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(char[])`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph2woku3r.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    auto f = (char c) {\n        if (c >= 'a' && c\
    \ <= 'z')\n            return 'A' + (c - 'a');\n        if (c >= 'A' && c <= 'Z')\n\
    \            return 'a' + (c - 'A');\n        return c;\n    };\n    for (char\
    \ c : s)\n        result += f(c);\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8aphi0q7.d(28): Error: semicolon expected, not `:`

    /tmp/tmp8aphi0q7.d(28): Error: expression expected, not `:`

    /tmp/tmp8aphi0q7.d(28): Error: found `s` when expecting `;` following `for` condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8aphi0q7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   enum bool haveLetters;\n    foreach(int i; 0 .. s.length)\n    {\n       \
    \ if(s[i] >= 'a' && s[i] <= 'z')\n        {\n            haveLetters = true;\n\
    \            break;\n        }\n        else if(s[i] >= 'A' && s[i] <= 'Z')\n\
    \        {\n            haveLetters = true;\n            break;\n        }\n \
    \   }\n    if(haveLetters)\n    {\n        foreach(int i; 0 .. s.length)\n   \
    \     {\n            if(s[i] >= 'a' && s[i] <= 'z')\n            {\n         \
    \       s[i] = s[i] - 'a' + 'A';\n            }\n            else if(s[i] >= 'A'\
    \ && s[i] <= 'Z')\n            {\n                s[i] = s[i] - 'A' + 'a';\n \
    \           }\n        }\n    }\n    else\n    {\n        s = s.dup.reverse;\n\
    \    }\n    return s;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxjefkyge.d(20): Error: variable `tmpxjefkyge.solve.haveLetters`
    manifest constants must have initializers

    /tmp/tmpxjefkyge.d(21): Error: cannot implicitly convert expression `s.length`
    of type `ulong` to `int`

    /tmp/tmpxjefkyge.d(36): Error: cannot implicitly convert expression `s.length`
    of type `ulong` to `int`

    /tmp/tmpxjefkyge.d(50): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(char[])`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxjefkyge.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string ss = \"\";\n    foreach(c; s)\n    {\n        if(isAlpha(c))\n    \
    \    {\n            ss ~= toUpper(c);\n        }\n        else\n        {\n  \
    \          ss ~= c;\n        }\n    }\n    if(ss.length)\n    {\n        return\
    \ ss.reverse;\n    }\n    else\n    {\n        return s.reverse;\n    }\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7ylxqlyo.d(23): Error: undefined identifier `isAlpha`

    /tmp/tmp7ylxqlyo.d(25): Error: undefined identifier `toUpper`

    /tmp/tmp7ylxqlyo.d(34): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(string)`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    /tmp/tmp7ylxqlyo.d(38): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(string)`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7ylxqlyo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   enum len = s.length;\n    string ret = s;\n    if(len <= 1)\n    {\n     \
    \   return ret;\n    }\n    for(int i = 0; i < len; i++)\n    {\n        ret[i]\
    \ = tolower(ret[i]);\n    }\n    int count = 0;\n    for(int i = 0; i < len; i++)\n\
    \    {\n        if(isalpha(ret[i]))\n        {\n            count++;\n       \
    \ }\n    }\n    if(count == 0)\n    {\n        ret = ret.idup.dup.idup.dup.idup.dup.idup.dup.idup.dup.idup.dup.idup.dup.idup.dup.idup.dup.idup.dup.idup.dup.idup.dup.idup.dup.idup.dup.idup.dup.idup.dup.idup.dup.idup.dup.idup.dup.idup.dup.idup.dup.idup.dup.idup.dup.idup.dup.idup.dup.idup.dup.idup.dup.idup.dup.idup.dup.idup.dup.idup.dup.idup.dup.idup.dup.idup.dup.idup.dup.idup.dup.idup.dup.idup.dup.idup.dup.idup.dup.idup.dup.idup.dup.idup.dup.idup.dup.idup.dup.idup.dup.idup.dup.idup.dup.idup.dup.idup.dup.idup.dup.idup.dup.idup.dup.idup.dup.idup.dup.idup.dup.idup.dup.idup.dup.idup.dup.idup.dup.idup.dup.idup.dup.id\n\
    unittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") ==\
    \ \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphjn0rxg6.d(41): Error: found `unittest` when expecting `;` following
    statement

    /tmp/tmphjn0rxg6.d(54): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmphjn0rxg6.d(54): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphjn0rxg6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \ string result = \"\";\n  char ch;\n  foreach(ch; s) \n  {\n    int n = ch;\n\
    \    if(n>=65 && n<=90)\n      result ~= (n+32).to!string;\n    else if(n>=97\
    \ && n<=122)\n      result ~= (n-32).to!string;\n    else\n      result ~= ch;\n\
    \  }\n  return reverse(result);\n}\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\"\
    ) == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpw31b0t9f.d(22): Error: variable `ch` is shadowing variable `tmpw31b0t9f.solve.ch`

    /tmp/tmpw31b0t9f.d(26): Error: no property `to` for type `int`

    /tmp/tmpw31b0t9f.d(28): Error: no property `to` for type `int`

    /tmp/tmpw31b0t9f.d(32): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(string)`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw31b0t9f.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   return s.onlyLetters.reversed.zip(s.onlyLetters).join.zip(s.notLetters).join;\n\
    }\nunittest \n{\n    auto s = \"ab\";\n    assert(solve(s) == \"AB\");\n    assert(solve(\"\
    1234\") == \"4321\");\n    assert(solve(\"#a@C\") == \"#A@c\");\n    assert(solve(\"\
    \") == \"\");\n    assert(solve(\"aBc1d\") == \"AbC1d\");\n    assert(solve(\"\
    1a2B3C4d\") == \"1d2C3B4a\");\n    assert(solve(\"#a@C!d^e&f*g\") == \"#A@c!D^E&F*G\"\
    );\n    assert(solve(\"ab \") == \"AB \");\n    assert(solve(\" ab\") == \" AB\"\
    );\n    assert(solve(\"qwertyuiopasdfghjklzxcvbnm\") == \"QWERTYUIOPASDFGHJKLZXCVBNM\"\
    );\n    assert(solve(\"qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM\"\
    ) == \"QWERTYUIOPASDFGHJKLZXCVBNMQWERTYUIOPASDFGHJKLZXCVBNM\");\n    assert(solve(\"\
    1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0\") == \"1 2 3 4 5\
    \ 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0\");\n    assert(solve(\"1#\
    \ 2$ 3% 4^ 5& 6* 7( 8) 9- 0_ 1+ 2= 3; 4: 5, 6. 7/ 8?\") == \"1# 2$ 3% 4^ 5& 6*\
    \ 7( 8) 9- 0_ 1+ 2= 3; 4: 5, 6. 7/ 8?\");\n    assert(solve(\"! ? . , : ; = +\
    \ - _ 0 9 8 7 6 5 4 3 2 1 0 9\nunittest\n{\n    alias candidate = solve;\n\n \
    \   assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") ==\
    \ \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphm3k6uaw.d(43): Error: found `AsDf` when expecting `,`

    /tmp/tmphm3k6uaw.d(43): Error: found `aSdF` when expecting `,`

    /tmp/tmphm3k6uaw.d(44): Error: found `1234` when expecting `,`

    /tmp/tmphm3k6uaw.d(44): Error: found `4321` when expecting `,`

    /tmp/tmphm3k6uaw.d(45): Error: found `ab` when expecting `,`

    /tmp/tmphm3k6uaw.d(45): Error: found `AB` when expecting `,`

    /tmp/tmphm3k6uaw.d(46): Error: found `#` when expecting `,`

    /tmp/tmphm3k6uaw.d(46): Error: expression expected, not `@`

    /tmp/tmphm3k6uaw.d(46): Error: found `C` when expecting `,`

    /tmp/tmphm3k6uaw.d(46): Error: found `#` when expecting `,`

    /tmp/tmphm3k6uaw.d(46): Error: expression expected, not `@`

    /tmp/tmphm3k6uaw.d(46): Error: found `c` when expecting `,`

    /tmp/tmphm3k6uaw.d(47): Error: found `#` when expecting `,`

    /tmp/tmphm3k6uaw.d(47): Error: expression expected, not `^`

    /tmp/tmphm3k6uaw.d(47): Error: found `45` when expecting `,`

    /tmp/tmphm3k6uaw.d(47): Error: found `#` when expecting `,`

    /tmp/tmphm3k6uaw.d(47): Error: expression expecte'
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    foreach(char c; s)\n    {\n        if(('a'..'z').canFind(c))\n\
    \            result ~= to!string(c).toUpper();\n        else if(('A'..'Z').canFind(c))\n\
    \            result ~= to!string(c).toLower();\n        else\n            result\
    \ ~= c;\n    }\n    if(result.length == 0)\n        return s.dup.reverse;\n  \
    \  return result;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphntz2hcd.d(23): Error: found `..` when expecting `)`

    /tmp/tmphntz2hcd.d(23): Error: found `122U` when expecting `)`

    /tmp/tmphntz2hcd.d(23): Error: found `)` instead of statement

    /tmp/tmphntz2hcd.d(25): Error: found `..` when expecting `)`

    /tmp/tmphntz2hcd.d(25): Error: found `90U` when expecting `)`

    /tmp/tmphntz2hcd.d(25): Error: found `)` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphntz2hcd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   char[] a=new char[s.length];\n    if(s.length!=0){\n    a=s.dup;\n    foreach(e;0..s.length){\n\
    \        if(isLetter(a[e])){\n            if(a[e]>=65 && a[e]<=90){\n        \
    \        a[e]+=32;\n            }\n            else if(a[e]>=97 && a[e]<=122){\n\
    \                a[e]-=32;\n            }\n        }\n    }\n    }\n    return\
    \ a.join;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpusteeceq.d(24): Error: undefined identifier `isLetter`

    /tmp/tmpusteeceq.d(34): Error: no property `join` for type `char[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpusteeceq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   if (s.countUntil(a => s[a].isLetter) == s.length) return s.dup.reverse;\n\
    \    int a = 0;\n    string tmp = \"\";\n    foreach (c; s)\n    {\n        if\
    \ (c.isLetter)\n        {\n            tmp ~= c.toUpper;\n        }\n        else\n\
    \        {\n            tmp ~= c;\n        }\n    }\n    return tmp;\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpca42xwa0.d(20): Error: no property `countUntil` for type `string`

    /tmp/tmpca42xwa0.d(20): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(char[])`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    /tmp/tmpca42xwa0.d(25): Error: no property `isLetter` for type `immutable(char)`

    /tmp/tmpca42xwa0.d(27): Error: no property `toUpper` for type `immutable(char)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpca42xwa0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result;\n    foreach(c; s)\n    {\n        if (isLetter(c)) \n    \
    \    {\n            result ~= toLower(c) == c ? toUpper(c) : toLower(c);\n   \
    \     }\n        else\n        {\n            result ~= c;\n        }\n    }\n\
    \    return result.length == 0 ? s : result;\n}\nunittest\n{\n    alias candidate\
    \ = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"\
    1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjfe_whwc.d(23): Error: undefined identifier `isLetter`

    /tmp/tmpjfe_whwc.d(25): Error: undefined identifier `toLower`

    /tmp/tmpjfe_whwc.d(25): Error: undefined identifier `toUpper`

    /tmp/tmpjfe_whwc.d(25): Error: undefined identifier `toLower`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjfe_whwc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   if (empty(s)) return s;\n    return translate(s, (c) => c.isAlpha ? c.swapcase\
    \ : c);\n}\n/*\nYou are given a string s.\n    if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n    otherwise keep it as it is.\n\
    \    If the string contains no letters, reverse the string.\n    The function\
    \ should return the resulted string.\n    Examples\n    >>> solve(\"1234\")\n\
    \    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\")\n  \
    \  \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if (empty(s)) return s;\n\
    \    return translate(s, (c) => c.isAlpha ? c.swapcase : c);\n}\n/*\nYou are given\
    \ a string s.\n    if s[i] is a letter, reverse its case from lower to upper or\
    \ vise versa, \n    otherwise keep it as it is.\n    If the string contains no\
    \ letters, reverse the string.\n    The function should return the resulted string.\n\
    \    Examples\n    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n\
    \    \"AB\"\n    >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string\
    \ s) \n{\n    if (empty(s)) return s;\n    return translate(s, (c) => c.isAlpha\
    \ ? c.swapcase : c);\n}\n/*\nYou are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve(\"\
    1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>> solve(\"#a@C\"\
    )\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n    if (empty(s)) return\
    \ s;\n    return translate(s, (c)\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\"\
    ) == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6xn4awkf.d(82): Error: found `unittest` when expecting `,`

    /tmp/tmp6xn4awkf.d(95): Error: found `void` when expecting `,`

    /tmp/tmp6xn4awkf.d(95): Error: found `{` when expecting `,`

    /tmp/tmp6xn4awkf.d(95): Error: expression expected, not `}`

    /tmp/tmp6xn4awkf.d(95): Error: found `End of File` when expecting `,`

    /tmp/tmp6xn4awkf.d(95): Error: found `End of File` when expecting `)`

    /tmp/tmp6xn4awkf.d(95): Error: found `End of File` when expecting `;` following
    `return` statement

    /tmp/tmp6xn4awkf.d(95): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6xn4awkf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string result = \"\";\n    if(s.find_first_of(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ) == -1)\n    {\n        result = s.dup.retro;\n    }\n    else\n    {\n     \
    \   foreach(immutable c; s)\n        {\n            if(c.isAlpha)\n          \
    \  {\n                if(c.isUpper)\n                {\n                    result\
    \ ~= c.toLower;\n                }\n                else\n                {\n\
    \                    result ~= c.toUpper;\n                }\n            }\n\
    \            else\n            {\n                result ~= c;\n            }\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = solve;\n\
    \n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\"\
    ) == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"\
    #a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n\
    \    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\"\
    ) == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5gl2l6jy.d(21): Error: no property `find_first_of` for type `string`

    /tmp/tmp5gl2l6jy.d(23): Error: no property `retro` for type `char[]`

    /tmp/tmp5gl2l6jy.d(29): Error: no property `isAlpha` for type `immutable(char)`

    /tmp/tmp5gl2l6jy.d(31): Error: no property `isUpper` for type `immutable(char)`

    /tmp/tmp5gl2l6jy.d(33): Error: no property `toLower` for type `immutable(char)`

    /tmp/tmp5gl2l6jy.d(37): Error: no property `toUpper` for type `immutable(char)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5gl2l6jy.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   bool isLetter = false;\n    string res = s;\n    for (in i = 0; i < s.length;\
    \ i++)\n    {\n        if (isLetter(s[i]))\n        {\n            isLetter =\
    \ true;\n            if (s[i] > s[i] - 32)\n                res[i] = s[i] - 32;\n\
    \            else\n                res[i] = s[i] + 32;\n        }\n    }\n   \
    \ if (!isLetter)\n        return reverse(s);\n    return res;\n}\n// Description:\n\
    unittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") ==\
    \ \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp57ivqdgt.d(22): Error: found `in` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp57ivqdgt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   /*\n        A65 Z90 a97 z122\n    */\n    string result = \"\";\n    bool\
    \ rev = false;\n    foreach(c; s)\n    {\n        if (c >= 'A' && c <= 'Z')\n\
    \        {\n            c = to!char(to!int(c) + 32);\n            rev = true;\n\
    \        }\n        else if (c >= 'a' && c <= 'z')\n        {\n            c =\
    \ to!char(to!int(c) - 32);\n            rev = true;\n        }\n        result\
    \ ~= c;\n    }\n    if (rev)\n        return result;\n    else\n        return\
    \ result.dup.reverse;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpu7o7ei96.d(29): Error: template instance `to!char` template `to`
    is not defined, did you mean No?

    /tmp/tmpu7o7ei96.d(34): Error: template instance `to!char` template `to` is not
    defined, did you mean No?

    /tmp/tmpu7o7ei96.d(42): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(char[])`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu7o7ei96.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \  auto a = s.dup;\n   if (a.length == 0)\n     return a;\n   if (a.length ==\
    \ 1)\n   {\n      if (a[0] >= 'a' && a[0] <= 'z')\n      {\n         a[0] = toUpper(a[0]);\n\
    \         return a;\n      }\n      else if (a[0] >= 'A' && a[0] <= 'Z')\n   \
    \   {\n         a[0] = toLower(a[0]);\n         return a;\n      }\n      else\n\
    \         return a;\n   }\n   if (a.length == 2)\n   {\n      if (a[0] >= 'a'\
    \ && a[0] <= 'z')\n      {\n         a[0] = toUpper(a[0]);\n         if (a[1]\
    \ >= 'A' && a[1] <= 'Z')\n            a[1] = toLower(a[1]);\n         return a;\n\
    \      }\n      else if (a[0] >= 'A' && a[0] <= 'Z')\n      {\n         a[0] =\
    \ toLower(a[0]);\n         if (a[1] >= 'a' && a[1] <= 'z')\n            a[1] =\
    \ toUpper(a[1]);\n         return a;\n      }\n      else\n         return a;\n\
    \   }\n   if (a.length == 3)\n   {\n      if (a[0] >= 'a' && a[0] <= 'z')\n  \
    \    {\n         a[0] = toUpper(a[0]);\n         if (a[1] >= 'A' && a[1] <= 'Z')\n\
    \            a[1] = toLower(a[1]);\n         if (a[2] >= 'A' && a[2] <= 'Z')\n\
    \            a[2] = toLower(a[2]);\n         return a;\n      }\n      else if\
    \ (a[0] >= 'A' && a[0] <= 'Z')\n      {\n         a[0] = toLower(a[0]);\n    \
    \     if (a[1] >=\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmplxhh5wow.d(72): Error: expression expected, not `unittest`

    /tmp/tmplxhh5wow.d(73): Error: found `{` when expecting `)`

    /tmp/tmplxhh5wow.d(85): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmplxhh5wow.d(85): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplxhh5wow.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string res = \"\";\n    if(s.indexOfAny(\"aA\".split()) == -1)\n    {\n  \
    \      res = s.dup.dup.reverse;\n    }\n    else\n    {\n        foreach(i, c;\
    \ s)\n        {\n            res ~= s[i].toLower() == s[i] \n                \
    \    ? toUpper(s[i])\n                    : toLower(s[i]);\n        }\n    }\n\
    \    return res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpj_bp1ray.d(21): Error: no property `indexOfAny` for type `string`

    /tmp/tmpj_bp1ray.d(23): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(char[])`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    /tmp/tmpj_bp1ray.d(29): Error: no property `toLower` for type `immutable(char)`

    /tmp/tmpj_bp1ray.d(30): Error: undefined identifier `toUpper`

    /tmp/tmpj_bp1ray.d(31): Error: undefined identifier `toLower`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj_bp1ray.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   int len = s.length;\n    string res = \"\";\n    bool hasLetter = false;\n\
    \    foreach(auto x; s)\n    {\n        if (isalpha(x))\n        {\n         \
    \   hasLetter = true;\n            if (islower(x))\n                res ~= toupper(x);\n\
    \            else\n                res ~= tolower(x);\n        }\n        else\n\
    \            res ~= x;\n    }\n    if (!hasLetter)\n        res = res.dup.reverse();\n\
    \    return res;\n}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"\
    AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
    ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvdgqzhcv.d(23): Error: basic type expected, not `auto`

    /tmp/tmpvdgqzhcv.d(23): Error: no identifier for declarator `_error_`

    /tmp/tmpvdgqzhcv.d(23): Error: found `auto` when expecting `;`

    /tmp/tmpvdgqzhcv.d(23): Error: found `;` when expecting `)`

    /tmp/tmpvdgqzhcv.d(23): Error: found `)` when expecting `;` following statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvdgqzhcv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   string str = s;\n    string result;\n    int n = 0;\n    foreach(c;str)\n\
    \    {\n        if(c >= 'a' && c <= 'z')\n        {\n            result ~= toupper(c);\n\
    \        }\n        else if(c >= 'A' && c <= 'Z')\n        {\n            result\
    \ ~= tolower(c);\n        }\n        else\n        {\n            result ~= c;\n\
    \        }\n        n++;\n    }\n    if(n == s.length)\n    {\n        return\
    \ result;\n    }\n    else\n    {\n        return s.reverse;\n    }\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe2p59c7n.d(27): Error: undefined identifier `toupper`

    /tmp/tmpe2p59c7n.d(31): Error: undefined identifier `tolower`

    /tmp/tmpe2p59c7n.d(45): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(string)`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe2p59c7n.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n\
    \    if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n    otherwise keep it as it is.\n    If the string contains no letters, reverse\
    \ the string.\n    The function should return the resulted string.\n    Examples\n\
    \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n  \
    \  >>> solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n{\n \
    \   if (std.regex.is_match(\"[a-zA-Z]\", s))\n    {\n        string result = std.string.map!(t\
    \ => {\n            if (std.char.is_alpha(t))\n            {\n               \
    \ return (t.is_lower) ? t.to_upper : t.to_lower;\n            }\n            return\
    \ t;\n        })(s);\n        return result;\n    }\n    else \n    {\n      \
    \  string rs = s.dup;\n        rs.reverse;\n        return rs;\n    }\n}\nunittest\n\
    {\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\"\
    );\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\"\
    ) == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
    #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
    \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\"\
    ) == \"#CCC\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwqbx2lhc.d(23): Error: identifier expected following `.`, not `char`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwqbx2lhc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163955

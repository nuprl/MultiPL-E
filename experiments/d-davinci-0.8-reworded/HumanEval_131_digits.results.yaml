language: d
name: HumanEval_131_digits
results:
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long product\
    \ = 1L;\n    while (n > 0) \n    {\n        long digit = n % 10;\n        if (digit\
    \ % 2 == 1) \n        {\n            product *= digit;\n        }\n        n /=\
    \ 10;\n    }\n    return product;\n}\nunittest\n{\n    alias candidate = digits;\n\
    \n    assert(candidate(5L) == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L)\
    \ == 1L);\n    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) ==\
    \ 315L);\n    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L)\
    \ == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpaei9r2yf.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ddd]

    ??:? void tmpaei9r2yf.__unittest_L29_C1() [0x427b49]

    ??:? void tmpaei9r2yf.__modtest() [0x427b5c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fab5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]

    ??:? runModuleUnitTests [0x42b8d9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164303
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    if (n < 10)\
    \ return (n % 2) ? n : 0;\n    auto r = digits(n / 10);\n    if (r == 0) return\
    \ 0;\n    return (n % 2) ? r * (n % 10) : r;\n}\n/*\nGiven two non-negative integers\
    \ n and k,\ncompute the binomial coefficient \"n choose k\".\n    For example:\n\
    \    >>> binomial(3L, 1L)\n    3L\n    >>> binomial(3L, 2L)\n    3L\n    >>> binomial(3L,\
    \ 3L)\n    1L\n    >>> binomial(5L, 3L)\n    10L\n*/\nlong binomial(long n, long\
    \ k) \n{\n    long r = 1;\n    foreach (long i; 0L .. k) r *= n - i;\n    foreach\
    \ (long i; 1L .. k) r /= i;\n    return r;\n}\n/*\nReturn true if n is a power\
    \ of two.\n    For example:\n    >>> powerOfTwo(1L)\n    true\n    >>> powerOfTwo(2L)\n\
    \    true\n    >>> powerOfTwo(4L)\n    true\n    >>> powerOfTwo(10L)\n    false\n\
    */\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L) ==\
    \ 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n\
    \    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) == 315L);\n\
    \    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L) == 0L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long result=1;\n\
    \    long[] arr =  n.toString().toLongArray;\n    foreach(index, value; arr)\n\
    \    {\n        if(value % 2 == 1)\n        {\n            result = result * value;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = digits;\n\
    \n    assert(candidate(5L) == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L)\
    \ == 1L);\n    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) ==\
    \ 315L);\n    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L)\
    \ == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6vz2n5ii.d(18): Error: no property `toString` for type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6vz2n5ii.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long result\
    \ = 1L;\n    while (n > 0) {\n        long digit = n % 10;\n        if (digit\
    \ % 2 == 1) {\n            result *= digit;\n        }\n        n /= 10;\n   \
    \ }\n    return result;\n}\nunittest\n{\n    alias candidate = digits;\n\n   \
    \ assert(candidate(5L) == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L)\
    \ == 1L);\n    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) ==\
    \ 315L);\n    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L)\
    \ == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpqo5_vfd4.d(37): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ddd]

    ??:? void tmpqo5_vfd4.__unittest_L27_C1() [0x427b49]

    ??:? void tmpqo5_vfd4.__modtest() [0x427b5c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fab5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]

    ??:? runModuleUnitTests [0x42b8d9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    if (n < 10)\n\
    \    {\n        return (n % 2) * n;\n    }\n    return digits(n / 10) * (n % 2)\
    \ * (n % 10);\n}\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L)\
    \ == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n\
    \    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) == 315L);\n\
    \    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L) == 0L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp540aqsfz.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x427dfd]

    ??:? void tmp540aqsfz.__unittest_L23_C1() [0x427ac5]

    ??:? void tmp540aqsfz.__modtest() [0x427b80]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb23]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9b6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb49]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42fff8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fad5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a98d]

    ??:? runModuleUnitTests [0x42b8f9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42824c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    if (n < 0)\
    \ return 0;\n    long res = 1;\n    while (n != 0) {\n        n = n / 10;\n  \
    \      res *= n % 10;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate\
    \ = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L) ==\
    \ 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) == 5L);\n\
    \    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L) == 2625L);\n\
    \    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp28p3syf5.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427dbd]

    ??:? void tmp28p3syf5.__unittest_L25_C1() [0x427a64]

    ??:? void tmp28p3syf5.__modtest() [0x427b40]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bae3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a976]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb09]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffb8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa95]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]

    ??:? runModuleUnitTests [0x42b8b9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42820c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164303
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    bool found\
    \ = false;\n    long multiplier = 1;\n    long current = n;\n    long divisor\
    \ = 10;\n    while (current > 0)\n    {\n        long quotient = current / divisor;\n\
    \        long remainder = current % divisor;\n        if (remainder & 1)\n   \
    \     {\n            found = true;\n            multiplier *= remainder;\n   \
    \     }\n        current = quotient;\n    }\n    return found ? multiplier : 0;\n\
    }\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n\
    \    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L)\
    \ == 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long ret\
    \ = 1;\n    foreach(d; n.digits) \n    {\n        if (d % 2 == 1) \n        {\n\
    \            ret *= d;\n        }\n    }\n    return ret;\n}\n/*\nGiven a positive\
    \ integer n, return the sum of all odd digits.\n    Return 0 if all digits are\
    \ even.\n    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n  \
    \  0L\n    >>> digits(235L)\n    7L\n*/\nlong oddDigits(long n) \n{\n    long\
    \ ret = 0;\n    foreach(d; n.digits) \n    {\n        if (d % 2 == 1) \n     \
    \   {\n            ret += d;\n        }\n    }\n    return ret;\n}\n/*\nReturn\
    \ a tuple of two values: the first is an int representing the number of\n    digits\
    \ that are odd, and the second is an int representing the number of\n    digits\
    \ that are even.\n    For example:\n    >>> digits(1L)\n    (1, 0)\n    >>> digits(4L)\n\
    \    (0, 1)\n    >>> digits(235L)\n    (2, 1)\n*/\nTuple!(int, int) countDigits(long\
    \ n) \n{\n    int odd = 0;\n    int even = 0;\n    foreach(d; n.digits) \n   \
    \ {\n        if (d % 2 == 1) \n        {\n            odd++;\n        }\n    \
    \    else \n        {\n            even++;\n        }\n    }\n    return tuple(odd,\
    \ even);\n}\n/*\nGiven a positive integer n, return the sum of the product of\
    \ the odd digits\n    and the sum of the even digits.\n    For example:\n    >>>\
    \ digits(1L)\n    1L\n    >>> digits(4L)\n    4L\n    >>> digits(235L)\n    23L\n\
    */\nlong productSum(long n) \n{\n    int odd = 0;\n    int even = 0;\n    foreach(d;\
    \ n.digits) \n    {\n        if (d % 2 == 1\nunittest\n{\n    alias candidate\
    \ = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L) ==\
    \ 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) == 5L);\n\
    \    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L) == 2625L);\n\
    \    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9uwvavnx.d(97): Error: found `unittest` when expecting `)`

    /tmp/tmp9uwvavnx.d(109): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmp9uwvavnx.d(109): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9uwvavnx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n\tmixin DigitsFn!n;\n\
    \treturn reduce_odd_digits();\n}\nunittest\n{\n    alias candidate = digits;\n\
    \n    assert(candidate(5L) == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L)\
    \ == 1L);\n    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) ==\
    \ 315L);\n    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L)\
    \ == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpupeiy4i9.d(17): Error: undefined identifier `DigitsFn`

    /tmp/tmpupeiy4i9.d(17): Error: mixin `DigitsFn!n` is not defined

    /tmp/tmpupeiy4i9.d(18): Error: undefined identifier `reduce_odd_digits`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpupeiy4i9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long prod\
    \ = 1L;\n    while (n > 0) {\n        prod *= (n % 10) % 2 == 1 ? n % 10 : 1;\n\
    \        n /= 10;\n    }\n    return prod;\n}\nunittest\n{\n    alias candidate\
    \ = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L) ==\
    \ 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) == 5L);\n\
    \    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L) == 2625L);\n\
    \    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpj74t_e5e.d(34): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ded]

    ??:? void tmpj74t_e5e.__unittest_L24_C1() [0x427b59]

    ??:? void tmpj74t_e5e.__modtest() [0x427b6c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb13]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9a6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb39]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fac5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a97d]

    ??:? runModuleUnitTests [0x42b8e9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42823c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    return 0;\n\
    }\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n\
    \    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L)\
    \ == 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpeypq4vnm.d(23): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d7d]

    ??:? void tmpeypq4vnm.__unittest_L19_C1() [0x427a20]

    ??:? void tmpeypq4vnm.__modtest() [0x427afc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baa3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a936]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fac9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff78]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa55]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]

    ??:? runModuleUnitTests [0x42b879]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281cc]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long result\
    \ = 1L;\n    // Gather the odd digits of n.\n    while (n > 0L) {\n        int\
    \ digit = n % 10;\n        if (digit % 2 != 0) {\n            result *= digit;\n\
    \        }\n        n /= 10;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L)\
    \ == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) ==\
    \ 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpxhi97v35.d(38): unittest failure

    ----------------

    ??:? _d_unittestp [0x427dd5]

    ??:? void tmpxhi97v35.__unittest_L28_C1() [0x427b41]

    ??:? void tmpxhi97v35.__modtest() [0x427b54]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42faad]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a965]

    ??:? runModuleUnitTests [0x42b8d1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long p =\
    \ 1;\n    while (n != 0) \n    {\n        int d = cast(int)n % 10;\n        if\
    \ (d % 2 != 0)\n            p *= d;\n        n /= 10;\n    }\n    return p;\n\
    }\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n\
    \    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L)\
    \ == 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpep7_vc3l.d(37): unittest failure

    ----------------

    ??:? _d_unittestp [0x427dcd]

    ??:? void tmpep7_vc3l.__unittest_L27_C1() [0x427b3d]

    ??:? void tmpep7_vc3l.__modtest() [0x427b50]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baf3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a986]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb19]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffc8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42faa5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a95d]

    ??:? runModuleUnitTests [0x42b8c9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42821c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    auto s =\
    \ to!string(n);\n    long res = 1;\n    for (auto e : s) \n    {\n        if(e.isDigit)\n\
    \        {\n            long d = cast(long)e - 48;\n            if(d % 2 == 1)\n\
    \            {\n                res *= d;\n            }\n        }\n    }\n \
    \   return res;\n}\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L)\
    \ == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n\
    \    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) == 315L);\n\
    \    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L) == 0L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpd1vshewr.d(19): Error: no identifier for declarator `e`

    /tmp/tmpd1vshewr.d(19): Error: expression expected, not `:`

    /tmp/tmpd1vshewr.d(19): Error: found `s` when expecting `;` following `for` condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd1vshewr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long sum\
    \ = 1;\n    int digit = 0;\n    while (n != 0)\n    {\n        digit = n % 10;\n\
    \        if (digit % 2 != 0)\n        {\n            sum *= digit;\n        }\n\
    \        n /= 10;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate\
    \ = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L) ==\
    \ 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) == 5L);\n\
    \    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L) == 2625L);\n\
    \    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpss_7ellp.d(40): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ddd]

    ??:? void tmpss_7ellp.__unittest_L30_C1() [0x427b49]

    ??:? void tmpss_7ellp.__modtest() [0x427b5c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fab5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]

    ??:? runModuleUnitTests [0x42b8d9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n\t\n\t// TODO:\
    \ implement\n\tlong a=0;\n\tlong k=1;\n\t//long g=a/10;\n\tif(n==0)\n\treturn\
    \ 0;\n\telse\n\twhile(n>0)\n\t{\n\t\t//g=n%10;\n\t\tif(n%2==1)\n\t\t{\n\t\t\t\
    a=a+n%10;\n\t\t\tk=k*(n%10);\n\t\t}\n\t\tn=n/10;\n\t}\n\treturn k;\n\t\n}\n//long\
    \ gcd(long x, long y) \n//{\n\t// TODO: implement\n//\tlong a=min(x,y);\n//\t\
    long b=max(x,y);\n//\tlong r=1;\n//\twhile(r!=0)\n//\t{\n//\t\tr=b%a;\n//\t\t\
    b=a;\n//\t\ta=r;\n//\t}\n//\treturn b;\n//}\nunittest\n{\n    alias candidate\
    \ = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L) ==\
    \ 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) == 5L);\n\
    \    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L) == 2625L);\n\
    \    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp06k8f50m.d(62): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e05]

    ??:? void tmp06k8f50m.__unittest_L52_C1() [0x427b71]

    ??:? void tmp06k8f50m.__modtest() [0x427b84]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb2b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9be]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb51]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430000]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fadd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a995]

    ??:? runModuleUnitTests [0x42b901]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428254]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n\tauto r = n;\n\
    \tlong result = 1;\n\t\n\twhile( r > 0 )\n\t{\n\t\tlong digit = r % 10;\n\t\t\
    if( digit % 2 == 1 )\n\t\t\tresult *= digit;\n\t\tr /= 10;\n\t}\n\t\n\treturn\
    \ result;\n}\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L)\
    \ == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n\
    \    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) == 315L);\n\
    \    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L) == 0L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmph3iclcu6.d(40): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ddd]

    ??:? void tmph3iclcu6.__unittest_L30_C1() [0x427b49]

    ??:? void tmph3iclcu6.__modtest() [0x427b5c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fab5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]

    ??:? runModuleUnitTests [0x42b8d9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n\tlong N = n;\n\
    \tlong out = 1;\n\twhile (N != 0)\n\t{\n\t\tn = N % 10;\n\t\tif (n % 2 != 0)\n\
    \t\t{\n\t\t\tout *= n;\n\t\t}\n\t\tN /= 10;\n\t}\n\treturn out;\n}\nunittest\n\
    {\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L)\
    \ == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) ==\
    \ 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6gydz_d2.d(18): Error: no identifier for declarator `long`

    /tmp/tmp6gydz_d2.d(18): Error: found `out` instead of statement

    /tmp/tmp6gydz_d2.d(24): Error: found `out` instead of statement

    /tmp/tmp6gydz_d2.d(28): Error: expression expected, not `out`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6gydz_d2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long k =\
    \ 0;\n    int i = 0;\n    do \n    {\n        if (n % 2 != 0) \n        {\n  \
    \          k += std.math.pow(10, i) * (n % 10);\n            i++;\n        }\n\
    \        n /= 10;\n    } while (n != 0);\n    return k;\n}\n/*\nGiven a positive\
    \ integer n, return the total number of odd digits.\n    Return 0 if all digits\
    \ are even.\n    For example:\n    >>> odds(1L)\n    1L\n    >>> odds(4L)\n  \
    \  0L\n    >>> odds(235L)\n    2L\n    \n*/\nlong odds(long n) \n{\n    long k\
    \ = 0;\n    do \n    {\n        if (n % 2 != 0) \n        {\n            k++;\n\
    \        }\n        n /= 10;\n    } while (n != 0);\n    return k;\n}\n/*\nGiven\
    \ a positive integer n, return the total number of digits.\n    For example:\n\
    \    >>> num_digits(1L)\n    1L\n    >>> num_digits(4L)\n    1L\n    >>> num_digits(235L)\n\
    \    3L\n*/\nlong num_digits(long n) \n{\n    long k = 0;\n    do \n    {\n  \
    \      k++;\n        n /= 10;\n    } while (n != 0);\n    return k;\n}\n/*\nGiven\
    \ a positive integer n, return a list of digits (in reverse order).\n    For example:\n\
    \    >>> to_list(1L)\n    []\n    >>> to_list(4L)\n    [4L]\n    >>> to_list(235L)\n\
    \    [5L, 3L, 2L]\n*/\nimmutable(long)[] to_list(long n) \n{\n    long[] r;\n\
    \    do \n    {\n        r ~= n % 10;\n        n /= 10;\n    } while (n != 0);\n\
    \    return r;\n}\n/*\nGiven a list of digits l, return the corresponding number.\n\
    \    For example:\n    >>>\nunittest\n{\n    alias candidate = digits;\n\n   \
    \ assert(candidate(5L) == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L)\
    \ == 1L);\n    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) ==\
    \ 315L);\n    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L)\
    \ == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjz_rg3yv.d(95): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjz_rg3yv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    /*int answer\
    \ = 0;\n    int c = 0;\n    if (n == 0) {\n        return 0;\n    }\n    while\
    \ (n > 0) {\n        int i = n % 10;\n        if (i % 2 != 0) {\n            answer\
    \ = answer + i * (int)pow(10, c);\n            c++;\n        }\n        n = n\
    \ / 10;\n    }\n    return answer;*/\n    return (n == 0) ? 0 : digits(n / 10)\
    \ * 10 + (n % 2 != 0) ? n % 10 : 0;\n}\nunittest\n{\n    alias candidate = digits;\n\
    \n    assert(candidate(5L) == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L)\
    \ == 1L);\n    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) ==\
    \ 315L);\n    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L)\
    \ == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcgmdbdzk.d(38): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ded]

    ??:? void tmpcgmdbdzk.__unittest_L33_C1() [0x427ab1]

    ??:? void tmpcgmdbdzk.__modtest() [0x427b6c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb13]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9a6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb39]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fac5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a97d]

    ??:? runModuleUnitTests [0x42b8e9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42823c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n\t//for loop\
    \ to create array and find the product\n\tint len = n.toString().length;\n\tchar[]\
    \ arr;\n\tarr = new char[len];\n\tint pro = 1;\n\tn.toString.dup.toCharArray(arr);\n\
    \tfor(int i = 0; i < len; i++)\n\t{\n\t\tif(arr[i] % 2 != 0)\n\t\t{\n\t\t\tpro\
    \ *= Character.digit(arr[i], 10);\n\t\t}\n\t}\n\treturn pro;\n}\n/*\n    Given\
    \ a String, return a String that includes each character of the String except\
    \ for 'x'.\n    >>> noX(\"abcx\")\n    \"abc\"\n    >>> noX(\"xyz\")\n    \"yz\"\
    \n    >>> noX(\"x\")\n    \"\"\n    >>> noX(\"\")\n    \"\"\n*/\nstring noX(string\
    \ s)\n{\n\t//for loop to create array and remove the x's\n\tint len = s.length;\n\
    \tchar[] arr;\n\tarr = new char[len];\n\ts.dup.toCharArray(arr);\n\tfor(int i\
    \ = 0; i < len; i++)\n\t{\n\t\tif(arr[i] == 'x')\n\t\t{\n\t\t\tarr[i] = ' ';\n\
    \t\t}\n\t}\n\tstring str = new string(arr);\n\treturn str.replace(\" \", \"\"\
    );\n}\n/*\n    Given a String, return a String that includes each character of\
    \ the String except for 'x' and 'y'.\n    >>> noXY(\"abxcy\")\n    \"abc\"\n \
    \   >>> noXY(\"xyz\")\n    \"\"\n    >>> noXY(\"x\")\n    \"\"\n    >>> noXY(\"\
    \")\n    \"\"\n*/\nstring noXY(string s)\n{\n\t//for loop to create array and\
    \ remove the x's and y's\n\tint len = s.length;\n\tchar[] arr;\n\tarr = new char[len];\n\
    \ts.dup.toCharArray(arr);\n\tfor(int i = 0; i < len; i++)\n\t{\n\t\tif(arr[i]\
    \ == 'x'\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L)\
    \ == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n\
    \    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) == 315L);\n\
    \    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L) == 0L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpip2xgbou.d(81): Error: found `unittest` when expecting `)`

    /tmp/tmpip2xgbou.d(93): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmpip2xgbou.d(93): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpip2xgbou.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    mixin(bintostr!n);\n\
    \    return strtobool!(tuple(n)).map!(a => a ? to!long(tuple(n)[a]) : 0).filter!(a\
    \ => a % 2).reduce!(\"a * b\").empty ? 0 : strtobool!(tuple(n)).map!(a => a ?\
    \ to!long(tuple(n)[a]) : 0).filter!(a => a % 2).reduce!(\"a * b\");\n}\nunittest\n\
    {\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L)\
    \ == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) ==\
    \ 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg5trffbl.d(17): Error: template instance `bintostr!n` template
    `bintostr` is not defined

    /tmp/tmpg5trffbl.d(18): Error: template instance `strtobool!(tuple(n))` template
    `strtobool` is not defined

    /tmp/tmpg5trffbl.d(18): Error: template instance `strtobool!(tuple(n))` template
    `strtobool` is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg5trffbl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long ret\
    \ = 1;\n    for (; n != 0; n /= 10)\n    {\n        long mod = n % 10;\n     \
    \   if (mod % 2 == 1)\n            ret *= mod;\n    }\n    return ret;\n}\n/*\n\
    Write a program that takes a string and returns the number of unique characters\n\
    in the string.\nFor example:\n>>> unique_letters(\"abca\")\n3\n>>> unique_letters(\"\
    aba\")\n2\n>>> unique_letters(\"a\")\n1\n*/\nlong unique_letters(std.string str)\
    \ \n{\n    char[long] map;\n    foreach (c; str)\n        map[c] = 1;\n    return\
    \ map.length;\n}\n/*\nGiven a non-negative integer, return the number of ones\
    \ in the binary\nrepresentation of the number.\n    For example:\n    >>> bitcount(0L)\n\
    \    0L\n    >>> bitcount(1L)\n    1L\n    >>> bitcount(2L)\n    1L\n    >>> bitcount(3L)\n\
    \    2L\n    >>> bitcount(4L)\n    1L\n    >>> bitcount(5L)\n    2L\n    >>> bitcount(6L)\n\
    \    2L\n    >>> bitcount(7L)\n    3L\n    >>> bitcount(8L)\n    1L\n*/\nlong\
    \ bitcount(long n) \n{\n    long ret = 0;\n    for (; n != 0; n /= 2)\n      \
    \  ret += n % 2;\n    return ret;\n}\n/*\nGiven two positive integers, return\
    \ their sum. Do not use + or any arithmetic\noperators.\nHint: there are several\
    \ ways to do this.\nFor example:\n>>> plus(1L, 1L)\n2L\n>>> plus(2L, 3L)\n5L\n\
    >>> plus(8L, 9L)\n17L\n*/\nlong plus(long x, long y) \n{\n    long carry;\n  \
    \  while (y != 0)\n    {\n        carry = x & y;\n        x ^= y;\n        y =\
    \ carry << 1;\n    }\n    return x;\n}\n/*\nWrite\nunittest\n{\n    alias candidate\
    \ = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L) ==\
    \ 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) == 5L);\n\
    \    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L) == 2625L);\n\
    \    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp168pid2x.d(97): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp168pid2x.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long result\
    \ = 1L;\n    while (n > 0) {\n        long digit = n % 10;\n        if (digit\
    \ % 2L != 0L) \n            result *= digit;\n        n /= 10;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L)\
    \ == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n\
    \    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) == 315L);\n\
    \    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L) == 0L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp2mol7hic.d(36): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ddd]

    ??:? void tmp2mol7hic.__unittest_L26_C1() [0x427b49]

    ??:? void tmp2mol7hic.__modtest() [0x427b5c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fab5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]

    ??:? runModuleUnitTests [0x42b8d9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n  long res =\
    \ 1;\n  while (n > 0) {\n      long d = n % 10;\n      if (d % 2 == 1) res *=\
    \ d;\n      n /= 10;\n  }\n  return res;\n}\nunittest\n{\n    alias candidate\
    \ = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L) ==\
    \ 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) == 5L);\n\
    \    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L) == 2625L);\n\
    \    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpt0uix2tk.d(35): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ddd]

    ??:? void tmpt0uix2tk.__unittest_L25_C1() [0x427b49]

    ??:? void tmpt0uix2tk.__modtest() [0x427b5c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fab5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]

    ??:? runModuleUnitTests [0x42b8d9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long[long]\
    \ oddDigits = [1:1, 3:3, 5:5, 7:7, 9:9];\n    long product = 1;\n    for (immutable\
    \ long c; n > 0; n /= 10)\n    {\n        c = n % 10;\n        if (c in oddDigits)\n\
    \        {\n            product *= c;\n        }\n    }\n    return product;\n\
    }\n/*\nGiven a positive integer n, return the product of the odd digits.\n   \
    \ Return 0 if all digits are even.\n    For example:\n    >>> digits(1L)\n   \
    \ 1L\n    >>> digits(4L)\n    0L\n    >>> digits(235L)\n    15L\n    \n*/\nlong\
    \ digits_more_efficient(long n) \n{\n    long[long] oddDigits = [1:1, 3:3, 5:5,\
    \ 7:7, 9:9];\n    long[long] powerOfTen = [0:1, 1:10, 2:100, 3:1000, 4:10000,\
    \ 5:100000, 6:1000000, 7:10000000, 8:100000000, 9:1000000000];\n    if (n < 10)\n\
    \    {\n        return n in oddDigits ? n : 0;\n    }\n    long product = 1;\n\
    \    long base = 1;\n    while (base <= n)\n    {\n        auto baseUnit = n /\
    \ base % 10;\n        base *= 10;\n        if (baseUnit in oddDigits)\n      \
    \  {\n            product *= baseUnit;\n        }\n    }\n    return product;\n\
    }\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n\
    \    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L)\
    \ == 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqx856n32.d(21): Error: cannot modify `immutable` expression `c`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqx856n32.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long prod\
    \ = 1L;\n    while (n > 0)\n    {\n        long r = n % 10;\n        if (r % 2\
    \ != 0)\n        {\n            prod *= r;\n        }\n        n /= 10;\n    }\n\
    \    return prod;\n}\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L)\
    \ == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n\
    \    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) == 315L);\n\
    \    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L) == 0L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpgfjiawtn.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ddd]

    ??:? void tmpgfjiawtn.__unittest_L29_C1() [0x427b49]

    ??:? void tmpgfjiawtn.__modtest() [0x427b5c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fab5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]

    ??:? runModuleUnitTests [0x42b8d9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n\tint len = 0;\n\
    \tint t=n;\n\twhile(t!=0)\n\t{\n\t\tt/=10;\n\t\tlen++;\n\t}\n\tlong sum=1;\n\t\
    for(int i=len-1;i>=0;i--)\n\t{\n\t\tlong a=n/pow(10,i);\n\t\ta%=10;\n\t\tif(a%2!=0)\n\
    \t\t{\n\t\t\tsum*=a;\n\t\t}\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate\
    \ = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L) ==\
    \ 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) == 5L);\n\
    \    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L) == 2625L);\n\
    \    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfnza8wt2.d(18): Error: cannot implicitly convert expression `n`
    of type `long` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfnza8wt2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    return reduce!((a,\
    \ b) => a * b)(1L, filter!(x => x % 2 != 0)(to!(long[])(digits(n))));\n}\nunittest\n\
    {\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L)\
    \ == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) ==\
    \ 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmplcucvstq.d(17): Error: template instance `reduce!((a, b) => a *
    b)` template `reduce` is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplcucvstq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long ret\
    \ = 1;\n    while (n != 0)\n    {\n        long mod = n % 10;\n        if (mod\
    \ % 2 != 0)\n            ret *= mod;\n        n /= 10;\n    }\n    return ret;\n\
    }\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n\
    \    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L)\
    \ == 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp7rxmd1vl.d(37): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ddd]

    ??:? void tmp7rxmd1vl.__unittest_L27_C1() [0x427b49]

    ??:? void tmp7rxmd1vl.__modtest() [0x427b5c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fab5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]

    ??:? runModuleUnitTests [0x42b8d9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long result\
    \ = 1L;\n    foreach(d; iota(1L, log10(n) + 1L))\n    {\n        long digit =\
    \ n / pow(10L, d) % 10L;\n        if(digit % 2 != 0)\n        {\n            result\
    \ *= digit;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L) ==\
    \ 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) == 5L);\n\
    \    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L) == 2625L);\n\
    \    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsns4i4lj.d(18): Error: undefined identifier `iota`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsns4i4lj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long result\
    \ = 1L;\n    long x = 0L;\n    while (n != 0L)\n    {\n        x = n % 10L;\n\
    \        if ((x % 2L) != 0L)\n        {\n            result *= x;\n        }\n\
    \        n /= 10L;\n    }\n    return result;\n}\n/*\nGiven a non-negative integer\
    \ n, return the value of the last digit of (n-1)^(n-1).\n    For example:\n  \
    \  >>> lastdigit(1L)\n    0L\n    >>> lastdigit(2L)\n    6L\n    >>> lastdigit(9L)\n\
    \    9L\n    >>> lastdigit(20L)\n    6L\n*/\nlong lastdigit(long n) \n{\n    if\
    \ (n == 1L)\n    {\n        return 0L;\n    }\n    if (n == 2L)\n    {\n     \
    \   return 6L;\n    }\n    if (n == 3L)\n    {\n        return 6L;\n    }\n  \
    \  if (n == 4L)\n    {\n        return 4L;\n    }\n    if (n == 5L)\n    {\n \
    \       return 0L;\n    }\n    if (n == 6L)\n    {\n        return 0L;\n    }\n\
    \    if (n == 7L)\n    {\n        return 4L;\n    }\n    if (n == 8L)\n    {\n\
    \        return 6L;\n    }\n    if (n == 9L)\n    {\n        return 9L;\n    }\n\
    \    if (n == 10L)\n    {\n        return 0L;\n    }\n    if (n == 11L)\n    {\n\
    \        return 0L;\n    }\n    if (n == 12L)\n    {\n        return 4L;\n   \
    \ }\n    if (n == 13L)\n    {\n        return 6L;\n    }\n    if (n == 14L)\n\
    \    {\n        return 6L;\n    }\n    if (n == 15L)\n    {\n        return 9L;\n\
    \    }\n    if (n == 16L)\n    {\n       \nunittest\n{\n    alias candidate =\
    \ digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L) == 5L);\n\
    \    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) == 5L);\n   \
    \ assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L) == 2625L);\n\
    \    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbeejm332.d(107): Error: found `unittest` instead of statement

    /tmp/tmpbeejm332.d(119): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbeejm332.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long res\
    \ = 1;\n    do \n    {\n        if(n % 2 == 1)\n            res *= n % 10;\n \
    \       n /= 10;\n    } while(n > 0);\n    return res;\n}\nunittest\n{\n    alias\
    \ candidate = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L)\
    \ == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) ==\
    \ 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp_z4rb6t7.d(36): unittest failure

    ----------------

    ??:? _d_unittestp [0x427dd5]

    ??:? void tmp_z4rb6t7.__unittest_L26_C1() [0x427b41]

    ??:? void tmp_z4rb6t7.__modtest() [0x427b54]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42faad]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a965]

    ??:? runModuleUnitTests [0x42b8d1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long c =\
    \ 0;\n    if (n == 0)\n        return c;\n    auto d = n % 10;\n    n /= 10;\n\
    \    c = d % 2 == 1 ? d : 0;\n    return c * digits(n);\n}\nunittest\n{\n    alias\
    \ candidate = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L)\
    \ == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) ==\
    \ 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp66brmvar.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp66brmvar.__unittest_L25_C1() [0x427a8c]

    ??:? void tmp66brmvar.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n\tlong sum =\
    \ 1;\n\tforeach(c; to!string(n))\n\t{\n\t\tlong cInt = to!long(c);\n\t\tif(cInt\
    \ % 2 != 0)\n\t\t{\n\t\t\tsum *= cInt;\n\t\t}\n\t}\n\tif(sum == 1) return 0;\n\
    \treturn sum;\n}\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L)\
    \ == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n\
    \    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) == 315L);\n\
    \    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L) == 0L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0ft1ym73.d(18): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0ft1ym73.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    static import\
    \ std.conv;\n    static import std.algorithm : reduce;\n    static import std.math\
    \ : isOdd;\n    static import std.range : filter;\n    static import std.typecons\
    \ : tuple;\n    int[tuple!(string, string)] res = tuple(\"1\", \"2\");\n    return\
    \ reduce!((a, b) => a*b)(filter!(isOdd)(n.toString().to!(ulong[])));\n}\nunittest\n\
    {\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L)\
    \ == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) ==\
    \ 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp13bzyoxg.d(18): Error: static import `std` cannot have an import
    bind list

    /tmp/tmp13bzyoxg.d(19): Error: static import `std` cannot have an import bind
    list

    /tmp/tmp13bzyoxg.d(20): Error: static import `std` cannot have an import bind
    list

    /tmp/tmp13bzyoxg.d(21): Error: static import `std` cannot have an import bind
    list

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp13bzyoxg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    // nullary\n\
    \    static struct Nullary {\n        long opCall()\n        {\n            return\
    \ 1L;\n        }\n    }\n    // unary\n    static struct Unary {\n        long\
    \ opCall(long a)\n        {\n            return a;\n        }\n    }\n    // fold\n\
    \    static struct Fold {\n        long opCall(long a, long b)\n        {\n  \
    \          return a * b;\n        }\n    }\n    //\n    static struct Reducer\
    \ {\n        long opCall(long a, long b)\n        {\n            return (isOdd(a)\
    \ ? a : 1L) * (isOdd(b) ? b : 1L);\n        }\n    }\n    return chain(chain(split(n),\
    \ chain(filter!(isOdd), map!(to!long))), Fold()).reduce!(Reducer());\n}\nunittest\n\
    {\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L)\
    \ == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) ==\
    \ 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3ipgmelq.d(42): Error: undefined identifier `isOdd`

    /tmp/tmp3ipgmelq.d(42): Error: undefined identifier `isOdd`

    /tmp/tmp3ipgmelq.d(45): Error: undefined identifier `chain`, did you mean function
    `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3ipgmelq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long prod\
    \ = 1L;\n    while (n != 0L)\n    {\n        long digit = n % 10L;\n        if\
    \ (digit % 2L != 0L)\n        {\n            prod *= digit;\n        }\n     \
    \   n /= 10L;\n    }\n    return prod;\n}\nunittest\n{\n    alias candidate =\
    \ digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L) == 5L);\n\
    \    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) == 5L);\n   \
    \ assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L) == 2625L);\n\
    \    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpdmmciw5r.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ddd]

    ??:? void tmpdmmciw5r.__unittest_L29_C1() [0x427b49]

    ??:? void tmpdmmciw5r.__modtest() [0x427b5c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fab5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]

    ??:? runModuleUnitTests [0x42b8d9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    return 0;\n\
    }\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n\
    \    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L)\
    \ == 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpeypq4vnm.d(23): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d7d]

    ??:? void tmpeypq4vnm.__unittest_L19_C1() [0x427a20]

    ??:? void tmpeypq4vnm.__modtest() [0x427afc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baa3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a936]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fac9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff78]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa55]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]

    ??:? runModuleUnitTests [0x42b879]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281cc]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long product\
    \ = 1L;\n    foreach(d; n.to!string) \n    {\n\tif(d.to!long % 2L == 1L) \n\t\
    {\n\t    product *= d.to!long;\n\t}\n    }\n    return product;\n}\nunittest\n\
    {\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L)\
    \ == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) ==\
    \ 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvx1ne6qk.d(18): Error: no property `to` for type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvx1ne6qk.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n\treturn 0;\n\
    }\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n\
    \    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L)\
    \ == 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpkec0dg70.d(23): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d7d]

    ??:? void tmpkec0dg70.__unittest_L19_C1() [0x427a20]

    ??:? void tmpkec0dg70.__modtest() [0x427afc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baa3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a936]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fac9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff78]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa55]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]

    ??:? runModuleUnitTests [0x42b879]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281cc]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long acc\
    \ = 1L;\n    long rem;\n    foreach(c; n.stringof) \n    {\n        rem = c.to!long\
    \ - '0'.to!long;\n        if (rem % 2 != 0) \n        {\n            acc *= rem;\n\
    \        }\n    }\n    return acc;\n}\nunittest\n{\n    alias candidate = digits;\n\
    \n    assert(candidate(5L) == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L)\
    \ == 1L);\n    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) ==\
    \ 315L);\n    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L)\
    \ == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4tjygz_p.d(21): Error: no property `to` for type `immutable(char)`

    /tmp/tmp4tjygz_p.d(21): Error: no property `to` for type `char`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4tjygz_p.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long result\
    \ = 1L;\n    long i = 0L;\n    bool even = false;\n    while (n != 0L)\n    {\n\
    \        even = n % 2L == 0L;\n        if (even)\n        {\n            result\
    \ *= n % 10L;\n        }\n        n /= 10L;\n    }\n    return result;\n}\n/*\n\
    Given a positive integer n, return the product of the odd digits.\n    Return\
    \ 0 if all digits are even.\n    For example:\n    >>> digits1(1L)\n    1L\n \
    \   >>> digits1(4L)\n    0L\n    >>> digits1(235L)\n    15L\n    \n*/\nlong digits1(long\
    \ n) \n{\n    long result = 1L;\n    long i = 0L;\n    bool even = false;\n  \
    \  for (; n != 0L; n /= 10L)\n    {\n        even = n % 2L == 0L;\n        if\
    \ (even)\n        {\n            result *= n % 10L;\n        }\n    }\n    return\
    \ result;\n}\n/*\nGiven a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits2(1L)\n\
    \    1L\n    >>> digits2(4L)\n    0L\n    >>> digits2(235L)\n    15L\n    \n*/\n\
    long digits2(long n) \n{\n    long result = 1L;\n    long i = 0L;\n    bool even\
    \ = false;\n    return digits2_helper(n, result, i, even);\n}\nlong digits2_helper(long\
    \ n, long result, long i, bool even)\n{\n    if (n == 0L)\n    {\n        return\
    \ result;\n    }\n    else\n    {\n        even = n % 2L == 0L;\n        if (even)\n\
    \        {\n            result *= n % 10L;\n        }\n        return digits2_helper(n\
    \ / 10L, result, i, even);\n    }\n}\n/*\nGiven a positive integer n, return the\
    \ product of the odd digits\nunittest\n{\n    alias candidate = digits;\n\n  \
    \  assert(candidate(5L) == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L)\
    \ == 1L);\n    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) ==\
    \ 315L);\n    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L)\
    \ == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpq3ufot8x.d(93): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq3ufot8x.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    int total\
    \ = 1;\n    while (n>0)\n    {\n        auto rem = n % 10;\n        if (rem %\
    \ 2 != 0)\n        {\n            total *= rem;\n        }\n        n /= 10;\n\
    \    }\n    return total;\n}\nunittest\n{\n    alias candidate = digits;\n\n \
    \   assert(candidate(5L) == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L)\
    \ == 1L);\n    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) ==\
    \ 315L);\n    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L)\
    \ == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpvx71k3t_.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x427dd5]

    ??:? void tmpvx71k3t_.__unittest_L29_C1() [0x427b45]

    ??:? void tmpvx71k3t_.__modtest() [0x427b58]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42faad]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a965]

    ??:? runModuleUnitTests [0x42b8d1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long result\
    \ = 1L;\n    //while (n != 0L)\n    foreach(i; 0 .. n.countDigits)\n    {\n  \
    \      //auto digit = n % 10L;\n        auto digit = n.digitsTuple[i];\n     \
    \   if (digit.isOdd)\n        {\n            result *= digit;\n        }\n   \
    \     //n /= 10L;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L) ==\
    \ 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) == 5L);\n\
    \    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L) == 2625L);\n\
    \    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpl0f9ep1t.d(19): Error: no property `countDigits` for type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl0f9ep1t.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long result\
    \ = 1L;\n    for (; n != 0L; n /= 10L)\n    {\n        long d = n % 10L;\n   \
    \     if (d % 2L != 0L) \n        {\n            result *= d;\n        }\n   \
    \ }\n    return result;\n}\nunittest\n{\n    alias candidate = digits;\n\n   \
    \ assert(candidate(5L) == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L)\
    \ == 1L);\n    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) ==\
    \ 315L);\n    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L)\
    \ == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpo0k74xd9.d(38): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ddd]

    ??:? void tmpo0k74xd9.__unittest_L28_C1() [0x427b49]

    ??:? void tmpo0k74xd9.__modtest() [0x427b5c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fab5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]

    ??:? runModuleUnitTests [0x42b8d9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n\t// Initialize\
    \ the product to 1.\n\tlong product = 1L;\n\t\n\t// Create a stack of digits.\n\
    \tStack!(long) stack;\n\t\n\t// Create a stack of odd digits.\n\tStack!(long)\
    \ oddStack;\n\t\n\t// While n is greater than zero.\n\twhile (n > 0) \n\t{\n\t\
    \t// Pop the rightmost digit and push it on to the stack.\n\t\tstack.push(n %\
    \ 10);\n\t\t\n\t\t// Find the next digit.\n\t\tn /= 10;\n\t}\n\t\n\t// For each\
    \ digit.\n\tforeach (digit; stack) \n\t{\n\t\t// If the digit is odd.\n\t\tif\
    \ (digit % 2 != 0) \n\t\t{\n\t\t\t// Push the digit on to the odd stack.\n\t\t\
    \toddStack.push(digit);\n\t\t}\n\t}\n\t\n\t// If the stack of odd digits is empty.\n\
    \tif (oddStack.empty) \n\t{\n\t\t// Return zero.\n\t\treturn 0L;\n\t}\n\t\n\t\
    // For each odd digit.\n\tforeach (digit; oddStack) \n\t{\n\t\t// Multiply by\
    \ the digit.\n\t\tproduct *= digit;\n\t}\n\t\n\t// Return the product.\n\treturn\
    \ product;\n}\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L)\
    \ == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n\
    \    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) == 315L);\n\
    \    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L) == 0L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpf8qc6q3o.d(21): Error: template instance `Stack!long` template
    `Stack` is not defined

    /tmp/tmpf8qc6q3o.d(24): Error: template instance `Stack!long` template `Stack`
    is not defined, did you mean stack?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf8qc6q3o.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long result\
    \ = 1L;\n    while (n != 0L) \n    {\n        long r = n % 10L;\n        if (r\
    \ % 2L != 0L) \n        {\n            result *= r;\n        }\n        n /= 10L;\n\
    \    }\n    return result;\n}\n/*\n>>> digits(1L)\n1L\n>>> digits(4L)\n0L\n>>>\
    \ digits(235L)\n15L\n*/\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L)\
    \ == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n\
    \    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) == 315L);\n\
    \    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L) == 0L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp3n8y4rv5.d(47): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ddd]

    ??:? void tmp3n8y4rv5.__unittest_L37_C1() [0x427b49]

    ??:? void tmp3n8y4rv5.__modtest() [0x427b5c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fab5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]

    ??:? runModuleUnitTests [0x42b8d9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long res\
    \ = 1;\n    while (n>0)\n    {\n        auto r = n % 10;\n        if (r%2 != 0)\n\
    \            res *= r;\n        n /= 10;\n    }\n    return res;\n}\nunittest\n\
    {\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L)\
    \ == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) ==\
    \ 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpj52h4lc0.d(37): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ddd]

    ??:? void tmpj52h4lc0.__unittest_L27_C1() [0x427b49]

    ??:? void tmpj52h4lc0.__modtest() [0x427b5c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fab5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]

    ??:? runModuleUnitTests [0x42b8d9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n\tint x = 1;\n\
    \twhile (n > 0)\n\t{\n\t\tif ((n % 10) % 2 == 1)\n\t\t{\n\t\t\tx *= (n % 10);\n\
    \t\t}\n\t\tn /= 10;\n\t}\n\treturn x;\n}\nunittest\n{\n    alias candidate = digits;\n\
    \n    assert(candidate(5L) == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L)\
    \ == 1L);\n    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) ==\
    \ 315L);\n    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L)\
    \ == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpw9pcxht9.d(38): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmpw9pcxht9.__unittest_L28_C1() [0x427b55]

    ??:? void tmpw9pcxht9.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long result\
    \ = 1L;\n    long digit;\n    while (n > 0) {\n        digit = n % 10;\n     \
    \   if (digit % 2 == 1)\n        {\n            result *= digit;\n        }\n\
    \        n /= 10;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L) ==\
    \ 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) == 5L);\n\
    \    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L) == 2625L);\n\
    \    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpk1i3fc0u.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmpk1i3fc0u.__unittest_L29_C1() [0x427b51]

    ??:? void tmpk1i3fc0u.__modtest() [0x427b64]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n\tlong res =\
    \ 1;\n\twhile (n > 0) {\n\t\tauto d = n % 10;\n\t\tif (d % 2 != 0)\n\t\t\tres\
    \ *= d;\n\t\tn /= 10;\n\t}\n\treturn res;\n}\nunittest\n{\n    alias candidate\
    \ = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L) ==\
    \ 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) == 5L);\n\
    \    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L) == 2625L);\n\
    \    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp27h49lc7.d(36): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ddd]

    ??:? void tmp27h49lc7.__unittest_L26_C1() [0x427b49]

    ??:? void tmp27h49lc7.__modtest() [0x427b5c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fab5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]

    ??:? runModuleUnitTests [0x42b8d9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    return n\n\
    \            .digits\n            .filter!((i) => (i % 2 != 0))\n            .product;\n\
    }\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n\
    \    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L)\
    \ == 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpeag29gs9.d(19): Error: no property `filter` for type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeag29gs9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long result\
    \ = 1L;\n    while (n != 0L)\n    {\n        long r = n % 10L;\n        if (r\
    \ % 2L != 0L)\n        {\n            result *= r;\n        }\n        n /= 10L;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = digits;\n\n\
    \    assert(candidate(5L) == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L)\
    \ == 1L);\n    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) ==\
    \ 315L);\n    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L)\
    \ == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpa5nu8a2j.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ddd]

    ??:? void tmpa5nu8a2j.__unittest_L29_C1() [0x427b49]

    ??:? void tmpa5nu8a2j.__modtest() [0x427b5c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fab5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]

    ??:? runModuleUnitTests [0x42b8d9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    return 1;\n\
    }\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n\
    \    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L)\
    \ == 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmplwiub1k7.d(23): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d7d]

    ??:? void tmplwiub1k7.__unittest_L19_C1() [0x427a24]

    ??:? void tmplwiub1k7.__modtest() [0x427b00]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baa3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a936]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fac9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff78]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa55]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]

    ??:? runModuleUnitTests [0x42b879]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281cc]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    import std.string\
    \ : toString;\n    import std.algorithm : map,filter,reduce;\n    import std.conv\
    \ : to;\n    bool isOdd(string s) { return to!ulong(s) % 2 == 1; }\n    return\
    \ to!long(toString(n).map!to!string.filter!isOdd.reduce!q{a*b}());\n}\nunittest\n\
    {\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L)\
    \ == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) ==\
    \ 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpa3ml88t_.d(21): Error: multiple ! arguments are not allowed

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa3ml88t_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long product\
    \ = 1L;\n    long modul = 0L;\n    long tmp = n;\n    while (tmp != 0L) {\n  \
    \      modul = tmp % 10L;\n        if (modul % 2L != 0L)\n            product\
    \ *= modul;\n        tmp /= 10L;\n    }\n    return product;\n}\nunittest\n{\n\
    \    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L)\
    \ == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) ==\
    \ 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpeklcicb9.d(38): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmpeklcicb9.__unittest_L28_C1() [0x427b51]

    ??:? void tmpeklcicb9.__modtest() [0x427b64]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long result\
    \ = 1L;\n    foreach(n; iota(n))\n    {\n        auto t = n[i];\n        if(t\
    \ % 2L == 1L)\n        {\n            result *= t;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L)\
    \ == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n\
    \    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) == 315L);\n\
    \    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L) == 0L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpaj6zh9qh.d(18): Error: undefined identifier `iota`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpaj6zh9qh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n  long result\
    \ = 1L;\n  while (n > 0) {\n    long digit = n % 10;\n    if (digit % 2 == 1)\
    \ {\n      result *= digit;\n    }\n    n /= 10;\n  }\n  return result;\n}\n/*\n\
    \    Given two strings a and b. Split a at every occurrence of b, returning the\
    \ list of resulting strings.\n    For example:\n    >>> split(\"aabaabbaba\",\
    \ \"ba\")\n    [\"a\", \"aa\", \"ab\", \"a\"]\n    >>> split(\"aabaabbaba\", \"\
    a\")\n    [\"\", \"b\", \"\", \"b\", \"\", \"b\", \"\"]\n*/\nimmutable(string)[]\
    \ split(string a, string b) \n{\n  immutable(string)[] result;\n  size_t position\
    \ = 0;\n  while (position < a.length) {\n    size_t new_position = a.find(b, position);\n\
    \    if (new_position == npos) {\n      new_position = a.length;\n    }\n    result\
    \ ~= a[position..new_position];\n    position = new_position + b.length;\n  }\n\
    \  return result;\n}\n/*\n    Given an array a, return the list of values that\
    \ occur exactly once.\n    For example:\n    >>> uniq([1, 2, 3, 2, 1])\n    [3]\n\
    \    >>> uniq([1, 2, 3, 2, 1, 3])\n    []\n*/\nimmutable(long)[] uniq(immutable(long)[]\
    \ a) \n{\n  immutable(long)[] result;\n  auto set = set(long);\n  for (auto value\
    \ : a) {\n    if (set.contains(value)) {\n      result = result.filter!(v => v\
    \ != value);\n    } else {\n      set.insert(value);\n      result ~= value;\n\
    \    }\n  }\n  return result;\n}\n/*\n    Given a positive integer n, return the\
    \ list of all distinct squares which sum up to n.\n    Square numbers are integers\
    \ that are the squares of other integers.\n    For example:\n    >>> squares(5)\n\
    \    [[1\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L)\
    \ == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n\
    \    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) == 315L);\n\
    \    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L) == 0L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8ba6p4ma.d(60): Error: found `)` when expecting `.` following long

    /tmp/tmp8ba6p4ma.d(60): Error: found `;` when expecting identifier following `long`.

    /tmp/tmp8ba6p4ma.d(61): Error: found `for` when expecting `,`

    /tmp/tmp8ba6p4ma.d(61): Error: found `:` when expecting `)`

    /tmp/tmp8ba6p4ma.d(61): Error: missing `{ ... }` for function literal

    /tmp/tmp8ba6p4ma.d(61): Error: found `a` when expecting `,`

    /tmp/tmp8ba6p4ma.d(61): Error: semicolon expected following auto declaration,
    not `{`

    /tmp/tmp8ba6p4ma.d(71): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8ba6p4ma.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    int product\
    \ = 1;\n    while (n != 0) {\n        int d = n % 10;\n        if (d % 2 != 0)\n\
    \            product *= d;\n        n /= 10;\n    }\n    return product;\n}\n\
    \ \n/*\nYou are given a list of strings, and your task is to write a method\n\
    that chooses one of these strings at random and returns it.\n \n    >>> randomChoice([\"\
    a\", \"b\", \"c\"])\n    \"a\"\n    >>> randomChoice([\"a\", \"b\", \"c\"])\n\
    \    \"c\"\n    >>> randomChoice([\"a\", \"b\", \"c\"])\n    \"b\"\n    >>> randomChoice([\"\
    a\", \"b\", \"c\"])\n    \"a\"\n \n*/\n \nstring randomChoice(string[] list)\n\
    {\n    randomGen rand = new randomGen();\n    return list[uniform(0, list.length,\
    \ rand)];\n}\n \n/*\nYou are given a list of strings, and your task is to write\
    \ a method\nthat chooses one of these strings at random, but with the following\n\
    constraints:\n    the first time your method is called, it should return the first\n\
    \    string in the list.\n    the second time your method is called, it should\
    \ return the\n    second string in the list.\n    the third time your method is\
    \ called, it should return the third\n    string in the list.\n    and so on.\n\
    \ \n>>> randomChoice2([\"a\", \"b\", \"c\"])\n\"a\"\n>>> randomChoice2([\"a\"\
    , \"b\", \"c\"])\n\"b\"\n>>> randomChoice2([\"a\", \"b\", \"c\"])\n\"c\"\n>>>\
    \ randomChoice2([\"a\", \"b\", \"c\"])\n\"a\"\n \nYou are guaranteed that the\
    \ list contains at least 1 string.\n \n*/\n \nunittest\n{\n    alias candidate\
    \ = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L) ==\
    \ 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) == 5L);\n\
    \    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L) == 2625L);\n\
    \    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7ngr3hva.d(44): Error: undefined identifier `randomGen`

    /tmp/tmp7ngr3hva.d(44): Error: undefined identifier `randomGen`

    /tmp/tmp7ngr3hva.d(45): Error: undefined identifier `uniform`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7ngr3hva.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long sum\
    \ = 1;\n    for (; n > 0; n /= 10)\n    {\n        long digit = n % 10;\n    \
    \    if (digit % 2 == 1)\n        {\n            sum *= digit;\n        }\n  \
    \  }\n    return sum;\n}\nstatic assert(digits(1L) == 1L);\nstatic assert(digits(4L)\
    \ == 0L);\nstatic assert(digits(235L) == 15L);\n \nunittest\n{\n    alias candidate\
    \ = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L) ==\
    \ 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) == 5L);\n\
    \    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L) == 2625L);\n\
    \    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3e1auj0_.d(29): Error: static assert:  `digits(4L) == 0L` is false

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3e1auj0_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n\treturn n ==\
    \ 0L ? 0L : n % 10L % 2L != 0L ? n % 10L * digits(n / 10L) : digits(n / 10L);\n\
    }\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n\
    \    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L)\
    \ == 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmplk3f9kc4.d(23): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ded]

    ??:? void tmplk3f9kc4.__unittest_L19_C1() [0x427a90]

    ??:? void tmplk3f9kc4.__modtest() [0x427b6c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb13]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9a6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb39]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fac5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a97d]

    ??:? runModuleUnitTests [0x42b8e9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42823c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    import std.stdio;\n\
    \    import std.conv;\n    long out = 1;\n    foreach(i;0..to!long(log10(n)))\n\
    \    {\n        long temp = (n /(long)pow(10.0, i)) % 10;\n        if(temp % 2\
    \ != 0)\n        {\n            out *= temp;\n        }\n    }\n    return out;\n\
    }\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n\
    \    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L)\
    \ == 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvlwp2x4t.d(19): Error: no identifier for declarator `long`

    /tmp/tmpvlwp2x4t.d(19): Error: found `out` instead of statement

    /tmp/tmpvlwp2x4t.d(22): Error: C style cast illegal, use `cast(long)pow(10.0000,
    i)`

    /tmp/tmpvlwp2x4t.d(25): Error: found `out` instead of statement

    /tmp/tmpvlwp2x4t.d(28): Error: expression expected, not `out`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvlwp2x4t.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    // keep all\
    \ the digits in a list\n    auto a = to!(immutable)(int[])strip(to!string(n));\n\
    \    int l = a.length;\n    // if the list is empty return 0\n    if (l==0) return\
    \ 0;\n    else\n    {\n    // declare the product variable\n    int prod=1;\n\
    \    // for loop for multiply the odd digits\n    for (int i=0;i<l;i++)\n    {\n\
    \        // check if the number is odd\n        if (a[i]%2==1) prod*=a[i];\n \
    \   }\n    // return the product \n    return prod;\n    }\n}\n \n /*\n Given\
    \ a positive integer n, return the sum of the squares of the odd digits.\n   \
    \ Return 0 if all digits are even.\n    For example:\n    >>> sumSquares(1L)\n\
    \    1L\n    >>> sumSquares(4L)\n    0L\n    >>> sumSquares(235L)\n    30L\n*/\n\
    long sumSquares(long n)\n{\n    // keep all the digits in a list\n    auto a =\
    \ to!(immutable)(int[])strip(to!string(n));\n    int l = a.length;\n    // if\
    \ the list is empty return 0\n    if (l==0) return 0;\n    else\n    {\n    //\
    \ declare the product variable\n    int prod=0;\n    // for loop for multiply\
    \ the odd digits\n    for (int i=0;i<l;i++)\n    {\n        // check if the number\
    \ is odd\n        if (a[i]%2==1) prod+=a[i]*a[i];\n    }\n    // return the product\
    \ \n    return prod;\n    }\n}\nunittest\n{\n    alias candidate = digits;\n\n\
    \    assert(candidate(5L) == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L)\
    \ == 1L);\n    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) ==\
    \ 315L);\n    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L)\
    \ == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpy6ev_0m4.d(18): Error: basic type expected, not `)`

    /tmp/tmpy6ev_0m4.d(18): Error: `(arguments)` expected following `immutable(_error_)`

    /tmp/tmpy6ev_0m4.d(18): Error: found `[` when expecting `.` following int

    /tmp/tmpy6ev_0m4.d(18): Error: found `]` when expecting identifier following `int`.

    /tmp/tmpy6ev_0m4.d(18): Error: semicolon expected following auto declaration,
    not `strip`

    /tmp/tmpy6ev_0m4.d(51): Error: basic type expected, not `)`

    /tmp/tmpy6ev_0m4.d(51): Error: `(arguments)` expected following `immutable(_error_)`

    /tmp/tmpy6ev_0m4.d(51): Error: found `[` when expecting `.` following int

    /tmp/tmpy6ev_0m4.d(51): Error: found `]` when expecting identifier following `int`.

    /tmp/tmpy6ev_0m4.d(51): Error: semicolon expected following auto declaration,
    not `strip`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy6ev_0m4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long res\
    \ = 1;\n    int a;\n    while (n > 0)\n    {\n        a = cast(int)n % 10;\n \
    \       if (a % 2 != 0)\n            res *= a;\n        n /= 10;\n    }\n    return\
    \ res;\n}\n/*\n    Given a non-negative integer n, return the sum of the squares\
    \ of its digits.\n    For example:\n    >>> digits2(1L)\n    1L\n    >>> digits2(4L)\n\
    \    16L\n    >>> digits2(235L)\n    99L\n*/\nlong digits2(long n) \n{\n    long\
    \ res = 0;\n    int a;\n    while (n > 0)\n    {\n        a = cast(int)n % 10;\n\
    \        res += a * a;\n        n /= 10;\n    }\n    return res;\n}\n/*\n    Given\
    \ a non-negative integer n, return the sum of the squares of its digits.\n   \
    \ Repeat until n is 0 or n reaches the happy number 1.\n    For example:\n   \
    \ >>> happy(1L)\n    true\n    >>> happy(4L)\n    false\n    >>> happy(7L)\n \
    \   true\n*/\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L)\
    \ == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n\
    \    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) == 315L);\n\
    \    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L) == 0L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpyxrabrwd.d(71): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e5d]

    ??:? void tmpyxrabrwd.__unittest_L61_C1() [0x427bcd]

    ??:? void tmpyxrabrwd.__modtest() [0x427be0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb83]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa16]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fba9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430058]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb35]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9ed]

    ??:? runModuleUnitTests [0x42b959]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4282ac]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    int result\
    \ = 1;\n    for (; n > 0; n /= 10) \n    {\n        auto x = n % 10;\n       \
    \ if (x % 2 != 0) \n        {\n            result *= x;\n        }\n    }\n  \
    \  return result;\n}\n/*\nBy listing the first six prime numbers: 2, 3, 5, 7,\
    \ 11, and 13, we can see that the 6th prime is 13.\nunittest\n{\n    alias candidate\
    \ = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L) ==\
    \ 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) == 5L);\n\
    \    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L) == 2625L);\n\
    \    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpiyhlxhdq.d(28): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiyhlxhdq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long res\
    \ = 1;\n    long cmp = 0;\n    foreach(d; to!(string)(n))\n    {\n        res\
    \ *= to!(int)(d);\n        cmp++;\n    }\n    if(cmp == 0)\n        return 0;\n\
    \    return res;\n}\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L)\
    \ == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n\
    \    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) == 315L);\n\
    \    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L) == 0L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpryhxiqtv.d(19): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpryhxiqtv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    static if\
    \ (is(typeof(abs(n)) == long))\n    {\n        long result = 1L;\n        while\
    \ (n > 0L)\n        {\n            auto digit = n % 10L;\n            if (digit\
    \ % 2L != 0L)\n            {\n                result *= digit;\n            }\n\
    \            n /= 10L;\n        }\n        return result;\n    }\n    else\n \
    \   {\n        throw new Exception(\"n must be a long\");\n    }\n}\nunittest\n\
    {\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L)\
    \ == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) ==\
    \ 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmphppjzgxc.d(46): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ddd]

    ??:? void tmphppjzgxc.__unittest_L36_C1() [0x427b49]

    ??:? void tmphppjzgxc.__modtest() [0x427b5c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fab5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]

    ??:? runModuleUnitTests [0x42b8d9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    if (n < 0)\
    \ \n        n = -n;\n    \n    auto res = typeof(0L)(1);\n    while (n > 0) {\n\
    \        if (n & 1) {\n            res *= n % 10;\n        }\n        n /= 10;\n\
    \    }\n    return res;\n}\n// This is a cut from the std.math module:\n// 3.14159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706798214808651328230664709384460955058223172535940812848111745028410270193852110555964462294895493038196442881097566593344612847564823378678316527120190914564856692346034861045432664821339360726024914127372458700660631558817488152092096282925409171536436789259036001133053054882046652138414695194151160943305727036575959195309218611738193261179310511854807446237996274956735188575272489122793818301194912983367336244065664308602139494639522473719070217986094370277053921717629317675238467481846766940513200056812714526356082778577134275778960917363717872146844090122495343014654958537105079227968925892354201995611212902196086403441815981362977477130996051870721134999999837297804995105973173281609631859502445945534690830264252230825334468503526193118817101000313783875288658753320838142061717766914730359825349042875546873115956286388235378759375195778185778053217122680661300192787\n\
    unittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n\
    \    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L)\
    \ == 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpi_w0hui5.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x427dd5]

    ??:? void tmpi_w0hui5.__unittest_L31_C1() [0x427b45]

    ??:? void tmpi_w0hui5.__modtest() [0x427b58]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42faad]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a965]

    ??:? runModuleUnitTests [0x42b8d1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long x =\
    \ 0L;\n    long y = 1L;\n    long z = 0L;\n    for (; n != 0L; n /= 10L)\n   \
    \ {\n        x = n % 10L;\n        if (x % 2 != 0L)\n        {\n            y\
    \ *= x;\n        }\n        else\n        {\n            z += 1L;\n        }\n\
    \    }\n    if (z == 0L)\n    {\n        return y;\n    }\n    else\n    {\n \
    \       return 0L;\n    }\n}\nunittest\n{\n    alias candidate = digits;\n\n \
    \   assert(candidate(5L) == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L)\
    \ == 1L);\n    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) ==\
    \ 315L);\n    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L)\
    \ == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp0554lgq4.d(46): unittest failure

    ----------------

    ??:? _d_unittestp [0x427df5]

    ??:? void tmp0554lgq4.__unittest_L41_C1() [0x427ab9]

    ??:? void tmp0554lgq4.__modtest() [0x427b74]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb1b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9ae]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb41]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42fff0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42facd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a985]

    ??:? runModuleUnitTests [0x42b8f1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428244]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long prod\
    \ = 1L;\n    typeof(n) digit;\n    while (n > 0)\n    {\n        digit = n % 10;\n\
    \        if (digit % 2 != 0)\n            prod *= digit;\n        n /= 10;\n \
    \   }\n    return prod;\n}\n// By Sam Buss\nlong digits2(long n) \n{\n    long\
    \ prod = 1L;\n    long digit;\n    while (n != 0)\n    {\n        digit = n %\
    \ 10;\n        if (digit % 2 != 0)\n            prod *= digit;\n        n /= 10;\n\
    \    }\n    return prod;\n}\n// ========================================================\n\
    // Test\n// ========================================================\nunittest\n\
    {\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L)\
    \ == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) ==\
    \ 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp_le9dlbx.d(55): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e95]

    ??:? void tmp_le9dlbx.__unittest_L45_C1() [0x427c01]

    ??:? void tmp_le9dlbx.__modtest() [0x427c14]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bbbb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa4e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fbe1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430090]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb6d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa25]

    ??:? runModuleUnitTests [0x42b991]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4282e4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    int prod\
    \ = 1;\n    while (n != 0)\n    {\n        long a = n % 10;\n        if (a % 2\
    \ != 0)\n        {\n            prod *= a;\n        }\n        n /= 10;\n    }\n\
    \    return prod;\n}\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L)\
    \ == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n\
    \    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) == 315L);\n\
    \    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L) == 0L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmppnur1stn.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x427dd5]

    ??:? void tmppnur1stn.__unittest_L29_C1() [0x427b45]

    ??:? void tmppnur1stn.__modtest() [0x427b58]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42faad]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a965]

    ??:? runModuleUnitTests [0x42b8d1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n\treturn n==0\
    \ ? 0 : n%10%2==0 ? digits(n/10) : n%10*digits(n/10);\n}\n/*\nGiven a positive\
    \ integer n, return the product of the odd digits.\n    Return 0 if all digits\
    \ are even.\n    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n\
    \    0L\n    >>> digits(235L)\n    15L\n    >>> digits(100L)\n    0L\n    >>>\
    \ digits(9L)\n    9L\n    >>> digits(55555L)\n    125L\n    >>> digits(1000L)\n\
    \    0L\n    >>> digits(27001L)\n    7L\n    >>> digits(999999L)\n    729L\n \
    \   >>> digits(1523456L)\n    8L\n    >>> digits(100300400500600700800900L)\n\
    \    135L\n*/\nlong digits2(long n) \n{\n\treturn n==0 ? 0 : n%10%2==0 ? digits2(n/10)\
    \ : n%10*digits2(n/10);\n}\n/*\nGiven a positive integer n, return the product\
    \ of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n\
    \    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n    >>> digits(235L)\n\
    \    15L\n    >>> digits(100L)\n    0L\n    >>> digits(9L)\n    9L\n    >>> digits(55555L)\n\
    \    125L\n    >>> digits(1000L)\n    0L\n    >>> digits(27001L)\n    7L\n   \
    \ >>> digits(999999L)\n    729L\n    >>> digits(1523456L)\n    8L\n    >>> digits(100300400500600700800900L)\n\
    \    135L\n    >>> digits(92959798493949294929492949294929492949294929495L)\n\
    \    7L\n    >>> digits(929597984939492949294929492949294929492949294959L)\n \
    \  \nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L) ==\
    \ 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n\
    \    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) == 315L);\n\
    \    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L) == 0L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpi_dsdmiu.d(50): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi_dsdmiu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long oddDigits\
    \ = 1L;\n    while (n > 0) {\n        if ((n % 10) % 2 != 0) {\n            oddDigits\
    \ *= n % 10;\n        }\n        n /= 10;\n    }\n    return oddDigits;\n}\nunittest\n\
    {\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L)\
    \ == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) ==\
    \ 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp547v4hab.d(36): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ddd]

    ??:? void tmp547v4hab.__unittest_L26_C1() [0x427b49]

    ??:? void tmp547v4hab.__modtest() [0x427b5c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fab5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]

    ??:? runModuleUnitTests [0x42b8d9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long res\
    \ = 1;\n    foreach(i; to!(string)(n)) \n    {\n        if(i.to!int % 2 != 0)\n\
    \            res *= i.to!int;\n    }\n    return res;\n}\nunittest\n{\n    alias\
    \ candidate = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L)\
    \ == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) ==\
    \ 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpoldcbylp.d(18): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoldcbylp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long x =\
    \ 1;\n    long num = 0;\n    for (; num != n;)\n    {\n        if (n % 2 != 0)\n\
    \        {\n            x *= n % 10;\n        }\n        n /= 10;\n    }\n   \
    \ return x;\n}\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L)\
    \ == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n\
    \    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) == 315L);\n\
    \    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L) == 0L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmph6uk481c.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmph6uk481c.__unittest_L29_C1() [0x427b51]

    ??:? void tmph6uk481c.__modtest() [0x427b64]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long result\
    \ = 1L;\n    while (n > 0) {\n      auto d = n % 10;\n      n /= 10;\n      if\
    \ (d % 2 != 0) {\n        result *= d;\n      }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n\
    \    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L)\
    \ == 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpm7r43ytp.d(37): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ddd]

    ??:? void tmpm7r43ytp.__unittest_L27_C1() [0x427b49]

    ??:? void tmpm7r43ytp.__modtest() [0x427b5c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fab5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]

    ??:? runModuleUnitTests [0x42b8d9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long r =\
    \ 1;\n    foreach(immutable c; to!string(n))\n    {\n        const long d = to!long(c);\n\
    \        if (d % 2 != 0)\n            r *= d;\n    }\n    return r;\n}\nunittest\n\
    {\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L)\
    \ == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) ==\
    \ 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzy566085.d(18): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzy566085.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    return isOdd!(n)\
    \ ? (n * digits(n / 10)) : 0;\n}\nunittest\n{\n    alias candidate = digits;\n\
    \n    assert(candidate(5L) == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L)\
    \ == 1L);\n    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) ==\
    \ 315L);\n    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L)\
    \ == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpoegsuaub.d(17): Error: template instance `isOdd!n` template `isOdd`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoegsuaub.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long res\
    \ = 1;\n    foreach(d; split(n.to!string(), \"\")[]) \n    {\n        auto a =\
    \ to!int(d);\n        if (a%2 != 0) \n        {\n            res *= a;\n     \
    \   }\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = digits;\n\
    \n    assert(candidate(5L) == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L)\
    \ == 1L);\n    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) ==\
    \ 315L);\n    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L)\
    \ == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmps_kmbe_w.d(18): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps_kmbe_w.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    auto n2 =\
    \ n;\n    auto count = 0L;\n    auto result = 1L;\n    auto count2 = 0L;\n   \
    \ foreach(i; 0 .. countDigits(n2))\n    {\n        if(n2 % 2 == 1)\n        {\n\
    \            count++;\n            result *= n2;\n        }\n        n2 /= 10;\n\
    \    }\n    if(count == 0)\n    {\n        return 0;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n\
    \    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L)\
    \ == 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9y4pawl9.d(21): Error: undefined identifier `countDigits`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9y4pawl9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long res\
    \ = 1;\n    while (n != 0) {\n        long d = n % 10;\n        if (d % 2 != 0)\
    \ res *= d;\n        n /= 10;\n    }\n    return res;\n}\nunittest\n{\n    alias\
    \ candidate = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L)\
    \ == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) ==\
    \ 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpwmw8lk1j.d(35): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ddd]

    ??:? void tmpwmw8lk1j.__unittest_L25_C1() [0x427b49]

    ??:? void tmpwmw8lk1j.__modtest() [0x427b5c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fab5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]

    ??:? runModuleUnitTests [0x42b8d9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long product\
    \ = 1L;\n    long remainder = 0L;\n    long i = 0L;\n    while (n > 0L) {\n  \
    \      remainder = n % 10L;\n        if (remainder % 2L != 0L) {\n           \
    \ product *= remainder;\n        }\n        n /= 10L;\n    }\n    return product;\n\
    }\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n\
    \    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L)\
    \ == 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpu2h0oh_h.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ddd]

    ??:? void tmpu2h0oh_h.__unittest_L29_C1() [0x427b4d]

    ??:? void tmpu2h0oh_h.__modtest() [0x427b60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fab5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]

    ??:? runModuleUnitTests [0x42b8d9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    /* \n   \
    \ The function digits, takes a long parameter n, and returns a long number.\n\
    \    It creates a local long variable called prod, and initializes it to 1L.\n\
    \    Then it creates a while loop based on the condition n>0.\n    Within the\
    \ loop, it extracts the last digit of n, by using the remainder operator on n\
    \ and 10.\n    Then it checks if the digit is odd, if yes, it multiplies prod\
    \ by digit.\n    At the end of each iteration, it divides n by 10, to get the\
    \ next digit.\n    Finally it returns prod.\n    */\n    long prod = 1L;\n   \
    \ while (n > 0) \n    {\n        long digit = n % 10;\n        if (digit % 2 !=\
    \ 0) \n        {\n            prod *= digit;\n        }\n        n /= 10;\n  \
    \  }\n    return prod;\n}\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L)\
    \ == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n\
    \    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) == 315L);\n\
    \    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L) == 0L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpl5rwtg41.d(48): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ddd]

    ??:? void tmpl5rwtg41.__unittest_L38_C1() [0x427b49]

    ??:? void tmpl5rwtg41.__modtest() [0x427b5c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fab5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]

    ??:? runModuleUnitTests [0x42b8d9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n\tlong result=1;\n\
    \tfor(long i=1;i<=n;i++)\n\t{\n\t\tif(i%2!=0)\n\t\t{\n\t\t\tresult*=i;\n\t\t}\n\
    \t}\n\treturn result;\n}\n/*\nGiven a positive integer n, return the number of\
    \ zeros in n! (n factorial).\n    For example:\n    >>> zeros(5L)\n    1L\n  \
    \  >>> zeros(12L)\n    2L\n    >>> zeros(29L)\n    6L\n*/\nlong zeros(long n)\n\
    {\n\tlong result=0;\n\tfor(long i=1;i<=n;i++)\n\t{\n\t\tif(i%5==0)\n\t\t{\n\t\t\
    \tresult++;\n\t\t}\n\t}\n\treturn result;\n}\n/*\nGiven a positive integer n,\
    \ return the sum of the digits in n.\n    For example:\n    >>> sum_digits(123L)\n\
    \    6L\n    >>> sum_digits(45L)\n    9L\n    >>> sum_digits(123456789L)\n   \
    \ 45L\n*/\nlong sum_digits(long n)\n{\n\tlong result=0;\n\tlong temp;\n\tfor(long\
    \ i=1;i<=n;i++)\n\t{\n\t\tresult+=i;\n\t}\n\treturn result;\n}\n/*\nGiven a positive\
    \ integer n, return the sum of all positive integers up to n.\n    For example:\n\
    \    >>> sum_to(1L)\n    1L\n    >>> sum_to(3L)\n    6L\n    >>> sum_to(9L)\n\
    \    45L\n*/\nlong sum_to(long n)\n{\n\tlong result=0;\n\tfor(long i=1;i<=n;i++)\n\
    \t{\n\t\tresult+=i;\n\t}\n\treturn result;\n}\n/*\nGiven a positive integer n,\
    \ return the number of trailing zeros in n!.\n    For example:\n    >>> trailing_zeros(5L)\n\
    \    1L\n    >>> trailing_zeros(12L\nunittest\n{\n    alias candidate = digits;\n\
    \n    assert(candidate(5L) == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L)\
    \ == 1L);\n    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) ==\
    \ 315L);\n    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L)\
    \ == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmungirue.d(88): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmungirue.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    int result\
    \ = 1;\n    while (n > 0) {\n        int digit = n % 10;\n        if (digit %\
    \ 2 == 1) {\n            result *= digit;\n        }\n        n /= 10;\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L)\
    \ == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n\
    \    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) == 315L);\n\
    \    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L) == 0L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9sbtuwwh.d(37): unittest failure

    ----------------

    ??:? _d_unittestp [0x427dcd]

    ??:? void tmp9sbtuwwh.__unittest_L27_C1() [0x427b3d]

    ??:? void tmp9sbtuwwh.__modtest() [0x427b50]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baf3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a986]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb19]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffc8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42faa5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a95d]

    ??:? runModuleUnitTests [0x42b8c9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42821c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    int a = 0;\n\
    \    int prod = 1;\n    while (n != 0)\n    {\n        a = cast(int) n % 10;\n\
    \        if(a % 2 != 0)\n        {\n            prod *= a;\n        }\n      \
    \  n /= 10;\n    }\n    return prod;\n}\nunittest\n{\n    alias candidate = digits;\n\
    \n    assert(candidate(5L) == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L)\
    \ == 1L);\n    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) ==\
    \ 315L);\n    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L)\
    \ == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpeo8xhp1h.d(40): unittest failure

    ----------------

    ??:? _d_unittestp [0x427dd5]

    ??:? void tmpeo8xhp1h.__unittest_L30_C1() [0x427b41]

    ??:? void tmpeo8xhp1h.__modtest() [0x427b54]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42faad]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a965]

    ??:? runModuleUnitTests [0x42b8d1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long result\
    \ = 1L;\n    while (n > 0)\n    {\n        if (n % 2 == 1)\n        {\n      \
    \      result *= n % 10;\n        }\n        n /= 10;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n\
    \    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L)\
    \ == 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp77a_il9y.d(38): unittest failure

    ----------------

    ??:? _d_unittestp [0x427dd5]

    ??:? void tmp77a_il9y.__unittest_L28_C1() [0x427b45]

    ??:? void tmp77a_il9y.__modtest() [0x427b58]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42faad]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a965]

    ??:? runModuleUnitTests [0x42b8d1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164304
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n\tlong x = 1L;\n\
    \tbool even = true;\n\twhile (n > 0)\n\t{\n\t\tlong k = n % 10;\n\t\tif (k % 2\
    \ == 1)\n\t\t{\n\t\t\tx *= k;\n\t\t\teven = false;\n\t\t}\n\t\tn /= 10;\n\t}\n\
    \treturn (even) ? 0L : x;\n}\nunittest\n{\n    alias candidate = digits;\n\n \
    \   assert(candidate(5L) == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L)\
    \ == 1L);\n    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) ==\
    \ 315L);\n    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L)\
    \ == 0L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long odd_digits\
    \ = 1L;\n    foreach(i; 0 .. n.countDigits)\n    {\n        if (n.getDigit(i)\
    \ % 2 == 1)\n        {\n            odd_digits *= n.getDigit(i);\n        }\n\
    \    }\n    return odd_digits;\n}\nunittest\n{\n    alias candidate = digits;\n\
    \n    assert(candidate(5L) == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L)\
    \ == 1L);\n    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) ==\
    \ 315L);\n    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L)\
    \ == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb0ncviz6.d(18): Error: no property `countDigits` for type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb0ncviz6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long product\
    \ = 1L;\n    long temp = n;\n    long lastDigit = 0L;\n    long counter = 0L;\n\
    \    if (n > 0L)\n    {\n        while (temp > 0L)\n        {\n            lastDigit\
    \ = temp % 10L;\n            temp = temp / 10L;\n            if (lastDigit % 2L\
    \ != 0L)\n            {\n                product = product * lastDigit;\n    \
    \        }\n            counter++;\n        }\n    }\n    return product;\n}\n\
    unittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n\
    \    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L)\
    \ == 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpte188tj5.d(46): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ded]

    ??:? void tmpte188tj5.__unittest_L36_C1() [0x427b5d]

    ??:? void tmpte188tj5.__modtest() [0x427b70]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb13]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9a6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb39]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fac5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a97d]

    ??:? runModuleUnitTests [0x42b8e9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42823c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long result\
    \ = 1L;\n    foreach(immutable d; digits(n)) \n    {\n        if(isOdd(d)) \n\
    \        {\n            result *= d;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n\
    \    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L)\
    \ == 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg9s4_8v_.d(18): Error: invalid `foreach` aggregate `digits(n)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg9s4_8v_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    import std.conv;\n\
    \    import std.algorithm;\n    int[] even = [];\n    int[] odd = [];\n    long\
    \ product = 1;\n    if (n < 0) \n    {\n        n = -n;\n    }\n    foreach (d;\
    \ to!(string)(n)) \n    {\n        if (d.isOdd) \n        {\n            odd ~=\
    \ d;\n        } \n        else \n        {\n            even ~= d;\n        }\n\
    \    }\n    if (even.length == to!(string)(n).length) \n    {\n        return\
    \ 0;\n    }\n    product = productOf(odd);\n    return product;\n}\nunittest\n\
    {\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L)\
    \ == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) ==\
    \ 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwmmaomh2.d(28): Error: no property `isOdd` for type `immutable(char)`

    /tmp/tmpwmmaomh2.d(41): Error: undefined identifier `productOf`, did you mean
    variable `product`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwmmaomh2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long result=1;\n\
    \    int i=0;\n    int[] arr=new int[20];\n    if(n==0) return 0;\n    while(n!=0)\n\
    \    {\n       // writefln(\"%d\",n);\n        arr[i]=n%10;\n        n=n/10;\n\
    \        i++;\n    }\n    \n    \n    \n    \n    foreach(int e;arr)\n    {\n\
    \        if(e==0) break;\n        if(e%2!=0)\n        {\n          //  writefln(\"\
    %d\",e);\n            result*=e;\n        }\n    }\n    \n    return result;\n\
    }\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n\
    \    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L)\
    \ == 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp103ricj3.d(51): unittest failure

    ----------------

    ??:? _d_unittestp [0x428125]

    ??:? void tmp103ricj3.__unittest_L44_C1() [0x427e2b]

    ??:? void tmp103ricj3.__modtest() [0x427ea4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c0ff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42af92]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43021d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4306cc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af69]

    ??:? runModuleUnitTests [0x42bed5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285e8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    return product(filter!((long\
    \ c) => c % 2 == 1)(iota(n)));\n}\n \nunittest\n{\n    alias candidate = digits;\n\
    \n    assert(candidate(5L) == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L)\
    \ == 1L);\n    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) ==\
    \ 315L);\n    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L)\
    \ == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1s1iv3k2.d(17): Error: undefined identifier `product`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1s1iv3k2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long x=0L;\n\
    \    long y=1L;\n    long z=0L;\n    while(n>0)\n    {\n        x=n%10;\n    \
    \    n=n/10;\n        if(x%2!=0)\n        {\n            z=y*x;\n            y=z;\n\
    \        }\n    }\n    return z;\n}\nunittest\n{\n    alias candidate = digits;\n\
    \n    assert(candidate(5L) == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L)\
    \ == 1L);\n    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) ==\
    \ 315L);\n    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L)\
    \ == 0L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long result=1;\n\
    \    for(n;n>0;n/=10) \n    {\n        long d=n%10;\n        if(d%2==1) \n   \
    \     {\n            result*=d;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L)\
    \ == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) ==\
    \ 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmptf_9x0ua.d(18): Error: `n` has no effect

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptf_9x0ua.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long result=1;\n\
    \    if(n == 0L)\n        return 0L;\n    else if(n<0L)\n        n = -n;\n   \
    \ if(n<10L)\n        return n%2 == 0 ? 0L : n;\n    do\n    {\n        result\
    \ = (n%10L)%2 == 0 ? result : result*(n%10L);\n        n = n/10L;\n    }while(n>=10L);\n\
    \    return (n%2 == 0 ? result : result*n);\n}\nunittest\n{\n    alias candidate\
    \ = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L) ==\
    \ 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) == 5L);\n\
    \    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L) == 2625L);\n\
    \    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpi51gen1f.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e3d]

    ??:? void tmpi51gen1f.__unittest_L31_C1() [0x427bad]

    ??:? void tmpi51gen1f.__modtest() [0x427bc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb63]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9f6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb89]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430038]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb15]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9cd]

    ??:? runModuleUnitTests [0x42b939]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42828c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n\tif (n == 0)\
    \ return 0;\n\treturn n % 10 * (n % 2 != 0 ? digits(n / 10) : 0);\n}\nunittest\n\
    {\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L)\
    \ == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) ==\
    \ 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpk1opvimt.d(24): unittest failure

    ----------------

    ??:? _d_unittestp [0x427dd5]

    ??:? void tmpk1opvimt.__unittest_L20_C1() [0x427a7c]

    ??:? void tmpk1opvimt.__modtest() [0x427b58]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42faad]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a965]

    ??:? runModuleUnitTests [0x42b8d1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long r =\
    \ 1;\n    while (n != 0) \n    {\n        long d = n % 10;\n        if (d % 2\
    \ != 0) \n        {\n            r *= d;\n        }\n        n /= 10;\n    }\n\
    \    return r;\n}\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L)\
    \ == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n\
    \    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) == 315L);\n\
    \    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L) == 0L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpairm085q.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ddd]

    ??:? void tmpairm085q.__unittest_L29_C1() [0x427b49]

    ??:? void tmpairm085q.__modtest() [0x427b5c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fab5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]

    ??:? runModuleUnitTests [0x42b8d9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281b3]

    ??:? _d_run_main [0x42811e]

    ??:? main [0x427b6f]

    ??:? __libc_start_main [0x32b04554]

    1/1 unittests FAILED

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    auto ret\
    \ = 0L;\n    auto mul = 1L;\n    auto i = 0L;\n    auto q = 1L;\n    auto pow\
    \ = 1L;\n    auto oldret = 0L;\n    auto max = 0L;\n    do \n    {\n        auto\
    \ newret = n % 10;\n        //writeln(newret);\n        if (newret % 2 != 0) \n\
    \        {\n            ret = ret + newret * mul;\n            mul = mul * 10;\n\
    \        }\n        n = n / 10;\n    } while (n != 0);\n    return ret;\n}\n/*\n\
    unittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n\
    \    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L)\
    \ == 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3uv6whwk.d(37): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3uv6whwk.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n\tbool anyOdd\
    \ = false;\n\tlong product = 1;\n\twhile (n > 0)\n\t{\n\t\tint digit = n % 10;\n\
    \t\tif (digit % 2 == 1)\n\t\t{\n\t\t\tproduct *= digit;\n\t\t\tanyOdd = true;\n\
    \t\t}\n\t\tn /= 10;\n\t}\n\tif (anyOdd)\n\t\treturn product;\n\telse\n\t\treturn\
    \ 0;\n}\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L)\
    \ == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n\
    \    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) == 315L);\n\
    \    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L) == 0L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    return n\
    \ ? n%10*digits(n/10) : 1;\n}\nunittest\n{\n    alias candidate = digits;\n\n\
    \    assert(candidate(5L) == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L)\
    \ == 1L);\n    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) ==\
    \ 315L);\n    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L)\
    \ == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8a_io5mg.d(24): unittest failure

    ----------------

    ??:? _d_unittestp [0x427dbd]

    ??:? void tmp8a_io5mg.__unittest_L19_C1() [0x427a85]

    ??:? void tmp8a_io5mg.__modtest() [0x427b40]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bae3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a976]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb09]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffb8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa95]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]

    ??:? runModuleUnitTests [0x42b8b9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42820c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long v =\
    \ 0L;\n    long i = 1L;\n    foreach(d; n.to!string.split(\"\"))\n    {\n    \
    \    const long b = to!long(d);\n        if(b % 2 == 1)\n        {\n         \
    \   v += i*b;\n            i *= 10L;\n        }\n    }\n    return v;\n}\n/*\n\
    Given an integer n, return the sum of the digits of n! (n factorial).\n    For\
    \ example:\n    >>> factorial_sum(5L)\n    3L\n    >>> factorial_sum(6L)\n   \
    \ 9L\n*/\nlong factorial_sum(long n) \n{\n    import std.math : factorial;\n \
    \   long sum = 0L;\n    foreach(d; n.factorial.to!string.split(\"\"))\n    {\n\
    \        sum += to!long(d);\n    }\n    return sum;\n}\n/*\nGiven a positive integer\
    \ n, return the sum of the digits of 2**n.\n    For example:\n    >>> power_sum(15L)\n\
    \    26L\n    >>> power_sum(16L)\n    27L\n*/\nlong power_sum(long n) \n{\n  \
    \  long sum = 0L;\n    foreach(d; (2L**n).to!string.split(\"\"))\n    {\n    \
    \    sum += to!long(d);\n    }\n    return sum;\n}\n/*\nGiven a positive integer\
    \ n, return the sum of the digits of the nth term in the\n    Fibonacci sequence,\
    \ where the first two terms are 1 and 1.\n    For example:\n    >>> fibonacci_sum(4L)\n\
    \    5L\n    >>> fibonacci_sum(20L)\n    143L\n*/\nlong fibonacci_sum(long n)\
    \ \n{\n    long[] fib;\n    fib ~= 1L;\n    fib ~= 1L;\n    while(fib.length <=\
    \ n)\n    {\n        fib ~= fib[$-1] + fib[$-2];\n    }\n    return fib[$-1].to!string.split(\"\
    \").map!(to!long\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L)\
    \ == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n\
    \    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) == 315L);\n\
    \    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L) == 0L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5blda000.d(84): Error: found `unittest` when expecting `)` following
    template argument list

    /tmp/tmp5blda000.d(85): Error: found `{` when expecting `;` following `return`
    statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5blda000.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n\tlong product\
    \ = 1L;\n\tif (n == 0L)\n\t\treturn 0L;\n\t\n\tif(n % 2 == 0L)\n\t\treturn 0L;\n\
    \t\n\twhile(n > 0L)\n\t{\n\t\tif (n % 2 != 0L)\n\t\t\tproduct *= n % 10L;\n\t\t\
    n /= 10L;\n\t}\n\treturn product;\n}\n/*\nGiven a positive integer x, return the\
    \ product of the digits. \nFor example:\n    >>> digits2(1L)\n    1L\n    >>>\
    \ digits2(4L)\n    4L\n    >>> digits2(235L)\n    30L\n    \n*/\nlong digits2(long\
    \ x) \n{\n\tlong product = 1L;\n\tif (x == 0L)\n\t\treturn 0L;\n\t\n\twhile(x\
    \ > 0L)\n\t{\n\t\tproduct *= x % 10L;\n\t\tx /= 10L;\n\t}\n\treturn product;\n\
    }\n/*\nGiven a positive integer x, return the product of the digits, \nbut only\
    \ if x has an odd number of digits.\nFor example:\n    >>> digits3(1L)\n    1L\n\
    \    >>> digits3(4L)\n    0L\n    >>> digits3(235L)\n    30L\n    >>> digits3(12345678901L)\n\
    \    0L\n    \n*/\nlong digits3(long x) \n{\n\tif(x == 0L)\n\t\treturn 0L;\n\t\
    \n\tif(x < 10L)\n\t\treturn x;\n\t\n\tlong count = 0L;\n\tlong temp = x;\n\twhile(temp\
    \ > 0L)\n\t{\n\t\tcount++;\n\t\ttemp /= 10L;\n\t}\n\tif(count % 2 == 0L)\n\t\t\
    return 0L;\n\t\n\treturn digits2(x);\n}\n/*\nGiven a positive integer x, return\
    \ a positive integer y such that x = y^2 + 5y + 6.\n    Return 0 if no such y\
    \ exists.\n    For example:\n    >>> y2(1L)\n   \nunittest\n{\n    alias candidate\
    \ = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L) ==\
    \ 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) == 5L);\n\
    \    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L) == 2625L);\n\
    \    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkeaxlysf.d(90): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkeaxlysf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n\tlong result=1L;\n\
    \tforeach(immutable c;to!string(n))\n\t{\n\t\tint x = to!int(c);\n\t\tif(x%2==1)\n\
    \t\t\tresult*=x;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate =\
    \ digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L) == 5L);\n\
    \    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) == 5L);\n   \
    \ assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L) == 2625L);\n\
    \    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpa4_sos08.d(18): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa4_sos08.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long result\
    \ = 1L;\n    foreach(digit; n.to!string)\n    {\n        if(digit.to!long % 2L\
    \ != 0L)\n        {\n            result *= digit.to!long;\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L)\
    \ == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n\
    \    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) == 315L);\n\
    \    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L) == 0L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkgj74xrp.d(18): Error: no property `to` for type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkgj74xrp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long result\
    \ = 1L;\n    while (n != 0L)\n    {\n        long digit = n % 10L;\n        if\
    \ (digit % 2L != 0L)\n        {\n            result *= digit;\n        }\n   \
    \     n /= 10L;\n    }\n    return result;\n}\n/*\nWrite a function that returns\
    \ the sum of even digits.\n    Return 0 if all digits are odd.\n    For example:\n\
    \    >>> even_digits(1L)\n    0L\n    >>> even_digits(4L)\n    4L\n    >>> even_digits(235L)\n\
    \    6L\n*/\nlong even_digits(long n) \n{\n    long result = 0L;\n    while (n\
    \ != 0L)\n    {\n        long digit = n % 10L;\n        if (digit % 2L == 0L)\n\
    \        {\n            result += digit;\n        }\n        n /= 10L;\n    }\n\
    \    return result;\n}\n/*\nThe integers from 1 to m are written in binary with\
    \ leading zeros, such that the two-digit binary representation of each integer\
    \ is unique. \n    For example, 1 is written 01, 3 is written 11, 5 is written\
    \ 101, and so on.\n    Write a function that takes a positive integer m and returns\
    \ the largest positive integer n for which the two-digit binary representations\
    \ of the integers from 1 to n are unique.\n    If no such n exists, return 0.\n\
    \    For example:\n    >>> unique_binary(3L)\n    3L\n    >>> unique_binary(5L)\n\
    \    5L\n    >>> unique_binary(6L)\n    0L\n*/\nlong unique_binary(long m) \n\
    {\n    long n = m;\n    bool good = true;\n    while (good)\n    {\n        good\
    \ = false;\n        for (long i = 1L; i <= n; i++)\n        {\n            long\
    \ a = to!string(i, 2L);\n            for (long j = i + 1L; j <= n; j++)\n    \
    \        {\n                long b = to!string(j, 2L);\n                if (a\
    \ == b)\n                {\n                    good\nunittest\n{\n    alias candidate\
    \ = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L) ==\
    \ 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) == 5L);\n\
    \    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L) == 2625L);\n\
    \    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgw4zl4bv.d(83): Error: found `unittest` when expecting `;` following
    statement

    /tmp/tmpgw4zl4bv.d(95): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmpgw4zl4bv.d(95): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmpgw4zl4bv.d(95): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmpgw4zl4bv.d(95): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmpgw4zl4bv.d(95): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgw4zl4bv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    enum bool\
    \ allOdd = true;\n    int prod = 1;\n    while (n > 0) {\n        int digit =\
    \ n % 10;\n        if (digit % 2 == 0) allOdd = false;\n        else prod *= digit;\n\
    \        n /= 10;\n    }\n    return (allOdd ? prod : 0);\n}\nunittest\n{\n  \
    \  alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L)\
    \ == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) ==\
    \ 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgf2_jlzm.d(21): Error: cannot modify constant `allOdd`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgf2_jlzm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long res\
    \ = 1;\n    foreach(d; to!(string)(n))\n    {\n        long tmp = to!long(d);\n\
    \        if (tmp % 2 != 0)\n            res *= tmp;\n    }\n    return res;\n\
    }\n//v3\n/*\nGiven a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1L)\n\
    \    1L\n    >>> digits(4L)\n    0L\n    >>> digits(235L)\n    15L\n    \n*/\n\
    long digits(long n) \n{\n    long res = 1;\n    foreach(d; to!(string)(n))\n \
    \   {\n        long tmp = to!long(d);\n        if (tmp % 2 != 0)\n           \
    \ res *= tmp;\n    }\n    return res;\n}\n//v4\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long res\
    \ = 1;\n    foreach(d; to!(string)(n))\n    {\n        long tmp = to!long(d);\n\
    \        if (tmp % 2 != 0)\n            res *= tmp;\n    }\n    return res;\n\
    }\n//v5\n/*\nGiven a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1L)\n\
    \    1L\n    >>> digits(4L)\n    0L\n    >>> digits(235L)\n    15L\n    \n*/\n\
    long digits(long n) \n{\n    long res = 1;\n    foreach(d; to!(string)(n))\n \
    \   {\n        long tmp = to!long(d);\n        if (tmp % 2 != 0)\n           \
    \ res *= tmp;\n    }\n    return res;\n}\n//v6\nunittest\n{\n    alias candidate\
    \ = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L) ==\
    \ 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) == 5L);\n\
    \    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L) == 2625L);\n\
    \    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpc5ptk8j4.d(18): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmpc5ptk8j4.d(42): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmpc5ptk8j4.d(66): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmpc5ptk8j4.d(90): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmpc5ptk8j4.d(103): Error: `tmpc5ptk8j4.digits` called with argument types
    `(long)` matches both:

    /tmp/tmpc5ptk8j4.d(15):     `tmpc5ptk8j4.digits(long n)`

    and:

    /tmp/tmpc5ptk8j4.d(87):     `tmpc5ptk8j4.digits(long n)`

    /tmp/tmpc5ptk8j4.d(104): Error: `tmpc5ptk8j4.digits` called with argument types
    `(long)` matches both:

    /tmp/tmpc5ptk8j4.d(15):     `tmpc5ptk8j4.digits(long n)`

    and:

    /tmp/tmpc5ptk8j4.d(87):     `tmpc5ptk8j4.digits(long n)`

    /tmp/tmpc5ptk8j4.d(105): Error: `tmpc5ptk8j4.digits` called with argument types
    `(long)` matches both:

    /tmp/tmpc5ptk8j4.d(15):     `tmpc5ptk8j4.digi'
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long res\
    \ = 1;\n    foreach(i; n.digits){\n        if (i % 2 != 0)\n            res *=\
    \ i;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = digits;\n\n\
    \    assert(candidate(5L) == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L)\
    \ == 1L);\n    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) ==\
    \ 315L);\n    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L)\
    \ == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8ntjnxg5.d(18): Error: invalid `foreach` aggregate `digits(n)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8ntjnxg5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n\tif (n == 0)\n\
    \t\treturn 0;\n\telse \n\t{\n\t\tif (n % 2 == 0)\n\t\t\treturn digits(n / 10);\n\
    \t\telse\n\t\t\treturn n % 10 * digits(n / 10);\n\t}\n\t\n}\n \n \n/*\nGiven a\
    \ positive integer n, return the sum of the odd digits.\n    Return 0 if all digits\
    \ are even.\n    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n\
    \    0L\n    >>> digits(235L)\n    9L\n    \n*/\nlong sums(long n) \n{\n\tif (n\
    \ == 0)\n\t\treturn 0;\n\telse \n\t{\n\t\tif (n % 2 == 0)\n\t\t\treturn sums(n\
    \ / 10);\n\t\telse\n\t\t\treturn n % 10 + sums(n / 10);\n\t}\n\t\n}\n \n \n/*\n\
    Given a positive integer n, return the \nnumber of odd digits in it.\n    For\
    \ example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n    >>> digits(235L)\n\
    \    2L\n    \n*/\nlong count_odd(long n) \n{\n\tif (n == 0)\n\t\treturn 0;\n\t\
    else \n\t{\n\t\tif (n % 2 == 0)\n\t\t\treturn count_odd(n / 10);\n\t\telse\n\t\
    \t\treturn 1 + count_odd(n / 10);\n\t}\n\t\n}\n \n \n/*\nGiven a positive integer\
    \ n, \nreturn the number of times the digit 5 appears in n.\n    For example:\n\
    \    >>> digits(1L)\n    0L\n    >>> digits(5L)\n    1L\n    >>> digits(5235L)\n\
    \    2L\n    \n*/\nlong count_5(long n) \n{\n\tif (n == 0)\n\t\treturn 0;\n\t\
    else \n\t{\n\t\tif (n % 10 == 5)\n\t\t\treturn 1 + count_5(n / 10);\n\t\nunittest\n\
    {\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L)\
    \ == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) ==\
    \ 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpf25c08kb.d(105): Error: found `unittest` instead of statement

    /tmp/tmpf25c08kb.d(117): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf25c08kb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    import std.algorithm.iteration\
    \ : map, filter;\n    import std.conv : to;\n    // get array of digits\n    long[]\
    \ arr = n.to!string.array.map!(a => a.to!long).filter!(a => a%2);\n    // if empty\
    \ array return 0\n    if(arr.empty) return 0;\n    // fold and add\n    return\
    \ arr.reduce!((a,b) => a*b);\n}\nunittest\n{\n    alias candidate = digits;\n\n\
    \    assert(candidate(5L) == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L)\
    \ == 1L);\n    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) ==\
    \ 315L);\n    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L)\
    \ == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1wuxei8q.d(20): Error: no property `array` for type `string`

    /tmp/tmp1wuxei8q.d(22): Error: no property `empty` for type `long[]`

    /tmp/tmp1wuxei8q.d(24): Error: no property `reduce` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1wuxei8q.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n\tlong count\
    \ = 0L;\n\tlong result = 1L;\n\tlong d = 0L;\n\twhile (n != 0L) {\n\t\td = n %\
    \ 10L;\n\t\tif (d % 2L != 0L) {\n\t\t\tcount += 1L;\n\t\t\tresult *= d;\n\t\t\
    }\n\t\tn /= 10L;\n\t}\n\treturn result == 1L ? 0L : result;\n}\nunittest\n{\n\
    \    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L)\
    \ == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) ==\
    \ 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpb9czyvdp.d(36): unittest failure

    ----------------

    ??:? _d_unittestp [0x427dfd]

    ??:? void tmpb9czyvdp.__unittest_L30_C1() [0x427ae6]

    ??:? void tmpb9czyvdp.__modtest() [0x427b80]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb23]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9b6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb49]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42fff8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fad5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a98d]

    ??:? runModuleUnitTests [0x42b8f9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42824c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long prod\
    \ = 1L;\n    while (n > 0)\n    {\n        auto r = n % 10;\n        if (r % 2\
    \ != 0)\n        {\n            prod *= r;\n        }\n        n /= 10;\n    }\n\
    \    return prod;\n}\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L)\
    \ == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n\
    \    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) == 315L);\n\
    \    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L) == 0L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp5h0sd1st.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ddd]

    ??:? void tmp5h0sd1st.__unittest_L29_C1() [0x427b49]

    ??:? void tmp5h0sd1st.__modtest() [0x427b5c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fab5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]

    ??:? runModuleUnitTests [0x42b8d9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n     long temp\
    \ = 0;\n     long ans = 1;\n     for(int i = 0;i<n.stringof.length;++i)\n    {\n\
    \        temp = to!int(n.stringof[i]);\n        if(temp%2!=0)\n        {\n   \
    \         ans*=temp;\n        }\n    }\n    return ans;\n}\nunittest\n{\n    alias\
    \ candidate = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L)\
    \ == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) ==\
    \ 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpms39qm33.d(21): Error: template instance `to!int` template `to`
    is not defined, did you mean No?

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    int i=0;\n\
    \    int[] temp=new int[10];\n    int result=1;\n    while(n!=0)\n    {\n    \
    \  temp[i]=n%10;\n      n=n/10;\n      i++;\n    }\n    for(int j=0;j<i;j++)\n\
    \    {\n        if(temp[j]%2!=0)\n        {\n            result=result*temp[j];\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = digits;\n\
    \n    assert(candidate(5L) == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L)\
    \ == 1L);\n    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) ==\
    \ 315L);\n    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L)\
    \ == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8lndpc86.d(45): unittest failure

    ----------------

    ??:? _d_unittestp [0x42812d]

    ??:? void tmp8lndpc86.__unittest_L35_C1() [0x427e99]

    ??:? void tmp8lndpc86.__modtest() [0x427eac]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c107]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42af9a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430225]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4306d4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4301b1]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42af71]

    ??:? runModuleUnitTests [0x42bedd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4285f0]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    assert(n\
    \ > 0);\n    long result = 1;\n    foreach(d; iota(0, log10(n)).map!(i => n /\
    \ pow(10, i) % 10))\n    {\n        if (d % 2 == 1)\n            result *= d;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = digits;\n\n\
    \    assert(candidate(5L) == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L)\
    \ == 1L);\n    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) ==\
    \ 315L);\n    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L)\
    \ == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4in1_n3f.d(19): Error: undefined identifier `iota`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4in1_n3f.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n  long ret =\
    \ 1;\n  while (n != 0) {\n    if (n % 2 != 0) ret *= n % 10;\n    n /= 10;\n \
    \ }\n  return ret;\n}\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L)\
    \ == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n\
    \    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) == 315L);\n\
    \    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L) == 0L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpmq6vmuzl.d(34): unittest failure

    ----------------

    ??:? _d_unittestp [0x427dd5]

    ??:? void tmpmq6vmuzl.__unittest_L24_C1() [0x427b45]

    ??:? void tmpmq6vmuzl.__modtest() [0x427b58]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42faad]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a965]

    ??:? runModuleUnitTests [0x42b8d1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n\tlong r = 1;\n\
    \treturn n.walkDigits!(x => x % 2 ? r *= x : 0);\n}\n/*\nGiven an array of integers,\
    \ return a new array where each element in the\n    new array is the number of\
    \ smaller elements to the right of that element\n    in the original input array.\n\
    \    For example:\n    >>> countSmallerToTheRight([3, 4, 9, 6, 1])\n    [1, 1,\
    \ 2, 1, 0]\n    >>> countSmallerToTheRight([5, 4, 3, 2, 1])\n    [4, 3, 2, 1,\
    \ 0]\n    >>> countSmallerToTheRight([1, 2, 3, 4, 5])\n    [0, 0, 0, 0, 0]\n \
    \   >>> countSmallerToTheRight([1, 5, 4, 3, 2])\n    [3, 1, 1, 1, 0]\n*/\nunittest\n\
    {\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L)\
    \ == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) ==\
    \ 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwuym_8yr.d(18): Error: no property `walkDigits` for type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwuym_8yr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    return n\
    \ / 100 * 10 * (n % 10) * (n / 10 % 10) * (n / 100 % 10);\n}\n/*\nGiven a positive\
    \ integer n, return the product of the odd digits.\n    Return 0 if all digits\
    \ are even.\n    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n\
    \    0L\n    >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n  \
    \  long result = 1;\n    while (n > 0) {\n        long d = n % 10;\n        if\
    \ (d % 2 == 1) {\n            result *= d;\n        }\n        n /= 10;\n    }\n\
    \    return result;\n}\n/*\nGiven an unsigned char and a positive integer n, return\
    \ an integer whose value is n shifted left by c bits.\n    For example:\n    >>>\
    \ shift(0x17, 3)\n    0xE8\n    >>> shift(0x17, 0)\n    0x17\n    >>> shift(0x17,\
    \ 8)\n    0x1700\n    >>> shift(0x17, 9)\n    0x2E00\n    >>> shift(0x17, 16)\n\
    \    0x170000\n    \n*/\nlong shift(ulong n, int c) \n{\n    return n << c;\n\
    }\n/*\nGiven an unsigned char and a positive integer n, return an integer whose\
    \ value is n shifted left by c bits.\n    For example:\n    >>> shift(0x17, 3)\n\
    \    0xE8\n    >>> shift(0x17, 0)\n    0x17\n    >>> shift(0x17, 8)\n    0x1700\n\
    \    >>> shift(0x17, 9)\n    0x2E00\n    >>> shift(0x17, 16)\n    0x170000\n \
    \   \n*/\nlong shift(ulong n, int c) \n{\n    return n << c;\n}\n/*\nGiven a positive\
    \ integer n, return the smallest number of bits that must be used to represent\
    \ n.\n    For example:\n    >>> bits(1L)\n    1\n    >>> bits(2L)\nunittest\n\
    {\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L)\
    \ == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) ==\
    \ 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfydvwf2x.d(81): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfydvwf2x.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    return reduce!((a,b)\
    \ => a*b)(1L,filter!(a => isOdd(a))(to!(long[])(to!string(n)).map!(a => to!long(a))));\n\
    }\n/*\nReturn true if the given number is a prime number.\n    A prime number\
    \ is any natural number greater than 1 which has only two divisors: 1 and itself.\n\
    \    For example:\n    >>> isPrime(0L)\n    false\n    >>> isPrime(1L)\n    false\n\
    \    >>> isPrime(2L)\n    true\n    >>> isPrime(4L)\n    false\n    >>> isPrime(11L)\n\
    \    true\n    >>> isPrime(100L)\n    false\n    \n*/\nunittest\n{\n    alias\
    \ candidate = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L)\
    \ == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) ==\
    \ 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmly2b088.d(17): Error: template instance `reduce!((a, b) => a *
    b)` template `reduce` is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmly2b088.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n\t\n}\nunittest\n\
    {\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L)\
    \ == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) ==\
    \ 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9lj_tcds.d(15): Error: function `tmp9lj_tcds.digits` has no `return`
    statement, but is expected to return a value of type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9lj_tcds.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164304
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long tmp\
    \ = 0L;\n    long prod = 1L;\n    while (n > 0L)\n    {\n        tmp = n % 10L;\n\
    \        if (tmp % 2L == 1L)\n        {\n            prod *= tmp;\n        }\n\
    \        n /= 10L;\n    }\n    return prod;\n}\nunittest\n{\n    alias candidate\
    \ = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L) ==\
    \ 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) == 5L);\n\
    \    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L) == 2625L);\n\
    \    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp4vp_xy3e.d(40): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp4vp_xy3e.__unittest_L30_C1() [0x427b51]

    ??:? void tmp4vp_xy3e.__modtest() [0x427b64]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    // if we\
    \ had a list of all digits\n    // so one way to do it is to get a list of all\
    \ digits\n    // then we can filter the list and apply the product to all elements.\n\
    \    auto l = to!(string)(n).filter!(ch => ch % 2).map!(to!long).product;\n  \
    \  return l;\n}\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L)\
    \ == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n\
    \    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) == 315L);\n\
    \    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L) == 0L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjhod5ge6.d(20): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjhod5ge6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long r;\n\
    \    size_t i;\n    long p;\n    i = 0;\n    r = 0;\n    p = 0;\n    const(long[])\
    \ b = to!(const(long[]))(n);\n    foreach(const(long) e; b)\n    {\n        if(e\
    \ & 1)\n        {\n            if(p == 0)\n            {\n                p =\
    \ 1;\n            }\n            else\n            {\n                p *= e;\n\
    \            }\n        }\n    }\n    return p;\n}\nunittest\n{\n    alias candidate\
    \ = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L) ==\
    \ 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) == 5L);\n\
    \    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L) == 2625L);\n\
    \    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpp2qy_9ux.d(23): Error: template instance `to!(const(long[]))` template
    `to` is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp2qy_9ux.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    if (n ==\
    \ 0) return 0;\n    auto d = cast(long)n % 10;\n    if (d % 2 == 0) return digits(n\
    \ / 10);\n    return d * digits(n / 10);\n}\nunittest\n{\n    alias candidate\
    \ = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L) ==\
    \ 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) == 5L);\n\
    \    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L) == 2625L);\n\
    \    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpq9xxsmdg.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ddd]

    ??:? void tmpq9xxsmdg.__unittest_L22_C1() [0x427a84]

    ??:? void tmpq9xxsmdg.__modtest() [0x427b60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fab5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]

    ??:? runModuleUnitTests [0x42b8d9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long p =\
    \ 1;\n    while (n > 0) {\n        auto n1 = n/10;\n        auto d = n - n1*10;\n\
    \        if (d % 2 == 1) {\n            p *= d;\n        }\n        n = n1;\n\
    \    }\n    return p;\n}\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L)\
    \ == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n\
    \    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) == 315L);\n\
    \    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L) == 0L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp662fiy6d.d(38): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ded]

    ??:? void tmp662fiy6d.__unittest_L28_C1() [0x427b5d]

    ??:? void tmp662fiy6d.__modtest() [0x427b70]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb13]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9a6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb39]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fac5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a97d]

    ??:? runModuleUnitTests [0x42b8e9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42823c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long product\
    \ = 1L;\n    foreach(character; n.to!string())\n    {\n        if((character.to!long())%2\
    \ != 0)\n        {\n            product *= character.to!long();\n        }\n \
    \   }\n    return product;\n}\nunittest\n{\n    alias candidate = digits;\n\n\
    \    assert(candidate(5L) == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L)\
    \ == 1L);\n    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) ==\
    \ 315L);\n    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L)\
    \ == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpby9xwg4y.d(18): Error: no property `to` for type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpby9xwg4y.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long oddProd\
    \ = 1L;\n    while (n > 0) {\n        // Do something with digit\n        long\
    \ digit = n % 10;\n        if (digit % 2 == 1) {\n            oddProd *= digit;\n\
    \        }\n        n /= 10;\n    }\n    return oddProd;\n}\nunittest\n{\n   \
    \ alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L)\
    \ == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) ==\
    \ 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpfzzmazwh.d(38): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ddd]

    ??:? void tmpfzzmazwh.__unittest_L28_C1() [0x427b49]

    ??:? void tmpfzzmazwh.__modtest() [0x427b5c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fab5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]

    ??:? runModuleUnitTests [0x42b8d9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    // input\
    \ a long integer\n    // output a long integer\n    // if all digits are even,\
    \ return 0\n    // otherwise, return the product of the odd digits\n    long product\
    \ = 1L;\n    bool digit_odd = false;\n    int i = 0;\n    long x;\n    long n_orig\
    \ = n;\n    int num_digits = 0;\n    // count the number of digits\n    while\
    \ (n_orig != 0)\n    {\n        n_orig /= 10;\n        num_digits++;\n    }\n\
    \    // get individual digits\n    while (i < num_digits)\n    {\n        // get\
    \ current digit\n        x = n % 10;\n        // check if it is odd\n        if\
    \ (x % 2 != 0)\n        {\n            // if yes, multiply it to the product\n\
    \            product *= x;\n            digit_odd = true;\n        }\n       \
    \ // remove current digit\n        n /= 10;\n        i++;\n    }\n    // return\
    \ the product if there is an odd digit\n    if (digit_odd)\n    {\n        return\
    \ product;\n    }\n    else\n    {\n        return 0L;\n    }\n}\n// BEGIN: REQUIRED\
    \ TESTS\nassert(digits(1L) == 1L);\nassert(digits(4L) == 0L);\nassert(digits(235L)\
    \ == 15L);\n// END: REQUIRED TESTS\n/*\nGiven a positive integer n, return the\
    \ sum of the squares of its odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> squares(1L)\n    1L\n    >>> squares(4L)\n    0L\n\
    \    >>> squares(235L)\n    70L\n*/\nlong squares(long n) \n{\n    // input a\
    \ long integer\n    // output a long integer\n    // if all digits are even, return\
    \ 0\n    // otherwise, return the sum of the squares of the odd digits\n    long\
    \ sum = 0L;\n    bool digit_odd = false;\n    int i = 0;\n    long x;\n    long\
    \ n_orig = n;\n    int num_digits = 0;\n   \nunittest\n{\n    alias candidate\
    \ = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L) ==\
    \ 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) == 5L);\n\
    \    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L) == 2625L);\n\
    \    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmkf4u5xo.d(60): Error: declaration expected, not `assert`

    /tmp/tmpmkf4u5xo.d(61): Error: declaration expected, not `assert`

    /tmp/tmpmkf4u5xo.d(62): Error: declaration expected, not `assert`

    /tmp/tmpmkf4u5xo.d(88): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmkf4u5xo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    enum n2=length(to!string(n));\n\
    \    immutable long p=pow(10,n2-1);\n    int i=0;\n    long res=1;\n    for(;i<n2;++i)\n\
    \    {\n        immutable long d=n/p;\n        if(d%2!=0)\n        {\n       \
    \     res*=d;\n        }\n        n=n%p;\n        p/=10;\n    }\n    return res;\n\
    }\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n\
    \    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L)\
    \ == 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdj7gbvlp.d(17): Error: undefined identifier `length`

    /tmp/tmpdj7gbvlp.d(29): Error: cannot modify `immutable` expression `p`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdj7gbvlp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long product\
    \ = 1L;\n    long digit = 0L;\n    if (n == 0L) return 0L;\n    while (n != 0L)\
    \ {\n        digit = n % 10L;\n        if (digit % 2L != 0L) {\n            product\
    \ *= digit;\n        }\n        n /= 10L;\n    }\n    return product;\n}\nunittest\n\
    {\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L)\
    \ == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) ==\
    \ 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpy766rxn4.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ded]

    ??:? void tmpy766rxn4.__unittest_L29_C1() [0x427b59]

    ??:? void tmpy766rxn4.__modtest() [0x427b6c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb13]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9a6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb39]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fac5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a97d]

    ??:? runModuleUnitTests [0x42b8e9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42823c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long result\
    \ = 1L;\n    while (n != 0L)\n    {\n        long m = n % 10L;\n        if (m\
    \ % 2L != 0L)\n        {\n            result *= m;\n        }\n        n /= 10L;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = digits;\n\n\
    \    assert(candidate(5L) == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L)\
    \ == 1L);\n    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) ==\
    \ 315L);\n    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L)\
    \ == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpufyu_qqb.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ddd]

    ??:? void tmpufyu_qqb.__unittest_L29_C1() [0x427b49]

    ??:? void tmpufyu_qqb.__modtest() [0x427b5c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fab5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]

    ??:? runModuleUnitTests [0x42b8d9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    int count\
    \ = 0;\n    long sum = 1;\n    //int temp = n;\n    Tuple!(long, long, long, long,\
    \ long, long, long, long, long, long) t;\n    t = tupleOf(1L, 2L, 3L, 4L, 5L,\
    \ 6L, 7L, 8L, 9L, 0L);\n    // 2 - 3 - 2\n    int i = t.length;\n    while (n\
    \ > 0)\n    {\n        int digit = n % 10;\n        if (digit % 2 != 0)\n    \
    \    {\n            sum *= digit;\n        }\n        n /= 10;\n    }\n    return\
    \ sum;\n}\n//long digits(long n)\n//{\n//    int count = 0;\n//    long sum =\
    \ 1;\n//    //int temp = n;\n//    Tuple!(long, long, long, long, long, long,\
    \ long, long, long, long) t;\n//    t = tupleOf(1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L,\
    \ 9L, 0L);\n//    // 2 - 3 - 2\n//    int i = t.length;\n//    while (n > 0)\n\
    //    {\n//        int digit = n % 10;\n//        if (digit % 2 != 0)\n//    \
    \    {\n//            sum *= digit;\n//        }\n//        n /= 10;\n//    }\n\
    //    return sum;\n//}\n//long digits(long n)\n//{\n//    int count = 0;\n// \
    \   long sum = 1;\n//    //int temp = n;\n//    Tuple!(long, long, long, long,\
    \ long, long, long, long, long, long) t;\n//    t = tupleOf(1L, 2L, 3L, 4L, 5L,\
    \ 6L, 7L, 8L, 9L, 0L);\n//    // 2 - 3 - 2\n//    int i = t.length;\n//    while\
    \ (n > 0)\n//    {\n//        int digit = n % 10;\n//        if (digit % 2\nunittest\n\
    {\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L)\
    \ == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) ==\
    \ 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpuod0unf2.d(21): Error: undefined identifier `tupleOf`, did you
    mean template `tuple(Names...)`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuod0unf2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long result\
    \ = 1L;\n    int i = 0;\n    for (i=0; i<n; ++i)\n    {\n        if (i % 2 ==\
    \ 1) \n        {\n           result *= i;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n\
    \    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L)\
    \ == 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp7yz1yh2y.d(32): unittest failure

    ----------------

    ??:? _d_unittestp [0x427dc5]

    ??:? void tmp7yz1yh2y.__unittest_L28_C1() [0x427a68]

    ??:? void tmp7yz1yh2y.__modtest() [0x427b44]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baeb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a97e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb11]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffc0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa9d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a955]

    ??:? runModuleUnitTests [0x42b8c1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428214]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long result\
    \ = 1L;\n    while (n > 0) {\n        long digit = n % 10;\n        if (digit\
    \ % 2 == 1) {\n            result *= digit;\n        }\n        n /= 10;\n   \
    \ }\n    return result;\n}\n/*\nGiven a string s and a positive integer n, return\
    \ a string in which each character has been repeated n times.\n    For example:\n\
    \    >>> rep(\"hello\", 3)\n    \"hhheeellllllooo\"\n*/\nstring rep(string s,\
    \ long n) \n{\n    string result = \"\";\n    foreach (char c; s) {\n        result\
    \ ~= c;\n        for (long i = 1; i < n; i++) {\n            result ~= c;\n  \
    \      }\n    }\n    return result;\n}\n/*\nReturn the first n Fibonacci numbers,\
    \ each repeated k times.\n    For example:\n    >>> fib_rep(5, 4)\n    [1, 1,\
    \ 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 5, 5, 5, 5]\n*/\nunittest\n{\n    alias candidate\
    \ = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L) ==\
    \ 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) == 5L);\n\
    \    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L) == 2625L);\n\
    \    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpravztwhj.d(60): unittest failure

    ----------------

    ??:? _d_unittestp [0x427f0d]

    ??:? void tmpravztwhj.__unittest_L50_C1() [0x427c79]

    ??:? void tmpravztwhj.__modtest() [0x427c8c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c61f]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b4b2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42ff05]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4303b4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fe91]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b489]

    ??:? runModuleUnitTests [0x42c3f5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42835c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long product\
    \ = 1L;\n    while (n != 0L)\n    {\n        long digit = n % 10L;\n        if\
    \ (digit % 2L != 0L)\n        {\n            product *= digit;\n        }\n  \
    \      n /= 10L;\n    }\n    return product;\n}\nunittest\n{\n    alias candidate\
    \ = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L) ==\
    \ 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) == 5L);\n\
    \    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L) == 2625L);\n\
    \    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpdnlp026o.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ddd]

    ??:? void tmpdnlp026o.__unittest_L29_C1() [0x427b49]

    ??:? void tmpdnlp026o.__modtest() [0x427b5c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fab5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]

    ??:? runModuleUnitTests [0x42b8d9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long product\
    \ = 1L;\n    while (n>0)\n    {\n        if ((n%10)%2!=0)\n        {\n       \
    \     product *= (n%10);\n        }\n        n /= 10;\n    }\n    return product;\n\
    }\n/*\nCreate a struct Counter with two methods, init and value.\n    The first\
    \ method should return a new Counter object (initialized to 0), and the second\
    \ should return the value of the counter.\n    For example:\n    >>> c = Counter.init();\n\
    \    >>> c.value()\n    0L\n    >>> c.inc();\n    >>> c.value()\n    1L\n    >>>\
    \ c.inc(2);\n    >>> c.value()\n    3L\n    >>> c.dec();\n    >>> c.value()\n\
    \    2L\n*/\nstruct Counter\n{\n    private:\n        long counter;\n    public:\n\
    \        Counter()\n        {\n            counter = 0L;\n        }\n        long\
    \ value()\n        {\n            return counter;\n        }\n        void inc()\n\
    \        {\n            counter++;\n        }\n        void inc(long x)\n    \
    \    {\n            counter += x;\n        }\n        void dec()\n        {\n\
    \            counter--;\n        }\n        void dec(long x)\n        {\n    \
    \        counter -= x;\n        }\n};\n/*\nGiven two arrays of strings, return\
    \ a new array of unique values that is the combination of both arrays.\n    For\
    \ example:\n    >>> unique([\"a\", \"b\", \"c\"], [\"a\", \"b\", \"d\"])\n   \
    \ [\"a\", \"b\", \"c\", \"d\"]\n    >>> unique([\"a\", \"b\", \"c\"], [\"a\",\
    \ \"b\", \"c\"])\n    [\"a\", \"b\", \"c\"]\n    >>> unique([\"a\", \"b\", \"\
    c\"], [\"a\", \"b\", \"c\", \"a\"])\n    [\"a\", \"b\", \"c\"]\n*/\nstring[] unique(string[]\
    \ a, string[] b)\n{\n    string[] c = new string[a.length+b.length];\n    for\
    \ (long i=0; i<a.length; i++)\n    {\n\nunittest\n{\n    alias candidate = digits;\n\
    \n    assert(candidate(5L) == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L)\
    \ == 1L);\n    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) ==\
    \ 315L);\n    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L)\
    \ == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3fmf5qm6.d(50): Error: function declaration without return type.
    (Note that constructors are always named `this`)

    /tmp/tmp3fmf5qm6.d(51): Error: no identifier for declarator `Counter()`

    /tmp/tmp3fmf5qm6.d(91): Error: found `unittest` instead of statement

    /tmp/tmp3fmf5qm6.d(103): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3fmf5qm6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    Tuple!(int,\
    \ long) digits = n.toString.split(\"\").map!((int s) => s.to!int).filter!((int\
    \ i) => i.isOdd).tupleof;\n    return digits.length > 0 ? digits.reduce!(\"a *\
    \ b\") : 0L;\n}\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L)\
    \ == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n\
    \    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) == 315L);\n\
    \    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L) == 0L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp071a3mkr.d(17): Error: no property `toString` for type `long`

    /tmp/tmp071a3mkr.d(18): Error: no property `reduce` for type `Tuple!(int, long)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp071a3mkr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long result\
    \ = 1L;\n    while (n > 0) {\n        auto digit = n % 10;\n        if (digit\
    \ % 2 != 0) result *= digit;\n        n /= 10;\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n\
    \    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L)\
    \ == 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpisx8xjn_.d(35): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ddd]

    ??:? void tmpisx8xjn_.__unittest_L25_C1() [0x427b49]

    ??:? void tmpisx8xjn_.__modtest() [0x427b5c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fab5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]

    ??:? runModuleUnitTests [0x42b8d9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long ret\
    \ = 1;\n    while (n > 0) {\n        ret *= n%2 == 1 ? n%10 : 1;\n        n /=\
    \ 10;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate = digits;\n\
    \n    assert(candidate(5L) == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L)\
    \ == 1L);\n    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) ==\
    \ 315L);\n    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L)\
    \ == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp05lren0i.d(34): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ded]

    ??:? void tmp05lren0i.__unittest_L24_C1() [0x427b59]

    ??:? void tmp05lren0i.__modtest() [0x427b6c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb13]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9a6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb39]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fac5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a97d]

    ??:? runModuleUnitTests [0x42b8e9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42823c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n\tint val = 0;\n\
    \tauto inp = to!string(n);\n\tforeach(i;0..inp.length)\n\t{\n\t\tif(inp[i] ==\
    \ '1'||inp[i] == '3'||inp[i] == '5'||inp[i] == '7'||inp[i] == '9')\n\t\t{\n\t\t\
    \tval *= inp[i]-'0';\n\t\t}\n\t}\n\treturn val;\n}\nunittest\n{\n    alias candidate\
    \ = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L) ==\
    \ 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) == 5L);\n\
    \    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L) == 2625L);\n\
    \    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvkbv9km4.d(18): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvkbv9km4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long result\
    \ = 1L;\n    foreach(i; n.digits())\n    {\n        if (i % 2 != 0)\n        {\n\
    \            result *= i;\n        }\n    }\n    return result;\n}\n \n \n \n\
    /*\nWrite a function to determine if a string is a palindrome.\n    For example:\n\
    \    >>> isPalindrome(\"\")\n    true\n    >>> isPalindrome(\"a\")\n    true\n\
    \    >>> isPalindrome(\"bob\")\n    true\n    >>> isPalindrome(\"radar\")\n  \
    \  true\n    >>> isPalindrome(\"jeff\")\n    false\n    >>> isPalindrome(\"summer\"\
    )\n    false\n*/\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L)\
    \ == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n\
    \    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) == 315L);\n\
    \    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L) == 0L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4is00l1j.d(18): Error: invalid `foreach` aggregate `digits(n)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4is00l1j.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n\tlong odd_product\
    \ = 1L;\n\tif (n > 0L)\n\t{\n\t\todd_product = digits_helper(n, odd_product);\n\
    \t}\n\treturn odd_product;\n}\nunittest\n{\n    alias candidate = digits;\n\n\
    \    assert(candidate(5L) == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L)\
    \ == 1L);\n    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) ==\
    \ 315L);\n    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L)\
    \ == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpc174atrn.d(20): Error: undefined identifier `digits_helper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc174atrn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long cnt\
    \ = 0;\n    long res = 1;\n    if (n == 0) return 0;\n    while (n != 0) {\n \
    \       auto d = n % 10;\n        if (d % 2 != 0) {\n            res *= d;\n \
    \           cnt += 1;\n        }\n        n /= 10;\n    }\n    if (cnt == 0) return\
    \ 0;\n    return res;\n}\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L)\
    \ == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n\
    \    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) == 315L);\n\
    \    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L) == 0L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    // Type alias\
    \ with type constructors\n    alias Tuple!(int, long) Pair;\nunittest\n{\n   \
    \ alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L)\
    \ == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) ==\
    \ 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsepisi28.d(19): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsepisi28.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    bool isNegative\
    \ = false;\n    if (n < 0)\n    {\n        isNegative = true;\n        n = abs(n);\n\
    \    }\n    auto numbers = tuple(to!string(n));\n    long res = 1;\n    foreach(char\
    \ i; numbers)\n    {\n        if ((i - '0') % 2 == 1)\n        {\n           \
    \ res *= (i - '0');\n        }\n    }\n    if (isNegative)\n    {\n        res\
    \ = -res;\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = digits;\n\
    \n    assert(candidate(5L) == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L)\
    \ == 1L);\n    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) ==\
    \ 315L);\n    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L)\
    \ == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpf5kb1mwx.d(23): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf5kb1mwx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    if (n ==\
    \ 0)\n    {\n        return 0;\n    }\n    else\n    {\n        if (n % 2 == 0)\n\
    \        {\n            return digits(n / 10);\n        }\n        else\n    \
    \    {\n            return (n % 10) * digits(n / 10);\n        }\n    }\n}\nunittest\n\
    {\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L)\
    \ == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) ==\
    \ 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpigsef3iw.d(37): unittest failure

    ----------------

    ??:? _d_unittestp [0x427dfd]

    ??:? void tmpigsef3iw.__unittest_L33_C1() [0x427aa0]

    ??:? void tmpigsef3iw.__modtest() [0x427b7c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb23]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9b6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb49]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42fff8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fad5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a98d]

    ??:? runModuleUnitTests [0x42b8f9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42824c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long product\
    \ = 1L;\n    foreach(e; n.to!string) \n    {\n        auto k = to!long(e);\n \
    \       if (k % 2 == 1) \n        {\n            product *= k;\n        }\n  \
    \  }\n    return product;\n}\nunittest\n{\n    alias candidate = digits;\n\n \
    \   assert(candidate(5L) == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L)\
    \ == 1L);\n    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) ==\
    \ 315L);\n    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L)\
    \ == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5osdb162.d(18): Error: no property `to` for type `long`

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long number\
    \ = n;\n    long result = 1;\n    int oddcount = 0;\n   \n    while (number !=\
    \ 0)\n    {\n        if (number % 2 != 0)\n        {\n            result *= number\
    \ % 10;\n            oddcount += 1;\n        }\n        number /= 10;\n    }\n\
    \    if (oddcount == 0)\n    {\n        return 0;\n    }\n    else\n    {\n  \
    \      return result;\n    }\n}\nunittest\n{\n    alias candidate = digits;\n\n\
    \    assert(candidate(5L) == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L)\
    \ == 1L);\n    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) ==\
    \ 315L);\n    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L)\
    \ == 0L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    \n    long\
    \ res = 1;\n    return 0;\n}\nsize_t recursiveFactorial(size_t n) \n{\n    if\
    \ (n == 0)\n        return 1;\n    else\n        return n * recursiveFactorial(n\
    \ - 1);\n}\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L)\
    \ == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n\
    \    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) == 315L);\n\
    \    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L) == 0L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpsn4aiko6.d(32): unittest failure

    ----------------

    ??:? _d_unittestp [0x427df5]

    ??:? void tmpsn4aiko6.__unittest_L28_C1() [0x427a9c]

    ??:? void tmpsn4aiko6.__modtest() [0x427b78]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb1b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9ae]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb41]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42fff0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42facd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a985]

    ??:? runModuleUnitTests [0x42b8f1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428244]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long result\
    \ = 1L;\n    long temp;\n    foreach(immutable d; n.to!string())\n    {\n    \
    \    if(d.to!int() % 2 != 0)\n        {\n            temp = d.to!int();\n    \
    \        result *= temp;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L)\
    \ == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) ==\
    \ 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpms1_ud0_.d(19): Error: no property `to` for type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpms1_ud0_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long s =\
    \ 0;\n    long p = 1;\n    while (n > 0)\n    {\n        s = n % 10;\n       \
    \ if (s % 2 != 0)\n        {\n            p *= s;\n        }\n        n /= 10;\n\
    \    }\n    return p;\n}\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L)\
    \ == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n\
    \    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) == 315L);\n\
    \    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L) == 0L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpzkvuk3nw.d(40): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmpzkvuk3nw.__unittest_L30_C1() [0x427b51]

    ??:? void tmpzkvuk3nw.__modtest() [0x427b64]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long product\
    \ = 1L;\n    //!\n    //!\n    //!\n    //!\n    return product;\n}\nunittest\n\
    {\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L)\
    \ == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) ==\
    \ 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpkb72s5dl.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d7d]

    ??:? void tmpkb72s5dl.__unittest_L24_C1() [0x427a24]

    ??:? void tmpkb72s5dl.__modtest() [0x427b00]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baa3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a936]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fac9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff78]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa55]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]

    ??:? runModuleUnitTests [0x42b879]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281cc]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164305
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long mult\
    \ = 1;\n    bool zero = true;\n    while (n > 0) {\n        auto digit = n % 10;\n\
    \        if (digit & 1) {\n            mult *= digit;\n            zero = false;\n\
    \        }\n        n /= 10;\n    }\n    return (zero) ? 0 : mult;\n}\nunittest\n\
    {\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L)\
    \ == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) ==\
    \ 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long prod\
    \ = 1L;\n    while (n > 0) {\n        auto d = n % 10;\n        if (d % 2) {\n\
    \            prod *= d;\n        }\n        n /= 10;\n    }\n    return prod;\n\
    }\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n\
    \    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L)\
    \ == 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpz2a0cps5.d(37): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ddd]

    ??:? void tmpz2a0cps5.__unittest_L27_C1() [0x427b49]

    ??:? void tmpz2a0cps5.__modtest() [0x427b5c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fab5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]

    ??:? runModuleUnitTests [0x42b8d9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164305
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long result\
    \ = 1L;\n    long num = n;\n    bool all_digits_are_even = true;\n    while (num\
    \ != 0L) {\n        long digit = num % 10L;\n        if (digit % 2L != 0L) {\n\
    \            result *= digit;\n            all_digits_are_even = false;\n    \
    \    }\n        num /= 10L;\n    }\n    if (all_digits_are_even) {\n        return\
    \ 0L;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = digits;\n\
    \n    assert(candidate(5L) == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L)\
    \ == 1L);\n    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) ==\
    \ 315L);\n    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L)\
    \ == 0L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long odd_digits\
    \ = 1L;\n    while (n != 0L)\n    {\n        long digit = n % 10L;\n        if\
    \ (digit % 2 != 0L)\n        {\n            odd_digits *= digit;\n        }\n\
    \        n /= 10L;\n    }\n    return odd_digits;\n}\n/*\nreturn the product of\
    \ the even digits\n*/\nlong digits_even(long n) \n{\n    long even_digits = 1L;\n\
    \    while (n != 0L)\n    {\n        long digit = n % 10L;\n        if (digit\
    \ % 2 == 0L)\n        {\n            even_digits *= digit;\n        }\n      \
    \  n /= 10L;\n    }\n    return even_digits;\n}\n/*\n   if n is a prime number\
    \ return true,\n   else return false\n*/\nunittest\n{\n    alias candidate = digits;\n\
    \n    assert(candidate(5L) == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L)\
    \ == 1L);\n    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) ==\
    \ 315L);\n    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L)\
    \ == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpnaotnr56.d(60): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e85]

    ??:? void tmpnaotnr56.__unittest_L50_C1() [0x427bf1]

    ??:? void tmpnaotnr56.__modtest() [0x427c04]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bbab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa3e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fbd1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430080]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa15]

    ??:? runModuleUnitTests [0x42b981]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4282d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long result\
    \ = 1L;\n    while (n != 0L) \n    {\n        long digit = n % 10L;\n        if\
    \ (digit % 2L != 0L) \n        {\n            result *= digit;\n        }\n  \
    \      n /= 10L;\n    }\n    return result;\n}\n/*\nFunction has a parameter of\
    \ type 'Tuple!(T0, T1)'\nand it returns a Tuple!(T0, T1).\n*/\nTuple!(T0, T1)\
    \ reverse(Tuple!(T0, T1) t) \n{\n    T0 tmp = t[0];\n    t[0] = t[1];\n    t[1]\
    \ = tmp;\n    return t;\n}\n/*\nFunction has a parameter of type Tuple!(Tuple!(T,\
    \ U), Tuple!(V, W))\nand it returns a Tuple!(Tuple!(T, U), Tuple!(V, W)).\n*/\n\
    Tuple!(Tuple!(T, U), Tuple!(V, W)) reverse(Tuple!(Tuple!(T, U), Tuple!(V, W))\
    \ t) \n{\n    return Tuple!(Tuple!(T, U), Tuple!(V, W))(t[1], t[0]);\n}\n/*\n\
    Function has a parameter of type 'Tuple!(T0, T1, T2)'\nand it returns a Tuple!(T0,\
    \ T1, T2).\n*/\nTuple!(T0, T1, T2) reverse(Tuple!(T0, T1, T2) t) \n{\n    return\
    \ Tuple!(T0, T1, T2)(t[2], t[1], t[0]);\n}\n/*\nFunction has a parameter of type\
    \ 'Tuple!(T0, T1, T2, T3)'\nand it returns a Tuple!(T0, T1, T2, T3).\n*/\nTuple!(T0,\
    \ T1, T2, T3) reverse(Tuple!(T0, T1, T2, T3) t) \n\nunittest\n{\n    alias candidate\
    \ = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L) ==\
    \ 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) == 5L);\n\
    \    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L) == 2625L);\n\
    \    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgr37qqpw.d(62): Error: semicolon expected following function declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgr37qqpw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long result\
    \ = 1L;\n    while (n != 0L)\n    {\n        auto digit = n % 10L;\n        if\
    \ (digit % 2 != 0L)\n        {\n            result *= digit;\n        }\n    \
    \    n /= 10L;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L) ==\
    \ 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) == 5L);\n\
    \    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L) == 2625L);\n\
    \    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmptwawwg_k.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ddd]

    ??:? void tmptwawwg_k.__unittest_L29_C1() [0x427b49]

    ??:? void tmptwawwg_k.__modtest() [0x427b5c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fab5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]

    ??:? runModuleUnitTests [0x42b8d9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long[] numbers\
    \ = to!long(split(format(\"%s\", n), \"\"));\n    long accumulator = 1;\n    foreach(d;\
    \ numbers)\n    {\n        if (d % 2 != 0)\n        {\n            accumulator\
    \ *= d;\n        }\n    }\n    return accumulator;\n}\nunittest\n{\n    alias\
    \ candidate = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L)\
    \ == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) ==\
    \ 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphf7j1jpt.d(17): Error: template instance `to!long` template `to`
    is not defined, did you mean No?

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    return reduce!((a,\
    \ b) => a * b)(\"f (x) => (x % 2 == 1 ? x : 1)\")(n);\n}\nunittest\n{\n    alias\
    \ candidate = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L)\
    \ == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) ==\
    \ 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpouo0s8cw.d(17): Error: template instance `reduce!((a, b) => a *
    b)` template `reduce` is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpouo0s8cw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n\treturn n;\n\
    }\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n\
    \    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L)\
    \ == 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp4qdm9btc.d(24): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d7d]

    ??:? void tmp4qdm9btc.__unittest_L19_C1() [0x427a45]

    ??:? void tmp4qdm9btc.__modtest() [0x427b00]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baa3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a936]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fac9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff78]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa55]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]

    ??:? runModuleUnitTests [0x42b879]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281cc]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long result\
    \ = 1L;\n    foreach(immutable digit; n.toString().split(\"\"))\n    {\n     \
    \   int iDigit = parseInt(digit, 10);\n        if(iDigit % 2 == 1)\n        {\n\
    \            result *= iDigit;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L)\
    \ == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) ==\
    \ 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmph2o062z7.d(18): Error: no property `toString` for type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph2o062z7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    int product\
    \ = 1;\n    bool all_even = true;\n    bool is_odd;\n    foreach(digit; to!string(n))\
    \ \n    {\n        is_odd = (digit == '1' || digit == '3' || digit == '5' || digit\
    \ == '7' || digit == '9');\n        if(is_odd) \n        {\n            product\
    \ *= to!int(digit);\n            all_even = false;\n        }\n    }\n    return\
    \ all_even ? 0 : product;\n}\nunittest\n{\n    alias candidate = digits;\n\n \
    \   assert(candidate(5L) == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L)\
    \ == 1L);\n    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) ==\
    \ 315L);\n    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L)\
    \ == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsb9lky6_.d(20): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsb9lky6_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long final\
    \ = 1;\n    if (n == 0)\n        return 0;\n    long rem = n % 10;\n    if (rem\
    \ % 2 == 1)\n        final *= rem;\n    return final * digits(n / 10);\n}\nunittest\n\
    {\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L)\
    \ == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) ==\
    \ 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbgui3jd0.d(17): Error: no identifier for declarator `long`

    /tmp/tmpbgui3jd0.d(17): Error: basic type expected, not `=`

    /tmp/tmpbgui3jd0.d(17): Error: no identifier for declarator `_error_`

    /tmp/tmpbgui3jd0.d(17): Error: found `=` instead of statement

    /tmp/tmpbgui3jd0.d(22): Error: basic type expected, not `*=`

    /tmp/tmpbgui3jd0.d(22): Error: no identifier for declarator `_error_`

    /tmp/tmpbgui3jd0.d(22): Error: found `*=` instead of statement

    /tmp/tmpbgui3jd0.d(23): Error: expression expected, not `final`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbgui3jd0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long res\
    \ = 1;\n    while (n > 0) {\n        long d = n % 10;\n        if (d % 2 == 1)\
    \ res *= d;\n        n /= 10;\n    }\n    return res;\n}\n/*\nYou are given a\
    \ list of integer numbers.\n    Return a string that is the result of concatenating\
    \ the binary representations of the numbers.\n    For example:\n    >>> binary('123')\n\
    \    '1111011'\n    >>> binary('0')\n    '0'\n    >>> binary('5')\n    '101'\n\
    \    >>> binary('-0')\n    '-0'\n    >>> binary('-123')\n    '-1111011'\n*/\n\
    string binary(string numbers) \n{\n    int n = numbers.length;\n    string res\
    \ = \"\";\n    int i = 0;\n    while (i < n && numbers[i] == '-')\n    {\n   \
    \     res += '-';\n        i++;\n    }\n    for (int i = n - 1; i >= 0; i--) {\n\
    \        if (isdigit(numbers[i])) {\n            int d = numbers[i] - '0';\n \
    \           int len = 0;\n            while (d > 0) {\n                d /= 2;\n\
    \                len++;\n            }\n            d = numbers[i] - '0';\n  \
    \          for (int j = 0; j < len; j++) {\n                res += d % 2 + '0';\n\
    \                d /= 2;\n            }\n        }\n    }\n    if (res == \"\"\
    ) res = \"0\";\n    return res;\n}\n/*\nGiven a list of integers, return True\
    \ if the first integer is evenly divisible by all the others.\n    For example:\n\
    \    >>> is_divisible([8, 2, 4])\n    True\n    >>> is_divisible([8, 2, 3])\n\
    \    False\n    >>> is_divisible([12, 4, 3])\n    True\n    >>> is_divisible([1,\
    \ 1, 1])\n    True\n    >>> is_divisible([0, 1, 1])\n    False\n    >>> is_divisible([1,\
    \ 0, 1])\n   \nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L)\
    \ == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n\
    \    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) == 315L);\n\
    \    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L) == 0L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_lqbtmco.d(68): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_lqbtmco.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long prod\
    \ = 1L;\n    for (; n > 0; n /= 10) \n    {\n        long d = n % 10;\n      \
    \  if (d % 2 == 1) \n        {\n            prod *= d;\n        }\n    }\n   \
    \ return prod;\n}\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L)\
    \ == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n\
    \    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) == 315L);\n\
    \    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L) == 0L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpyteo489z.d(38): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ddd]

    ??:? void tmpyteo489z.__unittest_L28_C1() [0x427b49]

    ??:? void tmpyteo489z.__modtest() [0x427b5c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fab5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]

    ??:? runModuleUnitTests [0x42b8d9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    \n    if\
    \ (n==0L)\n        return 0L;\n    if (n % 10L % 2L != 0L)\n        return n %\
    \ 10L * digits(n / 10L);\n    else \n        return digits(n / 10L);\n}\nunittest\n\
    {\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L)\
    \ == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) ==\
    \ 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpshodz5co.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ded]

    ??:? void tmpshodz5co.__unittest_L25_C1() [0x427a94]

    ??:? void tmpshodz5co.__modtest() [0x427b70]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb13]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9a6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb39]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fac5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a97d]

    ??:? runModuleUnitTests [0x42b8e9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42823c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long result\
    \ = 1L;\n    while (n > 0) {\n        auto digit = n % 10;\n        if (digit\
    \ % 2 == 1) {\n            result *= digit;\n        }\n        n /= 10;\n   \
    \ }\n    return result;\n}\nunittest\n{\n    alias candidate = digits;\n\n   \
    \ assert(candidate(5L) == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L)\
    \ == 1L);\n    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) ==\
    \ 315L);\n    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L)\
    \ == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9mo6kmx0.d(37): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ddd]

    ??:? void tmp9mo6kmx0.__unittest_L27_C1() [0x427b49]

    ??:? void tmp9mo6kmx0.__modtest() [0x427b5c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fab5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]

    ??:? runModuleUnitTests [0x42b8d9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    import std.math;\n\
    \    import std.typecons;\n    long result = 1L;\n    foreach(idx,d; digits(n))\n\
    \    {\n        if(d.isOdd)\n        {\n            result *= d;\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = digits;\n\n\
    \    assert(candidate(5L) == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L)\
    \ == 1L);\n    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) ==\
    \ 315L);\n    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L)\
    \ == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgfh8zsma.d(20): Error: invalid `foreach` aggregate `digits(n)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgfh8zsma.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n\tlong odd =\
    \ 1;\n\tif (n == 0)\n\t\treturn 0;\n\tif (n % 2 == 0)\n\t\treturn 0;\n\t\n\telse\n\
    \t{\n\t\todd = n % 10;\n\t\twhile (n > 0)\n\t\t{\n\t\t\tn = n / 10;\n\t\t\tif\
    \ (n % 2 == 0)\n\t\t\t\tcontinue;\n\t\t\todd = odd * (n % 10);\n\t\t}\n\t}\n\t\
    return odd;\n}\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L)\
    \ == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n\
    \    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) == 315L);\n\
    \    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L) == 0L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpufsia3k0.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e15]

    ??:? void tmpufsia3k0.__unittest_L36_C1() [0x427add]

    ??:? void tmpufsia3k0.__modtest() [0x427b98]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb3b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9ce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb61]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430010]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42faed]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9a5]

    ??:? runModuleUnitTests [0x42b911]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428264]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    return 0;\n\
    }\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n\
    \    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L)\
    \ == 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpeypq4vnm.d(23): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d7d]

    ??:? void tmpeypq4vnm.__unittest_L19_C1() [0x427a20]

    ??:? void tmpeypq4vnm.__modtest() [0x427afc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baa3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a936]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fac9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff78]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa55]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]

    ??:? runModuleUnitTests [0x42b879]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281cc]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    if (n ==\
    \ 0) return 0;\n    long res = 1;\n    while (n)\n    {\n        long r = n %\
    \ 10;\n        if (r % 2 != 0) res *= r;\n        n /= 10;\n    }\n    return\
    \ res;\n}\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L)\
    \ == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n\
    \    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) == 315L);\n\
    \    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L) == 0L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpt1dhuusl.d(37): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmpt1dhuusl.__unittest_L27_C1() [0x427b51]

    ??:? void tmpt1dhuusl.__modtest() [0x427b64]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164306
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n\tlong odd_prod\
    \ = 1L;\n\tforeach(d; 0 .. n.stringof.length)\n\t{\n\t\timmutable dg = n.stringof[d];\n\
    \t\tif(dg % 2 == 1)\n\t\t{\n\t\t\todd_prod *= to!long(dg);\n\t\t}\n\t}\n\treturn\
    \ odd_prod;\n}\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L)\
    \ == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n\
    \    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) == 315L);\n\
    \    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L) == 0L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk7mtdk6n.d(23): Error: template instance `to!long` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk7mtdk6n.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long result\
    \ = 1L;\n    while (n > 0)\n    {\n        if ((n % 10) % 2 == 1)\n        {\n\
    \            result *= n % 10;\n        }\n        n /= 10;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L)\
    \ == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n\
    \    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) == 315L);\n\
    \    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L) == 0L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpy0x8ahpd.d(38): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ddd]

    ??:? void tmpy0x8ahpd.__unittest_L28_C1() [0x427b49]

    ??:? void tmpy0x8ahpd.__modtest() [0x427b5c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fab5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]

    ??:? runModuleUnitTests [0x42b8d9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164306
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n\tlong _odd =\
    \ 0;\n\tlong _even = 0;\n\tforeach(a; n.to!string)\n\t{\n\t\tif(a.to!long % 2\
    \ != 0)\n\t\t{\n\t\t\t_odd = _odd * a.to!long;\n\t\t}\n\t\telse if(a.to!long %\
    \ 2 == 0)\n\t\t{\n\t\t\t_even = _even * a.to!long;\n\t\t}\n\t}\n\tif(_even !=\
    \ 0)\n\t{\n\t\treturn 0;\n\t}\n\telse\n\t{\n\t\treturn _odd;\n\t}\n}\n/*\nString\
    \ transpositions are a type of anagram where the letters of a word are \n    simply\
    \ reordered to form a new word.\n    The word \"abcd\" can be rearranged into\
    \ \"cdab\", \"dcba\", \"bdac\", and 4 other \n    words.\n    Given a string n\
    \ and an integer k, return a string with k transpositions \n    of n.\n    If\
    \ n has less than k unique letters, return \"\".\n    For example:\n    >>> transpose(\"\
    abcd\", 1)\n    \"cdab\"\n    >>> transpose(\"abcd\", 2)\n    \"dcba\"\n    >>>\
    \ transpose(\"abcd\", 3)\n    \"bdac\"\n    >>> transpose(\"abcd\", 4)\n    \"\
    badc\"\n    >>> transpose(\"abcd\", 5)\n    \"cbad\"\n    >>> transpose(\"abcd\"\
    , 6)\n    \"acbd\"\n    >>> transpose(\"abcd\", 7)\n    \"abdc\"\n    >>> transpose(\"\
    abcd\", 8)\n    \"dabc\"\n    >>> transpose(\"abcd\", 9)\n    \"\"\n    >>> transpose(\"\
    abcd\", 10)\n    \"\"\n    >>> transpose(\"dog\", 1)\n    \"ogd\"\n    >>> transpose(\"\
    dog\", 2)\n    \"god\"\n    >>> transpose(\"dog\", 3)\n    \"\"\n*/\nstring transpose(string\
    \ n, int k) \n{\n\tint _count = 0;\n\tstring _str = \"\";\n\tstring _str2 = \"\
    \";\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L) ==\
    \ 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n\
    \    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) == 315L);\n\
    \    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L) == 0L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7eaiw2hj.d(80): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7eaiw2hj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    auto new_n\
    \ = n;\n    long result = 1;\n    while (new_n > 0)\n    {\n        if (new_n\
    \ % 2 != 0)\n        {\n            result *= new_n % 10;\n        }\n       \
    \ new_n /= 10;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L) ==\
    \ 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) == 5L);\n\
    \    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L) == 2625L);\n\
    \    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp4mk7l_fc.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x427dd5]

    ??:? void tmp4mk7l_fc.__unittest_L29_C1() [0x427b45]

    ??:? void tmp4mk7l_fc.__modtest() [0x427b58]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42faad]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a965]

    ??:? runModuleUnitTests [0x42b8d1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164306
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n\tconst(char)[]\
    \ str = to!string(n);\n\tint nlen = str.length;\n\tint res = 1;\n\tforeach(i;\
    \ 0..nlen)\n\t{\n\t\tif((str[i] - '0') % 2 == 1)\n\t\t{\n\t\t\tres *= (str[i]\
    \ - '0');\n\t\t}\n\t}\n\treturn cast(long)res;\n}\nunittest\n{\n    alias candidate\
    \ = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L) ==\
    \ 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) == 5L);\n\
    \    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L) == 2625L);\n\
    \    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5tzfw3so.d(17): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmp5tzfw3so.d(18): Error: cannot implicitly convert expression `str.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5tzfw3so.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n\timport std.algorithm.iteration\
    \ : filter, map;\n\timport std.math : isOdd;\n\timport std.range : chain;\n\t\
    import std.string : to;\n\tlong[] r = (chain(n.to!string).filter!(ch => ch.isOdd).map!(ch\
    \ => ch.to!long)).array;\n\treturn (r.length == 0) ? 0 : r.product;\n}\nunittest\n\
    {\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L)\
    \ == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) ==\
    \ 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsq2ql3qc.d(18): Error: module `std.math` import `isOdd` not found

    /tmp/tmpsq2ql3qc.d(20): Error: module `std.string` import `to` not found, did
    you mean alias `std.string.No`?

    /tmp/tmpsq2ql3qc.d(22): Error: no property `product` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsq2ql3qc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164306
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long prod\
    \ = 1L;\n    long digit;\n    foreach(digit; std.digits(n))\n    {\n        if(digit%2\
    \ != 0)\n        {\n            prod *= digit;\n        }\n    }\n    return prod;\n\
    }\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n\
    \    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L)\
    \ == 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpupmi8_g4.d(19): Error: undefined identifier `digits` in package
    `std`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpupmi8_g4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long result\
    \ = 1L;\n    if (n < 0L)\n        n = -n;\n    if (n == 0L)\n        return 0L;\n\
    \    for (; n > 0L; n /= 10L) \n    {\n        long digit = n % 10L;\n       \
    \ if (digit % 2L != 0L)\n            result *= digit;\n    }\n    return result;\n\
    }\n//\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L)\
    \ == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n\
    \    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) == 315L);\n\
    \    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L) == 0L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8ws5lhxf.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ded]

    ??:? void tmp8ws5lhxf.__unittest_L31_C1() [0x427b5d]

    ??:? void tmp8ws5lhxf.__modtest() [0x427b70]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb13]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9a6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb39]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fac5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a97d]

    ??:? runModuleUnitTests [0x42b8e9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42823c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164306
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n\tversion(X86_64)\n\
    \t{\n\t\t/*\n\t\t\tArithmetic instructions on x86_64:\n\t\t\t\tadd, sub, imul\n\
    \t\t\t\tneg, mul\n\t\t\t\tidiv (signed)\n\t\t\t\tdiv (unsigned)\n\t\t\tLogical\
    \ instructions on x86_64:\n\t\t\t\tand, or, xor, not\n\t\t\t\tsal/shl/shld, sar/shr/shrd,\
    \ rol/ror\n\t\t\t\ttest\n\t\t\t\tsetcc (set on condition, e.g. sete = set on equal)\n\
    \t\t\tConversion instructions on x86_64:\n\t\t\t\tcbw, cwd, cdq, cqo\n\t\t\t\t\
    movsx, movzx\n\t\t\tComparison instructions on x86_64:\n\t\t\t\tcmp\n\t\t\tSpecial\
    \ instructions on x86_64:\n\t\t\t\tlea (load effective address)\n\t\t\t\tpop,\
    \ push\n\t\t\t\tin, out\n\t\t\t\tcall, ret, syscall\n\t\t\t\txchg\n\t\t\t\tcmpxchg,\
    \ xadd\n\t\t\t\tmov\n\t\t\t\tnop\n\t\t\t\trdtsc\n\t\t\t\tcpuid\n\t\t\t\tint, iret\n\
    \t\t\t\tjcc (conditional jump)\n\t\t\t\tloop, jecxz\n\t\t\t\tenter, leave\n\t\t\
    \t\tret\n\t\t\tPrefixes on x86_64:\n\t\t\t\trep\n\t\t\t\tlock\n\t\t\t\tdata segment\
    \ override\n\t\t\t\toperand size override\n\t\t\t\taddress size override\n\t\t\
    \t\tbranch hint\n\t\t\t\tREX prefix\n\t\t\tRegister aliases on x86_64:\n\t\t\t\
    \trax, rbx, rcx, rdx, rsi, rdi, rbp, rsp, r8, r9, r10, r11, r12, r13, r14, r15\n\
    \t\t\t\tal, bl, cl, dl, ah, bh, ch, dh\n\t\t\t\nunittest\n{\n    alias candidate\
    \ = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L) ==\
    \ 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) == 5L);\n\
    \    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L) == 2625L);\n\
    \    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp63bzi5i8.d(19): Error: unterminated /* */ comment

    /tmp/tmp63bzi5i8.d(75): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmp63bzi5i8.d(75): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp63bzi5i8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long res\
    \ = 1;\n    size_t digits = 0;\n    long tens = 1;\n    long digit;\n    long\
    \ odd = 0;\n    long num = n;\n    //get number of digits\n    while(num != 0)\n\
    \    {\n        num /= 10;\n        digits++;\n    }\n    if(digits == 0)\n  \
    \      return 0;\n    //parse and multiply digits\n    while(n != 0)\n    {\n\
    \        digit = n / tens;\n        digit %= 10;\n        if(digit % 2 != 0)\n\
    \        {\n            res *= digit;\n            odd++;\n        }\n       \
    \ tens *= 10;\n    }\n    if(odd == 0)\n        return 0;\n    return res;\n}\n\
    /*\nThere are three types of people:\n    Type 1 does not like type 2, but does\
    \ like type 3\n    Type 2 does not like type 3, but does like type 1\n    Type\
    \ 3 does not like type 1, but does like type 2\nYou are given a 2D array of Type\
    \ 1, Type 2, and Type 3 people.\n    Each row represents a single person.\n  \
    \  Each column represents whether they like that type of person.\n    A 1 indicates\
    \ they like the person and a 0 indicates they do not.\n    You must find the maximum\
    \ number of people that can be together.\n    For example:\n    >>> likeability([[1,\
    \ 0, 1], [0, 1, 1], [1, 1, 0]])\n    2\n    >>> likeability([[1, 0, 1], [0, 1,\
    \ 1], [1, 1, 0], [1, 1, 1]])\n    3\n    >>> likeability([[1, 0, 1, 1], [0, 1,\
    \ 1, 1], [1, 1, 0, 1]])\n    3\n    >>> likeability([[1, 0, 1, 1], [0, 1, 1, 1],\
    \ [1, 1, 0, 1], [1, 1, 1, 1]])\n    4\n    >>> likeability([[1, 0, 1, 1], [0,\
    \ 1, 1, 1], [1, 1, 0, 1], [1, 1, 1, 1], [1, 1\nunittest\n{\n    alias candidate\
    \ = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L) ==\
    \ 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) == 5L);\n\
    \    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L) == 2625L);\n\
    \    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqc_7jmto.d(47): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqc_7jmto.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long result\
    \ = 1L;\n    foreach(c; to!string(n)) {\n        long digit = c.to!long;\n   \
    \     if (digit % 2 == 1) {\n            result *= digit;\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L)\
    \ == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n\
    \    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) == 315L);\n\
    \    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L) == 0L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpf81pm0ma.d(18): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf81pm0ma.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n\treturn n.to!string().filter!(a\
    \ => a.to!long() % 2 == 1).fold!(1L, (a, b) => a * b.to!long()).to!long();\n}\n\
    /*\nGiven a positive integer n, return the product of the odd digits.\n    Return\
    \ 0 if all digits are even.\n    For example:\n    >>> digits(1L)\n    1L\n  \
    \  >>> digits(4L)\n    0L\n    >>> digits(235L)\n    15L\n    \n*/\nlong digits(long\
    \ n) \n{\n\tstring s = n.to!string();\n\treturn s.fold!((0L, true), (a, b) =>\
    \ (a[1] ? a[0] + 1 : a[0], a[1] && b.to!long() % 2 == 1)).to!long();\n}\n/*\n\
    Given a positive integer n, return the product of the odd digits.\n    Return\
    \ 0 if all digits are even.\n    For example:\n    >>> digits(1L)\n    1L\n  \
    \  >>> digits(4L)\n    0L\n    >>> digits(235L)\n    15L\n    \n*/\nlong digits(long\
    \ n) \n{\n\tstring s = n.to!string();\n\treturn s.fold!((0L, true), (a, b) =>\
    \ (a[1] ? a[0] + 1 : a[0], a[1] && b.to!long() % 2 == 1)).to!long();\n}\n/*\n\
    Given a positive integer n, return the product of the odd digits.\n    Return\
    \ 0 if all digits are even.\n    For example:\n    >>> digits(1L)\n    1L\n  \
    \  >>> digits(4L)\n    0L\n    >>> digits(235L)\n    15L\n    \n*/\nlong digits(long\
    \ n) \n{\n\tstring s = n.to!string();\n\treturn s.fold!((0L, true), (a, b) =>\
    \ (a[1] ? a[0] + 1 : a[0], a[1] && b.to!long() % 2 == 1)).to!long();\n}\n/*\n\
    Given a\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L)\
    \ == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n\
    \    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) == 315L);\n\
    \    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L) == 0L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0o9539oe.d(70): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0o9539oe.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n\tlong product\
    \ = 1L;\n\twhile (n > 0)\n\t{\n\t\tauto digit = n % 10;\n\t\tif (digit % 2 ==\
    \ 1)\n\t\t{\n\t\t\tproduct *= digit;\n\t\t}\n\t\tn /= 10;\n\t}\n\treturn product;\n\
    }\n/*\nCreate a function that takes a sequence of numbers and returns the longest\
    \ sequence of numbers.\n\tFor example:\n\t>>> max_consecutive(1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10)\n\t[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\t>>> max_consecutive(1, 2,\
    \ 3, 2, 4, 2, 5, 2, 6, 2, 1, 2, 3, 2, 4, 2, 5, 2, 6, 2)\n\t[1, 2, 3, 2, 4, 2,\
    \ 5, 2, 6, 2]\n*/\nT[] max_consecutive(T)(T[] seq)\n{\n\tauto begin = 0;\n\tauto\
    \ max_begin = 0;\n\tauto max_length = 0;\n\tauto length = 0;\n\tfor (int i = 0;\
    \ i < seq.length; i++)\n\t{\n\t\tif (i == 0 || seq[i - 1] + 1 == seq[i])\n\t\t\
    {\n\t\t\tlength++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (length > max_length)\n\t\
    \t\t{\n\t\t\t\tmax_length = length;\n\t\t\t\tmax_begin = begin;\n\t\t\t}\n\t\t\
    \tbegin = i;\n\t\t\tlength = 1;\n\t\t}\n\t}\n\tif (length > max_length)\n\t{\n\
    \t\tmax_length = length;\n\t\tmax_begin = begin;\n\t}\n\treturn seq[max_begin\
    \ .. max_begin + max_length];\n}\n/*\nGiven a string, return the first recurring\
    \ character in it, or null if there is no recurring character.\n    For example:\n\
    \    >>> first_recurring_char('qwertty')\n    't'\n   \nunittest\n{\n    alias\
    \ candidate = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L)\
    \ == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) ==\
    \ 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsm9cep9_.d(67): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsm9cep9_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    // your code\
    \ here\n    long ans = 1;\n    long temp = n;\n    while(temp != 0)\n    {\n \
    \       if(temp % 2 != 0)\n        {\n            ans *= temp % 10;\n        }\n\
    \        temp /= 10;\n    }\n    return ans;\n}\nunittest\n{\n    alias candidate\
    \ = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L) ==\
    \ 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) == 5L);\n\
    \    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L) == 2625L);\n\
    \    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpkbdu9r7y.d(40): unittest failure

    ----------------

    ??:? _d_unittestp [0x427dd5]

    ??:? void tmpkbdu9r7y.__unittest_L30_C1() [0x427b45]

    ??:? void tmpkbdu9r7y.__modtest() [0x427b58]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42faad]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a965]

    ??:? runModuleUnitTests [0x42b8d1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164306
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long res\
    \ = 1;\n    while (n != 0)\n    {\n        res *= (n%10)%2!=0 ? n%10 : 1;\n  \
    \      n /= 10;\n    }\n    return res;\n}\n/*\nGiven a string s and a character\
    \ c, return the number of times c occurs in s.\n    For example:\n    >>> occ('abcdabcdabcdabcdabcdabcd',\
    \ 'd')\n    6L\n    >>> occ('abcdabcdabcdabcdabcdabcd', 'z')\n    0L\n*/\nlong\
    \ occ(string s, char c) \n{\n    long result = 0;\n    foreach(str; s)\n    {\n\
    \        if (str == c)\n            result++;\n    }\n    return result;\n}\n\
    /*\nGiven a string s, return the string with all characters converted to uppercase.\n\
    \    For example:\n    >>> upper('abcd abcd abcd')\n    \"ABCD ABCD ABCD\"\n*/\n\
    string upper(string s) \n{\n    auto result = s;\n    foreach(i, str; s)\n   \
    \ {\n        if (str.isLower)\n            result[i] = str.toUpper;\n    }\n \
    \   return result;\n}\n/*\nGiven two strings s and t, return the length of the\
    \ longest common prefix they share.\n    For example:\n    >>> prefix('abcdabcdabcd',\
    \ 'abcdabcdabce')\n    11L\n    >>> prefix('abcabcabcabc', 'abcabcabcdef')\n \
    \   12L\n*/\nlong prefix(string s, string t) \n{\n    long result = 0;\n    foreach(i,\
    \ str; s)\n    {\n        if (str == t[i])\n            result++;\n        else\n\
    \            break;\n    }\n    return result;\n}\n/*\nGiven a positive integer\
    \ n, print out all the subsets of the set {0, 1, ..., n-1}.\n    For example:\n\
    \    >>> subsets(3L)\n    [[],[0],[1],[0,1],[2],[0,2],[1,2],[0,1,2]]\nunittest\n\
    {\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L)\
    \ == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) ==\
    \ 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmps76kj2sp.d(79): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps76kj2sp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    auto t =\
    \ to!string(n);\n    long result = 1;\n    foreach(char ch; t)\n    {\n      \
    \  long temp = ch.to!long;\n        if (temp % 2 == 1)\n        {\n          \
    \  result *= temp;\n        }\n    }\n    return result;\n}\nunittest\n{\n   \
    \ alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L)\
    \ == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) ==\
    \ 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4n3ernv3.d(17): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4n3ernv3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long product\
    \ = 1L;\n    while (n > 0) \n    {\n        long digit = n % 10;\n        if (digit\
    \ % 2 == 1) \n        {\n            product *= digit;\n        }\n        n /=\
    \ 10;\n    }\n    return product;\n}\nunittest\n{\n    alias candidate = digits;\n\
    \n    assert(candidate(5L) == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L)\
    \ == 1L);\n    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) ==\
    \ 315L);\n    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L)\
    \ == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpaei9r2yf.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ddd]

    ??:? void tmpaei9r2yf.__unittest_L29_C1() [0x427b49]

    ??:? void tmpaei9r2yf.__modtest() [0x427b5c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fab5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]

    ??:? runModuleUnitTests [0x42b8d9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164303
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    /*\n    long\
    \ product = 1L;\n    foreach(immutable digit; n.toString()) \n    {\n        //\
    \ immutable digit is a char, not int\n        if (digit.to!long % 2 == 1)\n  \
    \          product *= digit.to!long;\n    }\n    return product;\n    */\n   \
    \ long product = 1L;\n    foreach(immutable digit; n.toString()) \n    {\n   \
    \     if (digit.to!long % 2 == 1)\n            product *= digit.to!long;\n   \
    \ }\n    return product;\n}\nunittest\n{\n    alias candidate = digits;\n\n  \
    \  assert(candidate(5L) == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L)\
    \ == 1L);\n    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) ==\
    \ 315L);\n    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L)\
    \ == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmkn2shrg.d(28): Error: no property `toString` for type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmkn2shrg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164306
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long ret\
    \ = 1;\n    while (n != 0)\n    {\n        auto digit = n % 10;\n        if (digit\
    \ % 2 != 0)\n            ret *= digit;\n        n /= 10;\n    }\n    return ret;\n\
    }\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n\
    \    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L)\
    \ == 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpojyoj11q.d(37): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ddd]

    ??:? void tmpojyoj11q.__unittest_L27_C1() [0x427b49]

    ??:? void tmpojyoj11q.__modtest() [0x427b5c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fab5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]

    ??:? runModuleUnitTests [0x42b8d9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164306
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    if (n < 0)\
    \ return 0;\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L)\
    \ == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n\
    \    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) == 315L);\n\
    \    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L) == 0L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3q4z67q5.d(18): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3q4z67q5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164305
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    if (n < 0)\n\
    \    {\n        return digits(-n);\n    }\n    else if (n < 10)\n    {\n     \
    \   return (n % 2 == 1) ? n : 0;\n    }\n    else\n    {\n        auto d = digits(n\
    \ / 10);\n        return d * ((n % 10) % 2 == 1 ? n % 10 : 1);\n    }\n}\nunittest\n\
    {\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L)\
    \ == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) ==\
    \ 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164306
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long result\
    \ = 1L;\n    foreach(immutable c; n.to!string)\n    {\n        static if (c.isDigit)\n\
    \        {\n            if ((c - '0') % 2)\n            {\n                result\
    \ *= (c - '0');\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L)\
    \ == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) ==\
    \ 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4zpbeoyq.d(18): Error: no property `to` for type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4zpbeoyq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164306
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    long ret\
    \ = 1;\n    do {\n        if (n % 2 != 0)\n            ret *= n % 10;\n      \
    \  n /= 10;\n    } while (n > 0);\n    return ret;\n}\nunittest\n{\n    alias\
    \ candidate = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L)\
    \ == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) ==\
    \ 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpn6yi8ps0.d(35): unittest failure

    ----------------

    ??:? _d_unittestp [0x427dd5]

    ??:? void tmpn6yi8ps0.__unittest_L25_C1() [0x427b41]

    ??:? void tmpn6yi8ps0.__modtest() [0x427b54]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42faad]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a965]

    ??:? runModuleUnitTests [0x42b8d1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164306
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n\t// BEGIN SOLUTION\n\
    \tenum even = 0L;\n\tenum odd = 1L;\n\tauto result = true;\n\twhile (n > 0) {\n\
    \t\tresult *= n % 10 % 2 == even ? 1 : n % 10;\n\t\tn /= 10;\n\t}\n\treturn result;\n\
    \t// END SOLUTION\n}\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L)\
    \ == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n\
    \    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) == 315L);\n\
    \    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L) == 0L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp910muzi4.d(22): Error: operation not allowed on `bool` `result
    *= n % cast(long)10 % cast(long)2 == 0L ? cast(long)1 : n % cast(long)10`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp910muzi4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164306
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a positive integer n,\
    \ return the product of the odd digits.\n    Return 0 if all digits are even.\n\
    \    For example:\n    >>> digits(1L)\n    1L\n    >>> digits(4L)\n    0L\n  \
    \  >>> digits(235L)\n    15L\n    \n*/\nlong digits(long n) \n{\n    return to!long(product(map!(to!long)(filter!(isOdd)(to!int(n).digits))));\n\
    }\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n\
    \    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L)\
    \ == 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L)\
    \ == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpuws1au6s.d(17): Error: template instance `to!long` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuws1au6s.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164306

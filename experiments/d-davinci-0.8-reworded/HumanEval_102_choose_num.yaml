name: HumanEval_102_choose_num
language: d
prompt: "import std.math;\nimport std.typecons;\n/*\nThis function takes two positive\
  \ numbers x and y and returns the\n    biggest even integer number that is in the\
  \ range [x, y] inclusive. If \n    there's no such number, then the function should\
  \ return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n    >>>\
  \ choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long y) \n"
tests: "unittest\n{\n    alias candidate = choose_num;\n\n    assert(candidate(12L,\
  \ 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L,\
  \ 12354L) == 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
  \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
  \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
completions: ["{\n    if (x % 2 == 0)\n    {\n        return x;\n    }\n    else if\
    \ (x % 2 == 1)\n    {\n        return y;\n    }\n    else\n    {\n        return\
    \ -1;\n    }\n}", "{\n    long result = -1;\n    long i = x;\n    for (; i <=\
    \ y; i++)\n    {\n        if(i % 2 == 0)\n        {\n            result = i;\n\
    \        }\n    }\n    return result;\n}", "{\n    long max = -1;\n    long i\
    \ = x;\n    if (x > y) {\n        i = y;\n    }\n    while (i <= y) \n    {\n\
    \        if (i % 2 == 0) {\n            max = i;\n        }\n        i = i + 1;\n\
    \    }\n    return max;\n}", "{\n    alias T = ulong;\n    alias P = Tuple!(long,\
    \ long);\n    T xPos = x > 0 ? x : -x;\n    T yPos = y > 0 ? y : -y;\n    if (xPos\
    \ == 0 || yPos == 0)\n        return -1;\n    else\n    {\n        P p = xPos\
    \ > yPos ? P(yPos, xPos) : P(xPos, yPos);\n        T g = gcd(p[0], p[1]);\n  \
    \      T l = p[0] / g * p[1];\n        // could check if l is even and return\
    \ -1 here...\n        return l / 2;\n    }\n}\n/*\nThe function digitsum(N) returns\
    \ the sum of digits of N. \n    For example:", "{\n    if(x<y)\n    {\n      \
    \  if(y%2==0)\n        {\n            return y;\n        }\n        else\n   \
    \     {\n            return y-1;\n        }\n    }\n    else if(x==y)\n    {\n\
    \        if(x%2==0)\n        {\n            return x;\n        }\n        else\n\
    \        {\n            return -1;\n        }\n    }\n    else\n    {\n      \
    \  return -1;\n    }\n    \n    \n}", "{\n    if (x % 2 == 0) \n    {\n      \
    \  if (x > y) \n        {\n            return -1;\n        }\n        return x;\n\
    \    }\n    return choose_num(x + 1, y);\n}", "{\n  long largestEven;\n  if(x>y)\n\
    \  {\n    largestEven=-1;\n  }\n  else\n  {\n    for(long i=x;i<=y;i++)\n    {\n\
    \      if(i%2==0)\n      {\n        largestEven=i;\n      }\n    }\n  }\n  return\
    \ largestEven;\n}", "{\n    long result;\n    if (y % 2 == 0)\n    {\n       \
    \ result = y;\n    }\n    else\n    {\n        result = y - 1;\n    }\n    if\
    \ (result < x)\n    {\n        result = -1;\n    }\n    return result;\n}", "{\n\
    \    return tuple(long.max, long.min).zip(tuple(x, y)).map!((a, b) => a - b).reduce!((a,\
    \ b) => abs(a) < abs(b) ? a : b);\n}\n/*", "{\n    if( x % 2 == 0)\n        return\
    \ x;\n    else if (y % 2 == 0)\n        return y;\n    else\n        return -1;\n\
    }\n/*\n    This function takes a series of numbers (integers or floats) and\n\
    \    returns a std.typecons.Tuple!(long, double) that contains the minimum\n \
    \   number and the maximum number of the series.", "{\n    long result = -1;\n\
    \    long i = 0;\n    foreach(i;x..y)\n    {\n        if (i % 2 == 0)\n      \
    \  {\n            result = i;\n        }\n    }\n    return result;\n}", "{\n\
    \    if (x % 2 != 0 && y % 2 != 0) \n    {\n        return -1L;\n    }\n    else\
    \ \n    {\n        long low = min(x, y);\n        long high = max(x, y);\n   \
    \     if (low % 2 == 0)\n        {\n            return low;\n        }\n     \
    \   else\n        {\n            return low + 1;\n        }\n    }\n}", "{\n \
    \   long result;\n    if (x % 2 != 0)\n    {\n        result = x + 1;\n    }\n\
    \    else\n    {\n        result = x;\n    }\n    if (result > y)\n    {\n   \
    \     return -1;\n    }\n    else\n    {\n        return result;\n    }\n}", "{\n\
    \treturn -1;\n}", "{\n    if(x%2 != 0 || y%2 != 0)\n    {\n        if(x%2 != 0)\n\
    \        {\n            x++;\n        }\n        if(y%2 != 0)\n        {\n   \
    \         y--;\n        }\n    }\n    if(x <= y)\n    {\n        return y;\n \
    \   }\n    else\n    {\n        return -1;\n    }\n}\n/*\n    This function takes\
    \ a natural number n and returns the sum of \n    numbers from 1 to n inclusive,\
    \ if n is not divisible by 6. If n is \n    divisible by 6, then the function\
    \ should return the sum of numbers \n    from 1 to n inclusive plus 10. If n is\
    \ less than 1, then the function \n    should return -1.", "{\n    if (x > y)\
    \ return -1;\n    while (x <= y)\n    {\n        if (x % 2 == 0)\n           \
    \ return x;\n        x += 1;\n    }\n    return -1;\n}", "{\n    static assert(x\
    \ > 0 && y > 0);\n    if (x == y)\n    {\n        if ((x % 2) == 0)\n        \
    \    return x;\n        else\n            return -1;\n    }\n    else if (x >\
    \ y)\n    {\n        return -1;\n    }\n    else\n    {\n        long r = x %\
    \ 2;\n        return (r == 0) ? x : x + 1;\n    }\n}\n/*\n * This function takes\
    \ a positive number num, and a string str, and\n *    replaces all even-numbered\
    \ characters in str with the string\n *    representation of num. (0-indexed.)\
    \ If str has less than\n *    2 * num characters, then the function should return\
    \ None.\n *    Otherwise, it should return the new string.", "{\n  long n = 0;\n\
    \  if (x > y)\n  {\n    n = -1;\n  }\n  else if (y == 0)\n  {\n    n = 0;\n  }\n\
    \  else\n  {\n    for (long i = y; i > x; i--)\n    {\n      if ((i % 2) == 0)\n\
    \      {\n        n = i;\n        break;\n      }\n    }\n  }\n  return n;\n}\n\
    \ \n/*", "{\n\tlong result = -1;\n\tlong i = min(x, y);\n\t\n\twhile (i <= max(x,\
    \ y))\n\t{\n\t\tif (i % 2 == 0)\n\t\t{\n\t\t\tresult = i;\n\t\t}\n\t\ti++;\n\t\
    }\n\treturn result;\n}", "{\n    static struct S(a, b)\n    {\n        long a;\n\
    \        long b;\n    } nums = \n    {\n        .a = x,\n        .b = y\n    };\n\
    \    if (x > y)\n    {\n        long temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    if (x % 2 == 0)\n    {\n        return x;\n    }\n    else\n    {\n\
    \        return y;\n    }\n    return x;\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

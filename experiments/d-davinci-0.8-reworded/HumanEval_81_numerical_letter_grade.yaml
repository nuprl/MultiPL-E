name: HumanEval_81_numerical_letter_grade
language: d
prompt: "import std.math;\nimport std.typecons;\n/*\nIt is the last week of the semester\
  \ and the teacher has to give the grades\n    to students. The teacher has been\
  \ making her own algorithm for grading.\n    The only problem is, she has lost the\
  \ code she used for grading.\n    She has given you an array of GPAs for some students\
  \ and you have to write \n    a function that can output an array of letter grades\
  \ using the following table:\n             GPA       |    Letter grade\n       \
  \       4.0                A+\n            > 3.7                A \n           \
  \ > 3.3                A- \n            > 3.0                B+\n            > 2.7\
  \                B \n            > 2.3                B-\n            > 2.0    \
  \            C+\n            > 1.7                C\n            > 1.3         \
  \       C-\n            > 1.0                D+ \n            > 0.7            \
  \    D \n            > 0.0                D-\n              0.0                E\n\
  \    \n\n    Example:\n    >>> grade_equation([4.0, 3L, 1.7, 2L, 3.5])\n    [\"\
  A+\", \"B\", \"C-\", \"C\", \"A-\"]\n    \n*/\nstring[] numerical_letter_grade(float[]\
  \ grades) \n"
tests: "unittest\n{\n    alias candidate = numerical_letter_grade;\n\n    assert(candidate([4.0,\
  \ 3L, 1.7, 2L, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"A-\"]);\n    assert(candidate([1.2])\
  \ == [\"D+\"]);\n    assert(candidate([0.5]) == [\"D-\"]);\n    assert(candidate([0.0])\
  \ == [\"E\"]);\n    assert(candidate([1.0, 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\"\
  , \"C-\", \"B\", \"B+\"]);\n    assert(candidate([0.0, 0.7]) == [\"E\", \"D-\"]);\n\
  }\nvoid main(){}"
completions: ["{\n    string[] letter_grades = new string[grades.length];\n    int\
    \ i = 0;\n    foreach(grade; grades)\n    {\n        if(grade >= 4.0)\n      \
    \  {\n            letter_grades[i] = \"A+\";\n        }\n        else if(grade\
    \ >= 3.7)\n        {\n            letter_grades[i] = \"A\";\n        }\n     \
    \   else if(grade >= 3.3)\n        {\n            letter_grades[i] = \"A-\";\n\
    \        }\n        else if(grade >= 3.0)\n        {\n            letter_grades[i]\
    \ = \"B+\";\n        }\n        else if(grade >= 2.7)\n        {\n           \
    \ letter_grades[i] = \"B\";\n        }\n        else if(grade >= 2.3)\n      \
    \  {\n            letter_grades[i] = \"B-\";\n        }\n        else if(grade\
    \ >= 2.0)\n        {\n            letter_grades[i] = \"C+\";\n        }\n    \
    \    else if(grade >= 1.7)\n        {\n            letter_grades[i] = \"C\";\n\
    \        }\n        else if(grade >= 1.3)\n        {\n            letter_grades[i]\
    \ = \"C-\";\n        }\n        else if(grade >= 1.0)\n        {\n           \
    \ letter_grades[i] = \"D+\";\n        }\n        else if(grade >= 0.7)\n     \
    \   {\n            letter_grades[i] = \"D\";\n        }\n        else if(grade\
    \ >= 0.0)\n        {\n            letter_grades[i] = \"D-\";\n        }\n    \
    \    else if(grade < 0.0)\n        {\n            letter_grades[i] = \"E\";\n\
    \        }\n        i++;\n    }\n    return letter_grades;\n}", "{\n    string[]\
    \ result = [\"\", \"\", \"\", \"\", \"\"];\n    for (int i = 0; i < grades.length;\
    \ i++)\n    {\n        if (grades[i] >= 4.0)\n        {\n            result[i]\
    \ = \"A+\";\n        }\n        else if (grades[i] >= 3.7)\n        {\n      \
    \      result[i] = \"A\";\n        }\n        else if (grades[i] >= 3.3)\n   \
    \     {\n            result[i] = \"A-\";\n        }\n        else if (grades[i]\
    \ >= 3.0)\n        {\n            result[i] = \"B+\";\n        }\n        else\
    \ if (grades[i] >= 2.7)\n        {\n            result[i] = \"B\";\n        }\n\
    \        else if (grades[i] >= 2.3)\n        {\n            result[i] = \"B-\"\
    ;\n        }\n        else if (grades[i] >= 2.0)\n        {\n            result[i]\
    \ = \"C+\";\n        }\n        else if (grades[i] >= 1.7)\n        {\n      \
    \      result[i] = \"C\";\n        }\n        else if (grades[i] >= 1.3)\n   \
    \     {\n            result[i] = \"C-\";\n        }\n        else if (grades[i]\
    \ >= 1.0)\n        {\n            result[i] = \"D+\";\n        }\n        else\
    \ if (grades[i] >= 0.7)\n        {\n            result[i] = \"D\";\n        }\n\
    \        else if (grades[i] >= 0.0)\n        {\n            result[i] = \"D-\"\
    ;\n        }\n        else if (grades[i] >= 0.0)\n        {\n            result[i]\
    \ = \"E\";\n        }\n    }\n    return result;\n}", "{\n    import std.array;\n\
    \    import std.typecons;\n    import std.range;\n    import std.algorithm;\n\
    \    import std.conv;\n    auto g = grades;\n    auto letter_grade = [\"A+\",\
    \ \"A\", \"A-\", \"B+\", \"B\", \"B-\", \"C+\", \"C\", \"C-\", \"D+\", \"D\",\
    \ \"D-\", \"E\"].dup;\n    auto grade_range = [4.0, 3.7, 3.3, 3.0, 2.7, 2.3, 2.0,\
    \ 1.7, 1.3, 1.0, 0.7, 0.0, 0.0];\n    auto l_grade = new Tuple!(string, float)[13];\n\
    \    for (size_t i = 0; i < 13; i++)\n    {\n        l_grade[i] = tuple(letter_grade[i],\
    \ grade_range[i]);\n    }\n    // writeln(g.max);\n    foreach (ref i; g)\n  \
    \  {\n        foreach (ref j; l_grade)\n        {\n            if (i >= j[1])\n\
    \            {\n                writeln(j[0]);\n                break;\n     \
    \       }\n        }\n    }\n}", "{\n    string[] answer = new string[grades.length];\n\
    \    int x = 0;\n    foreach(auto grade; grades) \n    {\n        if(grade >=\
    \ 4.0) \n        {\n            answer[x] = \"A+\";\n        }\n        else if(grade\
    \ >= 3.7) \n        {\n            answer[x] = \"A\";\n        }\n        else\
    \ if(grade >= 3.3) \n        {\n            answer[x] = \"A-\";\n        }\n \
    \       else if(grade >= 3.0) \n        {\n            answer[x] = \"B+\";\n \
    \       }\n        else if(grade >= 2.7) \n        {\n            answer[x] =\
    \ \"B\";\n        }\n        else if(grade >= 2.3) \n        {\n            answer[x]\
    \ = \"B-\";\n        }\n        else if(grade >= 2.0) \n        {\n          \
    \  answer[x] = \"C+\";\n        }\n        else if(grade >= 1.7) \n        {\n\
    \            answer[x] = \"C\";\n        }\n        else if(grade >= 1.3) \n \
    \       {\n            answer[x] = \"C-\";\n        }\n        else if(grade >=\
    \ 1.0) \n        {\n            answer[x] = \"D+\";\n        }\n        else if(grade\
    \ >= 0.7) \n        {\n            answer[x] = \"D\";\n        }\n        else\
    \ if(grade >= 0.0) \n        {\n            answer[x] = \"D-\";\n        }\n \
    \       else if(grade == 0.0) \n        {\n            answer[x] = \"E\";\n  \
    \      }\n        x++;\n    }\n    return answer;\n}\n/*\nYou are going to a rock\
    \ concert and you want to bring a cooler with drinks. \n    You want to bring\
    \ as many beers as possible, but unfortunately you can only \n    bring one beer\
    \ at a time into the concert, and you can't leave the concert with \n    more\
    \ than one beer. You can however dispose of as many beers as you want outside\
    \ \n    the concert.\n    The concert is number", "{\n    string[] letter_grades\
    \ = [];", "{\n    string[] letter_grades = new string[grades.length];\n    int\
    \ index = 0;\n    foreach(grade; grades)\n    {\n        if(grade > 4.0)\n   \
    \     {\n            letter_grades[index] = \"A+\";\n        }\n        else if(grade\
    \ > 3.7)\n        {\n            letter_grades[index] = \"A\";\n        }\n  \
    \      else if(grade > 3.3)\n        {\n            letter_grades[index] = \"\
    A-\";\n        }\n        else if(grade > 3.0)\n        {\n            letter_grades[index]\
    \ = \"B+\";\n        }\n        else if(grade > 2.7)\n        {\n            letter_grades[index]\
    \ = \"B\";\n        }\n        else if(grade > 2.3)\n        {\n            letter_grades[index]\
    \ = \"B-\";\n        }\n        else if(grade > 2.0)\n        {\n            letter_grades[index]\
    \ = \"C+\";\n        }\n        else if(grade > 1.7)\n        {\n            letter_grades[index]\
    \ = \"C\";\n        }\n        else if(grade > 1.3)\n        {\n            letter_grades[index]\
    \ = \"C-\";\n        }\n        else if(grade > 1.0)\n        {\n            letter_grades[index]\
    \ = \"D+\";\n        }\n        else if(grade > 0.7)\n        {\n            letter_grades[index]\
    \ = \"D\";\n        }\n        else if(grade > 0.0)\n        {\n            letter_grades[index]\
    \ = \"D-\";\n        }\n        else\n        {\n            letter_grades[index]\
    \ = \"E\";\n        }\n        index++;\n    }\n    return letter_grades;\n}",
  "{ \n    string[] result;\n    result.length = grades.length;\n    foreach(index,\
    \ grade; grades)\n    {\n        if(grade >= 4.0)\n        {\n            result[index]\
    \ = \"A+\";\n        }\n        else if(grade >= 3.7)\n        {\n           \
    \ result[index] = \"A\";\n        }\n        else if(grade >= 3.3)\n        {\n\
    \            result[index] = \"A-\";\n        }\n        else if(grade >= 3.0)\n\
    \        {\n            result[index] = \"B+\";\n        }\n        else if(grade\
    \ >= 2.7)\n        {\n            result[index] = \"B\";\n        }\n        else\
    \ if(grade >= 2.3)\n        {\n            result[index] = \"B-\";\n        }\n\
    \        else if(grade >= 2.0)\n        {\n            result[index] = \"C+\"\
    ;\n        }\n        else if(grade >= 1.7)\n        {\n            result[index]\
    \ = \"C\";\n        }\n        else if(grade >= 1.3)\n        {\n            result[index]\
    \ = \"C-\";\n        }\n        else if(grade >= 1.0)\n        {\n           \
    \ result[index] = \"D+\";\n        }\n        else if(grade >= 0.7)\n        {\n\
    \            result[index] = \"D\";\n        }\n        else if(grade >= 0.0)\n\
    \        {\n            result[index] = \"D-\";\n        }\n        else if(grade\
    \ >= 0.0)\n        {\n            result[index] = \"E\";\n        }\n    }\n \
    \   return result;\n} ", "{\n    import std.algorithm.searching;\n    import std.range;\n\
    \    import std.array;\n    import std.conv;\n    import std.typecons;\n    import\
    \ std.format;\n    import std.math;\n    import std.typecons;\n    import std.array;\n\
    \    import std.range;\n    import std.algorithm.searching;\n    import std.string;\n\
    \    import std.conv;\n    import std.typecons;\n    import std.array;\n    import\
    \ std.algorithm.comparison;\n    import std.string;\n    import std.range;\n \
    \   import std.conv;\n    import std.algorithm.comparison;\n    import std.typecons;\n\
    \    import std.array;\n    import std.range;\n    import std.algorithm.comparison;\n\
    \    import std.algorithm.searching;\n    import std.conv;\n    import std.math;\n\
    \    import std.typecons;\n    import std.array;\n    import std.range;\n    import\
    \ std.algorithm.comparison;\n    import std.algorithm.searching;\n    import std.conv;\n\
    \    import std.math;\n    import std.typecons;\n    import std.array;\n    import\
    \ std.range;\n    import std.algorithm.comparison;\n    import std.algorithm.searching;\n\
    \    import std.conv;\n    import std.math;\n    import std.typecons;\n    import\
    \ std.array;\n    import std.range;\n    import std.algorithm.comparison;\n  \
    \  import std.algorithm.searching;\n    import std.conv;\n    import std.math;\n\
    \    import std.typecons;\n    import std.array;\n    import std.range;\n    import\
    \ std.algorithm.comparison;\n    import std.algorithm.searching;\n    import std.conv;\n\
    \    import std.math;\n    import std.typecons;\n    import std.array;\n    import\
    \ std.range;\n    import std.algorithm.comparison;\n    import std.algorithm.searching;\n\
    \    import std.conv;\n   ", "{\n\tstring[] output;\n\tforeach(i; 0 .. grades.length)\n\
    \t{\n\t\tif(grades[i] >= 4.0)\n\t\t{\n\t\t\toutput ~= \"A+\";\n\t\t}\n\t\telse\
    \ if(grades[i] >= 3.7)\n\t\t{\n\t\t\toutput ~= \"A\";\n\t\t}\n\t\telse if(grades[i]\
    \ >= 3.3)\n\t\t{\n\t\t\toutput ~= \"A-\";\n\t\t}\n\t\telse if(grades[i] >= 3.0)\n\
    \t\t{\n\t\t\toutput ~= \"B+\";\n\t\t}\n\t\telse if(grades[i] >= 2.7)\n\t\t{\n\t\
    \t\toutput ~= \"B\";\n\t\t}\n\t\telse if(grades[i] >= 2.3)\n\t\t{\n\t\t\toutput\
    \ ~= \"B-\";\n\t\t}\n\t\telse if(grades[i] >= 2.0)\n\t\t{\n\t\t\toutput ~= \"\
    C+\";\n\t\t}\n\t\telse if(grades[i] >= 1.7)\n\t\t{\n\t\t\toutput ~= \"C\";\n\t\
    \t}\n\t\telse if(grades[i] >= 1.3)\n\t\t{\n\t\t\toutput ~= \"C-\";\n\t\t}\n\t\t\
    else if(grades[i] >= 1.0)\n\t\t{\n\t\t\toutput ~= \"D+\";\n\t\t}\n\t\telse if(grades[i]\
    \ >= 0.7)\n\t\t{\n\t\t\toutput ~= \"D\";\n\t\t}\n\t\telse if(grades[i] >= 0.0)\n\
    \t\t{\n\t\t\toutput ~= \"D-\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\toutput ~= \"E\"\
    ;\n\t\t}\n\t}\n\treturn output;\n}", "{\n    string[] letter_grades = new string[grades.length];",
  "{\n    string[] list = new string[grades.length];\n    foreach(int i, float grade;\
    \ grades)\n    {\n        if(grade == 4.0)\n        {\n            list[i] = \"\
    A+\";\n        }\n        else if(grade > 3.7)\n        {\n            list[i]\
    \ = \"A\";\n        }\n        else if(grade > 3.3)\n        {\n            list[i]\
    \ = \"A-\";\n        }\n        else if(grade > 3.0)\n        {\n            list[i]\
    \ = \"B+\";\n        }\n        else if(grade > 2.7)\n        {\n            list[i]\
    \ = \"B\";\n        }\n        else if(grade > 2.3)\n        {\n            list[i]\
    \ = \"B-\";\n        }\n        else if(grade > 2.0)\n        {\n            list[i]\
    \ = \"C+\";\n        }\n        else if(grade > 1.7)\n        {\n            list[i]\
    \ = \"C\";\n        }\n        else if(grade > 1.3)\n        {\n            list[i]\
    \ = \"C-\";\n        }\n        else if(grade > 1.0)\n        {\n            list[i]\
    \ = \"D+\";\n        }\n        else if(grade > 0.7)\n        {\n            list[i]\
    \ = \"D\";\n        }\n        else if(grade > 0.0)\n        {\n            list[i]\
    \ = \"D-\";\n        }\n        else if(grade == 0.0)\n        {\n           \
    \ list[i] = \"E\";\n        }\n    }\n    return list;\n}", "{\n    double[] numerical_letter_grade\
    \ = {4.0, 3.7, 3.3, 3.0, 2.7, 2.3, 2.0, 1.7, 1.3, 1.0, 0.7, 0.0};\n    string[]\
    \ letter_grade = {\"A+\", \"A\", \"A-\", \"B+\", \"B\", \"B-\", \"C+\", \"C\"\
    , \"C-\", \"D+\", \"D\", \"D-\", \"E\"};\n    string[] array;\n    int i = 0;\n\
    \    foreach(float gr; grades)\n    {\n        if(i == 0)\n        {\n       \
    \     array ~= letter_grade[0];\n        }\n        else\n        {\n        \
    \    int index = 0;\n            foreach(float num; numerical_letter_grade)\n\
    \            {\n                if(gr >= num)\n                {\n           \
    \         array ~= letter_grade[index];\n                    break;\n        \
    \        }\n                index++;\n            }\n        }\n        i++;\n\
    \    }\n    return array;\n}\n//------------------------------", "{\n    import\
    \ std.math;\n    string[]  letter_grades=new string[];\n    foreach(element; grades)\n\
    \    {\n        if(element>=4.0)\n            letter_grades=letter_grades~\"A+\"\
    ;\n        else if(element>=3.7)\n            letter_grades=letter_grades~\"A\"\
    ;\n        else if(element>=3.3)\n            letter_grades=letter_grades~\"A-\"\
    ;\n        else if(element>=3.0)\n            letter_grades=letter_grades~\"B+\"\
    ;\n        else if(element>=2.7)\n            letter_grades=letter_grades~\"B\"\
    ;\n        else if(element>=2.3)\n            letter_grades=letter_grades~\"B-\"\
    ;\n        else if(element>=2.0)\n            letter_grades=letter_grades~\"C+\"\
    ;\n        else if(element>=1.7)\n            letter_grades=letter_grades~\"C\"\
    ;\n        else if(element>=1.3)\n            letter_grades=letter_grades~\"C-\"\
    ;\n        else if(element>=1.0)\n            letter_grades=letter_grades~\"D+\"\
    ;\n        else if(element>=0.7)\n            letter_grades=letter_grades~\"D\"\
    ;\n        else if(element>=0.0)\n            letter_grades=letter_grades~\"D-\"\
    ;\n        else\n            letter_grades=letter_grades~\"E\";\n    }\n    return\
    \ letter_grades;\n}", "{\n  assert(grades.length > 0);", "{\n    string[] grades_letter;\n\
    \    grades_letter.length = grades.length;\n    for (int i = 0; i < grades.length;\
    \ i++)\n    {\n        if (grades[i] == 4.0)\n        {\n            grades_letter[i]\
    \ = \"A+\";\n        }\n        else if (grades[i] > 3.7)\n        {\n       \
    \     grades_letter[i] = \"A\";\n        }\n        else if (grades[i] > 3.3)\n\
    \        {\n            grades_letter[i] = \"A-\";\n        }\n        else if\
    \ (grades[i] > 3.0)\n        {\n            grades_letter[i] = \"B+\";\n     \
    \   }\n        else if (grades[i] > 2.7)\n        {\n            grades_letter[i]\
    \ = \"B\";\n        }\n        else if (grades[i] > 2.3)\n        {\n        \
    \    grades_letter[i] = \"B-\";\n        }\n        else if (grades[i] > 2.0)\n\
    \        {\n            grades_letter[i] = \"C+\";\n        }\n        else if\
    \ (grades[i] > 1.7)\n        {\n            grades_letter[i] = \"C\";\n      \
    \  }\n        else if (grades[i] > 1.3)\n        {\n            grades_letter[i]\
    \ = \"C-\";\n        }\n        else if (grades[i] > 1.0)\n        {\n       \
    \     grades_letter[i] = \"D+\";\n        }\n        else if (grades[i] > 0.7)\n\
    \        {\n            grades_letter[i] = \"D\";\n        }\n        else if\
    \ (grades[i] > 0.0)\n        {\n            grades_letter[i] = \"D-\";\n     \
    \   }\n        else\n        {\n            grades_letter[i] = \"E\";\n      \
    \  }\n    }\n    return grades_letter;\n}", "{\n    string[] ret;\n    int m =\
    \ grades.length;\n    ret.length = m;\n    foreach(int i, float g; grades)\n \
    \   {\n        if(g > 4.0) ret[i] = \"A+\";\n        else if(g > 3.7) ret[i] =\
    \ \"A\";\n        else if(g > 3.3) ret[i] = \"A-\";\n        else if(g > 3.0)\
    \ ret[i] = \"B+\";\n        else if(g > 2.7) ret[i] = \"B\";\n        else if(g\
    \ > 2.3) ret[i] = \"B-\";\n        else if(g > 2.0) ret[i] = \"C+\";\n       \
    \ else if(g > 1.7) ret[i] = \"C\";\n        else if(g > 1.3) ret[i] = \"C-\";\n\
    \        else if(g > 1.0) ret[i] = \"D+\";\n        else if(g > 0.7) ret[i] =\
    \ \"D\";\n        else if(g > 0.0) ret[i] = \"D-\";\n        else ret[i] = \"\
    E\";\n    }\n    return ret;\n}", "{\n    string[] letter_grades;\n    foreach(i;0..grades.length)\n\
    \    {\n        if(grades[i] == 4.0)\n        {\n            letter_grades[i]\
    \ = \"A+\";\n        }\n        else if(grades[i] >= 3.7)\n        {\n       \
    \     letter_grades[i] = \"A\";\n        }\n        else if(grades[i] >= 3.3)\n\
    \        {\n            letter_grades[i] = \"A-\";\n        }\n        else if(grades[i]\
    \ >= 3.0)\n        {\n            letter_grades[i] = \"B+\";\n        }\n    \
    \    else if(grades[i] >= 2.7)\n        {\n            letter_grades[i] = \"B\"\
    ;\n        }\n        else if(grades[i] >= 2.3)\n        {\n            letter_grades[i]\
    \ = \"B-\";\n        }\n        else if(grades[i] >= 2.0)\n        {\n       \
    \     letter_grades[i] = \"C+\";\n        }\n        else if(grades[i] >= 1.7)\n\
    \        {\n            letter_grades[i] = \"C\";\n        }\n        else if(grades[i]\
    \ >= 1.3)\n        {\n            letter_grades[i] = \"C-\";\n        }\n    \
    \    else if(grades[i] >= 1.0)\n        {\n            letter_grades[i] = \"D+\"\
    ;\n        }\n        else if(grades[i] >= 0.7)\n        {\n            letter_grades[i]\
    \ = \"D\";\n        }\n        else if(grades[i] >= 0.0)\n        {\n        \
    \    letter_grades[i] = \"D-\";\n        }\n        else if(grades[i] == 0.0)\n\
    \        {\n            letter_grades[i] = \"E\";\n        }\n    }\n    return\
    \ letter_grades;\n}", "{\n    // your implementation goes here\n    string[] letter_grade\
    \ = new string[grades.length];\n    for(int i = 0; i < grades.length; i++)\n \
    \   {\n        if(grades[i] >= 4.0)\n        {\n            letter_grade[i] =\
    \ \"A+\";\n        }\n        else if(grades[i] >= 3.7)\n        {\n         \
    \   letter_grade[i] = \"A\";\n        }\n        else if(grades[i] >= 3.3)\n \
    \       {\n            letter_grade[i] = \"A-\";\n        }\n        else if(grades[i]\
    \ >= 3.0)\n        {\n            letter_grade[i] = \"B+\";\n        }\n     \
    \   else if(grades[i] >= 2.7)\n        {\n            letter_grade[i] = \"B\"\
    ;\n        }\n        else if(grades[i] >= 2.3)\n        {\n            letter_grade[i]\
    \ = \"B-\";\n        }\n        else if(grades[i] >= 2.0)\n        {\n       \
    \     letter_grade[i] = \"C+\";\n        }\n        else if(grades[i] >= 1.7)\n\
    \        {\n            letter_grade[i] = \"C\";\n        }\n        else if(grades[i]\
    \ >= 1.3)\n        {\n            letter_grade[i] = \"C-\";\n        }\n     \
    \   else if(grades[i] >= 1.0)\n        {\n            letter_grade[i] = \"D+\"\
    ;\n        }\n        else if(grades[i] >= 0.7)\n        {\n            letter_grade[i]\
    \ = \"D\";\n        }\n        else if(grades[i] >= 0.0)\n        {\n        \
    \    letter_grade[i] = \"D-\";\n        }\n        else\n        {\n         \
    \   letter_grade[i] = \"E\";\n        }\n    }\n    return letter_grade;\n}\n\
    // counting sort", "{\n    string[] letters = new string[grades.length];\n   \
    \ for (int i = 0; i < grades.length; i++)\n    {\n        string grade = \"\"\
    ;\n        float gpa = grades[i];\n        if (gpa == 4.0) grade = \"A+\";\n \
    \       else if (gpa > 3.7) grade = \"A\";\n        else if (gpa > 3.3) grade\
    \ = \"A-\";\n        else if (gpa > 3.0) grade = \"B+\";\n        else if (gpa\
    \ > 2.7) grade = \"B\";\n        else if (gpa > 2.3) grade = \"B-\";\n       \
    \ else if (gpa > 2.0) grade = \"C+\";\n        else if (gpa > 1.7) grade = \"\
    C\";\n        else if (gpa > 1.3) grade = \"C-\";\n        else if (gpa > 1.0)\
    \ grade = \"D+\";\n        else if (gpa > 0.7) grade = \"D\";\n        else if\
    \ (gpa > 0.0) grade = \"D-\";\n        else grade = \"E\";\n        letters[i]\
    \ = grade;\n    }\n    return letters;\n}", "{\n    \n}\n "]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

{
  "name": "HumanEval_118_get_closest_vowel",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // You are given a word. Your task is to find the closest vowel that stands between \n    // two consonants from the right side of the word (case sensitive).\n    // Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    // find any vowel met the above condition. \n    // You may assume that the given string contains English letter only.\n    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n    // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n    public static string GetClosestVowel(string word) {\n",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\n}\n",
  "completions": [
    "        // Write your code here\n        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u') {\n            i--;\n        }\n        if (i < 0) {\n            return \"\";\n        }\n        int j = i + 1;\n        while (j < word.Length && word[j] != 'a' && word[j] != 'e' && word[j] != 'i' && word[j] != 'o' && word[j] != 'u') {\n            j++;\n        }\n        if (j == word.Length) {\n            return \"\";\n        }\n        return word[j];",
    "        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0)\n            return \"\";\n        i--;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0)\n            return \"\";\n        return word[i];",
    "        // Write your code here\n        return \"\";",
    "        // Write your code here\n        int[] vowels = {'a', 'e', 'i', 'o', 'u'};\n        int[] consonants = {'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'};\n        int[] consonantIndex = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0",
    "        // Write your code here\n        int i = 0;\n        for (i = 0; i < word.Length - 1; i++) {\n            if (word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u') {\n                break;\n            }\n        }\n        if (i == word.Length - 1) {\n            return \"\";\n        }\n        for (i = word.Length - 1; i > i - 2; i--) {\n            if (word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u') {\n                return word.Substring(i + 1, word.Length - i - 1);\n            }\n        }\n        return \"\";",
    "        if (word == null || word.Length == 0) return \"\";\n        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0) return \"\";\n        i--;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0) return \"\";\n        return word[i];",
    "        if (word == null) return \"\";\n        if (word.Length < 2) return \"\";\n        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0) return \"\";\n        i--;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0) return \"\";\n        i--;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0) return \"\";\n        i--;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0) return \"\";\n        i--;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0) return \"\";\n        i--;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0) return \"\";\n        i--;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] !=",
    "        // Write your code here\n        if (word.Length < 2)\n            return \"\";\n        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i == -1)\n            return \"\";\n        int j = i + 1;\n        while (j < word.Length && word[j] != 'a' && word[j] != 'e' && word[j] != 'i' && word[j] != 'o' && word[j] != 'u')\n            j++;\n        if (j == word.Length)\n            return \"\";\n        return word.Substring(i + 1, j - i - 1);",
    "        // Write your code here\n        if (word == null || word.Length == 0)\n            return \"\";\n        int index = word.Length - 1;\n        while (index >= 0 && word[index] != 'a' && word[index] != 'e' && word[index] != 'i' && word[index] != 'o' && word[index] != 'u')\n            index--;\n        if (index < 0)\n            return \"\";\n        if (word[index] == 'a' || word[index] == 'e' || word[index] == 'i' || word[index] == 'o' || word[index] == 'u')\n            return word[index];\n        else\n            return word[index + 1];",
    "        int i = 0;\n        while (i < word.Length - 1) {\n            if (word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u') {\n                i++;\n            }\n            else if (word[i] == 'y') {\n                i++;\n                if (i < word.Length - 1 && word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u') {\n                    i++;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        if (i == word.Length - 1) {\n            return \"\";\n        }\n        else {\n            return word.Substring(i, 1);\n        }",
    "        // Write your code here\n        if (word.Length == 0) return \"\";\n        int i = word.Length - 1;\n        while (i >= 0) {\n            if (word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u')\n                return word[i];\n            i--;\n        }\n        return \"\";",
    "        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0)\n            return \"\";\n        i--;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0)\n            return \"\";\n        return word[i];",
    "        // Write your code here\n        if (word.Length < 2) return \"\";\n        int i = word.Length - 1;\n        while (i >= 0) {\n            if (isVowel(word[i])) return word[i];\n            i--;\n        }\n        return \"\";",
    "        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0)\n            return \"\";\n        i--;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0)\n            return \"\";\n        return word[i];",
    "        if (word == null || word.Length == 0) return \"\";\n        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i == -1) return \"\";\n        i--;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i == -1) return \"\";\n        return word[i];",
    "        // Write your code here\n        if (word.Length < 2) return \"\";\n        int left = 0;\n        int right = word.Length - 1;\n        while (left < right) {\n            if (word[left] == 'a' || word[left] == 'e' || word[left] == 'i' || word[left] == 'o' || word[left] == 'u') {\n                left++;\n                continue;\n            }\n            if (word[right] == 'a' || word[right] == 'e' || word[right] == 'i' || word[right] == 'o' || word[right] == 'u') {\n                right--;\n                continue;\n            }\n            if (word[left] == 'y' && word[right] == 'r') {\n                return \"y\";\n            }\n            if (word[left] == 'i' && word[right] == 'n') {\n                return \"i\";\n            }\n            if (word[left] == 'e' && word[right] == 'r') {\n                return \"e\";\n            }\n            if (word[left] == 'o' && word[right] == 'u') {\n                return \"o\";\n            }\n            if (word[left] == 'u' && word[right] == 'y') {\n                return \"u\";\n            }\n            if (word[left] == 'a' && word[right] == 'a') {\n                return \"a\";\n            }\n            if (word[left] == 'e' && word[right] == 'e') {\n                return \"e\";\n            }\n            if (word[left] == 'i' && word[right] == 'i') {\n                return \"i\";\n            }\n            if (word[left] == 'o' && word[right] == 'o') {\n                return \"o\";\n            }\n            if (word[left] == 'u' && word[right] == 'u') {\n                return \"u\";\n            }\n            if (word[left] == 'y' && word[right] == 'y') {\n                return \"y\";\n            }\n            if (",
    "        if (word == null || word.Length == 0)\n            return \"\";\n        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i == -1)\n            return \"\";\n        if (word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u')\n            return word[i];\n        i--;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i == -1)\n            return \"\";\n        if (word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u')\n            return word[i];\n        return \"\";",
    "        // Write your code here\n        if (word.Length < 2) return \"\";\n        int i = word.Length - 1;\n        while (i >= 0) {\n            if (word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u')\n                return word[i];\n            i--;\n        }\n        return \"\";",
    "        if (word == null || word.Length == 0) return \"\";\n        int left = 0;\n        int right = word.Length - 1;\n        while (left < right) {\n            if (word[left] == 'a' || word[left] == 'e' || word[left] == 'i' || word[left] == 'o' || word[left] == 'u') {\n                left++;\n                continue;\n            }\n            if (word[right] == 'a' || word[right] == 'e' || word[right] == 'i' || word[right] == 'o' || word[right] == 'u') {\n                right--;\n                continue;\n            }\n            if (word[left] == 'y' && word[right] == 'r') {\n                return \"y\";\n            }\n            if (word[left] == 'y') {\n                return \"y\";\n            }\n            if (word[right] == 'r') {\n                return \"r\";\n            }\n            if (word[left] == 'e' && word[right] == 'i') {\n                return \"e\";\n            }\n            if (word[left] == 'e') {\n                return \"e\";\n            }\n            if (word[right] == 'i') {\n                return \"i\";\n            }\n            if (word[left] == 'o' && word[right] == 'u') {\n                return \"o\";\n            }\n            if (word[left] == 'o') {\n                return \"o\";\n            }\n            if (word[right] == 'u') {\n                return \"u\";\n            }\n            if (word[left] == 'a' && word[right] == 'e') {\n                return \"a\";\n            }\n            if (word[left] == 'a') {\n                return \"a\";\n            }\n            if (word[right] == 'e') {\n                return \"e\";\n            }\n            if (word[left] == 'i' && word[right] == 'o') {\n                return \"i\";\n            }\n            if (word[left] == 'i') {\n                return \"",
    "        if (word == null || word.Length == 0) return \"\";\n        int i = word.Length - 1;\n        while (i >= 0) {\n            if (word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u') {\n                return word[i];\n            }\n            i--;\n        }\n        return \"\";",
    "        // Write your code here\n        if (word.Length == 0) return \"\";\n        int i = word.Length - 1;\n        while (i >= 0) {\n            if (word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u') {\n                return word[i];\n            }\n            i--;\n        }\n        return \"\";",
    "        string vowels = \"aeiouAEIOU\";\n        int i = 0;\n        while (i < word.Length - 1) {\n            if (vowels.IndexOf(word[i]) != -1 && vowels.IndexOf(word[i + 1]) != -1) {\n                return word.Substring(i, 2);\n            }\n            i++;\n        }\n        return \"\";",
    "        if (word == null || word.Length == 0)\n            return \"\";\n        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0)\n            return \"\";\n        if (i == 0)\n            return \"\";\n        if (word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u')\n            return word[i];\n        if (word[i - 1] == 'a' || word[i - 1] == 'e' || word[i - 1] == 'i' || word[i - 1] == 'o' || word[i - 1] == 'u')\n            return word[i - 1];\n        return \"\";",
    "        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i >= 0) {\n            i++;\n            while (i < word.Length && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n                i++;\n            if (i < word.Length)\n                return word.Substring(i, 1);\n        }\n        return \"\";",
    "        // Write your code here\n        if (word.Length < 2)\n            return \"\";\n        int i = word.Length - 1;\n        while (i >= 0) {\n            if (word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u')\n                return word[i];\n            i--;\n        }\n        return \"\";",
    "        int i = 0;\n        while (i < word.Length - 1) {\n            if (isVowel(word[i]) && isConsonant(word[i + 1])) {\n                return word[i + 1];\n            }\n            i++;\n        }\n        return \"\";\n    }\n\n    private static bool isVowel(char c) {\n        return c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U';\n    }\n\n    private static bool isConsonant(char c) {\n        return c == 'b' || c == 'c' || c == 'd' || c == 'f' || c == 'g' || c == 'h' || c == 'j' || c == 'k' || c == 'l' || c == 'm' || c == 'n' || c == 'p' || c == 'q' || c == 'r' || c == 's' || c == 't' || c == 'v' || c == 'w' || c == 'x' || c == 'y' || c == 'z';",
    "        string vowels = \"aeiouAEIOU\";\n        int left = 0;\n        int right = word.Length - 1;\n        while (left < right) {\n            if (vowels.IndexOf(word[left]) != -1) {\n                return word[left];\n            }\n            if (vowels.IndexOf(word[right]) != -1) {\n                return word[right];\n            }\n            left++;\n            right--;\n        }\n        return \"\";",
    "        // Write your code here\n        int i = word.Length - 1;\n        while (i >= 0) {\n            if (word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u') {\n                return word[i];\n            }\n            i--;\n        }\n        return \"\";",
    "        // Write your code here\n        if (word.Length < 2) return \"\";\n        int i = word.Length - 1;\n        while (i >= 0) {\n            if (word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u')\n                return word[i];\n            i--;\n        }\n        return \"\";",
    "        if (word == null || word.Length == 0) return \"\";\n        int i = word.Length - 1;\n        while (i >= 0) {\n            char c = word[i];\n            if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n                return word.Substring(i, 1);\n            }\n            i--;\n        }\n        return \"\";",
    "        var vowels = new char[] { 'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U' };\n        var consonants = new char[] { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        var vowelsCount = 0;\n        var consonantsCount = 0;\n        var result = \"\";\n        for (var i = 0; i < word.Length; i++) {\n            if (vowels.Contains(word[i])) {\n                vowelsCount++;\n                if (vowelsCount > 1) {\n                    return \"\";\n                }\n                if (i > 0 && consonants.Contains(word[i - 1])) {\n                    result = word[i];\n                    break;\n                }\n            }\n            else if (consonants.Contains(word[i])) {\n                consonantsCount++;\n                if (consonantsCount > 1) {\n                    return \"\";\n                }\n                if (i > 0 && vowels.Contains(word[i - 1])) {\n                    result = word[i];\n                    break;\n                }\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (word == null || word.Length == 0) return \"\";\n        int i = word.Length - 1;\n        while (i >= 0) {\n            char c = word[i];\n            if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n                return word.Substring(i, 1);\n            }\n            i--;\n        }\n        return \"\";",
    "        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0)\n            return \"\";\n        i--;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0)\n            return \"\";\n        return word[i];",
    "        if (word == null || word.Length == 0) {\n            return \"\";\n        }\n        int left = 0;\n        int right = word.Length - 1;\n        while (left < right) {\n            if (isVowel(word[left]) && isConsonant(word[right])) {\n                return word.Substring(left, right - left + 1);\n            }\n            if (isVowel(word[right])) {\n                right--;\n            }\n            else {\n                left++;\n            }\n        }\n        return \"\";\n    }\n\n    private static bool isVowel(char c) {\n        return c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U';\n    }\n\n    private static bool isConsonant(char c) {\n        return c == 'b' || c == 'c' || c == 'd' || c == 'f' || c == 'g' || c == 'h' || c == 'j' || c == 'k' || c == 'l' || c == 'm' || c == 'n' || c == 'p' || c == 'q' || c == 'r' || c == 's' || c == 't' || c == 'v' || c == 'w' || c == 'x' || c == 'y' || c == 'z';",
    "        var vowels = new char[] { 'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U' };\n        var consonants = new char[] { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        var vowels_count = 0;\n        var consonants_count = 0;\n        var result = \"\";\n        for (var i = 0; i < word.Length; i++) {\n            if (vowels.Contains(word[i])) {\n                vowels_count++;\n                if (vowels_count == 2) {\n                    result = word[i];\n                    break;\n                }\n            }\n            else if (consonants.Contains(word[i])) {\n                consonants_count++;\n                if (consonants_count == 2) {\n                    result = word[i];\n                    break;\n                }\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (word.Length == 0)\n            return \"\";\n        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0)\n            return \"\";\n        int j = word.Length - 1;\n        while (j >= 0 && word[j] != 'a' && word[j] != 'e' && word[j] != 'i' && word[j] != 'o' && word[j] != 'u')\n            j--;\n        if (j < 0)\n            return \"\";\n        if (i == j)\n            return word[i];\n        if (i < j)\n            return word[i];\n        return word[j];",
    "        string vowels = \"aeiouAEIOU\";\n        int i = 0;\n        while (i < word.Length - 1) {\n            if (vowels.Contains(word[i])) {\n                i++;\n            }\n            else if (vowels.Contains(word[i + 1])) {\n                return word.Substring(i, 2);\n            }\n            else {\n                i++;\n            }\n        }\n        return \"\";",
    "        int[] vowels = {'a', 'e', 'i', 'o', 'u'};\n        int[] consonants = {'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'};\n        int[] consonantIndex = {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1};\n        for (int i = 0; i < word.Length; i++) {\n            if (vowels.Contains(word[i])) {\n                vowelIndex = i;\n                break;\n            }\n            for (int j = 0; j < consonants.Length; j++) {\n                if (word[i] == consonants[j]) {\n                    consonantIndex[j] = i;\n                    break;\n                }\n            }\n        }\n        if (vowelIndex == -1 || consonantIndex[0] == -1 || consonantIndex[1] == -1) {\n            return \"\";\n        }\n        int left = vowelIndex;\n        int right = vowelIndex;\n        for (int i = 0; i < consonantIndex[0]; i++) {\n            if (vowels.Contains(word[i])) {\n                left = i;\n                break;\n            }\n        }\n        for (int i = consonantIndex[1]; i < word.Length; i++) {\n            if (vowels.Contains(word[i])) {\n                right = i;\n                break;\n            }\n        }\n        if (left == right) {\n            return \"\";\n        }\n        return word.Substring(left + 1, right - left - 1);",
    "        // Write your code here\n        if (word.Length < 2) return \"\";\n        int i = word.Length - 1;\n        while (i >= 0) {\n            if (word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u') return word[i];\n            i--;\n        }\n        return \"\";",
    "        if (word == null) return \"\";\n        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0) return \"\";\n        int j = i + 1;\n        while (j < word.Length && word[j] != 'a' && word[j] != 'e' && word[j] != 'i' && word[j] != 'o' && word[j] != 'u')\n            j++;\n        if (j == word.Length) return \"\";\n        return word.Substring(i + 1, j - i - 1);",
    "        // Write your code here\n        if (word == null || word.Length == 0)\n            return \"\";\n        int start = 0;\n        int end = word.Length - 1;\n        while (start < end) {\n            if (isVowel(word[start]) && isVowel(word[end])) {\n                return word[start];\n            }\n            else if (isVowel(word[start])) {\n                start++;\n            }\n            else if (isVowel(word[end])) {\n                end--;\n            }\n            else {\n                start++;\n                end--;\n            }\n        }\n        return \"\";\n    }\n\n    private static bool isVowel(char c) {\n        return c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U';",
    "        // Write your code here\n        int i = word.Length - 1;\n        while (i >= 0) {\n            if (word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u') {\n                return word[i];\n            }\n            i--;\n        }\n        return \"\";",
    "        if (word == null || word.Length == 0)\n            return \"\";\n        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0)\n            return \"\";\n        i--;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0)\n            return \"\";\n        return word[i];",
    "        // Write your code here\n        if (word == null || word.Length == 0)\n            return \"\";\n        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0)\n            return \"\";\n        i++;\n        while (i < word.Length && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i++;\n        return word.Substring(i, 1);",
    "        int[] vowels = {'a', 'e', 'i', 'o', 'u'};\n        int[] consonants = {'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'};\n        int[] consonantIndex = new int[26];\n        for (int i = 0; i < consonants.Length; i++) {\n            consonantIndex[consonants[i] - 'a'] = i;\n        }\n        int[] vowelIndex = new int[26];\n        for (int i = 0; i < vowels.Length; i++) {\n            vowelIndex[vowels[i] - 'a'] = i;\n        }\n        int consonantIndexCount = 0;\n        int vowelIndexCount = 0;\n        int consonantIndexIndex = 0;\n        int vowelIndexIndex = 0;\n        int consonantIndexIndexEnd = 0;\n        int vowelIndexIndexEnd = 0;\n        for (int i = 0; i < word.Length; i++) {\n            if (word[i] == ' ') {\n                continue;\n            }\n            if (word[i] >= 'a' && word[i] <= 'z') {\n                if (vowelIndexIndex < vowelIndex.Length) {\n                    vowelIndexIndex++;\n                    if (vowelIndexIndex == vowelIndex.Length) {\n                        vowelIndexIndex = 0;\n                    }\n                }\n                if (consonantIndexIndex < consonantIndex.Length) {\n                    consonantIndexIndex++;\n                    if (consonantIndexIndex == consonantIndex.Length) {\n                        consonantIndexIndex = 0;\n                    }\n                }\n                continue;\n            }\n            if (word[i] >= 'A' && word[i] <= 'Z') {\n                if (vowelIndexIndex < vowelIndex.Length) {\n                    vowelIndexIndex++;\n                    if (vowelIndexIndex == vowelIndex.Length) {\n                        vowelIndex",
    "        // Write your code here\n        if (word == null || word.Length == 0)\n            return \"\";\n        int left = 0;\n        int right = word.Length - 1;\n        while (left < right) {\n            if (isVowel(word[left]) && isVowel(word[right])) {\n                return word[left];\n            }\n            else if (isVowel(word[left])) {\n                left++;\n            }\n            else if (isVowel(word[right])) {\n                right--;\n            }\n            else {\n                left++;\n                right--;\n            }\n        }\n        return \"\";\n    }\n\n    private static bool isVowel(char c) {\n        return c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U';",
    "        if (word == null || word.Length < 2) return \"\";\n        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0) return \"\";\n        i++;\n        while (i < word.Length && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i++;\n        if (i == word.Length) return \"\";\n        return word[i];",
    "        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i == -1)\n            return \"\";\n        i--;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i == -1)\n            return \"\";\n        return word[i];",
    "        if (word == null || word.Length == 0)\n            return \"\";\n        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i == -1)\n            return \"\";\n        int j = i + 1;\n        while (j < word.Length && word[j] != 'a' && word[j] != 'e' && word[j] != 'i' && word[j] != 'o' && word[j] != 'u')\n            j++;\n        if (j == word.Length)\n            return \"\";\n        return word[i] + word[j];",
    "        var vowels = new char[] {'a', 'e', 'i', 'o', 'u'};\n        var consonants = new char[] {'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'};\n        var vowels_count = 0;\n        var consonants_count = 0;\n        var result = \"\";\n        for (var i = 0; i < word.Length; i++) {\n            if (vowels.Contains(word[i])) {\n                vowels_count++;\n                if (vowels_count == 2) {\n                    result = word[i];\n                    break;\n                }\n            }\n            else if (consonants.Contains(word[i])) {\n                consonants_count++;\n                if (consonants_count == 2) {\n                    result = word[i];\n                    break;\n                }\n            }\n        }\n        return result;",
    "        string vowels = \"aeiouAEIOU\";\n        int index = 0;\n        while (index < word.Length - 1) {\n            if (vowels.IndexOf(word[index]) != -1 && vowels.IndexOf(word[index + 1]) != -1) {\n                return word.Substring(index, 2);\n            }\n            index++;\n        }\n        return \"\";",
    "        // Write your code here\n        int index = word.Length - 1;\n        while (index >= 0) {\n            char c = word[index];\n            if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n                return word.Substring(index, 1);\n            }\n            index--;\n        }\n        return \"\";",
    "        int i = 0;\n        while (i < word.Length - 1) {\n            if (isVowel(word[i]) && !isVowel(word[i + 1])) {\n                return word[i + 1];\n            }\n            i++;\n        }\n        return \"\";\n    }\n\n    private static bool isVowel(char c) {\n        return c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U';",
    "        // Write your code here\n        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0)\n            return \"\";\n        i--;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0)\n            return \"\";\n        return word[i];",
    "        // your code goes here\n        if (word == null || word.Length == 0) return \"\";\n        int i = word.Length - 1;\n        while (i >= 0) {\n            char c = word[i];\n            if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n                return word.Substring(i, 1);\n            }\n            i--;\n        }\n        return \"\";",
    "        if (word == null) return \"\";\n        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0) return \"\";\n        i--;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0) return \"\";\n        return word[i];",
    "        // Write your code here\n        return \"\";",
    "        // Write your code here\n        if (word == null || word.Length == 0) {\n            return \"\";\n        }\n        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u') {\n            i--;\n        }\n        if (i == -1) {\n            return \"\";\n        }\n        i++;\n        while (i < word.Length && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u') {\n            i++;\n        }\n        if (i == word.Length) {\n            return \"\";\n        }\n        return word[i];",
    "        int i = 0;\n        while (i < word.Length - 1) {\n            if (isVowel(word[i]) && !isVowel(word[i + 1])) {\n                return word.Substring(i, 1);\n            }\n            i++;\n        }\n        return \"\";\n    }\n\n    private static bool isVowel(char c) {\n        return c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U';",
    "        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u') {\n            i--;\n        }\n        if (i >= 0) {\n            return word[i];\n        }\n        return \"\";",
    "        if (word == null || word.Length == 0) return \"\";\n        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i == -1) return \"\";\n        i++;\n        while (i < word.Length - 1 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i++;\n        if (i == word.Length - 1) return \"\";\n        return word[i];",
    "        // Write your code here\n        int i = 0;\n        while (i < word.Length - 1) {\n            if (word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u') {\n                i++;\n                continue;\n            }\n            if (word[i] == 'y') {\n                i++;\n                continue;\n            }\n            if (word[i] == 'h') {\n                i++;\n                continue;\n            }\n            if (word[i] == 'w') {\n                i++;\n                continue;\n            }\n            if (word[i] == 'c') {\n                i++;\n                continue;\n            }\n            if (word[i] == 'r') {\n                i++;\n                continue;\n            }\n            if (word[i] == 's') {\n                i++;\n                continue;\n            }\n            if (word[i] == 't') {\n                i++;\n                continue;\n            }\n            if (word[i] == 'n') {\n                i++;\n                continue;\n            }\n            if (word[i] == 'l') {\n                i++;\n                continue;\n            }\n            if (word[i] == 'd') {\n                i++;\n                continue;\n            }\n            if (word[i] == 'g') {\n                i++;\n                continue;\n            }\n            if (word[i] == 'b') {\n                i++;\n                continue;\n            }\n            if (word[i] == 'p') {\n                i++;\n                continue;\n            }\n            if (word[i] == 'm') {\n                i++;\n                continue;\n            }\n            if (word[i] == 'f') {\n                i++;\n                continue;\n            }\n            if (word[i] == 'v') {\n                i++;\n                continue;\n            }\n            if (word[i] == 'z') {\n                i++;\n                continue;\n            }\n            if (word[i] == 'x') {\n                i++;\n",
    "        // Write your code here\n        if (word.Length < 2) return \"\";\n        int i = word.Length - 1;\n        while (i >= 0) {\n            if (isVowel(word[i])) return word[i];\n            i--;\n        }\n        return \"\";\n    }\n\n    private static bool isVowel(char c) {\n        return c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U';",
    "        int i = word.Length - 1;\n        while (i >= 0) {\n            if (word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u')\n                return word[i];\n            i--;\n        }\n        return \"\";",
    "        // Write your code here\n        if (word.Length == 0) return \"\";\n        int i = word.Length - 1;\n        while (i >= 0) {\n            char c = word[i];\n            if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n                return word.Substring(i, 1);\n            }\n            i--;\n        }\n        return \"\";",
    "        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0)\n            return \"\";\n        int j = i + 1;\n        while (j < word.Length && word[j] != 'a' && word[j] != 'e' && word[j] != 'i' && word[j] != 'o' && word[j] != 'u')\n            j++;\n        return word.Substring(i + 1, j - i - 1);",
    "        if (word == null || word.Length == 0)\n            return \"\";\n        int left = 0;\n        int right = word.Length - 1;\n        while (left < right) {\n            if (isVowel(word[left]) && isConsonant(word[right]))\n                return word[left];\n            else if (isVowel(word[right]))\n                return word[right];\n            else if (isConsonant(word[left]))\n                left++;\n            else\n                right--;\n        }\n        return \"\";\n    }\n\n    private static bool isVowel(char c) {\n        return c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U';\n    }\n\n    private static bool isConsonant(char c) {\n        return c == 'b' || c == 'c' || c == 'd' || c == 'f' || c == 'g' || c == 'h' || c == 'j' || c == 'k' || c == 'l' || c == 'm' || c == 'n' || c == 'p' || c == 'q' || c == 'r' || c == 's' || c == 't' || c == 'v' || c == 'w' || c == 'x' || c == 'y' || c == 'z';",
    "        if (word == null || word.Length == 0) return \"\";\n        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0) return \"\";\n        i--;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0) return \"\";\n        return word[i];",
    "        int i = 0;\n        while (i < word.Length - 1) {\n            if (word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u') {\n                return word[i];\n            }\n            i++;\n        }\n        return \"\";",
    "        // Write your code here\n        if (word.Length < 2) return \"\";\n        int i = word.Length - 1;\n        while (i >= 0) {\n            if (word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u')\n                return word[i];\n            i--;\n        }\n        return \"\";",
    "        if (word == null || word.Length == 0)\n            return \"\";\n        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0)\n            return \"\";\n        i--;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0)\n            return \"\";\n        return word[i];",
    "        if (word == null) return \"\";\n        if (word.Length == 0) return \"\";\n        if (word.Length == 1) return \"\";\n        if (word.Length == 2) return \"\";\n        if (word.Length == 3) return \"\";\n        if (word.Length == 4) return \"\";\n        if (word.Length == 5) return \"\";\n        if (word.Length == 6) return \"\";\n        if (word.Length == 7) return \"\";\n        if (word.Length == 8) return \"\";\n        if (word.Length == 9) return \"\";\n        if (word.Length == 10) return \"\";\n        if (word.Length == 11) return \"\";\n        if (word.Length == 12) return \"\";\n        if (word.Length == 13) return \"\";\n        if (word.Length == 14) return \"\";\n        if (word.Length == 15) return \"\";\n        if (word.Length == 16) return \"\";\n        if (word.Length == 17) return \"\";\n        if (word.Length == 18) return \"\";\n        if (word.Length == 19) return \"\";\n        if (word.Length == 20) return \"\";\n        if (word.Length == 21) return \"\";\n        if (word.Length == 22) return \"\";\n        if (word.Length == 23) return \"\";\n        if (word.Length == 24) return \"\";\n        if (word.Length == 25) return \"\";\n        if (word.Length == 26) return \"\";\n        if (word.Length == 27) return \"\";\n        if (word.Length == 28) return \"\";\n        if (word.Length == 29) return \"\";\n        if (word.Length == 30) return \"\";\n        if (word.Length == 31) return \"\";\n        if (word.Length == 32) return \"\";\n        if (word.Length == 33) return \"\";\n        if (word.Length == 34) return \"\";\n        if (word.Length == 35) return \"\";\n        if (word.Length == 36) return \"\";\n        if (word.Length == 37) return \"\";\n        if (word.Length ==",
    "        // Write your code here\n        if (word == null || word.Length == 0) return \"\";\n        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0) return \"\";\n        i++;\n        while (i < word.Length && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i++;\n        if (i >= word.Length) return \"\";\n        return word.Substring(i, 1);",
    "        // Write your code here\n        if (word.Length < 2) return \"\";\n        int left = 0;\n        int right = word.Length - 1;\n        while (left < right) {\n            if (isVowel(word[left]) && isVowel(word[right])) {\n                return word[left];\n            }\n            if (isVowel(word[left])) {\n                left++;\n            }\n            else if (isVowel(word[right])) {\n                right--;\n            }\n            else {\n                left++;\n                right--;\n            }\n        }\n        return \"\";",
    "        // Write your code here\n        if (word.Length < 2) return \"\";\n        int i = word.Length - 1;\n        while (i >= 0) {\n            if (word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u')\n                return word[i];\n            i--;\n        }\n        return \"\";",
    "        if (word == null || word.Length == 0) return \"\";\n        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0) return \"\";\n        i++;\n        while (i < word.Length && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i++;\n        if (i == word.Length) return \"\";\n        return word.Substring(i, 1);",
    "        // Write your code here\n        if (word.Length == 0)\n            return \"\";\n        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i == -1)\n            return \"\";\n        if (word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u')\n            return word[i];\n        else\n            return \"\";",
    "        // Write your code here\n        if (word == null || word.Length == 0)\n            return \"\";\n        int i = word.Length - 1;\n        while (i >= 0) {\n            if (word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u')\n                return word[i];\n            i--;\n        }\n        return \"\";",
    "        // Write your code here\n        int i = word.Length - 1;\n        while (i >= 0) {\n            if (word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u') {\n                return word[i];\n            }\n            i--;\n        }\n        return \"\";",
    "        int[] vowels = {'a', 'e', 'i', 'o', 'u'};\n        int[] consonants = {'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'};\n        int[] consonantIndex = new int[26];\n        for (int i = 0; i < consonants.Length; i++) {\n            consonantIndex[consonants[i] - 'a'] = i;\n        }\n        int[] vowelIndex = new int[26];\n        for (int i = 0; i < vowels.Length; i++) {\n            vowelIndex[vowels[i] - 'a'] = i;\n        }\n        int[] consonantCount = new int[26];\n        for (int i = 0; i < word.Length; i++) {\n            if (vowelIndex[word[i] - 'a'] != -1) {\n                vowelIndex[word[i] - 'a'] = -1;\n            }\n            else {\n                consonantCount[consonantIndex[word[i] - 'a']]++;\n            }\n        }\n        int closestVowel = -1;\n        int closestVowelDistance = word.Length;\n        for (int i = 0; i < word.Length; i++) {\n            if (vowelIndex[word[i] - 'a'] != -1) {\n                if (closestVowel == -1) {\n                    closestVowel = word[i];\n                    closestVowelDistance = i;\n                }\n                else {\n                    if (i - closestVowelDistance < closestVowelDistance - i) {\n                        closestVowel = word[i];\n                        closestVowelDistance = i;\n                    }\n                }\n            }\n        }\n        if (closestVowel == -1) {\n            return \"\";\n        }\n        else {\n            return word.",
    "        // Write your code here\n        int i = 0;\n        while (i < word.Length - 1) {\n            if (word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u') {\n                break;\n            }\n            i++;\n        }\n        if (i == word.Length - 1) {\n            return \"\";\n        }\n        int j = word.Length - 1;\n        while (j > i) {\n            if (word[j] == 'a' || word[j] == 'e' || word[j] == 'i' || word[j] == 'o' || word[j] == 'u') {\n                return word[j];\n            }\n            j--;\n        }\n        return \"\";",
    "        // Write your code here\n        if (word.Length < 2) return \"\";\n        int i = word.Length - 2;\n        while (i >= 0) {\n            if (word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u') {\n                return word[i];\n            }\n            i--;\n        }\n        return \"\";",
    "        if (word == null || word.Length == 0) return \"\";\n        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0) return \"\";\n        i++;\n        while (i < word.Length && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i++;\n        if (i >= word.Length) return \"\";\n        return word[i];",
    "        // Write your code here\n        if (word.Length < 2) return \"\";\n        int i = word.Length - 1;\n        while (i >= 0) {\n            if (word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u')\n                return word[i];\n            i--;\n        }\n        return \"\";",
    "        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0)\n            return \"\";\n        i--;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0)\n            return \"\";\n        return word[i];",
    "        int i = word.Length - 1;\n        while (i >= 0) {\n            char c = word[i];\n            if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n                return word.Substring(i, 1);\n            }\n            i--;\n        }\n        return \"\";",
    "        // Write your code here\n        if (word.Length < 2)\n            return \"\";\n        int left = 0;\n        int right = word.Length - 1;\n        while (left < right) {\n            if (word[left] == 'a' || word[left] == 'e' || word[left] == 'i' || word[left] == 'o' || word[left] == 'u')\n                left++;\n            else if (word[right] == 'a' || word[right] == 'e' || word[right] == 'i' || word[right] == 'o' || word[right] == 'u')\n                right--;\n            else\n                break;\n        }\n        if (left == right)\n            return \"\";\n        return word.Substring(left, right - left + 1);",
    "        // Write your code here\n        if (word.Length == 0) return \"\";\n        int left = 0;\n        int right = word.Length - 1;\n        while (left < right) {\n            if (word[left] == 'a' || word[left] == 'e' || word[left] == 'i' || word[left] == 'o' || word[left] == 'u') {\n                left++;\n            }\n            else if (word[right] == 'a' || word[right] == 'e' || word[right] == 'i' || word[right] == 'o' || word[right] == 'u') {\n                right--;\n            }\n            else {\n                break;\n            }\n        }\n        if (left == right) return \"\";\n        return word[left];",
    "        // Write your code here\n        if (word.Length < 2) return \"\";\n        int left = 0;\n        int right = word.Length - 1;\n        while (left < right) {\n            if (word[left] != word[right]) {\n                if (isVowel(word[left]) && isVowel(word[right])) {\n                    return word[left];\n                }\n                else if (isVowel(word[left])) {\n                    return word[right];\n                }\n                else if (isVowel(word[right])) {\n                    return word[left];\n                }\n            }\n            left++;\n            right--;\n        }\n        return \"\";",
    "        // Write your code here\n        if (word.Length == 0) return \"\";\n        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i == -1) return \"\";\n        i++;\n        while (i < word.Length && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i++;\n        if (i == word.Length) return \"\";\n        return word[i];",
    "        int[] vowels = {'a', 'e', 'i', 'o', 'u'};\n        int[] consonants = {'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'};\n        int[] consonantPos = new int[26];\n        int[] vowelPos = new int[26];\n        for (int i = 0; i < consonants.Length; i++) {\n            consonantPos[i] = word.LastIndexOf(consonants[i]);\n        }\n        for (int i = 0; i < vowels.Length; i++) {\n            vowelPos[i] = word.LastIndexOf(vowels[i]);\n        }\n        int closestVowel = -1;\n        int closestVowelDistance = 0;\n        for (int i = 0; i < vowels.Length; i++) {\n            if (vowelPos[i] != -1 && vowelPos[i] > consonantPos[vowels[i]]) {\n                int distance = vowelPos[i] - consonantPos[vowels[i]];\n                if (distance > closestVowelDistance) {\n                    closestVowel = vowels[i];\n                    closestVowelDistance = distance;\n                }\n            }\n        }\n        if (closestVowel != -1) {\n            return word.Substring(closestVowel + 1, word.Length - closestVowel - 1);\n        }\n        return \"\";",
    "        if (word == null || word.Length == 0)\n            return \"\";\n        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i == -1)\n            return \"\";\n        i--;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i == -1)\n            return \"\";\n        return word[i];",
    "        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0)\n            return \"\";\n        int j = i + 1;\n        while (j < word.Length && word[j] != 'a' && word[j] != 'e' && word[j] != 'i' && word[j] != 'o' && word[j] != 'u')\n            j++;\n        return word.Substring(i + 1, j - i - 1);",
    "        var vowels = new char[] {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'};\n        var consonants = new char[] {'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'};\n        var vowelsCount = 0;\n        var consonantsCount = 0;\n        var result = \"\";\n        for (var i = 0; i < word.Length; i++) {\n            if (vowels.Contains(word[i])) {\n                vowelsCount++;\n                if (vowelsCount > 1) {\n                    result = word[i];\n                    break;\n                }\n            }\n            else if (consonants.Contains(word[i])) {\n                consonantsCount++;\n                if (consonantsCount > 1) {\n                    result = word[i];\n                    break;\n                }\n            }\n        }\n        return result;",
    "        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0)\n            return \"\";\n        i--;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0)\n            return \"\";\n        return word[i];",
    "        string vowels = \"aeiouAEIOU\";\n        int i = 0;\n        while (i < word.Length - 1) {\n            if (vowels.IndexOf(word[i]) != -1 && vowels.IndexOf(word[i + 1]) != -1) {\n                return word[i + 1];\n            }\n            i++;\n        }\n        return \"\";",
    "        int i = 0;\n        while (i < word.Length - 1) {\n            if (word[i] != word[i + 1]) {\n                if (word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u') {\n                    return word[i];\n                }\n                if (word[i] == 'y') {\n                    if (word[i + 1] == 'a' || word[i + 1] == 'e' || word[i + 1] == 'i' || word[i + 1] == 'o' || word[i + 1] == 'u') {\n                        return word[i + 1];\n                    }\n                }\n            }\n            i++;\n        }\n        return \"\";",
    "        // Write your code here\n        if (word == null || word.Length == 0) {\n            return \"\";\n        }\n        int left = 0;\n        int right = word.Length - 1;\n        while (left < right) {\n            if (isVowel(word[left]) && isVowel(word[right])) {\n                return word[left];\n            }\n            if (isVowel(word[left])) {\n                left++;\n            }\n            else if (isVowel(word[right])) {\n                right--;\n            }\n            else {\n                left++;\n                right--;\n            }\n        }\n        return \"\";\n    }\n\n    private static bool isVowel(char c) {\n        return c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U';",
    "        // Write your code here\n        int i = 0;\n        while (i < word.Length - 1) {\n            if (isVowel(word[i]) && isVowel(word[i + 1])) {\n                return word[i + 1];\n            }\n            i++;\n        }\n        return \"\";\n    }\n\n    private static bool isVowel(char c) {\n        return c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U';",
    "        string vowels = \"aeiouAEIOU\";\n        int i = 0;\n        while (i < word.Length - 1) {\n            if (vowels.IndexOf(word[i]) != -1 && vowels.IndexOf(word[i + 1]) != -1) {\n                return word.Substring(i, 2);\n            }\n            i++;\n        }\n        return \"\";",
    "        if (word == null || word.Length == 0) return \"\";\n        int count = 0;\n        for (int i = word.Length - 1; i >= 0; i--) {\n            if (word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u') {\n                count++;\n                if (count == 2) return word[i];\n            }\n        }\n        return \"\";",
    "        if (word == null || word.Length == 0) return \"\";\n        int i = word.Length - 1;\n        while (i >= 0) {\n            if (word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u') return word[i];\n            if (word[i] == 'y') return word[i];\n            if (word[i] == 'w') return word[i];\n            if (word[i] == 'h') return word[i];\n            if (word[i] == 'b') return word[i];\n            if (word[i] == 'c') return word[i];\n            if (word[i] == 'd') return word[i];\n            if (word[i] == 'f') return word[i];\n            if (word[i] == 'g') return word[i];\n            if (word[i] == 'j') return word[i];\n            if (word[i] == 'k') return word[i];\n            if (word[i] == 'l') return word[i];\n            if (word[i] == 'm') return word[i];\n            if (word[i] == 'n') return word[i];\n            if (word[i] == 'p') return word[i];\n            if (word[i] == 'q') return word[i];\n            if (word[i] == 'r') return word[i];\n            if (word[i] == 's') return word[i];\n            if (word[i] == 't') return word[i];\n            if (word[i] == 'v') return word[i];\n            if (word[i] == 'x') return word[i];\n            if (word[i] == 'z') return word[i];\n            if (word[i] == '1') return word[i];\n            if (word[i] == '2') return word[i];\n            if (word[i] == '3') return word[i];\n            if (word[i] == '4') return word[",
    "        // Write your code here\n        return \"\";",
    "        // your code goes here\n        if (word == null || word.Length == 0) return \"\";\n        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i == -1) return \"\";\n        i++;\n        while (i < word.Length - 1 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i++;\n        return word.Substring(i, 1);",
    "        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i == -1)\n            return \"\";\n        int j = i + 1;\n        while (j < word.Length && word[j] != 'a' && word[j] != 'e' && word[j] != 'i' && word[j] != 'o' && word[j] != 'u')\n            j++;\n        if (j == word.Length)\n            return \"\";\n        return word[i] + word[j];",
    "        // Write your code here\n        if (word == null || word.Length == 0) {\n            return \"\";\n        }\n        int left = 0;\n        int right = word.Length - 1;\n        while (left < right) {\n            if (word[left] == 'a' || word[left] == 'e' || word[left] == 'i' || word[left] == 'o' || word[left] == 'u') {\n                left++;\n            }\n            else if (word[right] == 'a' || word[right] == 'e' || word[right] == 'i' || word[right] == 'o' || word[right] == 'u') {\n                right--;\n            }\n            else {\n                break;\n            }\n        }\n        if (left == right) {\n            return \"\";\n        }\n        else {\n            return word[left];\n        }",
    "        if (word == null || word.Length == 0) return \"\";\n        string vowels = \"aeiouAEIOU\";\n        int left = 0;\n        int right = word.Length - 1;\n        while (left < right) {\n            if (vowels.IndexOf(word[left]) != -1 && vowels.IndexOf(word[right]) != -1) {\n                return word.Substring(left, right - left + 1);\n            }\n            if (vowels.IndexOf(word[left]) != -1) {\n                left++;\n            }\n            else if (vowels.IndexOf(word[right]) != -1) {\n                right--;\n            }\n            else {\n                left++;\n                right--;\n            }\n        }\n        return \"\";",
    "        // Write your code here\n        int count = 0;\n        for (int i = word.Length - 1; i >= 0; i--) {\n            if (word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u') {\n                count++;\n            }\n            else if (word[i] == 'y') {\n                count++;\n                if (count == 2) {\n                    return word[i];\n                }\n            }\n            else if (word[i] == 'h') {\n                count++;\n                if (count == 2) {\n                    return word[i];\n                }\n            }\n            else if (word[i] == 'w') {\n                count++;\n                if (count == 2) {\n                    return word[i];\n                }\n            }\n            else if (word[i] == 'p') {\n                count++;\n                if (count == 2) {\n                    return word[i];\n                }\n            }\n            else if (word[i] == 'b') {\n                count++;\n                if (count == 2) {\n                    return word[i];\n                }\n            }\n            else if (word[i] == 'd') {\n                count++;\n                if (count == 2) {\n                    return word[i];\n                }\n            }\n            else if (word[i] == 'g') {\n                count++;\n                if (count == 2) {\n                    return word[i];\n                }\n            }\n            else if (word[i] == 'f') {\n                count++;\n                if (count == 2) {\n                    return word[i];\n                }\n            }\n            else if (word[i] == 'v') {\n                count++;\n                if (count == 2) {\n                    return word[i];\n                }\n            }\n            else if (word[i] == 's') {\n                count++;\n                if (count == 2) {\n                    return word[i];\n                }\n            }\n            else if (word[i] == 'z') {\n                count++;\n                if (",
    "        if (word == null || word.Length == 0)\n            return \"\";\n        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i == -1)\n            return \"\";\n        if (word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u')\n            return word[i];\n        i--;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i == -1)\n            return \"\";\n        if (word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u')\n            return word[i];\n        return \"\";",
    "        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i == -1)\n            return \"\";\n        i++;\n        while (i < word.Length && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i++;\n        return word.Substring(i, 1);",
    "        if (word == null || word.Length == 0) return \"\";\n        int left = 0;\n        int right = word.Length - 1;\n        while (left < right) {\n            if (word[left] == 'a' || word[left] == 'e' || word[left] == 'i' || word[left] == 'o' || word[left] == 'u') {\n                left++;\n                continue;\n            }\n            if (word[right] == 'a' || word[right] == 'e' || word[right] == 'i' || word[right] == 'o' || word[right] == 'u') {\n                right--;\n                continue;\n            }\n            if (word[left] == 'y' && word[right] == 'r') {\n                return \"y\";\n            }\n            if (word[left] == 'i' && word[right] == 'g') {\n                return \"i\";\n            }\n            if (word[left] == 'o' && word[right] == 'g') {\n                return \"o\";\n            }\n            if (word[left] == 'u' && word[right] == 'g') {\n                return \"u\";\n            }\n            if (word[left] == 'a' && word[right] == 'p') {\n                return \"a\";\n            }\n            if (word[left] == 'e' && word[right] == 'p') {\n                return \"e\";\n            }\n            if (word[left] == 'i' && word[right] == 'p') {\n                return \"i\";\n            }\n            if (word[left] == 'o' && word[right] == 'p') {\n                return \"o\";\n            }\n            if (word[left] == 'u' && word[right] == 'p') {\n                return \"u\";\n            }\n            if (word[left] == 'a' && word[right] == 'm') {\n                return \"a\";\n            }\n            if (word[left] == 'e' && word[right] == 'm') {\n                return \"e\";\n            }\n            if (word[left",
    "        // Write your code here\n        if (word.Length < 2) return \"\";\n        int i = word.Length - 1;\n        while (i >= 0) {\n            if (word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u') {\n                return word[i];\n            }\n            i--;\n        }\n        return \"\";",
    "        int[] vowels = {'a', 'e', 'i', 'o', 'u'};\n        int[] consonants = {'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'};\n        int[] consonantIndex = new int[26];\n        for (int i = 0; i < consonants.Length; i++) {\n            consonantIndex[consonants[i] - 'a'] = i;\n        }\n        int index = 0;\n        for (int i = 0; i < word.Length; i++) {\n            if (vowels[word[i] - 'a'] != 0) {\n                index = i;\n                break;\n            }\n            else if (consonantIndex[word[i] - 'a'] != 0) {\n                index = i;\n            }\n        }\n        if (index == 0) {\n            return \"\";\n        }\n        else {\n            int left = index - 1;\n            int right = index + 1;\n            while (left >= 0 && right < word.Length && consonantIndex[word[left] - 'a'] != 0 && consonantIndex[word[right] - 'a'] != 0) {\n                left--;\n                right++;\n            }\n            return word.Substring(left + 1, right - left - 1);\n        }",
    "        // Write your code here\n        int i = 0;\n        while (i < word.Length - 1) {\n            if (word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u') {\n                i++;\n                continue;\n            }\n            if (word[i] == 'y' && word[i + 1] == 'a' || word[i] == 'y' && word[i + 1] == 'e' || word[i] == 'y' && word[i + 1] == 'i' || word[i] == 'y' && word[i + 1] == 'o' || word[i] == 'y' && word[i + 1] == 'u') {\n                i += 2;\n                continue;\n            }\n            if (word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u') {\n                i++;\n                continue;\n            }\n            if (word[i] == 'y' && word[i + 1] == 'a' || word[i] == 'y' && word[i + 1] == 'e' || word[i] == 'y' && word[i + 1] == 'i' || word[i] == 'y' && word[i + 1] == 'o' || word[i] == 'y' && word[i + 1] == 'u') {\n                i += 2;\n                continue;\n            }\n            if (word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u') {\n                i++;\n                continue;\n            }\n            if (word[i] == 'y' && word[i + 1] == 'a' || word[i] == 'y' && word[i + 1] == 'e' || word[i] == 'y' && word[i + 1] == 'i' || word[i] == 'y'",
    "        if (word == null || word.Length == 0) return \"\";\n        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0) return \"\";\n        i--;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0) return \"\";\n        return word[i];",
    "        // Write your code here\n        if (word.Length < 2) return \"\";\n        int i = word.Length - 1;\n        while (i >= 0) {\n            if (word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u')\n                return word[i];\n            i--;\n        }\n        return \"\";",
    "        // Write your code here\n        int count = 0;\n        for (int i = word.Length - 1; i >= 0; i--) {\n            if (word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u') {\n                count++;\n                if (count == 1) {\n                    return word[i];\n                }\n            }\n            else if (word[i] == 'y') {\n                count++;\n                if (count == 2) {\n                    return word[i];\n                }\n            }\n            else if (word[i] == 'r') {\n                count++;\n                if (count == 3) {\n                    return word[i];\n                }\n            }\n            else if (word[i] == 'l') {\n                count++;\n                if (count == 4) {\n                    return word[i];\n                }\n            }\n            else if (word[i] == 's') {\n                count++;\n                if (count == 5) {\n                    return word[i];\n                }\n            }\n            else if (word[i] == 'n') {\n                count++;\n                if (count == 6) {\n                    return word[i];\n                }\n            }\n            else if (word[i] == 'c') {\n                count++;\n                if (count == 7) {\n                    return word[i];\n                }\n            }\n            else if (word[i] == 'm') {\n                count++;\n                if (count == 8) {\n                    return word[i];\n                }\n            }\n            else if (word[i] == 'd') {\n                count++;\n                if (count == 9) {\n                    return word[i];\n                }\n            }\n            else if (word[i] == 't') {\n                count++;\n                if (count == 10) {\n                    return word[i];\n                }\n            }\n            else if (word[i] == 'p') {\n                count++;\n                if (count == 11) {\n                    return word[i];\n                }\n            }\n            else",
    "        if (word == null || word.Length == 0)\n            return \"\";\n        int left = 0;\n        int right = word.Length - 1;\n        while (left < right) {\n            if (word[left] == 'a' || word[left] == 'e' || word[left] == 'i' || word[left] == 'o' || word[left] == 'u') {\n                left++;\n                continue;\n            }\n            if (word[right] == 'a' || word[right] == 'e' || word[right] == 'i' || word[right] == 'o' || word[right] == 'u') {\n                right--;\n                continue;\n            }\n            if (word[left] == 'y' && word[right] == 'r') {\n                left++;\n                right--;\n                continue;\n            }\n            if (word[left] == 'y' && word[right] == 'l') {\n                left++;\n                right--;\n                continue;\n            }\n            if (word[left] == 'y' && word[right] == 'g') {\n                left++;\n                right--;\n                continue;\n            }\n            if (word[left] == 'y' && word[right] == 'c') {\n                left++;\n                right--;\n                continue;\n            }\n            if (word[left] == 'y' && word[right] == 's') {\n                left++;\n                right--;\n                continue;\n            }\n            if (word[left] == 'y' && word[right] == 'k') {\n                left++;\n                right--;\n                continue;\n            }\n            if (word[left] == 'y' && word[right] == 'w') {\n                left++;\n                right--;\n                continue;\n            }\n            if (word[left] == 'y' && word[right] == 't') {\n                left++;\n                right--;\n                continue;\n            }\n            if (word[left] == 'y' && word[right] == 'p') {\n                left++;\n                right--;\n                continue;\n            }\n            if (",
    "        // Write your code here\n        int[] vowels = {'a', 'e', 'i', 'o', 'u'};\n        int[] consonants = {'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'};\n        int[] consonantIndex = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};\n        for (int i = 0; i < word.Length; i++) {\n            if (vowels.Contains(word[i])) {\n                vowelIndex[i] = 1;\n            }\n            else if (consonants.Contains(word[i])) {\n                if (i == 0) {\n                    consonantIndex[i] = 1;\n                }\n                else {\n                    if (vowelIndex[i - 1] == 0) {\n                        consonantIndex[i] = 1;\n                    }\n                    else {\n                        if (consonantIndex[i - 1] == 1) {\n                            consonantIndex[i] = 1;\n                        }\n                    }\n                }\n            }\n        }\n        for (int i = word.Length - 1; i >= 0; i--) {\n            if (vowels.Contains(word[i])) {\n                vowelIndex[i] = 1;\n            }\n            else if (consonants.Contains(word[i])) {\n                if (i == word.Length - 1) {\n                    consonantIndex[i] = 1;\n                }\n                else {\n                    if (vowelIndex[i + 1] == 0) {\n                        consonantIndex[i] = 1;\n                    }\n                    else {\n                        if (consonantIndex[i + 1] == 1) {\n                            consonant",
    "        if (word == null || word.Length == 0)\n            return \"\";\n        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0)\n            return \"\";\n        i--;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0)\n            return \"\";\n        return word[i];",
    "        // Write your code here\n        if (word == null || word.Length == 0) return \"\";\n        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0) return \"\";\n        int j = i + 1;\n        while (j < word.Length && word[j] != 'a' && word[j] != 'e' && word[j] != 'i' && word[j] != 'o' && word[j] != 'u')\n            j++;\n        if (j == word.Length) return \"\";\n        return word[i] + word[j];",
    "        int i = word.Length - 1;\n        while (i >= 0) {\n            if (isVowel(word[i]))\n                return word[i];\n            i--;\n        }\n        return \"\";\n    }\n\n    private static bool isVowel(char c) {\n        return c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U';",
    "        // Write your code here\n        if (word.Length == 0) return \"\";\n        int start = 0;\n        int end = word.Length - 1;\n        while (start < end) {\n            if (isVowel(word[start])) {\n                start++;\n            }\n            else if (isVowel(word[end])) {\n                end--;\n            }\n            else {\n                start++;\n                end--;\n            }\n        }\n        if (isVowel(word[start])) return word[start];\n        if (isVowel(word[end])) return word[end];\n        return \"\";",
    "        // Write your code here\n        if (word.Length < 2) return \"\";\n        int left = 0;\n        int right = word.Length - 1;\n        while (left < right) {\n            if (word[left] == 'a' || word[left] == 'e' || word[left] == 'i' || word[left] == 'o' || word[left] == 'u') {\n                left++;\n                continue;\n            }\n            if (word[right] == 'a' || word[right] == 'e' || word[right] == 'i' || word[right] == 'o' || word[right] == 'u') {\n                right--;\n                continue;\n            }\n            if (word[left] == 'y' && word[right] == 'r') {\n                return \"y\";\n            }\n            if (word[left] == 'y' && word[right] == 'o') {\n                return \"y\";\n            }\n            if (word[left] == 'y' && word[right] == 'a') {\n                return \"y\";\n            }\n            if (word[left] == 'i' && word[right] == 'e') {\n                return \"i\";\n            }\n            if (word[left] == 'i' && word[right] == 'o') {\n                return \"i\";\n            }\n            if (word[left] == 'i' && word[right] == 'a') {\n                return \"i\";\n            }\n            if (word[left] == 'o' && word[right] == 'e') {\n                return \"o\";\n            }\n            if (word[left] == 'o' && word[right] == 'o') {\n                return \"o\";\n            }\n            if (word[left] == 'o' && word[right] == 'a') {\n                return \"o\";\n            }\n            if (word[left] == 'u' && word[right] == 'e') {\n                return \"u\";\n            }\n            if (word[left] == 'u' && word[right] == 'o') {\n                return \"u\";\n            }\n            if (",
    "        int i = word.Length - 1;\n        while (i >= 0) {\n            char c = word[i];\n            if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n                return word.Substring(i, 1);\n            }\n            i--;\n        }\n        return \"\";",
    "        // Write your code here\n        if (word.Length < 2) return \"\";\n        int i = word.Length - 1;\n        while (i >= 0) {\n            if (isVowel(word[i])) return word[i];\n            i--;\n        }\n        return \"\";\n    }\n\n    private static bool isVowel(char c) {\n        return c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U';",
    "        if (word == null || word.Length == 0) return \"\";\n        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i == -1) return \"\";\n        i--;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i == -1) return \"\";\n        return word[i];",
    "        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i == -1)\n            return \"\";\n        int j = i + 1;\n        while (j < word.Length && word[j] != 'a' && word[j] != 'e' && word[j] != 'i' && word[j] != 'o' && word[j] != 'u')\n            j++;\n        if (j == word.Length)\n            return \"\";\n        return word[j];",
    "        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0)\n            return \"\";\n        i--;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0)\n            return \"\";\n        return word[i];",
    "        int i = word.Length - 1;\n        while (i >= 0) {\n            if (isVowel(word[i])) {\n                return word[i];\n            }\n            i--;\n        }\n        return \"\";\n    }\n\n    private static bool isVowel(char c) {\n        return c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U';",
    "        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i == -1)\n            return \"\";\n        i--;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i == -1)\n            return \"\";\n        return word[i];",
    "        var vowels = new char[] {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'};\n        var consonants = new char[] {'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'};\n        var vowelsCount = 0;\n        var consonantsCount = 0;\n        var result = \"\";\n        for (var i = 0; i < word.Length; i++) {\n            if (vowels.Contains(word[i])) {\n                vowelsCount++;\n                if (vowelsCount > 1) {\n                    result = word[i];\n                    break;\n                }\n            }\n            else if (consonants.Contains(word[i])) {\n                consonantsCount++;\n                if (consonantsCount > 1) {\n                    result = word[i];\n                    break;\n                }\n            }\n        }\n        return result;",
    "        var vowels = new char[] { 'a', 'e', 'i', 'o', 'u' };\n        var consonants = new char[] { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        var vowels_count = 0;\n        var consonants_count = 0;\n        var result = \"\";\n        for (var i = word.Length - 1; i >= 0; i--) {\n            if (word[i] == ' ') {\n                continue;\n            }\n            if (vowels.Contains(word[i])) {\n                vowels_count++;\n                if (vowels_count > 1) {\n                    return \"\";\n                }\n                if (vowels_count == 1) {\n                    result = word[i];\n                }\n            }\n            else if (consonants.Contains(word[i])) {\n                consonants_count++;\n                if (consonants_count > 1) {\n                    return \"\";\n                }\n                if (consonants_count == 1) {\n                    result = word[i];\n                }\n            }\n        }\n        return result;",
    "        // Write your code here\n        int i = word.Length - 1;\n        while (i >= 0) {\n            if (word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u')\n                return word[i];\n            i--;\n        }\n        return \"\";",
    "        // Write your code here\n        if (word == null || word.Length == 0)\n            return \"\";\n        int i = word.Length - 1;\n        while (i >= 0) {\n            char c = word[i];\n            if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n                return word[i];\n            i--;\n        }\n        return \"\";",
    "        var vowels = new char[] { 'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U' };\n        var consonants = new char[] { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        var result = \"\";\n        for (int i = 0; i < word.Length - 1; i++) {\n            if (Array.Contains(vowels, word[i]) && Array.Contains(vowels, word[i + 1])) {\n                result = word[i + 1];\n                break;\n            }\n            else if (Array.Contains(vowels, word[i]) && !Array.Contains(vowels, word[i + 1])) {\n                result = word[i + 1];\n                break;\n            }\n            else if (!Array.Contains(vowels, word[i]) && Array.Contains(vowels, word[i + 1])) {\n                result = word[i + 1];\n                break;\n            }\n            else if (!Array.Contains(vowels, word[i]) && !Array.Contains(vowels, word[i + 1])) {\n                result = word[i + 1];\n                break;\n            }\n        }\n        return result;",
    "        if (word == null || word.Length == 0) {\n            return \"\";\n        }\n        int left = 0;\n        int right = word.Length - 1;\n        while (left < right) {\n            if (isVowel(word[left]) && isVowel(word[right])) {\n                return word[left];\n            }\n            if (isVowel(word[left])) {\n                left++;\n            }\n            else if (isVowel(word[right])) {\n                right--;\n            }\n            else {\n                left++;\n                right--;\n            }\n        }\n        return \"\";\n    }\n\n    private static bool isVowel(char c) {\n        return c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U';",
    "        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0)\n            return \"\";\n        i--;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0)\n            return \"\";\n        return word[i];",
    "        int i = word.Length - 1;\n        while (i >= 0) {\n            char c = word[i];\n            if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n                return word.Substring(i, 1);\n            }\n            i--;\n        }\n        return \"\";",
    "        // Write your code here\n        int i = word.Length - 1;\n        while (i >= 0) {\n            if (word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u') {\n                return word[i];\n            }\n            i--;\n        }\n        return \"\";",
    "        // Write your code here\n        if (word.Length < 2) return \"\";\n        int i = word.Length - 1;\n        while (i >= 0) {\n            if (word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u')\n                return word[i];\n            i--;\n        }\n        return \"\";",
    "        if (word == null || word.Length == 0) return \"\";\n        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0) return \"\";\n        i--;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0) return \"\";\n        return word[i];",
    "        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0)\n            return \"\";\n        int j = word.Length - 1;\n        while (j >= 0 && word[j] != 'a' && word[j] != 'e' && word[j] != 'i' && word[j] != 'o' && word[j] != 'u')\n            j--;\n        if (j < 0)\n            return \"\";\n        if (i > j)\n            return \"\";\n        if (word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u')\n            return word[i];\n        if (word[j] == 'a' || word[j] == 'e' || word[j] == 'i' || word[j] == 'o' || word[j] == 'u')\n            return word[j];\n        return \"\";",
    "        var vowels = new char[] { 'a', 'e', 'i', 'o', 'u' };\n        var consonants = new char[] { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        var vowels_count = 0;\n        var consonants_count = 0;\n        var result = \"\";\n        for (var i = 0; i < word.Length; i++) {\n            if (vowels.Contains(word[i])) {\n                vowels_count++;\n                if (vowels_count == 2) {\n                    result = word[i];\n                    break;\n                }\n            }\n            else if (consonants.Contains(word[i])) {\n                consonants_count++;\n                if (consonants_count == 2) {\n                    result = word[i];\n                    break;\n                }\n            }\n        }\n        return result;",
    "        // Write your code here\n        if (word.Length < 2) return \"\";\n        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0) return \"\";\n        int j = i + 1;\n        while (j < word.Length && word[j] != 'a' && word[j] != 'e' && word[j] != 'i' && word[j] != 'o' && word[j] != 'u')\n            j++;\n        if (j == word.Length) return \"\";\n        return word.Substring(i + 1, j - i - 1);",
    "        // Write your code here\n        if (word.Length < 2) return \"\";\n        int i = word.Length - 1;\n        while (i >= 0) {\n            if (word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u')\n                return word[i];\n            i--;\n        }\n        return \"\";",
    "        // Write your code here\n        if (word.Length < 2)\n            return \"\";\n        int i = word.Length - 1;\n        while (i >= 0) {\n            if (isVowel(word[i]))\n                return word[i];\n            i--;\n        }\n        return \"\";\n    }\n\n    private static bool isVowel(char c) {\n        return c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U';",
    "        if (word == null || word.Length == 0) return \"\";\n        int i = word.Length - 1;\n        while (i >= 0) {\n            char c = word[i];\n            if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n                return word.Substring(i, 1);\n            i--;\n        }\n        return \"\";",
    "        if (word == null || word.Length == 0) return \"\";\n        int i = word.Length - 1;\n        while (i >= 0) {\n            char c = word[i];\n            if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') return word.Substring(i, 1);\n            i--;\n        }\n        return \"\";",
    "        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0)\n            return \"\";\n        i--;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0)\n            return \"\";\n        return word[i];",
    "        // Write your code here\n        if (word == null || word.Length == 0)\n            return \"\";\n        int left = 0;\n        int right = word.Length - 1;\n        while (left < right) {\n            if (word[left] == 'a' || word[left] == 'e' || word[left] == 'i' || word[left] == 'o' || word[left] == 'u')\n                return word[left];\n            if (word[right] == 'a' || word[right] == 'e' || word[right] == 'i' || word[right] == 'o' || word[right] == 'u')\n                return word[right];\n            if (word[left] == 'y' && word[right] == 'r')\n                return word[left];\n            if (word[left] == 'y' && word[right] == 'l')\n                return word[right];\n            if (word[left] == 'i' && word[right] == 'n')\n                return word[left];\n            if (word[left] == 'i' && word[right] == 'e')\n                return word[right];\n            if (word[left] == 'o' && word[right] == 'g')\n                return word[left];\n            if (word[left] == 'o' && word[right] == 'u')\n                return word[right];\n            if (word[left] == 'u' && word[right] == 'e')\n                return word[left];\n            if (word[left] == 'u' && word[right] == 'i')\n                return word[right];\n            if (word[left] == 'e' && word[right] == 'a')\n                return word[left];\n            if (word[left] == 'e' && word[right] == 'o')\n                return word[right];\n            if (word[left] == 'a' && word[right] == 'e')\n                return word[left];\n            if (word[left] == 'a' && word[right] == 'i')\n                return word[right];\n            if (word[left] == 'a' && word",
    "        // Write your code here\n        if (word.Length < 2) return \"\";\n        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0) return \"\";\n        if (i == 0) return \"\";\n        if (word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u')\n            return word[i];\n        else\n            return word[i + 1];",
    "        // Write your code here\n        if (word.Length < 2) return \"\";\n        int left = 0;\n        int right = word.Length - 1;\n        while (left < right) {\n            if (word[left] != 'a' && word[left] != 'e' && word[left] != 'i' && word[left] != 'o' && word[left] != 'u' && word[left] != 'y') {\n                left++;\n                continue;\n            }\n            if (word[right] != 'a' && word[right] != 'e' && word[right] != 'i' && word[right] != 'o' && word[right] != 'u' && word[right] != 'y') {\n                right--;\n                continue;\n            }\n            if (word[left] == word[right]) {\n                left++;\n                right--;\n                continue;\n            }\n            if (word[left] == 'a' || word[left] == 'e' || word[left] == 'i' || word[left] == 'o' || word[left] == 'u' || word[left] == 'y') {\n                return word[left];\n            }\n            if (word[right] == 'a' || word[right] == 'e' || word[right] == 'i' || word[right] == 'o' || word[right] == 'u' || word[right] == 'y') {\n                return word[right];\n            }\n            left++;\n            right--;\n        }\n        return \"\";",
    "        var vowels = new char[] { 'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U' };\n        var consonants = new char[] { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        var vowels_count = 0;\n        var consonants_count = 0;\n        var result = \"\";\n        for (var i = 0; i < word.Length; i++) {\n            if (vowels.Contains(word[i])) {\n                vowels_count++;\n                if (vowels_count > 1) {\n                    result = word[i];\n                    break;\n                }\n            }\n            else if (consonants.Contains(word[i])) {\n                consonants_count++;\n                if (consonants_count > 1) {\n                    result = word[i];\n                    break;\n                }\n            }\n        }\n        return result;",
    "        var vowels = new char[] { 'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U' };\n        var consonants = new char[] { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        var vowels_count = 0;\n        var consonants_count = 0;\n        var result = \"\";\n        for (var i = 0; i < word.Length; i++) {\n            if (vowels.Contains(word[i])) {\n                vowels_count++;\n            }\n            else if (consonants.Contains(word[i])) {\n                consonants_count++;\n            }\n            else {\n                continue;\n            }\n            if (vowels_count == 2 && consonants_count == 1) {\n                result = word[i];\n                break;\n            }\n        }\n        return result;",
    "        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i == -1)\n            return \"\";\n        i++;\n        while (i < word.Length - 1 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i++;\n        return word.Substring(i, 1);",
    "        // Write your code here\n        if (word == null || word.Length == 0)\n            return \"\";\n        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0)\n            return \"\";\n        i--;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0)\n            return \"\";\n        return word[i];",
    "        if (word == null || word.Length == 0) return \"\";\n        int[] vowels = {'a', 'e', 'i', 'o', 'u'};\n        int[] consonants = {'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'};\n        int[] consonantPos = new int[26];\n        for (int i = 0; i < consonants.Length; i++) {\n            consonantPos[consonants[i] - 'a'] = i;\n        }\n        int left = 0;\n        int right = 0;\n        for (int i = 0; i < word.Length; i++) {\n            if (vowels[word[i] - 'a'] > 0) {\n                left = i;\n                break;\n            }\n        }\n        for (int i = word.Length - 1; i >= 0; i--) {\n            if (vowels[word[i] - 'a'] > 0) {\n                right = i;\n                break;\n            }\n        }\n        if (left == right) return \"\";\n        for (int i = left + 1; i < right; i++) {\n            if (consonantPos[word[i] - 'a'] > consonantPos[word[i - 1] - 'a']) {\n                return word[i];\n            }\n        }\n        return \"\";",
    "        // Write your code here\n        if (word.Length == 0) return \"\";\n        int i = word.Length - 1;\n        while (i >= 0) {\n            if (word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u') {\n                return word[i];\n            }\n            i--;\n        }\n        return \"\";",
    "        // Write your code here\n        if (word.Length == 0)\n            return \"\";\n        int index = word.Length - 1;\n        while (index >= 0) {\n            if (word[index] == 'a' || word[index] == 'e' || word[index] == 'i' || word[index] == 'o' || word[index] == 'u')\n                return word[index];\n            index--;\n        }\n        return \"\";",
    "        var vowels = new char[] { 'a', 'e', 'i', 'o', 'u' };\n        var consonants = new char[] { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        var vowelsCount = 0;\n        var consonantsCount = 0;\n        for (var i = 0; i < word.Length; i++) {\n            if (vowels.Contains(word[i])) {\n                vowelsCount++;\n            }\n            else if (consonants.Contains(word[i])) {\n                consonantsCount++;\n            }\n        }\n        if (vowelsCount == 0 || consonantsCount == 0) {\n            return \"\";\n        }\n        var rightVowelIndex = 0;\n        for (var i = word.Length - 1; i >= 0; i--) {\n            if (vowels.Contains(word[i])) {\n                rightVowelIndex = i;\n                break;\n            }\n        }\n        if (rightVowelIndex == 0) {\n            return \"\";\n        }\n        var leftVowelIndex = rightVowelIndex - 1;\n        while (leftVowelIndex >= 0 && !vowels.Contains(word[leftVowelIndex])) {\n            leftVowelIndex--;\n        }\n        if (leftVowelIndex < 0) {\n            return \"\";\n        }\n        return word.Substring(leftVowelIndex + 1, rightVowelIndex - leftVowelIndex - 1);",
    "        // Write your code here\n        int[] vowels = {'a', 'e', 'i', 'o', 'u'};\n        int[] consonants = {'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'};\n        int[] vowels_count = new int[vowels.Length];\n        int[] consonants_count = new int[consonants.Length];\n        for (int i = 0; i < word.Length; i++) {\n            if (vowels.Contains(word[i])) {\n                vowels_count[vowels.IndexOf(word[i])]++;\n            }\n            else if (consonants.Contains(word[i])) {\n                consonants_count[consonants.IndexOf(word[i])]++;\n            }\n        }\n        for (int i = 0; i < vowels.Length; i++) {\n            if (vowels_count[i] == 0) {\n                continue;\n            }\n            for (int j = 0; j < consonants.Length; j++) {\n                if (consonants_count[j] == 0) {\n                    continue;\n                }\n                if (vowels_count[i] > consonants_count[j]) {\n                    return word[j];\n                }\n            }\n        }\n        return \"\";",
    "        // Write your code here\n        int i = 0;\n        while (i < word.Length - 1) {\n            if (word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u' && word[i] != 'y') {\n                i++;\n                continue;\n            }\n            if (word[i + 1] != 'a' && word[i + 1] != 'e' && word[i + 1] != 'i' && word[i + 1] != 'o' && word[i + 1] != 'u' && word[i + 1] != 'y') {\n                return word[i];\n            }\n            i++;\n        }\n        return \"\";",
    "        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0)\n            return \"\";\n        i--;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0)\n            return \"\";\n        return word[i];",
    "        // Write your code here\n        if (word.Length < 2) return \"\";\n        int i = word.Length - 1;\n        while (i >= 0) {\n            if (word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u')\n                return word[i];\n            i--;\n        }\n        return \"\";",
    "        if (word == null || word.Length == 0) return \"\";\n        int left = 0;\n        int right = word.Length - 1;\n        while (left < right) {\n            if (IsVowel(word[left]) && IsVowel(word[right])) {\n                return word[left];\n            }\n            if (IsVowel(word[left])) {\n                right--;\n            }\n            else {\n                left++;\n            }\n        }\n        return \"\";\n    }\n\n    private static bool IsVowel(char c) {\n        return c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U';",
    "        // Write your code here\n        if (word.Length < 2) return \"\";\n        int left = 0;\n        int right = word.Length - 1;\n        while (left < right) {\n            if (word[left] == 'a' || word[left] == 'e' || word[left] == 'i' || word[left] == 'o' || word[left] == 'u') {\n                left++;\n                continue;\n            }\n            if (word[right] == 'a' || word[right] == 'e' || word[right] == 'i' || word[right] == 'o' || word[right] == 'u') {\n                right--;\n                continue;\n            }\n            if (word[left] == 'y' && word[right] == 'r') {\n                return \"y\";\n            }\n            if (word[left] == 'y' && word[right] == 'o') {\n                return \"y\";\n            }\n            if (word[left] == 'y' && word[right] == 'a') {\n                return \"y\";\n            }\n            if (word[left] == 'y' && word[right] == 'e') {\n                return \"y\";\n            }\n            if (word[left] == 'y' && word[right] == 'i') {\n                return \"y\";\n            }\n            if (word[left] == 'y' && word[right] == 'o') {\n                return \"y\";\n            }\n            if (word[left] == 'y' && word[right] == 'u') {\n                return \"y\";\n            }\n            if (word[left] == 'y' && word[right] == 'a') {\n                return \"y\";\n            }\n            if (word[left] == 'y' && word[right] == 'e') {\n                return \"y\";\n            }\n            if (word[left] == 'y' && word[right] == 'i') {\n                return \"y\";\n            }\n            if (word[left] == 'y' && word[right] == 'o') {\n                return \"y\";\n            }\n            if (",
    "        // Write your code here\n        int i = word.Length - 1;\n        while (i >= 0) {\n            if (word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u') {\n                return word[i];\n            }\n            i--;\n        }\n        return \"\";",
    "        var vowels = new char[] { 'a', 'e', 'i', 'o', 'u' };\n        var consonants = new char[] { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        var consonantIndex = 0;\n        var vowelIndex = 0;\n        var result = \"\";\n        for (var i = 0; i < word.Length; i++) {\n            if (vowels[vowelIndex] == word[i]) {\n                vowelIndex++;\n                if (vowelIndex == vowels.Length) {\n                    result = word[i];\n                    break;\n                }\n            }\n            else if (consonants[consonantIndex] == word[i]) {\n                consonantIndex++;\n                if (consonantIndex == consonants.Length) {\n                    result = \"\";\n                    break;\n                }\n            }\n        }\n        return result;",
    "        if (word == null || word.Length == 0) return \"\";\n        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i == -1) return \"\";\n        i++;\n        while (i < word.Length - 1 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i++;\n        return word.Substring(i, 1);",
    "        // Write your code here\n        if (word == null || word.Length == 0) {\n            return \"\";\n        }\n        string vowels = \"aeiouAEIOU\";\n        int i = 0;\n        while (i < word.Length - 1) {\n            if (vowels.IndexOf(word[i]) != -1 && vowels.IndexOf(word[i + 1]) != -1) {\n                return word.Substring(i, 2);\n            }\n            i++;\n        }\n        return \"\";",
    "        // Write your code here\n        int i = word.Length - 1;\n        while (i >= 0) {\n            if (word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u')\n                return word[i];\n            i--;\n        }\n        return \"\";",
    "        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0)\n            return \"\";\n        int j = i + 1;\n        while (j < word.Length && word[j] != 'a' && word[j] != 'e' && word[j] != 'i' && word[j] != 'o' && word[j] != 'u')\n            j++;\n        if (j == word.Length)\n            return \"\";\n        if (i == j)\n            return \"\";\n        return word[i] + word[j];",
    "        if (word == null || word.Length == 0) return \"\";\n        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0) return \"\";\n        i--;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0) return \"\";\n        return word[i];",
    "        int i = word.Length - 1;\n        while (i >= 0) {\n            if (isVowel(word[i]))\n                return word[i];\n            i--;\n        }\n        return \"\";\n    }\n\n    private static bool isVowel(char c) {\n        return c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U';",
    "        // Write your code here\n        int[] vowels = {'a', 'e', 'i', 'o', 'u'};\n        int[] consonants = {'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'};\n        int[] consonantIndex = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0",
    "        // Write your code here\n        if (word.Length < 2) return \"\";\n        int i = word.Length - 1;\n        while (i >= 0) {\n            if (isVowel(word[i])) return word[i];\n            i--;\n        }\n        return \"\";\n    }\n\n    private static bool isVowel(char c) {\n        return c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U';",
    "        if (word == null || word.Length == 0)\n            return \"\";\n        int i = word.Length - 1;\n        while (i >= 0) {\n            char c = word[i];\n            if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n                return word.Substring(i, 1);\n            i--;\n        }\n        return \"\";",
    "        // Write your code here\n        if (word.Length < 2)\n            return \"\";\n        int i = word.Length - 1;\n        while (i >= 0) {\n            if (isVowel(word[i]))\n                return word[i];\n            i--;\n        }\n        return \"\";\n    }\n\n    private static bool isVowel(char c) {\n        return c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U';",
    "        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0)\n            return \"\";\n        i--;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0)\n            return \"\";\n        return word[i];",
    "        // Write your code here\n        return \"\";",
    "        if (word == null || word.Length == 0) return \"\";\n        int[] vowels = {'a', 'e', 'i', 'o', 'u'};\n        int[] consonants = {'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'};\n        int[] consonantPos = new int[26];\n        for (int i = 0; i < consonants.Length; i++) {\n            consonantPos[consonants[i] - 'a'] = i;\n        }\n        int[] vowelPos = new int[5];\n        for (int i = 0; i < vowels.Length; i++) {\n            vowelPos[vowels[i] - 'a'] = i;\n        }\n        int[] consonantIndex = new int[26];\n        for (int i = 0; i < word.Length; i++) {\n            if (vowelPos[word[i] - 'a'] != -1) {\n                consonantIndex[i] = vowelPos[word[i] - 'a'];\n            }\n            else {\n                consonantIndex[i] = consonantPos[word[i] - 'a'];\n            }\n        }\n        int[] vowelIndex = new int[5];\n        for (int i = 0; i < word.Length; i++) {\n            if (vowelPos[word[i] - 'a'] != -1) {\n                vowelIndex[i] = vowelPos[word[i] - 'a'];\n            }\n        }\n        int[] consonantCount = new int[26];\n        for (int i = 0; i < word.Length; i++) {\n            if (vowelIndex[i] != -1) {\n                consonantCount[consonantIndex[i]]++;\n            }\n        }\n        int[] vowelCount = new int[5];\n        for (int i = 0; i < word.Length; i++) {\n            ",
    "        // Write your code here\n        string vowels = \"aeiouAEIOU\";\n        int i = 0;\n        while (i < word.Length - 1) {\n            if (vowels.IndexOf(word[i]) != -1 && vowels.IndexOf(word[i + 1]) != -1) {\n                return word[i + 1];\n            }\n            i++;\n        }\n        return \"\";",
    "        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i == -1)\n            return \"\";\n        i--;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i == -1)\n            return \"\";\n        return word[i];",
    "        // Write your code here\n        if (word.Length < 2)\n            return \"\";\n        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i == -1)\n            return \"\";\n        i++;\n        while (i < word.Length && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i++;\n        if (i == word.Length)\n            return \"\";\n        return word[i];",
    "        if (word == null) return \"\";\n        if (word.Length == 0) return \"\";\n        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0) return \"\";\n        if (i == 0) return \"\";\n        if (i == word.Length - 1) return \"\";\n        return word[i];",
    "        // Write your code here\n        int[] vowels = {'a', 'e', 'i', 'o', 'u'};\n        int[] consonants = {'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'};\n        int[] vowels_count = new int[vowels.Length];\n        int[] consonants_count = new int[consonants.Length];\n        for (int i = 0; i < word.Length; i++) {\n            if (vowels.Contains(word[i])) {\n                vowels_count[vowels.IndexOf(word[i])]++;\n            }\n            else if (consonants.Contains(word[i])) {\n                consonants_count[consonants.IndexOf(word[i])]++;\n            }\n        }\n        for (int i = 0; i < vowels.Length; i++) {\n            if (vowels_count[i] > consonants_count[i]) {\n                return word[i];\n            }\n        }\n        return \"\";",
    "        if (word == null || word.Length == 0) return \"\";\n        int i = word.Length - 1;\n        while (i >= 0) {\n            if (IsVowel(word[i])) return word[i];\n            i--;\n        }\n        return \"\";\n    }\n\n    private static bool IsVowel(char c) {\n        return c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U';",
    "        // Write your code here\n        if (word.Length < 2) return \"\";\n        int left = 0;\n        int right = word.Length - 1;\n        while (left < right) {\n            if (word[left] == 'a' || word[left] == 'e' || word[left] == 'i' || word[left] == 'o' || word[left] == 'u')\n                return word[left];\n            if (word[right] == 'a' || word[right] == 'e' || word[right] == 'i' || word[right] == 'o' || word[right] == 'u')\n                return word[right];\n            if (word[left] == 'y' && word[right] == 'r')\n                return word[left];\n            if (word[left] == 'y' && word[right] == 'l')\n                return word[left];\n            if (word[left] == 'y' && word[right] == 'g')\n                return word[left];\n            if (word[left] == 'y' && word[right] == 'c')\n                return word[left];\n            if (word[left] == 'y' && word[right] == 's')\n                return word[left];\n            if (word[left] == 'y' && word[right] == 'k')\n                return word[left];\n            if (word[left] == 'y' && word[right] == 't')\n                return word[left];\n            if (word[left] == 'y' && word[right] == 'p')\n                return word[left];\n            if (word[left] == 'y' && word[right] == 'b')\n                return word[left];\n            if (word[left] == 'y' && word[right] == 'd')\n                return word[left];\n            if (word[left] == 'y' && word[right] == 'f')\n                return word[left];\n            if (word[left] == 'y' && word[right] == 'v')\n                return word[left];\n            if (word[left] == 'y' && word[right] == 'm",
    "        if (word == null || word.Length == 0) return \"\";\n        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0) return \"\";\n        i++;\n        while (i < word.Length && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i++;\n        if (i == word.Length) return \"\";\n        return word[i];",
    "        // Write your code here\n        if (word == null || word.Length == 0) return \"\";\n        int i = word.Length - 1;\n        while (i >= 0) {\n            if (word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u') {\n                return word[i];\n            }\n            i--;\n        }\n        return \"\";",
    "        var vowels = new char[] { 'a', 'e', 'i', 'o', 'u' };\n        var consonants = new char[] { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        var consonantIndex = 0;\n        var vowelIndex = 0;\n        var result = \"\";\n        for (var i = 0; i < word.Length; i++) {\n            if (vowels[vowelIndex] == word[i]) {\n                vowelIndex++;\n                if (vowelIndex == vowels.Length) {\n                    result = word[i];\n                    break;\n                }\n            }\n            else {\n                if (vowelIndex > 0) {\n                    vowelIndex = 0;\n                }\n                if (consonantIndex < consonants.Length) {\n                    consonantIndex++;\n                }\n            }\n        }\n        return result;",
    "        int i = word.Length - 1;\n        while (i >= 0) {\n            char c = word[i];\n            if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n                return word.Substring(i, 1);\n            }\n            i--;\n        }\n        return \"\";",
    "        // Write your code here\n        if (word == null || word.Length == 0)\n            return \"\";\n        int i = word.Length - 1;\n        while (i >= 0) {\n            if (isVowel(word[i]))\n                return word[i];\n            i--;\n        }\n        return \"\";\n    }\n\n    private static bool isVowel(char c) {\n        return c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U';",
    "        // Write your code here\n        if (word == null || word.Length == 0)\n            return \"\";\n        int i = word.Length - 1;\n        while (i >= 0) {\n            if (word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u')\n                return word[i];\n            i--;\n        }\n        return \"\";",
    "        // Write your code here\n        if (word == null || word.Length == 0) return \"\";\n        int i = word.Length - 1;\n        while (i >= 0) {\n            char c = word[i];\n            if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n                return word.Substring(i + 1, word.Length - i - 1);\n            }\n            i--;\n        }\n        return \"\";",
    "        if (word == null) return \"\";\n        int i = word.Length - 1;\n        while (i >= 0) {\n            char c = word[i];\n            if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n                return word.Substring(i, 1);\n            }\n            i--;\n        }\n        return \"\";",
    "        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0)\n            return \"\";\n        i--;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0)\n            return \"\";\n        return word[i];",
    "        if (word == null || word.Length == 0) return \"\";\n        int i = word.Length - 1;\n        while (i >= 0 && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i--;\n        if (i < 0) return \"\";\n        i++;\n        while (i < word.Length && word[i] != 'a' && word[i] != 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u')\n            i++;\n        if (i == word.Length) return \"\";\n        return word[i];",
    "        // Write your code here\n        return \"\";"
  ],
  "stop_tokens": [
    "\n    }\n"
  ]
}
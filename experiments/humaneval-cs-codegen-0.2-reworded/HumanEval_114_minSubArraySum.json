{
  "name": "HumanEval_114_minSubArraySum",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Given a list of integers nums, find the minimum sum of any non-empty sub-list\n    // of nums.\n    // Example\n    // >>> Minsubarraysum((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)1L, (long)2L, (long)4L})))\n    // (1L)\n    // >>> Minsubarraysum((new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L})))\n    // (-6L)\n    public static long Minsubarraysum(List<long> nums) {\n",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(Minsubarraysum((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)1L, (long)2L, (long)4L}))) == (1L));\n    Debug.Assert(Minsubarraysum((new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))) == (-6L));\n    Debug.Assert(Minsubarraysum((new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L, (long)2L, (long)-10L}))) == (-14L));\n    Debug.Assert(Minsubarraysum((new List<long>(new long[]{(long)-9999999999999999L}))) == (-9999999999999999L));\n    Debug.Assert(Minsubarraysum((new List<long>(new long[]{(long)0L, (long)10L, (long)20L, (long)1000000L}))) == (0L));\n    Debug.Assert(Minsubarraysum((new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L, (long)10L, (long)-5L}))) == (-6L));\n    Debug.Assert(Minsubarraysum((new List<long>(new long[]{(long)100L, (long)-1L, (long)-2L, (long)-3L, (long)10L, (long)-5L}))) == (-6L));\n    Debug.Assert(Minsubarraysum((new List<long>(new long[]{(long)10L, (long)11L, (long)13L, (long)8L, (long)3L, (long)4L}))) == (3L));\n    Debug.Assert(Minsubarraysum((new List<long>(new long[]{(long)100L, (long)-33L, (long)32L, (long)-1L, (long)0L, (long)-2L}))) == (-33L));\n    Debug.Assert(Minsubarraysum((new List<long>(new long[]{(long)-10L}))) == (-10L));\n    Debug.Assert(Minsubarraysum((new List<long>(new long[]{(long)7L}))) == (7L));\n    Debug.Assert(Minsubarraysum((new List<long>(new long[]{(long)1L, (long)-1L}))) == (-1L));\n    }\n\n}\n",
  "completions": [
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min)\n                    min = sum;\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min)\n                    min = sum;\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (long i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (long j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (long i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (long j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < nums.Count; i++) {\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[i] + nums[j]);\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min)\n                    min = sum;\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min + nums[i], nums[i]);\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n        }\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i] + Minsubarraysum(nums.Skip(i + 1)));\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min + nums[i], nums[i]);\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n        }\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i] + nums.Count - i);\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n        }\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i] + nums.Count - i);\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min += nums[i];\n            for (int j = i + 1; j < nums.Count; j++) {\n                min += nums[j] - nums[i];\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums.get(i));\n        }\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums.get(i) + nums.Count - i);\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Max(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (long i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (long j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n        }\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i] + nums.Count - i);\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (long i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (long j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (long i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (long j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min + nums[i], nums[i]);\n        }\n        return min;",
    "        long min = 0;\n        for (long i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (long j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (long i = 0; i < nums.Count; i++) {\n            min += nums[i];\n            for (long j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] + nums[j - 1]);\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n        }\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i] + Minsubarraysum(nums.Skip(i + 1)));\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (long i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (long j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n        }\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i] + nums.Count - i);\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min + nums[i], nums[i]);\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Max(min, nums[i]);\n        }\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i] + Minsubarraysum(nums.Skip(i + 1)));\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < nums.Count; i++) {\n            for (int j = i + 1; j < nums.Count; j++) {\n                long sum = 0;\n                for (int k = i; k < j; k++) {\n                    sum += nums[k];\n                }\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Max(min, nums[i]);\n        }\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i] + Minsubarraysum(nums.Skip(i + 1)));\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min + nums[i], nums[i]);\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min + nums[i], nums[i]);\n        }\n        return min;",
    "        long min = 0;\n        for (long i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n        }\n        for (long i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i] + nums.Count - i);\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (long i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min += nums[i];\n            for (int j = i + 1; j < nums.Count; j++) {\n                min += nums[j] - nums[j - 1];\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min + nums[i], nums[i]);\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Max(min, nums[i]);\n        }\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i] + Minsubarraysum(nums.Skip(i + 1)));\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (long i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (long j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < nums.Count; i++) {\n            for (int j = i + 1; j < nums.Count; j++) {\n                long sum = nums[i] + nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n        }\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i] + nums.Count - i);\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n        }\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i] + nums.Count - i);\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n        }\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i] + nums.Count - i);\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min += nums[i];\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] + nums[j - 1]);\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min += nums[i];\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] + nums[j - 1]);\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min += nums[i];\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] + nums[j - 1]);\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (long i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (long j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min)\n                    min = sum;\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums.get(i));\n        }\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums.get(i) + min);\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min)\n                    min = sum;\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n        }\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i] + nums.Count - i);\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min += nums[i];\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] + nums[j - 1]);\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min += nums[i];\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] + nums[j - 1]);\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n        }\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i] + nums.Count - i);\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < nums.Count; i++) {\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[i] + nums[j]);\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n        }\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i] + nums.Count - i);\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min)\n                    min = sum;\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n        }\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i] + nums.Count - i);\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min += nums[i];\n            for (int j = i + 1; j < nums.Count; j++) {\n                min += nums[j] - nums[j - 1];\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min += nums[i];\n        }\n        for (int i = 0; i < nums.Count; i++) {\n            for (int j = i + 1; j < nums.Count; j++) {\n                if (nums[j] < nums[i]) {\n                    min -= nums[i];\n                    min += nums[j];\n                    i = j;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min += nums[i];\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min += nums[i];\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.min(min, nums[j] + nums[j - 1]);\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n        }\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i] + Minsubarraysum(nums.Skip(i + 1)));\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min += nums[i];\n            for (int j = i + 1; j < nums.Count; j++) {\n                min += nums[j] - nums[j - 1];\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min += nums[i];\n            for (int j = i + 1; j < nums.Count; j++) {\n                min += nums[j] - nums[j - 1];\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min + nums[i], nums[i]);\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            for (int j = i + 1; j < nums.Count; j++) {\n                long sum = nums[i] + nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min += nums[i];\n            for (int j = i + 1; j < nums.Count; j++) {\n                min += nums[j] - nums[j - 1];\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min += nums[i];\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] + nums[j - 1]);\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums.get(i));\n        }\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums.get(i) + nums.Count - i);\n        }\n        return min;",
    "        long min = 0;\n        for (long i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (long j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min)\n                    min = sum;\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min += nums[i];\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] + nums[j - 1]);\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min + nums[i], nums[i]);\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min)\n                    min = sum;\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n        }\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i] + nums.Count - i - 1);\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n        }\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i] + Minsubarraysum(nums.Skip(i + 1)));\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min)\n                    min = sum;\n            }\n        }\n        return min;",
    "        long min = Long.MAX_VALUE;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            long sum = 0;\n            for (int j = i; j < nums.Count; j++) {\n                sum += nums[j];\n                if (sum < min) {\n                    min = sum;\n                }\n            }\n        }\n        return min;",
    "        long min = Long.MaxValue;\n        for (int i = 0; i < nums.Count; i++) {\n            min = Math.Min(min, nums[i]);\n            for (int j = i + 1; j < nums.Count; j++) {\n                min = Math.Min(min, nums[j] - nums[i]);\n            }\n        }\n        return min;"
  ],
  "stop_tokens": [
    "\n    }\n"
  ]
}